; ModuleID = 'build/96b_stm32_sensor_mez/simple/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.k_mutex = type { %struct._wait_q_t, %struct.k_thread*, i32, i32 }
%struct._wait_q_t = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %struct._wait_q_t, [32 x i8], i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %struct._wait_q_t, %struct._wait_q_t*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %struct._wait_q_t, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct.k_spinlock = type { i32 }
%struct._thread_arch = type { i32, i32 }
%struct.k_condvar = type { %struct._wait_q_t }
%struct.z_thread_stack_element = type { i8 }
%struct.log_source_const_data = type { i8*, i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.k_spinlock }
%struct.arm_mpu_region = type { i32, i8*, %struct.k_spinlock }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.k_spinlock, i32*, i32, %struct._thread_arch }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.k_spinlock, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct._cpu_arch }
%struct._cpu_arch = type {}
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.k_spinlock, %struct.k_spinlock }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %struct._wait_q_t }
%struct._sflist = type { %struct.k_spinlock*, %struct.k_spinlock* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_PeriphCLKInitTypeDef = type { i32, %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLSAIInitTypeDef, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.RCC_PLLI2SInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.RCC_PLLSAIInitTypeDef = type { i32, i32, i32, i32 }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.USART_TypeDef }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [97 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [97 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134237604 to i8*), void (i8*)* inttoptr (i32 134236237 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237604 to i8*), void (i8*)* inttoptr (i32 134236217 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237604 to i8*), void (i8*)* inttoptr (i32 134236207 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134237604 to i8*), void (i8*)* inttoptr (i32 134236307 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237604 to i8*), void (i8*)* inttoptr (i32 134236297 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237604 to i8*), void (i8*)* inttoptr (i32 134236287 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237604 to i8*), void (i8*)* inttoptr (i32 134236277 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237604 to i8*), void (i8*)* inttoptr (i32 134236267 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134237604 to i8*), void (i8*)* inttoptr (i32 134236257 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134237604 to i8*), void (i8*)* inttoptr (i32 134236247 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134237604 to i8*), void (i8*)* inttoptr (i32 134236227 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [49 x i8*] [i8* bitcast (%struct.k_condvar* @condvar to i8*), i8* bitcast (%struct.k_mutex* @mutex to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_36 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_19 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_90 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_91 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_92 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_93 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_94 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_95 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_96 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_19 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_90 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_91 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_92 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_93 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_94 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_95 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_96 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_48 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_52 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_42 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_48 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_52 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*)], section "llvm.metadata"
@mutex = dso_local global %struct.k_mutex { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @mutex, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @mutex, i32 0, i32 0, i32 0) } } }, %struct.k_thread* null, i32 0, i32 14 }, section "._k_mutex.static.mutex", align 4, !dbg !25
@condvar = dso_local global %struct.k_condvar { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_condvar, %struct.k_condvar* @condvar, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_condvar, %struct.k_condvar* @condvar, i32 0, i32 0, i32 0) } } } }, section "._k_condvar.static.condvar", align 4, !dbg !114
@.str = private unnamed_addr constant [29 x i8] c"[thread %d] working (%d/%d)\0A\00", align 1
@done = internal unnamed_addr global i32 0, align 4, !dbg !260
@.str.1 = private unnamed_addr constant [46 x i8] c"[thread %d] done is now %d. Signalling cond.\0A\00", align 1
@t = internal global [20 x %struct.k_thread] zeroinitializer, align 8, !dbg !152
@tstacks = dso_local global [20 x [1088 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.0", align 64, !dbg !141
@.str.2 = private unnamed_addr constant [57 x i8] c"[thread %s] done is %d which is < %d so waiting on cond\0A\00", align 1
@__func__.main = private unnamed_addr constant [5 x i8] c"main\00", align 1
@.str.3 = private unnamed_addr constant [40 x i8] c"[thread %s] wake - cond was signalled.\0A\00", align 1
@.str.4 = private unnamed_addr constant [44 x i8] c"[thread %s] done == %d so everyone is done\0A\00", align 1
@.str.5 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !269
@.str.1.7 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.8 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.3.9 = private unnamed_addr constant [39 x i8] c"ZEPHYR_BASE/lib/os/cbprintf_packaged.c\00", align 1
@.str.4.10 = private unnamed_addr constant [33 x i8] c"\09String with too many arguments\0A\00", align 1
@.str.5.11 = private unnamed_addr constant [26 x i8] c"\09str_ptr_pos[] too small\0A\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"\09unexpected size %u\0A\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"\09too many format args\0A\00", align 1
@.str.8 = private unnamed_addr constant [27 x i8] c"in_packaged != ((void *)0)\00", align 1
@.str.9 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@.str.10 = private unnamed_addr constant [31 x i8] c"scpy_cnt < sizeof(cpy_str_pos)\00", align 1
@.str.11 = private unnamed_addr constant [32 x i8] c"keep_cnt < sizeof(keep_str_pos)\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@.str.12 = private unnamed_addr constant [24 x i8] c"packaged != ((void *)0)\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !295
@.str.16 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !305
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !356
@.str.25 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.27 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.28 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.26 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.30 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.31 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.29 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.32 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.33 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.34 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.35 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@.str.36 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.37 = private unnamed_addr constant [27 x i8] c"prio <= ((1UL << (4)) - 1)\00", align 1
@.str.2.38 = private unnamed_addr constant [47 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/irq_manage.c\00", align 1
@.str.3.39 = private unnamed_addr constant [64 x i8] c"\09invalid priority %d for %d irq! values must be less than %lu\0A\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.42 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.43 = private unnamed_addr constant [19 x i8] c"esf != ((void *)0)\00", align 1
@.str.2.44 = private unnamed_addr constant [51 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/cortex_m/fault.c\00", align 1
@.str.3.45 = private unnamed_addr constant [62 x i8] c"\09ESF could not be retrieved successfully. Shall never occur.\0A\00", align 1
@.str.4.58 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.5.50 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.6.51 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.7.52 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.8.53 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.9.54 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.10.55 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.56 = private unnamed_addr constant [36 x i8] c"\09Fault escalation without FSR info\0A\00", align 1
@.str.12.57 = private unnamed_addr constant [48 x i8] c"\09HardFault without HFSR info Shall never occur\0A\00", align 1
@.str.13 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.14 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.16.49 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.17 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.18 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.19 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.20 = private unnamed_addr constant [74 x i8] c"!(((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CFSR & (1UL << (0U + 4U)))\00", align 1
@.str.21 = private unnamed_addr constant [35 x i8] c"\09Stacking error not a stack fail\0A\0A\00", align 1
@.str.22 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.23 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.24 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.25.48 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.26 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.27 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.28 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.29 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.30 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.31 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.32.47 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.33 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.34 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.35 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.36.46 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.37 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.38 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.64 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.64, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !385
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.k_spinlock { i32 101384192 } }], align 4, !dbg !519
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !391
@.str.70 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.71 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.2.72 = private unnamed_addr constant [48 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/mpu/arm_mpu.c\00", align 1
@.str.3.73 = private unnamed_addr constant [44 x i8] c"\09Configuring %u static MPU regions failed\0A\0A\00", align 1
@.str.4.78 = private unnamed_addr constant [45 x i8] c"\09Configuring %u dynamic MPU regions failed\0A\0A\00", align 1
@.str.5.79 = private unnamed_addr constant [52 x i8] c"\09Request to configure: %u regions (supported: %u)\0A\0A\00", align 1
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !528
@.str.6.80 = private unnamed_addr constant [80 x i8] c"(((MPU_Type *) ((0xE000E000UL) + 0x0D90UL) )->TYPE & (0xFFUL << 8U)) >> 8U == 8\00", align 1
@.str.7.81 = private unnamed_addr constant [33 x i8] c"\09Invalid number of MPU regions\0A\0A\00", align 1
@.str.8.74 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.9.75 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !564
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.90, i32 0, i32 0), %struct.k_spinlock { i32 117571620 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.91, i32 0, i32 0), %struct.k_spinlock { i32 285933600 } }], align 4, !dbg !574
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !579
@.str.90 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.91 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@.str.94 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.95 = private unnamed_addr constant [5 x i8] c"line\00", align 1
@.str.2.96 = private unnamed_addr constant [59 x i8] c"ZEPHYR_BASE/drivers/interrupt_controller/intc_exti_stm32.c\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !599
@__devicehdl_dts_ord_36 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !801
@.str.4.92 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_36 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !762
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !745
@__device_dts_ord_36 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4.92, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_36, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_36, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !718
@__init___device_dts_ord_36 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_36 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !734
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !764
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !778
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !780
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !782
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !784
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !786
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !788
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !790
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !792
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !794
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !796
@__devicehdl_dts_ord_8 = dso_local constant [15 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 14, i16 32767], section ".__device_handles_pass2", align 2, !dbg !806
@.str.97 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !839
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !937
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !926
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !978
@__devicehdl_dts_ord_90 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !826
@.str.106 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1044
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1322
@__devstate_dts_ord_90 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1292
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1278
@__init___device_dts_ord_90 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_90 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1223
@__devicehdl_dts_ord_91 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !824
@.str.1.114 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1324
@__devstate_dts_ord_91 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1296
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1294
@__init___device_dts_ord_91 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_91 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1237
@__devicehdl_dts_ord_92 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !822
@.str.2.115 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1337
@__devstate_dts_ord_92 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1300
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1298
@__init___device_dts_ord_92 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_92 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1243
@__devicehdl_dts_ord_19 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !820
@.str.3.116 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1339
@__devstate_dts_ord_19 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1304
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1302
@__init___device_dts_ord_19 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_19 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1252
@__devicehdl_dts_ord_93 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !818
@.str.4.117 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1341
@__devstate_dts_ord_93 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1308
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1306
@__init___device_dts_ord_93 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_93 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1258
@__devicehdl_dts_ord_94 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !816
@.str.5.118 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1343
@__devstate_dts_ord_94 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1312
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1310
@__init___device_dts_ord_94 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_94 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1264
@__devicehdl_dts_ord_95 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !814
@.str.6.119 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1345
@__devstate_dts_ord_95 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1316
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1314
@__init___device_dts_ord_95 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_95 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1270
@__devicehdl_dts_ord_96 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !812
@.str.7.120 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1347
@__devstate_dts_ord_96 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1320
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1318
@__init___device_dts_ord_96 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_96 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1276
@.str.8.107 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.31.113 = private unnamed_addr constant [12 x i8] c"cb->handler\00", align 1
@.str.32.109 = private unnamed_addr constant [53 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio/gpio_utils.h\00", align 1
@.str.33.112 = private unnamed_addr constant [23 x i8] c"\09No callback handler!\0A\00", align 1
@.str.34.108 = private unnamed_addr constant [9 x i8] c"callback\00", align 1
@.str.35.110 = private unnamed_addr constant [15 x i8] c"\09No callback!\0A\00", align 1
@.str.36.111 = private unnamed_addr constant [18 x i8] c"callback->handler\00", align 1
@.str.124 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.124, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !1349
@__devicehdl_dts_ord_52 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !834
@.str.1.125 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_52 }, align 4, !dbg !1529
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1584
@__devstate_dts_ord_52 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1521
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1586
@__device_dts_ord_52 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.125, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_52, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_52, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1494
@__init___device_dts_ord_52 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_52 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1496
@__devicehdl_dts_ord_42 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !832
@.str.2.132 = private unnamed_addr constant [16 x i8] c"serial@40004400\00", align 1
@uart_stm32_cfg_1 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_1, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_42 }, align 4, !dbg !1592
@__devstate_dts_ord_42 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1523
@uart_stm32_data_1 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1602
@__device_dts_ord_42 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.132, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_1 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_42, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_1 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_42, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1505
@__init___device_dts_ord_42 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_42 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1507
@__devicehdl_dts_ord_45 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !830
@.str.3.133 = private unnamed_addr constant [16 x i8] c"serial@40004800\00", align 1
@uart_stm32_cfg_2 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073760256 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_2, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_45 }, align 4, !dbg !1604
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1525
@uart_stm32_data_2 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1614
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3.133, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_2 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_2 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1511
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1513
@__devicehdl_dts_ord_48 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !828
@.str.4.136 = private unnamed_addr constant [16 x i8] c"serial@40004c00\00", align 1
@uart_stm32_cfg_3 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073761280 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_3, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_48 }, align 4, !dbg !1616
@__devstate_dts_ord_48 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1527
@uart_stm32_data_3 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1626
@__device_dts_ord_48 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4.136, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_3 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_48, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_3 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_48, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1517
@__init___device_dts_ord_48 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_48 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1519
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1573
@__pinctrl_dev_config__device_dts_ord_52 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_52, i32 0, i32 0), i8 1 }, align 4, !dbg !1576
@__pinctrl_states__device_dts_ord_52 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_52, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1578
@__pinctrl_state_pins_0__device_dts_ord_52 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1581
@.str.5.127 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.6.128 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.7.129 = private unnamed_addr constant [28 x i8] c"((config->usart->BRR)) > 16\00", align 1
@.str.8.130 = private unnamed_addr constant [40 x i8] c"ZEPHYR_BASE/drivers/serial/uart_stm32.c\00", align 1
@.str.9.131 = private unnamed_addr constant [20 x i8] c"\09BaudRateReg >= 16\0A\00", align 1
@.str.10.139 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.11.141 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.12.142 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.97, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([15 x i16], [15 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !910
@pclken_1 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 131072 }], align 4, !dbg !1594
@__pinctrl_dev_config__device_dts_ord_42 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_42, i32 0, i32 0), i8 1 }, align 4, !dbg !1596
@__pinctrl_states__device_dts_ord_42 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_42, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1598
@__pinctrl_state_pins_0__device_dts_ord_42 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1703, i32 512 }, %struct._thread_arch { i32 1735, i32 0 }], align 4, !dbg !1600
@pclken_2 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 262144 }], align 4, !dbg !1606
@__pinctrl_dev_config__device_dts_ord_45 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_45, i32 0, i32 0), i8 1 }, align 4, !dbg !1608
@__pinctrl_states__device_dts_ord_45 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_45, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1610
@__pinctrl_state_pins_0__device_dts_ord_45 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1799, i32 512 }, %struct._thread_arch { i32 1831, i32 0 }], align 4, !dbg !1612
@pclken_3 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 524288 }], align 4, !dbg !1618
@__pinctrl_dev_config__device_dts_ord_48 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_48, i32 0, i32 0), i8 1 }, align 4, !dbg !1620
@__pinctrl_states__device_dts_ord_48 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_48, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1622
@__pinctrl_state_pins_0__device_dts_ord_48 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1352, i32 512 }, %struct._thread_arch { i32 1384, i32 0 }], align 4, !dbg !1624
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.13 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1633
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1744
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1746
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1742
@lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !1737
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1711
@.str.146 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.147 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.148 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.149 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.150 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.151 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_90, %struct.device* @__device_dts_ord_91, %struct.device* @__device_dts_ord_92, %struct.device* @__device_dts_ord_19, %struct.device* @__device_dts_ord_93, %struct.device* @__device_dts_ord_94, %struct.device* @__device_dts_ord_95, %struct.device* @__device_dts_ord_96, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1748
@__device_dts_ord_90 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.106, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_90, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_90, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1221
@__device_dts_ord_91 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.114, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_91, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_91, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1235
@__device_dts_ord_92 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.115, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_92, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_92, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1241
@__device_dts_ord_19 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.116, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_19, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_19, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1250
@__device_dts_ord_93 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.117, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_93, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_93, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1256
@__device_dts_ord_94 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.118, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_94, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_94, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1262
@__device_dts_ord_95 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.119, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_95, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_95, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1268
@__device_dts_ord_96 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.120, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_96, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_96, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1274
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1838
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1882
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1885
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1892
@.str.183 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.187 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.188 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.189 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.193 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.5.194 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.6.195 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.7.196 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.8.197 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.9.192 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.10.191 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.193, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.194, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.195, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.196, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.197, i32 0, i32 0)], align 4
@.str.199 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.199, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !1899
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2124
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2112
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2119
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2131
@.str.5.205 = private unnamed_addr constant [5 x i8] c"idle\00", align 1
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2136
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.6.209 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.214, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.215, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.216, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.217, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.218, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.219, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.213, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.220, i32 0, i32 0)], align 4, !dbg !2166
@.str.214 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.215 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.216 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.217 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.218 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.219 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.213 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.220 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2281
@.str.8.212 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.9.223 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.10.224 = private unnamed_addr constant [128 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((entry))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.11.225 = private unnamed_addr constant [28 x i8] c"ZEPHYR_BASE/kernel/thread.c\00", align 1
@.str.12.226 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.13.230 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.14.231 = private unnamed_addr constant [37 x i8] c"\09Threads may not be created in ISRs\0A\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@.str.15.234 = private unnamed_addr constant [45 x i8] c"thread_data <= __static_thread_data_list_end\00", align 1
@.str.16.235 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.245 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.246 = private unnamed_addr constant [40 x i8] c"_kernel.cpus[0].current->base.prio >= 0\00", align 1
@.str.2.247 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/kernel/idle.c\00", align 1
@.str.252 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.253 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.2.254 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/mutex.c\00", align 1
@.str.3.255 = private unnamed_addr constant [37 x i8] c"\09mutexes cannot be used inside ISRs\0A\00", align 1
@lock.256 = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2294
@.str.4.264 = private unnamed_addr constant [23 x i8] c"mutex->lock_count > 0U\00", align 1
@.str.5.257 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.6.258 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.7.259 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.8.260 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.9.261 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@sched_spinlock = dso_local global %struct.k_spinlock zeroinitializer, align 4, !dbg !2405
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2516
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2519
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2521
@.str.265 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.287 = private unnamed_addr constant [61 x i8] c"thread == _kernel.cpus[0].current || is_thread_dummy(thread)\00", align 1
@.str.2.272 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/sched.c\00", align 1
@.str.3.294 = private unnamed_addr constant [55 x i8] c"sizeof(sched_spinlock) == 0 || lock != &sched_spinlock\00", align 1
@.str.4.306 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 0U\00", align 1
@.str.5.275 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.6.301 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.7.271 = private unnamed_addr constant [33 x i8] c"!z_is_idle_thread_object(thread)\00", align 1
@.str.8.311 = private unnamed_addr constant [134 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((((void *)0)))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.9.312 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.10.320 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.321 = private unnamed_addr constant [31 x i8] c"\09aborting essential thread %p\0A\00", align 1
@.str.12.322 = private unnamed_addr constant [34 x i8] c"\09aborted _current back from dead\0A\00", align 1
@.str.13.323 = private unnamed_addr constant [21 x i8] c"\09cannot join in ISR\0A\00", align 1
@.str.14.266 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.15.267 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.16.268 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.17.269 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.18.270 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.19.274 = private unnamed_addr constant [39 x i8] c"_kernel.cpus[0].current != ((void *)0)\00", align 1
@.str.20.291 = private unnamed_addr constant [23 x i8] c"thread->base.pended_on\00", align 1
@.str.21.302 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/kernel/include/ksched.h\00", align 1
@.str.22.303 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 1U\00", align 1
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2121
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2129
@.str.23.315 = private unnamed_addr constant [64 x i8] c"!z_is_thread_state_set(_kernel.cpus[0].current, ((1UL << (4))))\00", align 1
@lock.328 = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2523
@.str.329 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.330 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.331 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.332 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.333 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.334 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@.str.344 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.345 = private unnamed_addr constant [32 x i8] c"!sys_dnode_is_linked(&to->node)\00", align 1
@.str.2.346 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/timeout.c\00", align 1
@.str.3.347 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@timeout_lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2548
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2578
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2583
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !1986
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2581
@.str.4.348 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.349 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.350 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.354 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.355 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.373 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3153 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !3157, !srcloc !3158
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !3159, !srcloc !3160
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !3161, !srcloc !3162
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !3163, !srcloc !3164
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3165, !srcloc !3166
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !3167, !srcloc !3168
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !3169, !srcloc !3170
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !3171, !srcloc !3172
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #23, !dbg !3173, !srcloc !3174
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !3175, !srcloc !3176
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !3177, !srcloc !3178
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !3179, !srcloc !3180
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !3181, !srcloc !3182
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !3183, !srcloc !3184
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !3185, !srcloc !3186
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !3187, !srcloc !3188
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !3189, !srcloc !3190
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -149) #23, !dbg !3191, !srcloc !3192
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3193, !srcloc !3194
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #23, !dbg !3195, !srcloc !3196
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -133) #23, !dbg !3197, !srcloc !3198
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -161) #23, !dbg !3199, !srcloc !3200
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #23, !dbg !3201, !srcloc !3202
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3203, !srcloc !3204
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !3205, !srcloc !3206
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !3207, !srcloc !3208
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !3209, !srcloc !3210
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !3211, !srcloc !3214
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !3215, !srcloc !3216
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3217, !srcloc !3218
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3219, !srcloc !3220
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3221, !srcloc !3222
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3223, !srcloc !3224
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !3225, !srcloc !3226
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !3227, !srcloc !3228
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !3229, !srcloc !3230
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !3231, !srcloc !3232
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3233, !srcloc !3234
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3235, !srcloc !3236
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3237, !srcloc !3238
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3239, !srcloc !3240
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3241, !srcloc !3242
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3243, !srcloc !3244
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !3245, !srcloc !3246
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !3247, !srcloc !3248
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !3249, !srcloc !3250
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !3251, !srcloc !3252
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !3253, !srcloc !3254
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !3255, !srcloc !3256
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3257, !srcloc !3258
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #23, !dbg !3259, !srcloc !3260
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -161) #23, !dbg !3261, !srcloc !3262
  ret void, !dbg !3263
}

; Function Attrs: noinline nounwind optsize
define dso_local void @worker_thread(i8* noundef %0, i8* nocapture readnone %1, i8* nocapture readnone %2) #1 !dbg !3266 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3270, metadata !DIExpression()), !dbg !3277
  call void @llvm.dbg.value(metadata i8* undef, metadata !3271, metadata !DIExpression()), !dbg !3277
  call void @llvm.dbg.value(metadata i8* undef, metadata !3272, metadata !DIExpression()), !dbg !3277
  %4 = ptrtoint i8* %0 to i32, !dbg !3278
  call void @llvm.dbg.value(metadata i32 %4, metadata !3273, metadata !DIExpression()), !dbg !3277
  call void @llvm.dbg.value(metadata i32 5, metadata !3274, metadata !DIExpression()), !dbg !3277
  call void @llvm.dbg.value(metadata i32 0, metadata !3275, metadata !DIExpression()), !dbg !3279
  br label %8, !dbg !3280

5:                                                ; preds = %8
  tail call fastcc void @k_mutex_lock() #24, !dbg !3281
  %6 = load i32, i32* @done, align 4, !dbg !3282
  %7 = add nsw i32 %6, 1, !dbg !3282
  store i32 %7, i32* @done, align 4, !dbg !3282
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i32 0, i32 0), i32 noundef %4, i32 noundef %7) #25, !dbg !3283
  tail call fastcc void @k_condvar_signal() #24, !dbg !3284
  tail call fastcc void @k_mutex_unlock() #24, !dbg !3285
  ret void, !dbg !3286

8:                                                ; preds = %3, %8
  %9 = phi i32 [ 0, %3 ], [ %12, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !3275, metadata !DIExpression()), !dbg !3279
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i32 0, i32 0), i32 noundef %4, i32 noundef %9, i32 noundef 5) #25, !dbg !3287
  %10 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef 500) #24, !dbg !3290
  %11 = insertvalue [1 x i64] poison, i64 %10, 0, !dbg !3291
  tail call fastcc void @k_sleep([1 x i64] %11) #24, !dbg !3291
  %12 = add nuw nsw i32 %9, 1, !dbg !3292
  call void @llvm.dbg.value(metadata i32 %12, metadata !3275, metadata !DIExpression()), !dbg !3279
  %13 = icmp eq i32 %12, 5, !dbg !3293
  br i1 %13, label %5, label %8, !dbg !3280, !llvm.loop !3294
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_lock() unnamed_addr #1 !dbg !3296 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3307, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata %struct.k_mutex* @mutex, metadata !3306, metadata !DIExpression()), !dbg !3308
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3309, !srcloc !3311
  %1 = tail call i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef nonnull @mutex, [1 x i64] [i64 -1]) #25, !dbg !3312
  ret void, !dbg !3313
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_condvar_signal() unnamed_addr #1 !dbg !3314 {
  call void @llvm.dbg.value(metadata %struct.k_condvar* @condvar, metadata !3319, metadata !DIExpression()), !dbg !3320
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3321, !srcloc !3323
  %1 = tail call i32 @z_impl_k_condvar_signal(%struct.k_condvar* noundef nonnull @condvar) #25, !dbg !3324
  ret void, !dbg !3325
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_unlock() unnamed_addr #1 !dbg !3326 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* @mutex, metadata !3330, metadata !DIExpression()), !dbg !3331
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3332, !srcloc !3334
  %1 = tail call i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef nonnull @mutex) #25, !dbg !3335
  ret void, !dbg !3336
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #3 !dbg !3337 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3342, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i64 %0, metadata !3344, metadata !DIExpression()), !dbg !3361
  call void @llvm.dbg.value(metadata i32 1000, metadata !3349, metadata !DIExpression()), !dbg !3361
  call void @llvm.dbg.value(metadata i32 10000, metadata !3350, metadata !DIExpression()), !dbg !3361
  call void @llvm.dbg.value(metadata i8 1, metadata !3351, metadata !DIExpression()), !dbg !3361
  call void @llvm.dbg.value(metadata i8 0, metadata !3352, metadata !DIExpression()), !dbg !3361
  call void @llvm.dbg.value(metadata i8 1, metadata !3353, metadata !DIExpression()), !dbg !3361
  call void @llvm.dbg.value(metadata i8 0, metadata !3354, metadata !DIExpression()), !dbg !3361
  call void @llvm.dbg.value(metadata i8 1, metadata !3355, metadata !DIExpression()), !dbg !3361
  call void @llvm.dbg.value(metadata i8 0, metadata !3356, metadata !DIExpression()), !dbg !3361
  call void @llvm.dbg.value(metadata i64 0, metadata !3357, metadata !DIExpression()), !dbg !3361
  call void @llvm.dbg.value(metadata i64 0, metadata !3357, metadata !DIExpression()), !dbg !3361
  %2 = mul i64 %0, 10, !dbg !3363
  ret i64 %2, !dbg !3369
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !3370 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3374, metadata !DIExpression()), !dbg !3375
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3376, !srcloc !3378
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #25, !dbg !3379
  ret void, !dbg !3380
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !3381 {
  store i32 0, i32* @done, align 4, !dbg !3388
  call void @llvm.dbg.value(metadata i32 0, metadata !3386, metadata !DIExpression()), !dbg !3389
  br label %6, !dbg !3390

1:                                                ; preds = %6
  %2 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef 1000) #24, !dbg !3391
  %3 = insertvalue [1 x i64] poison, i64 %2, 0, !dbg !3392
  tail call fastcc void @k_sleep([1 x i64] %3) #24, !dbg !3392
  tail call fastcc void @k_mutex_lock() #24, !dbg !3393
  %4 = load i32, i32* @done, align 4, !dbg !3394
  %5 = icmp slt i32 %4, 20, !dbg !3395
  br i1 %5, label %14, label %18, !dbg !3396

6:                                                ; preds = %0, %6
  %7 = phi i32 [ 0, %0 ], [ %12, %6 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !3386, metadata !DIExpression()), !dbg !3389
  %8 = getelementptr inbounds [20 x %struct.k_thread], [20 x %struct.k_thread]* @t, i32 0, i32 %7, !dbg !3397
  %9 = getelementptr inbounds [20 x [1088 x %struct.z_thread_stack_element]], [20 x [1088 x %struct.z_thread_stack_element]]* @tstacks, i32 0, i32 %7, i32 0, !dbg !3400
  %10 = inttoptr i32 %7 to i8*, !dbg !3401
  %11 = tail call fastcc %struct.k_thread* @k_thread_create(%struct.k_thread* noundef nonnull %8, %struct.z_thread_stack_element* noundef nonnull %9, i8* noundef %10) #24, !dbg !3402
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !3383, metadata !DIExpression()), !dbg !3403
  %12 = add nuw nsw i32 %7, 1, !dbg !3404
  call void @llvm.dbg.value(metadata i32 %12, metadata !3386, metadata !DIExpression()), !dbg !3389
  %13 = icmp eq i32 %12, 20, !dbg !3405
  br i1 %13, label %1, label %6, !dbg !3390, !llvm.loop !3406

14:                                               ; preds = %1, %14
  %15 = phi i32 [ %16, %14 ], [ %4, %1 ]
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @__func__.main, i32 0, i32 0), i32 noundef %15, i32 noundef 20) #25, !dbg !3408
  tail call fastcc void @k_condvar_wait() #24, !dbg !3410
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @__func__.main, i32 0, i32 0)) #25, !dbg !3411
  %16 = load i32, i32* @done, align 4, !dbg !3394
  %17 = icmp slt i32 %16, 20, !dbg !3395
  br i1 %17, label %14, label %18, !dbg !3396, !llvm.loop !3412

18:                                               ; preds = %14, %1
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @__func__.main, i32 0, i32 0), i32 noundef 20) #25, !dbg !3414
  tail call fastcc void @k_mutex_unlock() #24, !dbg !3415
  ret void, !dbg !3416
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.k_thread* @k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %2) unnamed_addr #1 !dbg !3417 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3435, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3426, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !3427, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i32 1024, metadata !3428, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* @worker_thread, metadata !3429, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i8* %2, metadata !3430, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i8* null, metadata !3431, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i8* null, metadata !3432, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i32 10, metadata !3433, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i32 0, metadata !3434, metadata !DIExpression()), !dbg !3436
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3437, !srcloc !3439
  %4 = tail call %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @worker_thread, i8* noundef %2, i8* noundef null, i8* noundef null, i32 noundef 10, i32 noundef 0, [1 x i64] zeroinitializer) #25, !dbg !3440
  ret %struct.k_thread* %4, !dbg !3441
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_condvar_wait() unnamed_addr #1 !dbg !3442 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3448, metadata !DIExpression()), !dbg !3449
  call void @llvm.dbg.value(metadata %struct.k_condvar* @condvar, metadata !3446, metadata !DIExpression()), !dbg !3449
  call void @llvm.dbg.value(metadata %struct.k_mutex* @mutex, metadata !3447, metadata !DIExpression()), !dbg !3449
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3450, !srcloc !3452
  %1 = tail call i32 @z_impl_k_condvar_wait(%struct.k_condvar* noundef nonnull @condvar, %struct.k_mutex* noundef nonnull @mutex, [1 x i64] [i64 -1]) #25, !dbg !3453
  ret void, !dbg !3454
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !3455 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !3470, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i8* %0, metadata !3466, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i32 %1, metadata !3467, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i32 %2, metadata !3468, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i8* %3, metadata !3469, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i8* %0, metadata !3471, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i8* %0, metadata !3472, metadata !DIExpression()), !dbg !3533
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !3534
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #23, !dbg !3534
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !3475, metadata !DIExpression()), !dbg !3535
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !3536
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #23, !dbg !3536
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !3477, metadata !DIExpression()), !dbg !3537
  call void @llvm.dbg.value(metadata i32 0, metadata !3478, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i32 0, metadata !3479, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i32 0, metadata !3480, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i32 -1, metadata !3481, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i8 0, metadata !3484, metadata !DIExpression()), !dbg !3533
  %12 = and i32 %2, 4, !dbg !3538
  %13 = icmp eq i32 %12, 0, !dbg !3539
  call void @llvm.dbg.value(metadata i1 %13, metadata !3485, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3533
  %14 = lshr i32 %2, 3, !dbg !3540
  %15 = and i32 %14, 7, !dbg !3540
  %16 = add nuw nsw i32 %15, 1, !dbg !3541
  call void @llvm.dbg.value(metadata i32 %16, metadata !3486, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i8 0, metadata !3487, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i8* %0, metadata !3488, metadata !DIExpression()), !dbg !3533
  %17 = ptrtoint i8* %0 to i32, !dbg !3542
  %18 = and i32 %17, 3, !dbg !3544
  %19 = icmp eq i32 %18, 0, !dbg !3544
  br i1 %19, label %20, label %320, !dbg !3545

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3546
  call void @llvm.dbg.value(metadata i8* %21, metadata !3472, metadata !DIExpression()), !dbg !3533
  %22 = icmp eq i8* %0, null, !dbg !3547
  %23 = and i32 %1, 7, !dbg !3549
  %24 = sub nuw nsw i32 8, %23, !dbg !3549
  %25 = select i1 %22, i32 %23, i32 0, !dbg !3549
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !3549
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !3549
  call void @llvm.dbg.value(metadata i32 %27, metadata !3467, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i8* %26, metadata !3472, metadata !DIExpression()), !dbg !3533
  br i1 %22, label %33, label %28, !dbg !3550

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !3552
  %30 = sub i32 4, %17, !dbg !3552
  %31 = add i32 %30, %29, !dbg !3553
  %32 = icmp ugt i32 %31, %27, !dbg !3554
  br i1 %32, label %320, label %33, !dbg !3555

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !3556
  call void @llvm.dbg.value(metadata i8* %34, metadata !3469, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i8* %3, metadata !3483, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i32 4, metadata !3474, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i32 4, metadata !3473, metadata !DIExpression()), !dbg !3533
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !3557

38:                                               ; preds = %63, %219
  %39 = phi i8 [ %224, %219 ], [ %64, %63 ]
  %40 = phi i8* [ %223, %219 ], [ %65, %63 ]
  %41 = phi i8* [ %221, %219 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %219 ], [ %67, %63 ]
  %43 = phi i8* [ %222, %219 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %219 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %219 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %219 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !3470, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i8* %42, metadata !3469, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i8* %43, metadata !3472, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i32 %44, metadata !3473, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i32 %45, metadata !3474, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i32 %72, metadata !3481, metadata !DIExpression()), !dbg !3533
  br i1 %46, label %73, label %47, !dbg !3558

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !3559
  %49 = zext i1 %48 to i32, !dbg !3563
  %50 = add nsw i32 %72, %49, !dbg !3563
  %51 = select i1 %48, i32 4, i32 %45, !dbg !3563
  %52 = select i1 %48, i32 4, i32 %44, !dbg !3563
  call void @llvm.dbg.value(metadata i32 %52, metadata !3473, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i32 %51, metadata !3474, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i8 poison, metadata !3484, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i32 %50, metadata !3481, metadata !DIExpression()), !dbg !3533
  br label %53, !dbg !3564

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !3470, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i8* %40, metadata !3469, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i8* %58, metadata !3472, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i32 %57, metadata !3473, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i32 %56, metadata !3474, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i8 poison, metadata !3484, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i32 %54, metadata !3481, metadata !DIExpression()), !dbg !3533
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3565
  call void @llvm.dbg.value(metadata i8* %60, metadata !3469, metadata !DIExpression()), !dbg !3533
  %61 = load i8, i8* %60, align 1, !dbg !3567
  %62 = icmp eq i8 %61, 0, !dbg !3568
  br i1 %62, label %226, label %63, !dbg !3569, !llvm.loop !3570

63:                                               ; preds = %192, %53
  %64 = phi i8 [ %61, %53 ], [ %199, %192 ]
  %65 = phi i8* [ %60, %53 ], [ %198, %192 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %192 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %192 ]
  %68 = phi i8* [ %58, %53 ], [ %197, %192 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %192 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %192 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %192 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %192 ]
  br label %38, !dbg !3558

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !3573

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3484, metadata !DIExpression()), !dbg !3533
  %75 = add nsw i32 %72, -1, !dbg !3574
  call void @llvm.dbg.value(metadata i32 %75, metadata !3481, metadata !DIExpression()), !dbg !3533
  br label %53, !dbg !3575

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !3576

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3474, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i32 4, metadata !3473, metadata !DIExpression()), !dbg !3533
  br label %53, !dbg !3577

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3474, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i32 4, metadata !3473, metadata !DIExpression()), !dbg !3533
  br label %53, !dbg !3578

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !3579
  %81 = icmp eq i8 %80, 108, !dbg !3581
  br i1 %81, label %82, label %109, !dbg !3582

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !3583
  %84 = load i8, i8* %83, align 1, !dbg !3583
  %85 = icmp eq i8 %84, 108, !dbg !3586
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !3587
  %89 = add i32 %88, 7, !dbg !3587
  %90 = and i32 %89, -8, !dbg !3587
  %91 = inttoptr i32 %90 to i8*, !dbg !3587
  %92 = inttoptr i32 %90 to double*, !dbg !3587
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !3587
  %94 = load double, double* %92, align 8, !dbg !3587
  call void @llvm.dbg.value(metadata i8* %93, metadata !3470, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i32 8, metadata !3473, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i32 8, metadata !3474, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata double %94, metadata !3501, metadata !DIExpression()), !dbg !3589
  %95 = ptrtoint i8* %43 to i32, !dbg !3590
  %96 = add i32 %95, 7, !dbg !3590
  %97 = and i32 %96, -8, !dbg !3590
  %98 = inttoptr i32 %97 to i8*, !dbg !3591
  call void @llvm.dbg.value(metadata i8* %98, metadata !3472, metadata !DIExpression()), !dbg !3533
  br i1 %22, label %104, label %99, !dbg !3592

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !3593
  %101 = icmp ugt i32 %100, %196, !dbg !3597
  br i1 %101, label %320, label %102, !dbg !3598

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !3599
  store double %94, double* %103, align 8, !dbg !3599
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !3602
  call void @llvm.dbg.value(metadata i8* %105, metadata !3472, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i8 poison, metadata !3484, metadata !DIExpression()), !dbg !3533
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3484, metadata !DIExpression()), !dbg !3533
  br label %53, !dbg !3603

107:                                              ; preds = %73, %73
  br label %109, !dbg !3604

108:                                              ; preds = %73
  br label %109, !dbg !3604

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !3533
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !3533
  call void @llvm.dbg.value(metadata i32 %113, metadata !3473, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i32 %112, metadata !3474, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i8 poison, metadata !3487, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i8 poison, metadata !3484, metadata !DIExpression()), !dbg !3533
  %114 = ptrtoint i8* %43 to i32, !dbg !3604
  %115 = add i32 %114, -1, !dbg !3604
  %116 = add i32 %115, %112, !dbg !3604
  %117 = sub i32 0, %112, !dbg !3604
  %118 = and i32 %116, %117, !dbg !3604
  %119 = inttoptr i32 %118 to i8*, !dbg !3605
  call void @llvm.dbg.value(metadata i8* %119, metadata !3472, metadata !DIExpression()), !dbg !3533
  br i1 %22, label %124, label %120, !dbg !3606

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !3608
  %122 = add i32 %121, %118, !dbg !3609
  %123 = icmp ugt i32 %122, %196, !dbg !3610
  br i1 %123, label %320, label %124, !dbg !3611

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %201, !dbg !3612

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !3605
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3613
  call void @llvm.dbg.value(metadata i8* %127, metadata !3470, metadata !DIExpression()), !dbg !3533
  %128 = bitcast i8* %41 to i8**, !dbg !3613
  %129 = load i8*, i8** %128, align 4, !dbg !3613
  call void @llvm.dbg.value(metadata i8* %129, metadata !3483, metadata !DIExpression()), !dbg !3533
  br label %130, !dbg !3614

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !3533
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !3615
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !3533
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %194, %125 ], !dbg !3616
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !3533
  %137 = phi i32 [ 0, %33 ], [ %195, %125 ], !dbg !3533
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !3533
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !3533
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !3533
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !3533
  %142 = phi i32 [ %27, %33 ], [ %196, %125 ], !dbg !3617
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !3470, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i32 %142, metadata !3467, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i8* %141, metadata !3469, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i8* %140, metadata !3472, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i32 %139, metadata !3473, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i32 %138, metadata !3474, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i32 %137, metadata !3478, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i32 %136, metadata !3486, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i32 %135, metadata !3479, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i8 poison, metadata !3484, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i8* %133, metadata !3483, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i32 %132, metadata !3481, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i32 %131, metadata !3480, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.label(metadata !3532), !dbg !3619
  br i1 %22, label %146, label %144, !dbg !3620

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !3621
  store i8* %133, i8** %145, align 4, !dbg !3624
  br label %146, !dbg !3625

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !3626
  call void @llvm.dbg.value(metadata i32 %147, metadata !3486, metadata !DIExpression()), !dbg !3533
  %148 = icmp sgt i32 %136, 0, !dbg !3627
  br i1 %148, label %152, label %149, !dbg !3628

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #24, !dbg !3629
  %151 = zext i1 %150 to i32, !dbg !3629
  br label %152, !dbg !3628

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !3628
  %154 = icmp eq i32 %153, 0, !dbg !3628
  call void @llvm.dbg.value(metadata i1 %154, metadata !3510, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3630
  call void @llvm.dbg.value(metadata i1 %36, metadata !3513, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3630
  %155 = or i1 %36, %154, !dbg !3631
  br i1 %155, label %156, label %192, !dbg !3631

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !3632
  %158 = sub i32 %157, %17, !dbg !3632
  %159 = lshr i32 %158, 2, !dbg !3633
  call void @llvm.dbg.value(metadata i32 %159, metadata !3514, metadata !DIExpression()), !dbg !3634
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !3635
  br i1 %161, label %162, label %163, !dbg !3635

162:                                              ; preds = %156
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.8, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 635) #25, !dbg !3637
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4.10, i32 0, i32 0)) #25, !dbg !3637
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 635) #25, !dbg !3637
  unreachable, !dbg !3637

163:                                              ; preds = %156
  %164 = icmp ugt i32 %137, 15, !dbg !3642
  br i1 %164, label %165, label %166, !dbg !3644

165:                                              ; preds = %163
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.8, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 640) #25, !dbg !3645
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5.11, i32 0, i32 0)) #25, !dbg !3645
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 640) #25, !dbg !3645
  unreachable, !dbg !3645

166:                                              ; preds = %163
  br i1 %22, label %177, label %167, !dbg !3650

167:                                              ; preds = %166
  %168 = trunc i32 %159 to i8, !dbg !3651
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !3654
  store i8 %168, i8* %169, align 1, !dbg !3655
  %170 = trunc i32 %132 to i8, !dbg !3656
  %171 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !3657
  store i8 %170, i8* %171, align 1, !dbg !3658
  br i1 %154, label %175, label %172, !dbg !3659

172:                                              ; preds = %167
  %173 = or i8 %168, -128, !dbg !3660
  store i8 %173, i8* %169, align 1, !dbg !3660
  %174 = add i32 %131, 1, !dbg !3663
  call void @llvm.dbg.value(metadata i32 %174, metadata !3480, metadata !DIExpression()), !dbg !3533
  br label %187, !dbg !3664

175:                                              ; preds = %167
  %176 = add i32 %135, 1, !dbg !3665
  call void @llvm.dbg.value(metadata i32 %176, metadata !3479, metadata !DIExpression()), !dbg !3533
  br label %187

177:                                              ; preds = %166
  br i1 %154, label %180, label %178, !dbg !3667

178:                                              ; preds = %177
  %179 = add i32 %142, 1, !dbg !3668
  call void @llvm.dbg.value(metadata i32 %179, metadata !3467, metadata !DIExpression()), !dbg !3533
  br label %187, !dbg !3671

180:                                              ; preds = %177
  br i1 %13, label %183, label %181, !dbg !3672

181:                                              ; preds = %180
  %182 = add i32 %142, 2, !dbg !3673
  call void @llvm.dbg.value(metadata i32 %182, metadata !3467, metadata !DIExpression()), !dbg !3533
  br label %187, !dbg !3676

183:                                              ; preds = %180
  %184 = tail call i32 @strlen(i8* noundef %133) #25, !dbg !3677
  %185 = add i32 %142, 2, !dbg !3679
  %186 = add i32 %185, %184, !dbg !3680
  call void @llvm.dbg.value(metadata i32 %186, metadata !3467, metadata !DIExpression()), !dbg !3533
  br label %187

187:                                              ; preds = %178, %183, %181, %172, %175
  %188 = phi i32 [ %174, %172 ], [ %131, %175 ], [ %131, %178 ], [ %131, %181 ], [ %131, %183 ], !dbg !3533
  %189 = phi i32 [ %135, %172 ], [ %176, %175 ], [ %135, %178 ], [ %135, %181 ], [ %135, %183 ], !dbg !3533
  %190 = phi i32 [ %142, %172 ], [ %142, %175 ], [ %179, %178 ], [ %182, %181 ], [ %186, %183 ], !dbg !3533
  call void @llvm.dbg.value(metadata i32 %190, metadata !3467, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i32 %189, metadata !3479, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i32 %188, metadata !3480, metadata !DIExpression()), !dbg !3533
  %191 = add nuw nsw i32 %137, 1, !dbg !3681
  call void @llvm.dbg.value(metadata i32 %191, metadata !3478, metadata !DIExpression()), !dbg !3533
  br label %192

192:                                              ; preds = %152, %187
  %193 = phi i32 [ %188, %187 ], [ %131, %152 ], !dbg !3533
  %194 = phi i32 [ %189, %187 ], [ %135, %152 ], !dbg !3616
  %195 = phi i32 [ %191, %187 ], [ %137, %152 ], !dbg !3533
  %196 = phi i32 [ %190, %187 ], [ %142, %152 ], !dbg !3617
  call void @llvm.dbg.value(metadata i32 %196, metadata !3467, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i32 %195, metadata !3478, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i32 %194, metadata !3479, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i32 %193, metadata !3480, metadata !DIExpression()), !dbg !3533
  %197 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !3682
  call void @llvm.dbg.value(metadata i8* %197, metadata !3472, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i8* %143, metadata !3470, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i8* %141, metadata !3469, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i32 %139, metadata !3473, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i32 %138, metadata !3474, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i8 poison, metadata !3487, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i8 poison, metadata !3484, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i32 %132, metadata !3481, metadata !DIExpression()), !dbg !3533
  %198 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !3565
  call void @llvm.dbg.value(metadata i8* %198, metadata !3469, metadata !DIExpression()), !dbg !3533
  %199 = load i8, i8* %198, align 1, !dbg !3567
  %200 = icmp eq i8 %199, 0, !dbg !3568
  br i1 %200, label %226, label %63, !dbg !3569

201:                                              ; preds = %124
  switch i32 %113, label %218 [
    i32 4, label %202
    i32 8, label %208
  ], !dbg !3683

202:                                              ; preds = %201
  %203 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3684
  call void @llvm.dbg.value(metadata i8* %203, metadata !3470, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i32 undef, metadata !3517, metadata !DIExpression()), !dbg !3685
  br i1 %22, label %219, label %204, !dbg !3686

204:                                              ; preds = %202
  %205 = bitcast i8* %41 to i32*, !dbg !3684
  %206 = load i32, i32* %205, align 4, !dbg !3684
  call void @llvm.dbg.value(metadata i32 %206, metadata !3517, metadata !DIExpression()), !dbg !3685
  %207 = inttoptr i32 %118 to i32*, !dbg !3687
  store i32 %206, i32* %207, align 4, !dbg !3690
  br label %219, !dbg !3691

208:                                              ; preds = %201
  %209 = ptrtoint i8* %41 to i32, !dbg !3692
  %210 = add i32 %209, 7, !dbg !3692
  %211 = and i32 %210, -8, !dbg !3692
  %212 = inttoptr i32 %211 to i8*, !dbg !3692
  %213 = getelementptr inbounds i8, i8* %212, i32 8, !dbg !3692
  call void @llvm.dbg.value(metadata i8* %213, metadata !3470, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i64 undef, metadata !3523, metadata !DIExpression()), !dbg !3693
  br i1 %22, label %219, label %214, !dbg !3694

214:                                              ; preds = %208
  %215 = inttoptr i32 %211 to i64*, !dbg !3692
  %216 = load i64, i64* %215, align 8, !dbg !3692
  call void @llvm.dbg.value(metadata i64 %216, metadata !3523, metadata !DIExpression()), !dbg !3693
  %217 = inttoptr i32 %118 to i64*, !dbg !3695
  store i64 %216, i64* %217, align 8, !dbg !3700
  br label %219, !dbg !3701

218:                                              ; preds = %201
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.8, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 709) #25, !dbg !3702
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i32 0, i32 0), i32 noundef %113) #25, !dbg !3702
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 709) #25, !dbg !3702
  unreachable, !dbg !3702

219:                                              ; preds = %208, %214, %202, %204
  %220 = phi i32 [ 4, %204 ], [ 4, %202 ], [ 8, %214 ], [ 8, %208 ]
  %221 = phi i8* [ %203, %204 ], [ %203, %202 ], [ %213, %214 ], [ %213, %208 ], !dbg !3707
  %222 = getelementptr inbounds i8, i8* %119, i32 %220, !dbg !3707
  call void @llvm.dbg.value(metadata i8* %221, metadata !3470, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i8* %40, metadata !3469, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i8* %222, metadata !3472, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i32 %113, metadata !3473, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i32 %112, metadata !3474, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i8 poison, metadata !3487, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i8 poison, metadata !3484, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i32 %72, metadata !3481, metadata !DIExpression()), !dbg !3533
  %223 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3565
  call void @llvm.dbg.value(metadata i8* %223, metadata !3469, metadata !DIExpression()), !dbg !3533
  %224 = load i8, i8* %223, align 1, !dbg !3567
  %225 = icmp eq i8 %224, 0, !dbg !3568
  br i1 %225, label %226, label %38, !dbg !3569

226:                                              ; preds = %192, %219, %53
  %227 = phi i8* [ %222, %219 ], [ %58, %53 ], [ %197, %192 ], !dbg !3708
  %228 = ptrtoint i8* %227 to i32, !dbg !3709
  %229 = sub i32 %228, %17, !dbg !3709
  %230 = lshr i32 %229, 2, !dbg !3711
  %231 = icmp ugt i32 %229, 1023, !dbg !3712
  br i1 %231, label %232, label %233, !dbg !3713

232:                                              ; preds = %226
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.8, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 721) #25, !dbg !3714
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i32 0, i32 0)) #25, !dbg !3714
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 721) #25, !dbg !3714
  unreachable, !dbg !3714

233:                                              ; preds = %226
  br i1 %22, label %234, label %237, !dbg !3719

234:                                              ; preds = %233
  %235 = add i32 %196, -8, !dbg !3720
  %236 = add i32 %235, %229, !dbg !3723
  br label %320, !dbg !3724

237:                                              ; preds = %233
  %238 = trunc i32 %230 to i8, !dbg !3725
  store i8 %238, i8* %0, align 1, !dbg !3726
  %239 = trunc i32 %194 to i8, !dbg !3727
  %240 = select i1 %13, i8 %239, i8 0
  %241 = select i1 %13, i8 0, i8 %239
  %242 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !3729
  store i8 %240, i8* %242, align 1, !dbg !3731
  %243 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3732
  store i8 %241, i8* %243, align 1, !dbg !3733
  %244 = trunc i32 %193 to i8, !dbg !3734
  %245 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3735
  store i8 %244, i8* %245, align 1, !dbg !3736
  %246 = icmp eq i32 %193, 0, !dbg !3737
  %247 = xor i1 %246, true, !dbg !3738
  %248 = icmp ne i32 %195, 0
  %249 = select i1 %247, i1 %248, i1 false, !dbg !3738
  call void @llvm.dbg.value(metadata i8* %227, metadata !3472, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i32 0, metadata !3482, metadata !DIExpression()), !dbg !3533
  br i1 %249, label %250, label %269, !dbg !3738

250:                                              ; preds = %237
  %251 = sub i32 1, %17
  br label %252, !dbg !3739

252:                                              ; preds = %250, %265
  %253 = phi i8* [ %227, %250 ], [ %266, %265 ]
  %254 = phi i32 [ 0, %250 ], [ %267, %265 ]
  call void @llvm.dbg.value(metadata i8* %253, metadata !3472, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i32 %254, metadata !3482, metadata !DIExpression()), !dbg !3533
  %255 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %254, !dbg !3740
  %256 = load i8, i8* %255, align 1, !dbg !3740
  %257 = icmp sgt i8 %256, -1, !dbg !3742
  br i1 %257, label %265, label %258, !dbg !3743

258:                                              ; preds = %252
  call void @llvm.dbg.value(metadata i8 %256, metadata !3526, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3744
  %259 = ptrtoint i8* %253 to i32, !dbg !3745
  %260 = add i32 %251, %259, !dbg !3747
  %261 = icmp ugt i32 %260, %196, !dbg !3748
  br i1 %261, label %320, label %262, !dbg !3749

262:                                              ; preds = %258
  %263 = and i8 %256, 127, !dbg !3750
  call void @llvm.dbg.value(metadata i8 %263, metadata !3526, metadata !DIExpression()), !dbg !3744
  %264 = getelementptr inbounds i8, i8* %253, i32 1, !dbg !3751
  call void @llvm.dbg.value(metadata i8* %264, metadata !3472, metadata !DIExpression()), !dbg !3533
  store i8 %263, i8* %253, align 1, !dbg !3752
  br label %265

265:                                              ; preds = %262, %252
  %266 = phi i8* [ %264, %262 ], [ %253, %252 ], !dbg !3682
  call void @llvm.dbg.value(metadata i8* %266, metadata !3472, metadata !DIExpression()), !dbg !3533
  %267 = add nuw i32 %254, 1, !dbg !3753
  call void @llvm.dbg.value(metadata i32 %267, metadata !3482, metadata !DIExpression()), !dbg !3533
  %268 = icmp eq i32 %267, %195, !dbg !3754
  br i1 %268, label %269, label %252, !dbg !3739, !llvm.loop !3755

269:                                              ; preds = %265, %237
  %270 = phi i8* [ %227, %237 ], [ %266, %265 ], !dbg !3682
  call void @llvm.dbg.value(metadata i8* %270, metadata !3472, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i32 0, metadata !3482, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i8* %133, metadata !3483, metadata !DIExpression()), !dbg !3533
  %271 = icmp eq i32 %195, 0, !dbg !3757
  br i1 %271, label %316, label %272, !dbg !3760

272:                                              ; preds = %269
  %273 = sub i32 1, %17
  br label %274, !dbg !3760

274:                                              ; preds = %272, %311
  %275 = phi i8* [ %270, %272 ], [ %313, %311 ]
  %276 = phi i8* [ %133, %272 ], [ %312, %311 ]
  %277 = phi i32 [ 0, %272 ], [ %314, %311 ]
  call void @llvm.dbg.value(metadata i8* %275, metadata !3472, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i8* %276, metadata !3483, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i32 %277, metadata !3482, metadata !DIExpression()), !dbg !3533
  br i1 %246, label %282, label %278, !dbg !3761

278:                                              ; preds = %274
  %279 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3764
  %280 = load i8, i8* %279, align 1, !dbg !3764
  %281 = icmp sgt i8 %280, -1, !dbg !3765
  br i1 %281, label %282, label %311, !dbg !3766

282:                                              ; preds = %278, %274
  br i1 %13, label %287, label %283, !dbg !3767

283:                                              ; preds = %282
  call void @llvm.dbg.value(metadata i32 0, metadata !3473, metadata !DIExpression()), !dbg !3533
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %277, !dbg !3768
  %285 = load i8, i8* %284, align 1, !dbg !3768
  %286 = getelementptr inbounds i8, i8* %275, i32 1, !dbg !3771
  call void @llvm.dbg.value(metadata i8* %286, metadata !3472, metadata !DIExpression()), !dbg !3533
  store i8 %285, i8* %275, align 1, !dbg !3772
  br label %297, !dbg !3773

287:                                              ; preds = %282
  %288 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3774
  %289 = load i8, i8* %288, align 1, !dbg !3774
  %290 = zext i8 %289 to i32, !dbg !3774
  %291 = shl nuw nsw i32 %290, 2, !dbg !3776
  %292 = getelementptr inbounds i8, i8* %0, i32 %291, !dbg !3777
  %293 = bitcast i8* %292 to i8**, !dbg !3778
  %294 = load i8*, i8** %293, align 4, !dbg !3778
  call void @llvm.dbg.value(metadata i8* %294, metadata !3483, metadata !DIExpression()), !dbg !3533
  store i8* null, i8** %293, align 4, !dbg !3779
  %295 = tail call i32 @strlen(i8* noundef %294) #25, !dbg !3780
  %296 = add i32 %295, 1, !dbg !3781
  call void @llvm.dbg.value(metadata i32 %296, metadata !3473, metadata !DIExpression()), !dbg !3533
  br label %297

297:                                              ; preds = %287, %283
  %298 = phi i8* [ %276, %283 ], [ %294, %287 ], !dbg !3533
  %299 = phi i32 [ 0, %283 ], [ %296, %287 ], !dbg !3782
  %300 = phi i8* [ %286, %283 ], [ %275, %287 ], !dbg !3533
  call void @llvm.dbg.value(metadata i8* %300, metadata !3472, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i32 %299, metadata !3473, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i8* %298, metadata !3483, metadata !DIExpression()), !dbg !3533
  %301 = ptrtoint i8* %300 to i32, !dbg !3783
  %302 = add i32 %273, %299, !dbg !3785
  %303 = add i32 %302, %301, !dbg !3786
  %304 = icmp ugt i32 %303, %196, !dbg !3787
  br i1 %304, label %320, label %305, !dbg !3788

305:                                              ; preds = %297
  %306 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3789
  %307 = load i8, i8* %306, align 1, !dbg !3789
  %308 = getelementptr inbounds i8, i8* %300, i32 1, !dbg !3790
  call void @llvm.dbg.value(metadata i8* %308, metadata !3472, metadata !DIExpression()), !dbg !3533
  store i8 %307, i8* %300, align 1, !dbg !3791
  %309 = tail call i8* @memcpy(i8* noundef nonnull %308, i8* noundef %298, i32 noundef %299) #25, !dbg !3792
  %310 = getelementptr inbounds i8, i8* %308, i32 %299, !dbg !3793
  call void @llvm.dbg.value(metadata i8* %310, metadata !3472, metadata !DIExpression()), !dbg !3533
  br label %311, !dbg !3794

311:                                              ; preds = %278, %305
  %312 = phi i8* [ %276, %278 ], [ %298, %305 ], !dbg !3795
  %313 = phi i8* [ %275, %278 ], [ %310, %305 ], !dbg !3533
  call void @llvm.dbg.value(metadata i8* %313, metadata !3472, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i8* %312, metadata !3483, metadata !DIExpression()), !dbg !3533
  %314 = add nuw i32 %277, 1, !dbg !3796
  call void @llvm.dbg.value(metadata i32 %314, metadata !3482, metadata !DIExpression()), !dbg !3533
  %315 = icmp eq i32 %314, %195, !dbg !3757
  br i1 %315, label %316, label %274, !dbg !3760, !llvm.loop !3797

316:                                              ; preds = %311, %269
  %317 = phi i8* [ %270, %269 ], [ %313, %311 ], !dbg !3682
  %318 = ptrtoint i8* %317 to i32, !dbg !3799
  %319 = sub i32 %318, %17, !dbg !3799
  br label %320, !dbg !3800

320:                                              ; preds = %120, %99, %258, %297, %28, %5, %316, %234
  %321 = phi i32 [ %236, %234 ], [ %319, %316 ], [ -14, %5 ], [ -28, %28 ], [ -28, %297 ], [ -28, %258 ], [ -28, %99 ], [ -28, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #23, !dbg !3801
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #23, !dbg !3801
  ret i32 %321, !dbg !3801
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #3 !dbg !3802 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3806, metadata !DIExpression()), !dbg !3807
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #24, !dbg !3808
  ret i1 %2, !dbg !3809
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #3 !dbg !3810 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3815, metadata !DIExpression()), !dbg !3816
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !3817
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !3818
  %4 = and i1 %2, %3, !dbg !3818
  ret i1 %4, !dbg !3819
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !3820 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3824, metadata !DIExpression()), !dbg !3830
  call void @llvm.dbg.value(metadata i32 %1, metadata !3825, metadata !DIExpression()), !dbg !3830
  call void @llvm.dbg.value(metadata i32 %2, metadata !3826, metadata !DIExpression()), !dbg !3830
  call void @llvm.dbg.value(metadata i8* %3, metadata !3827, metadata !DIExpression()), !dbg !3830
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !3831
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #23, !dbg !3831
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !3828, metadata !DIExpression()), !dbg !3832
  call void @llvm.va_start(i8* nonnull %6), !dbg !3833
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !3834
  %8 = load i32, i32* %7, align 4, !dbg !3834
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !3834
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #24, !dbg !3834
  call void @llvm.dbg.value(metadata i32 %10, metadata !3829, metadata !DIExpression()), !dbg !3830
  call void @llvm.va_end(i8* nonnull %6), !dbg !3835
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #23, !dbg !3836
  ret i32 %10, !dbg !3837
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #5

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !3838 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3850, metadata !DIExpression()), !dbg !3869
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3851, metadata !DIExpression()), !dbg !3869
  call void @llvm.dbg.value(metadata i8* %2, metadata !3852, metadata !DIExpression()), !dbg !3869
  call void @llvm.dbg.value(metadata i8* %3, metadata !3853, metadata !DIExpression()), !dbg !3869
  call void @llvm.dbg.value(metadata i8* %3, metadata !3854, metadata !DIExpression()), !dbg !3869
  call void @llvm.dbg.value(metadata i8* %3, metadata !3855, metadata !DIExpression()), !dbg !3869
  %5 = icmp eq i8* %3, null, !dbg !3870
  br i1 %5, label %45, label %6, !dbg !3872

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !3864, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3869
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !3873
  %8 = load i8, i8* %7, align 1, !dbg !3873
  %9 = zext i8 %8 to i32, !dbg !3874
  call void @llvm.dbg.value(metadata i32 %9, metadata !3865, metadata !DIExpression()), !dbg !3869
  call void @llvm.dbg.value(metadata i8 undef, metadata !3866, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3869
  call void @llvm.dbg.value(metadata i8 undef, metadata !3867, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3869
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !3861, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3869
  call void @llvm.dbg.value(metadata i32 0, metadata !3863, metadata !DIExpression()), !dbg !3869
  %10 = icmp eq i8 %8, 0, !dbg !3875
  br i1 %10, label %39, label %11, !dbg !3878

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !3879
  call void @llvm.dbg.value(metadata i8 %12, metadata !3864, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3869
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !3861, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3869
  %13 = zext i8 %12 to i32, !dbg !3880
  call void @llvm.dbg.value(metadata i32 %13, metadata !3864, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3869
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !3861, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3869
  %14 = shl nuw nsw i32 %13, 2, !dbg !3881
  call void @llvm.dbg.value(metadata i32 %14, metadata !3864, metadata !DIExpression()), !dbg !3869
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !3861, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3869
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !3882
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !3861, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3869
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !3883
  %17 = load i8, i8* %16, align 1, !dbg !3883
  call void @llvm.dbg.value(metadata i8 %17, metadata !3866, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3869
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !3861, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3869
  %18 = zext i8 %17 to i32, !dbg !3884
  call void @llvm.dbg.value(metadata i32 %18, metadata !3866, metadata !DIExpression()), !dbg !3869
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !3861, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3869
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !3885
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !3861, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3869
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !3886
  %21 = load i8, i8* %20, align 1, !dbg !3886
  call void @llvm.dbg.value(metadata i8 %21, metadata !3867, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3869
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !3861, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3869
  %22 = zext i8 %21 to i32, !dbg !3887
  call void @llvm.dbg.value(metadata i32 %22, metadata !3867, metadata !DIExpression()), !dbg !3869
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !3861, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3869
  %23 = shl nuw nsw i32 %22, 1, !dbg !3888
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !3861, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3869
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !3889
  call void @llvm.dbg.value(metadata i8* %24, metadata !3861, metadata !DIExpression()), !dbg !3869
  br label %25, !dbg !3878

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !3861, metadata !DIExpression()), !dbg !3869
  call void @llvm.dbg.value(metadata i32 %27, metadata !3863, metadata !DIExpression()), !dbg !3869
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !3890
  call void @llvm.dbg.value(metadata i8* %28, metadata !3861, metadata !DIExpression()), !dbg !3869
  %29 = load i8, i8* %26, align 1, !dbg !3892
  %30 = zext i8 %29 to i32, !dbg !3892
  call void @llvm.dbg.value(metadata i32 %30, metadata !3868, metadata !DIExpression()), !dbg !3869
  %31 = shl nuw nsw i32 %30, 2, !dbg !3893
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !3894
  %33 = bitcast i8* %32 to i8**, !dbg !3895
  call void @llvm.dbg.value(metadata i8** %33, metadata !3862, metadata !DIExpression()), !dbg !3869
  store i8* %28, i8** %33, align 4, !dbg !3896
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #25, !dbg !3897
  %35 = add i32 %34, 1, !dbg !3898
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !3899
  call void @llvm.dbg.value(metadata i8* %36, metadata !3861, metadata !DIExpression()), !dbg !3869
  %37 = add nuw nsw i32 %27, 1, !dbg !3900
  call void @llvm.dbg.value(metadata i32 %37, metadata !3863, metadata !DIExpression()), !dbg !3869
  %38 = icmp eq i32 %37, %9, !dbg !3875
  br i1 %38, label %39, label %25, !dbg !3878, !llvm.loop !3901

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !3903
  call void @llvm.dbg.value(metadata i8* %40, metadata !3854, metadata !DIExpression()), !dbg !3869
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !3904
  %42 = bitcast i8* %41 to i8**, !dbg !3904
  %43 = load i8*, i8** %42, align 1, !dbg !3904
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #24, !dbg !3905
  br label %45, !dbg !3906

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !3869
  ret i32 %46, !dbg !3907
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !3908 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3912, metadata !DIExpression()), !dbg !3922
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3913, metadata !DIExpression()), !dbg !3922
  call void @llvm.dbg.value(metadata i8* %2, metadata !3914, metadata !DIExpression()), !dbg !3922
  call void @llvm.dbg.value(metadata i8* %3, metadata !3915, metadata !DIExpression()), !dbg !3922
  call void @llvm.dbg.value(metadata i8* %4, metadata !3916, metadata !DIExpression()), !dbg !3922
  call void @llvm.dbg.value(metadata i8* %4, metadata !3917, metadata !DIExpression()), !dbg !3922
  %6 = ptrtoint i8* %4 to i32, !dbg !3923
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !3923
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #25, !dbg !3923
  ret i32 %8, !dbg !3924
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !3925 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3929, metadata !DIExpression()), !dbg !3934
  call void @llvm.dbg.value(metadata i32 %1, metadata !3930, metadata !DIExpression()), !dbg !3934
  call void @llvm.dbg.value(metadata i8 0, metadata !3932, metadata !DIExpression()), !dbg !3934
  call void @llvm.dbg.value(metadata i32 0, metadata !3933, metadata !DIExpression()), !dbg !3934
  call void @llvm.dbg.value(metadata i8 poison, metadata !3932, metadata !DIExpression()), !dbg !3934
  call void @llvm.dbg.value(metadata i8* %0, metadata !3929, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3934
  %3 = load i8, i8* %0, align 1, !dbg !3935
  call void @llvm.dbg.value(metadata i8 %3, metadata !3931, metadata !DIExpression()), !dbg !3934
  %4 = icmp eq i8 %3, 0, !dbg !3936
  br i1 %4, label %29, label %5, !dbg !3937

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !3938
  call void @llvm.dbg.value(metadata i32 %8, metadata !3933, metadata !DIExpression()), !dbg !3934
  br i1 %9, label %11, label %22, !dbg !3939

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !3941
  br i1 %12, label %13, label %17, !dbg !3945

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !3946
  br i1 %14, label %29, label %15, !dbg !3949

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !3950
  br i1 %16, label %29, label %22, !dbg !3952

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !3953
  %19 = xor i1 %18, true, !dbg !3955
  %20 = zext i1 %18 to i32, !dbg !3955
  %21 = add nsw i32 %8, %20, !dbg !3955
  br label %22, !dbg !3955

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !3934
  call void @llvm.dbg.value(metadata i32 %24, metadata !3933, metadata !DIExpression()), !dbg !3934
  call void @llvm.dbg.value(metadata i8 poison, metadata !3932, metadata !DIExpression()), !dbg !3934
  %25 = icmp eq i8 %6, 37, !dbg !3956
  %26 = xor i1 %25, %23, !dbg !3958
  call void @llvm.dbg.value(metadata i8* %10, metadata !3929, metadata !DIExpression()), !dbg !3934
  call void @llvm.dbg.value(metadata i8* %10, metadata !3929, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3934
  %27 = load i8, i8* %10, align 1, !dbg !3935
  call void @llvm.dbg.value(metadata i8 %27, metadata !3931, metadata !DIExpression()), !dbg !3934
  %28 = icmp eq i8 %27, 0, !dbg !3936
  br i1 %28, label %29, label %5, !dbg !3937, !llvm.loop !3959

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !3934
  ret i1 %30, !dbg !3961
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #3 !dbg !3962 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !3966, metadata !DIExpression()), !dbg !3967
  %2 = add i8 %0, -64, !dbg !3968
  %3 = icmp ult i8 %2, 59, !dbg !3968
  ret i1 %3, !dbg !3969
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !3970 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3978, metadata !DIExpression()), !dbg !4047
  call void @llvm.dbg.value(metadata i32 %1, metadata !3979, metadata !DIExpression()), !dbg !4047
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !3980, metadata !DIExpression()), !dbg !4047
  call void @llvm.dbg.value(metadata i8* %3, metadata !3981, metadata !DIExpression()), !dbg !4047
  call void @llvm.dbg.value(metadata i32 %4, metadata !3982, metadata !DIExpression()), !dbg !4047
  call void @llvm.dbg.value(metadata i16* %5, metadata !3983, metadata !DIExpression()), !dbg !4047
  call void @llvm.dbg.value(metadata i32 %6, metadata !3984, metadata !DIExpression()), !dbg !4047
  %11 = icmp eq i8* %0, null, !dbg !4048
  br i1 %11, label %12, label %13, !dbg !4051

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 916) #25, !dbg !4052
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 916) #25, !dbg !4052
  unreachable, !dbg !4052

13:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i8* %0, metadata !3985, metadata !DIExpression()), !dbg !4047
  %14 = bitcast i8* %0 to i32*, !dbg !4054
  call void @llvm.dbg.value(metadata i32* %14, metadata !3986, metadata !DIExpression()), !dbg !4047
  %15 = and i32 %4, 8, !dbg !4055
  %16 = icmp eq i32 %15, 0, !dbg !4056
  call void @llvm.dbg.value(metadata i1 %16, metadata !3990, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4047
  call void @llvm.dbg.value(metadata i8* %0, metadata !3993, metadata !DIExpression()), !dbg !4047
  %17 = icmp eq i32 %1, 0, !dbg !4057
  br i1 %17, label %18, label %20, !dbg !4058

18:                                               ; preds = %13
  %19 = tail call fastcc i32 @get_package_len(i8* noundef nonnull %0) #24, !dbg !4059
  br label %20, !dbg !4058

20:                                               ; preds = %13, %18
  %21 = phi i32 [ %19, %18 ], [ %1, %13 ], !dbg !4058
  call void @llvm.dbg.value(metadata i32 %21, metadata !3979, metadata !DIExpression()), !dbg !4047
  %22 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4060
  %23 = load i8, i8* %22, align 1, !dbg !4060
  %24 = zext i8 %23 to i32, !dbg !4061
  call void @llvm.dbg.value(metadata i32 %24, metadata !3988, metadata !DIExpression()), !dbg !4047
  %25 = icmp ne i8 %23, 0, !dbg !4062
  %26 = and i32 %4, 1, !dbg !4063
  %27 = icmp ne i32 %26, 0, !dbg !4063
  %28 = and i1 %27, %25, !dbg !4063
  call void @llvm.dbg.value(metadata i1 %28, metadata !3992, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4047
  %29 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4064
  %30 = load i8, i8* %29, align 1, !dbg !4064
  %31 = zext i8 %30 to i32, !dbg !4065
  call void @llvm.dbg.value(metadata i32 %31, metadata !3989, metadata !DIExpression()), !dbg !4047
  %32 = icmp ne i8 %30, 0, !dbg !4066
  %33 = and i32 %4, 2, !dbg !4067
  %34 = icmp ne i32 %33, 0, !dbg !4067
  %35 = and i1 %34, %32, !dbg !4067
  call void @llvm.dbg.value(metadata i1 %35, metadata !3991, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4047
  %36 = select i1 %35, i1 true, i1 %28, !dbg !4068
  br i1 %36, label %41, label %37, !dbg !4068

37:                                               ; preds = %20
  %38 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4070
  br i1 %38, label %287, label %39, !dbg !4073

39:                                               ; preds = %37
  %40 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %21, i8* noundef %3) #25, !dbg !4074
  br label %287, !dbg !4076

41:                                               ; preds = %20
  %42 = load i8, i8* %0, align 1, !dbg !4077
  %43 = zext i8 %42 to i32, !dbg !4078
  %44 = shl nuw nsw i32 %43, 2, !dbg !4079
  call void @llvm.dbg.value(metadata i32 %44, metadata !3987, metadata !DIExpression()), !dbg !4047
  %45 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4080
  %46 = bitcast i8* %45 to i8**, !dbg !4081
  %47 = load i8*, i8** %46, align 4, !dbg !4081
  call void @llvm.dbg.value(metadata i8* %47, metadata !3996, metadata !DIExpression()), !dbg !4047
  %48 = getelementptr inbounds i8, i8* %0, i32 %44, !dbg !4082
  call void @llvm.dbg.value(metadata i8* %48, metadata !3997, metadata !DIExpression()), !dbg !4047
  call void @llvm.dbg.value(metadata i32 0, metadata !3998, metadata !DIExpression()), !dbg !4047
  %49 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4083
  br i1 %49, label %50, label %135, !dbg !4084

50:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %21, metadata !3995, metadata !DIExpression()), !dbg !4047
  br i1 %28, label %51, label %76, !dbg !4085

51:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %21, metadata !3995, metadata !DIExpression()), !dbg !4047
  call void @llvm.dbg.value(metadata i8* %48, metadata !3997, metadata !DIExpression()), !dbg !4047
  call void @llvm.dbg.value(metadata i32 0, metadata !3998, metadata !DIExpression()), !dbg !4047
  call void @llvm.dbg.value(metadata i32 0, metadata !3999, metadata !DIExpression()), !dbg !4086
  %52 = icmp ne i16* %5, null
  br label %53, !dbg !4087

53:                                               ; preds = %51, %70
  %54 = phi i32 [ %21, %51 ], [ %72, %70 ]
  %55 = phi i8* [ %48, %51 ], [ %73, %70 ]
  %56 = phi i32 [ 0, %51 ], [ %71, %70 ]
  %57 = phi i32 [ 0, %51 ], [ %74, %70 ]
  call void @llvm.dbg.value(metadata i32 %54, metadata !3995, metadata !DIExpression()), !dbg !4047
  call void @llvm.dbg.value(metadata i8* %55, metadata !3997, metadata !DIExpression()), !dbg !4047
  call void @llvm.dbg.value(metadata i32 %56, metadata !3998, metadata !DIExpression()), !dbg !4047
  call void @llvm.dbg.value(metadata i32 %57, metadata !3999, metadata !DIExpression()), !dbg !4086
  %58 = load i8, i8* %55, align 1, !dbg !4088
  %59 = zext i8 %58 to i32, !dbg !4089
  %60 = getelementptr inbounds i32, i32* %14, i32 %59, !dbg !4089
  %61 = bitcast i32* %60 to i8**, !dbg !4090
  %62 = load i8*, i8** %61, align 4, !dbg !4090
  call void @llvm.dbg.value(metadata i8* %62, metadata !4005, metadata !DIExpression()), !dbg !4091
  %63 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %62, i16 noundef zeroext 0) #24, !dbg !4092
  call void @llvm.dbg.value(metadata i32 %63, metadata !4008, metadata !DIExpression()), !dbg !4091
  %64 = icmp ult i32 %56, %6
  %65 = select i1 %52, i1 %64, i1 false, !dbg !4093
  br i1 %65, label %66, label %70, !dbg !4093

66:                                               ; preds = %53
  %67 = trunc i32 %63 to i16, !dbg !4095
  %68 = add nuw i32 %56, 1, !dbg !4097
  call void @llvm.dbg.value(metadata i32 %68, metadata !3998, metadata !DIExpression()), !dbg !4047
  %69 = getelementptr inbounds i16, i16* %5, i32 %56, !dbg !4098
  store i16 %67, i16* %69, align 2, !dbg !4099
  br label %70, !dbg !4100

70:                                               ; preds = %66, %53
  %71 = phi i32 [ %68, %66 ], [ %56, %53 ], !dbg !4047
  call void @llvm.dbg.value(metadata i32 %71, metadata !3998, metadata !DIExpression()), !dbg !4047
  %72 = add nsw i32 %63, %54, !dbg !4101
  call void @llvm.dbg.value(metadata i32 %72, metadata !3995, metadata !DIExpression()), !dbg !4047
  %73 = getelementptr inbounds i8, i8* %55, i32 1, !dbg !4102
  call void @llvm.dbg.value(metadata i8* %73, metadata !3997, metadata !DIExpression()), !dbg !4047
  %74 = add nuw nsw i32 %57, 1, !dbg !4103
  call void @llvm.dbg.value(metadata i32 %74, metadata !3999, metadata !DIExpression()), !dbg !4086
  %75 = icmp eq i32 %74, %24, !dbg !4104
  br i1 %75, label %82, label %53, !dbg !4087, !llvm.loop !4105

76:                                               ; preds = %50
  %77 = and i32 %4, 4
  %78 = icmp ne i32 %77, 0
  %79 = and i1 %78, %25, !dbg !4107
  %80 = select i1 %79, i32 %24, i32 0, !dbg !4107
  %81 = getelementptr i8, i8* %48, i32 %80, !dbg !4107
  br label %82, !dbg !4107

82:                                               ; preds = %70, %76
  %83 = phi i32 [ 0, %76 ], [ %71, %70 ], !dbg !4110
  %84 = phi i8* [ %81, %76 ], [ %73, %70 ], !dbg !4047
  %85 = phi i32 [ %21, %76 ], [ %72, %70 ], !dbg !4111
  call void @llvm.dbg.value(metadata i1 undef, metadata !4009, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4112
  call void @llvm.dbg.value(metadata i32 0, metadata !4010, metadata !DIExpression()), !dbg !4113
  call void @llvm.dbg.value(metadata i32 %85, metadata !3995, metadata !DIExpression()), !dbg !4047
  call void @llvm.dbg.value(metadata i8* %84, metadata !3997, metadata !DIExpression()), !dbg !4047
  call void @llvm.dbg.value(metadata i32 %83, metadata !3998, metadata !DIExpression()), !dbg !4047
  %86 = icmp eq i8 %30, 0, !dbg !4114
  br i1 %86, label %287, label %87, !dbg !4115

87:                                               ; preds = %82
  %88 = and i32 %4, 5, !dbg !4116
  %89 = icmp eq i32 %88, 0, !dbg !4117
  call void @llvm.dbg.value(metadata i1 %89, metadata !4009, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4112
  %90 = icmp eq i32 %33, 0
  %91 = icmp eq i32 %26, 0
  %92 = icmp ne i16* %5, null
  %93 = select i1 %89, i32 -2, i32 -1
  br label %94, !dbg !4115

94:                                               ; preds = %87, %130
  %95 = phi i32 [ %85, %87 ], [ %132, %130 ]
  %96 = phi i8* [ %84, %87 ], [ %100, %130 ]
  %97 = phi i32 [ %83, %87 ], [ %131, %130 ]
  %98 = phi i32 [ 0, %87 ], [ %133, %130 ]
  call void @llvm.dbg.value(metadata i32 %95, metadata !3995, metadata !DIExpression()), !dbg !4047
  call void @llvm.dbg.value(metadata i8* %96, metadata !3997, metadata !DIExpression()), !dbg !4047
  call void @llvm.dbg.value(metadata i32 %97, metadata !3998, metadata !DIExpression()), !dbg !4047
  call void @llvm.dbg.value(metadata i32 %98, metadata !4010, metadata !DIExpression()), !dbg !4113
  %99 = getelementptr inbounds i8, i8* %96, i32 1, !dbg !4118
  call void @llvm.dbg.value(metadata i8* %99, metadata !3997, metadata !DIExpression()), !dbg !4047
  call void @llvm.dbg.value(metadata i8 undef, metadata !4012, metadata !DIExpression()), !dbg !4119
  %100 = getelementptr inbounds i8, i8* %96, i32 2, !dbg !4120
  call void @llvm.dbg.value(metadata i8* %100, metadata !3997, metadata !DIExpression()), !dbg !4047
  %101 = load i8, i8* %99, align 1, !dbg !4121
  call void @llvm.dbg.value(metadata i8 %101, metadata !4015, metadata !DIExpression()), !dbg !4119
  %102 = zext i8 %101 to i32, !dbg !4122
  %103 = getelementptr inbounds i32, i32* %14, i32 %102, !dbg !4122
  %104 = bitcast i32* %103 to i8**, !dbg !4123
  %105 = load i8*, i8** %104, align 4, !dbg !4123
  call void @llvm.dbg.value(metadata i8* %105, metadata !4016, metadata !DIExpression()), !dbg !4119
  %106 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %105) #24, !dbg !4124
  call void @llvm.dbg.value(metadata i1 %106, metadata !4017, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4119
  br i1 %16, label %113, label %107, !dbg !4125

107:                                              ; preds = %94
  %108 = load i8, i8* %96, align 1, !dbg !4127
  call void @llvm.dbg.value(metadata i8 %108, metadata !4012, metadata !DIExpression()), !dbg !4119
  %109 = zext i8 %108 to i32, !dbg !4128
  %110 = tail call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %109) #24, !dbg !4129
  br i1 %110, label %111, label %113, !dbg !4130

111:                                              ; preds = %107
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.9, i32 0, i32 0), i32 noundef 87, i8* noundef %47, i32 noundef %109) #25, !dbg !4131
  %112 = add nsw i32 %95, -2, !dbg !4137
  call void @llvm.dbg.value(metadata i32 %112, metadata !3995, metadata !DIExpression()), !dbg !4047
  br label %130, !dbg !4138

113:                                              ; preds = %107, %94
  br i1 %106, label %114, label %117, !dbg !4139

114:                                              ; preds = %113
  br i1 %91, label %115, label %118, !dbg !4140

115:                                              ; preds = %114
  %116 = add i32 %95, %93, !dbg !4142
  call void @llvm.dbg.value(metadata i32 %116, metadata !3995, metadata !DIExpression()), !dbg !4047
  br label %130, !dbg !4145

117:                                              ; preds = %113
  br i1 %90, label %130, label %118, !dbg !4146

118:                                              ; preds = %117, %114
  call void @llvm.dbg.label(metadata !4043), !dbg !4147
  %119 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %105, i16 noundef zeroext 0) #24, !dbg !4148
  call void @llvm.dbg.value(metadata i32 %119, metadata !4018, metadata !DIExpression()), !dbg !4119
  %120 = icmp ult i32 %97, %6
  %121 = select i1 %92, i1 %120, i1 false, !dbg !4149
  br i1 %121, label %122, label %126, !dbg !4149

122:                                              ; preds = %118
  %123 = trunc i32 %119 to i16, !dbg !4151
  %124 = add nuw i32 %97, 1, !dbg !4153
  call void @llvm.dbg.value(metadata i32 %124, metadata !3998, metadata !DIExpression()), !dbg !4047
  %125 = getelementptr inbounds i16, i16* %5, i32 %97, !dbg !4154
  store i16 %123, i16* %125, align 2, !dbg !4155
  br label %126, !dbg !4156

126:                                              ; preds = %122, %118
  %127 = phi i32 [ %124, %122 ], [ %97, %118 ], !dbg !4047
  call void @llvm.dbg.value(metadata i32 %127, metadata !3998, metadata !DIExpression()), !dbg !4047
  %128 = add i32 %95, -1, !dbg !4157
  %129 = add i32 %128, %119, !dbg !4158
  call void @llvm.dbg.value(metadata i32 %129, metadata !3995, metadata !DIExpression()), !dbg !4047
  br label %130, !dbg !4159

130:                                              ; preds = %115, %126, %117, %111
  %131 = phi i32 [ %97, %111 ], [ %127, %126 ], [ %97, %115 ], [ %97, %117 ], !dbg !4047
  %132 = phi i32 [ %112, %111 ], [ %129, %126 ], [ %116, %115 ], [ %95, %117 ], !dbg !4119
  call void @llvm.dbg.value(metadata i32 %132, metadata !3995, metadata !DIExpression()), !dbg !4047
  call void @llvm.dbg.value(metadata i32 %131, metadata !3998, metadata !DIExpression()), !dbg !4047
  %133 = add nuw nsw i32 %98, 1, !dbg !4160
  call void @llvm.dbg.value(metadata i8* %100, metadata !3997, metadata !DIExpression()), !dbg !4047
  call void @llvm.dbg.value(metadata i32 %133, metadata !4010, metadata !DIExpression()), !dbg !4113
  %134 = icmp eq i32 %133, %31, !dbg !4114
  br i1 %134, label %287, label %94, !dbg !4115, !llvm.loop !4161

135:                                              ; preds = %41
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !4020, metadata !DIExpression()), !dbg !4163
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !4021, metadata !DIExpression()), !dbg !4164
  br i1 %28, label %136, label %138, !dbg !4165

136:                                              ; preds = %135
  call void @llvm.dbg.value(metadata i8 %23, metadata !4022, metadata !DIExpression()), !dbg !4047
  call void @llvm.dbg.value(metadata i8 0, metadata !4023, metadata !DIExpression()), !dbg !4047
  %137 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !4166
  call void @llvm.dbg.value(metadata i8* %137, metadata !4024, metadata !DIExpression()), !dbg !4047
  br label %143, !dbg !4169

138:                                              ; preds = %135
  %139 = and i32 %4, 4
  %140 = icmp ne i32 %139, 0
  %141 = and i1 %140, %25, !dbg !4170
  %142 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %141, label %143, label %148, !dbg !4170

143:                                              ; preds = %136, %138
  %144 = phi i8 [ 0, %138 ], [ %23, %136 ]
  %145 = phi i8 [ %23, %138 ], [ 0, %136 ]
  %146 = phi i8* [ %142, %138 ], [ %137, %136 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !4024, metadata !DIExpression()), !dbg !4047
  call void @llvm.dbg.value(metadata i8 undef, metadata !4023, metadata !DIExpression()), !dbg !4047
  call void @llvm.dbg.value(metadata i8 0, metadata !4022, metadata !DIExpression()), !dbg !4047
  %147 = call i8* @memcpy(i8* noundef nonnull %146, i8* noundef nonnull %48, i32 noundef %24) #25, !dbg !4172
  br label %148, !dbg !4175

148:                                              ; preds = %138, %143
  %149 = phi i8 [ %145, %143 ], [ 0, %138 ]
  %150 = phi i8 [ %144, %143 ], [ 0, %138 ]
  %151 = getelementptr inbounds i8, i8* %48, i32 %24, !dbg !4176
  call void @llvm.dbg.value(metadata i8* %151, metadata !3997, metadata !DIExpression()), !dbg !4047
  call void @llvm.dbg.value(metadata i32 0, metadata !4026, metadata !DIExpression()), !dbg !4177
  call void @llvm.dbg.value(metadata i8 %149, metadata !4023, metadata !DIExpression()), !dbg !4047
  call void @llvm.dbg.value(metadata i8 %150, metadata !4022, metadata !DIExpression()), !dbg !4047
  %152 = icmp eq i8 %30, 0, !dbg !4178
  br i1 %152, label %153, label %155, !dbg !4179

153:                                              ; preds = %148
  %154 = and i32 %4, 4, !dbg !4180
  br label %160, !dbg !4179

155:                                              ; preds = %148
  %156 = icmp eq i32 %33, 0
  %157 = icmp eq i32 %26, 0
  %158 = and i32 %4, 4
  %159 = icmp eq i32 %158, 0
  br label %179, !dbg !4179

160:                                              ; preds = %235, %153
  %161 = phi i32 [ %154, %153 ], [ %158, %235 ], !dbg !4180
  %162 = phi i8 [ %150, %153 ], [ %236, %235 ], !dbg !4181
  %163 = phi i8 [ %149, %153 ], [ %237, %235 ], !dbg !4182
  %164 = phi i8* [ %151, %153 ], [ %186, %235 ], !dbg !4047
  call void @llvm.dbg.value(metadata i8 undef, metadata !4019, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !4047
  %165 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4183
  %166 = load i8, i8* %165, align 1, !dbg !4183
  %167 = zext i8 %162 to i32, !dbg !4184
  %168 = add i8 %166, %162, !dbg !4185
  call void @llvm.dbg.value(metadata i8 %168, metadata !4019, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !4047
  %169 = icmp eq i32 %33, 0, !dbg !4186
  %170 = lshr i8 %163, 1, !dbg !4187
  %171 = select i1 %169, i8 %170, i8 0, !dbg !4187
  call void @llvm.dbg.value(metadata i8 %171, metadata !4019, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !4047
  %172 = icmp eq i32 %26, 0, !dbg !4188
  %173 = icmp eq i32 %161, 0, !dbg !4180
  %174 = select i1 %173, i8 0, i8 %163, !dbg !4180
  %175 = select i1 %172, i8 %174, i8 0, !dbg !4180
  call void @llvm.dbg.value(metadata i8 %175, metadata !4019, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !4047
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !4034, metadata !DIExpression()), !dbg !4189
  %176 = load i32, i32* %14, align 1, !dbg !4190
  store i8 %168, i8* %165, align 1, !dbg !4191
  store i8 %175, i8* %22, align 1, !dbg !4191
  store i8 %171, i8* %29, align 1, !dbg !4191
  %177 = call i32 %2(i8* noundef nonnull %0, i32 noundef %44, i8* noundef %3) #25, !dbg !4192
  call void @llvm.dbg.value(metadata i32 %177, metadata !4025, metadata !DIExpression()), !dbg !4047
  %178 = icmp slt i32 %177, 0, !dbg !4193
  br i1 %178, label %287, label %240, !dbg !4195

179:                                              ; preds = %155, %235
  %180 = phi i8* [ %151, %155 ], [ %186, %235 ]
  %181 = phi i32 [ 0, %155 ], [ %238, %235 ]
  %182 = phi i8 [ %149, %155 ], [ %237, %235 ]
  %183 = phi i8 [ %150, %155 ], [ %236, %235 ]
  call void @llvm.dbg.value(metadata i8* %180, metadata !3997, metadata !DIExpression()), !dbg !4047
  call void @llvm.dbg.value(metadata i32 %181, metadata !4026, metadata !DIExpression()), !dbg !4177
  call void @llvm.dbg.value(metadata i8 %182, metadata !4023, metadata !DIExpression()), !dbg !4047
  call void @llvm.dbg.value(metadata i8 %183, metadata !4022, metadata !DIExpression()), !dbg !4047
  %184 = getelementptr inbounds i8, i8* %180, i32 1, !dbg !4196
  call void @llvm.dbg.value(metadata i8* %184, metadata !3997, metadata !DIExpression()), !dbg !4047
  %185 = load i8, i8* %180, align 1, !dbg !4197
  call void @llvm.dbg.value(metadata i8 %185, metadata !4028, metadata !DIExpression()), !dbg !4198
  %186 = getelementptr inbounds i8, i8* %180, i32 2, !dbg !4199
  call void @llvm.dbg.value(metadata i8* %186, metadata !3997, metadata !DIExpression()), !dbg !4047
  %187 = load i8, i8* %184, align 1, !dbg !4200
  call void @llvm.dbg.value(metadata i8 %187, metadata !4031, metadata !DIExpression()), !dbg !4198
  %188 = zext i8 %187 to i32, !dbg !4201
  %189 = getelementptr inbounds i32, i32* %14, i32 %188, !dbg !4201
  %190 = bitcast i32* %189 to i8**, !dbg !4202
  %191 = load i8*, i8** %190, align 4, !dbg !4202
  call void @llvm.dbg.value(metadata i8* %191, metadata !4032, metadata !DIExpression()), !dbg !4198
  %192 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %191) #24, !dbg !4203
  call void @llvm.dbg.value(metadata i1 %192, metadata !4033, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4198
  br i1 %16, label %196, label %193, !dbg !4204

193:                                              ; preds = %179
  %194 = zext i8 %185 to i32, !dbg !4206
  %195 = call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %194) #24, !dbg !4207
  br i1 %195, label %235, label %196, !dbg !4208

196:                                              ; preds = %193, %179
  br i1 %192, label %197, label %213, !dbg !4209

197:                                              ; preds = %196
  br i1 %157, label %205, label %198, !dbg !4210

198:                                              ; preds = %197
  %199 = icmp ult i8 %183, 16, !dbg !4213
  br i1 %199, label %201, label %200, !dbg !4218

200:                                              ; preds = %198
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 1086) #25, !dbg !4219
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 1086) #25, !dbg !4219
  unreachable, !dbg !4219

201:                                              ; preds = %198
  %202 = zext i8 %183 to i32, !dbg !4213
  %203 = add nuw nsw i8 %183, 1, !dbg !4221
  call void @llvm.dbg.value(metadata i8 %203, metadata !4022, metadata !DIExpression()), !dbg !4047
  %204 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %202, !dbg !4222
  br label %231, !dbg !4223

205:                                              ; preds = %197
  br i1 %159, label %235, label %206, !dbg !4224

206:                                              ; preds = %205
  %207 = icmp ult i8 %182, 16, !dbg !4225
  br i1 %207, label %209, label %208, !dbg !4230

208:                                              ; preds = %206
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 1089) #25, !dbg !4231
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 1089) #25, !dbg !4231
  unreachable, !dbg !4231

209:                                              ; preds = %206
  %210 = zext i8 %182 to i32, !dbg !4225
  %211 = add nuw nsw i8 %182, 1, !dbg !4233
  call void @llvm.dbg.value(metadata i8 %211, metadata !4023, metadata !DIExpression()), !dbg !4047
  %212 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %210, !dbg !4234
  br label %231, !dbg !4235

213:                                              ; preds = %196
  br i1 %156, label %221, label %214, !dbg !4236

214:                                              ; preds = %213
  %215 = icmp ult i8 %183, 16, !dbg !4238
  br i1 %215, label %217, label %216, !dbg !4243

216:                                              ; preds = %214
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 1096) #25, !dbg !4244
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 1096) #25, !dbg !4244
  unreachable, !dbg !4244

217:                                              ; preds = %214
  %218 = zext i8 %183 to i32, !dbg !4238
  %219 = add nuw nsw i8 %183, 1, !dbg !4246
  call void @llvm.dbg.value(metadata i8 %219, metadata !4022, metadata !DIExpression()), !dbg !4047
  %220 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %218, !dbg !4247
  br label %231, !dbg !4248

221:                                              ; preds = %213
  %222 = icmp ult i8 %182, 16, !dbg !4249
  br i1 %222, label %224, label %223, !dbg !4253

223:                                              ; preds = %221
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 1099) #25, !dbg !4254
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 1099) #25, !dbg !4254
  unreachable, !dbg !4254

224:                                              ; preds = %221
  %225 = zext i8 %182 to i32, !dbg !4249
  %226 = add nuw nsw i8 %182, 1, !dbg !4256
  call void @llvm.dbg.value(metadata i8 %226, metadata !4023, metadata !DIExpression()), !dbg !4047
  %227 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %225, !dbg !4257
  store i8 %185, i8* %227, align 1, !dbg !4258
  %228 = add nuw nsw i8 %182, 2, !dbg !4259
  call void @llvm.dbg.value(metadata i8 %228, metadata !4023, metadata !DIExpression()), !dbg !4047
  %229 = zext i8 %226 to i32, !dbg !4260
  %230 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %229, !dbg !4260
  br label %231

231:                                              ; preds = %217, %224, %201, %209
  %232 = phi i8* [ %212, %209 ], [ %204, %201 ], [ %230, %224 ], [ %220, %217 ]
  %233 = phi i8 [ %183, %209 ], [ %203, %201 ], [ %183, %224 ], [ %219, %217 ]
  %234 = phi i8 [ %211, %209 ], [ %182, %201 ], [ %228, %224 ], [ %182, %217 ]
  store i8 %187, i8* %232, align 1, !dbg !4261
  br label %235, !dbg !4262

235:                                              ; preds = %231, %205, %193
  %236 = phi i8 [ %183, %193 ], [ %183, %205 ], [ %233, %231 ], !dbg !4047
  %237 = phi i8 [ %182, %193 ], [ %182, %205 ], [ %234, %231 ], !dbg !4182
  call void @llvm.dbg.value(metadata i8 %237, metadata !4023, metadata !DIExpression()), !dbg !4047
  call void @llvm.dbg.value(metadata i8 %236, metadata !4022, metadata !DIExpression()), !dbg !4047
  %238 = add nuw nsw i32 %181, 1, !dbg !4262
  call void @llvm.dbg.value(metadata i8* %186, metadata !3997, metadata !DIExpression()), !dbg !4047
  call void @llvm.dbg.value(metadata i32 %238, metadata !4026, metadata !DIExpression()), !dbg !4177
  %239 = icmp eq i32 %238, %31, !dbg !4178
  br i1 %239, label %160, label %179, !dbg !4179, !llvm.loop !4263

240:                                              ; preds = %160
  %241 = zext i8 %163 to i32, !dbg !4187
  call void @llvm.dbg.value(metadata i32 %177, metadata !3995, metadata !DIExpression()), !dbg !4047
  store i32 %176, i32* %14, align 1, !dbg !4265
  %242 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !4266
  %243 = call i32 %2(i8* noundef nonnull %242, i32 noundef %241, i8* noundef %3) #25, !dbg !4267
  call void @llvm.dbg.value(metadata i32 %243, metadata !4025, metadata !DIExpression()), !dbg !4047
  %244 = icmp slt i32 %243, 0, !dbg !4268
  br i1 %244, label %287, label %245, !dbg !4270

245:                                              ; preds = %240
  call void @llvm.dbg.value(metadata !DIArgList(i32 %177, i32 %243), metadata !3995, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4047
  %246 = mul nsw i32 %31, -2
  %247 = add i32 %21, %246, !dbg !4271
  %248 = add nuw nsw i32 %44, %24, !dbg !4271
  %249 = sub i32 %247, %248, !dbg !4271
  call void @llvm.dbg.value(metadata i32 %249, metadata !4035, metadata !DIExpression()), !dbg !4047
  %250 = call i32 %2(i8* noundef %164, i32 noundef %249, i8* noundef %3) #25, !dbg !4272
  call void @llvm.dbg.value(metadata i32 %250, metadata !4025, metadata !DIExpression()), !dbg !4047
  %251 = icmp slt i32 %250, 0, !dbg !4273
  br i1 %251, label %287, label %252, !dbg !4275

252:                                              ; preds = %245
  %253 = add nuw nsw i32 %243, %177, !dbg !4276
  call void @llvm.dbg.value(metadata i32 %253, metadata !3995, metadata !DIExpression()), !dbg !4047
  %254 = add nuw nsw i32 %253, %250, !dbg !4277
  call void @llvm.dbg.value(metadata i32 %254, metadata !3995, metadata !DIExpression()), !dbg !4047
  call void @llvm.dbg.value(metadata i32 0, metadata !4036, metadata !DIExpression()), !dbg !4278
  %255 = icmp eq i8 %162, 0, !dbg !4279
  br i1 %255, label %284, label %256, !dbg !4280

256:                                              ; preds = %252
  %257 = icmp eq i16* %5, null
  br label %258, !dbg !4280

258:                                              ; preds = %256, %279
  %259 = phi i32 [ 0, %256 ], [ %282, %279 ]
  %260 = phi i32 [ %254, %256 ], [ %281, %279 ]
  call void @llvm.dbg.value(metadata i32 %259, metadata !4036, metadata !DIExpression()), !dbg !4278
  call void @llvm.dbg.value(metadata i32 %260, metadata !3995, metadata !DIExpression()), !dbg !4047
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4281
  %261 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %259, !dbg !4282
  %262 = load i8, i8* %261, align 1, !dbg !4282
  call void @llvm.dbg.value(metadata i8 %262, metadata !4038, metadata !DIExpression()), !dbg !4283
  store i8 %262, i8* %10, align 1, !dbg !4284
  %263 = zext i8 %262 to i32, !dbg !4285
  %264 = getelementptr inbounds i32, i32* %14, i32 %263, !dbg !4285
  %265 = bitcast i32* %264 to i8**, !dbg !4286
  %266 = load i8*, i8** %265, align 4, !dbg !4286
  call void @llvm.dbg.value(metadata i8* %266, metadata !4041, metadata !DIExpression()), !dbg !4283
  br i1 %257, label %270, label %267, !dbg !4287

267:                                              ; preds = %258
  %268 = getelementptr inbounds i16, i16* %5, i32 %259, !dbg !4288
  %269 = load i16, i16* %268, align 2, !dbg !4288
  br label %270, !dbg !4287

270:                                              ; preds = %258, %267
  %271 = phi i16 [ %269, %267 ], [ 0, %258 ], !dbg !4287
  call void @llvm.dbg.value(metadata i32 undef, metadata !4042, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4283
  call void @llvm.dbg.value(metadata i8* %10, metadata !4038, metadata !DIExpression(DW_OP_deref)), !dbg !4283
  %272 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #25, !dbg !4289
  call void @llvm.dbg.value(metadata i32 %272, metadata !4025, metadata !DIExpression()), !dbg !4047
  %273 = icmp slt i32 %272, 0, !dbg !4290
  br i1 %273, label %277, label %274, !dbg !4292

274:                                              ; preds = %270
  call void @llvm.dbg.value(metadata i16 %271, metadata !4042, metadata !DIExpression()), !dbg !4283
  call void @llvm.dbg.value(metadata !DIArgList(i32 %260, i32 %272), metadata !3995, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4047
  %275 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %266, i16 noundef zeroext %271) #24, !dbg !4293
  call void @llvm.dbg.value(metadata i32 %275, metadata !4025, metadata !DIExpression()), !dbg !4047
  %276 = icmp slt i32 %275, 0, !dbg !4294
  br i1 %276, label %277, label %279, !dbg !4296

277:                                              ; preds = %274, %270
  %278 = phi i32 [ %275, %274 ], [ %272, %270 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !3995, metadata !DIExpression()), !dbg !4047
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4297
  call void @llvm.dbg.value(metadata i32 undef, metadata !3995, metadata !DIExpression()), !dbg !4047
  br label %287

279:                                              ; preds = %274
  %280 = add nsw i32 %272, %260, !dbg !4298
  call void @llvm.dbg.value(metadata i32 %280, metadata !3995, metadata !DIExpression()), !dbg !4047
  %281 = add nsw i32 %280, %275, !dbg !4299
  call void @llvm.dbg.value(metadata i32 %281, metadata !3995, metadata !DIExpression()), !dbg !4047
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4297
  %282 = add nuw nsw i32 %259, 1, !dbg !4300
  call void @llvm.dbg.value(metadata i32 %282, metadata !4036, metadata !DIExpression()), !dbg !4278
  %283 = icmp eq i32 %282, %167, !dbg !4279
  br i1 %283, label %284, label %258, !dbg !4280, !llvm.loop !4301

284:                                              ; preds = %279, %252
  %285 = phi i32 [ %254, %252 ], [ %281, %279 ], !dbg !4277
  call void @llvm.dbg.value(metadata i32 %285, metadata !3995, metadata !DIExpression()), !dbg !4047
  %286 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #25, !dbg !4303
  br label %287, !dbg !4304

287:                                              ; preds = %130, %82, %277, %284, %160, %240, %245, %37, %39
  %288 = phi i32 [ %21, %39 ], [ %21, %37 ], [ %285, %284 ], [ %177, %160 ], [ %243, %240 ], [ %250, %245 ], [ %278, %277 ], [ %85, %82 ], [ %132, %130 ], !dbg !4047
  ret i32 %288, !dbg !4305
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !4306 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4310, metadata !DIExpression()), !dbg !4318
  %2 = icmp eq i8* %0, null, !dbg !4319
  br i1 %2, label %3, label %4, !dbg !4322

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 198) #25, !dbg !4323
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 198) #25, !dbg !4323
  unreachable, !dbg !4323

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4311, metadata !DIExpression()), !dbg !4318
  call void @llvm.dbg.value(metadata i8* %0, metadata !4312, metadata !DIExpression()), !dbg !4318
  %5 = load i8, i8* %0, align 1, !dbg !4325
  %6 = zext i8 %5 to i32, !dbg !4325
  %7 = shl nuw nsw i32 %6, 2, !dbg !4326
  call void @llvm.dbg.value(metadata i32 %7, metadata !4313, metadata !DIExpression()), !dbg !4318
  %8 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4327
  %9 = load i8, i8* %8, align 1, !dbg !4327
  %10 = zext i8 %9 to i32, !dbg !4327
  call void @llvm.dbg.value(metadata i32 %10, metadata !4314, metadata !DIExpression()), !dbg !4318
  %11 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4328
  %12 = load i8, i8* %11, align 1, !dbg !4328
  %13 = zext i8 %12 to i32, !dbg !4328
  call void @llvm.dbg.value(metadata i32 %13, metadata !4315, metadata !DIExpression()), !dbg !4318
  %14 = getelementptr inbounds i8, i8* %0, i32 %7, !dbg !4329
  call void @llvm.dbg.value(metadata i8* %14, metadata !4311, metadata !DIExpression()), !dbg !4318
  %15 = getelementptr inbounds i8, i8* %14, i32 %13, !dbg !4330
  call void @llvm.dbg.value(metadata i8* %15, metadata !4311, metadata !DIExpression()), !dbg !4318
  call void @llvm.dbg.value(metadata i32 0, metadata !4316, metadata !DIExpression()), !dbg !4331
  %16 = icmp eq i8 %9, 0, !dbg !4332
  br i1 %16, label %17, label %22, !dbg !4334

17:                                               ; preds = %22, %4
  %18 = phi i8* [ %15, %4 ], [ %28, %22 ], !dbg !4318
  %19 = ptrtoint i8* %18 to i32, !dbg !4335
  %20 = ptrtoint i8* %0 to i32, !dbg !4335
  %21 = sub i32 %19, %20, !dbg !4335
  ret i32 %21, !dbg !4336

22:                                               ; preds = %4, %22
  %23 = phi i32 [ %29, %22 ], [ 0, %4 ]
  %24 = phi i8* [ %28, %22 ], [ %15, %4 ]
  call void @llvm.dbg.value(metadata i32 %23, metadata !4316, metadata !DIExpression()), !dbg !4331
  call void @llvm.dbg.value(metadata i8* %24, metadata !4311, metadata !DIExpression()), !dbg !4318
  %25 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !4337
  call void @llvm.dbg.value(metadata i8* %25, metadata !4311, metadata !DIExpression()), !dbg !4318
  %26 = tail call i32 @strlen(i8* noundef nonnull %25) #25, !dbg !4339
  %27 = add i32 %26, 1, !dbg !4340
  %28 = getelementptr inbounds i8, i8* %25, i32 %27, !dbg !4341
  call void @llvm.dbg.value(metadata i8* %28, metadata !4311, metadata !DIExpression()), !dbg !4318
  %29 = add nuw nsw i32 %23, 1, !dbg !4342
  call void @llvm.dbg.value(metadata i32 %29, metadata !4316, metadata !DIExpression()), !dbg !4331
  %30 = icmp eq i32 %29, %10, !dbg !4332
  br i1 %30, label %17, label %22, !dbg !4334, !llvm.loop !4343
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !4345 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !4349, metadata !DIExpression()), !dbg !4353
  call void @llvm.dbg.value(metadata i8* %1, metadata !4350, metadata !DIExpression()), !dbg !4353
  call void @llvm.dbg.value(metadata i8* %2, metadata !4351, metadata !DIExpression()), !dbg !4353
  call void @llvm.dbg.value(metadata i16 %3, metadata !4352, metadata !DIExpression()), !dbg !4353
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !4354
  br i1 %5, label %6, label %9, !dbg !4356

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !4357
  %8 = add i32 %7, 1, !dbg !4359
  br label %20, !dbg !4360

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !4361
  br i1 %10, label %13, label %11, !dbg !4362

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !4362
  br label %16, !dbg !4362

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !4363
  %15 = add i32 %14, 1, !dbg !4364
  br label %16, !dbg !4362

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !4362
  %18 = and i32 %17, 65535, !dbg !4365
  call void @llvm.dbg.value(metadata i32 %17, metadata !4352, metadata !DIExpression()), !dbg !4353
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #25, !dbg !4366
  br label %20, !dbg !4367

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !4353
  ret i32 %21, !dbg !4368
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !4369 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4371, metadata !DIExpression()), !dbg !4372
  ret i32 0, !dbg !4373
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !4374 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !4378, metadata !DIExpression()), !dbg !4379
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !4380
  ret void, !dbg !4381
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #8 !dbg !4382 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !4385
  ret i8* %1, !dbg !4386
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !4387 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4398, metadata !DIExpression()), !dbg !4409
  call void @llvm.dbg.value(metadata i8* %0, metadata !4397, metadata !DIExpression()), !dbg !4409
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #24, !dbg !4410
  ret void, !dbg !4412
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !4413 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4417, metadata !DIExpression()), !dbg !4419
  call void @llvm.dbg.value(metadata i8* %1, metadata !4418, metadata !DIExpression()), !dbg !4419
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4420
  %4 = tail call i32 %3(i32 noundef %0) #25, !dbg !4420
  ret i32 %4, !dbg !4421
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !4422 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4429, metadata !DIExpression()), !dbg !4430
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4426, metadata !DIExpression()), !dbg !4430
  call void @llvm.dbg.value(metadata i8* %1, metadata !4427, metadata !DIExpression()), !dbg !4430
  call void @llvm.dbg.value(metadata i8* %2, metadata !4428, metadata !DIExpression()), !dbg !4430
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #25, !dbg !4431
  ret void, !dbg !4432
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !4433 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4437, metadata !DIExpression()), !dbg !4440
  call void @llvm.dbg.value(metadata i32 %1, metadata !4438, metadata !DIExpression()), !dbg !4440
  call void @llvm.dbg.value(metadata i32 0, metadata !4439, metadata !DIExpression()), !dbg !4440
  %3 = icmp eq i32 %1, 0, !dbg !4441
  br i1 %3, label %13, label %4, !dbg !4444

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !4439, metadata !DIExpression()), !dbg !4440
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4445
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !4447
  %8 = load i8, i8* %7, align 1, !dbg !4447
  %9 = zext i8 %8 to i32, !dbg !4447
  %10 = tail call i32 %6(i32 noundef %9) #25, !dbg !4445
  %11 = add nuw i32 %5, 1, !dbg !4448
  call void @llvm.dbg.value(metadata i32 %11, metadata !4439, metadata !DIExpression()), !dbg !4440
  %12 = icmp eq i32 %11, %1, !dbg !4441
  br i1 %12, label %13, label %4, !dbg !4444, !llvm.loop !4449

13:                                               ; preds = %4, %2
  ret void, !dbg !4451
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !4452 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4456, metadata !DIExpression()), !dbg !4458
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !4459
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4459
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !4457, metadata !DIExpression()), !dbg !4460
  call void @llvm.va_start(i8* nonnull %3), !dbg !4461
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !4462
  %5 = load i32, i32* %4, align 4, !dbg !4462
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !4462
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !4462
  call void @llvm.va_end(i8* nonnull %3), !dbg !4463
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4464
  ret void, !dbg !4464
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !4465 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4469, metadata !DIExpression()), !dbg !4474
  call void @llvm.dbg.value(metadata i32 %1, metadata !4470, metadata !DIExpression()), !dbg !4474
  call void @llvm.dbg.value(metadata i8* %2, metadata !4471, metadata !DIExpression()), !dbg !4474
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !4475
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4475
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !4472, metadata !DIExpression()), !dbg !4476
  call void @llvm.va_start(i8* nonnull %5), !dbg !4477
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !4478
  %7 = load i32, i32* %6, align 4, !dbg !4478
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !4478
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #24, !dbg !4478
  call void @llvm.dbg.value(metadata i32 %9, metadata !4473, metadata !DIExpression()), !dbg !4474
  call void @llvm.va_end(i8* nonnull %5), !dbg !4479
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4480
  ret i32 %9, !dbg !4481
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !4482 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !4489, metadata !DIExpression()), !dbg !4496
  call void @llvm.dbg.value(metadata i8* %0, metadata !4486, metadata !DIExpression()), !dbg !4496
  call void @llvm.dbg.value(metadata i32 %1, metadata !4487, metadata !DIExpression()), !dbg !4496
  call void @llvm.dbg.value(metadata i8* %2, metadata !4488, metadata !DIExpression()), !dbg !4496
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !4497
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4497
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !4490, metadata !DIExpression()), !dbg !4498
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !4499
  store i8* %0, i8** %7, align 4, !dbg !4499
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !4499
  store i32 %1, i32* %8, align 4, !dbg !4499
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !4499
  store i32 0, i32* %9, align 4, !dbg !4499
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #24, !dbg !4500
  %10 = load i32, i32* %9, align 4, !dbg !4501
  %11 = load i32, i32* %8, align 4, !dbg !4503
  %12 = icmp slt i32 %10, %11, !dbg !4504
  br i1 %12, label %13, label %15, !dbg !4505

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !4506
  store i8 0, i8* %14, align 1, !dbg !4508
  br label %15, !dbg !4509

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4510
  ret i32 %10, !dbg !4511
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #9 !dbg !4512 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4517, metadata !DIExpression()), !dbg !4519
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !4518, metadata !DIExpression()), !dbg !4519
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !4520
  %4 = load i8*, i8** %3, align 4, !dbg !4520
  %5 = icmp eq i8* %4, null, !dbg !4522
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !4523
  br i1 %5, label %12, label %8, !dbg !4524

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !4525
  %10 = load i32, i32* %9, align 4, !dbg !4525
  %11 = icmp slt i32 %7, %10, !dbg !4526
  br i1 %11, label %15, label %12, !dbg !4527

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !4528
  %14 = add nsw i32 %7, 1, !dbg !4530
  store i32 %14, i32* %13, align 4, !dbg !4530
  br label %25, !dbg !4531

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !4532
  %17 = icmp eq i32 %7, %16, !dbg !4534
  br i1 %17, label %18, label %21, !dbg !4535

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !4536
  store i32 %19, i32* %6, align 4, !dbg !4536
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4538
  store i8 0, i8* %20, align 1, !dbg !4539
  br label %25, !dbg !4540

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !4541
  %23 = add nsw i32 %7, 1, !dbg !4543
  store i32 %23, i32* %6, align 4, !dbg !4543
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4544
  store i8 %22, i8* %24, align 1, !dbg !4545
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !4546
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #10 !dbg !4547 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !4552, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i8* %1, metadata !4553, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i8* %2, metadata !4554, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i8* %3, metadata !4555, metadata !DIExpression()), !dbg !4556
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #25, !dbg !4557
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #26, !dbg !4558
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #24, !dbg !4559
  unreachable, !dbg !4560
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #11 !dbg !4561 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #26, !dbg !4668
  ret %struct.k_thread* %1, !dbg !4669
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !4670 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !4674, metadata !DIExpression()), !dbg !4675
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4676, !srcloc !4678
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !4679
  ret void, !dbg !4680
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #11 !dbg !4681 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4682, !srcloc !4684
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !4685
  ret %struct.k_thread* %1, !dbg !4686
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4687 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4700, metadata !DIExpression()), !dbg !4826
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4697, metadata !DIExpression()), !dbg !4826
  call void @llvm.dbg.value(metadata i8* %1, metadata !4698, metadata !DIExpression()), !dbg !4826
  call void @llvm.dbg.value(metadata i8* %2, metadata !4699, metadata !DIExpression()), !dbg !4826
  call void @llvm.dbg.value(metadata i32 %4, metadata !4701, metadata !DIExpression()), !dbg !4826
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4827
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #23, !dbg !4827
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4702, metadata !DIExpression()), !dbg !4828
  call void @llvm.dbg.value(metadata i32 0, metadata !4706, metadata !DIExpression()), !dbg !4826
  call void @llvm.dbg.value(metadata i1 undef, metadata !4708, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4826
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4829

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4829

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4830
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4700, metadata !DIExpression()), !dbg !4826
  call void @llvm.dbg.value(metadata i8* %30, metadata !4699, metadata !DIExpression()), !dbg !4826
  call void @llvm.dbg.value(metadata i32 %29, metadata !4706, metadata !DIExpression()), !dbg !4826
  %31 = load i8, i8* %30, align 1, !dbg !4831
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4829

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4831
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4832
  call void @llvm.dbg.value(metadata i8* %34, metadata !4699, metadata !DIExpression()), !dbg !4826
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #25, !dbg !4832
  call void @llvm.dbg.value(metadata i32 %35, metadata !4710, metadata !DIExpression()), !dbg !4833
  %36 = icmp slt i32 %35, 0, !dbg !4834
  %37 = add i32 %29, 1, !dbg !4832
  call void @llvm.dbg.value(metadata i32 undef, metadata !4706, metadata !DIExpression()), !dbg !4826
  br i1 %36, label %365, label %28, !llvm.loop !4836

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4838
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4715, metadata !DIExpression()), !dbg !4839
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4839
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4758, metadata !DIExpression()), !dbg !4840
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4761, metadata !DIExpression()), !dbg !4840
  call void @llvm.dbg.value(metadata i8* %30, metadata !4764, metadata !DIExpression()), !dbg !4840
  call void @llvm.dbg.value(metadata i32 -1, metadata !4765, metadata !DIExpression()), !dbg !4840
  call void @llvm.dbg.value(metadata i32 -1, metadata !4766, metadata !DIExpression()), !dbg !4840
  call void @llvm.dbg.value(metadata i8* null, metadata !4767, metadata !DIExpression()), !dbg !4840
  call void @llvm.dbg.value(metadata i8* %14, metadata !4768, metadata !DIExpression()), !dbg !4840
  call void @llvm.dbg.value(metadata i8 0, metadata !4769, metadata !DIExpression()), !dbg !4840
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #24, !dbg !4841
  call void @llvm.dbg.value(metadata i8* %39, metadata !4699, metadata !DIExpression()), !dbg !4826
  %40 = load i24, i24* %15, align 8, !dbg !4842
  %41 = and i24 %40, 256, !dbg !4842
  %42 = icmp eq i24 %41, 0, !dbg !4842
  br i1 %42, label %51, label %43, !dbg !4844

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4845
  call void @llvm.dbg.value(metadata i8* %44, metadata !4700, metadata !DIExpression()), !dbg !4826
  %45 = bitcast i8* %27 to i32*, !dbg !4845
  %46 = load i32, i32* %45, align 4, !dbg !4845
  call void @llvm.dbg.value(metadata i32 %46, metadata !4765, metadata !DIExpression()), !dbg !4840
  %47 = icmp slt i32 %46, 0, !dbg !4847
  br i1 %47, label %48, label %56, !dbg !4849

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4850
  store i24 %49, i24* %15, align 8, !dbg !4850
  %50 = sub nsw i32 0, %46, !dbg !4852
  call void @llvm.dbg.value(metadata i32 %50, metadata !4765, metadata !DIExpression()), !dbg !4840
  br label %56, !dbg !4853

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4854
  %53 = icmp eq i24 %52, 0, !dbg !4854
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4856
  br label %56, !dbg !4856

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4857
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4840
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4700, metadata !DIExpression()), !dbg !4826
  call void @llvm.dbg.value(metadata i32 %58, metadata !4765, metadata !DIExpression()), !dbg !4840
  %60 = and i24 %57, 1024, !dbg !4857
  %61 = icmp eq i24 %60, 0, !dbg !4857
  br i1 %61, label %69, label %62, !dbg !4858

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4859
  call void @llvm.dbg.value(metadata i8* %63, metadata !4700, metadata !DIExpression()), !dbg !4826
  %64 = bitcast i8* %59 to i32*, !dbg !4859
  %65 = load i32, i32* %64, align 4, !dbg !4859
  call void @llvm.dbg.value(metadata i32 %65, metadata !4770, metadata !DIExpression()), !dbg !4860
  %66 = icmp slt i32 %65, 0, !dbg !4861
  br i1 %66, label %67, label %74, !dbg !4863

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4864
  store i24 %68, i24* %15, align 8, !dbg !4864
  br label %74, !dbg !4866

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4867
  %71 = icmp eq i24 %70, 0, !dbg !4867
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4869
  br label %74, !dbg !4869

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4870
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4840
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4840
  call void @llvm.dbg.value(metadata i8* %77, metadata !4700, metadata !DIExpression()), !dbg !4826
  call void @llvm.dbg.value(metadata i32 %76, metadata !4766, metadata !DIExpression()), !dbg !4840
  store i32 0, i32* %16, align 4, !dbg !4871
  store i32 0, i32* %17, align 8, !dbg !4872
  %78 = lshr i24 %75, 16, !dbg !4870
  call void @llvm.dbg.value(metadata i24 %78, metadata !4773, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4840
  %79 = lshr i24 %75, 11, !dbg !4873
  %80 = and i24 %79, 15, !dbg !4873
  %81 = zext i24 %80 to i32, !dbg !4873
  call void @llvm.dbg.value(metadata i32 %81, metadata !4774, metadata !DIExpression()), !dbg !4840
  %82 = trunc i24 %78 to i3, !dbg !4874
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4874

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4875

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4878
  call void @llvm.dbg.value(metadata i8* %85, metadata !4700, metadata !DIExpression()), !dbg !4826
  %86 = bitcast i8* %77 to i32*, !dbg !4878
  %87 = load i32, i32* %86, align 4, !dbg !4878
  %88 = sext i32 %87 to i64, !dbg !4878
  store i64 %88, i64* %20, align 8, !dbg !4880
  br label %115, !dbg !4881

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4882
  call void @llvm.dbg.value(metadata i8* %90, metadata !4700, metadata !DIExpression()), !dbg !4826
  %91 = bitcast i8* %77 to i32*, !dbg !4882
  %92 = load i32, i32* %91, align 4, !dbg !4882
  %93 = sext i32 %92 to i64, !dbg !4882
  store i64 %93, i64* %20, align 8, !dbg !4885
  br label %115, !dbg !4886

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4887
  %96 = add i32 %95, 7, !dbg !4887
  %97 = and i32 %96, -8, !dbg !4887
  %98 = inttoptr i32 %97 to i8*, !dbg !4887
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4887
  call void @llvm.dbg.value(metadata i8* %99, metadata !4700, metadata !DIExpression()), !dbg !4826
  %100 = inttoptr i32 %97 to i64*, !dbg !4887
  %101 = load i64, i64* %100, align 8, !dbg !4887
  store i64 %101, i64* %20, align 8, !dbg !4888
  br label %115, !dbg !4889

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4890
  %104 = add i32 %103, 7, !dbg !4890
  %105 = and i32 %104, -8, !dbg !4890
  %106 = inttoptr i32 %105 to i8*, !dbg !4890
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4890
  call void @llvm.dbg.value(metadata i8* %107, metadata !4700, metadata !DIExpression()), !dbg !4826
  %108 = inttoptr i32 %105 to i64*, !dbg !4890
  %109 = load i64, i64* %108, align 8, !dbg !4890
  store i64 %109, i64* %20, align 8, !dbg !4891
  br label %115, !dbg !4892

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4893
  call void @llvm.dbg.value(metadata i8* %111, metadata !4700, metadata !DIExpression()), !dbg !4826
  %112 = bitcast i8* %77 to i32*, !dbg !4893
  %113 = load i32, i32* %112, align 4, !dbg !4893
  %114 = sext i32 %113 to i64, !dbg !4894
  store i64 %114, i64* %20, align 8, !dbg !4895
  br label %115, !dbg !4896

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4897
  call void @llvm.dbg.value(metadata i8* %117, metadata !4700, metadata !DIExpression()), !dbg !4826
  %118 = trunc i24 %79 to i4, !dbg !4898
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4898

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4899
  %121 = ashr exact i64 %120, 56, !dbg !4899
  store i64 %121, i64* %20, align 8, !dbg !4902
  br label %177, !dbg !4903

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4904
  %124 = ashr exact i64 %123, 48, !dbg !4904
  store i64 %124, i64* %20, align 8, !dbg !4907
  br label %177, !dbg !4908

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4909

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4912
  call void @llvm.dbg.value(metadata i8* %127, metadata !4700, metadata !DIExpression()), !dbg !4826
  %128 = bitcast i8* %77 to i32*, !dbg !4912
  %129 = load i32, i32* %128, align 4, !dbg !4912
  %130 = zext i32 %129 to i64, !dbg !4912
  store i64 %130, i64* %20, align 8, !dbg !4914
  br label %157, !dbg !4915

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4916
  call void @llvm.dbg.value(metadata i8* %132, metadata !4700, metadata !DIExpression()), !dbg !4826
  call void @llvm.dbg.value(metadata i8* %132, metadata !4700, metadata !DIExpression()), !dbg !4826
  %133 = bitcast i8* %77 to i32*, !dbg !4916
  %134 = load i32, i32* %133, align 4, !dbg !4916
  %135 = zext i32 %134 to i64, !dbg !4916
  store i64 %135, i64* %20, align 8, !dbg !4916
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4918
  %138 = add i32 %137, 7, !dbg !4918
  %139 = and i32 %138, -8, !dbg !4918
  %140 = inttoptr i32 %139 to i8*, !dbg !4918
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4918
  call void @llvm.dbg.value(metadata i8* %141, metadata !4700, metadata !DIExpression()), !dbg !4826
  %142 = inttoptr i32 %139 to i64*, !dbg !4918
  %143 = load i64, i64* %142, align 8, !dbg !4918
  store i64 %143, i64* %20, align 8, !dbg !4919
  br label %157, !dbg !4920

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4921
  %146 = add i32 %145, 7, !dbg !4921
  %147 = and i32 %146, -8, !dbg !4921
  %148 = inttoptr i32 %147 to i8*, !dbg !4921
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4921
  call void @llvm.dbg.value(metadata i8* %149, metadata !4700, metadata !DIExpression()), !dbg !4826
  %150 = inttoptr i32 %147 to i64*, !dbg !4921
  %151 = load i64, i64* %150, align 8, !dbg !4921
  store i64 %151, i64* %20, align 8, !dbg !4922
  br label %157, !dbg !4923

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4924
  call void @llvm.dbg.value(metadata i8* %153, metadata !4700, metadata !DIExpression()), !dbg !4826
  %154 = bitcast i8* %77 to i32*, !dbg !4924
  %155 = load i32, i32* %154, align 4, !dbg !4924
  %156 = zext i32 %155 to i64, !dbg !4925
  store i64 %156, i64* %20, align 8, !dbg !4926
  br label %157, !dbg !4927

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4928
  call void @llvm.dbg.value(metadata i8* %159, metadata !4700, metadata !DIExpression()), !dbg !4826
  %160 = trunc i24 %79 to i4, !dbg !4929
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4929

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4930
  store i64 %162, i64* %20, align 8, !dbg !4933
  br label %177, !dbg !4934

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4935
  store i64 %164, i64* %20, align 8, !dbg !4938
  br label %177, !dbg !4939

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4940
  %167 = add i32 %166, 7, !dbg !4940
  %168 = and i32 %167, -8, !dbg !4940
  %169 = inttoptr i32 %168 to i8*, !dbg !4940
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4940
  call void @llvm.dbg.value(metadata i8* %170, metadata !4700, metadata !DIExpression()), !dbg !4826
  call void @llvm.dbg.value(metadata i8* %170, metadata !4700, metadata !DIExpression()), !dbg !4826
  %171 = inttoptr i32 %168 to double*, !dbg !4940
  %172 = load double, double* %171, align 8, !dbg !4940
  store double %172, double* %19, align 8, !dbg !4940
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4944
  call void @llvm.dbg.value(metadata i8* %174, metadata !4700, metadata !DIExpression()), !dbg !4826
  %175 = bitcast i8* %77 to i8**, !dbg !4944
  %176 = load i8*, i8** %175, align 4, !dbg !4944
  store i8* %176, i8** %18, align 8, !dbg !4947
  br label %177, !dbg !4948

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4840
  call void @llvm.dbg.value(metadata i8* %178, metadata !4700, metadata !DIExpression()), !dbg !4826
  %179 = and i24 %75, 3, !dbg !4949
  %180 = icmp eq i24 %179, 0, !dbg !4949
  br i1 %180, label %185, label %181, !dbg !4949

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #24, !dbg !4950
  call void @llvm.dbg.value(metadata i32 %182, metadata !4775, metadata !DIExpression()), !dbg !4951
  %183 = icmp slt i32 %182, 0, !dbg !4952
  %184 = add i32 %182, %29, !dbg !4950
  call void @llvm.dbg.value(metadata i32 undef, metadata !4706, metadata !DIExpression()), !dbg !4826
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4954
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4955

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #25, !dbg !4956
  call void @llvm.dbg.value(metadata i32 %188, metadata !4779, metadata !DIExpression()), !dbg !4957
  %189 = icmp slt i32 %188, 0, !dbg !4958
  %190 = add i32 %29, 1, !dbg !4956
  call void @llvm.dbg.value(metadata i32 undef, metadata !4706, metadata !DIExpression()), !dbg !4826
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4960
  call void @llvm.dbg.value(metadata i8* %192, metadata !4767, metadata !DIExpression()), !dbg !4840
  %193 = icmp sgt i32 %76, -1, !dbg !4961
  br i1 %193, label %194, label %196, !dbg !4963

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #25, !dbg !4964
  call void @llvm.dbg.value(metadata i32 %195, metadata !4782, metadata !DIExpression()), !dbg !4966
  br label %241, !dbg !4967

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #25, !dbg !4968
  call void @llvm.dbg.value(metadata i32 %197, metadata !4782, metadata !DIExpression()), !dbg !4966
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4767, metadata !DIExpression()), !dbg !4840
  %199 = load i64, i64* %20, align 8, !dbg !4970
  %200 = trunc i64 %199 to i8, !dbg !4971
  store i8 %200, i8* %10, align 1, !dbg !4972
  call void @llvm.dbg.value(metadata i8* %23, metadata !4768, metadata !DIExpression()), !dbg !4840
  br label %245, !dbg !4973

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4974
  %203 = icmp eq i24 %202, 0, !dbg !4974
  %204 = trunc i24 %75 to i8, !dbg !4976
  %205 = shl i8 %204, 1, !dbg !4976
  %206 = and i8 %205, 32, !dbg !4976
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4976
  call void @llvm.dbg.value(metadata i8 %207, metadata !4769, metadata !DIExpression()), !dbg !4840
  %208 = load i64, i64* %20, align 8, !dbg !4977
  call void @llvm.dbg.value(metadata i64 %208, metadata !4707, metadata !DIExpression()), !dbg !4826
  %209 = icmp slt i64 %208, 0, !dbg !4978
  br i1 %209, label %210, label %212, !dbg !4980

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4769, metadata !DIExpression()), !dbg !4840
  %211 = sub nsw i64 0, %208, !dbg !4981
  store i64 %211, i64* %20, align 8, !dbg !4983
  br label %212, !dbg !4984

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4840
  call void @llvm.dbg.value(metadata i8 %213, metadata !4769, metadata !DIExpression()), !dbg !4840
  %214 = load i64, i64* %20, align 8, !dbg !4985
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !4986
  call void @llvm.dbg.value(metadata i8* %215, metadata !4767, metadata !DIExpression()), !dbg !4840
  br label %216, !dbg !4987

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4988
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4989
  call void @llvm.dbg.value(metadata i8* %218, metadata !4767, metadata !DIExpression()), !dbg !4840
  call void @llvm.dbg.value(metadata i8 %217, metadata !4769, metadata !DIExpression()), !dbg !4840
  call void @llvm.dbg.label(metadata !4825), !dbg !4990
  %219 = icmp sgt i32 %76, -1, !dbg !4991
  br i1 %219, label %222, label %220, !dbg !4992

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4993
  br label %245, !dbg !4992

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4995
  %224 = sub i32 %22, %223, !dbg !4995
  call void @llvm.dbg.value(metadata i32 %224, metadata !4784, metadata !DIExpression()), !dbg !4996
  %225 = load i24, i24* %15, align 8, !dbg !4997
  %226 = and i24 %225, -65, !dbg !4997
  store i24 %226, i24* %15, align 8, !dbg !4997
  %227 = icmp ugt i32 %76, %224, !dbg !4998
  br i1 %227, label %228, label %245, !dbg !5000

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !5001
  store i32 %229, i32* %16, align 4, !dbg !5003
  br label %245, !dbg !5004

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !5005
  %232 = icmp eq i8* %231, null, !dbg !5007
  br i1 %232, label %245, label %233, !dbg !5008

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !5009
  %235 = zext i32 %234 to i64, !dbg !5009
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !5011
  call void @llvm.dbg.value(metadata i8* %236, metadata !4767, metadata !DIExpression()), !dbg !4840
  %237 = load i24, i24* %15, align 8, !dbg !5012
  %238 = or i24 %237, 1048576, !dbg !5012
  store i24 %238, i24* %15, align 8, !dbg !5012
  store i8 120, i8* %21, align 1, !dbg !5013
  br label %216, !dbg !5014

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !5015
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #24, !dbg !5018
  br label %363, !dbg !5019

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !5020
  call void @llvm.dbg.value(metadata i32 %242, metadata !4782, metadata !DIExpression()), !dbg !4966
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !5021
  call void @llvm.dbg.value(metadata i32 -1, metadata !4766, metadata !DIExpression()), !dbg !4840
  call void @llvm.dbg.value(metadata i32 %29, metadata !4706, metadata !DIExpression()), !dbg !4826
  call void @llvm.dbg.value(metadata i8* %192, metadata !4767, metadata !DIExpression()), !dbg !4840
  call void @llvm.dbg.value(metadata i8* %243, metadata !4768, metadata !DIExpression()), !dbg !4840
  call void @llvm.dbg.value(metadata i8 0, metadata !4769, metadata !DIExpression()), !dbg !4840
  %244 = icmp eq i8* %192, null, !dbg !5022
  br i1 %244, label %363, label %245, !dbg !5024, !llvm.loop !4836

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4993
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4787, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4840
  call void @llvm.dbg.value(metadata i32 0, metadata !4788, metadata !DIExpression()), !dbg !4840
  %250 = zext i8 %249 to i32, !dbg !5025
  %251 = icmp eq i8 %249, 0, !dbg !5027
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4787, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4840
  call void @llvm.dbg.value(metadata i32 undef, metadata !4787, metadata !DIExpression()), !dbg !4840
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4787, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4840
  call void @llvm.dbg.value(metadata i32 undef, metadata !4787, metadata !DIExpression()), !dbg !4840
  %252 = icmp sgt i32 %58, 0, !dbg !5028
  br i1 %252, label %253, label %302, !dbg !5029

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4993
  %255 = icmp eq i24 %254, 0, !dbg !4993
  %256 = ptrtoint i8* %248 to i32, !dbg !5030
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4787, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4840
  %257 = ptrtoint i8* %247 to i32, !dbg !5030
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4787, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4840
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4787, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4840
  %258 = xor i1 %251, true, !dbg !5031
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4787, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4840
  %259 = sext i1 %258 to i32, !dbg !5031
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4787, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4840
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4787, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4840
  %260 = lshr i24 %246, 19, !dbg !5032
  %261 = and i24 %260, 1, !dbg !5032
  %262 = select i1 %255, i24 %261, i24 2, !dbg !5032
  %263 = zext i24 %262 to i32, !dbg !5032
  %264 = add i32 %257, %259, !dbg !5032
  %265 = add i32 %256, %263, !dbg !5032
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4787, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4840
  %266 = and i24 %246, 4194304, !dbg !5033
  %267 = icmp eq i24 %266, 0, !dbg !5033
  %268 = load i32, i32* %16, align 4, !dbg !5035
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4787, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4840
  call void @llvm.dbg.value(metadata i32 undef, metadata !4787, metadata !DIExpression()), !dbg !4840
  %269 = load i32, i32* %17, align 8, !dbg !5036
  %270 = select i1 %267, i32 0, i32 %269, !dbg !5036
  call void @llvm.dbg.value(metadata i32 undef, metadata !4787, metadata !DIExpression()), !dbg !4840
  %271 = add i32 %264, %58, !dbg !5036
  %272 = add i32 %265, %268, !dbg !5036
  %273 = add i32 %272, %270, !dbg !5037
  %274 = sub i32 %271, %273, !dbg !5037
  call void @llvm.dbg.value(metadata i32 %274, metadata !4765, metadata !DIExpression()), !dbg !4840
  %275 = and i24 %246, 4, !dbg !5038
  %276 = icmp eq i24 %275, 0, !dbg !5038
  br i1 %276, label %277, label %302, !dbg !5039

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4789, metadata !DIExpression()), !dbg !5040
  %278 = and i24 %246, 64, !dbg !5041
  %279 = icmp eq i24 %278, 0, !dbg !5041
  %280 = select i1 %279, i1 true, i1 %251, !dbg !5042
  %281 = select i1 %279, i8 %249, i8 0, !dbg !5042
  %282 = select i1 %279, i32 32, i32 48, !dbg !5042
  br i1 %280, label %287, label %283, !dbg !5042

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #25, !dbg !5043
  call void @llvm.dbg.value(metadata i32 %284, metadata !4794, metadata !DIExpression()), !dbg !5044
  %285 = icmp slt i32 %284, 0, !dbg !5045
  %286 = add i32 %29, 1, !dbg !5043
  call void @llvm.dbg.value(metadata i32 undef, metadata !4706, metadata !DIExpression()), !dbg !4826
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4840
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4830
  call void @llvm.dbg.value(metadata i32 %290, metadata !4706, metadata !DIExpression()), !dbg !4826
  call void @llvm.dbg.value(metadata i8 undef, metadata !4789, metadata !DIExpression()), !dbg !5040
  call void @llvm.dbg.value(metadata i8 %288, metadata !4769, metadata !DIExpression()), !dbg !4840
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !5047
  %292 = add i32 %291, -1, !dbg !5047
  br label %293, !dbg !5047

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !5048
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4830
  call void @llvm.dbg.value(metadata i32 %295, metadata !4706, metadata !DIExpression()), !dbg !4826
  call void @llvm.dbg.value(metadata i32 %294, metadata !4765, metadata !DIExpression()), !dbg !4840
  call void @llvm.dbg.value(metadata i32 %294, metadata !4765, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4840
  %296 = icmp sgt i32 %294, 0, !dbg !5049
  br i1 %296, label %297, label %302, !dbg !5047

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !5050
  call void @llvm.dbg.value(metadata i32 %298, metadata !4765, metadata !DIExpression()), !dbg !4840
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #25, !dbg !5051
  call void @llvm.dbg.value(metadata i32 %299, metadata !4800, metadata !DIExpression()), !dbg !5052
  %300 = icmp slt i32 %299, 0, !dbg !5053
  %301 = add i32 %295, 1, !dbg !5051
  call void @llvm.dbg.value(metadata i32 undef, metadata !4706, metadata !DIExpression()), !dbg !4826
  br i1 %300, label %361, label %293, !llvm.loop !5055

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4840
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4840
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4830
  call void @llvm.dbg.value(metadata i32 %305, metadata !4706, metadata !DIExpression()), !dbg !4826
  call void @llvm.dbg.value(metadata i32 %304, metadata !4765, metadata !DIExpression()), !dbg !4840
  call void @llvm.dbg.value(metadata i8 %303, metadata !4769, metadata !DIExpression()), !dbg !4840
  %306 = icmp eq i8 %303, 0, !dbg !5057
  br i1 %306, label %312, label %307, !dbg !5058

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !5059
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #25, !dbg !5060
  call void @llvm.dbg.value(metadata i32 %309, metadata !4803, metadata !DIExpression()), !dbg !5061
  %310 = icmp slt i32 %309, 0, !dbg !5062
  %311 = add i32 %305, 1, !dbg !5060
  call void @llvm.dbg.value(metadata i32 undef, metadata !4706, metadata !DIExpression()), !dbg !4826
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4830
  call void @llvm.dbg.value(metadata i32 %313, metadata !4706, metadata !DIExpression()), !dbg !4826
  %314 = lshr i24 %246, 20, !dbg !5064
  %315 = lshr i24 %246, 19, !dbg !5065
  %316 = or i24 %314, %315, !dbg !5066
  %317 = and i24 %316, 1, !dbg !5066
  %318 = icmp eq i24 %317, 0, !dbg !5066
  br i1 %318, label %323, label %319, !dbg !5067

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !5068
  call void @llvm.dbg.value(metadata i32 %320, metadata !4807, metadata !DIExpression()), !dbg !5069
  %321 = icmp slt i32 %320, 0, !dbg !5070
  %322 = add i32 %313, 1, !dbg !5068
  call void @llvm.dbg.value(metadata i32 undef, metadata !4706, metadata !DIExpression()), !dbg !4826
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4830
  call void @llvm.dbg.value(metadata i32 %324, metadata !4706, metadata !DIExpression()), !dbg !4826
  %325 = and i24 %246, 1048576, !dbg !5072
  %326 = icmp eq i24 %325, 0, !dbg !5072
  br i1 %326, label %333, label %327, !dbg !5073

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !5074
  %329 = zext i8 %328 to i32, !dbg !5074
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #25, !dbg !5074
  call void @llvm.dbg.value(metadata i32 %330, metadata !4813, metadata !DIExpression()), !dbg !5075
  %331 = icmp slt i32 %330, 0, !dbg !5076
  %332 = add i32 %324, 1, !dbg !5074
  call void @llvm.dbg.value(metadata i32 undef, metadata !4706, metadata !DIExpression()), !dbg !4826
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4830
  call void @llvm.dbg.value(metadata i32 %334, metadata !4706, metadata !DIExpression()), !dbg !4826
  %335 = load i32, i32* %16, align 4, !dbg !5078
  call void @llvm.dbg.value(metadata i32 %335, metadata !4788, metadata !DIExpression()), !dbg !4840
  br label %336, !dbg !5079

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !5080
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4830
  call void @llvm.dbg.value(metadata i32 %338, metadata !4706, metadata !DIExpression()), !dbg !4826
  call void @llvm.dbg.value(metadata i32 %337, metadata !4788, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4840
  %339 = icmp sgt i32 %337, 0, !dbg !5081
  br i1 %339, label %340, label %345, !dbg !5079

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !5082
  call void @llvm.dbg.value(metadata i32 %341, metadata !4788, metadata !DIExpression()), !dbg !4840
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !5083
  call void @llvm.dbg.value(metadata i32 %342, metadata !4817, metadata !DIExpression()), !dbg !5084
  %343 = icmp slt i32 %342, 0, !dbg !5085
  %344 = add i32 %338, 1, !dbg !5083
  call void @llvm.dbg.value(metadata i32 undef, metadata !4706, metadata !DIExpression()), !dbg !4826
  br i1 %343, label %361, label %336, !llvm.loop !5087

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #24, !dbg !5089
  call void @llvm.dbg.value(metadata i32 %346, metadata !4820, metadata !DIExpression()), !dbg !5090
  %347 = icmp slt i32 %346, 0, !dbg !5091
  call void @llvm.dbg.value(metadata i32 undef, metadata !4706, metadata !DIExpression()), !dbg !4826
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !5089
  call void @llvm.dbg.value(metadata i32 %349, metadata !4706, metadata !DIExpression()), !dbg !4826
  call void @llvm.dbg.value(metadata i32 %304, metadata !4765, metadata !DIExpression()), !dbg !4840
  %350 = icmp sgt i32 %304, 0, !dbg !5093
  br i1 %350, label %351, label %363, !dbg !5094

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !5094
  %353 = add i32 %352, %338, !dbg !5094
  br label %354, !dbg !5094

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4706, metadata !DIExpression()), !dbg !4826
  call void @llvm.dbg.value(metadata i32 %355, metadata !4765, metadata !DIExpression()), !dbg !4840
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #25, !dbg !5095
  call void @llvm.dbg.value(metadata i32 %356, metadata !4822, metadata !DIExpression()), !dbg !5096
  %357 = icmp slt i32 %356, 0, !dbg !5097
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !5099
  call void @llvm.dbg.value(metadata i32 undef, metadata !4706, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4826
  call void @llvm.dbg.value(metadata i32 %359, metadata !4765, metadata !DIExpression()), !dbg !4840
  %360 = icmp sgt i32 %355, 1, !dbg !5093
  br i1 %360, label %354, label %363, !dbg !5094, !llvm.loop !5100

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4706, metadata !DIExpression()), !dbg !4826
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4837
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4830
  call void @llvm.dbg.value(metadata i32 %364, metadata !4706, metadata !DIExpression()), !dbg !4826
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4837
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4826
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #23, !dbg !5102
  ret i32 %366, !dbg !5102
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #12

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5103 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5107, metadata !DIExpression()), !dbg !5109
  call void @llvm.dbg.value(metadata i8* %1, metadata !5108, metadata !DIExpression()), !dbg !5109
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !5110
  store i24 0, i24* %3, align 4, !dbg !5110
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5110
  store i8 0, i8* %4, align 1, !dbg !5110
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5110
  store i32 0, i32* %5, align 4, !dbg !5110
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5110
  store i32 0, i32* %6, align 4, !dbg !5110
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5111
  call void @llvm.dbg.value(metadata i8* %7, metadata !5108, metadata !DIExpression()), !dbg !5109
  %8 = load i8, i8* %7, align 1, !dbg !5112
  %9 = icmp eq i8 %8, 37, !dbg !5114
  br i1 %9, label %10, label %12, !dbg !5115

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5116
  call void @llvm.dbg.value(metadata i8* %11, metadata !5108, metadata !DIExpression()), !dbg !5109
  store i8 37, i8* %4, align 1, !dbg !5118
  br label %18, !dbg !5119

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #24, !dbg !5120
  call void @llvm.dbg.value(metadata i8* %13, metadata !5108, metadata !DIExpression()), !dbg !5109
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #24, !dbg !5121
  call void @llvm.dbg.value(metadata i8* %14, metadata !5108, metadata !DIExpression()), !dbg !5109
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #24, !dbg !5122
  call void @llvm.dbg.value(metadata i8* %15, metadata !5108, metadata !DIExpression()), !dbg !5109
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #24, !dbg !5123
  call void @llvm.dbg.value(metadata i8* %16, metadata !5108, metadata !DIExpression()), !dbg !5109
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #24, !dbg !5124
  call void @llvm.dbg.value(metadata i8* %17, metadata !5108, metadata !DIExpression()), !dbg !5109
  br label %18, !dbg !5125

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !5109
  ret i8* %19, !dbg !5126
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !5127 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5131, metadata !DIExpression()), !dbg !5138
  call void @llvm.dbg.value(metadata i8* %1, metadata !5132, metadata !DIExpression()), !dbg !5138
  call void @llvm.dbg.value(metadata i8* %2, metadata !5133, metadata !DIExpression()), !dbg !5138
  call void @llvm.dbg.value(metadata i8* %3, metadata !5134, metadata !DIExpression()), !dbg !5138
  call void @llvm.dbg.value(metadata i32 0, metadata !5135, metadata !DIExpression()), !dbg !5138
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !5139

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !5140
  call void @llvm.dbg.value(metadata i32 %9, metadata !5135, metadata !DIExpression()), !dbg !5138
  call void @llvm.dbg.value(metadata i8* %8, metadata !5133, metadata !DIExpression()), !dbg !5138
  %10 = icmp ult i8* %8, %3, !dbg !5141
  br i1 %10, label %11, label %13, !dbg !5142

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !5143
  br label %17, !dbg !5142

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !5144

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !5145
  %16 = icmp eq i8 %15, 0, !dbg !5144
  br i1 %16, label %24, label %17, !dbg !5139

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !5143
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5146
  call void @llvm.dbg.value(metadata i8* %19, metadata !5133, metadata !DIExpression()), !dbg !5138
  %20 = zext i8 %18 to i32, !dbg !5147
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #25, !dbg !5148
  call void @llvm.dbg.value(metadata i32 %21, metadata !5136, metadata !DIExpression()), !dbg !5149
  %22 = icmp slt i32 %21, 0, !dbg !5150
  %23 = add i32 %9, 1, !dbg !5152
  call void @llvm.dbg.value(metadata i32 undef, metadata !5135, metadata !DIExpression()), !dbg !5138
  br i1 %22, label %24, label %7, !llvm.loop !5153

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !5138
  ret i32 %25, !dbg !5155
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #13 !dbg !5156 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !5160, metadata !DIExpression()), !dbg !5170
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !5161, metadata !DIExpression()), !dbg !5170
  call void @llvm.dbg.value(metadata i8* %2, metadata !5162, metadata !DIExpression()), !dbg !5170
  call void @llvm.dbg.value(metadata i8* %3, metadata !5163, metadata !DIExpression()), !dbg !5170
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !5171
  %6 = load i8, i8* %5, align 1, !dbg !5171
  %7 = zext i8 %6 to i32, !dbg !5172
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #24, !dbg !5173
  %9 = icmp eq i32 %8, 0, !dbg !5173
  call void @llvm.dbg.value(metadata i1 %9, metadata !5164, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5170
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #24, !dbg !5174
  call void @llvm.dbg.value(metadata i32 %10, metadata !5165, metadata !DIExpression()), !dbg !5170
  %11 = ptrtoint i8* %3 to i32, !dbg !5175
  %12 = ptrtoint i8* %2 to i32, !dbg !5175
  %13 = sub i32 %11, %12, !dbg !5175
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !5176
  call void @llvm.dbg.value(metadata i8* %14, metadata !5167, metadata !DIExpression()), !dbg !5170
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !5177

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !5170
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !5160, metadata !DIExpression()), !dbg !5170
  call void @llvm.dbg.value(metadata i8* %18, metadata !5167, metadata !DIExpression()), !dbg !5170
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !5178
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !5179
  call void @llvm.dbg.value(metadata i32 %25, metadata !5168, metadata !DIExpression()), !dbg !5180
  %26 = icmp ult i32 %25, 10, !dbg !5181
  %27 = select i1 %26, i32 48, i32 %16, !dbg !5182
  %28 = add i32 %27, %25, !dbg !5180
  %29 = trunc i32 %28 to i8, !dbg !5182
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !5183
  call void @llvm.dbg.value(metadata i8* %30, metadata !5167, metadata !DIExpression()), !dbg !5170
  store i8 %29, i8* %30, align 1, !dbg !5184
  call void @llvm.dbg.value(metadata i64 %22, metadata !5160, metadata !DIExpression()), !dbg !5170
  %31 = icmp uge i64 %19, %15, !dbg !5185
  %32 = icmp ugt i8* %30, %2, !dbg !5186
  %33 = and i1 %31, %32, !dbg !5186
  br i1 %33, label %17, label %34, !dbg !5187, !llvm.loop !5188

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !5190
  %36 = load i24, i24* %35, align 4, !dbg !5190
  %37 = and i24 %36, 32, !dbg !5190
  %38 = icmp eq i24 %37, 0, !dbg !5190
  br i1 %38, label %44, label %39, !dbg !5192

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !5193

40:                                               ; preds = %39
  br label %41, !dbg !5195

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !5199
  store i24 %43, i24* %35, align 4, !dbg !5199
  br label %44, !dbg !5200

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !5200
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #9 !dbg !5201 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5207, metadata !DIExpression()), !dbg !5210
  call void @llvm.dbg.value(metadata i8* %1, metadata !5208, metadata !DIExpression()), !dbg !5210
  call void @llvm.dbg.value(metadata i32 %2, metadata !5209, metadata !DIExpression()), !dbg !5210
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5211
  %5 = load i24, i24* %4, align 4, !dbg !5211
  %6 = lshr i24 %5, 11, !dbg !5211
  %7 = and i24 %6, 15, !dbg !5211
  %8 = zext i24 %7 to i32, !dbg !5211
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !5212

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !5213
  store i32 %2, i32* %10, align 4, !dbg !5215
  br label %28, !dbg !5216

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !5217
  store i8 %12, i8* %1, align 1, !dbg !5218
  br label %28, !dbg !5219

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !5220
  %15 = bitcast i8* %1 to i16*, !dbg !5221
  store i16 %14, i16* %15, align 2, !dbg !5222
  br label %28, !dbg !5223

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !5224
  store i32 %2, i32* %17, align 4, !dbg !5225
  br label %28, !dbg !5226

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !5227
  %20 = bitcast i8* %1 to i64*, !dbg !5228
  store i64 %19, i64* %20, align 8, !dbg !5229
  br label %28, !dbg !5230

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5231
  %23 = bitcast i8* %1 to i64*, !dbg !5232
  store i64 %22, i64* %23, align 8, !dbg !5233
  br label %28, !dbg !5234

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5235
  store i32 %2, i32* %25, align 4, !dbg !5236
  br label %28, !dbg !5237

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5238
  store i32 %2, i32* %27, align 4, !dbg !5239
  br label %28, !dbg !5240

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5241
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #3 !dbg !5242 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5245, metadata !DIExpression()), !dbg !5246
  %2 = add i32 %0, -65, !dbg !5247
  %3 = icmp ult i32 %2, 26, !dbg !5248
  %4 = zext i1 %3 to i32, !dbg !5248
  ret i32 %4, !dbg !5249
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #3 !dbg !5250 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5254, metadata !DIExpression()), !dbg !5255
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5256

2:                                                ; preds = %1
  br label %4, !dbg !5257

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5259

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5260
  ret i32 %5, !dbg !5261
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #13 !dbg !5262 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5264, metadata !DIExpression()), !dbg !5267
  call void @llvm.dbg.value(metadata i8* %1, metadata !5265, metadata !DIExpression()), !dbg !5267
  call void @llvm.dbg.value(metadata i8 1, metadata !5266, metadata !DIExpression()), !dbg !5267
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5268

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5266, metadata !DIExpression()), !dbg !5267
  call void @llvm.dbg.value(metadata i8* %5, metadata !5265, metadata !DIExpression()), !dbg !5267
  %6 = load i8, i8* %5, align 1, !dbg !5269
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5271

7:                                                ; preds = %4
  br label %11, !dbg !5272

8:                                                ; preds = %4
  br label %11, !dbg !5274

9:                                                ; preds = %4
  br label %11, !dbg !5275

10:                                               ; preds = %4
  br label %11, !dbg !5276

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5277
  %14 = or i24 %13, %12, !dbg !5277
  store i24 %14, i24* %3, align 4, !dbg !5277
  call void @llvm.dbg.value(metadata i8 poison, metadata !5266, metadata !DIExpression()), !dbg !5267
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5265, metadata !DIExpression()), !dbg !5267
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5266, metadata !DIExpression()), !dbg !5267
  call void @llvm.dbg.value(metadata i8* %15, metadata !5265, metadata !DIExpression()), !dbg !5267
  %17 = load i24, i24* %3, align 4, !dbg !5278
  %18 = and i24 %17, 68, !dbg !5280
  %19 = icmp eq i24 %18, 68, !dbg !5280
  br i1 %19, label %20, label %22, !dbg !5280

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5281
  store i24 %21, i24* %3, align 4, !dbg !5281
  br label %22, !dbg !5283

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5284
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5285 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5287, metadata !DIExpression()), !dbg !5291
  call void @llvm.dbg.value(metadata i8* %1, metadata !5288, metadata !DIExpression()), !dbg !5291
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5292
  %5 = load i24, i24* %4, align 4, !dbg !5293
  %6 = or i24 %5, 128, !dbg !5293
  store i24 %6, i24* %4, align 4, !dbg !5293
  call void @llvm.dbg.value(metadata i8* %1, metadata !5288, metadata !DIExpression()), !dbg !5291
  %7 = load i8, i8* %1, align 1, !dbg !5294
  %8 = icmp eq i8 %7, 42, !dbg !5296
  br i1 %8, label %9, label %12, !dbg !5297

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5298
  store i24 %10, i24* %4, align 4, !dbg !5298
  call void @llvm.dbg.value(metadata i8* %1, metadata !5288, metadata !DIExpression()), !dbg !5291
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5300
  call void @llvm.dbg.value(metadata i8* %11, metadata !5288, metadata !DIExpression()), !dbg !5291
  store i8* %11, i8** %3, align 4, !dbg !5300
  br label %29, !dbg !5301

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5289, metadata !DIExpression()), !dbg !5291
  call void @llvm.dbg.value(metadata i8** %3, metadata !5288, metadata !DIExpression(DW_OP_deref)), !dbg !5291
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5302
  call void @llvm.dbg.value(metadata i32 %13, metadata !5290, metadata !DIExpression()), !dbg !5291
  %14 = load i8*, i8** %3, align 4, !dbg !5303
  call void @llvm.dbg.value(metadata i8* %14, metadata !5288, metadata !DIExpression()), !dbg !5291
  %15 = icmp eq i8* %14, %1, !dbg !5305
  br i1 %15, label %29, label %16, !dbg !5306

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5307
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5309
  store i32 %13, i32* %18, align 4, !dbg !5310
  %19 = lshr i32 %13, 31, !dbg !5311
  %20 = lshr i24 %17, 1, !dbg !5312
  %21 = and i24 %20, 1, !dbg !5312
  %22 = zext i24 %21 to i32, !dbg !5312
  %23 = or i32 %19, %22, !dbg !5312
  %24 = trunc i32 %23 to i24, !dbg !5312
  %25 = shl nuw nsw i24 %24, 1, !dbg !5312
  %26 = and i24 %17, -131, !dbg !5312
  %27 = or i24 %26, 128, !dbg !5312
  %28 = or i24 %25, %27, !dbg !5312
  store i24 %28, i24* %4, align 4, !dbg !5312
  br label %29, !dbg !5313

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5291
  ret i8* %30, !dbg !5314
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5315 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5317, metadata !DIExpression()), !dbg !5320
  call void @llvm.dbg.value(metadata i8* %1, metadata !5318, metadata !DIExpression()), !dbg !5320
  %4 = load i8, i8* %1, align 1, !dbg !5321
  %5 = icmp eq i8 %4, 46, !dbg !5322
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5323
  %7 = load i24, i24* %6, align 4, !dbg !5324
  %8 = select i1 %5, i24 512, i24 0, !dbg !5324
  %9 = and i24 %7, -513, !dbg !5324
  %10 = or i24 %9, %8, !dbg !5324
  store i24 %10, i24* %6, align 4, !dbg !5324
  br i1 %5, label %11, label %32, !dbg !5325

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5318, metadata !DIExpression()), !dbg !5320
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5326
  call void @llvm.dbg.value(metadata i8* %12, metadata !5318, metadata !DIExpression()), !dbg !5320
  store i8* %12, i8** %3, align 4, !dbg !5326
  %13 = load i8, i8* %12, align 1, !dbg !5327
  %14 = icmp eq i8 %13, 42, !dbg !5329
  br i1 %14, label %15, label %18, !dbg !5330

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5331
  store i24 %16, i24* %6, align 4, !dbg !5331
  call void @llvm.dbg.value(metadata i8* %12, metadata !5318, metadata !DIExpression()), !dbg !5320
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5333
  call void @llvm.dbg.value(metadata i8* %17, metadata !5318, metadata !DIExpression()), !dbg !5320
  store i8* %17, i8** %3, align 4, !dbg !5333
  br label %32, !dbg !5334

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5318, metadata !DIExpression(DW_OP_deref)), !dbg !5320
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5335
  call void @llvm.dbg.value(metadata i32 %19, metadata !5319, metadata !DIExpression()), !dbg !5320
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5336
  store i32 %19, i32* %20, align 4, !dbg !5337
  %21 = lshr i32 %19, 31, !dbg !5338
  %22 = load i24, i24* %6, align 4, !dbg !5339
  %23 = lshr i24 %22, 1, !dbg !5339
  %24 = and i24 %23, 1, !dbg !5339
  %25 = zext i24 %24 to i32, !dbg !5339
  %26 = or i32 %21, %25, !dbg !5339
  %27 = trunc i32 %26 to i24, !dbg !5339
  %28 = shl nuw nsw i24 %27, 1, !dbg !5339
  %29 = and i24 %22, -3, !dbg !5339
  %30 = or i24 %28, %29, !dbg !5339
  store i24 %30, i24* %6, align 4, !dbg !5339
  %31 = load i8*, i8** %3, align 4, !dbg !5340
  call void @llvm.dbg.value(metadata i8* %31, metadata !5318, metadata !DIExpression()), !dbg !5320
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5320
  ret i8* %33, !dbg !5341
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !5342 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5344, metadata !DIExpression()), !dbg !5346
  call void @llvm.dbg.value(metadata i8* %1, metadata !5345, metadata !DIExpression()), !dbg !5346
  %3 = load i8, i8* %1, align 1, !dbg !5347
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5348

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5349
  call void @llvm.dbg.value(metadata i8* %5, metadata !5345, metadata !DIExpression()), !dbg !5346
  %6 = load i8, i8* %5, align 1, !dbg !5352
  %7 = icmp eq i8 %6, 104, !dbg !5353
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5354
  %9 = load i24, i24* %8, align 4, !dbg !5354
  %10 = and i24 %9, -30721, !dbg !5354
  br i1 %7, label %11, label %14, !dbg !5355

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5356
  store i24 %12, i24* %8, align 4, !dbg !5356
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5358
  call void @llvm.dbg.value(metadata i8* %13, metadata !5345, metadata !DIExpression()), !dbg !5346
  br label %56, !dbg !5359

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5360
  store i24 %15, i24* %8, align 4, !dbg !5360
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5362
  call void @llvm.dbg.value(metadata i8* %17, metadata !5345, metadata !DIExpression()), !dbg !5346
  %18 = load i8, i8* %17, align 1, !dbg !5364
  %19 = icmp eq i8 %18, 108, !dbg !5365
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5366
  %21 = load i24, i24* %20, align 4, !dbg !5366
  %22 = and i24 %21, -30721, !dbg !5366
  br i1 %19, label %23, label %26, !dbg !5367

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5368
  store i24 %24, i24* %20, align 4, !dbg !5368
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5370
  call void @llvm.dbg.value(metadata i8* %25, metadata !5345, metadata !DIExpression()), !dbg !5346
  br label %56, !dbg !5371

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5372
  store i24 %27, i24* %20, align 4, !dbg !5372
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5374
  %30 = load i24, i24* %29, align 4, !dbg !5375
  %31 = and i24 %30, -30721, !dbg !5375
  %32 = or i24 %31, 10240, !dbg !5375
  store i24 %32, i24* %29, align 4, !dbg !5375
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5376
  call void @llvm.dbg.value(metadata i8* %33, metadata !5345, metadata !DIExpression()), !dbg !5346
  br label %56, !dbg !5377

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5378
  %36 = load i24, i24* %35, align 4, !dbg !5379
  %37 = and i24 %36, -30721, !dbg !5379
  %38 = or i24 %37, 12288, !dbg !5379
  store i24 %38, i24* %35, align 4, !dbg !5379
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5380
  call void @llvm.dbg.value(metadata i8* %39, metadata !5345, metadata !DIExpression()), !dbg !5346
  br label %56, !dbg !5381

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5382
  %42 = load i24, i24* %41, align 4, !dbg !5383
  %43 = and i24 %42, -30721, !dbg !5383
  %44 = or i24 %43, 14336, !dbg !5383
  store i24 %44, i24* %41, align 4, !dbg !5383
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5384
  call void @llvm.dbg.value(metadata i8* %45, metadata !5345, metadata !DIExpression()), !dbg !5346
  br label %56, !dbg !5385

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5386
  %48 = load i24, i24* %47, align 4, !dbg !5387
  %49 = and i24 %48, -30723, !dbg !5387
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5388
  call void @llvm.dbg.value(metadata i8* %50, metadata !5345, metadata !DIExpression()), !dbg !5346
  %51 = or i24 %49, 16386, !dbg !5389
  store i24 %51, i24* %47, align 4, !dbg !5389
  br label %56, !dbg !5390

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5391
  %54 = load i24, i24* %53, align 4, !dbg !5392
  %55 = and i24 %54, -30721, !dbg !5392
  store i24 %55, i24* %53, align 4, !dbg !5392
  br label %56, !dbg !5393

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5345, metadata !DIExpression()), !dbg !5346
  ret i8* %57, !dbg !5394
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !5395 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5397, metadata !DIExpression()), !dbg !5402
  call void @llvm.dbg.value(metadata i8* %1, metadata !5398, metadata !DIExpression()), !dbg !5402
  call void @llvm.dbg.value(metadata i8 0, metadata !5399, metadata !DIExpression()), !dbg !5402
  call void @llvm.dbg.value(metadata i8* %1, metadata !5398, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5402
  %3 = load i8, i8* %1, align 1, !dbg !5403
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5404
  store i8 %3, i8* %4, align 1, !dbg !5405
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5406

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5407

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5408
  %9 = load i24, i24* %8, align 4, !dbg !5408
  %10 = and i24 %9, -458753, !dbg !5408
  %11 = or i24 %10, %7, !dbg !5408
  call void @llvm.dbg.label(metadata !5400), !dbg !5409
  %12 = and i24 %9, 30720, !dbg !5410
  %13 = icmp eq i24 %12, 16384, !dbg !5410
  %14 = zext i1 %13 to i24, !dbg !5412
  %15 = or i24 %11, %14, !dbg !5412
  %16 = icmp eq i8 %3, 99, !dbg !5413
  br i1 %16, label %17, label %43, !dbg !5415

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5416
  %19 = icmp ne i24 %18, 0, !dbg !5416
  call void @llvm.dbg.value(metadata i1 %19, metadata !5399, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5402
  br label %43, !dbg !5418

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5419
  %22 = load i24, i24* %21, align 4, !dbg !5420
  %23 = and i24 %22, -458753, !dbg !5420
  %24 = or i24 %23, 262144, !dbg !5420
  call void @llvm.dbg.value(metadata i8 1, metadata !5399, metadata !DIExpression()), !dbg !5402
  br label %43, !dbg !5421

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5424
  %27 = load i24, i24* %26, align 4, !dbg !5425
  %28 = and i24 %27, -458753, !dbg !5425
  %29 = or i24 %28, 196608, !dbg !5425
  %30 = and i24 %27, 30720, !dbg !5426
  %31 = icmp eq i24 %30, 16384, !dbg !5426
  br label %43, !dbg !5428

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5429
  %34 = load i24, i24* %33, align 4, !dbg !5430
  %35 = and i24 %34, -458753, !dbg !5430
  %36 = or i24 %35, 196608, !dbg !5430
  %37 = and i24 %34, 30720, !dbg !5431
  %38 = icmp ne i24 %37, 0, !dbg !5431
  br label %43, !dbg !5433

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5434
  %41 = load i24, i24* %40, align 4, !dbg !5435
  %42 = or i24 %41, 1, !dbg !5435
  br label %43, !dbg !5436

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5437
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5438
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5439
  call void @llvm.dbg.value(metadata i8* %48, metadata !5398, metadata !DIExpression()), !dbg !5402
  call void @llvm.dbg.value(metadata i8 poison, metadata !5399, metadata !DIExpression()), !dbg !5402
  %49 = lshr i24 %44, 1, !dbg !5437
  %50 = and i24 %49, 1, !dbg !5437
  %51 = zext i24 %50 to i32, !dbg !5437
  %52 = or i32 %51, %47, !dbg !5437
  %53 = trunc i32 %52 to i24, !dbg !5437
  %54 = shl nuw nsw i24 %53, 1, !dbg !5437
  %55 = and i24 %44, -3, !dbg !5437
  %56 = or i24 %54, %55, !dbg !5437
  store i24 %56, i24* %46, align 4, !dbg !5437
  ret i8* %48, !dbg !5440
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #13 !dbg !5441 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5445, metadata !DIExpression()), !dbg !5448
  %2 = load i8*, i8** %0, align 4, !dbg !5449
  call void @llvm.dbg.value(metadata i8* %2, metadata !5446, metadata !DIExpression()), !dbg !5448
  call void @llvm.dbg.value(metadata i32 0, metadata !5447, metadata !DIExpression()), !dbg !5448
  %3 = load i8, i8* %2, align 1, !dbg !5450
  %4 = zext i8 %3 to i32, !dbg !5451
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #24, !dbg !5452
  %6 = icmp eq i32 %5, 0, !dbg !5453
  br i1 %6, label %19, label %7, !dbg !5453

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5447, metadata !DIExpression()), !dbg !5448
  call void @llvm.dbg.value(metadata i8* %10, metadata !5446, metadata !DIExpression()), !dbg !5448
  %11 = mul i32 %9, 10, !dbg !5454
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5456
  call void @llvm.dbg.value(metadata i8* %12, metadata !5446, metadata !DIExpression()), !dbg !5448
  %13 = add i32 %11, -48, !dbg !5457
  %14 = add i32 %13, %8, !dbg !5458
  call void @llvm.dbg.value(metadata i32 %14, metadata !5447, metadata !DIExpression()), !dbg !5448
  %15 = load i8, i8* %12, align 1, !dbg !5450
  %16 = zext i8 %15 to i32, !dbg !5451
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #24, !dbg !5452
  %18 = icmp eq i32 %17, 0, !dbg !5453
  br i1 %18, label %19, label %7, !dbg !5453, !llvm.loop !5459

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5448
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5448
  store i8* %20, i8** %0, align 4, !dbg !5461
  ret i32 %21, !dbg !5462
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #3 !dbg !5463 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5465, metadata !DIExpression()), !dbg !5466
  %2 = add i32 %0, -48, !dbg !5467
  %3 = icmp ult i32 %2, 10, !dbg !5468
  %4 = zext i1 %3 to i32, !dbg !5468
  ret i32 %4, !dbg !5469
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @assert_post_action(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5470 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5475, metadata !DIExpression()), !dbg !5477
  call void @llvm.dbg.value(metadata i32 %1, metadata !5476, metadata !DIExpression()), !dbg !5477
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !5478, !srcloc !5480
  ret void, !dbg !5481
}

; Function Attrs: noinline nounwind optsize
define dso_local void @assert_print(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5482 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5484, metadata !DIExpression()), !dbg !5492
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5493
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5493
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5485, metadata !DIExpression()), !dbg !5494
  call void @llvm.va_start(i8* nonnull %3), !dbg !5495
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5496
  %5 = load i32, i32* %4, align 4, !dbg !5496
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5496
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !5496
  call void @llvm.va_end(i8* nonnull %3), !dbg !5497
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5498
  ret void, !dbg !5498
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5499 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #23, !dbg !5501, !srcloc !5502
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #23, !dbg !5503, !srcloc !5504
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !5505, !srcloc !5506
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #23, !dbg !5507, !srcloc !5508
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !5509, !srcloc !5510
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,97\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !5511, !srcloc !5512
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !5513, !srcloc !5514
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #23, !dbg !5515, !srcloc !5516
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,512\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !5517, !srcloc !5518
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !5519, !srcloc !5520
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !5521, !srcloc !5522
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !5523, !srcloc !5524
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !5525, !srcloc !5526
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !5527, !srcloc !5528
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !5529, !srcloc !5530
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #23, !dbg !5531, !srcloc !5532
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !5533, !srcloc !5534
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #23, !dbg !5535, !srcloc !5536
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !5537, !srcloc !5538
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #23, !dbg !5539, !srcloc !5540
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !5541, !srcloc !5542
  tail call void asm sideeffect ".globl\09CONFIG_TEST_EXTRA_STACK_SIZE\0A\09.equ\09CONFIG_TEST_EXTRA_STACK_SIZE,0\0A\09.type\09CONFIG_TEST_EXTRA_STACK_SIZE,%object", ""() #23, !dbg !5543, !srcloc !5544
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !5545, !srcloc !5546
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !5547, !srcloc !5548
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #23, !dbg !5549, !srcloc !5550
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !5551, !srcloc !5552
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !5553, !srcloc !5554
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !5555, !srcloc !5556
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #23, !dbg !5557, !srcloc !5558
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !5559, !srcloc !5560
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #23, !dbg !5561, !srcloc !5562
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #23, !dbg !5563, !srcloc !5564
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !5565, !srcloc !5566
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #23, !dbg !5567, !srcloc !5568
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5569, !srcloc !5570
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED,%object", ""() #23, !dbg !5571, !srcloc !5572
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,%object", ""() #23, !dbg !5573, !srcloc !5574
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,%object", ""() #23, !dbg !5575, !srcloc !5576
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,%object", ""() #23, !dbg !5577, !srcloc !5578
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #23, !dbg !5579, !srcloc !5580
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5581, !srcloc !5582
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #23, !dbg !5583, !srcloc !5584
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #23, !dbg !5585, !srcloc !5586
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #23, !dbg !5587, !srcloc !5588
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,%object", ""() #23, !dbg !5589, !srcloc !5590
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5591, !srcloc !5592
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #23, !dbg !5593, !srcloc !5594
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,%object", ""() #23, !dbg !5595, !srcloc !5596
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #23, !dbg !5597, !srcloc !5598
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #23, !dbg !5599, !srcloc !5600
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #23, !dbg !5601, !srcloc !5602
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,%object", ""() #23, !dbg !5603, !srcloc !5604
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #23, !dbg !5605, !srcloc !5606
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #23, !dbg !5607, !srcloc !5608
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5609, !srcloc !5610
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #23, !dbg !5611, !srcloc !5612
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #23, !dbg !5613, !srcloc !5614
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !5615, !srcloc !5616
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !5617, !srcloc !5618
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !5619, !srcloc !5620
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !5621, !srcloc !5622
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #23, !dbg !5623, !srcloc !5624
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #23, !dbg !5625, !srcloc !5626
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !5627, !srcloc !5628
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !5629, !srcloc !5630
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !5631, !srcloc !5632
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !5633, !srcloc !5634
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !5635, !srcloc !5636
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !5637, !srcloc !5638
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !5639, !srcloc !5640
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !5641, !srcloc !5642
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !5643, !srcloc !5644
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !5645, !srcloc !5646
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !5647, !srcloc !5648
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !5649, !srcloc !5650
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !5651, !srcloc !5652
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !5653, !srcloc !5654
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !5655, !srcloc !5656
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !5657, !srcloc !5658
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !5659, !srcloc !5660
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !5661, !srcloc !5662
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !5663, !srcloc !5664
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !5665, !srcloc !5666
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !5667, !srcloc !5668
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !5669, !srcloc !5670
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !5671, !srcloc !5672
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !5673, !srcloc !5674
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !5675, !srcloc !5676
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !5677, !srcloc !5678
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #23, !dbg !5679, !srcloc !5680
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #23, !dbg !5681, !srcloc !5682
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !5683, !srcloc !5684
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ\0A\09.equ\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ,1\0A\09.type\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ,%object", ""() #23, !dbg !5685, !srcloc !5686
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #23, !dbg !5687, !srcloc !5688
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #23, !dbg !5689, !srcloc !5690
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #23, !dbg !5691, !srcloc !5692
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !5693, !srcloc !5694
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #23, !dbg !5695, !srcloc !5696
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F446XX\0A\09.equ\09CONFIG_SOC_STM32F446XX,1\0A\09.type\09CONFIG_SOC_STM32F446XX,%object", ""() #23, !dbg !5697, !srcloc !5698
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5699, !srcloc !5700
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #23, !dbg !5701, !srcloc !5702
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !5703, !srcloc !5704
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !5705, !srcloc !5706
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !5707, !srcloc !5708
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !5709, !srcloc !5710
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !5711, !srcloc !5712
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !5713, !srcloc !5714
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !5715, !srcloc !5716
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !5717, !srcloc !5718
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #23, !dbg !5719, !srcloc !5720
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !5721, !srcloc !5722
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !5723, !srcloc !5724
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #23, !dbg !5725, !srcloc !5726
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !5727, !srcloc !5728
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !5729, !srcloc !5730
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !5731, !srcloc !5732
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !5733, !srcloc !5734
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !5735, !srcloc !5736
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !5737, !srcloc !5738
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #23, !dbg !5739, !srcloc !5740
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !5741, !srcloc !5742
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !5743, !srcloc !5744
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !5745, !srcloc !5746
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #23, !dbg !5747, !srcloc !5748
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #23, !dbg !5749, !srcloc !5750
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #23, !dbg !5751, !srcloc !5752
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #23, !dbg !5753, !srcloc !5754
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !5755, !srcloc !5756
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !5757, !srcloc !5758
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #23, !dbg !5759, !srcloc !5760
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #23, !dbg !5761, !srcloc !5762
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !5763, !srcloc !5764
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !5765, !srcloc !5766
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !5767, !srcloc !5768
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #23, !dbg !5769, !srcloc !5770
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #23, !dbg !5771, !srcloc !5772
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #23, !dbg !5773, !srcloc !5774
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #23, !dbg !5775, !srcloc !5776
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #23, !dbg !5777, !srcloc !5778
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !5779, !srcloc !5780
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !5781, !srcloc !5782
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !5783, !srcloc !5784
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !5785, !srcloc !5786
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !5787, !srcloc !5788
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !5789, !srcloc !5790
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !5791, !srcloc !5792
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !5793, !srcloc !5794
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #23, !dbg !5795, !srcloc !5796
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #23, !dbg !5797, !srcloc !5798
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #23, !dbg !5799, !srcloc !5800
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !5801, !srcloc !5802
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !5803, !srcloc !5804
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !5805, !srcloc !5806
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !5807, !srcloc !5808
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !5809, !srcloc !5810
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5811, !srcloc !5812
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !5813, !srcloc !5814
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !5815, !srcloc !5816
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !5817, !srcloc !5818
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #23, !dbg !5819, !srcloc !5820
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #23, !dbg !5821, !srcloc !5822
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #23, !dbg !5823, !srcloc !5824
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #23, !dbg !5825, !srcloc !5826
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #23, !dbg !5827, !srcloc !5828
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #23, !dbg !5829, !srcloc !5830
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #23, !dbg !5831, !srcloc !5832
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !5833, !srcloc !5834
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5835, !srcloc !5836
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #23, !dbg !5837, !srcloc !5838
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !5839, !srcloc !5840
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !5841, !srcloc !5842
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !5843, !srcloc !5844
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !5845, !srcloc !5846
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !5847, !srcloc !5848
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !5849, !srcloc !5850
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !5851, !srcloc !5852
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !5853, !srcloc !5854
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !5855, !srcloc !5856
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !5857, !srcloc !5858
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #23, !dbg !5859, !srcloc !5860
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !5861, !srcloc !5862
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #23, !dbg !5863, !srcloc !5864
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !5865, !srcloc !5866
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #23, !dbg !5867, !srcloc !5868
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !5869, !srcloc !5870
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_NAME\0A\09.equ\09CONFIG_THREAD_NAME,1\0A\09.type\09CONFIG_THREAD_NAME,%object", ""() #23, !dbg !5871, !srcloc !5872
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_MAX_NAME_LEN\0A\09.equ\09CONFIG_THREAD_MAX_NAME_LEN,32\0A\09.type\09CONFIG_THREAD_MAX_NAME_LEN,%object", ""() #23, !dbg !5873, !srcloc !5874
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !5875, !srcloc !5876
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !5877, !srcloc !5878
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !5879, !srcloc !5880
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !5881, !srcloc !5882
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !5883, !srcloc !5884
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !5885, !srcloc !5886
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !5887, !srcloc !5888
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !5889, !srcloc !5890
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !5891, !srcloc !5892
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !5893, !srcloc !5894
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !5895, !srcloc !5896
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !5897, !srcloc !5898
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !5899, !srcloc !5900
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !5901, !srcloc !5902
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !5903, !srcloc !5904
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !5905, !srcloc !5906
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !5907, !srcloc !5908
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !5909, !srcloc !5910
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !5911, !srcloc !5912
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !5913, !srcloc !5914
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5915, !srcloc !5916
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !5917, !srcloc !5918
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !5919, !srcloc !5920
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !5921, !srcloc !5922
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !5923, !srcloc !5924
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !5925, !srcloc !5926
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #23, !dbg !5927, !srcloc !5928
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #23, !dbg !5929, !srcloc !5930
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !5931, !srcloc !5932
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !5933, !srcloc !5934
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !5935, !srcloc !5936
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_ASYNC\0A\09.equ\09CONFIG_SERIAL_SUPPORT_ASYNC,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_ASYNC,%object", ""() #23, !dbg !5937, !srcloc !5938
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !5939, !srcloc !5940
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #23, !dbg !5941, !srcloc !5942
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #23, !dbg !5943, !srcloc !5944
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !5945, !srcloc !5946
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #23, !dbg !5947, !srcloc !5948
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !5949, !srcloc !5950
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5951, !srcloc !5952
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #23, !dbg !5953, !srcloc !5954
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #23, !dbg !5955, !srcloc !5956
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #23, !dbg !5957, !srcloc !5958
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #23, !dbg !5959, !srcloc !5960
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #23, !dbg !5961, !srcloc !5962
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #23, !dbg !5963, !srcloc !5964
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #23, !dbg !5965, !srcloc !5966
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #23, !dbg !5967, !srcloc !5968
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #23, !dbg !5969, !srcloc !5970
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #23, !dbg !5971, !srcloc !5972
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5973, !srcloc !5974
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #23, !dbg !5975, !srcloc !5976
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5977, !srcloc !5978
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !5979, !srcloc !5980
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !5981, !srcloc !5982
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !5983, !srcloc !5984
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !5985, !srcloc !5986
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #23, !dbg !5987, !srcloc !5988
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #23, !dbg !5989, !srcloc !5990
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #23, !dbg !5991, !srcloc !5992
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #23, !dbg !5993, !srcloc !5994
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #23, !dbg !5995, !srcloc !5996
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5997, !srcloc !5998
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #23, !dbg !5999, !srcloc !6000
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,16000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #23, !dbg !6001, !srcloc !6002
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #23, !dbg !6003, !srcloc !6004
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #23, !dbg !6005, !srcloc !6006
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #23, !dbg !6007, !srcloc !6008
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #23, !dbg !6009, !srcloc !6010
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #23, !dbg !6011, !srcloc !6012
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #23, !dbg !6013, !srcloc !6014
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #23, !dbg !6015, !srcloc !6016
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #23, !dbg !6017, !srcloc !6018
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !6019, !srcloc !6020
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !6021, !srcloc !6022
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !6023, !srcloc !6024
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !6025, !srcloc !6026
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !6027, !srcloc !6028
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !6029, !srcloc !6030
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !6031, !srcloc !6032
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !6033, !srcloc !6034
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !6035, !srcloc !6036
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !6037, !srcloc !6038
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !6039, !srcloc !6040
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #23, !dbg !6041, !srcloc !6042
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !6043, !srcloc !6044
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !6045, !srcloc !6046
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !6047, !srcloc !6048
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !6049, !srcloc !6050
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !6051, !srcloc !6052
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #23, !dbg !6053, !srcloc !6054
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #23, !dbg !6055, !srcloc !6056
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !6057, !srcloc !6058
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !6059, !srcloc !6060
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !6061, !srcloc !6062
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !6063, !srcloc !6064
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !6065, !srcloc !6066
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #23, !dbg !6067, !srcloc !6068
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT\0A\09.equ\09CONFIG_ASSERT,1\0A\09.type\09CONFIG_ASSERT,%object", ""() #23, !dbg !6069, !srcloc !6070
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_LEVEL\0A\09.equ\09CONFIG_ASSERT_LEVEL,2\0A\09.type\09CONFIG_ASSERT_LEVEL,%object", ""() #23, !dbg !6071, !srcloc !6072
  tail call void asm sideeffect ".globl\09CONFIG_SPIN_VALIDATE\0A\09.equ\09CONFIG_SPIN_VALIDATE,1\0A\09.type\09CONFIG_SPIN_VALIDATE,%object", ""() #23, !dbg !6073, !srcloc !6074
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !6075, !srcloc !6076
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #23, !dbg !6077, !srcloc !6078
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #23, !dbg !6079, !srcloc !6080
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_MINIMAL\0A\09.equ\09CONFIG_LOG_DEFAULT_MINIMAL,1\0A\09.type\09CONFIG_LOG_DEFAULT_MINIMAL,%object", ""() #23, !dbg !6081, !srcloc !6082
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #23, !dbg !6083, !srcloc !6084
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #23, !dbg !6085, !srcloc !6086
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #23, !dbg !6087, !srcloc !6088
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #23, !dbg !6089, !srcloc !6090
  tail call void asm sideeffect ".globl\09CONFIG_TEST\0A\09.equ\09CONFIG_TEST,1\0A\09.type\09CONFIG_TEST,%object", ""() #23, !dbg !6091, !srcloc !6092
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !6093, !srcloc !6094
  tail call void asm sideeffect ".globl\09CONFIG_TEST_LOGGING_DEFAULTS\0A\09.equ\09CONFIG_TEST_LOGGING_DEFAULTS,1\0A\09.type\09CONFIG_TEST_LOGGING_DEFAULTS,%object", ""() #23, !dbg !6095, !srcloc !6096
  tail call void asm sideeffect ".globl\09CONFIG_TEST_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_TEST_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_TEST_HW_STACK_PROTECTION,%object", ""() #23, !dbg !6097, !srcloc !6098
  tail call void asm sideeffect ".globl\09CONFIG_TEST_ARM_CORTEX_M\0A\09.equ\09CONFIG_TEST_ARM_CORTEX_M,1\0A\09.type\09CONFIG_TEST_ARM_CORTEX_M,%object", ""() #23, !dbg !6099, !srcloc !6100
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !6101, !srcloc !6102
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !6103, !srcloc !6104
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !6105, !srcloc !6106
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !6107, !srcloc !6108
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !6109, !srcloc !6110
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !6111, !srcloc !6112
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !6113, !srcloc !6114
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !6115, !srcloc !6116
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !6117, !srcloc !6118
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !6119, !srcloc !6120
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !6121, !srcloc !6122
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !6123, !srcloc !6124
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !6125, !srcloc !6126
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !6127, !srcloc !6128
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !6129, !srcloc !6130
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !6131, !srcloc !6132
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !6133, !srcloc !6134
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !6135, !srcloc !6136
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !6137, !srcloc !6138
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !6139, !srcloc !6140
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !6141, !srcloc !6142
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !6143, !srcloc !6144
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !6145, !srcloc !6146
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !6147, !srcloc !6148
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !6149, !srcloc !6150
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !6151, !srcloc !6152
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !6153, !srcloc !6154
  ret void, !dbg !6155
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6156 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6158, metadata !DIExpression()), !dbg !6160
  tail call fastcc void @LL_FLASH_EnableInstCache() #24, !dbg !6161
  tail call fastcc void @LL_FLASH_EnableDataCache() #24, !dbg !6162
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !6163, !srcloc !6172
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !6163
  call void @llvm.dbg.value(metadata i32 %3, metadata !6169, metadata !DIExpression()) #23, !dbg !6173
  call void @llvm.dbg.value(metadata i32 undef, metadata !6170, metadata !DIExpression()) #23, !dbg !6173
  call void @llvm.dbg.value(metadata i32 %3, metadata !6159, metadata !DIExpression()), !dbg !6160
  call void @llvm.dbg.value(metadata i32 %3, metadata !6174, metadata !DIExpression()) #23, !dbg !6179
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !6181, !srcloc !6182
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !6183
  ret i32 0, !dbg !6184
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #14 !dbg !6185 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6187
  %2 = or i32 %1, 512, !dbg !6187
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6187
  ret void, !dbg !6188
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #14 !dbg !6189 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6190
  %2 = or i32 %1, 1024, !dbg !6190
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6190
  ret void, !dbg !6191
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #3 !dbg !6192 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6194, metadata !DIExpression()), !dbg !6195
  ret i32 0, !dbg !6196
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !6197 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6200, metadata !DIExpression()), !dbg !6208
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !6209
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !6209
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !6201, metadata !DIExpression()), !dbg !6210
  call void @llvm.va_start(i8* nonnull %3), !dbg !6211
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !6212
  %5 = load i32, i32* %4, align 4, !dbg !6212
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !6212
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !6212
  call void @llvm.va_end(i8* nonnull %3), !dbg !6213
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !6214
  ret void, !dbg !6214
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !6215 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !6220, metadata !DIExpression()), !dbg !6221
  call void @llvm.dbg.value(metadata i8* %0, metadata !6219, metadata !DIExpression()), !dbg !6221
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #25, !dbg !6222
  ret void, !dbg !6223
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6224 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6228, metadata !DIExpression()), !dbg !6232
  call void @llvm.dbg.value(metadata i8* %1, metadata !6229, metadata !DIExpression()), !dbg !6232
  call void @llvm.dbg.value(metadata i32 %2, metadata !6230, metadata !DIExpression()), !dbg !6232
  call void @llvm.dbg.value(metadata i8* %1, metadata !6231, metadata !DIExpression()), !dbg !6232
  %4 = icmp eq i32 %2, 0, !dbg !6233
  br i1 %4, label %14, label %5, !dbg !6234

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) #24, !dbg !6232
  %7 = zext i8 %6 to i32
  br label %8, !dbg !6234

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !6231, metadata !DIExpression()), !dbg !6232
  call void @llvm.dbg.value(metadata i32 %10, metadata !6230, metadata !DIExpression()), !dbg !6232
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25, i32 0, i32 0), i32 noundef %7) #25, !dbg !6235
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #24, !dbg !6237
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !6238
  call void @llvm.dbg.value(metadata i32 %11, metadata !6230, metadata !DIExpression()), !dbg !6232
  call void @llvm.dbg.value(metadata i8* %12, metadata !6231, metadata !DIExpression()), !dbg !6232
  br i1 %13, label %14, label %8, !dbg !6238, !llvm.loop !6239

14:                                               ; preds = %8, %3
  ret void, !dbg !6241
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #3 !dbg !6242 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6247, metadata !DIExpression()), !dbg !6248
  %2 = add i32 %0, -1, !dbg !6249
  %3 = icmp ult i32 %2, 4, !dbg !6249
  %4 = shl i32 %2, 3, !dbg !6249
  %5 = lshr i32 1145657157, %4, !dbg !6249
  %6 = trunc i32 %5 to i8, !dbg !6249
  %7 = select i1 %3, i8 %6, i8 63, !dbg !6249
  ret i8 %7, !dbg !6250
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !6251 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6255, metadata !DIExpression()), !dbg !6266
  call void @llvm.dbg.value(metadata i32 %1, metadata !6256, metadata !DIExpression()), !dbg !6266
  call void @llvm.dbg.value(metadata i32 0, metadata !6257, metadata !DIExpression()), !dbg !6267
  br label %4, !dbg !6268

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.26, i32 0, i32 0)) #25, !dbg !6269
  call void @llvm.dbg.value(metadata i32 0, metadata !6259, metadata !DIExpression()), !dbg !6270
  br label %16, !dbg !6271

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !6257, metadata !DIExpression()), !dbg !6267
  %6 = icmp ult i32 %5, %1, !dbg !6272
  br i1 %6, label %7, label %11, !dbg !6276

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !6277
  %9 = load i8, i8* %8, align 1, !dbg !6277
  %10 = zext i8 %9 to i32, !dbg !6279
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.27, i32 0, i32 0), i32 noundef %10) #25, !dbg !6280
  br label %12, !dbg !6281

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.28, i32 0, i32 0)) #25, !dbg !6282
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !6284
  call void @llvm.dbg.value(metadata i32 %13, metadata !6257, metadata !DIExpression()), !dbg !6267
  %14 = icmp eq i32 %13, 8, !dbg !6285
  br i1 %14, label %3, label %4, !dbg !6268, !llvm.loop !6286

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.29, i32 0, i32 0)) #25, !dbg !6288
  ret void, !dbg !6289

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !6259, metadata !DIExpression()), !dbg !6270
  %18 = icmp ult i32 %17, %1, !dbg !6290
  br i1 %18, label %19, label %26, !dbg !6291

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !6292
  %21 = load i8, i8* %20, align 1, !dbg !6292
  call void @llvm.dbg.value(metadata i8 %21, metadata !6261, metadata !DIExpression()), !dbg !6293
  %22 = zext i8 %21 to i32, !dbg !6294
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #24, !dbg !6295
  %24 = icmp eq i32 %23, 0, !dbg !6296
  %25 = select i1 %24, i32 46, i32 %22, !dbg !6295
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.30, i32 0, i32 0), i32 noundef %25) #25, !dbg !6297
  br label %27, !dbg !6298

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.31, i32 0, i32 0)) #25, !dbg !6299
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !6301
  call void @llvm.dbg.value(metadata i32 %28, metadata !6259, metadata !DIExpression()), !dbg !6270
  %29 = icmp eq i32 %28, 8, !dbg !6302
  br i1 %29, label %15, label %16, !dbg !6271, !llvm.loop !6303
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #3 !dbg !6305 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6307, metadata !DIExpression()), !dbg !6308
  %2 = add i32 %0, -32, !dbg !6309
  %3 = icmp ult i32 %2, 95, !dbg !6309
  %4 = zext i1 %3 to i32, !dbg !6309
  ret i32 %4, !dbg !6310
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6311 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6360, metadata !DIExpression()), !dbg !6362
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6361, metadata !DIExpression()), !dbg !6362
  %3 = icmp eq %struct.__esf* %1, null, !dbg !6363
  br i1 %3, label %5, label %4, !dbg !6365

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #24, !dbg !6366
  br label %5, !dbg !6368

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #25, !dbg !6369
  ret void, !dbg !6370
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6371 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6375, metadata !DIExpression()), !dbg !6376
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6377
  %3 = load i32, i32* %2, align 4, !dbg !6377
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !6377
  %5 = load i32, i32* %4, align 4, !dbg !6377
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !6377
  %7 = load i32, i32* %6, align 4, !dbg !6377
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.32, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #25, !dbg !6377
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !6382
  %9 = load i32, i32* %8, align 4, !dbg !6382
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !6382
  %11 = load i32, i32* %10, align 4, !dbg !6382
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !6382
  %13 = load i32, i32* %12, align 4, !dbg !6382
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.33, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #25, !dbg !6382
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !6387
  %15 = load i32, i32* %14, align 4, !dbg !6387
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.34, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #25, !dbg !6387
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6392
  %17 = load i32, i32* %16, align 4, !dbg !6392
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.35, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !6392
  ret void, !dbg !6397
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6398 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6415, metadata !DIExpression()), !dbg !6418
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6416, metadata !DIExpression()), !dbg !6418
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6419
  %4 = load i32, i32* %3, align 4, !dbg !6419
  call void @llvm.dbg.value(metadata i32 %4, metadata !6417, metadata !DIExpression()), !dbg !6418
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #24, !dbg !6420
  ret void, !dbg !6421
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !6422 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6426, metadata !DIExpression()), !dbg !6429
  call void @llvm.dbg.value(metadata i8* %0, metadata !6427, metadata !DIExpression()), !dbg !6429
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6430
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !6430
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6428, metadata !DIExpression()), !dbg !6431
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6431
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6432
  %5 = bitcast i8* %4 to i32*, !dbg !6432
  %6 = load i32, i32* %5, align 4, !dbg !6432
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6433
  store i32 %6, i32* %7, align 4, !dbg !6434
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #24, !dbg !6435
  unreachable, !dbg !6436
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6437 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6440, metadata !DIExpression()), !dbg !6441
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #24, !dbg !6442
  ret void, !dbg !6443
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6444 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6448, metadata !DIExpression()), !dbg !6449
  %2 = icmp sgt i32 %0, -1, !dbg !6450
  br i1 %2, label %3, label %8, !dbg !6452

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6453, !srcloc !6455
  %4 = and i32 %0, 31, !dbg !6456
  %5 = shl nuw i32 1, %4, !dbg !6457
  %6 = lshr i32 %0, 5, !dbg !6458
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6459
  store volatile i32 %5, i32* %7, align 4, !dbg !6460
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6461, !srcloc !6462
  br label %8, !dbg !6463

8:                                                ; preds = %3, %1
  ret void, !dbg !6464
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6465 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6467, metadata !DIExpression()), !dbg !6468
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #24, !dbg !6469
  ret void, !dbg !6470
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6471 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6473, metadata !DIExpression()), !dbg !6474
  %2 = icmp sgt i32 %0, -1, !dbg !6475
  br i1 %2, label %3, label %8, !dbg !6477

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6478
  %5 = shl nuw i32 1, %4, !dbg !6480
  %6 = lshr i32 %0, 5, !dbg !6481
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6482
  store volatile i32 %5, i32* %7, align 4, !dbg !6483
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6484, !srcloc !6488
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6489, !srcloc !6492
  br label %8, !dbg !6493

8:                                                ; preds = %3, %1
  ret void, !dbg !6494
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #15 !dbg !6495 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6499, metadata !DIExpression()), !dbg !6500
  %2 = lshr i32 %0, 5, !dbg !6501
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6502
  %4 = load volatile i32, i32* %3, align 4, !dbg !6502
  %5 = and i32 %0, 31, !dbg !6503
  %6 = shl nuw i32 1, %5, !dbg !6503
  %7 = and i32 %4, %6, !dbg !6504
  ret i32 %7, !dbg !6505
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6506 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6510, metadata !DIExpression()), !dbg !6513
  call void @llvm.dbg.value(metadata i32 %1, metadata !6511, metadata !DIExpression()), !dbg !6513
  call void @llvm.dbg.value(metadata i32 %2, metadata !6512, metadata !DIExpression()), !dbg !6513
  %4 = add i32 %1, 1, !dbg !6514
  call void @llvm.dbg.value(metadata i32 %4, metadata !6511, metadata !DIExpression()), !dbg !6513
  %5 = icmp ult i32 %4, 16, !dbg !6517
  br i1 %5, label %7, label %6, !dbg !6520

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.36, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.37, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.38, i32 0, i32 0), i32 noundef 94) #25, !dbg !6521
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3.39, i32 0, i32 0), i32 noundef %1, i32 noundef %0, i32 noundef 15) #25, !dbg !6521
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.38, i32 0, i32 0), i32 noundef 94) #25, !dbg !6521
  unreachable, !dbg !6521

7:                                                ; preds = %3
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #24, !dbg !6523
  ret void, !dbg !6524
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !6525 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6529, metadata !DIExpression()), !dbg !6531
  call void @llvm.dbg.value(metadata i32 %1, metadata !6530, metadata !DIExpression()), !dbg !6531
  %3 = trunc i32 %1 to i8, !dbg !6532
  %4 = shl i8 %3, 4, !dbg !6532
  %5 = and i32 %0, 15, !dbg !6534
  %6 = add nsw i32 %5, -4, !dbg !6534
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6534
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6534
  %9 = icmp slt i32 %0, 0, !dbg !6534
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6534
  store volatile i8 %4, i8* %10, align 1, !dbg !6532
  ret void, !dbg !6535
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6536 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6538, metadata !DIExpression()), !dbg !6539
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #25, !dbg !6540
  ret void, !dbg !6541
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6542 {
  tail call void @z_SysNmiOnReset() #25, !dbg !6544
  tail call void @z_arm_int_exit() #25, !dbg !6545
  ret void, !dbg !6546
}

; Function Attrs: optsize
declare !dbg !6547 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6548 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #10 !dbg !6550 {
  tail call fastcc void @relocate_vector_table() #24, !dbg !6552
  tail call fastcc void @z_arm_floating_point_init() #24, !dbg !6553
  tail call void @z_bss_zero() #25, !dbg !6554
  tail call void @z_data_copy() #25, !dbg !6555
  tail call void @z_arm_interrupt_init() #25, !dbg !6556
  tail call void @z_cstart() #27, !dbg !6557
  unreachable, !dbg !6557
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6558 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6559
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6560, !srcloc !6563
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6564, !srcloc !6567
  ret void, !dbg !6568
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6569 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6570
  %2 = and i32 %1, -15728641, !dbg !6570
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6570
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #23, !dbg !6571, !srcloc !6578
  call void @llvm.dbg.value(metadata i32 %3, metadata !6576, metadata !DIExpression()) #23, !dbg !6579
  %4 = and i32 %3, -5, !dbg !6580
  call void @llvm.dbg.value(metadata i32 %4, metadata !6581, metadata !DIExpression()) #23, !dbg !6586
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #23, !dbg !6588, !srcloc !6589
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6590, !srcloc !6567
  ret void, !dbg !6592
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6593 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6596, metadata !DIExpression()), !dbg !6597
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6598
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 8, i32 0, !dbg !6599
  store i32 %0, i32* %3, align 4, !dbg !6600
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6601
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 8, i32 1, !dbg !6602
  store i32 %4, i32* %5, align 4, !dbg !6603
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6604
  %7 = or i32 %6, 268435456, !dbg !6604
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6604
  call void @llvm.dbg.value(metadata i32 0, metadata !6605, metadata !DIExpression()) #23, !dbg !6608
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6610, !srcloc !6611
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6612
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 8, i32 1, !dbg !6613
  %10 = load i32, i32* %9, align 4, !dbg !6613
  ret i32 %10, !dbg !6614
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #7 !dbg !6615 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6728, metadata !DIExpression()), !dbg !6736
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6729, metadata !DIExpression()), !dbg !6736
  call void @llvm.dbg.value(metadata i8* %2, metadata !6730, metadata !DIExpression()), !dbg !6736
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6731, metadata !DIExpression()), !dbg !6736
  call void @llvm.dbg.value(metadata i8* %4, metadata !6732, metadata !DIExpression()), !dbg !6736
  call void @llvm.dbg.value(metadata i8* %5, metadata !6733, metadata !DIExpression()), !dbg !6736
  call void @llvm.dbg.value(metadata i8* %6, metadata !6734, metadata !DIExpression()), !dbg !6736
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6737
  call void @llvm.dbg.value(metadata i8* %8, metadata !6735, metadata !DIExpression()), !dbg !6736
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6738
  %10 = bitcast i8* %9 to i32*, !dbg !6738
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6739
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6740
  %12 = bitcast i8* %8 to i32*, !dbg !6741
  store i32 %11, i32* %12, align 4, !dbg !6742
  %13 = ptrtoint i8* %4 to i32, !dbg !6743
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6744
  %15 = bitcast i8* %14 to i32*, !dbg !6744
  store i32 %13, i32* %15, align 4, !dbg !6745
  %16 = ptrtoint i8* %5 to i32, !dbg !6746
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6747
  %18 = bitcast i8* %17 to i32*, !dbg !6747
  store i32 %16, i32* %18, align 4, !dbg !6748
  %19 = ptrtoint i8* %6 to i32, !dbg !6749
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6750
  %21 = bitcast i8* %20 to i32*, !dbg !6750
  store i32 %19, i32* %21, align 4, !dbg !6751
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6752
  %23 = bitcast i8* %22 to i32*, !dbg !6752
  store i32 16777216, i32* %23, align 4, !dbg !6753
  %24 = ptrtoint i8* %8 to i32, !dbg !6754
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6755
  store i32 %24, i32* %25, align 8, !dbg !6756
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 8, i32 0, !dbg !6757
  store i32 0, i32* %26, align 4, !dbg !6758
  ret void, !dbg !6759
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #8 !dbg !6760 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6765, metadata !DIExpression()), !dbg !6771
  call void @llvm.dbg.value(metadata i32 %1, metadata !6766, metadata !DIExpression()), !dbg !6771
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6772
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !6767, metadata !DIExpression()), !dbg !6771
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !6773
  br i1 %4, label %19, label %5, !dbg !6775

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !6770, metadata !DIExpression()), !dbg !6771
  %6 = icmp eq i32 %0, -22, !dbg !6776
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 6, i32 0, !dbg !6776
  %8 = load i32, i32* %7, align 4, !dbg !6776
  br i1 %6, label %16, label %9, !dbg !6778

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !6776
  %11 = icmp ule i32 %10, %0, !dbg !6776
  %12 = icmp ugt i32 %8, %0, !dbg !6776
  %13 = and i1 %12, %11, !dbg !6776
  %14 = icmp ugt i32 %8, %1, !dbg !6776
  %15 = and i1 %14, %13, !dbg !6776
  br i1 %15, label %18, label %19, !dbg !6776

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !6776
  br i1 %17, label %18, label %19, !dbg !6778

18:                                               ; preds = %9, %16
  br label %19, !dbg !6779

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !6771
  ret i32 %20, !dbg !6781
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #10 !dbg !6782 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6786, metadata !DIExpression()), !dbg !6789
  call void @llvm.dbg.value(metadata i8* %1, metadata !6787, metadata !DIExpression()), !dbg !6789
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6788, metadata !DIExpression()), !dbg !6789
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6790
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #25, !dbg !6791
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !6792, !srcloc !6793
  unreachable, !dbg !6794
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6795 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6813, metadata !DIExpression()), !dbg !6823
  call void @llvm.dbg.value(metadata i32 %1, metadata !6814, metadata !DIExpression()), !dbg !6823
  call void @llvm.dbg.value(metadata i32 %2, metadata !6815, metadata !DIExpression()), !dbg !6823
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6816, metadata !DIExpression()), !dbg !6823
  call void @llvm.dbg.value(metadata i32 0, metadata !6817, metadata !DIExpression()), !dbg !6823
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6824
  call void @llvm.dbg.value(metadata i32 %8, metadata !6818, metadata !DIExpression(DW_OP_constu, 511, DW_OP_and, DW_OP_stack_value)), !dbg !6823
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6825
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6825
  %9 = bitcast %struct.__esf* %7 to i8*, !dbg !6826
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6826
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6822, metadata !DIExpression()), !dbg !6827
  call void @llvm.dbg.value(metadata i32 0, metadata !6828, metadata !DIExpression()) #23, !dbg !6831
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6833, !srcloc !6834
  call void @llvm.dbg.value(metadata i8* %6, metadata !6820, metadata !DIExpression(DW_OP_deref)), !dbg !6823
  %10 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #24, !dbg !6835
  call void @llvm.dbg.value(metadata %struct.__esf* %10, metadata !6821, metadata !DIExpression()), !dbg !6823
  %11 = icmp eq %struct.__esf* %10, null, !dbg !6836
  br i1 %11, label %12, label %13, !dbg !6839

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.42, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.44, i32 0, i32 0), i32 noundef 1057) #25, !dbg !6840
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3.45, i32 0, i32 0)) #25, !dbg !6840
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.44, i32 0, i32 0), i32 noundef 1057) #25, !dbg !6840
  unreachable, !dbg !6840

13:                                               ; preds = %4
  %14 = and i32 %8, 511, !dbg !6842
  call void @llvm.dbg.value(metadata i32 %14, metadata !6818, metadata !DIExpression()), !dbg !6823
  call void @llvm.dbg.value(metadata i8* %5, metadata !6819, metadata !DIExpression(DW_OP_deref)), !dbg !6823
  %15 = call fastcc i32 @fault_handle(%struct.__esf* noundef nonnull %10, i32 noundef %14, i8* noundef nonnull %5) #24, !dbg !6843
  call void @llvm.dbg.value(metadata i32 %15, metadata !6817, metadata !DIExpression()), !dbg !6823
  %16 = load i8, i8* %5, align 1, !dbg !6844, !range !6846
  call void @llvm.dbg.value(metadata i8 %16, metadata !6819, metadata !DIExpression()), !dbg !6823
  %17 = icmp eq i8 %16, 0, !dbg !6844
  br i1 %17, label %18, label %35, !dbg !6847

18:                                               ; preds = %13
  %19 = bitcast %struct.__esf* %10 to i8*, !dbg !6848
  %20 = call i8* @memcpy(i8* noundef nonnull %9, i8* noundef nonnull %19, i32 noundef 32) #25, !dbg !6849
  %21 = load i8, i8* %6, align 1, !dbg !6850, !range !6846
  call void @llvm.dbg.value(metadata i8 %21, metadata !6820, metadata !DIExpression()), !dbg !6823
  %22 = icmp eq i8 %21, 0, !dbg !6850
  %23 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6852
  %24 = load i32, i32* %23, align 4, !dbg !6852
  br i1 %22, label %30, label %25, !dbg !6853

25:                                               ; preds = %18
  %26 = and i32 %24, 511, !dbg !6854
  %27 = icmp eq i32 %26, 0, !dbg !6857
  br i1 %27, label %28, label %34, !dbg !6858

28:                                               ; preds = %25
  %29 = or i32 %24, 511, !dbg !6859
  br label %32, !dbg !6861

30:                                               ; preds = %18
  %31 = and i32 %24, -512, !dbg !6862
  br label %32

32:                                               ; preds = %30, %28
  %33 = phi i32 [ %29, %28 ], [ %31, %30 ]
  store i32 %33, i32* %23, align 4, !dbg !6852
  br label %34, !dbg !6864

34:                                               ; preds = %32, %25
  call void @z_arm_fatal_error(i32 noundef %15, %struct.__esf* noundef nonnull %7) #25, !dbg !6864
  br label %35, !dbg !6865

35:                                               ; preds = %13, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6865
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6865
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6865
  ret void, !dbg !6865
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !6866 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6871, metadata !DIExpression()), !dbg !6877
  call void @llvm.dbg.value(metadata i32 %1, metadata !6872, metadata !DIExpression()), !dbg !6877
  call void @llvm.dbg.value(metadata i32 %2, metadata !6873, metadata !DIExpression()), !dbg !6877
  call void @llvm.dbg.value(metadata i8* %3, metadata !6874, metadata !DIExpression()), !dbg !6877
  call void @llvm.dbg.value(metadata i8 0, metadata !6875, metadata !DIExpression()), !dbg !6877
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6876, metadata !DIExpression()), !dbg !6877
  store i8 0, i8* %3, align 1, !dbg !6878
  %5 = icmp ugt i32 %2, -16777217, !dbg !6879
  br i1 %5, label %6, label %17, !dbg !6881

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !6882
  %8 = icmp eq i32 %7, 8, !dbg !6882
  br i1 %8, label %9, label %10, !dbg !6882

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4.58, i32 0, i32 0), i32 noundef 69) #25, !dbg !6884
  br label %17, !dbg !6890

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !6891
  %12 = icmp eq i32 %11, 0, !dbg !6891
  br i1 %12, label %13, label %14, !dbg !6892

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !6876, metadata !DIExpression()), !dbg !6877
  store i8 1, i8* %3, align 1, !dbg !6895
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !6877
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !6876, metadata !DIExpression()), !dbg !6877
  br label %17, !dbg !6898

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !6877
  ret %struct.__esf* %18, !dbg !6899
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6900 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6904, metadata !DIExpression()), !dbg !6908
  call void @llvm.dbg.value(metadata i32 %1, metadata !6905, metadata !DIExpression()), !dbg !6908
  call void @llvm.dbg.value(metadata i8* %2, metadata !6906, metadata !DIExpression()), !dbg !6908
  call void @llvm.dbg.value(metadata i32 0, metadata !6907, metadata !DIExpression()), !dbg !6908
  store i8 0, i8* %2, align 1, !dbg !6909
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !6910

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #24, !dbg !6911
  call void @llvm.dbg.value(metadata i32 %5, metadata !6907, metadata !DIExpression()), !dbg !6908
  br label %12, !dbg !6913

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !6914
  call void @llvm.dbg.value(metadata i32 %7, metadata !6907, metadata !DIExpression()), !dbg !6908
  br label %12, !dbg !6915

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !6916
  call void @llvm.dbg.value(metadata i32 0, metadata !6907, metadata !DIExpression()), !dbg !6908
  br label %12, !dbg !6917

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #24, !dbg !6918
  call void @llvm.dbg.value(metadata i32 0, metadata !6907, metadata !DIExpression()), !dbg !6908
  br label %12, !dbg !6919

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #24, !dbg !6920
  br label %12, !dbg !6921

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #24, !dbg !6922
  br label %12, !dbg !6923

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !6908
  call void @llvm.dbg.value(metadata i32 %13, metadata !6907, metadata !DIExpression()), !dbg !6908
  ret i32 %13, !dbg !6924
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6925 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6929, metadata !DIExpression()), !dbg !6932
  call void @llvm.dbg.value(metadata i8* %1, metadata !6930, metadata !DIExpression()), !dbg !6932
  call void @llvm.dbg.value(metadata i32 0, metadata !6931, metadata !DIExpression()), !dbg !6932
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.50, i32 0, i32 0), i32 noundef 69) #25, !dbg !6933
  store i8 0, i8* %1, align 1, !dbg !6938
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6939
  %4 = and i32 %3, 2, !dbg !6941
  %5 = icmp eq i32 %4, 0, !dbg !6942
  br i1 %5, label %7, label %6, !dbg !6943

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.51, i32 0, i32 0), i32 noundef 69) #25, !dbg !6944
  br label %38, !dbg !6950

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6951
  %9 = icmp sgt i32 %8, -1, !dbg !6953
  br i1 %9, label %11, label %10, !dbg !6954

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.52, i32 0, i32 0), i32 noundef 69) #25, !dbg !6955
  br label %38, !dbg !6961

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6962
  %13 = and i32 %12, 1073741824, !dbg !6964
  %14 = icmp eq i32 %13, 0, !dbg !6965
  br i1 %14, label %37, label %15, !dbg !6966

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.53, i32 0, i32 0), i32 noundef 69) #25, !dbg !6967
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #24, !dbg !6973
  br i1 %16, label %17, label %21, !dbg !6975

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6976
  %19 = load i32, i32* %18, align 4, !dbg !6976
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9.54, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #25, !dbg !6976
  %20 = load i32, i32* %18, align 4, !dbg !6982
  call void @llvm.dbg.value(metadata i32 %20, metadata !6931, metadata !DIExpression()), !dbg !6932
  br label %38, !dbg !6983

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6984
  %23 = and i32 %22, 255, !dbg !6986
  %24 = icmp eq i32 %23, 0, !dbg !6987
  br i1 %24, label %27, label %25, !dbg !6988

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !6989
  call void @llvm.dbg.value(metadata i32 %26, metadata !6931, metadata !DIExpression()), !dbg !6932
  br label %38, !dbg !6991

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6992
  %29 = and i32 %28, 65280, !dbg !6994
  %30 = icmp eq i32 %29, 0, !dbg !6995
  br i1 %30, label %32, label %31, !dbg !6996

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !6997
  call void @llvm.dbg.value(metadata i32 0, metadata !6931, metadata !DIExpression()), !dbg !6932
  br label %38, !dbg !6999

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7000
  %34 = icmp ult i32 %33, 65536, !dbg !7002
  br i1 %34, label %36, label %35, !dbg !7003

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #24, !dbg !7004
  call void @llvm.dbg.value(metadata i32 0, metadata !6931, metadata !DIExpression()), !dbg !6932
  br label %38

36:                                               ; preds = %32
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.42, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.55, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.44, i32 0, i32 0), i32 noundef 755) #25, !dbg !7006
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.56, i32 0, i32 0)) #25, !dbg !7006
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.44, i32 0, i32 0), i32 noundef 755) #25, !dbg !7006
  unreachable, !dbg !7006

37:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.42, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.55, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.44, i32 0, i32 0), i32 noundef 760) #25, !dbg !7011
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12.57, i32 0, i32 0)) #25, !dbg !7011
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.44, i32 0, i32 0), i32 noundef 760) #25, !dbg !7011
  unreachable, !dbg !7011

38:                                               ; preds = %10, %17, %31, %35, %25, %6
  %39 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], !dbg !6932
  call void @llvm.dbg.value(metadata i32 %39, metadata !6931, metadata !DIExpression()), !dbg !6932
  ret i32 %39, !dbg !7016
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !7017 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7019, metadata !DIExpression()), !dbg !7032
  call void @llvm.dbg.value(metadata i32 %1, metadata !7020, metadata !DIExpression()), !dbg !7032
  call void @llvm.dbg.value(metadata i8* %2, metadata !7021, metadata !DIExpression()), !dbg !7032
  call void @llvm.dbg.value(metadata i32 0, metadata !7022, metadata !DIExpression()), !dbg !7032
  call void @llvm.dbg.value(metadata i32 -22, metadata !7023, metadata !DIExpression()), !dbg !7032
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i32 0, i32 0), i32 noundef 69) #25, !dbg !7033
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7038
  %5 = and i32 %4, 16, !dbg !7040
  %6 = icmp eq i32 %5, 0, !dbg !7041
  br i1 %6, label %8, label %7, !dbg !7042

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.14, i32 0, i32 0), i32 noundef 69) #25, !dbg !7043
  br label %8, !dbg !7049

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7050
  %10 = and i32 %9, 8, !dbg !7052
  %11 = icmp eq i32 %10, 0, !dbg !7053
  br i1 %11, label %13, label %12, !dbg !7054

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #25, !dbg !7055
  br label %13, !dbg !7061

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7062
  %15 = and i32 %14, 2, !dbg !7063
  %16 = icmp eq i32 %15, 0, !dbg !7064
  br i1 %16, label %27, label %17, !dbg !7065

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16.49, i32 0, i32 0), i32 noundef 69) #25, !dbg !7066
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !7071
  call void @llvm.dbg.value(metadata i32 %18, metadata !7024, metadata !DIExpression()), !dbg !7072
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7073
  %20 = and i32 %19, 128, !dbg !7075
  %21 = icmp eq i32 %20, 0, !dbg !7076
  br i1 %21, label %27, label %22, !dbg !7077

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !7023, metadata !DIExpression()), !dbg !7032
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #25, !dbg !7078
  %23 = icmp eq i32 %1, 0, !dbg !7084
  br i1 %23, label %27, label %24, !dbg !7086

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7087
  %26 = and i32 %25, -129, !dbg !7087
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7087
  br label %27, !dbg !7089

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !7032
  call void @llvm.dbg.value(metadata i32 %28, metadata !7023, metadata !DIExpression()), !dbg !7032
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7090
  %30 = and i32 %29, 1, !dbg !7092
  %31 = icmp eq i32 %30, 0, !dbg !7093
  br i1 %31, label %33, label %32, !dbg !7094

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i32 0, i32 0), i32 noundef 69) #25, !dbg !7095
  br label %33, !dbg !7101

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7102
  %35 = and i32 %34, 32, !dbg !7104
  %36 = icmp eq i32 %35, 0, !dbg !7105
  br i1 %36, label %38, label %37, !dbg !7106

37:                                               ; preds = %33
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), i32 noundef 69) #25, !dbg !7107
  br label %38, !dbg !7113

38:                                               ; preds = %37, %33
  %39 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7114
  %40 = and i32 %39, 16, !dbg !7115
  %41 = icmp eq i32 %40, 0, !dbg !7115
  br i1 %41, label %42, label %46, !dbg !7116

42:                                               ; preds = %38
  %43 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7117
  %44 = and i32 %43, 2, !dbg !7118
  %45 = icmp eq i32 %44, 0, !dbg !7118
  br i1 %45, label %60, label %46, !dbg !7119

46:                                               ; preds = %42, %38
  %47 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7120
  %48 = and i32 %47, 2048, !dbg !7121
  %49 = icmp eq i32 %48, 0, !dbg !7121
  br i1 %49, label %60, label %50, !dbg !7122

50:                                               ; preds = %46
  %51 = ptrtoint %struct.__esf* %0 to i32, !dbg !7123
  %52 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %51) #25, !dbg !7124
  call void @llvm.dbg.value(metadata i32 %52, metadata !7027, metadata !DIExpression()), !dbg !7125
  %53 = icmp eq i32 %52, 0, !dbg !7126
  br i1 %53, label %55, label %54, !dbg !7128

54:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %52, metadata !7129, metadata !DIExpression()) #23, !dbg !7132
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %52) #23, !dbg !7135, !srcloc !7136
  call void @llvm.dbg.value(metadata i32 2, metadata !7022, metadata !DIExpression()), !dbg !7032
  br label %60, !dbg !7137

55:                                               ; preds = %50
  %56 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7138
  %57 = and i32 %56, 16, !dbg !7138
  %58 = icmp eq i32 %57, 0, !dbg !7138
  br i1 %58, label %60, label %59, !dbg !7142

59:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.42, i32 0, i32 0), i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.20, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.44, i32 0, i32 0), i32 noundef 343) #25, !dbg !7143
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.21, i32 0, i32 0)) #25, !dbg !7143
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.44, i32 0, i32 0), i32 noundef 343) #25, !dbg !7143
  unreachable, !dbg !7143

60:                                               ; preds = %54, %55, %46, %42
  %61 = phi i32 [ 0, %46 ], [ 0, %42 ], [ 2, %54 ], [ 0, %55 ], !dbg !7032
  call void @llvm.dbg.value(metadata i32 %61, metadata !7022, metadata !DIExpression()), !dbg !7032
  %62 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7145
  %63 = and i32 %62, 32, !dbg !7147
  %64 = icmp eq i32 %63, 0, !dbg !7148
  br i1 %64, label %68, label %65, !dbg !7149

65:                                               ; preds = %60
  %66 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7150
  %67 = and i32 %66, -8193, !dbg !7150
  store volatile i32 %67, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7150
  br label %68, !dbg !7152

68:                                               ; preds = %65, %60
  %69 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7153
  %70 = or i32 %69, 255, !dbg !7153
  store volatile i32 %70, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7153
  store i8 0, i8* %2, align 1, !dbg !7154
  ret i32 %61, !dbg !7155
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !7156 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7160, metadata !DIExpression()), !dbg !7167
  call void @llvm.dbg.value(metadata i32 %0, metadata !7161, metadata !DIExpression()), !dbg !7167
  call void @llvm.dbg.value(metadata i8* %1, metadata !7162, metadata !DIExpression()), !dbg !7167
  call void @llvm.dbg.value(metadata i32 0, metadata !7163, metadata !DIExpression()), !dbg !7167
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i32 0, i32 0), i32 noundef 69) #25, !dbg !7168
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7173
  %4 = and i32 %3, 4096, !dbg !7175
  %5 = icmp eq i32 %4, 0, !dbg !7175
  br i1 %5, label %7, label %6, !dbg !7176

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.23, i32 0, i32 0), i32 noundef 69) #25, !dbg !7177
  br label %7, !dbg !7183

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7184
  %9 = and i32 %8, 2048, !dbg !7186
  %10 = icmp eq i32 %9, 0, !dbg !7186
  br i1 %10, label %12, label %11, !dbg !7187

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #25, !dbg !7188
  br label %12, !dbg !7194

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7195
  %14 = and i32 %13, 512, !dbg !7196
  %15 = icmp eq i32 %14, 0, !dbg !7196
  br i1 %15, label %26, label %16, !dbg !7197

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69) #25, !dbg !7198
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !7203
  call void @llvm.dbg.value(metadata i32 %17, metadata !7164, metadata !DIExpression()), !dbg !7204
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7205
  %19 = and i32 %18, 32768, !dbg !7207
  %20 = icmp eq i32 %19, 0, !dbg !7208
  br i1 %20, label %26, label %21, !dbg !7209

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25.48, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !7210
  %22 = icmp eq i32 %0, 0, !dbg !7216
  br i1 %22, label %26, label %23, !dbg !7218

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7219
  %25 = and i32 %24, -32769, !dbg !7219
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7219
  br label %26, !dbg !7221

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7222
  %28 = and i32 %27, 1024, !dbg !7224
  %29 = icmp eq i32 %28, 0, !dbg !7224
  br i1 %29, label %31, label %30, !dbg !7225

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26, i32 0, i32 0), i32 noundef 69) #25, !dbg !7226
  br label %31, !dbg !7232

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7233
  %33 = and i32 %32, 256, !dbg !7235
  %34 = icmp eq i32 %33, 0, !dbg !7236
  br i1 %34, label %35, label %39, !dbg !7237

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7238
  %37 = and i32 %36, 8192, !dbg !7240
  %38 = icmp eq i32 %37, 0, !dbg !7240
  br i1 %38, label %41, label %39, !dbg !7241

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.27, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #25, !dbg !7242
  br label %41, !dbg !7243

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7243
  %43 = or i32 %42, 65280, !dbg !7243
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7243
  store i8 0, i8* %1, align 1, !dbg !7244
  ret void, !dbg !7245
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !7246 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7252, metadata !DIExpression()), !dbg !7254
  call void @llvm.dbg.value(metadata i32 0, metadata !7253, metadata !DIExpression()), !dbg !7254
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i32 0, i32 0), i32 noundef 69) #25, !dbg !7255
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7260
  %2 = and i32 %1, 33554432, !dbg !7262
  %3 = icmp eq i32 %2, 0, !dbg !7263
  br i1 %3, label %5, label %4, !dbg !7264

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.29, i32 0, i32 0), i32 noundef 69) #25, !dbg !7265
  br label %5, !dbg !7271

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7272
  %7 = and i32 %6, 16777216, !dbg !7274
  %8 = icmp eq i32 %7, 0, !dbg !7275
  br i1 %8, label %10, label %9, !dbg !7276

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30, i32 0, i32 0), i32 noundef 69) #25, !dbg !7277
  br label %10, !dbg !7283

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7284
  %12 = and i32 %11, 524288, !dbg !7286
  %13 = icmp eq i32 %12, 0, !dbg !7287
  br i1 %13, label %15, label %14, !dbg !7288

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.31, i32 0, i32 0), i32 noundef 69) #25, !dbg !7289
  br label %15, !dbg !7295

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7296
  %17 = and i32 %16, 262144, !dbg !7298
  %18 = icmp eq i32 %17, 0, !dbg !7299
  br i1 %18, label %20, label %19, !dbg !7300

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.32.47, i32 0, i32 0), i32 noundef 69) #25, !dbg !7301
  br label %20, !dbg !7307

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7308
  %22 = and i32 %21, 131072, !dbg !7310
  %23 = icmp eq i32 %22, 0, !dbg !7311
  br i1 %23, label %25, label %24, !dbg !7312

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.33, i32 0, i32 0), i32 noundef 69) #25, !dbg !7313
  br label %25, !dbg !7319

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7320
  %27 = and i32 %26, 65536, !dbg !7322
  %28 = icmp eq i32 %27, 0, !dbg !7323
  br i1 %28, label %30, label %29, !dbg !7324

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.34, i32 0, i32 0), i32 noundef 69) #25, !dbg !7325
  br label %30, !dbg !7331

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7332
  %32 = or i32 %31, -65536, !dbg !7332
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7332
  ret void, !dbg !7333
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !7334 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7338, metadata !DIExpression()), !dbg !7340
  call void @llvm.dbg.value(metadata i8* %0, metadata !7339, metadata !DIExpression()), !dbg !7340
  store i8 0, i8* %0, align 1, !dbg !7341
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.35, i32 0, i32 0), i32 noundef 69) #25, !dbg !7342
  ret void, !dbg !7347
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !7348 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7352, metadata !DIExpression()), !dbg !7354
  call void @llvm.dbg.value(metadata i32 %0, metadata !7353, metadata !DIExpression()), !dbg !7354
  %2 = icmp slt i32 %0, 16, !dbg !7355
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.38, i32 0, i32 0), !dbg !7355
  %4 = add nsw i32 %0, -16, !dbg !7355
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.36.46, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #25, !dbg !7355
  ret void, !dbg !7360
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7361 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7365, metadata !DIExpression()), !dbg !7368
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7369
  %3 = load i32, i32* %2, align 4, !dbg !7369
  %4 = inttoptr i32 %3 to i16*, !dbg !7370
  call void @llvm.dbg.value(metadata i16* %4, metadata !7366, metadata !DIExpression()), !dbg !7368
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7371
  %6 = or i32 %5, 256, !dbg !7371
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7371
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7372, !srcloc !7375
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7376, !srcloc !7379
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !7380
  %8 = load i16, i16* %7, align 2, !dbg !7381
  call void @llvm.dbg.value(metadata i16 %8, metadata !7367, metadata !DIExpression()), !dbg !7368
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7382
  %10 = and i32 %9, -257, !dbg !7382
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7382
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7383, !srcloc !7375
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7385, !srcloc !7379
  %11 = icmp eq i16 %8, -8446, !dbg !7387
  ret i1 %11, !dbg !7389
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #14 !dbg !7390 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7391
  %2 = or i32 %1, 16, !dbg !7391
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7391
  ret void, !dbg !7392
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #14 !dbg !7393 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7396, metadata !DIExpression()), !dbg !7397
  br label %1, !dbg !7398

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7396, metadata !DIExpression()), !dbg !7397
  tail call fastcc void @__NVIC_SetPriority.61(i32 noundef %2) #24, !dbg !7400
  %3 = add nuw nsw i32 %2, 1, !dbg !7403
  call void @llvm.dbg.value(metadata i32 %3, metadata !7396, metadata !DIExpression()), !dbg !7397
  %4 = icmp eq i32 %3, 97, !dbg !7404
  br i1 %4, label %5, label %1, !dbg !7398, !llvm.loop !7405

5:                                                ; preds = %1
  ret void, !dbg !7407
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.61(i32 noundef %0) unnamed_addr #14 !dbg !7408 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7410, metadata !DIExpression()), !dbg !7412
  call void @llvm.dbg.value(metadata i32 1, metadata !7411, metadata !DIExpression()), !dbg !7412
  %2 = and i32 %0, 15, !dbg !7413
  %3 = add nsw i32 %2, -4, !dbg !7413
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !7413
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7413
  %6 = icmp slt i32 %0, 0, !dbg !7413
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !7413
  store volatile i8 16, i8* %7, align 1, !dbg !7414
  ret void, !dbg !7416
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !7417 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7526, metadata !DIExpression()), !dbg !7527
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7528
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !7530
  br i1 %3, label %4, label %12, !dbg !7531

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !7532, !srcloc !7544
  call void @llvm.dbg.value(metadata i32 %5, metadata !7535, metadata !DIExpression()) #23, !dbg !7545
  %6 = icmp eq i32 %5, 0, !dbg !7546
  br i1 %6, label %12, label %7, !dbg !7547

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7548
  %9 = or i32 %8, 268435456, !dbg !7548
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7548
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7550
  %11 = and i32 %10, -32769, !dbg !7550
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7550
  br label %12, !dbg !7551

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !7552
  ret void, !dbg !7553
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !7554 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #25, !dbg !7555
  ret void, !dbg !7556
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !393 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !501, metadata !DIExpression()), !dbg !7557
  call void @llvm.dbg.value(metadata i8 0, metadata !502, metadata !DIExpression()), !dbg !7557
  call void @llvm.dbg.value(metadata i32 64, metadata !504, metadata !DIExpression()), !dbg !7557
  call void @llvm.dbg.value(metadata i32 undef, metadata !503, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7557
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !7558
  %3 = load i32, i32* %2, align 4, !dbg !7558
  call void @llvm.dbg.value(metadata i32 %3, metadata !503, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7557
  %4 = add i32 %3, -64, !dbg !7560
  call void @llvm.dbg.value(metadata i32 %4, metadata !503, metadata !DIExpression()), !dbg !7557
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !7561
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !7562
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !7563
  call void @llvm.dbg.value(metadata i8 1, metadata !502, metadata !DIExpression()), !dbg !7557
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #25, !dbg !7564
  ret void, !dbg !7565
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !7566 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7567
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7568, !srcloc !7571
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7572, !srcloc !7575
  ret void, !dbg !7576
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !7577 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #23, !dbg !7578, !srcloc !7581
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7582
  ret void, !dbg !7583
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !7584 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7599, metadata !DIExpression()), !dbg !7603
  call void @llvm.dbg.value(metadata i8 %1, metadata !7600, metadata !DIExpression()), !dbg !7603
  call void @llvm.dbg.value(metadata i32 %2, metadata !7601, metadata !DIExpression()), !dbg !7603
  call void @llvm.dbg.value(metadata i32 %3, metadata !7602, metadata !DIExpression()), !dbg !7603
  %5 = tail call fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !7604
  %6 = icmp eq i32 %5, -22, !dbg !7606
  br i1 %6, label %7, label %9, !dbg !7607

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.70, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.71, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.72, i32 0, i32 0), i32 noundef 283) #25, !dbg !7608
  %8 = zext i8 %1 to i32, !dbg !7608
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3.73, i32 0, i32 0), i32 noundef %8) #25, !dbg !7608
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.72, i32 0, i32 0), i32 noundef 283) #25, !dbg !7608
  unreachable, !dbg !7608

9:                                                ; preds = %4
  ret void, !dbg !7613
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !7614 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7619, metadata !DIExpression()), !dbg !7624
  call void @llvm.dbg.value(metadata i8 %1, metadata !7620, metadata !DIExpression()), !dbg !7624
  call void @llvm.dbg.value(metadata i32 undef, metadata !7621, metadata !DIExpression()), !dbg !7624
  call void @llvm.dbg.value(metadata i32 undef, metadata !7622, metadata !DIExpression()), !dbg !7624
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7625
  call void @llvm.dbg.value(metadata i8 %3, metadata !7623, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7624
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #24, !dbg !7626
  call void @llvm.dbg.value(metadata i32 %4, metadata !7623, metadata !DIExpression()), !dbg !7624
  %5 = trunc i32 %4 to i8, !dbg !7627
  store i8 %5, i8* @static_regions_num, align 1, !dbg !7628
  ret i32 %4, !dbg !7629
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !7630 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7634, metadata !DIExpression()), !dbg !7640
  call void @llvm.dbg.value(metadata i8 %1, metadata !7635, metadata !DIExpression()), !dbg !7640
  call void @llvm.dbg.value(metadata i8 %2, metadata !7636, metadata !DIExpression()), !dbg !7640
  call void @llvm.dbg.value(metadata i1 %3, metadata !7637, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7640
  %5 = zext i8 %2 to i32, !dbg !7641
  call void @llvm.dbg.value(metadata i32 %5, metadata !7639, metadata !DIExpression()), !dbg !7640
  call void @llvm.dbg.value(metadata i32 0, metadata !7638, metadata !DIExpression()), !dbg !7640
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !7639, metadata !DIExpression()), !dbg !7640
  call void @llvm.dbg.value(metadata i32 0, metadata !7638, metadata !DIExpression()), !dbg !7640
  %7 = icmp eq i8 %1, 0, !dbg !7642
  br i1 %7, label %30, label %8, !dbg !7645

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7639, metadata !DIExpression()), !dbg !7640
  call void @llvm.dbg.value(metadata i32 %10, metadata !7638, metadata !DIExpression()), !dbg !7640
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !7646
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !7649
  %13 = load i32, i32* %12, align 4, !dbg !7649
  %14 = icmp eq i32 %13, 0, !dbg !7650
  br i1 %14, label %26, label %15, !dbg !7651

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !7652

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !7654
  %18 = icmp eq i32 %17, 0, !dbg !7654
  br i1 %18, label %19, label %20, !dbg !7655

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.74, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #25, !dbg !7656
  br label %30, !dbg !7662

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !7663
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !7664
  call void @llvm.dbg.value(metadata i32 %22, metadata !7639, metadata !DIExpression()), !dbg !7640
  %23 = icmp eq i32 %22, -22, !dbg !7665
  br i1 %23, label %30, label %24, !dbg !7667

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !7668
  call void @llvm.dbg.value(metadata i32 %25, metadata !7639, metadata !DIExpression()), !dbg !7640
  br label %26, !dbg !7669

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !7640
  call void @llvm.dbg.value(metadata i32 %27, metadata !7639, metadata !DIExpression()), !dbg !7640
  %28 = add nuw nsw i32 %10, 1, !dbg !7670
  call void @llvm.dbg.value(metadata i32 %28, metadata !7638, metadata !DIExpression()), !dbg !7640
  %29 = icmp eq i32 %28, %6, !dbg !7642
  br i1 %29, label %30, label %8, !dbg !7645, !llvm.loop !7671

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !7640
  ret i32 %31, !dbg !7673
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #16 !dbg !7674 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7678, metadata !DIExpression()), !dbg !7680
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !7681
  %3 = load i32, i32* %2, align 4, !dbg !7681
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !7682, !range !7683
  %5 = icmp ult i32 %4, 2, !dbg !7682
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !7684
  br i1 %7, label %8, label %15, !dbg !7684

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !7685
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !7686
  %11 = load i32, i32* %10, align 4, !dbg !7686
  %12 = and i32 %11, %9, !dbg !7687
  %13 = icmp eq i32 %12, 0, !dbg !7688
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7679, metadata !DIExpression()), !dbg !7680
  ret i32 %16, !dbg !7689
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7690 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !7694, metadata !DIExpression()), !dbg !7697
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !7695, metadata !DIExpression()), !dbg !7697
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !7698
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7698
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !7696, metadata !DIExpression()), !dbg !7699
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !7700
  %6 = load i32, i32* %5, align 4, !dbg !7700
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !7701
  store i32 %6, i32* %7, align 4, !dbg !7702
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !7703
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !7704
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !7705
  %11 = load i32, i32* %10, align 4, !dbg !7705
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* noundef nonnull %8, %struct.k_spinlock* noundef nonnull %9, i32 noundef %11) #24, !dbg !7706
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #24, !dbg !7707
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7708
  ret i32 %12, !dbg !7709
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* nocapture noundef writeonly %0, %struct.k_spinlock* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #17 !dbg !7710 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !7717, metadata !DIExpression()), !dbg !7721
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !7718, metadata !DIExpression()), !dbg !7721
  call void @llvm.dbg.value(metadata i32 undef, metadata !7719, metadata !DIExpression()), !dbg !7721
  call void @llvm.dbg.value(metadata i32 %2, metadata !7720, metadata !DIExpression()), !dbg !7721
  %4 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %1, i32 0, i32 0, !dbg !7722
  %5 = load i32, i32* %4, align 4, !dbg !7722
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #24, !dbg !7723
  %7 = or i32 %6, %5, !dbg !7724
  %8 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !7725
  store i32 %7, i32* %8, align 4, !dbg !7726
  ret void, !dbg !7727
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7728 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7732, metadata !DIExpression()), !dbg !7734
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7733, metadata !DIExpression()), !dbg !7734
  %3 = zext i8 %0 to i32, !dbg !7735
  %4 = icmp ugt i8 %0, 7, !dbg !7737
  br i1 %4, label %5, label %6, !dbg !7738

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.9.75, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #25, !dbg !7739
  br label %7, !dbg !7745

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #24, !dbg !7746
  br label %7, !dbg !7747

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !7734
  ret i32 %8, !dbg !7748
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #14 !dbg !7749 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7753, metadata !DIExpression()), !dbg !7755
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7754, metadata !DIExpression()), !dbg !7755
  tail call fastcc void @set_region_number(i32 noundef %0) #24, !dbg !7756
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7757
  %4 = load i32, i32* %3, align 4, !dbg !7757
  %5 = and i32 %4, -32, !dbg !7758
  %6 = or i32 %5, %0, !dbg !7759
  %7 = or i32 %6, 16, !dbg !7759
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7760
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7761
  %9 = load i32, i32* %8, align 4, !dbg !7761
  %10 = or i32 %9, 1, !dbg !7762
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7763
  ret void, !dbg !7764
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #14 !dbg !7765 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7768, metadata !DIExpression()), !dbg !7769
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7770
  ret void, !dbg !7771
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #11 !dbg !7772 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7776, metadata !DIExpression()), !dbg !7777
  %2 = icmp ult i32 %0, 33, !dbg !7778
  br i1 %2, label %11, label %3, !dbg !7780

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7781
  br i1 %4, label %11, label %5, !dbg !7783

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7784
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7785, !range !7683
  %8 = mul nsw i32 %7, -2, !dbg !7786
  %9 = add nsw i32 %8, 62, !dbg !7786
  %10 = and i32 %9, 62, !dbg !7787
  br label %11, !dbg !7788

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7777
  ret i32 %12, !dbg !7789
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !7790 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7794, metadata !DIExpression()), !dbg !7796
  call void @llvm.dbg.value(metadata i8 %1, metadata !7795, metadata !DIExpression()), !dbg !7796
  %3 = tail call fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !7797
  %4 = icmp eq i32 %3, -22, !dbg !7799
  br i1 %4, label %5, label %7, !dbg !7800

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.70, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.71, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.72, i32 0, i32 0), i32 noundef 314) #25, !dbg !7801
  %6 = zext i8 %1 to i32, !dbg !7801
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4.78, i32 0, i32 0), i32 noundef %6) #25, !dbg !7801
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.72, i32 0, i32 0), i32 noundef 314) #25, !dbg !7801
  unreachable, !dbg !7801

7:                                                ; preds = %2
  ret void, !dbg !7806
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !7807 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7811, metadata !DIExpression()), !dbg !7818
  call void @llvm.dbg.value(metadata i8 %1, metadata !7812, metadata !DIExpression()), !dbg !7818
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7819
  call void @llvm.dbg.value(metadata i8 %3, metadata !7813, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7818
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #24, !dbg !7820
  call void @llvm.dbg.value(metadata i32 %4, metadata !7813, metadata !DIExpression()), !dbg !7818
  %5 = icmp ne i32 %4, -22, !dbg !7821
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7822
  call void @llvm.dbg.value(metadata i32 %4, metadata !7814, metadata !DIExpression()), !dbg !7823
  br i1 %7, label %8, label %12, !dbg !7822

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7814, metadata !DIExpression()), !dbg !7823
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #24, !dbg !7824
  %10 = add i32 %9, 1, !dbg !7827
  call void @llvm.dbg.value(metadata i32 %10, metadata !7814, metadata !DIExpression()), !dbg !7823
  %11 = icmp eq i32 %10, 8, !dbg !7828
  br i1 %11, label %12, label %8, !dbg !7829, !llvm.loop !7830

12:                                               ; preds = %8, %2
  ret i32 %4, !dbg !7832
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #14 !dbg !7833 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7836, metadata !DIExpression()), !dbg !7837
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7838
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7839
  ret void, !dbg !7840
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7841 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7846
  %2 = icmp ugt i32 %1, 8, !dbg !7848
  br i1 %2, label %3, label %4, !dbg !7849

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.70, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.71, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.72, i32 0, i32 0), i32 noundef 341) #25, !dbg !7850
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5.79, i32 0, i32 0), i32 noundef %1, i32 noundef 8) #25, !dbg !7850
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.72, i32 0, i32 0), i32 noundef 341) #25, !dbg !7850
  unreachable, !dbg !7850

4:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #24, !dbg !7855
  call void @llvm.dbg.value(metadata i32 0, metadata !7845, metadata !DIExpression()), !dbg !7856
  %5 = icmp eq i32 %1, 0, !dbg !7857
  br i1 %5, label %13, label %6, !dbg !7860

6:                                                ; preds = %4
  %7 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %8, !dbg !7860

8:                                                ; preds = %6, %8
  %9 = phi i32 [ 0, %6 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7845, metadata !DIExpression()), !dbg !7856
  %10 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %7, i32 %9, !dbg !7861
  tail call fastcc void @region_init(i32 noundef %9, %struct.arm_mpu_region* noundef %10) #24, !dbg !7863
  %11 = add nuw i32 %9, 1, !dbg !7864
  call void @llvm.dbg.value(metadata i32 %11, metadata !7845, metadata !DIExpression()), !dbg !7856
  %12 = icmp eq i32 %11, %1, !dbg !7857
  br i1 %12, label %13, label %8, !dbg !7860, !llvm.loop !7865

13:                                               ; preds = %8, %4
  %14 = trunc i32 %1 to i8, !dbg !7867
  store i8 %14, i8* @static_regions_num, align 1, !dbg !7868
  tail call void @arm_core_mpu_enable() #24, !dbg !7869
  %15 = load volatile i32, i32* inttoptr (i32 -536810096 to i32*), align 16, !dbg !7870
  %16 = and i32 %15, 65280, !dbg !7870
  %17 = icmp eq i32 %16, 2048, !dbg !7870
  br i1 %17, label %19, label %18, !dbg !7873

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.70, i32 0, i32 0), i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.6.80, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.72, i32 0, i32 0), i32 noundef 435) #25, !dbg !7874
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.81, i32 0, i32 0)) #25, !dbg !7874
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.72, i32 0, i32 0), i32 noundef 435) #25, !dbg !7874
  unreachable, !dbg !7874

19:                                               ; preds = %13
  ret i32 0, !dbg !7876
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !7877 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7884, metadata !DIExpression()), !dbg !7887
  call void @llvm.dbg.value(metadata i8* %1, metadata !7885, metadata !DIExpression()), !dbg !7887
  call void @llvm.dbg.value(metadata i8* %0, metadata !7886, metadata !DIExpression()), !dbg !7887
  %3 = load i8, i8* %1, align 1, !dbg !7888
  %4 = icmp eq i8 %3, 0, !dbg !7889
  br i1 %4, label %13, label %5, !dbg !7890

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7884, metadata !DIExpression()), !dbg !7887
  call void @llvm.dbg.value(metadata i8* %8, metadata !7885, metadata !DIExpression()), !dbg !7887
  store i8 %6, i8* %7, align 1, !dbg !7891
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7893
  call void @llvm.dbg.value(metadata i8* %9, metadata !7884, metadata !DIExpression()), !dbg !7887
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7894
  call void @llvm.dbg.value(metadata i8* %10, metadata !7885, metadata !DIExpression()), !dbg !7887
  %11 = load i8, i8* %10, align 1, !dbg !7888
  %12 = icmp eq i8 %11, 0, !dbg !7889
  br i1 %12, label %13, label %5, !dbg !7890, !llvm.loop !7895

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7897
  ret i8* %0, !dbg !7898
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7899 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7903, metadata !DIExpression()), !dbg !7907
  call void @llvm.dbg.value(metadata i8* %1, metadata !7904, metadata !DIExpression()), !dbg !7907
  call void @llvm.dbg.value(metadata i32 %2, metadata !7905, metadata !DIExpression()), !dbg !7907
  call void @llvm.dbg.value(metadata i8* %0, metadata !7906, metadata !DIExpression()), !dbg !7907
  %4 = icmp eq i32 %2, 0, !dbg !7908
  br i1 %4, label %22, label %5, !dbg !7909

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7903, metadata !DIExpression()), !dbg !7907
  call void @llvm.dbg.value(metadata i32 %7, metadata !7905, metadata !DIExpression()), !dbg !7907
  call void @llvm.dbg.value(metadata i8* %8, metadata !7904, metadata !DIExpression()), !dbg !7907
  %9 = load i8, i8* %8, align 1, !dbg !7910
  %10 = icmp eq i8 %9, 0, !dbg !7911
  br i1 %10, label %16, label %11, !dbg !7912

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7913
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7915
  call void @llvm.dbg.value(metadata i8* %12, metadata !7904, metadata !DIExpression()), !dbg !7907
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7916
  call void @llvm.dbg.value(metadata i8* %13, metadata !7903, metadata !DIExpression()), !dbg !7907
  %14 = add i32 %7, -1, !dbg !7917
  call void @llvm.dbg.value(metadata i32 %14, metadata !7905, metadata !DIExpression()), !dbg !7907
  %15 = icmp eq i32 %14, 0, !dbg !7908
  br i1 %15, label %22, label %5, !dbg !7909, !llvm.loop !7918

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7903, metadata !DIExpression()), !dbg !7907
  call void @llvm.dbg.value(metadata i32 %18, metadata !7905, metadata !DIExpression()), !dbg !7907
  store i8 0, i8* %17, align 1, !dbg !7920
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7922
  call void @llvm.dbg.value(metadata i8* %19, metadata !7903, metadata !DIExpression()), !dbg !7907
  %20 = add i32 %18, -1, !dbg !7923
  call void @llvm.dbg.value(metadata i32 %20, metadata !7905, metadata !DIExpression()), !dbg !7907
  %21 = icmp eq i32 %20, 0, !dbg !7924
  br i1 %21, label %22, label %16, !dbg !7925, !llvm.loop !7926

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7928
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7929 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7933, metadata !DIExpression()), !dbg !7936
  call void @llvm.dbg.value(metadata i32 %1, metadata !7934, metadata !DIExpression()), !dbg !7936
  call void @llvm.dbg.value(metadata i32 %1, metadata !7935, metadata !DIExpression()), !dbg !7936
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7937

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7933, metadata !DIExpression()), !dbg !7936
  %6 = load i8, i8* %5, align 1, !dbg !7938
  %7 = icmp eq i8 %6, %3, !dbg !7939
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7940
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7941
  call void @llvm.dbg.value(metadata i8* %10, metadata !7933, metadata !DIExpression()), !dbg !7936
  br i1 %9, label %11, label %4, !dbg !7940, !llvm.loop !7943

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7945
  ret i8* %12, !dbg !7946
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7947 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7949, metadata !DIExpression()), !dbg !7952
  call void @llvm.dbg.value(metadata i32 %1, metadata !7950, metadata !DIExpression()), !dbg !7952
  call void @llvm.dbg.value(metadata i8* null, metadata !7951, metadata !DIExpression()), !dbg !7952
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7953

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7952
  call void @llvm.dbg.value(metadata i8* %6, metadata !7951, metadata !DIExpression()), !dbg !7952
  call void @llvm.dbg.value(metadata i8* %5, metadata !7949, metadata !DIExpression()), !dbg !7952
  %7 = load i8, i8* %5, align 1, !dbg !7954
  %8 = icmp eq i8 %7, %3, !dbg !7957
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7958
  call void @llvm.dbg.value(metadata i8* %9, metadata !7951, metadata !DIExpression()), !dbg !7952
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7959
  call void @llvm.dbg.value(metadata i8* %10, metadata !7949, metadata !DIExpression()), !dbg !7952
  %11 = icmp eq i8 %7, 0, !dbg !7960
  br i1 %11, label %12, label %4, !dbg !7960, !llvm.loop !7961

12:                                               ; preds = %4
  ret i8* %9, !dbg !7963
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #6 !dbg !7964 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7968, metadata !DIExpression()), !dbg !7970
  call void @llvm.dbg.value(metadata i32 0, metadata !7969, metadata !DIExpression()), !dbg !7970
  %2 = load i8, i8* %0, align 1, !dbg !7971
  %3 = icmp eq i8 %2, 0, !dbg !7972
  br i1 %3, label %11, label %4, !dbg !7973

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7969, metadata !DIExpression()), !dbg !7970
  call void @llvm.dbg.value(metadata i8* %6, metadata !7968, metadata !DIExpression()), !dbg !7970
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7974
  call void @llvm.dbg.value(metadata i8* %7, metadata !7968, metadata !DIExpression()), !dbg !7970
  %8 = add i32 %5, 1, !dbg !7976
  call void @llvm.dbg.value(metadata i32 %8, metadata !7969, metadata !DIExpression()), !dbg !7970
  %9 = load i8, i8* %7, align 1, !dbg !7971
  %10 = icmp eq i8 %9, 0, !dbg !7972
  br i1 %10, label %11, label %4, !dbg !7973, !llvm.loop !7977

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7970
  ret i32 %12, !dbg !7979
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7980 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7984, metadata !DIExpression()), !dbg !7987
  call void @llvm.dbg.value(metadata i32 %1, metadata !7985, metadata !DIExpression()), !dbg !7987
  call void @llvm.dbg.value(metadata i32 0, metadata !7986, metadata !DIExpression()), !dbg !7987
  %3 = load i8, i8* %0, align 1, !dbg !7988
  %4 = icmp ne i8 %3, 0, !dbg !7989
  %5 = icmp ne i32 %1, 0, !dbg !7990
  %6 = and i1 %4, %5, !dbg !7990
  br i1 %6, label %7, label %16, !dbg !7991

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7986, metadata !DIExpression()), !dbg !7987
  call void @llvm.dbg.value(metadata i8* %9, metadata !7984, metadata !DIExpression()), !dbg !7987
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7992
  call void @llvm.dbg.value(metadata i8* %10, metadata !7984, metadata !DIExpression()), !dbg !7987
  %11 = add nuw i32 %8, 1, !dbg !7994
  call void @llvm.dbg.value(metadata i32 %11, metadata !7986, metadata !DIExpression()), !dbg !7987
  %12 = load i8, i8* %10, align 1, !dbg !7988
  %13 = icmp ne i8 %12, 0, !dbg !7989
  %14 = icmp ult i32 %11, %1, !dbg !7990
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7990
  br i1 %15, label %7, label %16, !dbg !7991, !llvm.loop !7995

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7987
  ret i32 %17, !dbg !7997
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #6 !dbg !7998 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8002, metadata !DIExpression()), !dbg !8004
  call void @llvm.dbg.value(metadata i8* %1, metadata !8003, metadata !DIExpression()), !dbg !8004
  %3 = load i8, i8* %0, align 1, !dbg !8005
  %4 = load i8, i8* %1, align 1, !dbg !8006
  %5 = icmp ne i8 %3, %4, !dbg !8007
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !8008
  br i1 %7, label %18, label %8, !dbg !8008

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !8003, metadata !DIExpression()), !dbg !8004
  call void @llvm.dbg.value(metadata i8* %10, metadata !8002, metadata !DIExpression()), !dbg !8004
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8009
  call void @llvm.dbg.value(metadata i8* %11, metadata !8002, metadata !DIExpression()), !dbg !8004
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8011
  call void @llvm.dbg.value(metadata i8* %12, metadata !8003, metadata !DIExpression()), !dbg !8004
  %13 = load i8, i8* %11, align 1, !dbg !8005
  %14 = load i8, i8* %12, align 1, !dbg !8006
  %15 = icmp ne i8 %13, %14, !dbg !8007
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !8008
  br i1 %17, label %18, label %8, !dbg !8008, !llvm.loop !8012

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !8005
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !8006
  %21 = zext i8 %19 to i32, !dbg !8015
  %22 = zext i8 %20 to i32, !dbg !8016
  %23 = sub nsw i32 %21, %22, !dbg !8017
  ret i32 %23, !dbg !8018
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #6 !dbg !8019 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8023, metadata !DIExpression()), !dbg !8026
  call void @llvm.dbg.value(metadata i8* %1, metadata !8024, metadata !DIExpression()), !dbg !8026
  call void @llvm.dbg.value(metadata i32 %2, metadata !8025, metadata !DIExpression()), !dbg !8026
  %4 = icmp eq i32 %2, 0, !dbg !8027
  br i1 %4, label %23, label %5, !dbg !8027

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !8025, metadata !DIExpression()), !dbg !8026
  call void @llvm.dbg.value(metadata i8* %7, metadata !8024, metadata !DIExpression()), !dbg !8026
  call void @llvm.dbg.value(metadata i8* %8, metadata !8023, metadata !DIExpression()), !dbg !8026
  %9 = load i8, i8* %8, align 1, !dbg !8028
  %10 = load i8, i8* %7, align 1, !dbg !8029
  %11 = icmp ne i8 %9, %10, !dbg !8030
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !8031
  br i1 %13, label %19, label %14, !dbg !8031

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8032
  call void @llvm.dbg.value(metadata i8* %15, metadata !8023, metadata !DIExpression()), !dbg !8026
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8034
  call void @llvm.dbg.value(metadata i8* %16, metadata !8024, metadata !DIExpression()), !dbg !8026
  %17 = add i32 %6, -1, !dbg !8035
  call void @llvm.dbg.value(metadata i32 %17, metadata !8025, metadata !DIExpression()), !dbg !8026
  %18 = icmp eq i32 %17, 0, !dbg !8027
  br i1 %18, label %23, label %5, !dbg !8027, !llvm.loop !8036

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !8039
  %21 = zext i8 %10 to i32, !dbg !8040
  %22 = sub nsw i32 %20, %21, !dbg !8041
  br label %23, !dbg !8042

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !8042
  ret i32 %24, !dbg !8043
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #13 !dbg !8044 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8048, metadata !DIExpression()), !dbg !8053
  call void @llvm.dbg.value(metadata i8* %1, metadata !8049, metadata !DIExpression()), !dbg !8053
  call void @llvm.dbg.value(metadata i8** %2, metadata !8050, metadata !DIExpression()), !dbg !8053
  %4 = icmp eq i8* %0, null, !dbg !8054
  br i1 %4, label %5, label %7, !dbg !8054

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !8055
  br label %7, !dbg !8054

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !8054
  call void @llvm.dbg.value(metadata i8* %8, metadata !8051, metadata !DIExpression()), !dbg !8053
  %9 = load i8, i8* %8, align 1, !dbg !8056
  %10 = icmp eq i8 %9, 0, !dbg !8056
  br i1 %10, label %33, label %11, !dbg !8057

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8051, metadata !DIExpression()), !dbg !8053
  %14 = zext i8 %12 to i32, !dbg !8056
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #24, !dbg !8058
  %16 = icmp eq i8* %15, null, !dbg !8057
  br i1 %16, label %21, label %17, !dbg !8059

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8060
  call void @llvm.dbg.value(metadata i8* %18, metadata !8051, metadata !DIExpression()), !dbg !8053
  %19 = load i8, i8* %18, align 1, !dbg !8056
  %20 = icmp eq i8 %19, 0, !dbg !8056
  br i1 %20, label %33, label %11, !dbg !8057, !llvm.loop !8062

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !8052, metadata !DIExpression()), !dbg !8053
  %24 = zext i8 %22 to i32, !dbg !8064
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #24, !dbg !8065
  %26 = icmp eq i8* %25, null, !dbg !8066
  br i1 %26, label %27, label %31, !dbg !8067

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8068
  call void @llvm.dbg.value(metadata i8* %28, metadata !8052, metadata !DIExpression()), !dbg !8053
  %29 = load i8, i8* %28, align 1, !dbg !8064
  %30 = icmp eq i8 %29, 0, !dbg !8064
  br i1 %30, label %33, label %21, !dbg !8070, !llvm.loop !8071

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !8073
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8076
  br label %33, !dbg !8077

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !8053
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !8053
  store i8* %34, i8** %2, align 4, !dbg !8053
  ret i8* %35, !dbg !8078
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !8079 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8081, metadata !DIExpression()), !dbg !8083
  call void @llvm.dbg.value(metadata i8* %1, metadata !8082, metadata !DIExpression()), !dbg !8083
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !8084
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !8085
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #24, !dbg !8086
  ret i8* %0, !dbg !8087
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !8088 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8090, metadata !DIExpression()), !dbg !8095
  call void @llvm.dbg.value(metadata i8* %1, metadata !8091, metadata !DIExpression()), !dbg !8095
  call void @llvm.dbg.value(metadata i32 %2, metadata !8092, metadata !DIExpression()), !dbg !8095
  call void @llvm.dbg.value(metadata i8* %0, metadata !8093, metadata !DIExpression()), !dbg !8095
  %4 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !8096
  call void @llvm.dbg.value(metadata i32 %4, metadata !8094, metadata !DIExpression()), !dbg !8095
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !8097
  call void @llvm.dbg.value(metadata i8* %5, metadata !8090, metadata !DIExpression()), !dbg !8095
  call void @llvm.dbg.value(metadata i8* %1, metadata !8091, metadata !DIExpression()), !dbg !8095
  call void @llvm.dbg.value(metadata i32 %2, metadata !8092, metadata !DIExpression()), !dbg !8095
  call void @llvm.dbg.value(metadata i32 %2, metadata !8092, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8095
  %6 = icmp eq i32 %2, 0, !dbg !8098
  br i1 %6, label %18, label %7, !dbg !8099

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !8100
  call void @llvm.dbg.value(metadata i8* %9, metadata !8090, metadata !DIExpression()), !dbg !8095
  call void @llvm.dbg.value(metadata i8* %10, metadata !8091, metadata !DIExpression()), !dbg !8095
  %12 = load i8, i8* %10, align 1, !dbg !8101
  %13 = icmp eq i8 %12, 0, !dbg !8102
  br i1 %13, label %18, label %14, !dbg !8103

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8104
  call void @llvm.dbg.value(metadata i8* %15, metadata !8091, metadata !DIExpression()), !dbg !8095
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8106
  call void @llvm.dbg.value(metadata i8* %16, metadata !8090, metadata !DIExpression()), !dbg !8095
  store i8 %12, i8* %9, align 1, !dbg !8107
  call void @llvm.dbg.value(metadata i32 %11, metadata !8092, metadata !DIExpression()), !dbg !8095
  call void @llvm.dbg.value(metadata i32 %11, metadata !8092, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8095
  %17 = icmp eq i32 %11, 0, !dbg !8098
  br i1 %17, label %18, label %7, !dbg !8099, !llvm.loop !8108

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !8095
  store i8 0, i8* %19, align 1, !dbg !8110
  ret i8* %0, !dbg !8111
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #6 !dbg !8112 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8116, metadata !DIExpression()), !dbg !8121
  call void @llvm.dbg.value(metadata i8* %1, metadata !8117, metadata !DIExpression()), !dbg !8121
  call void @llvm.dbg.value(metadata i32 %2, metadata !8118, metadata !DIExpression()), !dbg !8121
  call void @llvm.dbg.value(metadata i8* %0, metadata !8119, metadata !DIExpression()), !dbg !8121
  call void @llvm.dbg.value(metadata i8* %1, metadata !8120, metadata !DIExpression()), !dbg !8121
  %4 = icmp eq i32 %2, 0, !dbg !8122
  br i1 %4, label %31, label %5, !dbg !8124

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8120, metadata !DIExpression()), !dbg !8121
  call void @llvm.dbg.value(metadata i8* %0, metadata !8119, metadata !DIExpression()), !dbg !8121
  call void @llvm.dbg.value(metadata i32 %2, metadata !8118, metadata !DIExpression()), !dbg !8121
  %6 = add i32 %2, -1, !dbg !8125
  call void @llvm.dbg.value(metadata i32 %6, metadata !8118, metadata !DIExpression()), !dbg !8121
  %7 = icmp eq i32 %6, 0, !dbg !8126
  br i1 %7, label %23, label %8, !dbg !8127

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !8128
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !8128
  br label %11, !dbg !8128

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8120, metadata !DIExpression()), !dbg !8121
  call void @llvm.dbg.value(metadata i8* %14, metadata !8119, metadata !DIExpression()), !dbg !8121
  %15 = load i8, i8* %14, align 1, !dbg !8129
  %16 = load i8, i8* %13, align 1, !dbg !8130
  %17 = icmp eq i8 %15, %16, !dbg !8131
  br i1 %17, label %18, label %23, !dbg !8128

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !8132
  call void @llvm.dbg.value(metadata i8* %19, metadata !8119, metadata !DIExpression()), !dbg !8121
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8134
  call void @llvm.dbg.value(metadata i8* %20, metadata !8120, metadata !DIExpression()), !dbg !8121
  call void @llvm.dbg.value(metadata i32 %12, metadata !8118, metadata !DIExpression()), !dbg !8121
  %21 = add i32 %12, -1, !dbg !8125
  call void @llvm.dbg.value(metadata i32 %21, metadata !8118, metadata !DIExpression()), !dbg !8121
  %22 = icmp eq i32 %21, 0, !dbg !8126
  br i1 %22, label %23, label %11, !dbg !8127, !llvm.loop !8135

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !8121
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !8121
  %26 = load i8, i8* %24, align 1, !dbg !8137
  %27 = zext i8 %26 to i32, !dbg !8137
  %28 = load i8, i8* %25, align 1, !dbg !8138
  %29 = zext i8 %28 to i32, !dbg !8138
  %30 = sub nsw i32 %27, %29, !dbg !8139
  br label %31, !dbg !8140

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !8121
  ret i32 %32, !dbg !8141
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !8142 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8146, metadata !DIExpression()), !dbg !8151
  call void @llvm.dbg.value(metadata i8* %1, metadata !8147, metadata !DIExpression()), !dbg !8151
  call void @llvm.dbg.value(metadata i32 %2, metadata !8148, metadata !DIExpression()), !dbg !8151
  call void @llvm.dbg.value(metadata i8* %0, metadata !8149, metadata !DIExpression()), !dbg !8151
  call void @llvm.dbg.value(metadata i8* %1, metadata !8150, metadata !DIExpression()), !dbg !8151
  %4 = ptrtoint i8* %0 to i32, !dbg !8152
  %5 = ptrtoint i8* %1 to i32, !dbg !8152
  %6 = sub i32 %4, %5, !dbg !8152
  %7 = icmp ult i32 %6, %2, !dbg !8154
  br i1 %7, label %10, label %8, !dbg !8155

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8150, metadata !DIExpression()), !dbg !8151
  call void @llvm.dbg.value(metadata i8* %0, metadata !8149, metadata !DIExpression()), !dbg !8151
  call void @llvm.dbg.value(metadata i32 %2, metadata !8148, metadata !DIExpression()), !dbg !8151
  %9 = icmp eq i32 %2, 0, !dbg !8156
  br i1 %9, label %26, label %17, !dbg !8158

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !8148, metadata !DIExpression()), !dbg !8151
  %12 = add i32 %11, -1, !dbg !8159
  call void @llvm.dbg.value(metadata i32 %12, metadata !8148, metadata !DIExpression()), !dbg !8151
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !8162
  %14 = load i8, i8* %13, align 1, !dbg !8162
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !8163
  store i8 %14, i8* %15, align 1, !dbg !8164
  %16 = icmp eq i32 %12, 0, !dbg !8165
  br i1 %16, label %26, label %10, !dbg !8166, !llvm.loop !8167

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !8150, metadata !DIExpression()), !dbg !8151
  call void @llvm.dbg.value(metadata i8* %19, metadata !8149, metadata !DIExpression()), !dbg !8151
  call void @llvm.dbg.value(metadata i32 %20, metadata !8148, metadata !DIExpression()), !dbg !8151
  %21 = load i8, i8* %18, align 1, !dbg !8169
  store i8 %21, i8* %19, align 1, !dbg !8171
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !8172
  call void @llvm.dbg.value(metadata i8* %22, metadata !8149, metadata !DIExpression()), !dbg !8151
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !8173
  call void @llvm.dbg.value(metadata i8* %23, metadata !8150, metadata !DIExpression()), !dbg !8151
  %24 = add i32 %20, -1, !dbg !8174
  call void @llvm.dbg.value(metadata i32 %24, metadata !8148, metadata !DIExpression()), !dbg !8151
  %25 = icmp eq i32 %24, 0, !dbg !8156
  br i1 %25, label %26, label %17, !dbg !8158, !llvm.loop !8175

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !8177
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !8178 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8184, metadata !DIExpression()), !dbg !8189
  call void @llvm.dbg.value(metadata i8* %1, metadata !8185, metadata !DIExpression()), !dbg !8189
  call void @llvm.dbg.value(metadata i32 %2, metadata !8186, metadata !DIExpression()), !dbg !8189
  call void @llvm.dbg.value(metadata i8* %0, metadata !8187, metadata !DIExpression()), !dbg !8189
  call void @llvm.dbg.value(metadata i8* %1, metadata !8188, metadata !DIExpression()), !dbg !8189
  %4 = icmp eq i32 %2, 0, !dbg !8190
  br i1 %4, label %14, label %5, !dbg !8191

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8188, metadata !DIExpression()), !dbg !8189
  call void @llvm.dbg.value(metadata i8* %7, metadata !8187, metadata !DIExpression()), !dbg !8189
  call void @llvm.dbg.value(metadata i32 %8, metadata !8186, metadata !DIExpression()), !dbg !8189
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8192
  call void @llvm.dbg.value(metadata i8* %9, metadata !8188, metadata !DIExpression()), !dbg !8189
  %10 = load i8, i8* %6, align 1, !dbg !8194
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8195
  call void @llvm.dbg.value(metadata i8* %11, metadata !8187, metadata !DIExpression()), !dbg !8189
  store i8 %10, i8* %7, align 1, !dbg !8196
  %12 = add i32 %8, -1, !dbg !8197
  call void @llvm.dbg.value(metadata i32 %12, metadata !8186, metadata !DIExpression()), !dbg !8189
  %13 = icmp eq i32 %12, 0, !dbg !8190
  br i1 %13, label %14, label %5, !dbg !8191, !llvm.loop !8198

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !8200
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #18 !dbg !8201 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8205, metadata !DIExpression()), !dbg !8210
  call void @llvm.dbg.value(metadata i32 %1, metadata !8206, metadata !DIExpression()), !dbg !8210
  call void @llvm.dbg.value(metadata i32 %2, metadata !8207, metadata !DIExpression()), !dbg !8210
  call void @llvm.dbg.value(metadata i8* %0, metadata !8208, metadata !DIExpression()), !dbg !8210
  %4 = trunc i32 %1 to i8, !dbg !8211
  call void @llvm.dbg.value(metadata i8 %4, metadata !8209, metadata !DIExpression()), !dbg !8210
  call void @llvm.dbg.value(metadata i32 %2, metadata !8207, metadata !DIExpression()), !dbg !8210
  call void @llvm.dbg.value(metadata i8* %0, metadata !8208, metadata !DIExpression()), !dbg !8210
  %5 = icmp eq i32 %2, 0, !dbg !8212
  br i1 %5, label %12, label %6, !dbg !8213

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !8207, metadata !DIExpression()), !dbg !8210
  call void @llvm.dbg.value(metadata i8* %8, metadata !8208, metadata !DIExpression()), !dbg !8210
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8214
  call void @llvm.dbg.value(metadata i8* %9, metadata !8208, metadata !DIExpression()), !dbg !8210
  store i8 %4, i8* %8, align 1, !dbg !8216
  %10 = add i32 %7, -1, !dbg !8217
  call void @llvm.dbg.value(metadata i32 %10, metadata !8207, metadata !DIExpression()), !dbg !8210
  %11 = icmp eq i32 %10, 0, !dbg !8212
  br i1 %11, label %12, label %6, !dbg !8213, !llvm.loop !8218

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !8220
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #6 !dbg !8221 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8225, metadata !DIExpression()), !dbg !8231
  call void @llvm.dbg.value(metadata i32 %1, metadata !8226, metadata !DIExpression()), !dbg !8231
  call void @llvm.dbg.value(metadata i32 %2, metadata !8227, metadata !DIExpression()), !dbg !8231
  %4 = icmp eq i32 %2, 0, !dbg !8232
  br i1 %4, label %17, label %5, !dbg !8233

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !8234

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !8235
  call void @llvm.dbg.value(metadata i8* %9, metadata !8228, metadata !DIExpression()), !dbg !8235
  call void @llvm.dbg.value(metadata i32 %8, metadata !8227, metadata !DIExpression()), !dbg !8231
  call void @llvm.dbg.value(metadata i8* %9, metadata !8228, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8235
  %10 = load i8, i8* %9, align 1, !dbg !8236
  %11 = icmp eq i8 %10, %6, !dbg !8239
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !8240
  call void @llvm.dbg.value(metadata i8* %12, metadata !8228, metadata !DIExpression()), !dbg !8235
  call void @llvm.dbg.value(metadata i32 %13, metadata !8227, metadata !DIExpression()), !dbg !8231
  br i1 %15, label %16, label %7, !dbg !8240, !llvm.loop !8241

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !8243

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !8231
  ret i8* %19, !dbg !8244
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !8245 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !8247, metadata !DIExpression()), !dbg !8248
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !8249
  ret void, !dbg !8250
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #3 !dbg !8251 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8253, metadata !DIExpression()), !dbg !8254
  ret i32 -1, !dbg !8255
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8256 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8260, metadata !DIExpression()), !dbg !8262
  call void @llvm.dbg.value(metadata i32* %1, metadata !8261, metadata !DIExpression()), !dbg !8262
  %3 = ptrtoint i32* %1 to i32, !dbg !8263
  %4 = and i32 %3, -2, !dbg !8263
  %5 = icmp eq i32 %4, 2, !dbg !8263
  br i1 %5, label %6, label %9, !dbg !8263

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8264
  %8 = tail call i32 %7(i32 noundef %0) #25, !dbg !8264
  br label %9, !dbg !8265

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !8265
  ret i32 %10, !dbg !8266
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8267 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8269, metadata !DIExpression()), !dbg !8271
  call void @llvm.dbg.value(metadata i32* %1, metadata !8270, metadata !DIExpression()), !dbg !8271
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !8272
  ret i32 %3, !dbg !8273
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !8274 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8277, metadata !DIExpression()), !dbg !8279
  call void @llvm.dbg.value(metadata i32* %1, metadata !8278, metadata !DIExpression()), !dbg !8279
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8280, !srcloc !8282
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !8283
  ret i32 %3, !dbg !8284
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !8285 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8290, metadata !DIExpression()), !dbg !8294
  call void @llvm.dbg.value(metadata i32* %1, metadata !8291, metadata !DIExpression()), !dbg !8294
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !8295
  call void @llvm.dbg.value(metadata i32 %3, metadata !8292, metadata !DIExpression()), !dbg !8294
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #24, !dbg !8296
  call void @llvm.dbg.value(metadata i32 %4, metadata !8293, metadata !DIExpression()), !dbg !8294
  %5 = icmp ne i32 %3, %4, !dbg !8297
  %6 = sext i1 %5 to i32, !dbg !8298
  ret i32 %6, !dbg !8299
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !8300 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8304, metadata !DIExpression()), !dbg !8308
  call void @llvm.dbg.value(metadata i32 %1, metadata !8305, metadata !DIExpression()), !dbg !8308
  call void @llvm.dbg.value(metadata i32 %2, metadata !8306, metadata !DIExpression()), !dbg !8308
  call void @llvm.dbg.value(metadata i32* %3, metadata !8307, metadata !DIExpression()), !dbg !8308
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8309
  ret i32 %5, !dbg !8310
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !8311 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8313, metadata !DIExpression()), !dbg !8317
  call void @llvm.dbg.value(metadata i32 %1, metadata !8314, metadata !DIExpression()), !dbg !8317
  call void @llvm.dbg.value(metadata i32 %2, metadata !8315, metadata !DIExpression()), !dbg !8317
  call void @llvm.dbg.value(metadata i32* %3, metadata !8316, metadata !DIExpression()), !dbg !8317
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8318, !srcloc !8320
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8321
  ret i32 %5, !dbg !8322
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !8323 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8325, metadata !DIExpression()), !dbg !8333
  call void @llvm.dbg.value(metadata i32 %1, metadata !8326, metadata !DIExpression()), !dbg !8333
  call void @llvm.dbg.value(metadata i32 %2, metadata !8327, metadata !DIExpression()), !dbg !8333
  call void @llvm.dbg.value(metadata i32* %3, metadata !8328, metadata !DIExpression()), !dbg !8333
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !8334
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !8336
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !8336
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !8336
  br i1 %11, label %33, label %12, !dbg !8336

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !8333
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !8333
  call void @llvm.dbg.value(metadata i8* %14, metadata !8331, metadata !DIExpression()), !dbg !8333
  call void @llvm.dbg.value(metadata i32 %13, metadata !8329, metadata !DIExpression()), !dbg !8333
  call void @llvm.dbg.value(metadata i32 %1, metadata !8330, metadata !DIExpression()), !dbg !8333
  br label %15, !dbg !8337

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !8339
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !8333
  call void @llvm.dbg.value(metadata i8* %17, metadata !8331, metadata !DIExpression()), !dbg !8333
  call void @llvm.dbg.value(metadata i32 %16, metadata !8330, metadata !DIExpression()), !dbg !8333
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8340
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8343
  call void @llvm.dbg.value(metadata i8* %19, metadata !8331, metadata !DIExpression()), !dbg !8333
  %20 = load i8, i8* %17, align 1, !dbg !8344
  %21 = zext i8 %20 to i32, !dbg !8345
  %22 = tail call i32 %18(i32 noundef %21) #25, !dbg !8340
  %23 = icmp eq i32 %22, -1, !dbg !8346
  br i1 %23, label %30, label %24, !dbg !8347

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !8348
  call void @llvm.dbg.value(metadata i32 %25, metadata !8330, metadata !DIExpression()), !dbg !8333
  %26 = icmp eq i32 %25, 0, !dbg !8349
  br i1 %26, label %27, label %15, !dbg !8350, !llvm.loop !8351

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !8353
  call void @llvm.dbg.value(metadata i32 %28, metadata !8329, metadata !DIExpression()), !dbg !8333
  %29 = icmp eq i32 %28, 0, !dbg !8354
  br i1 %29, label %30, label %12, !dbg !8355, !llvm.loop !8356

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !8333
  call void @llvm.dbg.value(metadata i32 %31, metadata !8329, metadata !DIExpression()), !dbg !8333
  call void @llvm.dbg.label(metadata !8332), !dbg !8359
  %32 = sub i32 %2, %31, !dbg !8360
  br label %33, !dbg !8361

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !8333
  ret i32 %34, !dbg !8362
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !8363 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8367, metadata !DIExpression()), !dbg !8368
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !8369
  %3 = icmp eq i32 %2, -1, !dbg !8371
  br i1 %3, label %8, label %4, !dbg !8372

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !8373
  %6 = icmp eq i32 %5, -1, !dbg !8374
  %7 = sext i1 %6 to i32, !dbg !8373
  br label %8, !dbg !8375

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !8368
  ret i32 %9, !dbg !8376
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !8377 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8379, metadata !DIExpression()), !dbg !8380
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #24, !dbg !8381
  ret void, !dbg !8382
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !8383 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8387, metadata !DIExpression()), !dbg !8393
  call void @llvm.dbg.value(metadata i32 %1, metadata !8388, metadata !DIExpression()), !dbg !8393
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !8389, metadata !DIExpression()), !dbg !8393
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !8394
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !8394
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !8394
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !8390, metadata !DIExpression()), !dbg !8393
  call void @llvm.dbg.value(metadata i32 %0, metadata !8392, metadata !DIExpression()), !dbg !8393
  %7 = icmp slt i32 %0, %1, !dbg !8395
  br i1 %7, label %8, label %22, !dbg !8398

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8392, metadata !DIExpression()), !dbg !8393
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #24, !dbg !8399
  %11 = icmp eq i32 %10, 0, !dbg !8399
  br i1 %11, label %19, label %12, !dbg !8402

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #24, !dbg !8403
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !8405
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !8405
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !8407
  br i1 %15, label %19, label %16, !dbg !8408

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !8409
  %18 = load i8*, i8** %17, align 4, !dbg !8409
  tail call void %14(i32 noundef %9, i8* noundef %18) #25, !dbg !8410
  br label %19, !dbg !8411

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !8412
  call void @llvm.dbg.value(metadata i32 %20, metadata !8392, metadata !DIExpression()), !dbg !8393
  %21 = icmp eq i32 %20, %1, !dbg !8395
  br i1 %21, label %22, label %8, !dbg !8398, !llvm.loop !8413

22:                                               ; preds = %19, %3
  ret void, !dbg !8415
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #15 !dbg !8416 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8418, metadata !DIExpression()), !dbg !8419
  %2 = shl nuw i32 1, %0, !dbg !8420
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #24, !dbg !8423
  ret i32 %3, !dbg !8424
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #14 !dbg !8425 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8429, metadata !DIExpression()), !dbg !8430
  %2 = shl nuw i32 1, %0, !dbg !8431
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #24, !dbg !8434
  ret void, !dbg !8435
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8436 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8439, metadata !DIExpression()), !dbg !8440
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !8441
  ret void, !dbg !8442
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8443 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8445, metadata !DIExpression()), !dbg !8446
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !8447
  %3 = and i32 %2, %0, !dbg !8447
  %4 = icmp eq i32 %3, %0, !dbg !8448
  %5 = zext i1 %4 to i32, !dbg !8448
  ret i32 %5, !dbg !8449
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !8450 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8452, metadata !DIExpression()), !dbg !8453
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #24, !dbg !8454
  ret void, !dbg !8455
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !8456 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8458, metadata !DIExpression()), !dbg !8459
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #24, !dbg !8460
  ret void, !dbg !8461
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !8462 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8464, metadata !DIExpression()), !dbg !8465
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #24, !dbg !8466
  ret void, !dbg !8467
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !8468 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8470, metadata !DIExpression()), !dbg !8471
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #24, !dbg !8472
  ret void, !dbg !8473
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !8474 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8476, metadata !DIExpression()), !dbg !8477
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #24, !dbg !8478
  ret void, !dbg !8479
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !8480 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8482, metadata !DIExpression()), !dbg !8483
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #24, !dbg !8484
  ret void, !dbg !8485
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !8486 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8488, metadata !DIExpression()), !dbg !8489
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #24, !dbg !8490
  ret void, !dbg !8491
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !8492 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8494, metadata !DIExpression()), !dbg !8495
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #24, !dbg !8496
  ret void, !dbg !8497
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !8498 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8500, metadata !DIExpression()), !dbg !8501
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #24, !dbg !8502
  ret void, !dbg !8503
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !8504 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8506, metadata !DIExpression()), !dbg !8507
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #24, !dbg !8508
  ret void, !dbg !8509
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8510 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8512, metadata !DIExpression()), !dbg !8513
  tail call fastcc void @__stm32_exti_connect_irqs() #24, !dbg !8514
  ret i32 0, !dbg !8515
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !766 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !770, metadata !DIExpression()), !dbg !8516
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #25, !dbg !8517
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #25, !dbg !8519
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #25, !dbg !8521
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #25, !dbg !8523
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #25, !dbg !8525
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #25, !dbg !8527
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #25, !dbg !8529
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #25, !dbg !8531
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #25, !dbg !8533
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #25, !dbg !8535
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #25, !dbg !8537
  ret void, !dbg !8539
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !8540 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8542, metadata !DIExpression()), !dbg !8544
  call void @llvm.dbg.value(metadata i32 0, metadata !8543, metadata !DIExpression()), !dbg !8544
  call void @llvm.dbg.value(metadata i32 undef, metadata !8543, metadata !DIExpression()), !dbg !8544
  %2 = lshr i32 6684671, %0, !dbg !8545
  %3 = and i32 %2, 1, !dbg !8545
  %4 = or i32 %3, %0, !dbg !8547
  %5 = icmp eq i32 %4, 0, !dbg !8547
  br i1 %5, label %6, label %7, !dbg !8547

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.94, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.95, i32 0, i32 0), i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.96, i32 0, i32 0), i32 noundef 123) #25, !dbg !8548
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.96, i32 0, i32 0), i32 noundef 123) #25, !dbg !8548
  unreachable, !dbg !8548

7:                                                ; preds = %1
  %8 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !8553
  %9 = load i32, i32* %8, align 4, !dbg !8553
  call void @llvm.dbg.value(metadata i32 %9, metadata !8543, metadata !DIExpression()), !dbg !8544
  %10 = shl nuw i32 1, %0, !dbg !8554
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %10) #24, !dbg !8555
  tail call void @arch_irq_enable(i32 noundef %9) #25, !dbg !8556
  ret void, !dbg !8557
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8558 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8560, metadata !DIExpression()), !dbg !8561
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8562
  %3 = or i32 %2, %0, !dbg !8562
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8562
  ret void, !dbg !8563
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #14 !dbg !8564 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8566, metadata !DIExpression()), !dbg !8567
  %2 = icmp slt i32 %0, 32, !dbg !8568
  br i1 %2, label %3, label %5, !dbg !8570

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !8571
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #24, !dbg !8573
  br label %5, !dbg !8574

5:                                                ; preds = %1, %3
  ret void, !dbg !8575
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8576 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8578, metadata !DIExpression()), !dbg !8579
  %2 = xor i32 %0, -1, !dbg !8580
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8580
  %4 = and i32 %3, %2, !dbg !8580
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8580
  ret void, !dbg !8581
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #14 !dbg !8582 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8586, metadata !DIExpression()), !dbg !8588
  call void @llvm.dbg.value(metadata i32 %1, metadata !8587, metadata !DIExpression()), !dbg !8588
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !8589

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !8590
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #24, !dbg !8592
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #24, !dbg !8593
  br label %11, !dbg !8594

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !8595
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #24, !dbg !8596
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #24, !dbg !8597
  br label %11, !dbg !8598

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !8599
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #24, !dbg !8600
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #24, !dbg !8601
  br label %11, !dbg !8602

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !8603
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #24, !dbg !8604
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #24, !dbg !8605
  br label %11, !dbg !8606

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !8607
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8608 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8610, metadata !DIExpression()), !dbg !8611
  %2 = xor i32 %0, -1, !dbg !8612
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8612
  %4 = and i32 %3, %2, !dbg !8612
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8612
  ret void, !dbg !8613
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8614 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8616, metadata !DIExpression()), !dbg !8617
  %2 = xor i32 %0, -1, !dbg !8618
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8618
  %4 = and i32 %3, %2, !dbg !8618
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8618
  ret void, !dbg !8619
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8620 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8622, metadata !DIExpression()), !dbg !8623
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8624
  %3 = or i32 %2, %0, !dbg !8624
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8624
  ret void, !dbg !8625
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8626 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8628, metadata !DIExpression()), !dbg !8629
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8630
  %3 = or i32 %2, %0, !dbg !8630
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8630
  ret void, !dbg !8631
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #9 !dbg !8632 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8636, metadata !DIExpression()), !dbg !8642
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !8637, metadata !DIExpression()), !dbg !8642
  call void @llvm.dbg.value(metadata i8* %2, metadata !8638, metadata !DIExpression()), !dbg !8642
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_36, metadata !8639, metadata !DIExpression()), !dbg !8642
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8641, metadata !DIExpression()), !dbg !8642
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8643
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !8643
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !8645
  br i1 %6, label %7, label %9, !dbg !8646

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !8647
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8648
  store i8* %2, i8** %8, align 4, !dbg !8649
  br label %9, !dbg !8650

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !8642
  ret i32 %10, !dbg !8651
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #7 !dbg !8652 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8654, metadata !DIExpression()), !dbg !8657
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_36, metadata !8655, metadata !DIExpression()), !dbg !8657
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8656, metadata !DIExpression()), !dbg !8657
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8658
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !8659
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8660
  store i8* null, i8** %3, align 4, !dbg !8661
  ret void, !dbg !8662
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #14 !dbg !8663 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8665, metadata !DIExpression()), !dbg !8670
  call void @llvm.dbg.value(metadata i8* %1, metadata !8666, metadata !DIExpression()), !dbg !8670
  call void @llvm.dbg.value(metadata i8* %1, metadata !8667, metadata !DIExpression()), !dbg !8670
  %3 = bitcast i8* %1 to i32*, !dbg !8671
  %4 = load i32, i32* %3, align 4, !dbg !8671
  %5 = add i32 %4, -169, !dbg !8671
  %6 = icmp ult i32 %5, -121, !dbg !8671
  br i1 %6, label %15, label %7, !dbg !8673

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8674
  %9 = inttoptr i32 %8 to i32*, !dbg !8675
  call void @llvm.dbg.value(metadata i32* %9, metadata !8668, metadata !DIExpression()), !dbg !8670
  %10 = load volatile i32, i32* %9, align 4, !dbg !8676
  call void @llvm.dbg.value(metadata i32 %10, metadata !8669, metadata !DIExpression()), !dbg !8670
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8677
  %12 = bitcast i8* %11 to i32*, !dbg !8677
  %13 = load i32, i32* %12, align 4, !dbg !8677
  %14 = or i32 %13, %10, !dbg !8678
  call void @llvm.dbg.value(metadata i32 %14, metadata !8669, metadata !DIExpression()), !dbg !8670
  store volatile i32 %14, i32* %9, align 4, !dbg !8679
  br label %15, !dbg !8680

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8670
  ret i32 %16, !dbg !8681
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #14 !dbg !8682 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8684, metadata !DIExpression()), !dbg !8689
  call void @llvm.dbg.value(metadata i8* %1, metadata !8685, metadata !DIExpression()), !dbg !8689
  call void @llvm.dbg.value(metadata i8* %1, metadata !8686, metadata !DIExpression()), !dbg !8689
  %3 = bitcast i8* %1 to i32*, !dbg !8690
  %4 = load i32, i32* %3, align 4, !dbg !8690
  %5 = add i32 %4, -169, !dbg !8690
  %6 = icmp ult i32 %5, -121, !dbg !8690
  br i1 %6, label %16, label %7, !dbg !8692

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8693
  %9 = inttoptr i32 %8 to i32*, !dbg !8694
  call void @llvm.dbg.value(metadata i32* %9, metadata !8687, metadata !DIExpression()), !dbg !8689
  %10 = load volatile i32, i32* %9, align 4, !dbg !8695
  call void @llvm.dbg.value(metadata i32 %10, metadata !8688, metadata !DIExpression()), !dbg !8689
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8696
  %12 = bitcast i8* %11 to i32*, !dbg !8696
  %13 = load i32, i32* %12, align 4, !dbg !8696
  %14 = xor i32 %13, -1, !dbg !8697
  %15 = and i32 %10, %14, !dbg !8698
  call void @llvm.dbg.value(metadata i32 %15, metadata !8688, metadata !DIExpression()), !dbg !8689
  store volatile i32 %15, i32* %9, align 4, !dbg !8699
  br label %16, !dbg !8700

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8689
  ret i32 %17, !dbg !8701
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !8702 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8704, metadata !DIExpression()), !dbg !8712
  call void @llvm.dbg.value(metadata i8* %1, metadata !8705, metadata !DIExpression()), !dbg !8712
  call void @llvm.dbg.value(metadata i32* %2, metadata !8706, metadata !DIExpression()), !dbg !8712
  call void @llvm.dbg.value(metadata i8* %1, metadata !8707, metadata !DIExpression()), !dbg !8712
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !8713
  call void @llvm.dbg.value(metadata i32 %4, metadata !8708, metadata !DIExpression()), !dbg !8712
  call void @llvm.dbg.value(metadata i32 undef, metadata !8709, metadata !DIExpression()), !dbg !8712
  call void @llvm.dbg.value(metadata i32 undef, metadata !8710, metadata !DIExpression()), !dbg !8712
  call void @llvm.dbg.value(metadata i32 %4, metadata !8711, metadata !DIExpression()), !dbg !8712
  %5 = bitcast i8* %1 to i32*, !dbg !8714
  %6 = load i32, i32* %5, align 4, !dbg !8714
  switch i32 %6, label %21 [
    i32 48, label %19
    i32 52, label %19
    i32 56, label %19
    i32 64, label %7
    i32 68, label %9
    i32 168, label %19
    i32 6, label %19
    i32 1, label %11
    i32 2, label %14
    i32 4, label %17
    i32 5, label %18
  ], !dbg !8715

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #24, !dbg !8716
  call void @llvm.dbg.value(metadata i32 %8, metadata !8709, metadata !DIExpression()), !dbg !8712
  br label %19, !dbg !8717

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 1) #24, !dbg !8719
  call void @llvm.dbg.value(metadata i32 %10, metadata !8710, metadata !DIExpression()), !dbg !8712
  br label %19, !dbg !8720

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #25, !dbg !8721
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12, i32 noundef 2) #24, !dbg !8722
  br label %19, !dbg !8723

14:                                               ; preds = %3
  %15 = tail call i32 @get_pllsrc_frequency() #25, !dbg !8724
  %16 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %15, i32 noundef 8) #24, !dbg !8725
  br label %19, !dbg !8726

17:                                               ; preds = %3
  br label %19, !dbg !8727

18:                                               ; preds = %3
  br label %19, !dbg !8728

19:                                               ; preds = %3, %3, %3, %3, %3, %18, %17, %14, %11, %9, %7
  %20 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ %16, %14 ], [ 0, %17 ], [ 32000, %18 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %20, i32* %2, align 4, !dbg !8729
  br label %21, !dbg !8730

21:                                               ; preds = %19, %3
  %22 = phi i32 [ -134, %3 ], [ 0, %19 ], !dbg !8712
  ret i32 %22, !dbg !8730
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #14 !dbg !8731 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8733, metadata !DIExpression()), !dbg !8741
  call void @llvm.dbg.value(metadata i8* %1, metadata !8734, metadata !DIExpression()), !dbg !8741
  call void @llvm.dbg.value(metadata i8* %2, metadata !8735, metadata !DIExpression()), !dbg !8741
  call void @llvm.dbg.value(metadata i8* %1, metadata !8736, metadata !DIExpression()), !dbg !8741
  %4 = bitcast i8* %1 to i32*, !dbg !8742
  %5 = load i32, i32* %4, align 4, !dbg !8742
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #24, !dbg !8743
  call void @llvm.dbg.value(metadata i32 %6, metadata !8740, metadata !DIExpression()), !dbg !8741
  %7 = icmp slt i32 %6, 0, !dbg !8744
  br i1 %7, label %22, label %8, !dbg !8746

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8736, metadata !DIExpression()), !dbg !8741
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8747
  %10 = bitcast i8* %9 to i32*, !dbg !8747
  %11 = load i32, i32* %10, align 4, !dbg !8747
  %12 = lshr i32 %11, 16, !dbg !8747
  %13 = and i32 %12, 7, !dbg !8747
  %14 = lshr i32 %11, 8, !dbg !8748
  %15 = and i32 %14, 31, !dbg !8748
  %16 = shl i32 %13, %15, !dbg !8749
  call void @llvm.dbg.value(metadata i32 %16, metadata !8739, metadata !DIExpression()), !dbg !8741
  %17 = and i32 %11, 255, !dbg !8750
  %18 = or i32 %17, 1073887232, !dbg !8751
  %19 = inttoptr i32 %18 to i32*, !dbg !8752
  call void @llvm.dbg.value(metadata i32* %19, metadata !8737, metadata !DIExpression()), !dbg !8741
  %20 = load volatile i32, i32* %19, align 4, !dbg !8753
  call void @llvm.dbg.value(metadata i32 %20, metadata !8738, metadata !DIExpression()), !dbg !8741
  %21 = or i32 %16, %20, !dbg !8754
  call void @llvm.dbg.value(metadata i32 %21, metadata !8738, metadata !DIExpression()), !dbg !8741
  store volatile i32 %21, i32* %19, align 4, !dbg !8755
  br label %22, !dbg !8756

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !8741
  ret i32 %23, !dbg !8757
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #3 !dbg !8758 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8762, metadata !DIExpression()), !dbg !8764
  call void @llvm.dbg.value(metadata i32 0, metadata !8763, metadata !DIExpression()), !dbg !8764
  %2 = add i32 %0, -1, !dbg !8765
  %3 = icmp ult i32 %2, 6, !dbg !8765
  br i1 %3, label %4, label %7, !dbg !8765

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !8765
  %6 = load i32, i32* %5, align 4, !dbg !8765
  call void @llvm.dbg.value(metadata i32 %6, metadata !8763, metadata !DIExpression()), !dbg !8764
  br label %7, !dbg !8766

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !8764
  ret i32 %8, !dbg !8767
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !8768 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8772, metadata !DIExpression()), !dbg !8774
  call void @llvm.dbg.value(metadata i32 %1, metadata !8773, metadata !DIExpression()), !dbg !8774
  %3 = udiv i32 %0, %1, !dbg !8775
  ret i32 %3, !dbg !8776
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !8777 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8781, metadata !DIExpression()), !dbg !8785
  call void @llvm.dbg.value(metadata i32 8, metadata !8782, metadata !DIExpression()), !dbg !8785
  call void @llvm.dbg.value(metadata i32 84, metadata !8783, metadata !DIExpression()), !dbg !8785
  call void @llvm.dbg.value(metadata i32 %1, metadata !8784, metadata !DIExpression()), !dbg !8785
  %3 = mul i32 %0, 84, !dbg !8786
  %4 = shl nsw i32 %1, 3, !dbg !8787
  %5 = udiv i32 %3, %4, !dbg !8788
  ret i32 %5, !dbg !8789
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !8790 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !8792, metadata !DIExpression()), !dbg !8795
  tail call void @config_enable_default_clocks() #25, !dbg !8796
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !8797
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #24, !dbg !8797
  %4 = lshr i32 %3, 4, !dbg !8797
  %5 = and i32 %4, 15, !dbg !8797
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !8797
  %7 = load i8, i8* %6, align 1, !dbg !8797
  %8 = zext i8 %7 to i32, !dbg !8797
  %9 = lshr i32 %2, %8, !dbg !8797
  call void @llvm.dbg.value(metadata i32 %9, metadata !8793, metadata !DIExpression()), !dbg !8795
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !8794, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !8795
  %10 = icmp ult i32 %9, 84000000, !dbg !8798
  br i1 %10, label %11, label %13, !dbg !8800

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !8801
  br label %13, !dbg !8803

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #24, !dbg !8804
  tail call fastcc void @set_up_plls() #24, !dbg !8805
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !8806
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #24, !dbg !8809
  br label %14, !dbg !8810

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !8811
  %16 = icmp eq i32 %15, 8, !dbg !8812
  br i1 %16, label %17, label %14, !dbg !8810, !llvm.loop !8813

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !8815
  br i1 %18, label %19, label %21, !dbg !8817

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !8818
  br label %21, !dbg !8820

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !8821
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #24, !dbg !8822
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #24, !dbg !8823
  ret i32 0, !dbg !8824
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #15 !dbg !8825 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8827
  %2 = and i32 %1, 240, !dbg !8827
  ret i32 %2, !dbg !8828
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #14 !dbg !8829 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #24, !dbg !8830
  tail call fastcc void @LL_RCC_HSE_Enable() #24, !dbg !8835
  br label %1, !dbg !8836

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #24, !dbg !8837
  %3 = icmp eq i32 %2, 1, !dbg !8838
  br i1 %3, label %4, label %1, !dbg !8836, !llvm.loop !8839

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #24, !dbg !8841
  br label %5, !dbg !8844

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #24, !dbg !8845
  %7 = icmp eq i32 %6, 1, !dbg !8846
  br i1 %7, label %8, label %5, !dbg !8844, !llvm.loop !8847

8:                                                ; preds = %5
  ret void, !dbg !8849
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !8850 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !8851
  %2 = icmp eq i32 %1, 8, !dbg !8853
  br i1 %2, label %3, label %4, !dbg !8854

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !8855
  tail call fastcc void @stm32_clock_switch_to_hsi() #24, !dbg !8857
  br label %4, !dbg !8858

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #24, !dbg !8859
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8860
  %6 = and i32 %5, -196609, !dbg !8860
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8860
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8861
  %8 = and i32 %7, -251658241, !dbg !8861
  %9 = or i32 %8, 134217728, !dbg !8861
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8861
  tail call void @config_pll_sysclock() #25, !dbg !8862
  tail call fastcc void @LL_RCC_PLL_Enable() #24, !dbg !8863
  br label %10, !dbg !8864

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #24, !dbg !8865
  %12 = icmp eq i32 %11, 1, !dbg !8866
  br i1 %12, label %13, label %10, !dbg !8864, !llvm.loop !8867

13:                                               ; preds = %10
  ret void, !dbg !8869
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #14 !dbg !8870 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8872, metadata !DIExpression()), !dbg !8873
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8874
  %2 = and i32 %1, -241, !dbg !8874
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8874
  ret void, !dbg !8875
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #14 !dbg !8876 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8878, metadata !DIExpression()), !dbg !8879
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8880
  %3 = and i32 %2, -4, !dbg !8880
  %4 = or i32 %3, %0, !dbg !8880
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8880
  ret void, !dbg !8881
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #15 !dbg !8882 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8883
  %2 = and i32 %1, 12, !dbg !8883
  ret i32 %2, !dbg !8884
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #14 !dbg !8885 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !8887, metadata !DIExpression()), !dbg !8888
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8889
  %2 = and i32 %1, -7169, !dbg !8889
  %3 = or i32 %2, 4096, !dbg !8889
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8889
  ret void, !dbg !8890
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #14 !dbg !8891 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8893, metadata !DIExpression()), !dbg !8894
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8895
  %2 = and i32 %1, -57345, !dbg !8895
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8895
  ret void, !dbg !8896
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #14 !dbg !8897 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !8898
  %2 = icmp eq i32 %1, 1, !dbg !8900
  br i1 %2, label %7, label %3, !dbg !8901

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #24, !dbg !8902
  br label %4, !dbg !8904

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !8905
  %6 = icmp eq i32 %5, 1, !dbg !8906
  br i1 %6, label %7, label %4, !dbg !8904, !llvm.loop !8907

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #24, !dbg !8909
  br label %8, !dbg !8910

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !8911
  %10 = icmp eq i32 %9, 0, !dbg !8912
  br i1 %10, label %11, label %8, !dbg !8910, !llvm.loop !8913

11:                                               ; preds = %8
  ret void, !dbg !8915
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #14 !dbg !8916 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8917
  %2 = and i32 %1, -16777217, !dbg !8917
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8917
  ret void, !dbg !8918
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #14 !dbg !8919 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8920
  %2 = or i32 %1, 16777216, !dbg !8920
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8920
  ret void, !dbg !8921
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #15 !dbg !8922 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8923
  %2 = lshr i32 %1, 25, !dbg !8924
  %3 = and i32 %2, 1, !dbg !8924
  ret i32 %3, !dbg !8925
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #15 !dbg !8926 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8927
  %2 = lshr i32 %1, 1, !dbg !8928
  %3 = and i32 %2, 1, !dbg !8928
  ret i32 %3, !dbg !8929
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #14 !dbg !8930 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8931
  %2 = or i32 %1, 1, !dbg !8931
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8931
  ret void, !dbg !8932
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #14 !dbg !8933 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8934
  %2 = and i32 %1, -262145, !dbg !8934
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8934
  ret void, !dbg !8935
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #14 !dbg !8936 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8937
  %2 = or i32 %1, 65536, !dbg !8937
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8937
  ret void, !dbg !8938
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #15 !dbg !8939 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8940
  %2 = lshr i32 %1, 17, !dbg !8941
  %3 = and i32 %2, 1, !dbg !8941
  ret i32 %3, !dbg !8942
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #14 !dbg !8943 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8944
  %2 = or i32 %1, 1, !dbg !8944
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8944
  ret void, !dbg !8945
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #15 !dbg !8946 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8947
  %2 = lshr i32 %1, 1, !dbg !8948
  %3 = and i32 %2, 1, !dbg !8948
  ret i32 %3, !dbg !8949
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #3 !dbg !8950 {
  ret i32 16000000, !dbg !8952
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #14 !dbg !8956 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #24, !dbg !8957
  ret void, !dbg !8958
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #14 !dbg !8959 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !8963, metadata !DIExpression()), !dbg !8967
  call void @llvm.dbg.value(metadata i32 8, metadata !8964, metadata !DIExpression()), !dbg !8967
  call void @llvm.dbg.value(metadata i32 84, metadata !8965, metadata !DIExpression()), !dbg !8967
  call void @llvm.dbg.value(metadata i32 0, metadata !8966, metadata !DIExpression()), !dbg !8967
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8968
  %2 = and i32 %1, -4227072, !dbg !8968
  %3 = or i32 %2, 4199688, !dbg !8968
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8968
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8969
  %5 = and i32 %4, -196609, !dbg !8969
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8969
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8970
  %7 = and i32 %6, -1879048193, !dbg !8970
  store volatile i32 %7, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8970
  ret void, !dbg !8971
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #19 !dbg !8972 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #24, !dbg !8973
  ret void, !dbg !8974
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #19 !dbg !8975 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !8978, metadata !DIExpression()), !dbg !8980
  %2 = bitcast i32* %1 to i8*, !dbg !8981
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !8981
  call void @llvm.dbg.declare(metadata i32* %1, metadata !8979, metadata !DIExpression()), !dbg !8982
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8983
  %4 = or i32 %3, 268435456, !dbg !8983
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8983
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8984
  %6 = and i32 %5, 268435456, !dbg !8984
  store volatile i32 %6, i32* %1, align 4, !dbg !8985
  %7 = load volatile i32, i32* %1, align 4, !dbg !8986
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !8987
  ret void, !dbg !8987
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8988 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8990, metadata !DIExpression()), !dbg !8991
  %2 = tail call fastcc zeroext i1 @device_is_ready() #24, !dbg !8992
  br i1 %2, label %3, label %4, !dbg !8994

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #24, !dbg !8995
  br label %4, !dbg !8996

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !8991
  ret i32 %5, !dbg !8997
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !8998 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !9003, metadata !DIExpression()), !dbg !9004
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9005, !srcloc !9007
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #24, !dbg !9008
  ret i1 %1, !dbg !9009
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !9010 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !9011
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !9012
  ret void, !dbg !9013
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !9014 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9016, metadata !DIExpression()), !dbg !9017
  %2 = icmp eq i32 %0, 10, !dbg !9018
  br i1 %2, label %3, label %4, !dbg !9020

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #24, !dbg !9021
  br label %4, !dbg !9023

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !9024
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #24, !dbg !9025
  ret i32 %0, !dbg !9026
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9027 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !9030, metadata !DIExpression()), !dbg !9032
  call void @llvm.dbg.value(metadata i8 %0, metadata !9031, metadata !DIExpression()), !dbg !9032
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9033, !srcloc !9035
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #24, !dbg !9036
  ret void, !dbg !9037
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9038 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !9040, metadata !DIExpression()), !dbg !9043
  call void @llvm.dbg.value(metadata i8 %0, metadata !9041, metadata !DIExpression()), !dbg !9043
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_48, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9044
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !9042, metadata !DIExpression()), !dbg !9043
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !9045
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !9045
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_48, i8 noundef zeroext %0) #25, !dbg !9046
  ret void, !dbg !9047
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !9048 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !9050, metadata !DIExpression()), !dbg !9051
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_48) #25, !dbg !9052
  ret i1 %1, !dbg !9053
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #3 !dbg !9054 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !9103, metadata !DIExpression()), !dbg !9106
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !9104, metadata !DIExpression()), !dbg !9106
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !9105, metadata !DIExpression()), !dbg !9106
  ret void, !dbg !9107
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !9108 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9110, metadata !DIExpression()), !dbg !9115
  call void @llvm.dbg.value(metadata i8 %1, metadata !9111, metadata !DIExpression()), !dbg !9115
  call void @llvm.dbg.value(metadata i32 %2, metadata !9112, metadata !DIExpression()), !dbg !9115
  %5 = bitcast i32* %4 to i8*, !dbg !9116
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9116
  call void @llvm.dbg.value(metadata i32* %4, metadata !9114, metadata !DIExpression(DW_OP_deref)), !dbg !9115
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #24, !dbg !9117
  call void @llvm.dbg.value(metadata i32 %6, metadata !9113, metadata !DIExpression()), !dbg !9115
  %7 = icmp eq i32 %6, 0, !dbg !9118
  br i1 %7, label %8, label %31, !dbg !9120

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !9113, metadata !DIExpression()), !dbg !9115
  %9 = and i32 %2, 131072, !dbg !9121
  %10 = icmp eq i32 %9, 0, !dbg !9123
  br i1 %10, label %28, label %11, !dbg !9124

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !9125
  %13 = icmp eq i32 %12, 0, !dbg !9128
  br i1 %13, label %18, label %14, !dbg !9129

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !9130
  %16 = shl nuw i32 1, %15, !dbg !9130
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #24, !dbg !9132
  br label %25, !dbg !9133

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !9134
  %20 = icmp eq i32 %19, 0, !dbg !9136
  %21 = zext i8 %1 to i32, !dbg !9115
  br i1 %20, label %25, label %22, !dbg !9137

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !9138
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #24, !dbg !9140
  br label %25, !dbg !9141

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !9142
  %27 = load i32, i32* %4, align 4, !dbg !9143
  call void @llvm.dbg.value(metadata i32 %30, metadata !9114, metadata !DIExpression()), !dbg !9115
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #24, !dbg !9144
  br label %31, !dbg !9145

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !9142
  %30 = load i32, i32* %4, align 4, !dbg !9143
  call void @llvm.dbg.value(metadata i32 %30, metadata !9114, metadata !DIExpression()), !dbg !9115
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #24, !dbg !9144
  call void @llvm.dbg.value(metadata i32 0, metadata !9113, metadata !DIExpression()), !dbg !9115
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9146
  ret i32 %6, !dbg !9146
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #15 !dbg !9147 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9151, metadata !DIExpression()), !dbg !9156
  call void @llvm.dbg.value(metadata i32* %1, metadata !9152, metadata !DIExpression()), !dbg !9156
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9157
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9157
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9157
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9153, metadata !DIExpression()), !dbg !9156
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9158
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9158
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9158
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9155, metadata !DIExpression()), !dbg !9156
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #24, !dbg !9159
  store i32 %9, i32* %1, align 4, !dbg !9160
  ret i32 0, !dbg !9161
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #14 !dbg !9162 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9164, metadata !DIExpression()), !dbg !9170
  call void @llvm.dbg.value(metadata i32 %1, metadata !9165, metadata !DIExpression()), !dbg !9170
  call void @llvm.dbg.value(metadata i32 %2, metadata !9166, metadata !DIExpression()), !dbg !9170
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9171
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !9171
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !9171
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !9167, metadata !DIExpression()), !dbg !9170
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !9172
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !9172
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !9172
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !9168, metadata !DIExpression()), !dbg !9170
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #24, !dbg !9173
  call void @llvm.dbg.value(metadata i32 %10, metadata !9169, metadata !DIExpression()), !dbg !9170
  %11 = xor i32 %1, -1, !dbg !9174
  %12 = and i32 %10, %11, !dbg !9175
  %13 = and i32 %2, %1, !dbg !9176
  %14 = or i32 %12, %13, !dbg !9177
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #24, !dbg !9178
  ret i32 0, !dbg !9179
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !9180 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9182, metadata !DIExpression()), !dbg !9186
  call void @llvm.dbg.value(metadata i32 %1, metadata !9183, metadata !DIExpression()), !dbg !9186
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9187
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9187
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9187
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9184, metadata !DIExpression()), !dbg !9186
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9188
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9188
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9188
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9185, metadata !DIExpression()), !dbg !9186
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !9189
  store volatile i32 %1, i32* %9, align 4, !dbg !9189
  ret i32 0, !dbg !9190
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !9191 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9193, metadata !DIExpression()), !dbg !9197
  call void @llvm.dbg.value(metadata i32 %1, metadata !9194, metadata !DIExpression()), !dbg !9197
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9198
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9198
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9198
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9195, metadata !DIExpression()), !dbg !9197
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9199
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9199
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9199
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9196, metadata !DIExpression()), !dbg !9197
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #24, !dbg !9200
  ret i32 0, !dbg !9201
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !9202 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9204, metadata !DIExpression()), !dbg !9208
  call void @llvm.dbg.value(metadata i32 %1, metadata !9205, metadata !DIExpression()), !dbg !9208
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9209
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9209
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9209
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9206, metadata !DIExpression()), !dbg !9208
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9210
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9210
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9210
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9207, metadata !DIExpression()), !dbg !9208
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !9211
  %10 = load volatile i32, i32* %9, align 4, !dbg !9211
  %11 = xor i32 %10, %1, !dbg !9211
  store volatile i32 %11, i32* %9, align 4, !dbg !9211
  ret i32 0, !dbg !9212
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !9213 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9215, metadata !DIExpression()), !dbg !9225
  call void @llvm.dbg.value(metadata i8 %1, metadata !9216, metadata !DIExpression()), !dbg !9225
  call void @llvm.dbg.value(metadata i32 %2, metadata !9217, metadata !DIExpression()), !dbg !9225
  call void @llvm.dbg.value(metadata i32 %3, metadata !9218, metadata !DIExpression()), !dbg !9225
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9226
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9226
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9226
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9219, metadata !DIExpression()), !dbg !9225
  call void @llvm.dbg.value(metadata i8* undef, metadata !9220, metadata !DIExpression()), !dbg !9225
  call void @llvm.dbg.value(metadata i32 0, metadata !9222, metadata !DIExpression()), !dbg !9225
  call void @llvm.dbg.value(metadata i32 0, metadata !9223, metadata !DIExpression()), !dbg !9225
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !9227

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !9228
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #24, !dbg !9232
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9233
  %12 = load i32, i32* %11, align 4, !dbg !9233
  %13 = icmp eq i32 %10, %12, !dbg !9234
  br i1 %13, label %14, label %29, !dbg !9235

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #25, !dbg !9236
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #25, !dbg !9238
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #25, !dbg !9239
  br label %29, !dbg !9240

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9241
  %17 = load i8*, i8** %16, align 4, !dbg !9241
  call void @llvm.dbg.value(metadata i8* %17, metadata !9220, metadata !DIExpression()), !dbg !9225
  %18 = zext i8 %1 to i32, !dbg !9242
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #25, !dbg !9244
  %20 = icmp eq i32 %19, 0, !dbg !9245
  br i1 %20, label %21, label %29, !dbg !9246

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9247
  %23 = load i32, i32* %22, align 4, !dbg !9247
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #24, !dbg !9248
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !9249

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !9222, metadata !DIExpression()), !dbg !9225
  br label %27, !dbg !9250

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !9222, metadata !DIExpression()), !dbg !9225
  br label %27, !dbg !9252

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !9222, metadata !DIExpression()), !dbg !9225
  br label %27, !dbg !9253

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !9225
  call void @llvm.dbg.value(metadata i32 %28, metadata !9222, metadata !DIExpression()), !dbg !9225
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #25, !dbg !9254
  tail call void @stm32_exti_enable(i32 noundef %18) #25, !dbg !9255
  br label %29, !dbg !9255

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !9225
  call void @llvm.dbg.value(metadata i32 %30, metadata !9223, metadata !DIExpression()), !dbg !9225
  call void @llvm.dbg.label(metadata !9224), !dbg !9256
  ret i32 %30, !dbg !9257
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #1 !dbg !9258 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9260, metadata !DIExpression()), !dbg !9264
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9261, metadata !DIExpression()), !dbg !9264
  call void @llvm.dbg.value(metadata i1 %2, metadata !9262, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9264
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9265
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !9265
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !9265
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !9263, metadata !DIExpression()), !dbg !9264
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !9266
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #24, !dbg !9267
  ret i32 %8, !dbg !9268
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #1 !dbg !9269 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9275, metadata !DIExpression()), !dbg !9278
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9276, metadata !DIExpression()), !dbg !9278
  call void @llvm.dbg.value(metadata i1 %2, metadata !9277, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9278
  %4 = icmp eq %struct.gpio_callback* %1, null, !dbg !9279
  br i1 %4, label %5, label %6, !dbg !9282

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.107, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.34.108, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.109, i32 0, i32 0), i32 noundef 42) #25, !dbg !9283
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35.110, i32 0, i32 0)) #25, !dbg !9283
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.109, i32 0, i32 0), i32 noundef 42) #25, !dbg !9283
  unreachable, !dbg !9283

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 1, !dbg !9285
  %8 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %7, align 4, !dbg !9285
  %9 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %8, null, !dbg !9285
  br i1 %9, label %10, label %11, !dbg !9288

10:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.107, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.36.111, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.109, i32 0, i32 0), i32 noundef 43) #25, !dbg !9289
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33.112, i32 0, i32 0)) #25, !dbg !9289
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.109, i32 0, i32 0), i32 noundef 43) #25, !dbg !9289
  unreachable, !dbg !9289

11:                                               ; preds = %6
  %12 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #24, !dbg !9291
  br i1 %12, label %18, label %13, !dbg !9293

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9294
  %15 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef nonnull %14) #24, !dbg !9297
  %16 = or i1 %15, %2, !dbg !9298
  %17 = select i1 %16, i32 0, i32 -22, !dbg !9298
  br i1 %2, label %19, label %21, !dbg !9298

18:                                               ; preds = %11
  br i1 %2, label %19, label %21, !dbg !9299

19:                                               ; preds = %18, %13
  %20 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9300
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef nonnull %20) #24, !dbg !9303
  br label %21, !dbg !9304

21:                                               ; preds = %13, %19, %18
  %22 = phi i32 [ %17, %13 ], [ -22, %18 ], [ 0, %19 ], !dbg !9278
  ret i32 %22, !dbg !9305
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !9306 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9310, metadata !DIExpression()), !dbg !9311
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9312
  %3 = icmp eq %struct._snode* %2, null, !dbg !9312
  ret i1 %3, !dbg !9312
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #13 !dbg !9313 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9317, metadata !DIExpression()), !dbg !9321
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9318, metadata !DIExpression()), !dbg !9321
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9319, metadata !DIExpression()), !dbg !9321
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9322
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9320, metadata !DIExpression()), !dbg !9321
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9319, metadata !DIExpression()), !dbg !9321
  %4 = icmp eq %struct._snode* %3, null, !dbg !9324
  br i1 %4, label %15, label %5, !dbg !9322

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9320, metadata !DIExpression()), !dbg !9321
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9319, metadata !DIExpression()), !dbg !9321
  %6 = icmp eq %struct._snode* %3, %1, !dbg !9326
  br i1 %6, label %9, label %11, !dbg !9329

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9320, metadata !DIExpression()), !dbg !9321
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9319, metadata !DIExpression()), !dbg !9321
  %8 = icmp eq %struct._snode* %13, %1, !dbg !9326
  br i1 %8, label %9, label %11, !dbg !9329, !llvm.loop !9330

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #24, !dbg !9331
  br label %15, !dbg !9331

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9320, metadata !DIExpression()), !dbg !9321
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9319, metadata !DIExpression()), !dbg !9321
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #24, !dbg !9324
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9320, metadata !DIExpression()), !dbg !9321
  %14 = icmp eq %struct._snode* %13, null, !dbg !9324
  br i1 %14, label %15, label %7, !dbg !9322, !llvm.loop !9330

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !9333
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !9334 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9338, metadata !DIExpression()), !dbg !9340
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9339, metadata !DIExpression()), !dbg !9340
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9341
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #24, !dbg !9341
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #24, !dbg !9341
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !9342
  %5 = icmp eq %struct._snode* %4, null, !dbg !9342
  br i1 %5, label %6, label %8, !dbg !9341

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9344
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #24, !dbg !9344
  br label %8, !dbg !9344

8:                                                ; preds = %6, %2
  ret void, !dbg !9341
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !9346 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9350, metadata !DIExpression()), !dbg !9351
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9352
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9352
  ret %struct._snode* %3, !dbg !9353
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !9354 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9358, metadata !DIExpression()), !dbg !9360
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9359, metadata !DIExpression()), !dbg !9360
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9361
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9362
  ret void, !dbg !9363
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !9364 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9366, metadata !DIExpression()), !dbg !9368
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9367, metadata !DIExpression()), !dbg !9368
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9369
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9370
  ret void, !dbg !9371
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !9372 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9374, metadata !DIExpression()), !dbg !9375
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9376
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9376
  ret %struct._snode* %3, !dbg !9377
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !9378 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9380, metadata !DIExpression()), !dbg !9382
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9381, metadata !DIExpression()), !dbg !9382
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9383
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9384
  ret void, !dbg !9385
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #9 !dbg !9386 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9390, metadata !DIExpression()), !dbg !9393
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9391, metadata !DIExpression()), !dbg !9393
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !9392, metadata !DIExpression()), !dbg !9393
  %4 = icmp eq %struct._snode* %1, null, !dbg !9394
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #24, !dbg !9396
  br i1 %4, label %6, label %11, !dbg !9397

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #24, !dbg !9398
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !9400
  %8 = icmp eq %struct._snode* %7, %2, !dbg !9400
  br i1 %8, label %9, label %15, !dbg !9398

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9402
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #24, !dbg !9402
  br label %15, !dbg !9402

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #24, !dbg !9404
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !9406
  %13 = icmp eq %struct._snode* %12, %2, !dbg !9406
  br i1 %13, label %14, label %15, !dbg !9404

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #24, !dbg !9408
  br label %15, !dbg !9408

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #24, !dbg !9397
  ret void, !dbg !9397
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #8 !dbg !9410 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9414, metadata !DIExpression()), !dbg !9415
  %2 = icmp eq %struct._snode* %0, null, !dbg !9416
  br i1 %2, label %5, label %3, !dbg !9416

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #24, !dbg !9416
  br label %5, !dbg !9416

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !9416
  ret %struct._snode* %6, !dbg !9416
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !9417 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9419, metadata !DIExpression()), !dbg !9420
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #24, !dbg !9421
  ret %struct._snode* %2, !dbg !9421
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !9422 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9424, metadata !DIExpression()), !dbg !9425
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9426
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9426
  ret %struct._snode* %3, !dbg !9427
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !9428 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9430, metadata !DIExpression()), !dbg !9433
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #24, !dbg !9434, !range !9435
  call void @llvm.dbg.value(metadata i32 %2, metadata !9431, metadata !DIExpression()), !dbg !9433
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #24, !dbg !9436
  call void @llvm.dbg.value(metadata i32 %3, metadata !9432, metadata !DIExpression()), !dbg !9433
  ret i32 %3, !dbg !9437
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !9438 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9440, metadata !DIExpression()), !dbg !9443
  call void @llvm.dbg.value(metadata i8* %1, metadata !9441, metadata !DIExpression()), !dbg !9443
  call void @llvm.dbg.value(metadata i8* %1, metadata !9442, metadata !DIExpression()), !dbg !9443
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !9444
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !9444
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9445
  %6 = bitcast i8* %5 to %struct.device**, !dbg !9445
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !9445
  %8 = shl nuw i32 1, %0, !dbg !9446
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #24, !dbg !9447
  ret void, !dbg !9448
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9449 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !9453, metadata !DIExpression()), !dbg !9459
  call void @llvm.dbg.value(metadata i32 %1, metadata !9454, metadata !DIExpression()), !dbg !9459
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9455, metadata !DIExpression()), !dbg !9459
  %4 = bitcast i64* %3 to i8*, !dbg !9460
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #23, !dbg !9460
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !9457, metadata !DIExpression()), !dbg !9459
  store i64 70368744177732, i64* %3, align 8, !dbg !9461
  call void @llvm.dbg.value(metadata i64* %3, metadata !9457, metadata !DIExpression(DW_OP_deref)), !dbg !9459
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #24, !dbg !9462
  call void @llvm.dbg.value(metadata i32 %5, metadata !9458, metadata !DIExpression()), !dbg !9459
  %6 = icmp eq i32 %5, 0, !dbg !9463
  br i1 %6, label %7, label %8, !dbg !9465

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #24, !dbg !9466
  br label %8, !dbg !9467

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #23, !dbg !9468
  ret void, !dbg !9468
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !9469 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9471, metadata !DIExpression()), !dbg !9474
  call void @llvm.dbg.value(metadata i8* %0, metadata !9472, metadata !DIExpression()), !dbg !9474
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !9475
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !9473, metadata !DIExpression()), !dbg !9474
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !9476
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !9476
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #25, !dbg !9477
  ret i32 %5, !dbg !9478
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9479 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9481, metadata !DIExpression()), !dbg !9484
  call void @llvm.dbg.value(metadata i32 %1, metadata !9482, metadata !DIExpression()), !dbg !9484
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #24, !dbg !9485
  call void @llvm.dbg.value(metadata i32 %3, metadata !9483, metadata !DIExpression()), !dbg !9484
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #24, !dbg !9486
  ret void, !dbg !9487
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #3 !dbg !9488 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9492, metadata !DIExpression()), !dbg !9493
  %2 = sdiv i32 %0, 4, !dbg !9494
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !9495
  %6 = add nsw i32 %5, 16, !dbg !9496
  %7 = shl i32 15, %6, !dbg !9497
  %8 = or i32 %7, %2, !dbg !9498
  ret i32 %8, !dbg !9499
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9500 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9504, metadata !DIExpression()), !dbg !9506
  call void @llvm.dbg.value(metadata i32 %1, metadata !9505, metadata !DIExpression()), !dbg !9506
  %3 = and i32 %1, 255, !dbg !9507
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !9507
  %5 = load volatile i32, i32* %4, align 4, !dbg !9507
  %6 = lshr i32 %1, 16, !dbg !9507
  %7 = xor i32 %6, -1, !dbg !9507
  %8 = and i32 %5, %7, !dbg !9507
  call void @llvm.dbg.value(metadata i32 %6, metadata !9508, metadata !DIExpression()) #23, !dbg !9512
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !9514, !srcloc !9515
  call void @llvm.dbg.value(metadata i32 %9, metadata !9511, metadata !DIExpression()) #23, !dbg !9512
  call void @llvm.dbg.value(metadata i32 %9, metadata !9516, metadata !DIExpression()) #23, !dbg !9521
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #23, !dbg !9523, !range !7683
  %11 = shl i32 %0, %10, !dbg !9507
  %12 = or i32 %11, %8, !dbg !9507
  store volatile i32 %12, i32* %4, align 4, !dbg !9507
  ret void, !dbg !9524
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9525 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9529, metadata !DIExpression()), !dbg !9534
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !9530, metadata !DIExpression()), !dbg !9534
  call void @llvm.dbg.value(metadata i32 %2, metadata !9531, metadata !DIExpression()), !dbg !9534
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9535
  %5 = icmp eq %struct._snode* %4, null, !dbg !9535
  br i1 %5, label %24, label %6, !dbg !9535

6:                                                ; preds = %3, %22
  %7 = phi %struct._snode* [ %8, %22 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #24, !dbg !9537
  %9 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9533, metadata !DIExpression()), !dbg !9534
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %9, metadata !9532, metadata !DIExpression()), !dbg !9534
  %10 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !9538
  %11 = bitcast %struct._snode* %10 to i32*, !dbg !9538
  %12 = load i32, i32* %11, align 4, !dbg !9538
  %13 = and i32 %12, %2, !dbg !9542
  %14 = icmp eq i32 %13, 0, !dbg !9542
  br i1 %14, label %22, label %15, !dbg !9543

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !9544
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !9544
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !9544
  %19 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %18, null, !dbg !9544
  br i1 %19, label %20, label %21, !dbg !9548

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.107, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31.113, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.109, i32 0, i32 0), i32 noundef 77) #25, !dbg !9549
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33.112, i32 0, i32 0)) #25, !dbg !9549
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.109, i32 0, i32 0), i32 noundef 77) #25, !dbg !9549
  unreachable, !dbg !9549

21:                                               ; preds = %15
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %9, i32 noundef %13) #25, !dbg !9551
  br label %22, !dbg !9552

22:                                               ; preds = %6, %21
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9532, metadata !DIExpression()), !dbg !9534
  %23 = icmp eq %struct._snode* %8, null, !dbg !9553
  br i1 %23, label %24, label %6, !dbg !9553

24:                                               ; preds = %22, %3
  ret void, !dbg !9554
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !9555 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9557, metadata !DIExpression()), !dbg !9558
  %2 = and i32 %0, 255, !dbg !9559
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !9559
  %4 = load volatile i32, i32* %3, align 4, !dbg !9559
  %5 = lshr i32 %0, 16, !dbg !9559
  %6 = and i32 %4, %5, !dbg !9559
  call void @llvm.dbg.value(metadata i32 %5, metadata !9508, metadata !DIExpression()) #23, !dbg !9560
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #28, !dbg !9562, !srcloc !9515
  call void @llvm.dbg.value(metadata i32 %7, metadata !9511, metadata !DIExpression()) #23, !dbg !9560
  call void @llvm.dbg.value(metadata i32 %7, metadata !9516, metadata !DIExpression()) #23, !dbg !9563
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !9565, !range !7683
  %9 = lshr i32 %6, %8, !dbg !9566
  ret i32 %9, !dbg !9567
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !9568 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9573, metadata !DIExpression()), !dbg !9575
  call void @llvm.dbg.value(metadata i32 %1, metadata !9574, metadata !DIExpression()), !dbg !9575
  %3 = shl i32 %1, 16, !dbg !9576
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !9576
  store volatile i32 %3, i32* %4, align 4, !dbg !9576
  ret void, !dbg !9577
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #15 !dbg !9578 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9582, metadata !DIExpression()), !dbg !9583
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9584
  %3 = load volatile i32, i32* %2, align 4, !dbg !9584
  ret i32 %3, !dbg !9585
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !9586 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9588, metadata !DIExpression()), !dbg !9590
  call void @llvm.dbg.value(metadata i32 %1, metadata !9589, metadata !DIExpression()), !dbg !9590
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9591
  store volatile i32 %1, i32* %3, align 4, !dbg !9591
  ret void, !dbg !9592
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #15 !dbg !9593 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9595, metadata !DIExpression()), !dbg !9596
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !9597
  %3 = load volatile i32, i32* %2, align 4, !dbg !9597
  ret i32 %3, !dbg !9598
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #9 !dbg !9599 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9603, metadata !DIExpression()), !dbg !9605
  call void @llvm.dbg.value(metadata i32* %1, metadata !9604, metadata !DIExpression()), !dbg !9605
  %3 = and i32 %0, 131072, !dbg !9606
  %4 = icmp eq i32 %3, 0, !dbg !9608
  br i1 %4, label %22, label %5, !dbg !9609

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !9610
  %6 = and i32 %0, 2, !dbg !9612
  %7 = icmp eq i32 %6, 0, !dbg !9614
  br i1 %7, label %11, label %8, !dbg !9615

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !9616
  %10 = icmp eq i32 %9, 0, !dbg !9616
  br i1 %10, label %33, label %11, !dbg !9619

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !9620
  store i32 %12, i32* %1, align 4, !dbg !9620
  %13 = and i32 %0, 16, !dbg !9621
  %14 = icmp eq i32 %13, 0, !dbg !9623
  br i1 %14, label %17, label %15, !dbg !9624

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !9625
  br label %31, !dbg !9627

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !9628
  %19 = icmp eq i32 %18, 0, !dbg !9630
  br i1 %19, label %33, label %20, !dbg !9631

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !9632
  br label %31, !dbg !9634

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !9635
  %24 = icmp eq i32 %23, 0, !dbg !9637
  br i1 %24, label %31, label %25, !dbg !9638

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !9639
  %27 = icmp eq i32 %26, 0, !dbg !9642
  br i1 %27, label %28, label %31, !dbg !9643

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !9644
  br label %33, !dbg !9645

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !9605
  ret i32 %34, !dbg !9645
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !9646 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9650, metadata !DIExpression()), !dbg !9661
  call void @llvm.dbg.value(metadata i32 %1, metadata !9651, metadata !DIExpression()), !dbg !9661
  call void @llvm.dbg.value(metadata i32 %2, metadata !9652, metadata !DIExpression()), !dbg !9661
  call void @llvm.dbg.value(metadata i32 %3, metadata !9653, metadata !DIExpression()), !dbg !9661
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9662
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9662
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9662
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9654, metadata !DIExpression()), !dbg !9661
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !9663
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !9663
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !9663
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !9655, metadata !DIExpression()), !dbg !9661
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #24, !dbg !9664
  call void @llvm.dbg.value(metadata i32 %11, metadata !9656, metadata !DIExpression()), !dbg !9661
  %12 = and i32 %2, 48, !dbg !9665
  call void @llvm.dbg.value(metadata i32 %12, metadata !9657, metadata !DIExpression()), !dbg !9661
  call void @llvm.dbg.value(metadata i32 %2, metadata !9658, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !9661
  call void @llvm.dbg.value(metadata i32 %2, metadata !9659, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !9661
  call void @llvm.dbg.value(metadata i32 %2, metadata !9660, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !9661
  %13 = lshr i32 %2, 6, !dbg !9666
  %14 = and i32 %13, 1, !dbg !9666
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #24, !dbg !9667
  %15 = lshr i32 %2, 7, !dbg !9668
  %16 = and i32 %15, 3, !dbg !9668
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #24, !dbg !9669
  %17 = lshr i32 %2, 9, !dbg !9670
  %18 = and i32 %17, 3, !dbg !9670
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #24, !dbg !9671
  %19 = icmp eq i32 %12, 32, !dbg !9672
  br i1 %19, label %20, label %24, !dbg !9674

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !9675
  br i1 %21, label %22, label %23, !dbg !9678

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !9679
  br label %24, !dbg !9681

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !9682
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !9684
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #24, !dbg !9685
  ret void, !dbg !9686
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #3 !dbg !9687 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9689, metadata !DIExpression()), !dbg !9691
  %2 = shl nuw i32 1, %0, !dbg !9692
  call void @llvm.dbg.value(metadata i32 %2, metadata !9690, metadata !DIExpression()), !dbg !9691
  ret i32 %2, !dbg !9693
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !9694 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9698, metadata !DIExpression()), !dbg !9701
  call void @llvm.dbg.value(metadata i32 %1, metadata !9699, metadata !DIExpression()), !dbg !9701
  call void @llvm.dbg.value(metadata i32 %2, metadata !9700, metadata !DIExpression()), !dbg !9701
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !9702
  %5 = load volatile i32, i32* %4, align 4, !dbg !9702
  %6 = xor i32 %1, -1, !dbg !9702
  %7 = and i32 %5, %6, !dbg !9702
  %8 = mul i32 %2, %1, !dbg !9702
  %9 = or i32 %7, %8, !dbg !9702
  store volatile i32 %9, i32* %4, align 4, !dbg !9702
  ret void, !dbg !9703
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9704 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9706, metadata !DIExpression()), !dbg !9709
  call void @llvm.dbg.value(metadata i32 %1, metadata !9707, metadata !DIExpression()), !dbg !9709
  call void @llvm.dbg.value(metadata i32 %2, metadata !9708, metadata !DIExpression()), !dbg !9709
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !9710
  %5 = load volatile i32, i32* %4, align 4, !dbg !9710
  call void @llvm.dbg.value(metadata i32 %1, metadata !9508, metadata !DIExpression()) #23, !dbg !9711
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9713, !srcloc !9515
  call void @llvm.dbg.value(metadata i32 %6, metadata !9511, metadata !DIExpression()) #23, !dbg !9711
  call void @llvm.dbg.value(metadata i32 %6, metadata !9516, metadata !DIExpression()) #23, !dbg !9714
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9716, !range !7683
  %8 = shl nuw nsw i32 %7, 1, !dbg !9710
  %9 = shl i32 3, %8, !dbg !9710
  %10 = xor i32 %9, -1, !dbg !9710
  %11 = and i32 %5, %10, !dbg !9710
  call void @llvm.dbg.value(metadata i32 %1, metadata !9508, metadata !DIExpression()) #23, !dbg !9717
  call void @llvm.dbg.value(metadata i32 %6, metadata !9511, metadata !DIExpression()) #23, !dbg !9717
  call void @llvm.dbg.value(metadata i32 %6, metadata !9516, metadata !DIExpression()) #23, !dbg !9719
  %12 = shl i32 %2, %8, !dbg !9710
  %13 = or i32 %11, %12, !dbg !9710
  store volatile i32 %13, i32* %4, align 4, !dbg !9710
  ret void, !dbg !9721
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9722 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9724, metadata !DIExpression()), !dbg !9727
  call void @llvm.dbg.value(metadata i32 %1, metadata !9725, metadata !DIExpression()), !dbg !9727
  call void @llvm.dbg.value(metadata i32 %2, metadata !9726, metadata !DIExpression()), !dbg !9727
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !9728
  %5 = load volatile i32, i32* %4, align 4, !dbg !9728
  call void @llvm.dbg.value(metadata i32 %1, metadata !9508, metadata !DIExpression()) #23, !dbg !9729
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9731, !srcloc !9515
  call void @llvm.dbg.value(metadata i32 %6, metadata !9511, metadata !DIExpression()) #23, !dbg !9729
  call void @llvm.dbg.value(metadata i32 %6, metadata !9516, metadata !DIExpression()) #23, !dbg !9732
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9734, !range !7683
  %8 = shl nuw nsw i32 %7, 1, !dbg !9728
  %9 = shl i32 3, %8, !dbg !9728
  %10 = xor i32 %9, -1, !dbg !9728
  %11 = and i32 %5, %10, !dbg !9728
  call void @llvm.dbg.value(metadata i32 %1, metadata !9508, metadata !DIExpression()) #23, !dbg !9735
  call void @llvm.dbg.value(metadata i32 %6, metadata !9511, metadata !DIExpression()) #23, !dbg !9735
  call void @llvm.dbg.value(metadata i32 %6, metadata !9516, metadata !DIExpression()) #23, !dbg !9737
  %12 = shl i32 %2, %8, !dbg !9728
  %13 = or i32 %11, %12, !dbg !9728
  store volatile i32 %13, i32* %4, align 4, !dbg !9728
  ret void, !dbg !9739
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9740 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9742, metadata !DIExpression()), !dbg !9745
  call void @llvm.dbg.value(metadata i32 %1, metadata !9743, metadata !DIExpression()), !dbg !9745
  call void @llvm.dbg.value(metadata i32 %2, metadata !9744, metadata !DIExpression()), !dbg !9745
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !9746
  %5 = load volatile i32, i32* %4, align 4, !dbg !9746
  call void @llvm.dbg.value(metadata i32 %1, metadata !9508, metadata !DIExpression()) #23, !dbg !9747
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9749, !srcloc !9515
  call void @llvm.dbg.value(metadata i32 %6, metadata !9511, metadata !DIExpression()) #23, !dbg !9747
  call void @llvm.dbg.value(metadata i32 %6, metadata !9516, metadata !DIExpression()) #23, !dbg !9750
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9752, !range !7683
  %8 = shl nuw nsw i32 %7, 2, !dbg !9746
  %9 = shl i32 15, %8, !dbg !9746
  %10 = xor i32 %9, -1, !dbg !9746
  %11 = and i32 %5, %10, !dbg !9746
  call void @llvm.dbg.value(metadata i32 %1, metadata !9508, metadata !DIExpression()) #23, !dbg !9753
  call void @llvm.dbg.value(metadata i32 %6, metadata !9511, metadata !DIExpression()) #23, !dbg !9753
  call void @llvm.dbg.value(metadata i32 %6, metadata !9516, metadata !DIExpression()) #23, !dbg !9755
  %12 = shl i32 %2, %8, !dbg !9746
  %13 = or i32 %11, %12, !dbg !9746
  store volatile i32 %13, i32* %4, align 4, !dbg !9746
  ret void, !dbg !9757
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9758 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9760, metadata !DIExpression()), !dbg !9763
  call void @llvm.dbg.value(metadata i32 %1, metadata !9761, metadata !DIExpression()), !dbg !9763
  call void @llvm.dbg.value(metadata i32 %2, metadata !9762, metadata !DIExpression()), !dbg !9763
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !9764
  %5 = load volatile i32, i32* %4, align 4, !dbg !9764
  %6 = lshr i32 %1, 8, !dbg !9764
  call void @llvm.dbg.value(metadata i32 %6, metadata !9508, metadata !DIExpression()) #23, !dbg !9765
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !9767, !srcloc !9515
  call void @llvm.dbg.value(metadata i32 %7, metadata !9511, metadata !DIExpression()) #23, !dbg !9765
  call void @llvm.dbg.value(metadata i32 %7, metadata !9516, metadata !DIExpression()) #23, !dbg !9768
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !9770, !range !7683
  %9 = shl nuw nsw i32 %8, 2, !dbg !9764
  %10 = shl i32 15, %9, !dbg !9764
  %11 = xor i32 %10, -1, !dbg !9764
  %12 = and i32 %5, %11, !dbg !9764
  call void @llvm.dbg.value(metadata i32 %6, metadata !9508, metadata !DIExpression()) #23, !dbg !9771
  call void @llvm.dbg.value(metadata i32 %7, metadata !9511, metadata !DIExpression()) #23, !dbg !9771
  call void @llvm.dbg.value(metadata i32 %7, metadata !9516, metadata !DIExpression()) #23, !dbg !9773
  %13 = shl i32 %2, %9, !dbg !9764
  %14 = or i32 %12, %13, !dbg !9764
  store volatile i32 %14, i32* %4, align 4, !dbg !9764
  ret void, !dbg !9775
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9776 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9778, metadata !DIExpression()), !dbg !9781
  call void @llvm.dbg.value(metadata i32 %1, metadata !9779, metadata !DIExpression()), !dbg !9781
  call void @llvm.dbg.value(metadata i32 %2, metadata !9780, metadata !DIExpression()), !dbg !9781
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !9782
  %5 = load volatile i32, i32* %4, align 4, !dbg !9782
  call void @llvm.dbg.value(metadata i32 %1, metadata !9508, metadata !DIExpression()) #23, !dbg !9783
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9785, !srcloc !9515
  call void @llvm.dbg.value(metadata i32 %6, metadata !9511, metadata !DIExpression()) #23, !dbg !9783
  call void @llvm.dbg.value(metadata i32 %6, metadata !9516, metadata !DIExpression()) #23, !dbg !9786
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9788, !range !7683
  %8 = shl nuw nsw i32 %7, 1, !dbg !9782
  %9 = shl i32 3, %8, !dbg !9782
  %10 = xor i32 %9, -1, !dbg !9782
  %11 = and i32 %5, %10, !dbg !9782
  call void @llvm.dbg.value(metadata i32 %1, metadata !9508, metadata !DIExpression()) #23, !dbg !9789
  call void @llvm.dbg.value(metadata i32 %6, metadata !9511, metadata !DIExpression()) #23, !dbg !9789
  call void @llvm.dbg.value(metadata i32 %6, metadata !9516, metadata !DIExpression()) #23, !dbg !9791
  %12 = shl i32 %2, %8, !dbg !9782
  %13 = or i32 %11, %12, !dbg !9782
  store volatile i32 %13, i32* %4, align 4, !dbg !9782
  ret void, !dbg !9793
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !9794 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9796, metadata !DIExpression()), !dbg !9799
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9800
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !9800
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !9800
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !9797, metadata !DIExpression()), !dbg !9799
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !9801
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !9802
  %6 = tail call fastcc zeroext i1 @device_is_ready.122() #24, !dbg !9803
  br i1 %6, label %7, label %11, !dbg !9805

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #24, !dbg !9806
  call void @llvm.dbg.value(metadata i32 %8, metadata !9798, metadata !DIExpression()), !dbg !9799
  %9 = icmp slt i32 %8, 0, !dbg !9807
  %10 = select i1 %9, i32 %8, i32 0, !dbg !9809
  br label %11, !dbg !9809

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !9799
  ret i32 %12, !dbg !9810
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.122() unnamed_addr #1 !dbg !9811 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9815, metadata !DIExpression()), !dbg !9816
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9817, !srcloc !9819
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.123() #24, !dbg !9820
  ret i1 %1, !dbg !9821
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef readonly %0) unnamed_addr #1 !dbg !9822 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9826, metadata !DIExpression()), !dbg !9831
  call void @llvm.dbg.value(metadata i8 1, metadata !9827, metadata !DIExpression()), !dbg !9831
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9832
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !9832
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !9832
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !9828, metadata !DIExpression()), !dbg !9831
  call void @llvm.dbg.value(metadata i32 0, metadata !9829, metadata !DIExpression()), !dbg !9831
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9830, metadata !DIExpression()), !dbg !9831
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !9833
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !9836
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #24, !dbg !9837
  call void @llvm.dbg.value(metadata i32 %7, metadata !9829, metadata !DIExpression()), !dbg !9831
  ret i32 %7, !dbg !9838
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.123() unnamed_addr #1 !dbg !9839 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9841, metadata !DIExpression()), !dbg !9842
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #25, !dbg !9843
  ret i1 %1, !dbg !9844
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !9845 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9849, metadata !DIExpression()), !dbg !9857
  call void @llvm.dbg.value(metadata i32 %1, metadata !9850, metadata !DIExpression()), !dbg !9857
  call void @llvm.dbg.value(metadata i32 %2, metadata !9851, metadata !DIExpression()), !dbg !9857
  call void @llvm.dbg.value(metadata i32 %3, metadata !9852, metadata !DIExpression()), !dbg !9857
  call void @llvm.dbg.value(metadata i32 0, metadata !9853, metadata !DIExpression()), !dbg !9857
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #24, !dbg !9858
  %5 = icmp eq i32 %3, 17, !dbg !9859
  br i1 %5, label %6, label %14, !dbg !9860

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !9861
  call void @llvm.dbg.value(metadata i32 %7, metadata !9854, metadata !DIExpression()), !dbg !9862
  %8 = icmp eq i32 %7, 0, !dbg !9863
  %9 = shl nuw i32 1, %1, !dbg !9865
  br i1 %8, label %12, label %10, !dbg !9866

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !9867
  br label %14, !dbg !9869

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !9870
  br label %14, !dbg !9873

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !9874
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #19 !dbg !9875 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9877, metadata !DIExpression()), !dbg !9881
  call void @llvm.dbg.value(metadata i8* %1, metadata !9878, metadata !DIExpression()), !dbg !9881
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9882
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9882
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9882
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9879, metadata !DIExpression()), !dbg !9881
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9883
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9883
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #24, !dbg !9885
  %9 = icmp eq i32 %8, 0, !dbg !9885
  br i1 %9, label %12, label %10, !dbg !9886

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9887
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #24, !dbg !9889
  br label %12, !dbg !9890

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9891
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #24, !dbg !9893
  %15 = icmp eq i32 %14, 0, !dbg !9893
  br i1 %15, label %19, label %16, !dbg !9894

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9895
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #24, !dbg !9896
  store i8 %18, i8* %1, align 1, !dbg !9897
  br label %19, !dbg !9898

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !9881
  ret i32 %20, !dbg !9899
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !9900 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9902, metadata !DIExpression()), !dbg !9906
  call void @llvm.dbg.value(metadata i8 %1, metadata !9903, metadata !DIExpression()), !dbg !9906
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9907
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9907
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9907
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9904, metadata !DIExpression()), !dbg !9906
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !9908

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9909
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #24, !dbg !9912
  %10 = icmp eq i32 %9, 0, !dbg !9912
  br i1 %10, label %18, label %11, !dbg !9913

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9914, !srcloc !9921
  call void @llvm.dbg.value(metadata i32 undef, metadata !9917, metadata !DIExpression()) #23, !dbg !9922
  call void @llvm.dbg.value(metadata i32 undef, metadata !9918, metadata !DIExpression()) #23, !dbg !9922
  call void @llvm.dbg.value(metadata i32 undef, metadata !9905, metadata !DIExpression()), !dbg !9906
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9923
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #24, !dbg !9925
  %15 = icmp eq i32 %14, 0, !dbg !9925
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !9914
  br i1 %15, label %17, label %19, !dbg !9926

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !9917, metadata !DIExpression()) #23, !dbg !9922
  call void @llvm.dbg.value(metadata i32 %16, metadata !9905, metadata !DIExpression()), !dbg !9906
  call void @llvm.dbg.value(metadata i32 undef, metadata !9927, metadata !DIExpression()) #23, !dbg !9930
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !9932, !srcloc !9933
  br label %18, !dbg !9934

18:                                               ; preds = %17, %7
  br label %7, !dbg !9909, !llvm.loop !9935

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !9914
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9937
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #24, !dbg !9938
  call void @llvm.dbg.value(metadata i32 %20, metadata !9927, metadata !DIExpression()) #23, !dbg !9939
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !9941, !srcloc !9933
  ret void, !dbg !9942
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #19 !dbg !9943 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9945, metadata !DIExpression()), !dbg !9948
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9949
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9949
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9949
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9946, metadata !DIExpression()), !dbg !9948
  call void @llvm.dbg.value(metadata i32 0, metadata !9947, metadata !DIExpression()), !dbg !9948
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9950
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9950
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #24, !dbg !9952
  %8 = icmp ne i32 %7, 0, !dbg !9952
  %9 = zext i1 %8 to i32, !dbg !9953
  call void @llvm.dbg.value(metadata i32 %9, metadata !9947, metadata !DIExpression()), !dbg !9948
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9954
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #24, !dbg !9956
  %12 = icmp eq i32 %11, 0, !dbg !9956
  %13 = or i32 %9, 2, !dbg !9957
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !9957
  call void @llvm.dbg.value(metadata i32 %14, metadata !9947, metadata !DIExpression()), !dbg !9948
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9958
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #24, !dbg !9960
  %17 = icmp eq i32 %16, 0, !dbg !9960
  %18 = or i32 %14, 4, !dbg !9961
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !9961
  call void @llvm.dbg.value(metadata i32 %19, metadata !9947, metadata !DIExpression()), !dbg !9948
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9962
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #24, !dbg !9964
  %22 = icmp eq i32 %21, 0, !dbg !9964
  %23 = or i32 %19, 8, !dbg !9965
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !9965
  call void @llvm.dbg.value(metadata i32 %24, metadata !9947, metadata !DIExpression()), !dbg !9948
  %25 = and i32 %24, 8, !dbg !9966
  %26 = icmp eq i32 %25, 0, !dbg !9966
  br i1 %26, label %29, label %27, !dbg !9968

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9969
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #24, !dbg !9971
  br label %29, !dbg !9972

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !9973
  %31 = icmp eq i32 %30, 0, !dbg !9973
  br i1 %31, label %34, label %32, !dbg !9975

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9976
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #24, !dbg !9978
  br label %34, !dbg !9979

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !9980
  %36 = icmp eq i32 %35, 0, !dbg !9980
  br i1 %36, label %39, label %37, !dbg !9982

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9983
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #24, !dbg !9985
  br label %39, !dbg !9986

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !9987
  %41 = icmp eq i32 %40, 0, !dbg !9987
  br i1 %41, label %44, label %42, !dbg !9989

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9990
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #24, !dbg !9992
  br label %44, !dbg !9993

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9994
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #24, !dbg !9995
  ret i32 %24, !dbg !9996
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !9997 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9999, metadata !DIExpression()), !dbg !10008
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10000, metadata !DIExpression()), !dbg !10008
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10009
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10009
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10009
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10001, metadata !DIExpression()), !dbg !10008
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10010
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !10010
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !10010
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !10002, metadata !DIExpression()), !dbg !10008
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10011
  %10 = load i8, i8* %9, align 4, !dbg !10011
  %11 = zext i8 %10 to i32, !dbg !10012
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #24, !dbg !10013
  call void @llvm.dbg.value(metadata i32 %12, metadata !10004, metadata !DIExpression()), !dbg !10008
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10014
  %14 = load i8, i8* %13, align 1, !dbg !10014
  %15 = zext i8 %14 to i32, !dbg !10015
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #24, !dbg !10016
  call void @llvm.dbg.value(metadata i32 %16, metadata !10005, metadata !DIExpression()), !dbg !10008
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10017
  %18 = load i8, i8* %17, align 2, !dbg !10017
  %19 = zext i8 %18 to i32, !dbg !10018
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #24, !dbg !10019
  call void @llvm.dbg.value(metadata i32 %20, metadata !10006, metadata !DIExpression()), !dbg !10008
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10020
  %22 = load i8, i8* %21, align 1, !dbg !10020
  %23 = zext i8 %22 to i32, !dbg !10021
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #24, !dbg !10022
  call void @llvm.dbg.value(metadata i32 %24, metadata !10007, metadata !DIExpression()), !dbg !10008
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !10023

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !10025
  br i1 %26, label %69, label %27, !dbg !10027

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !10028

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !10029
  br i1 %29, label %65, label %30, !dbg !10029

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !10031
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !10008
  br i1 %31, label %38, label %34, !dbg !10033

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !10034
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
    i32 1073761280, label %36
    i32 1073762304, label %36
    i32 1073812480, label %36
  ], !dbg !10034

36:                                               ; preds = %34, %34, %34, %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !10037
  br i1 %37, label %38, label %69, !dbg !10038

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10039
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #24, !dbg !10040
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #24, !dbg !10041
  %41 = icmp eq i32 %12, %40, !dbg !10043
  br i1 %41, label %43, label %42, !dbg !10044

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #24, !dbg !10045
  br label %43, !dbg !10047

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #24, !dbg !10048
  %45 = icmp eq i32 %16, %44, !dbg !10050
  br i1 %45, label %47, label %46, !dbg !10051

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #24, !dbg !10052
  br label %47, !dbg !10054

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #24, !dbg !10055
  %49 = icmp eq i32 %20, %48, !dbg !10057
  br i1 %49, label %51, label %50, !dbg !10058

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #24, !dbg !10059
  br label %51, !dbg !10061

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #24, !dbg !10062
  %53 = icmp eq i32 %24, %52, !dbg !10064
  br i1 %53, label %55, label %54, !dbg !10065

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #24, !dbg !10066
  br label %55, !dbg !10068

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10069
  %57 = load i32, i32* %56, align 4, !dbg !10069
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !10071
  %59 = load i32, i32* %58, align 4, !dbg !10071
  %60 = icmp eq i32 %57, %59, !dbg !10072
  br i1 %60, label %63, label %61, !dbg !10073

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #24, !dbg !10074
  %62 = load i32, i32* %56, align 4, !dbg !10076
  store i32 %62, i32* %58, align 4, !dbg !10077
  br label %63, !dbg !10078

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !10079
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #24, !dbg !10080
  br label %69, !dbg !10081

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !10029
  %67 = and i8 %66, 1, !dbg !10029
  %68 = icmp eq i8 %67, 0, !dbg !10029
  br i1 %68, label %30, label %69, !dbg !10029

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !10008
  ret i32 %70, !dbg !10082
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #20 !dbg !10083 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10085, metadata !DIExpression()), !dbg !10088
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10086, metadata !DIExpression()), !dbg !10088
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10089
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !10089
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !10089
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !10087, metadata !DIExpression()), !dbg !10088
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !10090
  %7 = load i32, i32* %6, align 4, !dbg !10090
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10091
  store i32 %7, i32* %8, align 4, !dbg !10092
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !10093, !range !10094
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #24, !dbg !10095
  %11 = trunc i32 %10 to i8, !dbg !10095
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10096
  store i8 %11, i8* %12, align 4, !dbg !10097
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #24, !dbg !10098, !range !10099
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #24, !dbg !10100
  %15 = trunc i32 %14 to i8, !dbg !10100
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10101
  store i8 %15, i8* %16, align 1, !dbg !10102
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #24, !dbg !10103
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !10104, !range !10094
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #24, !dbg !10105
  %20 = trunc i32 %19 to i8, !dbg !10105
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10106
  store i8 %20, i8* %21, align 2, !dbg !10107
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #24, !dbg !10108, !range !10109
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #24, !dbg !10110
  %24 = trunc i32 %23 to i8, !dbg !10110
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10111
  store i8 %24, i8* %25, align 1, !dbg !10112
  ret i32 0, !dbg !10113
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10114 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10118, metadata !DIExpression()), !dbg !10120
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10121
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10121
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10121
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10119, metadata !DIExpression()), !dbg !10120
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10122
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10122
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #24, !dbg !10123
  ret i32 %7, !dbg !10124
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #3 !dbg !10125 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10129, metadata !DIExpression()), !dbg !10130
  %2 = icmp eq i32 %0, 1024, !dbg !10131
  %3 = select i1 %2, i32 2, i32 0, !dbg !10131
  %4 = icmp eq i32 %0, 1536, !dbg !10131
  %5 = select i1 %4, i32 1, i32 %3, !dbg !10131
  ret i32 %5, !dbg !10132
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10133 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10135, metadata !DIExpression()), !dbg !10137
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10138
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10138
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10138
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10136, metadata !DIExpression()), !dbg !10137
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10139
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10139
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #24, !dbg !10140
  ret i32 %7, !dbg !10141
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #11 !dbg !10142 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10146, metadata !DIExpression()), !dbg !10147
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !10148
  %3 = icmp ult i32 %2, 4, !dbg !10148
  br i1 %3, label %4, label %7, !dbg !10148

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !10148
  %6 = load i32, i32* %5, align 4, !dbg !10148
  br label %7, !dbg !10148

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !10149
  ret i32 %8, !dbg !10151
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10152 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10154, metadata !DIExpression()), !dbg !10156
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10157
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10157
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10157
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10155, metadata !DIExpression()), !dbg !10156
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10158
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10158
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #24, !dbg !10159
  ret i32 %7, !dbg !10160
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !10161 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10165, metadata !DIExpression()), !dbg !10167
  call void @llvm.dbg.value(metadata i32 %1, metadata !10166, metadata !DIExpression()), !dbg !10167
  %3 = icmp eq i32 %0, 4096, !dbg !10168
  %4 = icmp eq i32 %1, 0, !dbg !10168
  %5 = select i1 %4, i32 4, i32 3, !dbg !10168
  %6 = select i1 %4, i32 3, i32 2, !dbg !10168
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !10168
  ret i32 %7, !dbg !10169
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10170 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10172, metadata !DIExpression()), !dbg !10174
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10175
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10175
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10175
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10173, metadata !DIExpression()), !dbg !10174
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10176
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10176
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #24, !dbg !10177
  ret i32 %7, !dbg !10178
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #3 !dbg !10179 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10183, metadata !DIExpression()), !dbg !10184
  %2 = icmp eq i32 %0, 768, !dbg !10185
  %3 = zext i1 %2 to i32, !dbg !10184
  ret i32 %3, !dbg !10187
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10188 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10193, metadata !DIExpression()), !dbg !10194
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10195
  %3 = load volatile i32, i32* %2, align 4, !dbg !10195
  %4 = and i32 %3, 768, !dbg !10195
  ret i32 %4, !dbg !10196
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10197 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10199, metadata !DIExpression()), !dbg !10200
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10201
  %3 = load volatile i32, i32* %2, align 4, !dbg !10201
  %4 = and i32 %3, 4096, !dbg !10201
  ret i32 %4, !dbg !10202
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10203 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10205, metadata !DIExpression()), !dbg !10206
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10207
  %3 = load volatile i32, i32* %2, align 4, !dbg !10207
  %4 = and i32 %3, 12288, !dbg !10207
  ret i32 %4, !dbg !10208
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10209 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10211, metadata !DIExpression()), !dbg !10212
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10213
  %3 = load volatile i32, i32* %2, align 4, !dbg !10213
  %4 = and i32 %3, 1536, !dbg !10213
  ret i32 %4, !dbg !10214
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #3 !dbg !10215 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10219, metadata !DIExpression()), !dbg !10220
  %2 = icmp eq i32 %0, 2, !dbg !10221
  %3 = select i1 %2, i32 1024, i32 0, !dbg !10221
  %4 = icmp eq i32 %0, 1, !dbg !10221
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !10221
  ret i32 %5, !dbg !10222
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #3 !dbg !10223 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10227, metadata !DIExpression()), !dbg !10228
  %2 = icmp ult i32 %0, 3, !dbg !10229
  br i1 %2, label %3, label %6, !dbg !10229

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !10229
  %5 = load i32, i32* %4, align 4, !dbg !10229
  br label %6, !dbg !10229

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !10230
  ret i32 %7, !dbg !10232
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !10233 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10237, metadata !DIExpression()), !dbg !10239
  call void @llvm.dbg.value(metadata i32 %1, metadata !10238, metadata !DIExpression()), !dbg !10239
  %3 = icmp eq i32 %0, 4, !dbg !10240
  %4 = icmp eq i32 %1, 0, !dbg !10240
  %5 = select i1 %4, i32 0, i32 4096, !dbg !10240
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !10240
  ret i32 %6, !dbg !10241
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #3 !dbg !10242 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10246, metadata !DIExpression()), !dbg !10247
  %2 = icmp eq i32 %0, 1, !dbg !10248
  %3 = select i1 %2, i32 768, i32 0, !dbg !10247
  ret i32 %3, !dbg !10250
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !10251 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10255, metadata !DIExpression()), !dbg !10256
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10257
  %3 = load volatile i32, i32* %2, align 4, !dbg !10257
  %4 = and i32 %3, -8193, !dbg !10257
  store volatile i32 %4, i32* %2, align 4, !dbg !10257
  ret void, !dbg !10258
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !10259 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10263, metadata !DIExpression()), !dbg !10266
  call void @llvm.dbg.value(metadata i32 %1, metadata !10264, metadata !DIExpression()), !dbg !10266
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10267
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10267
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10267
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10265, metadata !DIExpression()), !dbg !10266
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10268
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10268
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !10269
  ret void, !dbg !10270
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !10271 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10273, metadata !DIExpression()), !dbg !10276
  call void @llvm.dbg.value(metadata i32 %1, metadata !10274, metadata !DIExpression()), !dbg !10276
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10277
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10277
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10277
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10275, metadata !DIExpression()), !dbg !10276
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10278
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10278
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !10279
  ret void, !dbg !10280
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !10281 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10283, metadata !DIExpression()), !dbg !10286
  call void @llvm.dbg.value(metadata i32 %1, metadata !10284, metadata !DIExpression()), !dbg !10286
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10287
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10287
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10287
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10285, metadata !DIExpression()), !dbg !10286
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10288
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10288
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !10289
  ret void, !dbg !10290
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !10291 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10293, metadata !DIExpression()), !dbg !10296
  call void @llvm.dbg.value(metadata i32 %1, metadata !10294, metadata !DIExpression()), !dbg !10296
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10297
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10297
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10297
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10295, metadata !DIExpression()), !dbg !10296
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10298
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10298
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !10299
  ret void, !dbg !10300
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !10301 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10303, metadata !DIExpression()), !dbg !10308
  call void @llvm.dbg.value(metadata i32 %1, metadata !10304, metadata !DIExpression()), !dbg !10308
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10309
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !10309
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !10309
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !10305, metadata !DIExpression()), !dbg !10308
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10310
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !10310
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !10310
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !10306, metadata !DIExpression()), !dbg !10308
  %10 = bitcast i32* %3 to i8*, !dbg !10311
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !10311
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !10312
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !10312
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !10316
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !10316
  %15 = load i8*, i8** %14, align 4, !dbg !10316
  call void @llvm.dbg.value(metadata i32* %3, metadata !10307, metadata !DIExpression(DW_OP_deref)), !dbg !10308
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #24, !dbg !10317
  %17 = icmp slt i32 %16, 0, !dbg !10318
  br i1 %17, label %18, label %21, !dbg !10319

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.126(i32 noundef 1) #24, !dbg !10320
  %20 = zext i8 %19 to i32, !dbg !10320
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.5.127, i32 0, i32 0), i32 noundef %20) #25, !dbg !10320
  br label %31, !dbg !10326

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !10327
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !10327
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #24, !dbg !10328
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !10329
  %25 = load i32, i32* %3, align 4, !dbg !10330
  call void @llvm.dbg.value(metadata i32 %25, metadata !10307, metadata !DIExpression()), !dbg !10308
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #24, !dbg !10331
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !10332
  %27 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %26, i32 0, i32 2, !dbg !10332
  %28 = load volatile i32, i32* %27, align 4, !dbg !10332
  %29 = icmp ugt i32 %28, 16, !dbg !10332
  br i1 %29, label %31, label %30, !dbg !10335

30:                                               ; preds = %21
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6.128, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.7.129, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.130, i32 0, i32 0), i32 noundef 190) #25, !dbg !10336
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9.131, i32 0, i32 0)) #25, !dbg !10336
  call void @assert_post_action(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.130, i32 0, i32 0), i32 noundef 190) #25, !dbg !10336
  unreachable, !dbg !10336

31:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !10338
  ret void, !dbg !10338
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !10339 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10341, metadata !DIExpression()), !dbg !10342
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10343
  %3 = load volatile i32, i32* %2, align 4, !dbg !10343
  %4 = or i32 %3, 8192, !dbg !10343
  store volatile i32 %4, i32* %2, align 4, !dbg !10343
  ret void, !dbg !10344
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !10345 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10347, metadata !DIExpression()), !dbg !10351
  call void @llvm.dbg.value(metadata i8* %1, metadata !10348, metadata !DIExpression()), !dbg !10351
  call void @llvm.dbg.value(metadata i32* %2, metadata !10349, metadata !DIExpression()), !dbg !10351
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10352
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !10352
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !10352
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !10350, metadata !DIExpression()), !dbg !10351
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !10353
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !10353
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !10355
  br i1 %9, label %12, label %10, !dbg !10356

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #25, !dbg !10357
  br label %12, !dbg !10358

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !10351
  ret i32 %13, !dbg !10359
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.126(i32 noundef %0) unnamed_addr #3 !dbg !10360 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10362, metadata !DIExpression()), !dbg !10363
  %2 = icmp eq i32 %0, 2, !dbg !10364
  %3 = select i1 %2, i8 87, i8 63, !dbg !10364
  %4 = icmp eq i32 %0, 1, !dbg !10364
  %5 = select i1 %4, i8 69, i8 %3, !dbg !10364
  ret i8 %5, !dbg !10365
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !10366 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10370, metadata !DIExpression()), !dbg !10372
  call void @llvm.dbg.value(metadata i32 0, metadata !10371, metadata !DIExpression()), !dbg !10372
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10373
  %3 = load volatile i32, i32* %2, align 4, !dbg !10373
  %4 = and i32 %3, -32769, !dbg !10373
  store volatile i32 %4, i32* %2, align 4, !dbg !10373
  ret void, !dbg !10374
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !10375 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10379, metadata !DIExpression()), !dbg !10383
  call void @llvm.dbg.value(metadata i32 %1, metadata !10380, metadata !DIExpression()), !dbg !10383
  call void @llvm.dbg.value(metadata i32 0, metadata !10381, metadata !DIExpression()), !dbg !10383
  call void @llvm.dbg.value(metadata i32 %2, metadata !10382, metadata !DIExpression()), !dbg !10383
  %4 = zext i32 %1 to i64, !dbg !10384
  %5 = mul nuw nsw i64 %4, 25, !dbg !10384
  %6 = zext i32 %2 to i64, !dbg !10384
  %7 = shl nuw nsw i64 %6, 2, !dbg !10384
  %8 = udiv i64 %5, %7, !dbg !10384
  %9 = trunc i64 %8 to i32, !dbg !10384
  %10 = udiv i32 %9, 100, !dbg !10384
  %11 = shl nuw nsw i32 %10, 4, !dbg !10384
  %12 = mul i32 %10, -100, !dbg !10384
  %13 = add i32 %12, %9, !dbg !10384
  %14 = shl i32 %13, 4, !dbg !10384
  %15 = add i32 %14, 50, !dbg !10384
  %16 = udiv i32 %15, 100, !dbg !10384
  %17 = and i32 %16, 240, !dbg !10384
  %18 = add nuw nsw i32 %17, %11, !dbg !10384
  %19 = and i32 %16, 15, !dbg !10384
  %20 = and i32 %18, 65520, !dbg !10387
  %21 = or i32 %20, %19, !dbg !10387
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !10388
  store volatile i32 %21, i32* %22, align 4, !dbg !10389
  ret void, !dbg !10390
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !10391 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10393, metadata !DIExpression()), !dbg !10395
  call void @llvm.dbg.value(metadata i32 %1, metadata !10394, metadata !DIExpression()), !dbg !10395
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10396
  %4 = load volatile i32, i32* %3, align 4, !dbg !10396
  %5 = and i32 %4, -769, !dbg !10396
  %6 = or i32 %5, %1, !dbg !10396
  store volatile i32 %6, i32* %3, align 4, !dbg !10396
  ret void, !dbg !10397
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !10398 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10400, metadata !DIExpression()), !dbg !10402
  call void @llvm.dbg.value(metadata i32 %1, metadata !10401, metadata !DIExpression()), !dbg !10402
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10403
  %4 = load volatile i32, i32* %3, align 4, !dbg !10403
  %5 = and i32 %4, -4097, !dbg !10403
  %6 = or i32 %5, %1, !dbg !10403
  store volatile i32 %6, i32* %3, align 4, !dbg !10403
  ret void, !dbg !10404
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !10405 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10407, metadata !DIExpression()), !dbg !10409
  call void @llvm.dbg.value(metadata i32 %1, metadata !10408, metadata !DIExpression()), !dbg !10409
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10410
  %4 = load volatile i32, i32* %3, align 4, !dbg !10410
  %5 = and i32 %4, -12289, !dbg !10410
  %6 = or i32 %5, %1, !dbg !10410
  store volatile i32 %6, i32* %3, align 4, !dbg !10410
  ret void, !dbg !10411
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !10412 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10414, metadata !DIExpression()), !dbg !10416
  call void @llvm.dbg.value(metadata i32 %1, metadata !10415, metadata !DIExpression()), !dbg !10416
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10417
  %4 = load volatile i32, i32* %3, align 4, !dbg !10417
  %5 = and i32 %4, -1537, !dbg !10417
  %6 = or i32 %5, %1, !dbg !10417
  store volatile i32 %6, i32* %3, align 4, !dbg !10417
  ret void, !dbg !10418
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10419 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10421, metadata !DIExpression()), !dbg !10422
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10423
  %3 = load volatile i32, i32* %2, align 4, !dbg !10423
  %4 = lshr i32 %3, 3, !dbg !10424
  %5 = and i32 %4, 1, !dbg !10424
  ret i32 %5, !dbg !10425
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10426 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10428, metadata !DIExpression()), !dbg !10429
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10430
  %3 = load volatile i32, i32* %2, align 4, !dbg !10430
  %4 = and i32 %3, 1, !dbg !10430
  ret i32 %4, !dbg !10431
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10432 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10434, metadata !DIExpression()), !dbg !10435
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10436
  %3 = load volatile i32, i32* %2, align 4, !dbg !10436
  %4 = lshr i32 %3, 1, !dbg !10437
  %5 = and i32 %4, 1, !dbg !10437
  ret i32 %5, !dbg !10438
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10439 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10441, metadata !DIExpression()), !dbg !10442
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10443
  %3 = load volatile i32, i32* %2, align 4, !dbg !10443
  %4 = lshr i32 %3, 8, !dbg !10444
  %5 = and i32 %4, 1, !dbg !10444
  ret i32 %5, !dbg !10445
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !10446 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10448, metadata !DIExpression()), !dbg !10449
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10450
  store volatile i32 -257, i32* %2, align 4, !dbg !10450
  ret void, !dbg !10451
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !10452 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10454, metadata !DIExpression()), !dbg !10456
  %3 = bitcast i32* %2 to i8*, !dbg !10457
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10457
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10455, metadata !DIExpression()), !dbg !10458
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10459
  %5 = load volatile i32, i32* %4, align 4, !dbg !10459
  store volatile i32 %5, i32* %2, align 4, !dbg !10460
  %6 = load volatile i32, i32* %2, align 4, !dbg !10461
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10462
  %8 = load volatile i32, i32* %7, align 4, !dbg !10462
  store volatile i32 %8, i32* %2, align 4, !dbg !10463
  %9 = load volatile i32, i32* %2, align 4, !dbg !10464
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10465
  ret void, !dbg !10465
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !10466 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10468, metadata !DIExpression()), !dbg !10470
  %3 = bitcast i32* %2 to i8*, !dbg !10471
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10471
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10469, metadata !DIExpression()), !dbg !10472
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10473
  %5 = load volatile i32, i32* %4, align 4, !dbg !10473
  store volatile i32 %5, i32* %2, align 4, !dbg !10474
  %6 = load volatile i32, i32* %2, align 4, !dbg !10475
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10476
  %8 = load volatile i32, i32* %7, align 4, !dbg !10476
  store volatile i32 %8, i32* %2, align 4, !dbg !10477
  %9 = load volatile i32, i32* %2, align 4, !dbg !10478
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10479
  ret void, !dbg !10479
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !10480 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10482, metadata !DIExpression()), !dbg !10484
  %3 = bitcast i32* %2 to i8*, !dbg !10485
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10485
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10483, metadata !DIExpression()), !dbg !10486
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10487
  %5 = load volatile i32, i32* %4, align 4, !dbg !10487
  store volatile i32 %5, i32* %2, align 4, !dbg !10488
  %6 = load volatile i32, i32* %2, align 4, !dbg !10489
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10490
  %8 = load volatile i32, i32* %7, align 4, !dbg !10490
  store volatile i32 %8, i32* %2, align 4, !dbg !10491
  %9 = load volatile i32, i32* %2, align 4, !dbg !10492
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10493
  ret void, !dbg !10493
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !10494 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10496, metadata !DIExpression()), !dbg !10498
  %3 = bitcast i32* %2 to i8*, !dbg !10499
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10499
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10497, metadata !DIExpression()), !dbg !10500
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10501
  %5 = load volatile i32, i32* %4, align 4, !dbg !10501
  store volatile i32 %5, i32* %2, align 4, !dbg !10502
  %6 = load volatile i32, i32* %2, align 4, !dbg !10503
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10504
  %8 = load volatile i32, i32* %7, align 4, !dbg !10504
  store volatile i32 %8, i32* %2, align 4, !dbg !10505
  %9 = load volatile i32, i32* %2, align 4, !dbg !10506
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10507
  ret void, !dbg !10507
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10508 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10510, metadata !DIExpression()), !dbg !10511
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10512
  %3 = load volatile i32, i32* %2, align 4, !dbg !10512
  %4 = lshr i32 %3, 7, !dbg !10513
  %5 = and i32 %4, 1, !dbg !10513
  ret i32 %5, !dbg !10514
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #14 !dbg !10515 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10519, metadata !DIExpression()), !dbg !10521
  call void @llvm.dbg.value(metadata i8 %1, metadata !10520, metadata !DIExpression()), !dbg !10521
  %3 = zext i8 %1 to i32, !dbg !10522
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10523
  store volatile i32 %3, i32* %4, align 4, !dbg !10524
  ret void, !dbg !10525
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10526 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10528, metadata !DIExpression()), !dbg !10529
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10530
  %3 = load volatile i32, i32* %2, align 4, !dbg !10530
  %4 = lshr i32 %3, 5, !dbg !10531
  %5 = and i32 %4, 1, !dbg !10531
  ret i32 %5, !dbg !10532
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10533 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10537, metadata !DIExpression()), !dbg !10538
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10539
  %3 = load volatile i32, i32* %2, align 4, !dbg !10539
  %4 = trunc i32 %3 to i8, !dbg !10540
  ret i8 %4, !dbg !10541
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !10542 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10544, metadata !DIExpression()), !dbg !10550
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10551
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10551
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10551
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10545, metadata !DIExpression()), !dbg !10550
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10552
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !10552
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !10552
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !10546, metadata !DIExpression()), !dbg !10550
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #24, !dbg !10553
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !10554
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !10554
  %10 = tail call fastcc zeroext i1 @device_is_ready.138(%struct.device* noundef %9) #24, !dbg !10556
  br i1 %10, label %14, label %11, !dbg !10557

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.126(i32 noundef 1) #24, !dbg !10558
  %13 = zext i8 %12 to i32, !dbg !10558
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.10.139, i32 0, i32 0), i32 noundef %13) #25, !dbg !10558
  br label %62, !dbg !10564

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !10565
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !10566
  %17 = bitcast %struct._thread_arch** %16 to i8**, !dbg !10566
  %18 = load i8*, i8** %17, align 4, !dbg !10566
  %19 = tail call fastcc i32 @clock_control_on.140(%struct.device* noundef %15, i8* noundef %18) #24, !dbg !10567
  call void @llvm.dbg.value(metadata i32 %19, metadata !10549, metadata !DIExpression()), !dbg !10550
  %20 = icmp eq i32 %19, 0, !dbg !10568
  br i1 %20, label %24, label %21, !dbg !10570

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.126(i32 noundef 1) #24, !dbg !10571
  %23 = zext i8 %22 to i32, !dbg !10571
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.11.141, i32 0, i32 0), i32 noundef %23) #25, !dbg !10571
  br label %62, !dbg !10577

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !10578
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !10578
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #24, !dbg !10579
  call void @llvm.dbg.value(metadata i32 %27, metadata !10549, metadata !DIExpression()), !dbg !10550
  %28 = icmp slt i32 %27, 0, !dbg !10580
  br i1 %28, label %62, label %29, !dbg !10582

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10583
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10583
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #24, !dbg !10584
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10585
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #24, !dbg !10586
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !10587
  %34 = load i32, i32* %33, align 4, !dbg !10587
  %35 = icmp ult i32 %34, 3, !dbg !10589
  br i1 %35, label %39, label %36, !dbg !10589

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.126(i32 noundef 2) #24, !dbg !10590
  %38 = zext i8 %37 to i32, !dbg !10590
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12.142, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #25, !dbg !10590
  call void @llvm.dbg.value(metadata i32 0, metadata !10547, metadata !DIExpression()), !dbg !10550
  call void @llvm.dbg.value(metadata i32 0, metadata !10548, metadata !DIExpression()), !dbg !10550
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !10589
  %41 = load i32, i32* %40, align 4, !dbg !10589
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.13, i32 0, i32 %34, !dbg !10589
  %43 = load i32, i32* %42, align 4, !dbg !10589
  br label %44, !dbg !10589

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !10599
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !10599
  call void @llvm.dbg.value(metadata i32 %46, metadata !10548, metadata !DIExpression()), !dbg !10550
  call void @llvm.dbg.value(metadata i32 %45, metadata !10547, metadata !DIExpression()), !dbg !10550
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10600
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #24, !dbg !10601
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !10602
  %49 = load i8, i8* %48, align 4, !dbg !10602, !range !6846
  %50 = icmp eq i8 %49, 0, !dbg !10602
  br i1 %50, label %52, label %51, !dbg !10604

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #24, !dbg !10605
  br label %52, !dbg !10607

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !10608
  %54 = load i32, i32* %53, align 4, !dbg !10608
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #24, !dbg !10609
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !10610
  %56 = load i8, i8* %55, align 4, !dbg !10610, !range !6846
  %57 = icmp eq i8 %56, 0, !dbg !10610
  br i1 %57, label %60, label %58, !dbg !10612

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10613
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #24, !dbg !10615
  br label %60, !dbg !10616

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10617
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #24, !dbg !10618
  br label %62, !dbg !10619

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !10550
  ret i32 %63, !dbg !10620
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #9 !dbg !10621 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10625, metadata !DIExpression()), !dbg !10629
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10630
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !10630
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !10630
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !10626, metadata !DIExpression()), !dbg !10629
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10627, metadata !DIExpression()), !dbg !10629
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !10631
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !10632
  ret void, !dbg !10633
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.138(%struct.device* noundef %0) unnamed_addr #1 !dbg !10634 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10638, metadata !DIExpression()), !dbg !10639
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10640, !srcloc !10642
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.143(%struct.device* noundef %0) #24, !dbg !10643
  ret i1 %2, !dbg !10644
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.140(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !10645 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10647, metadata !DIExpression()), !dbg !10650
  call void @llvm.dbg.value(metadata i8* %1, metadata !10648, metadata !DIExpression()), !dbg !10650
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10651
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !10651
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !10651
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !10649, metadata !DIExpression()), !dbg !10650
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !10652
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !10652
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #25, !dbg !10653
  ret i32 %8, !dbg !10654
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !10655 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10659, metadata !DIExpression()), !dbg !10663
  call void @llvm.dbg.value(metadata i8 0, metadata !10660, metadata !DIExpression()), !dbg !10663
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !10664
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !10664
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10662, metadata !DIExpression(DW_OP_deref)), !dbg !10663
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #25, !dbg !10665
  call void @llvm.dbg.value(metadata i32 %4, metadata !10661, metadata !DIExpression()), !dbg !10663
  %5 = icmp slt i32 %4, 0, !dbg !10666
  br i1 %5, label %9, label %6, !dbg !10668

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !10669
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !10662, metadata !DIExpression()), !dbg !10663
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #24, !dbg !10670
  br label %9, !dbg !10671

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !10663
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !10672
  ret i32 %10, !dbg !10672
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10673 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10675, metadata !DIExpression()), !dbg !10679
  call void @llvm.dbg.value(metadata i32 12, metadata !10676, metadata !DIExpression()), !dbg !10679
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10680

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10681, metadata !DIExpression()) #23, !dbg !10687
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #23, !dbg !10690, !srcloc !10691
  call void @llvm.dbg.value(metadata i32 %4, metadata !10686, metadata !DIExpression()) #23, !dbg !10687
  %5 = or i32 %4, 12, !dbg !10692
  call void @llvm.dbg.value(metadata i32 %5, metadata !10677, metadata !DIExpression()), !dbg !10693
  call void @llvm.dbg.value(metadata i32 %5, metadata !10694, metadata !DIExpression()) #23, !dbg !10701
  call void @llvm.dbg.value(metadata i32* %2, metadata !10699, metadata !DIExpression()) #23, !dbg !10701
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #23, !dbg !10703, !srcloc !10704
  call void @llvm.dbg.value(metadata i32 %6, metadata !10700, metadata !DIExpression()) #23, !dbg !10701
  %7 = icmp eq i32 %6, 0, !dbg !10680
  br i1 %7, label %8, label %3, !dbg !10692, !llvm.loop !10705

8:                                                ; preds = %3
  ret void, !dbg !10706
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !10707 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10709, metadata !DIExpression()), !dbg !10713
  call void @llvm.dbg.value(metadata i32 %1, metadata !10710, metadata !DIExpression()), !dbg !10713
  call void @llvm.dbg.value(metadata i32 %2, metadata !10711, metadata !DIExpression()), !dbg !10713
  call void @llvm.dbg.value(metadata i32 0, metadata !10712, metadata !DIExpression()), !dbg !10713
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10714
  %5 = load volatile i32, i32* %4, align 4, !dbg !10714
  %6 = and i32 %5, -5633, !dbg !10714
  %7 = or i32 %2, %1, !dbg !10714
  %8 = or i32 %7, %6, !dbg !10714
  store volatile i32 %8, i32* %4, align 4, !dbg !10714
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10715
  %10 = load volatile i32, i32* %9, align 4, !dbg !10715
  %11 = and i32 %10, -12289, !dbg !10715
  store volatile i32 %11, i32* %9, align 4, !dbg !10715
  ret void, !dbg !10716
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !10717 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10719, metadata !DIExpression()), !dbg !10720
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10721
  %3 = load volatile i32, i32* %2, align 4, !dbg !10721
  %4 = or i32 %3, 8, !dbg !10721
  store volatile i32 %4, i32* %2, align 4, !dbg !10721
  ret void, !dbg !10722
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10723 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !10727, metadata !DIExpression()), !dbg !10730
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !10728, metadata !DIExpression()), !dbg !10730
  call void @llvm.dbg.value(metadata i32 0, metadata !10729, metadata !DIExpression()), !dbg !10730
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !10731
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !10731
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !10732
  %5 = load i8, i8* %4, align 4, !dbg !10732
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #25, !dbg !10733
  ret i32 %6, !dbg !10734
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.143(%struct.device* noundef %0) unnamed_addr #1 !dbg !10735 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10737, metadata !DIExpression()), !dbg !10738
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !10739
  ret i1 %2, !dbg !10740
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #14 !dbg !10741 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10743, metadata !DIExpression()), !dbg !10744
  tail call fastcc void @__NVIC_SetPriority.145() #24, !dbg !10745
  store i32 8399, i32* @last_load, align 4, !dbg !10746
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10747
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10748
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10749
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10750
  %3 = or i32 %2, 7, !dbg !10750
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10750
  ret i32 0, !dbg !10751
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.145() unnamed_addr #14 !dbg !10752 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !10754, metadata !DIExpression()), !dbg !10756
  call void @llvm.dbg.value(metadata i32 1, metadata !10755, metadata !DIExpression()), !dbg !10756
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !10757
  ret void, !dbg !10760
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !10761 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10763, metadata !DIExpression()), !dbg !10765
  %2 = tail call fastcc i32 @elapsed() #24, !dbg !10766
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10767
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10768
  %5 = add i32 %4, %3, !dbg !10768
  store i32 %5, i32* @cycle_count, align 4, !dbg !10768
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10769
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10770
  %7 = sub i32 %5, %6, !dbg !10773
  %8 = udiv i32 %7, 8400, !dbg !10774
  call void @llvm.dbg.value(metadata i32 %8, metadata !10764, metadata !DIExpression()), !dbg !10765
  %9 = mul nuw i32 %8, 8400, !dbg !10775
  %10 = add i32 %9, %6, !dbg !10776
  store i32 %10, i32* @announced_cycles, align 4, !dbg !10776
  tail call void @sys_clock_announce(i32 noundef %8) #25, !dbg !10777
  tail call void @z_arm_int_exit() #25, !dbg !10778
  ret void, !dbg !10779
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #14 !dbg !10780 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10785
  call void @llvm.dbg.value(metadata i32 %1, metadata !10782, metadata !DIExpression()), !dbg !10786
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10787
  call void @llvm.dbg.value(metadata i32 %2, metadata !10783, metadata !DIExpression()), !dbg !10786
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10788
  call void @llvm.dbg.value(metadata i32 %3, metadata !10784, metadata !DIExpression()), !dbg !10786
  %4 = and i32 %2, 65536, !dbg !10789
  %5 = icmp ne i32 %4, 0, !dbg !10789
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !10791
  %8 = load i32, i32* @last_load, align 4, !dbg !10786
  br i1 %7, label %9, label %13, !dbg !10791

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10792
  %11 = add i32 %10, %8, !dbg !10792
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !10792
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10794
  br label %13, !dbg !10795

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !10796
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10797
  %16 = add i32 %14, %15, !dbg !10798
  ret i32 %16, !dbg !10799
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !10800 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10804, metadata !DIExpression()), !dbg !10817
  call void @llvm.dbg.value(metadata i1 %1, metadata !10805, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10817
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !10818
  br i1 %4, label %5, label %8, !dbg !10818

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10820
  %7 = and i32 %6, -2, !dbg !10820
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10820
  store i32 -16777216, i32* @last_load, align 4, !dbg !10822
  br label %60, !dbg !10823

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !10824
  call void @llvm.dbg.value(metadata i32 %9, metadata !10809, metadata !DIExpression()), !dbg !10817
  br i1 %3, label %18, label %10, !dbg !10825

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !10825
  call void @llvm.dbg.value(metadata i32 undef, metadata !10804, metadata !DIExpression()), !dbg !10817
  %12 = icmp slt i32 %11, 1, !dbg !10826
  br i1 %12, label %18, label %13, !dbg !10826

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !10826
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !10826
  %16 = mul nuw nsw i32 %15, 8400, !dbg !10826
  %17 = add nuw nsw i32 %16, 8399, !dbg !10826
  br label %18, !dbg !10826

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !10804, metadata !DIExpression()), !dbg !10817
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10827, metadata !DIExpression()) #23, !dbg !10834
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10836, !srcloc !10842
  call void @llvm.dbg.value(metadata i32 undef, metadata !10839, metadata !DIExpression()) #23, !dbg !10843
  call void @llvm.dbg.value(metadata i32 undef, metadata !10840, metadata !DIExpression()) #23, !dbg !10843
  call void @llvm.dbg.value(metadata i32 undef, metadata !10833, metadata !DIExpression()) #23, !dbg !10834
  %21 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10844
  br i1 %21, label %23, label %22, !dbg !10847

22:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.146, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.147, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.148, i32 0, i32 0), i32 noundef 148) #25, !dbg !10848
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.149, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10848
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.148, i32 0, i32 0), i32 noundef 148) #25, !dbg !10848
  unreachable, !dbg !10848

23:                                               ; preds = %18
  %24 = extractvalue { i32, i32 } %20, 0, !dbg !10836
  call void @llvm.dbg.value(metadata i32 %24, metadata !10839, metadata !DIExpression()) #23, !dbg !10843
  call void @llvm.dbg.value(metadata i32 %24, metadata !10833, metadata !DIExpression()) #23, !dbg !10834
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10850
  call void @llvm.dbg.value(metadata i32 %24, metadata !10810, metadata !DIExpression()), !dbg !10817
  %25 = tail call fastcc i32 @elapsed() #24, !dbg !10851
  call void @llvm.dbg.value(metadata i32 %25, metadata !10815, metadata !DIExpression()), !dbg !10817
  %26 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10852
  call void @llvm.dbg.value(metadata i32 %26, metadata !10807, metadata !DIExpression()), !dbg !10817
  %27 = load i32, i32* @cycle_count, align 4, !dbg !10853
  %28 = add i32 %27, %25, !dbg !10853
  store i32 %28, i32* @cycle_count, align 4, !dbg !10853
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10854
  %29 = load i32, i32* @announced_cycles, align 4, !dbg !10855
  %30 = sub i32 %28, %29, !dbg !10856
  call void @llvm.dbg.value(metadata i32 %30, metadata !10816, metadata !DIExpression()), !dbg !10817
  %31 = icmp slt i32 %30, 0, !dbg !10857
  br i1 %31, label %41, label %32, !dbg !10859

32:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !10806, metadata !DIExpression()), !dbg !10817
  call void @llvm.dbg.value(metadata i32 undef, metadata !10806, metadata !DIExpression()), !dbg !10817
  %33 = add nuw i32 %19, %30, !dbg !10860
  %34 = urem i32 %33, 8400, !dbg !10862
  call void @llvm.dbg.value(metadata !DIArgList(i32 %33, i32 %34), metadata !10806, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10817
  %35 = sub nuw nsw i32 %19, %34, !dbg !10863
  call void @llvm.dbg.value(metadata i32 %35, metadata !10806, metadata !DIExpression()), !dbg !10817
  %36 = icmp ugt i32 %35, 1024, !dbg !10864
  br i1 %36, label %37, label %39, !dbg !10864

37:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i32 %35, metadata !10806, metadata !DIExpression()), !dbg !10817
  %38 = icmp ugt i32 %35, 16766400, !dbg !10865
  br i1 %38, label %41, label %39, !dbg !10867

39:                                               ; preds = %32, %37
  %40 = phi i32 [ %35, %37 ], [ 1024, %32 ]
  br label %41

41:                                               ; preds = %37, %23, %39
  %42 = phi i32 [ %40, %39 ], [ 1024, %23 ], [ 16766400, %37 ]
  store i32 %42, i32* @last_load, align 4, !dbg !10868
  %43 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10869
  call void @llvm.dbg.value(metadata i32 %43, metadata !10808, metadata !DIExpression()), !dbg !10817
  %44 = add nsw i32 %42, -1, !dbg !10870
  store volatile i32 %44, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10871
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10872
  %45 = icmp ult i32 %26, %43, !dbg !10873
  br i1 %45, label %46, label %51, !dbg !10875

46:                                               ; preds = %41
  %47 = load i32, i32* @cycle_count, align 4, !dbg !10876
  %48 = add i32 %26, %9, !dbg !10878
  %49 = sub i32 %48, %43, !dbg !10879
  %50 = add i32 %49, %47, !dbg !10876
  br label %55, !dbg !10880

51:                                               ; preds = %41
  %52 = sub i32 %26, %43, !dbg !10881
  %53 = load i32, i32* @cycle_count, align 4, !dbg !10883
  %54 = add i32 %52, %53, !dbg !10883
  br label %55

55:                                               ; preds = %51, %46
  %56 = phi i32 [ %54, %51 ], [ %50, %46 ], !dbg !10884
  store i32 %56, i32* @cycle_count, align 4, !dbg !10884
  call void @llvm.dbg.value(metadata i32 undef, metadata !10885, metadata !DIExpression()) #23, !dbg !10891
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10890, metadata !DIExpression()) #23, !dbg !10891
  %57 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10893
  br i1 %57, label %59, label %58, !dbg !10896

58:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.146, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.150, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.148, i32 0, i32 0), i32 noundef 194) #25, !dbg !10897
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.151, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10897
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.148, i32 0, i32 0), i32 noundef 194) #25, !dbg !10897
  unreachable, !dbg !10897

59:                                               ; preds = %55
  call void @llvm.dbg.value(metadata i32 %24, metadata !10885, metadata !DIExpression()) #23, !dbg !10891
  call void @llvm.dbg.value(metadata i32 %24, metadata !10899, metadata !DIExpression()) #23, !dbg !10902
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !10904, !srcloc !10905
  br label %60

60:                                               ; preds = %59, %5
  ret void, !dbg !10906
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !10907 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10827, metadata !DIExpression()) #23, !dbg !10911
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10913, !srcloc !10842
  call void @llvm.dbg.value(metadata i32 undef, metadata !10839, metadata !DIExpression()) #23, !dbg !10915
  call void @llvm.dbg.value(metadata i32 undef, metadata !10840, metadata !DIExpression()) #23, !dbg !10915
  call void @llvm.dbg.value(metadata i32 undef, metadata !10833, metadata !DIExpression()) #23, !dbg !10911
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10916
  br i1 %2, label %4, label %3, !dbg !10917

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.146, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.147, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.148, i32 0, i32 0), i32 noundef 148) #25, !dbg !10918
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.149, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10918
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.148, i32 0, i32 0), i32 noundef 148) #25, !dbg !10918
  unreachable, !dbg !10918

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !10839, metadata !DIExpression()) #23, !dbg !10915
  call void @llvm.dbg.value(metadata i32 undef, metadata !10833, metadata !DIExpression()) #23, !dbg !10911
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10919
  call void @llvm.dbg.value(metadata i32 undef, metadata !10909, metadata !DIExpression()), !dbg !10920
  %5 = tail call fastcc i32 @elapsed() #24, !dbg !10921
  %6 = load i32, i32* @cycle_count, align 4, !dbg !10922
  %7 = load i32, i32* @announced_cycles, align 4, !dbg !10923
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %7, i32 %6), metadata !10910, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10920
  call void @llvm.dbg.value(metadata i32 undef, metadata !10885, metadata !DIExpression()) #23, !dbg !10924
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10890, metadata !DIExpression()) #23, !dbg !10924
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10926
  br i1 %8, label %10, label %9, !dbg !10927

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.146, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.150, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.148, i32 0, i32 0), i32 noundef 194) #25, !dbg !10928
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.151, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10928
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.148, i32 0, i32 0), i32 noundef 194) #25, !dbg !10928
  unreachable, !dbg !10928

10:                                               ; preds = %4
  %11 = add i32 %6, %5, !dbg !10929
  call void @llvm.dbg.value(metadata !DIArgList(i32 %11, i32 %7), metadata !10910, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10920
  %12 = sub i32 %11, %7, !dbg !10930
  call void @llvm.dbg.value(metadata i32 %12, metadata !10910, metadata !DIExpression()), !dbg !10920
  %13 = extractvalue { i32, i32 } %1, 0, !dbg !10913
  call void @llvm.dbg.value(metadata i32 %13, metadata !10839, metadata !DIExpression()) #23, !dbg !10915
  call void @llvm.dbg.value(metadata i32 %13, metadata !10833, metadata !DIExpression()) #23, !dbg !10911
  call void @llvm.dbg.value(metadata i32 %13, metadata !10909, metadata !DIExpression()), !dbg !10920
  call void @llvm.dbg.value(metadata i32 undef, metadata !10885, metadata !DIExpression()) #23, !dbg !10924
  call void @llvm.dbg.value(metadata i32 undef, metadata !10899, metadata !DIExpression()) #23, !dbg !10931
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !10933, !srcloc !10905
  %14 = udiv i32 %12, 8400, !dbg !10934
  ret i32 %14, !dbg !10935
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !10936 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10827, metadata !DIExpression()) #23, !dbg !10940
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10942, !srcloc !10842
  call void @llvm.dbg.value(metadata i32 undef, metadata !10839, metadata !DIExpression()) #23, !dbg !10944
  call void @llvm.dbg.value(metadata i32 undef, metadata !10840, metadata !DIExpression()) #23, !dbg !10944
  call void @llvm.dbg.value(metadata i32 undef, metadata !10833, metadata !DIExpression()) #23, !dbg !10940
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10945
  br i1 %2, label %4, label %3, !dbg !10946

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.146, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.147, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.148, i32 0, i32 0), i32 noundef 148) #25, !dbg !10947
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.149, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10947
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.148, i32 0, i32 0), i32 noundef 148) #25, !dbg !10947
  unreachable, !dbg !10947

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !10839, metadata !DIExpression()) #23, !dbg !10944
  call void @llvm.dbg.value(metadata i32 undef, metadata !10833, metadata !DIExpression()) #23, !dbg !10940
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10948
  call void @llvm.dbg.value(metadata i32 undef, metadata !10938, metadata !DIExpression()), !dbg !10949
  %5 = tail call fastcc i32 @elapsed() #24, !dbg !10950
  %6 = load i32, i32* @cycle_count, align 4, !dbg !10951
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %6), metadata !10939, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !10949
  call void @llvm.dbg.value(metadata i32 undef, metadata !10885, metadata !DIExpression()) #23, !dbg !10952
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10890, metadata !DIExpression()) #23, !dbg !10952
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10954
  br i1 %7, label %9, label %8, !dbg !10955

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.146, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.150, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.148, i32 0, i32 0), i32 noundef 194) #25, !dbg !10956
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.151, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10956
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.148, i32 0, i32 0), i32 noundef 194) #25, !dbg !10956
  unreachable, !dbg !10956

9:                                                ; preds = %4
  %10 = add i32 %6, %5, !dbg !10957
  call void @llvm.dbg.value(metadata i32 %10, metadata !10939, metadata !DIExpression()), !dbg !10949
  %11 = extractvalue { i32, i32 } %1, 0, !dbg !10942
  call void @llvm.dbg.value(metadata i32 %11, metadata !10839, metadata !DIExpression()) #23, !dbg !10944
  call void @llvm.dbg.value(metadata i32 %11, metadata !10833, metadata !DIExpression()) #23, !dbg !10940
  call void @llvm.dbg.value(metadata i32 %11, metadata !10938, metadata !DIExpression()), !dbg !10949
  call void @llvm.dbg.value(metadata i32 undef, metadata !10885, metadata !DIExpression()) #23, !dbg !10952
  call void @llvm.dbg.value(metadata i32 undef, metadata !10899, metadata !DIExpression()) #23, !dbg !10958
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !10960, !srcloc !10905
  ret i32 %10, !dbg !10961
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #14 !dbg !10962 {
  %1 = load i32, i32* @last_load, align 4, !dbg !10963
  %2 = icmp eq i32 %1, -16777216, !dbg !10965
  br i1 %2, label %3, label %6, !dbg !10966

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10967
  %5 = or i32 %4, 1, !dbg !10967
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10967
  br label %6, !dbg !10969

6:                                                ; preds = %3, %0
  ret void, !dbg !10970
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #14 !dbg !10971 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10972
  %2 = and i32 %1, -2, !dbg !10972
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10972
  ret void, !dbg !10973
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #13 !dbg !10974 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11000, metadata !DIExpression()), !dbg !11003
  call void @llvm.dbg.value(metadata i8 %1, metadata !11001, metadata !DIExpression()), !dbg !11003
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11002, metadata !DIExpression()), !dbg !11003
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !11004
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11004
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !11003
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11005
  %8 = load i8, i8* %6, align 4, !dbg !11006
  %9 = zext i8 %8 to i32, !dbg !11007
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !11007
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !11008
  br i1 %11, label %18, label %24, !dbg !11009

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !11003
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11005
  %14 = load i8, i8* %6, align 4, !dbg !11006
  %15 = zext i8 %14 to i32, !dbg !11007
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !11007
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !11008
  br i1 %17, label %18, label %24, !dbg !11009, !llvm.loop !11010

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !11012
  %21 = load i8, i8* %20, align 1, !dbg !11012
  %22 = icmp eq i8 %21, %1, !dbg !11015
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !11016
  br i1 %22, label %24, label %12, !dbg !11017

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !11003
  ret i32 %25, !dbg !11018
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11019 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !11030, metadata !DIExpression()), !dbg !11046
  call void @llvm.dbg.value(metadata i8 %1, metadata !11031, metadata !DIExpression()), !dbg !11046
  call void @llvm.dbg.value(metadata i32 %2, metadata !11032, metadata !DIExpression()), !dbg !11046
  call void @llvm.dbg.value(metadata i32 0, metadata !11035, metadata !DIExpression()), !dbg !11046
  call void @llvm.dbg.value(metadata i32 0, metadata !11036, metadata !DIExpression()), !dbg !11046
  call void @llvm.dbg.value(metadata i8 0, metadata !11037, metadata !DIExpression()), !dbg !11047
  %4 = icmp eq i8 %1, 0, !dbg !11048
  br i1 %4, label %35, label %5, !dbg !11049

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !11048
  br label %9, !dbg !11049

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !11037, metadata !DIExpression()), !dbg !11047
  call void @llvm.dbg.value(metadata i32 %29, metadata !11035, metadata !DIExpression()), !dbg !11046
  %8 = icmp eq i32 %34, %6, !dbg !11048
  br i1 %8, label %35, label %9, !dbg !11049, !llvm.loop !11050

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11037, metadata !DIExpression()), !dbg !11047
  call void @llvm.dbg.value(metadata i32 %11, metadata !11035, metadata !DIExpression()), !dbg !11046
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !11052
  %13 = load i32, i32* %12, align 4, !dbg !11052
  call void @llvm.dbg.value(metadata i32 %13, metadata !11034, metadata !DIExpression()), !dbg !11046
  %14 = and i32 %13, 31, !dbg !11053
  %15 = icmp ult i32 %14, 16, !dbg !11054
  br i1 %15, label %16, label %20, !dbg !11055

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11056
  %18 = load i32, i32* %17, align 4, !dbg !11056
  %19 = or i32 %18, 32, !dbg !11058
  call void @llvm.dbg.value(metadata i32 %19, metadata !11035, metadata !DIExpression()), !dbg !11046
  br label %28, !dbg !11059

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !11060

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11061
  %23 = load i32, i32* %22, align 4, !dbg !11061
  call void @llvm.dbg.value(metadata i32 %23, metadata !11039, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !11062
  %24 = lshr i32 %23, 7, !dbg !11063
  %25 = and i32 %24, 16, !dbg !11063
  %26 = or i32 %25, %23, !dbg !11063
  call void @llvm.dbg.value(metadata i32 %26, metadata !11035, metadata !DIExpression()), !dbg !11046
  br label %28, !dbg !11064

27:                                               ; preds = %20
  br label %28

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ %11, %27 ], [ 48, %20 ], !dbg !11046
  call void @llvm.dbg.value(metadata i32 %29, metadata !11035, metadata !DIExpression()), !dbg !11046
  %30 = lshr i32 %13, 5, !dbg !11065
  %31 = and i32 %30, 255, !dbg !11065
  call void @llvm.dbg.value(metadata i32 %31, metadata !11033, metadata !DIExpression()), !dbg !11046
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #24, !dbg !11066
  call void @llvm.dbg.value(metadata i32 %32, metadata !11036, metadata !DIExpression()), !dbg !11046
  %33 = icmp slt i32 %32, 0, !dbg !11067
  %34 = add nuw nsw i32 %10, 1, !dbg !11069
  call void @llvm.dbg.value(metadata i32 %34, metadata !11037, metadata !DIExpression()), !dbg !11047
  br i1 %33, label %35, label %7, !dbg !11070

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !11071
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11072 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11076, metadata !DIExpression()), !dbg !11080
  call void @llvm.dbg.value(metadata i32 %1, metadata !11077, metadata !DIExpression()), !dbg !11080
  call void @llvm.dbg.value(metadata i32 %2, metadata !11078, metadata !DIExpression()), !dbg !11080
  %4 = icmp ugt i32 %0, 175, !dbg !11081
  br i1 %4, label %16, label %5, !dbg !11083

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !11084
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !11085
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !11085
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !11079, metadata !DIExpression()), !dbg !11080
  %9 = add nsw i32 %6, -8, !dbg !11086
  %10 = icmp ult i32 %9, 3, !dbg !11086
  br i1 %10, label %16, label %11, !dbg !11088

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.156(%struct.device* noundef %8) #24, !dbg !11089
  br i1 %12, label %13, label %16, !dbg !11090

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !11091
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #25, !dbg !11092
  br label %16, !dbg !11093

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !11080
  ret i32 %17, !dbg !11094
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.156(%struct.device* noundef %0) unnamed_addr #1 !dbg !11095 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11099, metadata !DIExpression()), !dbg !11100
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11101, !srcloc !11103
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.157(%struct.device* noundef %0) #24, !dbg !11104
  ret i1 %2, !dbg !11105
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.157(%struct.device* noundef %0) unnamed_addr #1 !dbg !11106 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11108, metadata !DIExpression()), !dbg !11109
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !11110
  ret i1 %2, !dbg !11111
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #3 !dbg !11112 {
  ret void, !dbg !11113
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #15 !dbg !11114 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11116, metadata !DIExpression()), !dbg !11121
  call void @llvm.dbg.value(metadata i32 0, metadata !11117, metadata !DIExpression()), !dbg !11121
  call void @llvm.dbg.value(metadata i32 2, metadata !11118, metadata !DIExpression()), !dbg !11121
  call void @llvm.dbg.value(metadata i32 0, metadata !11119, metadata !DIExpression()), !dbg !11121
  call void @llvm.dbg.value(metadata i32 2, metadata !11120, metadata !DIExpression()), !dbg !11121
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11122
  %2 = and i32 %1, 12, !dbg !11123
  call void @llvm.dbg.value(metadata i32 %2, metadata !11116, metadata !DIExpression()), !dbg !11121
  %3 = icmp eq i32 %2, 8, !dbg !11124
  br i1 %3, label %4, label %18, !dbg !11124

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11125
  call void @llvm.dbg.value(metadata i32 %5, metadata !11119, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !11121
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11127
  %7 = and i32 %6, 63, !dbg !11128
  call void @llvm.dbg.value(metadata i32 %7, metadata !11120, metadata !DIExpression()), !dbg !11121
  %8 = udiv i32 16000000, %7, !dbg !11129
  %9 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11129
  %10 = lshr i32 %9, 6, !dbg !11129
  %11 = and i32 %10, 511, !dbg !11129
  %12 = mul i32 %11, %8, !dbg !11129
  call void @llvm.dbg.value(metadata i32 %12, metadata !11117, metadata !DIExpression()), !dbg !11121
  call void @llvm.dbg.value(metadata i32 %12, metadata !11117, metadata !DIExpression()), !dbg !11121
  call void @llvm.dbg.value(metadata i32 %12, metadata !11117, metadata !DIExpression()), !dbg !11121
  %13 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11131
  %14 = lshr i32 %13, 15, !dbg !11132
  %15 = and i32 %14, 6, !dbg !11132
  %16 = add nuw nsw i32 %15, 2, !dbg !11132
  call void @llvm.dbg.value(metadata i32 %16, metadata !11118, metadata !DIExpression()), !dbg !11121
  %17 = udiv i32 %12, %16, !dbg !11133
  br label %18, !dbg !11134

18:                                               ; preds = %0, %4
  %19 = phi i32 [ %17, %4 ], [ 16000000, %0 ]
  store i32 %19, i32* @SystemCoreClock, align 4, !dbg !11135
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11136
  %21 = lshr i32 %20, 4, !dbg !11137
  %22 = and i32 %21, 15, !dbg !11137
  %23 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %22, !dbg !11138
  %24 = load i8, i8* %23, align 1, !dbg !11138
  %25 = zext i8 %24 to i32, !dbg !11138
  call void @llvm.dbg.value(metadata i32 %25, metadata !11116, metadata !DIExpression()), !dbg !11121
  %26 = lshr i32 %19, %25, !dbg !11139
  store i32 %26, i32* @SystemCoreClock, align 4, !dbg !11139
  ret void, !dbg !11140
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_PeriphCLKConfig(%struct.RCC_PeriphCLKInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !11141 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_PeriphCLKInitTypeDef* %0, metadata !11183, metadata !DIExpression()), !dbg !11197
  call void @llvm.dbg.value(metadata i32 0, metadata !11184, metadata !DIExpression()), !dbg !11197
  call void @llvm.dbg.value(metadata i32 0, metadata !11185, metadata !DIExpression()), !dbg !11197
  call void @llvm.dbg.value(metadata i32 0, metadata !11186, metadata !DIExpression()), !dbg !11197
  call void @llvm.dbg.value(metadata i32 0, metadata !11187, metadata !DIExpression()), !dbg !11197
  call void @llvm.dbg.value(metadata i32 0, metadata !11188, metadata !DIExpression()), !dbg !11197
  call void @llvm.dbg.value(metadata i32 0, metadata !11189, metadata !DIExpression()), !dbg !11197
  call void @llvm.dbg.value(metadata i32 0, metadata !11190, metadata !DIExpression()), !dbg !11197
  call void @llvm.dbg.value(metadata i32 0, metadata !11191, metadata !DIExpression()), !dbg !11197
  call void @llvm.dbg.value(metadata i32 0, metadata !11192, metadata !DIExpression()), !dbg !11197
  %3 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 0, !dbg !11198
  %4 = load i32, i32* %3, align 4, !dbg !11198
  %5 = and i32 %4, 1, !dbg !11200
  %6 = icmp eq i32 %5, 0, !dbg !11201
  br i1 %6, label %17, label %7, !dbg !11202

7:                                                ; preds = %1
  %8 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11203
  %9 = and i32 %8, -100663297, !dbg !11203
  %10 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !11203
  %11 = load i32, i32* %10, align 4, !dbg !11203
  %12 = or i32 %9, %11, !dbg !11203
  store volatile i32 %12, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11203
  %13 = load i32, i32* %10, align 4, !dbg !11205
  %14 = icmp eq i32 %13, 0, !dbg !11207
  %15 = zext i1 %14 to i32, !dbg !11208
  %16 = load i32, i32* %3, align 4, !dbg !11209
  br label %17, !dbg !11208

17:                                               ; preds = %7, %1
  %18 = phi i32 [ %4, %1 ], [ %16, %7 ], !dbg !11209
  %19 = phi i32 [ 0, %1 ], [ %15, %7 ], !dbg !11197
  call void @llvm.dbg.value(metadata i32 %19, metadata !11191, metadata !DIExpression()), !dbg !11197
  %20 = and i32 %18, 2, !dbg !11211
  %21 = icmp eq i32 %20, 0, !dbg !11212
  br i1 %21, label %32, label %22, !dbg !11213

22:                                               ; preds = %17
  %23 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11214
  %24 = and i32 %23, -402653185, !dbg !11214
  %25 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !11214
  %26 = load i32, i32* %25, align 4, !dbg !11214
  %27 = or i32 %24, %26, !dbg !11214
  store volatile i32 %27, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11214
  %28 = load i32, i32* %25, align 4, !dbg !11216
  %29 = icmp eq i32 %28, 0, !dbg !11218
  %30 = select i1 %29, i32 1, i32 %19, !dbg !11219
  %31 = load i32, i32* %3, align 4, !dbg !11220
  br label %32, !dbg !11219

32:                                               ; preds = %22, %17
  %33 = phi i32 [ %18, %17 ], [ %31, %22 ], !dbg !11220
  %34 = phi i32 [ %19, %17 ], [ %30, %22 ], !dbg !11197
  call void @llvm.dbg.value(metadata i32 %34, metadata !11191, metadata !DIExpression()), !dbg !11197
  %35 = and i32 %33, 4, !dbg !11222
  %36 = icmp eq i32 %35, 0, !dbg !11223
  br i1 %36, label %49, label %37, !dbg !11224

37:                                               ; preds = %32
  %38 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11225
  %39 = and i32 %38, -3145729, !dbg !11225
  %40 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !11225
  %41 = load i32, i32* %40, align 4, !dbg !11225
  %42 = or i32 %39, %41, !dbg !11225
  store volatile i32 %42, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11225
  %43 = load i32, i32* %40, align 4, !dbg !11227
  %44 = icmp eq i32 %43, 1048576, !dbg !11229
  %45 = select i1 %44, i32 1, i32 %34, !dbg !11230
  call void @llvm.dbg.value(metadata i32 %45, metadata !11191, metadata !DIExpression()), !dbg !11197
  %46 = icmp eq i32 %43, 0, !dbg !11231
  %47 = zext i1 %46 to i32, !dbg !11233
  %48 = load i32, i32* %3, align 4, !dbg !11234
  br label %49, !dbg !11233

49:                                               ; preds = %37, %32
  %50 = phi i32 [ %33, %32 ], [ %48, %37 ], !dbg !11234
  %51 = phi i32 [ %34, %32 ], [ %45, %37 ], !dbg !11197
  %52 = phi i32 [ 0, %32 ], [ %47, %37 ], !dbg !11197
  call void @llvm.dbg.value(metadata i32 %52, metadata !11192, metadata !DIExpression()), !dbg !11197
  call void @llvm.dbg.value(metadata i32 %51, metadata !11191, metadata !DIExpression()), !dbg !11197
  %53 = and i32 %50, 8, !dbg !11236
  %54 = icmp eq i32 %53, 0, !dbg !11237
  br i1 %54, label %67, label %55, !dbg !11238

55:                                               ; preds = %49
  %56 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11239
  %57 = and i32 %56, -12582913, !dbg !11239
  %58 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !11239
  %59 = load i32, i32* %58, align 4, !dbg !11239
  %60 = or i32 %57, %59, !dbg !11239
  store volatile i32 %60, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11239
  %61 = load i32, i32* %58, align 4, !dbg !11241
  %62 = icmp eq i32 %61, 4194304, !dbg !11243
  %63 = select i1 %62, i32 1, i32 %51, !dbg !11244
  call void @llvm.dbg.value(metadata i32 %63, metadata !11191, metadata !DIExpression()), !dbg !11197
  %64 = icmp eq i32 %61, 0, !dbg !11245
  %65 = select i1 %64, i32 1, i32 %52, !dbg !11247
  %66 = load i32, i32* %3, align 4, !dbg !11248
  br label %67, !dbg !11247

67:                                               ; preds = %55, %49
  %68 = phi i32 [ %50, %49 ], [ %66, %55 ], !dbg !11248
  %69 = phi i32 [ %51, %49 ], [ %63, %55 ], !dbg !11197
  %70 = phi i32 [ %52, %49 ], [ %65, %55 ], !dbg !11197
  call void @llvm.dbg.value(metadata i32 %70, metadata !11192, metadata !DIExpression()), !dbg !11197
  call void @llvm.dbg.value(metadata i32 %69, metadata !11191, metadata !DIExpression()), !dbg !11197
  %71 = and i32 %68, 32, !dbg !11249
  %72 = icmp eq i32 %71, 0, !dbg !11250
  br i1 %72, label %131, label %73, !dbg !11251

73:                                               ; preds = %67
  %74 = bitcast i32* %2 to i8*, !dbg !11252
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %74), !dbg !11252
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11193, metadata !DIExpression()), !dbg !11252
  store volatile i32 0, i32* %2, align 4, !dbg !11252
  %75 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11252
  %76 = or i32 %75, 268435456, !dbg !11252
  store volatile i32 %76, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11252
  %77 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11252
  %78 = and i32 %77, 268435456, !dbg !11252
  store volatile i32 %78, i32* %2, align 4, !dbg !11252
  %79 = load volatile i32, i32* %2, align 4, !dbg !11252
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %74), !dbg !11253
  %80 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11254
  %81 = or i32 %80, 256, !dbg !11254
  store volatile i32 %81, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11254
  %82 = tail call i32 @HAL_GetTick() #25, !dbg !11255
  call void @llvm.dbg.value(metadata i32 %82, metadata !11184, metadata !DIExpression()), !dbg !11197
  br label %83, !dbg !11256

83:                                               ; preds = %87, %73
  %84 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11257
  %85 = and i32 %84, 256, !dbg !11258
  %86 = icmp eq i32 %85, 0, !dbg !11259
  br i1 %86, label %87, label %91, !dbg !11256

87:                                               ; preds = %83
  %88 = tail call i32 @HAL_GetTick() #25, !dbg !11260
  %89 = sub i32 %88, %82, !dbg !11263
  %90 = icmp ugt i32 %89, 2, !dbg !11264
  br i1 %90, label %439, label %83, !dbg !11265, !llvm.loop !11266

91:                                               ; preds = %83
  %92 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11268
  %93 = and i32 %92, 768, !dbg !11269
  call void @llvm.dbg.value(metadata i32 %93, metadata !11185, metadata !DIExpression()), !dbg !11197
  %94 = icmp eq i32 %93, 0, !dbg !11270
  br i1 %94, label %116, label %95, !dbg !11272

95:                                               ; preds = %91
  %96 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !11273
  %97 = load i32, i32* %96, align 4, !dbg !11273
  %98 = and i32 %97, 768, !dbg !11274
  %99 = icmp eq i32 %93, %98, !dbg !11275
  br i1 %99, label %116, label %100, !dbg !11276

100:                                              ; preds = %95
  %101 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11277
  %102 = and i32 %101, -769, !dbg !11279
  call void @llvm.dbg.value(metadata i32 %102, metadata !11185, metadata !DIExpression()), !dbg !11197
  store volatile i32 1, i32* inttoptr (i32 1111952960 to i32*), align 64, !dbg !11280
  store volatile i32 0, i32* inttoptr (i32 1111952960 to i32*), align 64, !dbg !11281
  store volatile i32 %102, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11282
  %103 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11283
  %104 = and i32 %103, 1, !dbg !11283
  %105 = icmp eq i32 %104, 0, !dbg !11283
  br i1 %105, label %116, label %106, !dbg !11285

106:                                              ; preds = %100
  %107 = tail call i32 @HAL_GetTick() #25, !dbg !11286
  call void @llvm.dbg.value(metadata i32 %107, metadata !11184, metadata !DIExpression()), !dbg !11197
  br label %108, !dbg !11288

108:                                              ; preds = %112, %106
  %109 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11289
  %110 = and i32 %109, 2, !dbg !11290
  %111 = icmp eq i32 %110, 0, !dbg !11290
  br i1 %111, label %112, label %116, !dbg !11288

112:                                              ; preds = %108
  %113 = tail call i32 @HAL_GetTick() #25, !dbg !11291
  %114 = sub i32 %113, %107, !dbg !11294
  %115 = icmp ugt i32 %114, 5000, !dbg !11295
  br i1 %115, label %439, label %108, !dbg !11296, !llvm.loop !11297

116:                                              ; preds = %108, %91, %95, %100
  %117 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !11299
  %118 = load i32, i32* %117, align 4, !dbg !11299
  %119 = and i32 %118, 768, !dbg !11299
  %120 = icmp eq i32 %119, 768, !dbg !11299
  %121 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11299
  %122 = and i32 %121, -2031617, !dbg !11299
  %123 = and i32 %118, 268434687, !dbg !11299
  %124 = select i1 %120, i32 %123, i32 0, !dbg !11299
  %125 = or i32 %122, %124, !dbg !11299
  store volatile i32 %125, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11299
  %126 = load i32, i32* %117, align 4, !dbg !11299
  %127 = and i32 %126, 4095, !dbg !11299
  %128 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11299
  %129 = or i32 %128, %127, !dbg !11299
  store volatile i32 %129, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11299
  %130 = load i32, i32* %3, align 4, !dbg !11301
  br label %131, !dbg !11303

131:                                              ; preds = %116, %67
  %132 = phi i32 [ %130, %116 ], [ %68, %67 ], !dbg !11301
  %133 = and i32 %132, 16, !dbg !11304
  %134 = icmp eq i32 %133, 0, !dbg !11305
  br i1 %134, label %140, label %135, !dbg !11306

135:                                              ; preds = %131
  %136 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 15, !dbg !11307
  %137 = load i8, i8* %136, align 4, !dbg !11307
  %138 = zext i8 %137 to i32, !dbg !11307
  store volatile i32 %138, i32* inttoptr (i32 1111953888 to i32*), align 32, !dbg !11307
  %139 = load i32, i32* %3, align 4, !dbg !11309
  br label %140, !dbg !11311

140:                                              ; preds = %135, %131
  %141 = phi i32 [ %139, %135 ], [ %132, %131 ], !dbg !11309
  %142 = and i32 %141, 128, !dbg !11312
  %143 = icmp eq i32 %142, 0, !dbg !11313
  br i1 %143, label %151, label %144, !dbg !11314

144:                                              ; preds = %140
  %145 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11315
  %146 = and i32 %145, -12582913, !dbg !11315
  %147 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 12, !dbg !11315
  %148 = load i32, i32* %147, align 4, !dbg !11315
  %149 = or i32 %146, %148, !dbg !11315
  store volatile i32 %149, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11315
  %150 = load i32, i32* %3, align 4, !dbg !11317
  br label %151, !dbg !11319

151:                                              ; preds = %144, %140
  %152 = phi i32 [ %150, %144 ], [ %141, %140 ], !dbg !11317
  %153 = and i32 %152, 64, !dbg !11320
  %154 = icmp eq i32 %153, 0, !dbg !11321
  br i1 %154, label %162, label %155, !dbg !11322

155:                                              ; preds = %151
  %156 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11323
  %157 = and i32 %156, -67108865, !dbg !11323
  %158 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 11, !dbg !11323
  %159 = load i32, i32* %158, align 4, !dbg !11323
  %160 = or i32 %157, %159, !dbg !11323
  store volatile i32 %160, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11323
  %161 = load i32, i32* %3, align 4, !dbg !11325
  br label %162, !dbg !11327

162:                                              ; preds = %155, %151
  %163 = phi i32 [ %161, %155 ], [ %152, %151 ], !dbg !11325
  %164 = and i32 %163, 256, !dbg !11328
  %165 = icmp eq i32 %164, 0, !dbg !11329
  br i1 %165, label %176, label %166, !dbg !11330

166:                                              ; preds = %162
  %167 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11331
  %168 = and i32 %167, -134217729, !dbg !11331
  %169 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !11331
  %170 = load i32, i32* %169, align 4, !dbg !11331
  %171 = or i32 %168, %170, !dbg !11331
  store volatile i32 %171, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11331
  %172 = load i32, i32* %169, align 4, !dbg !11333
  %173 = icmp eq i32 %172, 134217728, !dbg !11335
  %174 = select i1 %173, i32 1, i32 %70, !dbg !11336
  %175 = load i32, i32* %3, align 4, !dbg !11337
  br label %176, !dbg !11336

176:                                              ; preds = %166, %162
  %177 = phi i32 [ %163, %162 ], [ %175, %166 ], !dbg !11337
  %178 = phi i32 [ %70, %162 ], [ %174, %166 ], !dbg !11197
  call void @llvm.dbg.value(metadata i32 %178, metadata !11192, metadata !DIExpression()), !dbg !11197
  %179 = and i32 %177, 512, !dbg !11339
  %180 = icmp eq i32 %179, 0, !dbg !11340
  br i1 %180, label %188, label %181, !dbg !11341

181:                                              ; preds = %176
  %182 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11342
  %183 = and i32 %182, -268435457, !dbg !11342
  %184 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 10, !dbg !11342
  %185 = load i32, i32* %184, align 4, !dbg !11342
  %186 = or i32 %183, %185, !dbg !11342
  store volatile i32 %186, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11342
  %187 = load i32, i32* %3, align 4, !dbg !11344
  br label %188, !dbg !11346

188:                                              ; preds = %181, %176
  %189 = phi i32 [ %187, %181 ], [ %177, %176 ], !dbg !11344
  %190 = and i32 %189, 1024, !dbg !11347
  %191 = icmp eq i32 %190, 0, !dbg !11348
  br i1 %191, label %204, label %192, !dbg !11349

192:                                              ; preds = %188
  %193 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11350
  %194 = and i32 %193, -536870913, !dbg !11350
  %195 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !11350
  %196 = load i32, i32* %195, align 4, !dbg !11350
  %197 = or i32 %194, %196, !dbg !11350
  store volatile i32 %197, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11350
  %198 = load i32, i32* %195, align 4, !dbg !11352
  %199 = icmp eq i32 %198, 536870912, !dbg !11354
  %200 = icmp eq i32 %69, 1
  %201 = select i1 %199, i1 true, i1 %200, !dbg !11355
  call void @llvm.dbg.value(metadata i32 %69, metadata !11191, metadata !DIExpression()), !dbg !11197
  br i1 %201, label %209, label %202, !dbg !11355

202:                                              ; preds = %192
  %203 = load i32, i32* %3, align 4, !dbg !11356
  br label %206, !dbg !11355

204:                                              ; preds = %188
  call void @llvm.dbg.value(metadata i32 %69, metadata !11191, metadata !DIExpression()), !dbg !11197
  %205 = icmp eq i32 %69, 1, !dbg !11358
  br i1 %205, label %209, label %206, !dbg !11359

206:                                              ; preds = %202, %204
  %207 = phi i32 [ %203, %202 ], [ %189, %204 ], !dbg !11356
  %208 = icmp eq i32 %207, 2048, !dbg !11360
  br i1 %208, label %209, label %356, !dbg !11361

209:                                              ; preds = %192, %206, %204
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !11362
  %210 = tail call i32 @HAL_GetTick() #25, !dbg !11364
  call void @llvm.dbg.value(metadata i32 %210, metadata !11184, metadata !DIExpression()), !dbg !11197
  br label %211, !dbg !11365

211:                                              ; preds = %215, %209
  %212 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11366
  %213 = and i32 %212, 134217728, !dbg !11366
  %214 = icmp eq i32 %213, 0, !dbg !11366
  br i1 %214, label %219, label %215, !dbg !11365

215:                                              ; preds = %211
  %216 = tail call i32 @HAL_GetTick() #25, !dbg !11367
  %217 = sub i32 %216, %210, !dbg !11370
  %218 = icmp ugt i32 %217, 2, !dbg !11371
  br i1 %218, label %439, label %211, !dbg !11372, !llvm.loop !11373

219:                                              ; preds = %211
  %220 = load i32, i32* %3, align 4, !dbg !11375
  %221 = and i32 %220, 1, !dbg !11377
  %222 = icmp eq i32 %221, 0, !dbg !11378
  br i1 %222, label %227, label %223, !dbg !11379

223:                                              ; preds = %219
  %224 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !11380
  %225 = load i32, i32* %224, align 4, !dbg !11380
  %226 = icmp eq i32 %225, 0, !dbg !11381
  br i1 %226, label %234, label %227, !dbg !11382

227:                                              ; preds = %223, %219
  %228 = and i32 %220, 2, !dbg !11383
  %229 = icmp eq i32 %228, 0, !dbg !11384
  br i1 %229, label %252, label %230, !dbg !11385

230:                                              ; preds = %227
  %231 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !11386
  %232 = load i32, i32* %231, align 4, !dbg !11386
  %233 = icmp eq i32 %232, 0, !dbg !11387
  br i1 %233, label %234, label %252, !dbg !11388

234:                                              ; preds = %230, %223
  %235 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11389
  %236 = and i32 %235, 196608, !dbg !11391
  call void @llvm.dbg.value(metadata i32 %236, metadata !11186, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !11197
  %237 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11392
  %238 = and i32 %237, 251658240, !dbg !11393
  call void @llvm.dbg.value(metadata i32 %238, metadata !11187, metadata !DIExpression()), !dbg !11197
  %239 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !11394
  %240 = load i32, i32* %239, align 4, !dbg !11394
  %241 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !11394
  %242 = load i32, i32* %241, align 4, !dbg !11394
  %243 = shl i32 %242, 6, !dbg !11394
  %244 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !11394
  %245 = load i32, i32* %244, align 4, !dbg !11394
  %246 = shl i32 %245, 28, !dbg !11394
  %247 = or i32 %240, %236, !dbg !11394
  %248 = or i32 %247, %238, !dbg !11394
  %249 = or i32 %248, %243, !dbg !11394
  %250 = or i32 %249, %246, !dbg !11394
  store volatile i32 %250, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11394
  %251 = load i32, i32* %3, align 4, !dbg !11395
  br label %252, !dbg !11397

252:                                              ; preds = %234, %230, %227
  %253 = phi i32 [ %251, %234 ], [ %220, %230 ], [ %220, %227 ], !dbg !11395
  %254 = and i32 %253, 4, !dbg !11398
  %255 = icmp eq i32 %254, 0, !dbg !11399
  br i1 %255, label %260, label %256, !dbg !11400

256:                                              ; preds = %252
  %257 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !11401
  %258 = load i32, i32* %257, align 4, !dbg !11401
  %259 = icmp eq i32 %258, 1048576, !dbg !11402
  br i1 %259, label %267, label %260, !dbg !11403

260:                                              ; preds = %256, %252
  %261 = and i32 %253, 8, !dbg !11404
  %262 = icmp eq i32 %261, 0, !dbg !11405
  br i1 %262, label %291, label %263, !dbg !11406

263:                                              ; preds = %260
  %264 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !11407
  %265 = load i32, i32* %264, align 4, !dbg !11407
  %266 = icmp eq i32 %265, 4194304, !dbg !11408
  br i1 %266, label %267, label %291, !dbg !11409

267:                                              ; preds = %263, %256
  %268 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11410
  %269 = and i32 %268, 196608, !dbg !11412
  call void @llvm.dbg.value(metadata i32 %269, metadata !11186, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !11197
  %270 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11413
  %271 = and i32 %270, 1879048192, !dbg !11414
  call void @llvm.dbg.value(metadata i32 %271, metadata !11188, metadata !DIExpression()), !dbg !11197
  %272 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !11415
  %273 = load i32, i32* %272, align 4, !dbg !11415
  %274 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !11415
  %275 = load i32, i32* %274, align 4, !dbg !11415
  %276 = shl i32 %275, 6, !dbg !11415
  %277 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !11415
  %278 = load i32, i32* %277, align 4, !dbg !11415
  %279 = shl i32 %278, 24, !dbg !11415
  %280 = or i32 %273, %269, !dbg !11415
  %281 = or i32 %280, %271, !dbg !11415
  %282 = or i32 %281, %276, !dbg !11415
  %283 = or i32 %282, %279, !dbg !11415
  store volatile i32 %283, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11415
  %284 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11416
  %285 = and i32 %284, -32, !dbg !11416
  %286 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 3, !dbg !11416
  %287 = load i32, i32* %286, align 4, !dbg !11416
  %288 = add i32 %287, -1, !dbg !11416
  %289 = or i32 %288, %285, !dbg !11416
  store volatile i32 %289, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11416
  %290 = load i32, i32* %3, align 4, !dbg !11417
  br label %291, !dbg !11419

291:                                              ; preds = %267, %263, %260
  %292 = phi i32 [ %290, %267 ], [ %253, %263 ], [ %253, %260 ], !dbg !11417
  %293 = and i32 %292, 1024, !dbg !11420
  %294 = icmp eq i32 %293, 0, !dbg !11421
  br i1 %294, label %321, label %295, !dbg !11422

295:                                              ; preds = %291
  %296 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !11423
  %297 = load i32, i32* %296, align 4, !dbg !11423
  %298 = icmp eq i32 %297, 536870912, !dbg !11424
  br i1 %298, label %299, label %321, !dbg !11425

299:                                              ; preds = %295
  %300 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11426
  call void @llvm.dbg.value(metadata i32 %300, metadata !11187, metadata !DIExpression(DW_OP_constu, 15, DW_OP_shr, DW_OP_constu, 6, DW_OP_and, DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !11197
  %301 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11428
  %302 = and i32 %301, 1879048192, !dbg !11429
  call void @llvm.dbg.value(metadata i32 %302, metadata !11188, metadata !DIExpression()), !dbg !11197
  %303 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !11430
  %304 = load i32, i32* %303, align 4, !dbg !11430
  %305 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !11430
  %306 = load i32, i32* %305, align 4, !dbg !11430
  %307 = shl i32 %306, 6, !dbg !11430
  %308 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !11430
  %309 = load i32, i32* %308, align 4, !dbg !11430
  %310 = shl i32 %309, 15, !dbg !11430
  %311 = add i32 %310, -65536, !dbg !11430
  %312 = and i32 %311, -65536, !dbg !11430
  %313 = shl i32 %300, 9, !dbg !11430
  %314 = and i32 %313, 100663296, !dbg !11430
  %315 = add nuw nsw i32 %314, 33554432, !dbg !11430
  %316 = or i32 %302, %304, !dbg !11430
  %317 = or i32 %316, %315, !dbg !11430
  %318 = or i32 %317, %307, !dbg !11430
  %319 = or i32 %318, %312, !dbg !11430
  store volatile i32 %319, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11430
  %320 = load i32, i32* %3, align 4, !dbg !11431
  br label %321, !dbg !11433

321:                                              ; preds = %299, %295, %291
  %322 = phi i32 [ %320, %299 ], [ %292, %295 ], [ %292, %291 ], !dbg !11431
  %323 = and i32 %322, 2048, !dbg !11434
  %324 = icmp eq i32 %323, 0, !dbg !11435
  br i1 %324, label %346, label %325, !dbg !11436

325:                                              ; preds = %321
  %326 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !11437
  %327 = load i32, i32* %326, align 4, !dbg !11437
  %328 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !11437
  %329 = load i32, i32* %328, align 4, !dbg !11437
  %330 = shl i32 %329, 6, !dbg !11437
  %331 = or i32 %330, %327, !dbg !11437
  %332 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !11437
  %333 = load i32, i32* %332, align 4, !dbg !11437
  %334 = shl i32 %333, 15, !dbg !11437
  %335 = add i32 %334, -65536, !dbg !11437
  %336 = and i32 %335, -65536, !dbg !11437
  %337 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !11437
  %338 = load i32, i32* %337, align 4, !dbg !11437
  %339 = shl i32 %338, 24, !dbg !11437
  %340 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !11437
  %341 = load i32, i32* %340, align 4, !dbg !11437
  %342 = shl i32 %341, 28, !dbg !11437
  %343 = or i32 %331, %339, !dbg !11437
  %344 = or i32 %343, %336, !dbg !11437
  %345 = or i32 %344, %342, !dbg !11437
  store volatile i32 %345, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11437
  br label %346, !dbg !11439

346:                                              ; preds = %325, %321
  store volatile i32 1, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !11440
  %347 = tail call i32 @HAL_GetTick() #25, !dbg !11441
  call void @llvm.dbg.value(metadata i32 %347, metadata !11184, metadata !DIExpression()), !dbg !11197
  br label %348, !dbg !11442

348:                                              ; preds = %352, %346
  %349 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11443
  %350 = and i32 %349, 134217728, !dbg !11444
  %351 = icmp eq i32 %350, 0, !dbg !11444
  br i1 %351, label %352, label %356, !dbg !11442

352:                                              ; preds = %348
  %353 = tail call i32 @HAL_GetTick() #25, !dbg !11445
  %354 = sub i32 %353, %347, !dbg !11448
  %355 = icmp ugt i32 %354, 2, !dbg !11449
  br i1 %355, label %439, label %348, !dbg !11450, !llvm.loop !11451

356:                                              ; preds = %348, %206
  %357 = icmp eq i32 %178, 1, !dbg !11453
  br i1 %357, label %358, label %439, !dbg !11455

358:                                              ; preds = %356
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !11456
  %359 = tail call i32 @HAL_GetTick() #25, !dbg !11458
  call void @llvm.dbg.value(metadata i32 %359, metadata !11184, metadata !DIExpression()), !dbg !11197
  br label %360, !dbg !11459

360:                                              ; preds = %364, %358
  %361 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11460
  %362 = and i32 %361, 536870912, !dbg !11460
  %363 = icmp eq i32 %362, 0, !dbg !11460
  br i1 %363, label %368, label %364, !dbg !11459

364:                                              ; preds = %360
  %365 = tail call i32 @HAL_GetTick() #25, !dbg !11461
  %366 = sub i32 %365, %359, !dbg !11464
  %367 = icmp ugt i32 %366, 2, !dbg !11465
  br i1 %367, label %439, label %360, !dbg !11466, !llvm.loop !11467

368:                                              ; preds = %360
  %369 = load i32, i32* %3, align 4, !dbg !11469
  %370 = and i32 %369, 4, !dbg !11471
  %371 = icmp eq i32 %370, 0, !dbg !11472
  br i1 %371, label %376, label %372, !dbg !11473

372:                                              ; preds = %368
  %373 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !11474
  %374 = load i32, i32* %373, align 4, !dbg !11474
  %375 = icmp eq i32 %374, 0, !dbg !11475
  br i1 %375, label %383, label %376, !dbg !11476

376:                                              ; preds = %372, %368
  %377 = and i32 %369, 8, !dbg !11477
  %378 = icmp eq i32 %377, 0, !dbg !11478
  br i1 %378, label %405, label %379, !dbg !11479

379:                                              ; preds = %376
  %380 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !11480
  %381 = load i32, i32* %380, align 4, !dbg !11480
  %382 = icmp eq i32 %381, 0, !dbg !11481
  br i1 %382, label %383, label %405, !dbg !11482

383:                                              ; preds = %379, %372
  %384 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11483
  %385 = and i32 %384, 196608, !dbg !11485
  call void @llvm.dbg.value(metadata i32 %385, metadata !11189, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !11197
  %386 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !11486
  %387 = load i32, i32* %386, align 4, !dbg !11486
  %388 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !11486
  %389 = load i32, i32* %388, align 4, !dbg !11486
  %390 = shl i32 %389, 6, !dbg !11486
  %391 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 3, !dbg !11486
  %392 = load i32, i32* %391, align 4, !dbg !11486
  %393 = shl i32 %392, 24, !dbg !11486
  %394 = or i32 %385, %387, !dbg !11486
  %395 = or i32 %394, %390, !dbg !11486
  %396 = or i32 %395, %393, !dbg !11486
  store volatile i32 %396, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11486
  %397 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11487
  %398 = and i32 %397, -7937, !dbg !11487
  %399 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 4, !dbg !11487
  %400 = load i32, i32* %399, align 4, !dbg !11487
  %401 = shl i32 %400, 8, !dbg !11487
  %402 = add i32 %401, -256, !dbg !11487
  %403 = or i32 %402, %398, !dbg !11487
  store volatile i32 %403, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11487
  %404 = load i32, i32* %3, align 4, !dbg !11488
  br label %405, !dbg !11490

405:                                              ; preds = %383, %379, %376
  %406 = phi i32 [ %404, %383 ], [ %369, %379 ], [ %369, %376 ], !dbg !11488
  %407 = and i32 %406, 256, !dbg !11491
  %408 = icmp eq i32 %407, 0, !dbg !11492
  br i1 %408, label %429, label %409, !dbg !11493

409:                                              ; preds = %405
  %410 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !11494
  %411 = load i32, i32* %410, align 4, !dbg !11494
  %412 = icmp eq i32 %411, 134217728, !dbg !11495
  br i1 %412, label %413, label %429, !dbg !11496

413:                                              ; preds = %409
  %414 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11497
  %415 = and i32 %414, 251658240, !dbg !11499
  call void @llvm.dbg.value(metadata i32 %415, metadata !11190, metadata !DIExpression()), !dbg !11197
  %416 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !11500
  %417 = load i32, i32* %416, align 4, !dbg !11500
  %418 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !11500
  %419 = load i32, i32* %418, align 4, !dbg !11500
  %420 = shl i32 %419, 6, !dbg !11500
  %421 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 2, !dbg !11500
  %422 = load i32, i32* %421, align 4, !dbg !11500
  %423 = shl i32 %422, 15, !dbg !11500
  %424 = add i32 %423, -65536, !dbg !11500
  %425 = and i32 %424, -65536, !dbg !11500
  %426 = or i32 %415, %417, !dbg !11500
  %427 = or i32 %426, %420, !dbg !11500
  %428 = or i32 %427, %425, !dbg !11500
  store volatile i32 %428, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11500
  br label %429, !dbg !11501

429:                                              ; preds = %413, %409, %405
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !11502
  %430 = tail call i32 @HAL_GetTick() #25, !dbg !11503
  call void @llvm.dbg.value(metadata i32 %430, metadata !11184, metadata !DIExpression()), !dbg !11197
  br label %431, !dbg !11504

431:                                              ; preds = %435, %429
  %432 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11505
  %433 = and i32 %432, 536870912, !dbg !11506
  %434 = icmp eq i32 %433, 0, !dbg !11506
  br i1 %434, label %435, label %439, !dbg !11504

435:                                              ; preds = %431
  %436 = tail call i32 @HAL_GetTick() #25, !dbg !11507
  %437 = sub i32 %436, %430, !dbg !11510
  %438 = icmp ugt i32 %437, 2, !dbg !11511
  br i1 %438, label %439, label %431, !dbg !11512, !llvm.loop !11513

439:                                              ; preds = %87, %112, %215, %352, %364, %431, %435, %356
  %440 = phi i32 [ 0, %356 ], [ 0, %431 ], [ 3, %435 ], [ 3, %364 ], [ 3, %352 ], [ 3, %215 ], [ 3, %112 ], [ 3, %87 ], !dbg !11197
  ret i32 %440, !dbg !11515
}

; Function Attrs: optsize
declare !dbg !11516 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCCEx_GetPeriphCLKConfig(%struct.RCC_PeriphCLKInitTypeDef* noundef writeonly %0) local_unnamed_addr #15 !dbg !11518 {
  call void @llvm.dbg.value(metadata %struct.RCC_PeriphCLKInitTypeDef* %0, metadata !11522, metadata !DIExpression()), !dbg !11524
  %2 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 0, !dbg !11525
  store i32 2047, i32* %2, align 4, !dbg !11526
  %3 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11527
  %4 = and i32 %3, 63, !dbg !11528
  %5 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !11529
  store i32 %4, i32* %5, align 4, !dbg !11530
  %6 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11531
  %7 = lshr i32 %6, 6, !dbg !11532
  %8 = and i32 %7, 511, !dbg !11532
  %9 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !11533
  store i32 %8, i32* %9, align 4, !dbg !11534
  %10 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11535
  %11 = lshr i32 %10, 15, !dbg !11536
  %12 = and i32 %11, 6, !dbg !11536
  %13 = add nuw nsw i32 %12, 2, !dbg !11536
  %14 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !11537
  store i32 %13, i32* %14, align 4, !dbg !11538
  %15 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11539
  %16 = lshr i32 %15, 24, !dbg !11540
  %17 = and i32 %16, 15, !dbg !11540
  %18 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !11541
  store i32 %17, i32* %18, align 4, !dbg !11542
  %19 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11543
  %20 = lshr i32 %19, 28, !dbg !11544
  %21 = and i32 %20, 7, !dbg !11544
  %22 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !11545
  store i32 %21, i32* %22, align 4, !dbg !11546
  %23 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11547
  %24 = and i32 %23, 63, !dbg !11548
  %25 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !11549
  store i32 %24, i32* %25, align 4, !dbg !11550
  %26 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11551
  %27 = lshr i32 %26, 6, !dbg !11552
  %28 = and i32 %27, 511, !dbg !11552
  %29 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !11553
  store i32 %28, i32* %29, align 4, !dbg !11554
  %30 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11555
  %31 = lshr i32 %30, 15, !dbg !11556
  %32 = and i32 %31, 6, !dbg !11556
  %33 = add nuw nsw i32 %32, 2, !dbg !11556
  %34 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 2, !dbg !11557
  store i32 %33, i32* %34, align 4, !dbg !11558
  %35 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11559
  %36 = lshr i32 %35, 24, !dbg !11560
  %37 = and i32 %36, 15, !dbg !11560
  %38 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 3, !dbg !11561
  store i32 %37, i32* %38, align 4, !dbg !11562
  %39 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11563
  %40 = and i32 %39, 31, !dbg !11564
  %41 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 3, !dbg !11565
  store i32 %40, i32* %41, align 4, !dbg !11566
  %42 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11567
  %43 = lshr i32 %42, 8, !dbg !11568
  %44 = and i32 %43, 31, !dbg !11568
  %45 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 4, !dbg !11569
  store i32 %44, i32* %45, align 4, !dbg !11570
  %46 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11571
  %47 = and i32 %46, 3145728, !dbg !11571
  %48 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !11572
  store i32 %47, i32* %48, align 4, !dbg !11573
  %49 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11574
  %50 = and i32 %49, 12582912, !dbg !11574
  %51 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !11575
  store i32 %50, i32* %51, align 4, !dbg !11576
  %52 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11577
  %53 = and i32 %52, 100663296, !dbg !11577
  %54 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !11578
  store i32 %53, i32* %54, align 4, !dbg !11579
  %55 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11580
  %56 = and i32 %55, 402653184, !dbg !11580
  %57 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !11581
  store i32 %56, i32* %57, align 4, !dbg !11582
  %58 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11583
  %59 = and i32 %58, 2031616, !dbg !11584
  call void @llvm.dbg.value(metadata i32 %59, metadata !11523, metadata !DIExpression()), !dbg !11524
  %60 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11585
  %61 = and i32 %60, 768, !dbg !11586
  %62 = or i32 %61, %59, !dbg !11587
  %63 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !11588
  store i32 %62, i32* %63, align 4, !dbg !11589
  %64 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11590
  %65 = and i32 %64, 67108864, !dbg !11590
  %66 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 11, !dbg !11591
  store i32 %65, i32* %66, align 4, !dbg !11592
  %67 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11593
  %68 = and i32 %67, 12582912, !dbg !11593
  %69 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 12, !dbg !11594
  store i32 %68, i32* %69, align 4, !dbg !11595
  %70 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11596
  %71 = and i32 %70, 134217728, !dbg !11596
  %72 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !11597
  store i32 %71, i32* %72, align 4, !dbg !11598
  %73 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11599
  %74 = and i32 %73, 268435456, !dbg !11599
  %75 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 10, !dbg !11600
  store i32 %74, i32* %75, align 4, !dbg !11601
  %76 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11602
  %77 = and i32 %76, 536870912, !dbg !11602
  %78 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !11603
  store i32 %77, i32* %78, align 4, !dbg !11604
  %79 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11605
  %80 = lshr i32 %79, 24, !dbg !11607
  %81 = trunc i32 %80 to i8, !dbg !11607
  %82 = and i8 %81, 1, !dbg !11607
  %83 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 15, !dbg !11608
  store i8 %82, i8* %83, align 4, !dbg !11610
  ret void, !dbg !11611
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCCEx_GetPeriphCLKFreq(i32 noundef %0) local_unnamed_addr #15 !dbg !11612 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11614, metadata !DIExpression()), !dbg !11621
  call void @llvm.dbg.value(metadata i32 0, metadata !11615, metadata !DIExpression()), !dbg !11621
  call void @llvm.dbg.value(metadata i32 0, metadata !11616, metadata !DIExpression()), !dbg !11621
  call void @llvm.dbg.value(metadata i32 0, metadata !11617, metadata !DIExpression()), !dbg !11621
  call void @llvm.dbg.value(metadata i32 0, metadata !11618, metadata !DIExpression()), !dbg !11621
  call void @llvm.dbg.value(metadata i32 0, metadata !11619, metadata !DIExpression()), !dbg !11621
  call void @llvm.dbg.value(metadata i32 0, metadata !11620, metadata !DIExpression()), !dbg !11621
  switch i32 %0, label %123 [
    i32 4, label %2
    i32 8, label %2
    i32 1, label %57
    i32 2, label %90
  ], !dbg !11622

2:                                                ; preds = %1, %1
  %3 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11623
  call void @llvm.dbg.value(metadata i32 %3, metadata !11618, metadata !DIExpression()), !dbg !11621
  call void @llvm.dbg.value(metadata i32 %3, metadata !11618, metadata !DIExpression(DW_OP_constu, 15728640, DW_OP_and, DW_OP_stack_value)), !dbg !11621
  %4 = lshr i32 %3, 20, !dbg !11626
  %5 = and i32 %4, 15, !dbg !11626
  switch i32 %5, label %123 [
    i32 0, label %6
    i32 1, label %24
    i32 4, label %24
    i32 2, label %41
    i32 8, label %41
    i32 3, label %54
    i32 12, label %55
  ], !dbg !11626

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11627
  call void @llvm.dbg.value(metadata i32 undef, metadata !11617, metadata !DIExpression()), !dbg !11621
  call void @llvm.dbg.value(metadata i32 undef, metadata !11617, metadata !DIExpression()), !dbg !11621
  %8 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11631
  %9 = and i32 %8, 63, !dbg !11631
  %10 = udiv i32 16000000, %9, !dbg !11631
  call void @llvm.dbg.value(metadata i32 %10, metadata !11617, metadata !DIExpression()), !dbg !11621
  %11 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11632
  %12 = lshr i32 %11, 24, !dbg !11633
  %13 = and i32 %12, 15, !dbg !11633
  call void @llvm.dbg.value(metadata i32 %13, metadata !11615, metadata !DIExpression()), !dbg !11621
  %14 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11634
  %15 = lshr i32 %14, 6, !dbg !11635
  %16 = and i32 %15, 511, !dbg !11635
  %17 = mul i32 %16, %10, !dbg !11636
  %18 = udiv i32 %17, %13, !dbg !11637
  call void @llvm.dbg.value(metadata i32 %18, metadata !11616, metadata !DIExpression()), !dbg !11621
  %19 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11638
  %20 = lshr i32 %19, 8, !dbg !11639
  %21 = and i32 %20, 31, !dbg !11639
  %22 = add nuw nsw i32 %21, 1, !dbg !11640
  call void @llvm.dbg.value(metadata i32 %22, metadata !11615, metadata !DIExpression()), !dbg !11621
  %23 = udiv i32 %18, %22, !dbg !11641
  call void @llvm.dbg.value(metadata i32 %23, metadata !11616, metadata !DIExpression()), !dbg !11621
  br label %123, !dbg !11642

24:                                               ; preds = %2, %2
  %25 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11643
  call void @llvm.dbg.value(metadata i32 undef, metadata !11617, metadata !DIExpression()), !dbg !11621
  call void @llvm.dbg.value(metadata i32 undef, metadata !11617, metadata !DIExpression()), !dbg !11621
  %26 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11646
  %27 = and i32 %26, 63, !dbg !11646
  %28 = udiv i32 16000000, %27, !dbg !11646
  call void @llvm.dbg.value(metadata i32 %28, metadata !11617, metadata !DIExpression()), !dbg !11621
  %29 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11647
  %30 = lshr i32 %29, 24, !dbg !11648
  %31 = and i32 %30, 15, !dbg !11648
  call void @llvm.dbg.value(metadata i32 %31, metadata !11615, metadata !DIExpression()), !dbg !11621
  %32 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11649
  %33 = lshr i32 %32, 6, !dbg !11650
  %34 = and i32 %33, 511, !dbg !11650
  %35 = mul i32 %34, %28, !dbg !11651
  %36 = udiv i32 %35, %31, !dbg !11652
  call void @llvm.dbg.value(metadata i32 %36, metadata !11616, metadata !DIExpression()), !dbg !11621
  %37 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11653
  %38 = and i32 %37, 31, !dbg !11654
  %39 = add nuw nsw i32 %38, 1, !dbg !11655
  call void @llvm.dbg.value(metadata i32 %39, metadata !11615, metadata !DIExpression()), !dbg !11621
  %40 = udiv i32 %36, %39, !dbg !11656
  call void @llvm.dbg.value(metadata i32 %40, metadata !11616, metadata !DIExpression()), !dbg !11621
  br label %123, !dbg !11657

41:                                               ; preds = %2, %2
  %42 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11658
  call void @llvm.dbg.value(metadata i32 undef, metadata !11617, metadata !DIExpression()), !dbg !11621
  call void @llvm.dbg.value(metadata i32 undef, metadata !11617, metadata !DIExpression()), !dbg !11621
  %43 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11661
  %44 = and i32 %43, 63, !dbg !11661
  %45 = udiv i32 16000000, %44, !dbg !11661
  call void @llvm.dbg.value(metadata i32 %45, metadata !11617, metadata !DIExpression()), !dbg !11621
  %46 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11662
  %47 = lshr i32 %46, 28, !dbg !11663
  %48 = and i32 %47, 7, !dbg !11663
  call void @llvm.dbg.value(metadata i32 %48, metadata !11615, metadata !DIExpression()), !dbg !11621
  %49 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11664
  %50 = lshr i32 %49, 6, !dbg !11665
  %51 = and i32 %50, 511, !dbg !11665
  %52 = mul i32 %51, %45, !dbg !11666
  %53 = udiv i32 %52, %48, !dbg !11667
  call void @llvm.dbg.value(metadata i32 %53, metadata !11616, metadata !DIExpression()), !dbg !11621
  br label %123, !dbg !11668

54:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 12288000, metadata !11616, metadata !DIExpression()), !dbg !11621
  br label %123, !dbg !11669

55:                                               ; preds = %2
  %56 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11671
  call void @llvm.dbg.value(metadata i32 16000000, metadata !11616, metadata !DIExpression()), !dbg !11621
  call void @llvm.dbg.value(metadata i32 16000000, metadata !11616, metadata !DIExpression()), !dbg !11621
  br label %123

57:                                               ; preds = %1
  %58 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11674
  call void @llvm.dbg.value(metadata i32 %58, metadata !11619, metadata !DIExpression(DW_OP_constu, 100663296, DW_OP_and, DW_OP_stack_value)), !dbg !11621
  %59 = lshr i32 %58, 25, !dbg !11676
  %60 = and i32 %59, 3, !dbg !11676
  switch i32 %60, label %89 [
    i32 1, label %123
    i32 0, label %61
    i32 2, label %74
    i32 3, label %87
  ], !dbg !11676

61:                                               ; preds = %57
  %62 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11677
  call void @llvm.dbg.value(metadata i32 undef, metadata !11617, metadata !DIExpression()), !dbg !11621
  call void @llvm.dbg.value(metadata i32 undef, metadata !11617, metadata !DIExpression()), !dbg !11621
  %63 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11681
  %64 = and i32 %63, 63, !dbg !11681
  %65 = udiv i32 16000000, %64, !dbg !11681
  call void @llvm.dbg.value(metadata i32 %65, metadata !11617, metadata !DIExpression()), !dbg !11621
  %66 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11682
  %67 = lshr i32 %66, 6, !dbg !11683
  %68 = and i32 %67, 511, !dbg !11683
  %69 = mul i32 %68, %65, !dbg !11684
  call void @llvm.dbg.value(metadata i32 %69, metadata !11620, metadata !DIExpression()), !dbg !11621
  %70 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11685
  %71 = lshr i32 %70, 28, !dbg !11686
  %72 = and i32 %71, 7, !dbg !11686
  %73 = udiv i32 %69, %72, !dbg !11687
  call void @llvm.dbg.value(metadata i32 %73, metadata !11616, metadata !DIExpression()), !dbg !11621
  br label %123, !dbg !11688

74:                                               ; preds = %57
  %75 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11689
  call void @llvm.dbg.value(metadata i32 undef, metadata !11617, metadata !DIExpression()), !dbg !11621
  call void @llvm.dbg.value(metadata i32 undef, metadata !11617, metadata !DIExpression()), !dbg !11621
  %76 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11692
  %77 = and i32 %76, 63, !dbg !11692
  %78 = udiv i32 16000000, %77, !dbg !11692
  call void @llvm.dbg.value(metadata i32 %78, metadata !11617, metadata !DIExpression()), !dbg !11621
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11693
  %80 = lshr i32 %79, 6, !dbg !11694
  %81 = and i32 %80, 511, !dbg !11694
  %82 = mul i32 %81, %78, !dbg !11695
  call void @llvm.dbg.value(metadata i32 %82, metadata !11620, metadata !DIExpression()), !dbg !11621
  %83 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11696
  %84 = lshr i32 %83, 28, !dbg !11697
  %85 = and i32 %84, 7, !dbg !11697
  %86 = udiv i32 %82, %85, !dbg !11698
  call void @llvm.dbg.value(metadata i32 %86, metadata !11616, metadata !DIExpression()), !dbg !11621
  br label %123, !dbg !11699

87:                                               ; preds = %57
  %88 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11700
  call void @llvm.dbg.value(metadata i32 16000000, metadata !11616, metadata !DIExpression()), !dbg !11621
  call void @llvm.dbg.value(metadata i32 16000000, metadata !11616, metadata !DIExpression()), !dbg !11621
  br label %123

89:                                               ; preds = %57
  unreachable

90:                                               ; preds = %1
  %91 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11703
  call void @llvm.dbg.value(metadata i32 %91, metadata !11619, metadata !DIExpression(DW_OP_constu, 402653184, DW_OP_and, DW_OP_stack_value)), !dbg !11621
  %92 = lshr i32 %91, 27, !dbg !11705
  %93 = and i32 %92, 3, !dbg !11705
  switch i32 %93, label %122 [
    i32 1, label %123
    i32 0, label %94
    i32 2, label %107
    i32 3, label %120
  ], !dbg !11705

94:                                               ; preds = %90
  %95 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11706
  call void @llvm.dbg.value(metadata i32 undef, metadata !11617, metadata !DIExpression()), !dbg !11621
  call void @llvm.dbg.value(metadata i32 undef, metadata !11617, metadata !DIExpression()), !dbg !11621
  %96 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11710
  %97 = and i32 %96, 63, !dbg !11710
  %98 = udiv i32 16000000, %97, !dbg !11710
  call void @llvm.dbg.value(metadata i32 %98, metadata !11617, metadata !DIExpression()), !dbg !11621
  %99 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11711
  %100 = lshr i32 %99, 6, !dbg !11712
  %101 = and i32 %100, 511, !dbg !11712
  %102 = mul i32 %101, %98, !dbg !11713
  call void @llvm.dbg.value(metadata i32 %102, metadata !11620, metadata !DIExpression()), !dbg !11621
  %103 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11714
  %104 = lshr i32 %103, 28, !dbg !11715
  %105 = and i32 %104, 7, !dbg !11715
  %106 = udiv i32 %102, %105, !dbg !11716
  call void @llvm.dbg.value(metadata i32 %106, metadata !11616, metadata !DIExpression()), !dbg !11621
  br label %123, !dbg !11717

107:                                              ; preds = %90
  %108 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11718
  call void @llvm.dbg.value(metadata i32 undef, metadata !11617, metadata !DIExpression()), !dbg !11621
  call void @llvm.dbg.value(metadata i32 undef, metadata !11617, metadata !DIExpression()), !dbg !11621
  %109 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11721
  %110 = and i32 %109, 63, !dbg !11721
  %111 = udiv i32 16000000, %110, !dbg !11721
  call void @llvm.dbg.value(metadata i32 %111, metadata !11617, metadata !DIExpression()), !dbg !11621
  %112 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11722
  %113 = lshr i32 %112, 6, !dbg !11723
  %114 = and i32 %113, 511, !dbg !11723
  %115 = mul i32 %114, %111, !dbg !11724
  call void @llvm.dbg.value(metadata i32 %115, metadata !11620, metadata !DIExpression()), !dbg !11621
  %116 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11725
  %117 = lshr i32 %116, 28, !dbg !11726
  %118 = and i32 %117, 7, !dbg !11726
  %119 = udiv i32 %115, %118, !dbg !11727
  call void @llvm.dbg.value(metadata i32 %119, metadata !11616, metadata !DIExpression()), !dbg !11621
  br label %123, !dbg !11728

120:                                              ; preds = %90
  %121 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11729
  call void @llvm.dbg.value(metadata i32 16000000, metadata !11616, metadata !DIExpression()), !dbg !11621
  call void @llvm.dbg.value(metadata i32 16000000, metadata !11616, metadata !DIExpression()), !dbg !11621
  br label %123

122:                                              ; preds = %90
  unreachable

123:                                              ; preds = %120, %90, %87, %57, %55, %94, %107, %61, %74, %6, %24, %41, %54, %2, %1
  %124 = phi i32 [ 0, %1 ], [ %119, %107 ], [ %106, %94 ], [ %86, %74 ], [ %73, %61 ], [ 0, %2 ], [ 12288000, %54 ], [ %53, %41 ], [ %40, %24 ], [ %23, %6 ], [ 16000000, %55 ], [ 12288000, %57 ], [ 16000000, %87 ], [ 12288000, %90 ], [ 16000000, %120 ], !dbg !11621
  call void @llvm.dbg.value(metadata i32 %124, metadata !11616, metadata !DIExpression()), !dbg !11621
  ret i32 %124, !dbg !11732
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCCEx_SelectLSEMode(i8 noundef zeroext %0) local_unnamed_addr #14 !dbg !11733 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !11737, metadata !DIExpression()), !dbg !11738
  %2 = icmp eq i8 %0, 1, !dbg !11739
  %3 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11741
  %4 = and i32 %3, -9, !dbg !11742
  %5 = select i1 %2, i32 8, i32 0, !dbg !11742
  %6 = or i32 %4, %5, !dbg !11742
  store volatile i32 %6, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11741
  ret void, !dbg !11743
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_EnablePLLI2S(%struct.RCC_PLLI2SInitTypeDef* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !11744 {
  call void @llvm.dbg.value(metadata %struct.RCC_PLLI2SInitTypeDef* %0, metadata !11749, metadata !DIExpression()), !dbg !11751
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !11752
  %2 = tail call i32 @HAL_GetTick() #25, !dbg !11753
  call void @llvm.dbg.value(metadata i32 %2, metadata !11750, metadata !DIExpression()), !dbg !11751
  br label %3, !dbg !11754

3:                                                ; preds = %7, %1
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11755
  %5 = and i32 %4, 134217728, !dbg !11755
  %6 = icmp eq i32 %5, 0, !dbg !11755
  br i1 %6, label %11, label %7, !dbg !11754

7:                                                ; preds = %3
  %8 = tail call i32 @HAL_GetTick() #25, !dbg !11756
  %9 = sub i32 %8, %2, !dbg !11759
  %10 = icmp ugt i32 %9, 2, !dbg !11760
  br i1 %10, label %41, label %3, !dbg !11761, !llvm.loop !11762

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 0, !dbg !11764
  %13 = load i32, i32* %12, align 4, !dbg !11764
  %14 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 1, !dbg !11764
  %15 = load i32, i32* %14, align 4, !dbg !11764
  %16 = shl i32 %15, 6, !dbg !11764
  %17 = or i32 %16, %13, !dbg !11764
  %18 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 2, !dbg !11764
  %19 = load i32, i32* %18, align 4, !dbg !11764
  %20 = shl i32 %19, 15, !dbg !11764
  %21 = add i32 %20, -65536, !dbg !11764
  %22 = and i32 %21, -65536, !dbg !11764
  %23 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 3, !dbg !11764
  %24 = load i32, i32* %23, align 4, !dbg !11764
  %25 = shl i32 %24, 24, !dbg !11764
  %26 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 4, !dbg !11764
  %27 = load i32, i32* %26, align 4, !dbg !11764
  %28 = shl i32 %27, 28, !dbg !11764
  %29 = or i32 %17, %25, !dbg !11764
  %30 = or i32 %29, %22, !dbg !11764
  %31 = or i32 %30, %28, !dbg !11764
  store volatile i32 %31, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11764
  store volatile i32 1, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !11765
  %32 = tail call i32 @HAL_GetTick() #25, !dbg !11766
  call void @llvm.dbg.value(metadata i32 %32, metadata !11750, metadata !DIExpression()), !dbg !11751
  br label %33, !dbg !11767

33:                                               ; preds = %37, %11
  %34 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11768
  %35 = and i32 %34, 134217728, !dbg !11769
  %36 = icmp eq i32 %35, 0, !dbg !11769
  br i1 %36, label %37, label %41, !dbg !11767

37:                                               ; preds = %33
  %38 = tail call i32 @HAL_GetTick() #25, !dbg !11770
  %39 = sub i32 %38, %32, !dbg !11773
  %40 = icmp ugt i32 %39, 2, !dbg !11774
  br i1 %40, label %41, label %33, !dbg !11775, !llvm.loop !11776

41:                                               ; preds = %7, %33, %37
  %42 = phi i32 [ 0, %33 ], [ 3, %37 ], [ 3, %7 ], !dbg !11751
  ret i32 %42, !dbg !11778
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_DisablePLLI2S() local_unnamed_addr #1 !dbg !11779 {
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !11784
  %1 = tail call i32 @HAL_GetTick() #25, !dbg !11785
  call void @llvm.dbg.value(metadata i32 %1, metadata !11783, metadata !DIExpression()), !dbg !11786
  br label %2, !dbg !11787

2:                                                ; preds = %6, %0
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11788
  %4 = and i32 %3, 134217728, !dbg !11788
  %5 = icmp eq i32 %4, 0, !dbg !11789
  br i1 %5, label %10, label %6, !dbg !11787

6:                                                ; preds = %2
  %7 = tail call i32 @HAL_GetTick() #25, !dbg !11790
  %8 = sub i32 %7, %1, !dbg !11793
  %9 = icmp ugt i32 %8, 2, !dbg !11794
  br i1 %9, label %10, label %2, !dbg !11795, !llvm.loop !11796

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 3, %6 ], [ 0, %2 ], !dbg !11786
  ret i32 %11, !dbg !11798
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_EnablePLLSAI(%struct.RCC_PLLSAIInitTypeDef* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !11799 {
  call void @llvm.dbg.value(metadata %struct.RCC_PLLSAIInitTypeDef* %0, metadata !11804, metadata !DIExpression()), !dbg !11806
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !11807
  %2 = tail call i32 @HAL_GetTick() #25, !dbg !11808
  call void @llvm.dbg.value(metadata i32 %2, metadata !11805, metadata !DIExpression()), !dbg !11806
  br label %3, !dbg !11809

3:                                                ; preds = %7, %1
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11810
  %5 = and i32 %4, 536870912, !dbg !11810
  %6 = icmp eq i32 %5, 0, !dbg !11810
  br i1 %6, label %11, label %7, !dbg !11809

7:                                                ; preds = %3
  %8 = tail call i32 @HAL_GetTick() #25, !dbg !11811
  %9 = sub i32 %8, %2, !dbg !11814
  %10 = icmp ugt i32 %9, 2, !dbg !11815
  br i1 %10, label %37, label %3, !dbg !11816, !llvm.loop !11817

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 0, !dbg !11819
  %13 = load i32, i32* %12, align 4, !dbg !11819
  %14 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 1, !dbg !11819
  %15 = load i32, i32* %14, align 4, !dbg !11819
  %16 = shl i32 %15, 6, !dbg !11819
  %17 = or i32 %16, %13, !dbg !11819
  %18 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 2, !dbg !11819
  %19 = load i32, i32* %18, align 4, !dbg !11819
  %20 = shl i32 %19, 15, !dbg !11819
  %21 = add i32 %20, -65536, !dbg !11819
  %22 = and i32 %21, -65536, !dbg !11819
  %23 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 3, !dbg !11819
  %24 = load i32, i32* %23, align 4, !dbg !11819
  %25 = shl i32 %24, 24, !dbg !11819
  %26 = or i32 %17, %25, !dbg !11819
  %27 = or i32 %26, %22, !dbg !11819
  store volatile i32 %27, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11819
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !11820
  %28 = tail call i32 @HAL_GetTick() #25, !dbg !11821
  call void @llvm.dbg.value(metadata i32 %28, metadata !11805, metadata !DIExpression()), !dbg !11806
  br label %29, !dbg !11822

29:                                               ; preds = %33, %11
  %30 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11823
  %31 = and i32 %30, 536870912, !dbg !11824
  %32 = icmp eq i32 %31, 0, !dbg !11824
  br i1 %32, label %33, label %37, !dbg !11822

33:                                               ; preds = %29
  %34 = tail call i32 @HAL_GetTick() #25, !dbg !11825
  %35 = sub i32 %34, %28, !dbg !11828
  %36 = icmp ugt i32 %35, 2, !dbg !11829
  br i1 %36, label %37, label %29, !dbg !11830, !llvm.loop !11831

37:                                               ; preds = %7, %29, %33
  %38 = phi i32 [ 0, %29 ], [ 3, %33 ], [ 3, %7 ], !dbg !11806
  ret i32 %38, !dbg !11833
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_DisablePLLSAI() local_unnamed_addr #1 !dbg !11834 {
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !11837
  %1 = tail call i32 @HAL_GetTick() #25, !dbg !11838
  call void @llvm.dbg.value(metadata i32 %1, metadata !11836, metadata !DIExpression()), !dbg !11839
  br label %2, !dbg !11840

2:                                                ; preds = %6, %0
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11841
  %4 = and i32 %3, 536870912, !dbg !11841
  %5 = icmp eq i32 %4, 0, !dbg !11841
  br i1 %5, label %10, label %6, !dbg !11840

6:                                                ; preds = %2
  %7 = tail call i32 @HAL_GetTick() #25, !dbg !11842
  %8 = sub i32 %7, %1, !dbg !11845
  %9 = icmp ugt i32 %8, 2, !dbg !11846
  br i1 %9, label %10, label %2, !dbg !11847, !llvm.loop !11848

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 3, %6 ], [ 0, %2 ], !dbg !11839
  ret i32 %11, !dbg !11850
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #15 !dbg !11851 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11853, metadata !DIExpression()), !dbg !11858
  call void @llvm.dbg.value(metadata i32 0, metadata !11854, metadata !DIExpression()), !dbg !11858
  call void @llvm.dbg.value(metadata i32 0, metadata !11855, metadata !DIExpression()), !dbg !11858
  call void @llvm.dbg.value(metadata i32 0, metadata !11856, metadata !DIExpression()), !dbg !11858
  call void @llvm.dbg.value(metadata i32 0, metadata !11857, metadata !DIExpression()), !dbg !11858
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11859
  %2 = lshr i32 %1, 2, !dbg !11860
  %3 = and i32 %2, 3, !dbg !11860
  switch i32 %3, label %37 [
    i32 0, label %38
    i32 1, label %38
    i32 2, label %4
    i32 3, label %21
  ], !dbg !11860

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11861
  %6 = and i32 %5, 63, !dbg !11864
  call void @llvm.dbg.value(metadata i32 %6, metadata !11853, metadata !DIExpression()), !dbg !11858
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11865
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11867
  %9 = lshr i32 %8, 6, !dbg !11867
  %10 = and i32 %9, 511, !dbg !11867
  %11 = zext i32 %10 to i64, !dbg !11867
  %12 = mul nuw nsw i64 %11, 16000000, !dbg !11867
  %13 = zext i32 %6 to i64, !dbg !11867
  %14 = udiv i64 %12, %13, !dbg !11867
  %15 = trunc i64 %14 to i32, !dbg !11867
  call void @llvm.dbg.value(metadata i32 %15, metadata !11854, metadata !DIExpression()), !dbg !11858
  call void @llvm.dbg.value(metadata i32 %15, metadata !11854, metadata !DIExpression()), !dbg !11858
  call void @llvm.dbg.value(metadata i32 %15, metadata !11854, metadata !DIExpression()), !dbg !11858
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11868
  %17 = lshr i32 %16, 15, !dbg !11869
  %18 = and i32 %17, 6, !dbg !11869
  %19 = add nuw nsw i32 %18, 2, !dbg !11869
  call void @llvm.dbg.value(metadata i32 %19, metadata !11855, metadata !DIExpression()), !dbg !11858
  %20 = udiv i32 %15, %19, !dbg !11870
  call void @llvm.dbg.value(metadata i32 %20, metadata !11857, metadata !DIExpression()), !dbg !11858
  br label %38, !dbg !11871

21:                                               ; preds = %0
  %22 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11872
  %23 = and i32 %22, 63, !dbg !11874
  call void @llvm.dbg.value(metadata i32 %23, metadata !11853, metadata !DIExpression()), !dbg !11858
  %24 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11875
  %25 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11877
  %26 = lshr i32 %25, 6, !dbg !11877
  %27 = and i32 %26, 511, !dbg !11877
  %28 = zext i32 %27 to i64, !dbg !11877
  %29 = mul nuw nsw i64 %28, 16000000, !dbg !11877
  %30 = zext i32 %23 to i64, !dbg !11877
  %31 = udiv i64 %29, %30, !dbg !11877
  %32 = trunc i64 %31 to i32, !dbg !11877
  call void @llvm.dbg.value(metadata i32 %32, metadata !11854, metadata !DIExpression()), !dbg !11858
  call void @llvm.dbg.value(metadata i32 %32, metadata !11854, metadata !DIExpression()), !dbg !11858
  call void @llvm.dbg.value(metadata i32 %32, metadata !11854, metadata !DIExpression()), !dbg !11858
  %33 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11878
  %34 = lshr i32 %33, 28, !dbg !11879
  %35 = and i32 %34, 7, !dbg !11879
  call void @llvm.dbg.value(metadata i32 %35, metadata !11856, metadata !DIExpression()), !dbg !11858
  %36 = udiv i32 %32, %35, !dbg !11880
  call void @llvm.dbg.value(metadata i32 %36, metadata !11857, metadata !DIExpression()), !dbg !11858
  br label %38, !dbg !11881

37:                                               ; preds = %0
  unreachable

38:                                               ; preds = %0, %0, %21, %4
  %39 = phi i32 [ %36, %21 ], [ %20, %4 ], [ 16000000, %0 ], [ 16000000, %0 ], !dbg !11882
  call void @llvm.dbg.value(metadata i32 %39, metadata !11857, metadata !DIExpression()), !dbg !11858
  ret i32 %39, !dbg !11883
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !11884 {
  %1 = tail call i32 @HAL_GetTick() #25, !dbg !11887
  call void @llvm.dbg.value(metadata i32 %1, metadata !11886, metadata !DIExpression()), !dbg !11888
  %2 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11889
  %3 = or i32 %2, 1, !dbg !11889
  store volatile i32 %3, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11889
  br label %4, !dbg !11890

4:                                                ; preds = %8, %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11891
  %6 = and i32 %5, 2, !dbg !11891
  %7 = icmp eq i32 %6, 0, !dbg !11892
  br i1 %7, label %8, label %12, !dbg !11890

8:                                                ; preds = %4
  %9 = tail call i32 @HAL_GetTick() #25, !dbg !11893
  %10 = sub i32 %9, %1, !dbg !11896
  %11 = icmp ugt i32 %10, 2, !dbg !11897
  br i1 %11, label %89, label %4, !dbg !11898, !llvm.loop !11899

12:                                               ; preds = %4
  %13 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11901
  %14 = or i32 %13, 128, !dbg !11901
  store volatile i32 %14, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11901
  %15 = tail call i32 @HAL_GetTick() #25, !dbg !11902
  call void @llvm.dbg.value(metadata i32 %15, metadata !11886, metadata !DIExpression()), !dbg !11888
  store volatile i32 0, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11903
  br label %16, !dbg !11904

16:                                               ; preds = %21, %12
  %17 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11905
  %18 = and i32 %17, 12, !dbg !11905
  %19 = icmp eq i32 %18, 0, !dbg !11906
  %20 = tail call i32 @HAL_GetTick() #25, !dbg !11888
  br i1 %19, label %24, label %21, !dbg !11904

21:                                               ; preds = %16
  %22 = sub i32 %20, %15, !dbg !11907
  %23 = icmp ugt i32 %22, 5000, !dbg !11910
  br i1 %23, label %89, label %16, !dbg !11911, !llvm.loop !11912

24:                                               ; preds = %16
  call void @llvm.dbg.value(metadata i32 %20, metadata !11886, metadata !DIExpression()), !dbg !11888
  %25 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11914
  %26 = and i32 %25, -851969, !dbg !11914
  store volatile i32 %26, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11914
  br label %27, !dbg !11915

27:                                               ; preds = %32, %24
  %28 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11916
  %29 = and i32 %28, 131072, !dbg !11916
  %30 = icmp eq i32 %29, 0, !dbg !11917
  %31 = tail call i32 @HAL_GetTick() #25, !dbg !11888
  br i1 %30, label %35, label %32, !dbg !11915

32:                                               ; preds = %27
  %33 = sub i32 %31, %20, !dbg !11918
  %34 = icmp ugt i32 %33, 100, !dbg !11921
  br i1 %34, label %89, label %27, !dbg !11922, !llvm.loop !11923

35:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %31, metadata !11886, metadata !DIExpression()), !dbg !11888
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11925
  %37 = and i32 %36, -16777217, !dbg !11925
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11925
  br label %38, !dbg !11926

38:                                               ; preds = %43, %35
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11927
  %40 = and i32 %39, 33554432, !dbg !11927
  %41 = icmp eq i32 %40, 0, !dbg !11928
  %42 = tail call i32 @HAL_GetTick() #25, !dbg !11888
  br i1 %41, label %46, label %43, !dbg !11926

43:                                               ; preds = %38
  %44 = sub i32 %42, %31, !dbg !11929
  %45 = icmp ugt i32 %44, 2, !dbg !11932
  br i1 %45, label %89, label %38, !dbg !11933, !llvm.loop !11934

46:                                               ; preds = %38
  call void @llvm.dbg.value(metadata i32 %42, metadata !11886, metadata !DIExpression()), !dbg !11888
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11936
  %48 = and i32 %47, -67108865, !dbg !11936
  store volatile i32 %48, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11936
  br label %49, !dbg !11937

49:                                               ; preds = %54, %46
  %50 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11938
  %51 = and i32 %50, 134217728, !dbg !11938
  %52 = icmp eq i32 %51, 0, !dbg !11939
  %53 = tail call i32 @HAL_GetTick() #25, !dbg !11888
  br i1 %52, label %57, label %54, !dbg !11937

54:                                               ; preds = %49
  %55 = sub i32 %53, %42, !dbg !11940
  %56 = icmp ugt i32 %55, 2, !dbg !11943
  br i1 %56, label %89, label %49, !dbg !11944, !llvm.loop !11945

57:                                               ; preds = %49
  call void @llvm.dbg.value(metadata i32 %53, metadata !11886, metadata !DIExpression()), !dbg !11888
  %58 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11947
  %59 = and i32 %58, -268435457, !dbg !11947
  store volatile i32 %59, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11947
  br label %60, !dbg !11948

60:                                               ; preds = %64, %57
  %61 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11949
  %62 = and i32 %61, 536870912, !dbg !11949
  %63 = icmp eq i32 %62, 0, !dbg !11950
  br i1 %63, label %68, label %64, !dbg !11948

64:                                               ; preds = %60
  %65 = tail call i32 @HAL_GetTick() #25, !dbg !11951
  %66 = sub i32 %65, %53, !dbg !11954
  %67 = icmp ugt i32 %66, 2, !dbg !11955
  br i1 %67, label %89, label %60, !dbg !11956, !llvm.loop !11957

68:                                               ; preds = %60
  store volatile i32 603992080, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11959
  store volatile i32 603992080, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11960
  store volatile i32 67121168, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11961
  %69 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11962
  %70 = and i32 %69, -7937, !dbg !11962
  store volatile i32 %70, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11962
  %71 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11963
  %72 = and i32 %71, -8193, !dbg !11963
  store volatile i32 %72, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11963
  %73 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11964
  %74 = and i32 %73, -16385, !dbg !11964
  store volatile i32 %74, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11964
  %75 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11965
  %76 = or i32 %75, 10420224, !dbg !11965
  store volatile i32 %76, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11965
  %77 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11966
  %78 = or i32 %77, 2097152, !dbg !11966
  store volatile i32 %78, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11966
  %79 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11967
  %80 = or i32 %79, 4194304, !dbg !11967
  store volatile i32 %80, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11967
  %81 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11968
  %82 = and i32 %81, -2, !dbg !11968
  store volatile i32 %82, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11968
  %83 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11969
  %84 = or i32 %83, 16777216, !dbg !11969
  store volatile i32 %84, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11969
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !11970
  %85 = load i32, i32* @uwTickPrio, align 4, !dbg !11971
  %86 = tail call i32 @HAL_InitTick(i32 noundef %85) #25, !dbg !11973
  %87 = icmp ne i32 %86, 0, !dbg !11974
  %88 = zext i1 %87 to i32, !dbg !11975
  br label %89, !dbg !11975

89:                                               ; preds = %8, %21, %32, %43, %54, %64, %68
  %90 = phi i32 [ %88, %68 ], [ 3, %64 ], [ 3, %54 ], [ 3, %43 ], [ 3, %32 ], [ 3, %21 ], [ 3, %8 ], !dbg !11888
  ret i32 %90, !dbg !11976
}

; Function Attrs: optsize
declare !dbg !11977 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !11980 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12006, metadata !DIExpression()), !dbg !12017
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !12018
  br i1 %3, label %337, label %4, !dbg !12020

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12021
  %6 = load i32, i32* %5, align 4, !dbg !12021
  %7 = and i32 %6, 1, !dbg !12023
  %8 = icmp eq i32 %7, 0, !dbg !12024
  br i1 %8, label %74, label %9, !dbg !12025

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12026
  %11 = and i32 %10, 12, !dbg !12026
  %12 = icmp eq i32 %11, 4, !dbg !12029
  br i1 %12, label %29, label %13, !dbg !12030

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12031
  %15 = and i32 %14, 12, !dbg !12031
  %16 = icmp eq i32 %15, 8, !dbg !12032
  br i1 %16, label %17, label %21, !dbg !12033

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12034
  %19 = and i32 %18, 4194304, !dbg !12035
  %20 = icmp eq i32 %19, 0, !dbg !12036
  br i1 %20, label %21, label %29, !dbg !12037

21:                                               ; preds = %17, %13
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12038
  %23 = and i32 %22, 12, !dbg !12038
  %24 = icmp eq i32 %23, 12, !dbg !12039
  br i1 %24, label %25, label %37, !dbg !12040

25:                                               ; preds = %21
  %26 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12041
  %27 = and i32 %26, 4194304, !dbg !12042
  %28 = icmp eq i32 %27, 0, !dbg !12043
  br i1 %28, label %37, label %29, !dbg !12044

29:                                               ; preds = %25, %17, %9
  %30 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12045
  %31 = and i32 %30, 131072, !dbg !12045
  %32 = icmp eq i32 %31, 0, !dbg !12045
  br i1 %32, label %74, label %33, !dbg !12048

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12049
  %35 = load i32, i32* %34, align 4, !dbg !12049
  %36 = icmp eq i32 %35, 0, !dbg !12050
  br i1 %36, label %337, label %74, !dbg !12051

37:                                               ; preds = %21, %25
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12052
  %39 = load i32, i32* %38, align 4, !dbg !12052
  switch i32 %39, label %48 [
    i32 65536, label %40
    i32 327680, label %43
  ], !dbg !12056

40:                                               ; preds = %37
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12057
  %42 = or i32 %41, 65536, !dbg !12057
  br label %53, !dbg !12057

43:                                               ; preds = %37
  %44 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12059
  %45 = or i32 %44, 262144, !dbg !12059
  store volatile i32 %45, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12059
  %46 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12059
  %47 = or i32 %46, 65536, !dbg !12059
  br label %53, !dbg !12059

48:                                               ; preds = %37
  %49 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12062
  %50 = and i32 %49, -65537, !dbg !12062
  store volatile i32 %50, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12062
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12062
  %52 = and i32 %51, -262145, !dbg !12062
  br label %53

53:                                               ; preds = %43, %48, %40
  %54 = phi i32 [ %47, %43 ], [ %52, %48 ], [ %42, %40 ]
  store volatile i32 %54, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12064
  %55 = load i32, i32* %38, align 4, !dbg !12065
  %56 = icmp eq i32 %55, 0, !dbg !12067
  %57 = tail call i32 @HAL_GetTick() #25, !dbg !12068
  call void @llvm.dbg.value(metadata i32 %57, metadata !12007, metadata !DIExpression()), !dbg !12017
  call void @llvm.dbg.value(metadata i32 %57, metadata !12007, metadata !DIExpression()), !dbg !12017
  br i1 %56, label %66, label %58, !dbg !12069

58:                                               ; preds = %53, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12070
  %60 = and i32 %59, 131072, !dbg !12072
  %61 = icmp eq i32 %60, 0, !dbg !12072
  br i1 %61, label %62, label %74, !dbg !12073

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #25, !dbg !12074
  %64 = sub i32 %63, %57, !dbg !12077
  %65 = icmp ugt i32 %64, 100, !dbg !12078
  br i1 %65, label %337, label %58, !dbg !12079, !llvm.loop !12080

66:                                               ; preds = %53, %70
  %67 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12082
  %68 = and i32 %67, 131072, !dbg !12082
  %69 = icmp eq i32 %68, 0, !dbg !12082
  br i1 %69, label %74, label %70, !dbg !12084

70:                                               ; preds = %66
  %71 = tail call i32 @HAL_GetTick() #25, !dbg !12085
  %72 = sub i32 %71, %57, !dbg !12088
  %73 = icmp ugt i32 %72, 100, !dbg !12089
  br i1 %73, label %337, label %66, !dbg !12090, !llvm.loop !12091

74:                                               ; preds = %58, %66, %33, %29, %4
  %75 = load i32, i32* %5, align 4, !dbg !12093
  %76 = and i32 %75, 2, !dbg !12095
  %77 = icmp eq i32 %76, 0, !dbg !12096
  br i1 %77, label %137, label %78, !dbg !12097

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12098
  %80 = and i32 %79, 12, !dbg !12098
  %81 = icmp eq i32 %80, 0, !dbg !12101
  br i1 %81, label %98, label %82, !dbg !12102

82:                                               ; preds = %78
  %83 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12103
  %84 = and i32 %83, 12, !dbg !12103
  %85 = icmp eq i32 %84, 8, !dbg !12104
  br i1 %85, label %86, label %90, !dbg !12105

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12106
  %88 = and i32 %87, 4194304, !dbg !12107
  %89 = icmp eq i32 %88, 0, !dbg !12108
  br i1 %89, label %98, label %90, !dbg !12109

90:                                               ; preds = %86, %82
  %91 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12110
  %92 = and i32 %91, 12, !dbg !12110
  %93 = icmp eq i32 %92, 12, !dbg !12111
  br i1 %93, label %94, label %106, !dbg !12112

94:                                               ; preds = %90
  %95 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12113
  %96 = and i32 %95, 4194304, !dbg !12114
  %97 = icmp eq i32 %96, 0, !dbg !12115
  br i1 %97, label %98, label %106, !dbg !12116

98:                                               ; preds = %94, %86, %78
  %99 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12117
  %100 = and i32 %99, 2, !dbg !12117
  %101 = icmp eq i32 %100, 0, !dbg !12117
  br i1 %101, label %130, label %102, !dbg !12120

102:                                              ; preds = %98
  %103 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12121
  %104 = load i32, i32* %103, align 4, !dbg !12121
  %105 = icmp eq i32 %104, 1, !dbg !12122
  br i1 %105, label %130, label %337, !dbg !12123

106:                                              ; preds = %94, %90
  %107 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12124
  %108 = load i32, i32* %107, align 4, !dbg !12124
  %109 = icmp eq i32 %108, 0, !dbg !12127
  br i1 %109, label %120, label %110, !dbg !12128

110:                                              ; preds = %106
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12129
  %111 = tail call i32 @HAL_GetTick() #25, !dbg !12131
  call void @llvm.dbg.value(metadata i32 %111, metadata !12007, metadata !DIExpression()), !dbg !12017
  br label %112, !dbg !12132

112:                                              ; preds = %116, %110
  %113 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12133
  %114 = and i32 %113, 2, !dbg !12134
  %115 = icmp eq i32 %114, 0, !dbg !12134
  br i1 %115, label %116, label %130, !dbg !12132

116:                                              ; preds = %112
  %117 = tail call i32 @HAL_GetTick() #25, !dbg !12135
  %118 = sub i32 %117, %111, !dbg !12138
  %119 = icmp ugt i32 %118, 2, !dbg !12139
  br i1 %119, label %337, label %112, !dbg !12140, !llvm.loop !12141

120:                                              ; preds = %106
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12143
  %121 = tail call i32 @HAL_GetTick() #25, !dbg !12145
  call void @llvm.dbg.value(metadata i32 %121, metadata !12007, metadata !DIExpression()), !dbg !12017
  br label %122, !dbg !12146

122:                                              ; preds = %126, %120
  %123 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12147
  %124 = and i32 %123, 2, !dbg !12147
  %125 = icmp eq i32 %124, 0, !dbg !12147
  br i1 %125, label %137, label %126, !dbg !12146

126:                                              ; preds = %122
  %127 = tail call i32 @HAL_GetTick() #25, !dbg !12148
  %128 = sub i32 %127, %121, !dbg !12151
  %129 = icmp ugt i32 %128, 2, !dbg !12152
  br i1 %129, label %337, label %122, !dbg !12153, !llvm.loop !12154

130:                                              ; preds = %112, %98, %102
  %131 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12156
  %132 = and i32 %131, -249, !dbg !12156
  %133 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12156
  %134 = load i32, i32* %133, align 4, !dbg !12156
  %135 = shl i32 %134, 3, !dbg !12156
  %136 = or i32 %135, %132, !dbg !12156
  store volatile i32 %136, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12156
  br label %137, !dbg !12157

137:                                              ; preds = %122, %130, %74
  %138 = load i32, i32* %5, align 4, !dbg !12157
  %139 = and i32 %138, 8, !dbg !12159
  %140 = icmp eq i32 %139, 0, !dbg !12160
  br i1 %140, label %165, label %141, !dbg !12161

141:                                              ; preds = %137
  %142 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12162
  %143 = load i32, i32* %142, align 4, !dbg !12162
  %144 = icmp eq i32 %143, 0, !dbg !12165
  br i1 %144, label %155, label %145, !dbg !12166

145:                                              ; preds = %141
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12167
  %146 = tail call i32 @HAL_GetTick() #25, !dbg !12169
  call void @llvm.dbg.value(metadata i32 %146, metadata !12007, metadata !DIExpression()), !dbg !12017
  br label %147, !dbg !12170

147:                                              ; preds = %151, %145
  %148 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12171
  %149 = and i32 %148, 2, !dbg !12172
  %150 = icmp eq i32 %149, 0, !dbg !12172
  br i1 %150, label %151, label %165, !dbg !12170

151:                                              ; preds = %147
  %152 = tail call i32 @HAL_GetTick() #25, !dbg !12173
  %153 = sub i32 %152, %146, !dbg !12176
  %154 = icmp ugt i32 %153, 2, !dbg !12177
  br i1 %154, label %337, label %147, !dbg !12178, !llvm.loop !12179

155:                                              ; preds = %141
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12181
  %156 = tail call i32 @HAL_GetTick() #25, !dbg !12183
  call void @llvm.dbg.value(metadata i32 %156, metadata !12007, metadata !DIExpression()), !dbg !12017
  br label %157, !dbg !12184

157:                                              ; preds = %161, %155
  %158 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12185
  %159 = and i32 %158, 2, !dbg !12185
  %160 = icmp eq i32 %159, 0, !dbg !12185
  br i1 %160, label %165, label %161, !dbg !12184

161:                                              ; preds = %157
  %162 = tail call i32 @HAL_GetTick() #25, !dbg !12186
  %163 = sub i32 %162, %156, !dbg !12189
  %164 = icmp ugt i32 %163, 2, !dbg !12190
  br i1 %164, label %337, label %157, !dbg !12191, !llvm.loop !12192

165:                                              ; preds = %147, %157, %137
  %166 = load i32, i32* %5, align 4, !dbg !12194
  %167 = and i32 %166, 4, !dbg !12195
  %168 = icmp eq i32 %167, 0, !dbg !12196
  br i1 %168, label %237, label %169, !dbg !12197

169:                                              ; preds = %165
  call void @llvm.dbg.value(metadata i32 0, metadata !12009, metadata !DIExpression()), !dbg !12198
  %170 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12199
  %171 = and i32 %170, 268435456, !dbg !12199
  %172 = icmp eq i32 %171, 0, !dbg !12199
  br i1 %172, label %173, label %180, !dbg !12200

173:                                              ; preds = %169
  %174 = bitcast i32* %2 to i8*, !dbg !12201
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %174), !dbg !12201
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12013, metadata !DIExpression()), !dbg !12201
  store volatile i32 0, i32* %2, align 4, !dbg !12201
  %175 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12201
  %176 = or i32 %175, 268435456, !dbg !12201
  store volatile i32 %176, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12201
  %177 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12201
  %178 = and i32 %177, 268435456, !dbg !12201
  store volatile i32 %178, i32* %2, align 4, !dbg !12201
  %179 = load volatile i32, i32* %2, align 4, !dbg !12201
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %174), !dbg !12202
  call void @llvm.dbg.value(metadata i32 1, metadata !12009, metadata !DIExpression()), !dbg !12198
  br label %180, !dbg !12203

180:                                              ; preds = %173, %169
  call void @llvm.dbg.value(metadata i32 undef, metadata !12009, metadata !DIExpression()), !dbg !12198
  %181 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12204
  %182 = and i32 %181, 256, !dbg !12204
  %183 = icmp eq i32 %182, 0, !dbg !12204
  br i1 %183, label %184, label %196, !dbg !12206

184:                                              ; preds = %180
  %185 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12207
  %186 = or i32 %185, 256, !dbg !12207
  store volatile i32 %186, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12207
  %187 = tail call i32 @HAL_GetTick() #25, !dbg !12209
  call void @llvm.dbg.value(metadata i32 %187, metadata !12007, metadata !DIExpression()), !dbg !12017
  br label %188, !dbg !12210

188:                                              ; preds = %192, %184
  %189 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12211
  %190 = and i32 %189, 256, !dbg !12211
  %191 = icmp eq i32 %190, 0, !dbg !12211
  br i1 %191, label %192, label %196, !dbg !12210

192:                                              ; preds = %188
  %193 = tail call i32 @HAL_GetTick() #25, !dbg !12212
  %194 = sub i32 %193, %187, !dbg !12215
  %195 = icmp ugt i32 %194, 2, !dbg !12216
  br i1 %195, label %337, label %188, !dbg !12217, !llvm.loop !12218

196:                                              ; preds = %188, %180
  %197 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12220
  %198 = load i32, i32* %197, align 4, !dbg !12220
  switch i32 %198, label %207 [
    i32 1, label %199
    i32 5, label %202
  ], !dbg !12223

199:                                              ; preds = %196
  %200 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12224
  %201 = or i32 %200, 1, !dbg !12224
  br label %212, !dbg !12224

202:                                              ; preds = %196
  %203 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12226
  %204 = or i32 %203, 4, !dbg !12226
  store volatile i32 %204, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12226
  %205 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12226
  %206 = or i32 %205, 1, !dbg !12226
  br label %212, !dbg !12226

207:                                              ; preds = %196
  %208 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12229
  %209 = and i32 %208, -2, !dbg !12229
  store volatile i32 %209, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12229
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12229
  %211 = and i32 %210, -5, !dbg !12229
  br label %212

212:                                              ; preds = %202, %207, %199
  %213 = phi i32 [ %206, %202 ], [ %211, %207 ], [ %201, %199 ]
  store volatile i32 %213, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12231
  %214 = load i32, i32* %197, align 4, !dbg !12232
  %215 = icmp eq i32 %214, 0, !dbg !12234
  %216 = tail call i32 @HAL_GetTick() #25, !dbg !12235
  call void @llvm.dbg.value(metadata i32 %216, metadata !12007, metadata !DIExpression()), !dbg !12017
  call void @llvm.dbg.value(metadata i32 %216, metadata !12007, metadata !DIExpression()), !dbg !12017
  br i1 %215, label %225, label %217, !dbg !12236

217:                                              ; preds = %212, %221
  %218 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12237
  %219 = and i32 %218, 2, !dbg !12239
  %220 = icmp eq i32 %219, 0, !dbg !12239
  br i1 %220, label %221, label %233, !dbg !12240

221:                                              ; preds = %217
  %222 = tail call i32 @HAL_GetTick() #25, !dbg !12241
  %223 = sub i32 %222, %216, !dbg !12244
  %224 = icmp ugt i32 %223, 5000, !dbg !12245
  br i1 %224, label %337, label %217, !dbg !12246, !llvm.loop !12247

225:                                              ; preds = %212, %229
  %226 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12249
  %227 = and i32 %226, 2, !dbg !12249
  %228 = icmp eq i32 %227, 0, !dbg !12249
  br i1 %228, label %233, label %229, !dbg !12251

229:                                              ; preds = %225
  %230 = tail call i32 @HAL_GetTick() #25, !dbg !12252
  %231 = sub i32 %230, %216, !dbg !12255
  %232 = icmp ugt i32 %231, 5000, !dbg !12256
  br i1 %232, label %337, label %225, !dbg !12257, !llvm.loop !12258

233:                                              ; preds = %217, %225
  br i1 %172, label %234, label %237, !dbg !12260

234:                                              ; preds = %233
  %235 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12261
  %236 = and i32 %235, -268435457, !dbg !12261
  store volatile i32 %236, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12261
  br label %237, !dbg !12264

237:                                              ; preds = %234, %233, %165
  %238 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12265
  %239 = load i32, i32* %238, align 4, !dbg !12265
  %240 = icmp eq i32 %239, 0, !dbg !12267
  br i1 %240, label %336, label %241, !dbg !12268

241:                                              ; preds = %237
  %242 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12269
  %243 = and i32 %242, 12, !dbg !12269
  %244 = icmp eq i32 %243, 8, !dbg !12272
  br i1 %244, label %297, label %245, !dbg !12273

245:                                              ; preds = %241
  %246 = icmp eq i32 %239, 2, !dbg !12274
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12277
  %247 = tail call i32 @HAL_GetTick() #25, !dbg !12277
  call void @llvm.dbg.value(metadata i32 %247, metadata !12007, metadata !DIExpression()), !dbg !12017
  call void @llvm.dbg.value(metadata i32 %247, metadata !12007, metadata !DIExpression()), !dbg !12017
  br i1 %246, label %248, label %289, !dbg !12278

248:                                              ; preds = %245, %252
  %249 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12279
  %250 = and i32 %249, 33554432, !dbg !12279
  %251 = icmp eq i32 %250, 0, !dbg !12279
  br i1 %251, label %256, label %252, !dbg !12281

252:                                              ; preds = %248
  %253 = tail call i32 @HAL_GetTick() #25, !dbg !12282
  %254 = sub i32 %253, %247, !dbg !12285
  %255 = icmp ugt i32 %254, 2, !dbg !12286
  br i1 %255, label %337, label %248, !dbg !12287, !llvm.loop !12288

256:                                              ; preds = %248
  %257 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12290
  %258 = load i32, i32* %257, align 4, !dbg !12290
  %259 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12290
  %260 = load i32, i32* %259, align 4, !dbg !12290
  %261 = or i32 %260, %258, !dbg !12290
  %262 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12290
  %263 = load i32, i32* %262, align 4, !dbg !12290
  %264 = shl i32 %263, 6, !dbg !12290
  %265 = or i32 %261, %264, !dbg !12290
  %266 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12290
  %267 = load i32, i32* %266, align 4, !dbg !12290
  %268 = shl i32 %267, 15, !dbg !12290
  %269 = add i32 %268, -65536, !dbg !12290
  %270 = and i32 %269, -65536, !dbg !12290
  %271 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12290
  %272 = load i32, i32* %271, align 4, !dbg !12290
  %273 = shl i32 %272, 24, !dbg !12290
  %274 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !12290
  %275 = load i32, i32* %274, align 4, !dbg !12290
  %276 = shl i32 %275, 28, !dbg !12290
  %277 = or i32 %265, %273, !dbg !12290
  %278 = or i32 %277, %270, !dbg !12290
  %279 = or i32 %278, %276, !dbg !12290
  store volatile i32 %279, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12290
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12291
  %280 = tail call i32 @HAL_GetTick() #25, !dbg !12292
  call void @llvm.dbg.value(metadata i32 %280, metadata !12007, metadata !DIExpression()), !dbg !12017
  br label %281, !dbg !12293

281:                                              ; preds = %285, %256
  %282 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12294
  %283 = and i32 %282, 33554432, !dbg !12295
  %284 = icmp eq i32 %283, 0, !dbg !12295
  br i1 %284, label %285, label %336, !dbg !12293

285:                                              ; preds = %281
  %286 = tail call i32 @HAL_GetTick() #25, !dbg !12296
  %287 = sub i32 %286, %280, !dbg !12299
  %288 = icmp ugt i32 %287, 2, !dbg !12300
  br i1 %288, label %337, label %281, !dbg !12301, !llvm.loop !12302

289:                                              ; preds = %245, %293
  %290 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12304
  %291 = and i32 %290, 33554432, !dbg !12304
  %292 = icmp eq i32 %291, 0, !dbg !12304
  br i1 %292, label %336, label %293, !dbg !12306

293:                                              ; preds = %289
  %294 = tail call i32 @HAL_GetTick() #25, !dbg !12307
  %295 = sub i32 %294, %247, !dbg !12310
  %296 = icmp ugt i32 %295, 2, !dbg !12311
  br i1 %296, label %337, label %289, !dbg !12312, !llvm.loop !12313

297:                                              ; preds = %241
  %298 = icmp eq i32 %239, 1, !dbg !12315
  br i1 %298, label %337, label %299, !dbg !12318

299:                                              ; preds = %297
  %300 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12319
  call void @llvm.dbg.value(metadata i32 %300, metadata !12008, metadata !DIExpression()), !dbg !12017
  %301 = and i32 %300, 4194304, !dbg !12321
  %302 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12323
  %303 = load i32, i32* %302, align 4, !dbg !12323
  %304 = icmp eq i32 %301, %303, !dbg !12324
  br i1 %304, label %305, label %337, !dbg !12325

305:                                              ; preds = %299
  %306 = and i32 %300, 63, !dbg !12326
  %307 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12327
  %308 = load i32, i32* %307, align 4, !dbg !12327
  %309 = icmp eq i32 %306, %308, !dbg !12328
  br i1 %309, label %310, label %337, !dbg !12329

310:                                              ; preds = %305
  %311 = and i32 %300, 32704, !dbg !12330
  %312 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12331
  %313 = load i32, i32* %312, align 4, !dbg !12331
  %314 = shl i32 %313, 6, !dbg !12332
  %315 = icmp eq i32 %311, %314, !dbg !12333
  br i1 %315, label %316, label %337, !dbg !12334

316:                                              ; preds = %310
  %317 = and i32 %300, 196608, !dbg !12335
  %318 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12336
  %319 = load i32, i32* %318, align 4, !dbg !12336
  %320 = shl i32 %319, 15, !dbg !12337
  %321 = add i32 %320, -65536, !dbg !12337
  %322 = and i32 %321, -65536, !dbg !12337
  %323 = icmp eq i32 %317, %322, !dbg !12338
  br i1 %323, label %324, label %337, !dbg !12339

324:                                              ; preds = %316
  %325 = and i32 %300, 251658240, !dbg !12340
  %326 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12341
  %327 = load i32, i32* %326, align 4, !dbg !12341
  %328 = shl i32 %327, 24, !dbg !12342
  %329 = icmp eq i32 %325, %328, !dbg !12343
  br i1 %329, label %330, label %337, !dbg !12344

330:                                              ; preds = %324
  %331 = and i32 %300, 1879048192, !dbg !12345
  %332 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !12346
  %333 = load i32, i32* %332, align 4, !dbg !12346
  %334 = shl i32 %333, 28, !dbg !12347
  %335 = icmp eq i32 %331, %334, !dbg !12348
  br i1 %335, label %336, label %337, !dbg !12349

336:                                              ; preds = %289, %281, %330, %237
  br label %337, !dbg !12350

337:                                              ; preds = %62, %70, %116, %126, %151, %161, %192, %221, %229, %293, %252, %285, %299, %305, %310, %316, %324, %330, %297, %102, %33, %1, %336
  %338 = phi i32 [ 0, %336 ], [ 1, %1 ], [ 1, %33 ], [ 1, %102 ], [ 1, %297 ], [ 1, %330 ], [ 1, %324 ], [ 1, %316 ], [ 1, %310 ], [ 1, %305 ], [ 1, %299 ], [ 3, %285 ], [ 3, %252 ], [ 3, %293 ], [ 3, %229 ], [ 3, %221 ], [ 3, %192 ], [ 3, %161 ], [ 3, %151 ], [ 3, %126 ], [ 3, %116 ], [ 3, %70 ], [ 3, %62 ], !dbg !12017
  ret i32 %338, !dbg !12351
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* nocapture noundef writeonly %0) local_unnamed_addr #15 !dbg !12352 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12356, metadata !DIExpression()), !dbg !12357
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12358
  store i32 15, i32* %2, align 4, !dbg !12359
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12360
  %4 = and i32 %3, 262144, !dbg !12362
  %5 = icmp eq i32 %4, 0, !dbg !12363
  br i1 %5, label %8, label %6, !dbg !12364

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12365
  store i32 327680, i32* %7, align 4, !dbg !12367
  br label %15, !dbg !12368

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12369
  %10 = and i32 %9, 65536, !dbg !12371
  %11 = icmp eq i32 %10, 0, !dbg !12372
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12373
  br i1 %11, label %14, label %13, !dbg !12374

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !12375
  br label %15, !dbg !12377

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !12378
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12380
  %17 = and i32 %16, 1, !dbg !12382
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12383
  store i32 %17, i32* %18, align 4, !dbg !12385
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12386
  %20 = lshr i32 %19, 3, !dbg !12387
  %21 = and i32 %20, 31, !dbg !12387
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12388
  store i32 %21, i32* %22, align 4, !dbg !12389
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12390
  %24 = and i32 %23, 4, !dbg !12392
  %25 = icmp eq i32 %24, 0, !dbg !12393
  br i1 %25, label %28, label %26, !dbg !12394

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12395
  store i32 5, i32* %27, align 4, !dbg !12397
  br label %35, !dbg !12398

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12399
  %30 = and i32 %29, 1, !dbg !12401
  %31 = icmp eq i32 %30, 0, !dbg !12402
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12403
  br i1 %31, label %34, label %33, !dbg !12404

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !12405
  br label %35, !dbg !12407

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !12408
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12410
  %37 = and i32 %36, 1, !dbg !12412
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12413
  store i32 %37, i32* %38, align 4, !dbg !12415
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12416
  %40 = and i32 %39, 16777216, !dbg !12418
  %41 = icmp eq i32 %40, 0, !dbg !12419
  %42 = select i1 %41, i32 1, i32 2, !dbg !12420
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12421
  store i32 %42, i32* %43, align 4, !dbg !12423
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12424
  %45 = and i32 %44, 4194304, !dbg !12425
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12426
  store i32 %45, i32* %46, align 4, !dbg !12427
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12428
  %48 = and i32 %47, 63, !dbg !12429
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12430
  store i32 %48, i32* %49, align 4, !dbg !12431
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12432
  %51 = lshr i32 %50, 6, !dbg !12433
  %52 = and i32 %51, 511, !dbg !12433
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12434
  store i32 %52, i32* %53, align 4, !dbg !12435
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12436
  %55 = shl i32 %54, 1, !dbg !12437
  %56 = and i32 %55, 393216, !dbg !12437
  %57 = add nuw nsw i32 %56, 131072, !dbg !12437
  %58 = lshr exact i32 %57, 16, !dbg !12438
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12439
  store i32 %58, i32* %59, align 4, !dbg !12440
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12441
  %61 = lshr i32 %60, 24, !dbg !12442
  %62 = and i32 %61, 15, !dbg !12442
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12443
  store i32 %62, i32* %63, align 4, !dbg !12444
  %64 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12445
  %65 = lshr i32 %64, 28, !dbg !12446
  %66 = and i32 %65, 7, !dbg !12446
  %67 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !12447
  store i32 %66, i32* %67, align 4, !dbg !12448
  ret void, !dbg !12449
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #14 !dbg !12450 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12453, metadata !DIExpression()), !dbg !12454
  tail call fastcc void @LL_InitTick(i32 noundef %0) #24, !dbg !12455
  ret void, !dbg !12456
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #14 !dbg !12457 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12460, metadata !DIExpression()), !dbg !12462
  call void @llvm.dbg.value(metadata i32 1000, metadata !12461, metadata !DIExpression()), !dbg !12462
  %2 = udiv i32 %0, 1000, !dbg !12463
  %3 = add nsw i32 %2, -1, !dbg !12464
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12465
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12466
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12467
  ret void, !dbg !12468
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #19 !dbg !12469 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12471, metadata !DIExpression()), !dbg !12473
  %3 = bitcast i32* %2 to i8*, !dbg !12474
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12474
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12472, metadata !DIExpression()), !dbg !12475
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12476
  store volatile i32 %4, i32* %2, align 4, !dbg !12475
  %5 = load volatile i32, i32* %2, align 4, !dbg !12477
  %6 = icmp eq i32 %0, -1, !dbg !12478
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12471, metadata !DIExpression()), !dbg !12473
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !12473
  call void @llvm.dbg.value(metadata i32 %8, metadata !12471, metadata !DIExpression()), !dbg !12473
  br label %9, !dbg !12480

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12471, metadata !DIExpression()), !dbg !12473
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12481
  call void @llvm.dbg.value(metadata i32 undef, metadata !12471, metadata !DIExpression()), !dbg !12473
  %12 = shl i32 %11, 15, !dbg !12473
  %13 = ashr i32 %12, 31, !dbg !12473
  %14 = add i32 %13, %10, !dbg !12473
  call void @llvm.dbg.value(metadata i32 %14, metadata !12471, metadata !DIExpression()), !dbg !12473
  %15 = icmp eq i32 %14, 0, !dbg !12480
  br i1 %15, label %16, label %9, !dbg !12480

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12484
  ret void, !dbg !12484
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #7 !dbg !12485 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12487, metadata !DIExpression()), !dbg !12488
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !12489
  ret void, !dbg !12490
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #14 !dbg !12491 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12496, metadata !DIExpression()), !dbg !12501
  call void @llvm.dbg.value(metadata i32 0, metadata !12499, metadata !DIExpression()), !dbg !12501
  call void @llvm.dbg.value(metadata i32 0, metadata !12500, metadata !DIExpression()), !dbg !12501
  %2 = icmp eq i32 %0, 0, !dbg !12502
  br i1 %2, label %72, label %3, !dbg !12504

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !12505
  %5 = icmp eq i32 %4, 49152, !dbg !12508
  br i1 %5, label %6, label %21, !dbg !12509

6:                                                ; preds = %3
  %7 = icmp ult i32 %0, 150000001, !dbg !12510
  %8 = select i1 %7, i32 0, i32 5, !dbg !12513
  call void @llvm.dbg.value(metadata i32 %8, metadata !12499, metadata !DIExpression()), !dbg !12501
  %9 = add i32 %0, -120000001, !dbg !12514
  %10 = icmp ult i32 %9, 30000000, !dbg !12514
  %11 = select i1 %10, i32 4, i32 %8, !dbg !12514
  call void @llvm.dbg.value(metadata i32 %11, metadata !12499, metadata !DIExpression()), !dbg !12501
  %12 = icmp ult i32 %9, -30000000, !dbg !12516
  %13 = select i1 %12, i32 %11, i32 3, !dbg !12516
  call void @llvm.dbg.value(metadata i32 %13, metadata !12499, metadata !DIExpression()), !dbg !12501
  %14 = icmp ugt i32 %0, 60000000, !dbg !12518
  %15 = icmp eq i32 %13, 0
  %16 = and i1 %14, %15, !dbg !12520
  br i1 %16, label %21, label %17, !dbg !12520

17:                                               ; preds = %6
  %18 = icmp ugt i32 %0, 30000000, !dbg !12521
  %19 = and i1 %18, %15, !dbg !12524
  %20 = select i1 %19, i32 1, i32 %13, !dbg !12524
  br label %21, !dbg !12524

21:                                               ; preds = %17, %6, %3
  %22 = phi i32 [ 0, %3 ], [ 2, %6 ], [ %20, %17 ], !dbg !12501
  call void @llvm.dbg.value(metadata i32 %22, metadata !12499, metadata !DIExpression()), !dbg !12501
  %23 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !12525
  %24 = icmp eq i32 %23, 32768, !dbg !12527
  br i1 %24, label %25, label %45, !dbg !12528

25:                                               ; preds = %21
  %26 = icmp ugt i32 %0, 150000000, !dbg !12529
  %27 = icmp eq i32 %22, 0
  %28 = and i1 %26, %27, !dbg !12532
  %29 = select i1 %28, i32 5, i32 %22, !dbg !12532
  call void @llvm.dbg.value(metadata i32 %29, metadata !12499, metadata !DIExpression()), !dbg !12501
  %30 = icmp ugt i32 %0, 12000000, !dbg !12533
  %31 = icmp eq i32 %29, 0
  %32 = and i1 %30, %31, !dbg !12535
  %33 = select i1 %32, i32 4, i32 %29, !dbg !12535
  call void @llvm.dbg.value(metadata i32 %33, metadata !12499, metadata !DIExpression()), !dbg !12501
  %34 = icmp ugt i32 %0, 90000000, !dbg !12536
  %35 = icmp eq i32 %33, 0
  %36 = and i1 %34, %35, !dbg !12538
  %37 = select i1 %36, i32 3, i32 %33, !dbg !12538
  call void @llvm.dbg.value(metadata i32 %37, metadata !12499, metadata !DIExpression()), !dbg !12501
  %38 = icmp ugt i32 %0, 60000000, !dbg !12539
  %39 = icmp eq i32 %37, 0
  %40 = select i1 %38, i1 %39, i1 false, !dbg !12541
  br i1 %40, label %45, label %41, !dbg !12541

41:                                               ; preds = %25
  %42 = icmp ugt i32 %0, 30000000, !dbg !12542
  %43 = select i1 %42, i1 %39, i1 false, !dbg !12545
  %44 = select i1 %43, i32 1, i32 %37, !dbg !12545
  br label %45, !dbg !12545

45:                                               ; preds = %41, %25, %21
  %46 = phi i32 [ %22, %21 ], [ 2, %25 ], [ %44, %41 ], !dbg !12546
  call void @llvm.dbg.value(metadata i32 %46, metadata !12499, metadata !DIExpression()), !dbg !12501
  %47 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !12547
  %48 = icmp eq i32 %47, 16384, !dbg !12549
  br i1 %48, label %49, label %61, !dbg !12550

49:                                               ; preds = %45
  %50 = icmp ugt i32 %0, 90000000, !dbg !12551
  %51 = icmp eq i32 %46, 0
  %52 = select i1 %50, i1 %51, i1 false, !dbg !12554
  %53 = select i1 %52, i32 3, i32 %46, !dbg !12554
  call void @llvm.dbg.value(metadata i32 %53, metadata !12499, metadata !DIExpression()), !dbg !12501
  %54 = icmp ugt i32 %0, 60000000, !dbg !12555
  %55 = icmp eq i32 %53, 0
  %56 = select i1 %54, i1 %55, i1 false, !dbg !12557
  br i1 %56, label %61, label %57, !dbg !12557

57:                                               ; preds = %49
  %58 = icmp ugt i32 %0, 30000000, !dbg !12558
  %59 = select i1 %58, i1 %55, i1 false, !dbg !12561
  %60 = select i1 %59, i32 1, i32 %53, !dbg !12561
  br label %61, !dbg !12561

61:                                               ; preds = %57, %49, %45
  %62 = phi i32 [ %46, %45 ], [ 2, %49 ], [ %60, %57 ], !dbg !12546
  call void @llvm.dbg.value(metadata i32 %62, metadata !12499, metadata !DIExpression()), !dbg !12501
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %62) #24, !dbg !12562
  call void @llvm.dbg.value(metadata i32 2, metadata !12497, metadata !DIExpression()), !dbg !12501
  br label %63, !dbg !12563

63:                                               ; preds = %63, %61
  %64 = phi i32 [ 2, %61 ], [ %66, %63 ], !dbg !12546
  call void @llvm.dbg.value(metadata i32 %64, metadata !12497, metadata !DIExpression()), !dbg !12501
  %65 = tail call fastcc i32 @LL_FLASH_GetLatency() #24, !dbg !12564
  call void @llvm.dbg.value(metadata i32 %65, metadata !12498, metadata !DIExpression()), !dbg !12501
  %66 = add nsw i32 %64, -1, !dbg !12566
  call void @llvm.dbg.value(metadata i32 %66, metadata !12497, metadata !DIExpression()), !dbg !12501
  %67 = icmp ne i32 %65, %62, !dbg !12567
  %68 = icmp ne i32 %66, 0, !dbg !12568
  %69 = select i1 %67, i1 %68, i1 false, !dbg !12568
  br i1 %69, label %63, label %70, !dbg !12569, !llvm.loop !12570

70:                                               ; preds = %63
  %71 = zext i1 %67 to i32
  br label %72

72:                                               ; preds = %70, %1
  %73 = phi i32 [ 1, %1 ], [ %71, %70 ], !dbg !12572
  call void @llvm.dbg.value(metadata i32 %73, metadata !12500, metadata !DIExpression()), !dbg !12501
  ret i32 %73, !dbg !12573
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #15 !dbg !12574 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12576
  %2 = and i32 %1, 49152, !dbg !12576
  ret i32 %2, !dbg !12577
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #14 !dbg !12578 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12580, metadata !DIExpression()), !dbg !12581
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12582
  %3 = and i32 %2, -16, !dbg !12582
  %4 = or i32 %3, %0, !dbg !12582
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12582
  ret void, !dbg !12583
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #15 !dbg !12584 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12585
  %2 = and i32 %1, 15, !dbg !12585
  ret i32 %2, !dbg !12586
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !12587 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !12605, metadata !DIExpression()), !dbg !12609
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12606, metadata !DIExpression()), !dbg !12609
  call void @llvm.dbg.value(metadata i32 0, metadata !12607, metadata !DIExpression()), !dbg !12609
  call void @llvm.dbg.value(metadata i32 0, metadata !12608, metadata !DIExpression()), !dbg !12609
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !12610
  %4 = icmp eq i32 %3, 0, !dbg !12612
  br i1 %4, label %5, label %21, !dbg !12613

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #24, !dbg !12614
  call void @llvm.dbg.value(metadata i32 %6, metadata !12608, metadata !DIExpression()), !dbg !12609
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.166() #24, !dbg !12616
  %8 = icmp eq i32 %7, 1, !dbg !12618
  br i1 %8, label %13, label %9, !dbg !12619

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.167() #24, !dbg !12620
  br label %10, !dbg !12622

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.166() #24, !dbg !12623
  %12 = icmp eq i32 %11, 1, !dbg !12624
  br i1 %12, label %13, label %10, !dbg !12622, !llvm.loop !12625

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !12627
  %15 = load i32, i32* %14, align 4, !dbg !12627
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !12628
  %17 = load i32, i32* %16, align 4, !dbg !12628
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !12629
  %19 = load i32, i32* %18, align 4, !dbg !12629
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.168(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #24, !dbg !12630
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #24, !dbg !12631
  call void @llvm.dbg.value(metadata i32 %20, metadata !12607, metadata !DIExpression()), !dbg !12609
  br label %21, !dbg !12632

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !12633
  call void @llvm.dbg.value(metadata i32 %22, metadata !12607, metadata !DIExpression()), !dbg !12609
  ret i32 %22, !dbg !12634
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #15 !dbg !12635 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12639, metadata !DIExpression()), !dbg !12640
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.170() #24, !dbg !12641
  %2 = icmp ne i32 %1, 0, !dbg !12643
  call void @llvm.dbg.value(metadata i1 %2, metadata !12639, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12640
  %3 = tail call fastcc i32 @LL_RCC_PLLSAI_IsReady() #24, !dbg !12644
  %4 = icmp ne i32 %3, 0, !dbg !12646
  call void @llvm.dbg.value(metadata i1 undef, metadata !12639, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12640
  %5 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #24, !dbg !12647
  %6 = icmp ne i32 %5, 0, !dbg !12649
  %7 = select i1 %6, i1 true, i1 %4, !dbg !12650
  %8 = select i1 %7, i1 true, i1 %2, !dbg !12650
  %9 = zext i1 %8 to i32, !dbg !12650
  call void @llvm.dbg.value(metadata i32 %9, metadata !12639, metadata !DIExpression()), !dbg !12640
  ret i32 %9, !dbg !12651
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #8 !dbg !12652 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12656, metadata !DIExpression()), !dbg !12659
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12657, metadata !DIExpression()), !dbg !12659
  call void @llvm.dbg.value(metadata i32 0, metadata !12658, metadata !DIExpression()), !dbg !12659
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !12660
  %4 = load i32, i32* %3, align 4, !dbg !12660
  %5 = and i32 %4, 63, !dbg !12661
  %6 = udiv i32 %0, %5, !dbg !12662
  call void @llvm.dbg.value(metadata i32 %6, metadata !12658, metadata !DIExpression()), !dbg !12659
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !12663
  %8 = load i32, i32* %7, align 4, !dbg !12663
  %9 = and i32 %8, 511, !dbg !12664
  %10 = mul i32 %9, %6, !dbg !12665
  call void @llvm.dbg.value(metadata i32 %10, metadata !12658, metadata !DIExpression()), !dbg !12659
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !12666
  %12 = load i32, i32* %11, align 4, !dbg !12666
  %13 = lshr i32 %12, 15, !dbg !12667
  %14 = and i32 %13, 131070, !dbg !12667
  %15 = add nuw nsw i32 %14, 2, !dbg !12667
  %16 = udiv i32 %10, %15, !dbg !12668
  call void @llvm.dbg.value(metadata i32 %16, metadata !12658, metadata !DIExpression()), !dbg !12659
  ret i32 %16, !dbg !12669
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.166() unnamed_addr #15 !dbg !12670 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12671
  %2 = lshr i32 %1, 1, !dbg !12672
  %3 = and i32 %2, 1, !dbg !12672
  ret i32 %3, !dbg !12673
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.167() unnamed_addr #14 !dbg !12674 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12675
  %2 = or i32 %1, 1, !dbg !12675
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12675
  ret void, !dbg !12676
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.168(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #14 !dbg !12677 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12679, metadata !DIExpression()), !dbg !12683
  call void @llvm.dbg.value(metadata i32 %1, metadata !12680, metadata !DIExpression()), !dbg !12683
  call void @llvm.dbg.value(metadata i32 %2, metadata !12681, metadata !DIExpression()), !dbg !12683
  call void @llvm.dbg.value(metadata i32 %3, metadata !12682, metadata !DIExpression()), !dbg !12683
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12684
  %6 = and i32 %5, -4227072, !dbg !12684
  %7 = or i32 %1, %0, !dbg !12684
  %8 = shl i32 %2, 6, !dbg !12684
  %9 = or i32 %7, %8, !dbg !12684
  %10 = or i32 %9, %6, !dbg !12684
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12684
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12685
  %12 = and i32 %11, -196609, !dbg !12685
  %13 = or i32 %12, %3, !dbg !12685
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12685
  %14 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12686
  %15 = and i32 %14, -1879048193, !dbg !12686
  %16 = or i32 %15, %3, !dbg !12686
  store volatile i32 %16, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12686
  ret void, !dbg !12687
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #14 !dbg !12688 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12692, metadata !DIExpression()), !dbg !12696
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12693, metadata !DIExpression()), !dbg !12696
  call void @llvm.dbg.value(metadata i32 0, metadata !12694, metadata !DIExpression()), !dbg !12696
  call void @llvm.dbg.value(metadata i32 0, metadata !12695, metadata !DIExpression()), !dbg !12696
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !12697
  %4 = load i32, i32* %3, align 4, !dbg !12697
  %5 = lshr i32 %4, 4, !dbg !12697
  %6 = and i32 %5, 15, !dbg !12697
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !12697
  %8 = load i8, i8* %7, align 1, !dbg !12697
  %9 = zext i8 %8 to i32, !dbg !12697
  %10 = lshr i32 %0, %9, !dbg !12697
  call void @llvm.dbg.value(metadata i32 %10, metadata !12695, metadata !DIExpression()), !dbg !12696
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !12698
  %12 = icmp ult i32 %11, %10, !dbg !12700
  br i1 %12, label %13, label %16, !dbg !12701

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !12702
  call void @llvm.dbg.value(metadata i32 %14, metadata !12694, metadata !DIExpression()), !dbg !12696
  %15 = icmp eq i32 %14, 0, !dbg !12704
  br i1 %15, label %16, label %30, !dbg !12706

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.169() #24, !dbg !12707
  br label %17, !dbg !12709

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.170() #24, !dbg !12710
  %19 = icmp eq i32 %18, 1, !dbg !12711
  br i1 %19, label %20, label %17, !dbg !12709, !llvm.loop !12712

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !12714
  tail call fastcc void @LL_RCC_SetAHBPrescaler.171(i32 noundef %21) #24, !dbg !12715
  tail call fastcc void @LL_RCC_SetSysClkSource.172() #24, !dbg !12716
  br label %22, !dbg !12717

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.173() #24, !dbg !12718
  %24 = icmp eq i32 %23, 8, !dbg !12719
  br i1 %24, label %25, label %22, !dbg !12717, !llvm.loop !12720

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !12722
  %27 = load i32, i32* %26, align 4, !dbg !12722
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.174(i32 noundef %27) #24, !dbg !12723
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !12724
  %29 = load i32, i32* %28, align 4, !dbg !12724
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.175(i32 noundef %29) #24, !dbg !12725
  br label %30, !dbg !12726

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !12727
  %33 = icmp ugt i32 %32, %10, !dbg !12729
  br i1 %33, label %34, label %36, !dbg !12730

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !12731
  call void @llvm.dbg.value(metadata i32 %35, metadata !12694, metadata !DIExpression()), !dbg !12696
  br label %36, !dbg !12733

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !12696
  call void @llvm.dbg.value(metadata i32 %37, metadata !12694, metadata !DIExpression()), !dbg !12696
  %38 = icmp eq i32 %37, 0, !dbg !12734
  br i1 %38, label %39, label %40, !dbg !12736

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #24, !dbg !12737
  br label %40, !dbg !12739

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !12740
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.169() unnamed_addr #14 !dbg !12741 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12742
  %2 = or i32 %1, 16777216, !dbg !12742
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12742
  ret void, !dbg !12743
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.170() unnamed_addr #15 !dbg !12744 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12745
  %2 = lshr i32 %1, 25, !dbg !12746
  %3 = and i32 %2, 1, !dbg !12746
  ret i32 %3, !dbg !12747
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.171(i32 noundef %0) unnamed_addr #14 !dbg !12748 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12750, metadata !DIExpression()), !dbg !12751
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12752
  %3 = and i32 %2, -241, !dbg !12752
  %4 = or i32 %3, %0, !dbg !12752
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12752
  ret void, !dbg !12753
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.172() unnamed_addr #14 !dbg !12754 {
  call void @llvm.dbg.value(metadata i32 2, metadata !12756, metadata !DIExpression()), !dbg !12757
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12758
  %2 = and i32 %1, -4, !dbg !12758
  %3 = or i32 %2, 2, !dbg !12758
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12758
  ret void, !dbg !12759
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.173() unnamed_addr #15 !dbg !12760 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12761
  %2 = and i32 %1, 12, !dbg !12761
  ret i32 %2, !dbg !12762
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.174(i32 noundef %0) unnamed_addr #14 !dbg !12763 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12765, metadata !DIExpression()), !dbg !12766
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12767
  %3 = and i32 %2, -7169, !dbg !12767
  %4 = or i32 %3, %0, !dbg !12767
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12767
  ret void, !dbg !12768
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.175(i32 noundef %0) unnamed_addr #14 !dbg !12769 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12771, metadata !DIExpression()), !dbg !12772
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12773
  %3 = and i32 %2, -57345, !dbg !12773
  %4 = or i32 %3, %0, !dbg !12773
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12773
  ret void, !dbg !12774
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLSAI_IsReady() unnamed_addr #15 !dbg !12775 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12776
  %2 = lshr i32 %1, 29, !dbg !12777
  %3 = and i32 %2, 1, !dbg !12777
  ret i32 %3, !dbg !12778
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #15 !dbg !12779 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12780
  %2 = lshr i32 %1, 27, !dbg !12781
  %3 = and i32 %2, 1, !dbg !12781
  ret i32 %3, !dbg !12782
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #14 !dbg !12783 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12787, metadata !DIExpression()), !dbg !12793
  call void @llvm.dbg.value(metadata i32 %1, metadata !12788, metadata !DIExpression()), !dbg !12793
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !12789, metadata !DIExpression()), !dbg !12793
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !12790, metadata !DIExpression()), !dbg !12793
  call void @llvm.dbg.value(metadata i32 0, metadata !12791, metadata !DIExpression()), !dbg !12793
  call void @llvm.dbg.value(metadata i32 0, metadata !12792, metadata !DIExpression()), !dbg !12793
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !12794
  %6 = icmp eq i32 %5, 0, !dbg !12796
  br i1 %6, label %7, label %27, !dbg !12797

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #24, !dbg !12798
  call void @llvm.dbg.value(metadata i32 %8, metadata !12792, metadata !DIExpression()), !dbg !12793
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.176() #24, !dbg !12800
  %10 = icmp eq i32 %9, 1, !dbg !12802
  br i1 %10, label %19, label %11, !dbg !12803

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !12804
  br i1 %12, label %13, label %14, !dbg !12807

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #24, !dbg !12808
  br label %15, !dbg !12810

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.177() #24, !dbg !12811
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.178() #24, !dbg !12813
  br label %16, !dbg !12814

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.176() #24, !dbg !12815
  %18 = icmp eq i32 %17, 1, !dbg !12816
  br i1 %18, label %19, label %16, !dbg !12814, !llvm.loop !12817

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !12819
  %21 = load i32, i32* %20, align 4, !dbg !12819
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !12820
  %23 = load i32, i32* %22, align 4, !dbg !12820
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !12821
  %25 = load i32, i32* %24, align 4, !dbg !12821
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.168(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #24, !dbg !12822
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #24, !dbg !12823
  call void @llvm.dbg.value(metadata i32 %26, metadata !12791, metadata !DIExpression()), !dbg !12793
  br label %27, !dbg !12824

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !12825
  call void @llvm.dbg.value(metadata i32 %28, metadata !12791, metadata !DIExpression()), !dbg !12793
  ret i32 %28, !dbg !12826
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.176() unnamed_addr #15 !dbg !12827 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12828
  %2 = lshr i32 %1, 17, !dbg !12829
  %3 = and i32 %2, 1, !dbg !12829
  ret i32 %3, !dbg !12830
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #14 !dbg !12831 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12832
  %2 = or i32 %1, 262144, !dbg !12832
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12832
  ret void, !dbg !12833
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.177() unnamed_addr #14 !dbg !12834 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12835
  %2 = and i32 %1, -262145, !dbg !12835
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12835
  ret void, !dbg !12836
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.178() unnamed_addr #14 !dbg !12837 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12838
  %2 = or i32 %1, 65536, !dbg !12838
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12838
  ret void, !dbg !12839
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #21 !dbg !12840 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12843, metadata !DIExpression()), !dbg !12859
  call void @llvm.dbg.value(metadata i32 undef, metadata !12843, metadata !DIExpression()), !dbg !12859
  call void @llvm.dbg.value(metadata i32 undef, metadata !12843, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !12859
  ret void, !dbg !12860
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !12861 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12865, metadata !DIExpression()), !dbg !12867
  %2 = icmp eq i8* %0, null, !dbg !12868
  br i1 %2, label %29, label %3, !dbg !12870

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !12871
  %5 = icmp eq i8 %4, 0, !dbg !12872
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !12873
  br i1 %6, label %29, label %8, !dbg !12873

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12866, metadata !DIExpression()), !dbg !12867
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !12874

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !12866, metadata !DIExpression()), !dbg !12867
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #24, !dbg !12876
  br i1 %10, label %11, label %15, !dbg !12881

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !12882
  %13 = load i8*, i8** %12, align 4, !dbg !12882
  %14 = icmp eq i8* %13, %0, !dbg !12883
  br i1 %14, label %29, label %15, !dbg !12884

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !12885
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !12866, metadata !DIExpression()), !dbg !12867
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12886
  br i1 %17, label %7, label %8, !dbg !12887, !llvm.loop !12888

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !12866, metadata !DIExpression()), !dbg !12867
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #24, !dbg !12890
  br i1 %20, label %21, label %26, !dbg !12894

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !12895
  %23 = load i8*, i8** %22, align 4, !dbg !12895
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #25, !dbg !12896
  %25 = icmp eq i32 %24, 0, !dbg !12897
  br i1 %25, label %29, label %26, !dbg !12898

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !12899
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !12866, metadata !DIExpression()), !dbg !12867
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12900
  br i1 %28, label %29, label %18, !dbg !12874, !llvm.loop !12901

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !12867
  ret %struct.device* %30, !dbg !12903
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #8 !dbg !12904 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12908, metadata !DIExpression()), !dbg !12909
  %2 = icmp eq %struct.device* %0, null, !dbg !12910
  br i1 %2, label %14, label %3, !dbg !12912

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !12913
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !12913
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !12914
  %7 = load i8, i8* %6, align 1, !dbg !12914
  %8 = and i8 %7, 1, !dbg !12914
  %9 = icmp eq i8 %8, 0, !dbg !12914
  br i1 %9, label %14, label %10, !dbg !12915

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !12916
  %12 = load i8, i8* %11, align 1, !dbg !12916
  %13 = icmp eq i8 %12, 0, !dbg !12917
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !12909
  ret i1 %15, !dbg !12918
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #7 !dbg !12919 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !12924, metadata !DIExpression()), !dbg !12925
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !12926
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !12927
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12928 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12936, metadata !DIExpression()), !dbg !12941
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12937, metadata !DIExpression()), !dbg !12941
  call void @llvm.dbg.value(metadata i8* %2, metadata !12938, metadata !DIExpression()), !dbg !12941
  %5 = bitcast i32* %4 to i8*, !dbg !12942
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12942
  call void @llvm.dbg.value(metadata i32 0, metadata !12939, metadata !DIExpression()), !dbg !12941
  store i32 0, i32* %4, align 4, !dbg !12943
  call void @llvm.dbg.value(metadata i32* %4, metadata !12939, metadata !DIExpression(DW_OP_deref)), !dbg !12941
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !12944
  call void @llvm.dbg.value(metadata i16* %6, metadata !12940, metadata !DIExpression()), !dbg !12941
  %7 = load i32, i32* %4, align 4, !dbg !12945
  call void @llvm.dbg.value(metadata i32 %7, metadata !12939, metadata !DIExpression()), !dbg !12941
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !12946
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12947
  ret i32 %8, !dbg !12948
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !12949 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12953, metadata !DIExpression()), !dbg !12959
  call void @llvm.dbg.value(metadata i32* %1, metadata !12954, metadata !DIExpression()), !dbg !12959
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12960
  %4 = load i16*, i16** %3, align 4, !dbg !12960
  call void @llvm.dbg.value(metadata i16* %4, metadata !12955, metadata !DIExpression()), !dbg !12959
  %5 = icmp eq i16* %4, null, !dbg !12961
  br i1 %5, label %14, label %6, !dbg !12962

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !12963
  call void @llvm.dbg.value(metadata i32 %7, metadata !12956, metadata !DIExpression()), !dbg !12963
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !12964
  %9 = load i16, i16* %8, align 2, !dbg !12964
  %10 = add i16 %9, -32767, !dbg !12965
  %11 = icmp ult i16 %10, 2, !dbg !12965
  %12 = add i32 %7, 1, !dbg !12966
  call void @llvm.dbg.value(metadata i32 %12, metadata !12956, metadata !DIExpression()), !dbg !12963
  br i1 %11, label %13, label %6, !dbg !12965, !llvm.loop !12968

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !12971
  br label %14, !dbg !12972

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !12973
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !12974 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !12978, metadata !DIExpression()), !dbg !12989
  call void @llvm.dbg.value(metadata i32 %1, metadata !12979, metadata !DIExpression()), !dbg !12989
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !12980, metadata !DIExpression()), !dbg !12989
  call void @llvm.dbg.value(metadata i8* %3, metadata !12981, metadata !DIExpression()), !dbg !12989
  call void @llvm.dbg.value(metadata i32 0, metadata !12982, metadata !DIExpression()), !dbg !12990
  %5 = icmp eq i32 %1, 0, !dbg !12991
  br i1 %5, label %16, label %8, !dbg !12992

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !12982, metadata !DIExpression()), !dbg !12990
  %7 = icmp eq i32 %15, %1, !dbg !12991
  br i1 %7, label %16, label %8, !dbg !12992, !llvm.loop !12993

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !12982, metadata !DIExpression()), !dbg !12990
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !12995
  %11 = load i16, i16* %10, align 2, !dbg !12995
  call void @llvm.dbg.value(metadata i16 %11, metadata !12984, metadata !DIExpression()), !dbg !12996
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #24, !dbg !12997
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !12987, metadata !DIExpression()), !dbg !12996
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #25, !dbg !12998
  call void @llvm.dbg.value(metadata i32 %13, metadata !12988, metadata !DIExpression()), !dbg !12996
  %14 = icmp slt i32 %13, 0, !dbg !12999
  %15 = add nuw i32 %9, 1, !dbg !13001
  call void @llvm.dbg.value(metadata i32 %15, metadata !12982, metadata !DIExpression()), !dbg !12990
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !13002
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #3 !dbg !13003 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !13007, metadata !DIExpression()), !dbg !13010
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !13008, metadata !DIExpression()), !dbg !13010
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !13009, metadata !DIExpression()), !dbg !13010
  %2 = sext i16 %0 to i32, !dbg !13011
  %3 = icmp slt i16 %0, 1, !dbg !13013
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !13014
  %6 = add nsw i32 %2, -1, !dbg !13014
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !13014
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !13014
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !13008, metadata !DIExpression()), !dbg !13010
  ret %struct.device* %8, !dbg !13015
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13016 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13018, metadata !DIExpression()), !dbg !13023
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13019, metadata !DIExpression()), !dbg !13023
  call void @llvm.dbg.value(metadata i8* %2, metadata !13020, metadata !DIExpression()), !dbg !13023
  %5 = bitcast i32* %4 to i8*, !dbg !13024
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13024
  call void @llvm.dbg.value(metadata i32 0, metadata !13021, metadata !DIExpression()), !dbg !13023
  store i32 0, i32* %4, align 4, !dbg !13025
  call void @llvm.dbg.value(metadata i32* %4, metadata !13021, metadata !DIExpression(DW_OP_deref)), !dbg !13023
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !13026
  call void @llvm.dbg.value(metadata i16* %6, metadata !13022, metadata !DIExpression()), !dbg !13023
  %7 = load i32, i32* %4, align 4, !dbg !13027
  call void @llvm.dbg.value(metadata i32 %7, metadata !13021, metadata !DIExpression()), !dbg !13023
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !13028
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13029
  ret i32 %8, !dbg !13030
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !13031 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13033, metadata !DIExpression()), !dbg !13038
  call void @llvm.dbg.value(metadata i32* %1, metadata !13034, metadata !DIExpression()), !dbg !13038
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13039
  %4 = load i16*, i16** %3, align 4, !dbg !13039
  call void @llvm.dbg.value(metadata i16* %4, metadata !13035, metadata !DIExpression()), !dbg !13038
  call void @llvm.dbg.value(metadata i32 0, metadata !13036, metadata !DIExpression()), !dbg !13038
  call void @llvm.dbg.value(metadata i32 0, metadata !13037, metadata !DIExpression()), !dbg !13038
  %5 = icmp eq i16* %4, null, !dbg !13040
  br i1 %5, label %22, label %6, !dbg !13042

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !13036, metadata !DIExpression()), !dbg !13038
  call void @llvm.dbg.value(metadata i16* %8, metadata !13035, metadata !DIExpression()), !dbg !13038
  %9 = load i16, i16* %8, align 2, !dbg !13043
  %10 = icmp eq i16 %9, -32768, !dbg !13047
  call void @llvm.dbg.value(metadata i32 undef, metadata !13036, metadata !DIExpression()), !dbg !13038
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !13048
  call void @llvm.dbg.value(metadata i16* %11, metadata !13035, metadata !DIExpression()), !dbg !13038
  %12 = zext i1 %10 to i32, !dbg !13049
  %13 = add i32 %7, %12, !dbg !13049
  call void @llvm.dbg.value(metadata i32 %13, metadata !13036, metadata !DIExpression()), !dbg !13038
  %14 = icmp eq i32 %13, 2, !dbg !13050
  br i1 %14, label %15, label %6, !dbg !13051

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !13038
  call void @llvm.dbg.value(metadata i32 %16, metadata !13037, metadata !DIExpression()), !dbg !13038
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !13052
  %18 = load i16, i16* %17, align 2, !dbg !13052
  %19 = icmp eq i16 %18, 32767, !dbg !13053
  %20 = add i32 %16, 1, !dbg !13054
  call void @llvm.dbg.value(metadata i32 %20, metadata !13037, metadata !DIExpression()), !dbg !13038
  br i1 %19, label %21, label %15, !dbg !13056, !llvm.loop !13057

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !13059
  br label %22, !dbg !13060

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !13061
  call void @llvm.dbg.value(metadata i16* %23, metadata !13035, metadata !DIExpression()), !dbg !13038
  ret i16* %23, !dbg !13062
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #8 !dbg !13063 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13066
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 5, !dbg !13067
  ret i32* %2, !dbg !13068
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #3 !dbg !13069 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13220, metadata !DIExpression()), !dbg !13223
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !13221, metadata !DIExpression()), !dbg !13223
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13222, metadata !DIExpression()), !dbg !13223
  ret void, !dbg !13224
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !13225 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13229, metadata !DIExpression()), !dbg !13231
  call void @llvm.dbg.value(metadata i32 %1, metadata !13230, metadata !DIExpression()), !dbg !13231
  ret void, !dbg !13232
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !13233 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13237, metadata !DIExpression()), !dbg !13239
  call void @llvm.dbg.value(metadata i32 %1, metadata !13238, metadata !DIExpression()), !dbg !13239
  ret void, !dbg !13240
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #3 !dbg !13241 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13245, metadata !DIExpression()), !dbg !13247
  call void @llvm.dbg.value(metadata i8* %1, metadata !13246, metadata !DIExpression()), !dbg !13247
  ret i32 -134, !dbg !13248
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #3 !dbg !13249 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13253, metadata !DIExpression()), !dbg !13255
  call void @llvm.dbg.value(metadata i8* %1, metadata !13254, metadata !DIExpression()), !dbg !13255
  ret i32 -134, !dbg !13256
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !13257 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13260, metadata !DIExpression()), !dbg !13261
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13262, !srcloc !13268
  call void @llvm.dbg.value(metadata i32 undef, metadata !13265, metadata !DIExpression()) #23, !dbg !13269
  call void @llvm.dbg.value(metadata i32 undef, metadata !13266, metadata !DIExpression()) #23, !dbg !13269
  br label %3, !dbg !13270

3:                                                ; preds = %3, %1
  br label %3, !dbg !13271, !llvm.loop !13274
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13277 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13281, metadata !DIExpression()), !dbg !13283
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13282, metadata !DIExpression()), !dbg !13283
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.183, i32 0, i32 0), i32 noundef 69) #25, !dbg !13284
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !13289
  unreachable, !dbg !13289
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !13290 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13292, metadata !DIExpression()), !dbg !13293
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !13294
  unreachable, !dbg !13294
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13295 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13297, metadata !DIExpression()), !dbg !13301
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13298, metadata !DIExpression()), !dbg !13301
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13302, !srcloc !13268
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !13302
  call void @llvm.dbg.value(metadata i32 %4, metadata !13265, metadata !DIExpression()) #23, !dbg !13304
  call void @llvm.dbg.value(metadata i32 undef, metadata !13266, metadata !DIExpression()) #23, !dbg !13304
  call void @llvm.dbg.value(metadata i32 %4, metadata !13299, metadata !DIExpression()), !dbg !13301
  %5 = tail call fastcc %struct.k_thread* @k_current_get.186() #26, !dbg !13305
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13300, metadata !DIExpression()), !dbg !13301
  %6 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #24, !dbg !13306
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.187, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %6, i32 noundef 0) #25, !dbg !13306
  %7 = icmp eq %struct.__esf* %1, null, !dbg !13311
  br i1 %7, label %20, label %8, !dbg !13313

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13314, metadata !DIExpression()), !dbg !13319
  %9 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !13321
  %10 = load i32, i32* %9, align 4, !dbg !13321
  %11 = and i32 %10, 511, !dbg !13322
  %12 = icmp eq i32 %11, 0, !dbg !13323
  br i1 %12, label %14, label %13, !dbg !13324

13:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.188, i32 0, i32 0), i32 noundef 69) #25, !dbg !13325
  br label %14, !dbg !13331

14:                                               ; preds = %8, %13
  %15 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #24, !dbg !13332
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.189, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %15) #25, !dbg !13332
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #24, !dbg !13337
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13314, metadata !DIExpression()), !dbg !13338
  %16 = load i32, i32* %9, align 4, !dbg !13343
  %17 = and i32 %16, 511, !dbg !13344
  %18 = icmp eq i32 %17, 0, !dbg !13345
  br i1 %18, label %22, label %19, !dbg !13346

19:                                               ; preds = %14
  call void @llvm.dbg.value(metadata i32 %4, metadata !13347, metadata !DIExpression()) #23, !dbg !13350
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !13353, !srcloc !13354
  br label %25, !dbg !13355

20:                                               ; preds = %2
  %21 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #24, !dbg !13332
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.189, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %21) #25, !dbg !13332
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #24, !dbg !13337
  br label %22, !dbg !13356

22:                                               ; preds = %20, %14
  %23 = icmp eq i32 %0, 1, !dbg !13357
  call void @llvm.dbg.value(metadata i32 %4, metadata !13347, metadata !DIExpression()) #23, !dbg !13360
  call void @llvm.dbg.value(metadata i32 %4, metadata !13347, metadata !DIExpression()) #23, !dbg !13363
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !13301
  br i1 %23, label %25, label %24, !dbg !13365

24:                                               ; preds = %22
  tail call fastcc void @k_thread_abort.190(%struct.k_thread* noundef %5) #24, !dbg !13366
  br label %25, !dbg !13369

25:                                               ; preds = %22, %24, %19
  ret void, !dbg !13369
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.186() unnamed_addr #11 !dbg !13370 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.198() #26, !dbg !13374
  ret %struct.k_thread* %1, !dbg !13375
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #3 !dbg !13376 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13380, metadata !DIExpression()), !dbg !13381
  %2 = icmp ult i32 %0, 5, !dbg !13382
  br i1 %2, label %3, label %6, !dbg !13382

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !13382
  %5 = load i8*, i8** %4, align 4, !dbg !13382
  br label %6, !dbg !13382

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.192, i32 0, i32 0), %1 ], !dbg !13383
  ret i8* %7, !dbg !13385
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13386 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13390, metadata !DIExpression()), !dbg !13392
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !13393
  br i1 %2, label %9, label %3, !dbg !13394

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #25, !dbg !13395
  call void @llvm.dbg.value(metadata i8* %4, metadata !13391, metadata !DIExpression()), !dbg !13392
  %5 = icmp eq i8* %4, null, !dbg !13396
  br i1 %5, label %9, label %6, !dbg !13398

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !13399
  %8 = icmp eq i8 %7, 0, !dbg !13400
  br i1 %8, label %9, label %10, !dbg !13401

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.191, i32 0, i32 0), metadata !13391, metadata !DIExpression()), !dbg !13392
  br label %10, !dbg !13402

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.191, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !13392
  call void @llvm.dbg.value(metadata i8* %11, metadata !13391, metadata !DIExpression()), !dbg !13392
  ret i8* %11, !dbg !13404
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.190(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13405 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13409, metadata !DIExpression()), !dbg !13410
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13411, !srcloc !13413
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !13414
  ret void, !dbg !13415
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.198() unnamed_addr #11 !dbg !13416 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13417, !srcloc !13419
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !13420
  ret %struct.k_thread* %1, !dbg !13421
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13422 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13426, metadata !DIExpression()), !dbg !13429
  call void @llvm.dbg.value(metadata i32 %1, metadata !13427, metadata !DIExpression()), !dbg !13429
  call void @llvm.dbg.value(metadata i32 %2, metadata !13428, metadata !DIExpression()), !dbg !13429
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #25, !dbg !13430
  ret void, !dbg !13431
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13432 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13436, metadata !DIExpression()), !dbg !13439
  call void @llvm.dbg.value(metadata i8* %1, metadata !13437, metadata !DIExpression()), !dbg !13439
  call void @llvm.dbg.value(metadata i32 %2, metadata !13438, metadata !DIExpression()), !dbg !13439
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #25, !dbg !13440
  ret void, !dbg !13441
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !13442 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #24, !dbg !13443
  ret void, !dbg !13444
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !13445 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13447, metadata !DIExpression()), !dbg !13448
  tail call fastcc void @init_idle_thread(i32 noundef %0) #24, !dbg !13449
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13450
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !13451
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !13452
  %4 = trunc i32 %0 to i8, !dbg !13453
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !13454
  store i8 %4, i8* %5, align 4, !dbg !13455
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !13456
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #24, !dbg !13457
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !13458
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !13459
  store i8* %8, i8** %9, align 4, !dbg !13460
  ret void, !dbg !13461
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !13462 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13464, metadata !DIExpression()), !dbg !13470
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13471
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13465, metadata !DIExpression()), !dbg !13470
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !13472
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !13466, metadata !DIExpression()), !dbg !13470
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.205, i32 0, i32 0), metadata !13469, metadata !DIExpression()), !dbg !13470
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !13473
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !13474
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.205, i32 0, i32 0)) #25, !dbg !13475
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #24, !dbg !13476
  ret void, !dbg !13477
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #3 !dbg !13478 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13482, metadata !DIExpression()), !dbg !13483
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !13484
  ret i8* %2, !dbg !13485
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !13486 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13491, metadata !DIExpression()), !dbg !13492
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13493
  %3 = load i8, i8* %2, align 1, !dbg !13494
  %4 = and i8 %3, -5, !dbg !13494
  store i8 %4, i8* %2, align 1, !dbg !13494
  ret void, !dbg !13495
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #10 !dbg !13496 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #24, !dbg !13499
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #25, !dbg !13500
  %3 = ptrtoint i8* %2 to i32, !dbg !13509
  %4 = add i32 %3, 2048, !dbg !13510
  call void @llvm.dbg.value(metadata i32 %4, metadata !13504, metadata !DIExpression()) #23, !dbg !13511
  call void @llvm.dbg.value(metadata i32 %4, metadata !13512, metadata !DIExpression()) #23, !dbg !13515
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !13517, !srcloc !13518
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13519
  %6 = or i32 %5, 512, !dbg !13519
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13519
  tail call fastcc void @__NVIC_SetPriority.208(i32 noundef -2, i32 noundef 255) #25, !dbg !13520
  tail call fastcc void @__NVIC_SetPriority.208(i32 noundef -5, i32 noundef 0) #25, !dbg !13523
  tail call fastcc void @__NVIC_SetPriority.208(i32 noundef -12, i32 noundef 0) #25, !dbg !13524
  tail call fastcc void @__NVIC_SetPriority.208(i32 noundef -11, i32 noundef 0) #25, !dbg !13525
  tail call fastcc void @__NVIC_SetPriority.208(i32 noundef -10, i32 noundef 0) #25, !dbg !13526
  tail call fastcc void @__NVIC_SetPriority.208(i32 noundef -4, i32 noundef 0) #25, !dbg !13527
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13528
  %8 = or i32 %7, 458752, !dbg !13528
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13528
  tail call void @z_arm_fault_init() #25, !dbg !13529
  tail call void @z_arm_cpu_idle_init() #25, !dbg !13530
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13531
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !13534
  %9 = tail call i32 @z_arm_mpu_init() #25, !dbg !13535
  tail call void @z_arm_configure_static_mpu_regions() #25, !dbg !13536
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !13537
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %10) #23, !dbg !13537
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !13498, metadata !DIExpression()), !dbg !13538
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #24, !dbg !13539
  call void @z_device_state_init() #25, !dbg !13540
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #24, !dbg !13541
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #24, !dbg !13542
  %11 = call fastcc i8* @prepare_multithreading() #24, !dbg !13543
  call fastcc void @switch_to_main_thread(i8* noundef %11) #29, !dbg !13544
  unreachable, !dbg !13544
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2138 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2142, metadata !DIExpression()), !dbg !13545
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !13546
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !13546
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2143, metadata !DIExpression()), !dbg !13545
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2143, metadata !DIExpression()), !dbg !13545
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !13547
  br i1 %7, label %8, label %35, !dbg !13548

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2143, metadata !DIExpression()), !dbg !13545
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !13549
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !13549
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2153, metadata !DIExpression()), !dbg !13550
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !13551
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !13551
  %14 = tail call i32 %13(%struct.device* noundef %11) #25, !dbg !13552
  call void @llvm.dbg.value(metadata i32 %14, metadata !2157, metadata !DIExpression()), !dbg !13550
  %15 = icmp eq %struct.device* %11, null, !dbg !13553
  br i1 %15, label %32, label %16, !dbg !13555

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !13556
  br i1 %17, label %26, label %18, !dbg !13559

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !13560
  call void @llvm.dbg.value(metadata i32 %19, metadata !2157, metadata !DIExpression()), !dbg !13550
  %20 = icmp ult i32 %19, 255, !dbg !13562
  %21 = select i1 %20, i32 %19, i32 255, !dbg !13562
  call void @llvm.dbg.value(metadata i32 %21, metadata !2157, metadata !DIExpression()), !dbg !13550
  %22 = trunc i32 %21 to i8, !dbg !13563
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13564
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !13564
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !13565
  store i8 %22, i8* %25, align 1, !dbg !13566
  br label %26, !dbg !13567

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13568
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !13568
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !13569
  %30 = load i8, i8* %29, align 1, !dbg !13570
  %31 = or i8 %30, 1, !dbg !13570
  store i8 %31, i8* %29, align 1, !dbg !13570
  br label %32, !dbg !13571

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !13572
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2143, metadata !DIExpression()), !dbg !13545
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !13547
  br i1 %34, label %8, label %35, !dbg !13548, !llvm.loop !13573

35:                                               ; preds = %32, %1
  ret void, !dbg !13575
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.208(i32 noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !13576 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13578, metadata !DIExpression()), !dbg !13580
  call void @llvm.dbg.value(metadata i32 %1, metadata !13579, metadata !DIExpression()), !dbg !13580
  %3 = trunc i32 %1 to i8, !dbg !13581
  %4 = shl i8 %3, 4, !dbg !13581
  %5 = and i32 %0, 15, !dbg !13584
  %6 = add nsw i32 %5, -4, !dbg !13585
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !13586
  store volatile i8 %4, i8* %7, align 1, !dbg !13587
  ret void, !dbg !13588
}

; Function Attrs: optsize
declare !dbg !13589 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #7 !dbg !13590 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13593, metadata !DIExpression()), !dbg !13594
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13595
  store i8 1, i8* %2, align 1, !dbg !13596
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !13597
  store i8 1, i8* %3, align 4, !dbg !13598
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !13599
  store i32 0, i32* %4, align 4, !dbg !13600
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !13601
  store i32 0, i32* %5, align 4, !dbg !13602
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, !dbg !13603
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !13604
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13605
  ret void, !dbg !13606
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !13607 {
  tail call void @z_sched_init() #25, !dbg !13612
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13613
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.209, i32 0, i32 0)) #25, !dbg !13614
  call void @llvm.dbg.value(metadata i8* %1, metadata !13611, metadata !DIExpression()), !dbg !13615
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !13616
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !13617
  tail call void @z_init_cpu(i32 noundef 0) #24, !dbg !13618
  ret i8* %1, !dbg !13619
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #10 !dbg !13620 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13624, metadata !DIExpression()), !dbg !13625
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #25, !dbg !13626
  unreachable, !dbg !13627
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !13628 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13630, metadata !DIExpression()), !dbg !13633
  call void @llvm.dbg.value(metadata i8* %1, metadata !13631, metadata !DIExpression()), !dbg !13633
  call void @llvm.dbg.value(metadata i8* %2, metadata !13632, metadata !DIExpression()), !dbg !13633
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !13634
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #24, !dbg !13635
  tail call void @boot_banner() #25, !dbg !13636
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #24, !dbg !13637
  tail call void @z_init_static_threads() #25, !dbg !13638
  tail call void @main() #25, !dbg !13639
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13640
  %5 = and i8 %4, -2, !dbg !13640
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13640
  ret void, !dbg !13641
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #3 !dbg !13642 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13652, metadata !DIExpression()), !dbg !13654
  call void @llvm.dbg.value(metadata i8* %1, metadata !13653, metadata !DIExpression()), !dbg !13654
  ret void, !dbg !13655
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #3 !dbg !13656 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13658, metadata !DIExpression()), !dbg !13660
  call void @llvm.dbg.value(metadata i8* %1, metadata !13659, metadata !DIExpression()), !dbg !13660
  ret void, !dbg !13661
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !13662 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13663, !srcloc !13670
  call void @llvm.dbg.value(metadata i32 %1, metadata !13666, metadata !DIExpression()) #23, !dbg !13671
  %2 = icmp ne i32 %1, 0, !dbg !13672
  ret i1 %2, !dbg !13673
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #9 !dbg !13674 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13675
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13676
  %3 = load i8, i8* %2, align 4, !dbg !13677
  %4 = or i8 %3, 1, !dbg !13677
  store i8 %4, i8* %2, align 4, !dbg !13677
  ret void, !dbg !13678
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #9 !dbg !13679 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13680
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13681
  %3 = load i8, i8* %2, align 4, !dbg !13682
  %4 = and i8 %3, -2, !dbg !13682
  store i8 %4, i8* %2, align 4, !dbg !13682
  ret void, !dbg !13683
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #8 !dbg !13684 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13685
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13686
  %3 = load i8, i8* %2, align 4, !dbg !13686
  %4 = and i8 %3, 1, !dbg !13687
  %5 = icmp ne i8 %4, 0, !dbg !13688
  ret i1 %5, !dbg !13689
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13690 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13694, metadata !DIExpression()), !dbg !13696
  call void @llvm.dbg.value(metadata i8* %1, metadata !13695, metadata !DIExpression()), !dbg !13696
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13697
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %0, !dbg !13699
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13694, metadata !DIExpression()), !dbg !13696
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 0, !dbg !13700
  %7 = tail call i8* @strncpy(i8* noundef nonnull %6, i8* noundef %1, i32 noundef 31) #25, !dbg !13701
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 31, !dbg !13702
  store i8 0, i8* %8, align 1, !dbg !13703
  ret i32 0, !dbg !13704
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local nonnull i8* @k_thread_name_get(%struct.k_thread* noundef readnone %0) local_unnamed_addr #3 !dbg !13705 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13709, metadata !DIExpression()), !dbg !13710
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13711
  ret i8* %2, !dbg !13712
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13713 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13717, metadata !DIExpression()), !dbg !13720
  call void @llvm.dbg.value(metadata i8* %1, metadata !13718, metadata !DIExpression()), !dbg !13720
  call void @llvm.dbg.value(metadata i32 %2, metadata !13719, metadata !DIExpression()), !dbg !13720
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13721
  %5 = tail call i8* @strncpy(i8* noundef %1, i8* noundef nonnull %4, i32 noundef %2) #25, !dbg !13722
  ret i32 0, !dbg !13723
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2168 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2285, metadata !DIExpression()), !dbg !13724
  call void @llvm.dbg.value(metadata i8* %1, metadata !2286, metadata !DIExpression()), !dbg !13724
  call void @llvm.dbg.value(metadata i32 %2, metadata !2287, metadata !DIExpression()), !dbg !13724
  call void @llvm.dbg.value(metadata i32 0, metadata !2288, metadata !DIExpression()), !dbg !13724
  call void @llvm.dbg.value(metadata i8 undef, metadata !2290, metadata !DIExpression()), !dbg !13724
  %4 = icmp eq i8* %1, null, !dbg !13725
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !13727
  br i1 %6, label %46, label %7, !dbg !13727

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13728
  %9 = load i8, i8* %8, align 1, !dbg !13728
  call void @llvm.dbg.value(metadata i8 %9, metadata !2290, metadata !DIExpression()), !dbg !13724
  %10 = add i32 %2, -1, !dbg !13729
  call void @llvm.dbg.value(metadata i32 %10, metadata !2287, metadata !DIExpression()), !dbg !13724
  call void @llvm.dbg.value(metadata i8 0, metadata !2291, metadata !DIExpression()), !dbg !13730
  call void @llvm.dbg.value(metadata i8 %9, metadata !2290, metadata !DIExpression()), !dbg !13724
  call void @llvm.dbg.value(metadata i32 0, metadata !2288, metadata !DIExpression()), !dbg !13724
  %11 = icmp eq i8 %9, 0, !dbg !13731
  br i1 %11, label %12, label %15, !dbg !13733

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !13734
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !13735
  store i8 0, i8* %14, align 1, !dbg !13736
  br label %46, !dbg !13737

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2291, metadata !DIExpression()), !dbg !13730
  call void @llvm.dbg.value(metadata i8 %17, metadata !2290, metadata !DIExpression()), !dbg !13724
  call void @llvm.dbg.value(metadata i32 %18, metadata !2288, metadata !DIExpression()), !dbg !13724
  %19 = zext i8 %17 to i32, !dbg !13738
  %20 = zext i8 %16 to i32, !dbg !13739
  %21 = shl nuw i32 1, %20, !dbg !13739
  call void @llvm.dbg.value(metadata i32 %21, metadata !2289, metadata !DIExpression()), !dbg !13724
  %22 = and i32 %21, %19, !dbg !13741
  %23 = icmp eq i32 %22, 0, !dbg !13743
  br i1 %23, label %42, label %24, !dbg !13744

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !13745
  %26 = sub i32 %10, %18, !dbg !13746
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !13747
  %28 = load i8*, i8** %27, align 4, !dbg !13747
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !13748
  %30 = load i32, i32* %29, align 4, !dbg !13748
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #24, !dbg !13749
  %32 = add i32 %31, %18, !dbg !13750
  call void @llvm.dbg.value(metadata i32 %32, metadata !2288, metadata !DIExpression()), !dbg !13724
  %33 = trunc i32 %21 to i8, !dbg !13751
  %34 = xor i8 %33, -1, !dbg !13751
  %35 = and i8 %17, %34, !dbg !13751
  call void @llvm.dbg.value(metadata i8 %35, metadata !2290, metadata !DIExpression()), !dbg !13724
  %36 = icmp eq i8 %35, 0, !dbg !13752
  br i1 %36, label %12, label %37, !dbg !13754

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !13755
  %39 = sub i32 %10, %32, !dbg !13757
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.212, i32 0, i32 0), i32 noundef 1) #24, !dbg !13758
  %41 = add i32 %40, %32, !dbg !13759
  call void @llvm.dbg.value(metadata i32 %41, metadata !2288, metadata !DIExpression()), !dbg !13724
  br label %42, !dbg !13760

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !13724
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !13724
  call void @llvm.dbg.value(metadata i8 %44, metadata !2290, metadata !DIExpression()), !dbg !13724
  call void @llvm.dbg.value(metadata i32 %43, metadata !2288, metadata !DIExpression()), !dbg !13724
  %45 = add i8 %16, 1, !dbg !13761
  call void @llvm.dbg.value(metadata i8 %45, metadata !2291, metadata !DIExpression()), !dbg !13730
  br label %15, !dbg !13733

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.213, i32 0, i32 0), %3 ], !dbg !13724
  ret i8* %47, !dbg !13762
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !13763 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13767, metadata !DIExpression()), !dbg !13772
  call void @llvm.dbg.value(metadata i32 %1, metadata !13768, metadata !DIExpression()), !dbg !13772
  call void @llvm.dbg.value(metadata i8* %2, metadata !13769, metadata !DIExpression()), !dbg !13772
  call void @llvm.dbg.value(metadata i32 %3, metadata !13770, metadata !DIExpression()), !dbg !13772
  %5 = icmp ult i32 %1, %3, !dbg !13773
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !13773
  call void @llvm.dbg.value(metadata i32 %6, metadata !13771, metadata !DIExpression()), !dbg !13772
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #25, !dbg !13774
  ret i32 %6, !dbg !13775
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13776 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13780, metadata !DIExpression()), !dbg !13781
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #25, !dbg !13782
  ret void, !dbg !13783
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef %9) local_unnamed_addr #1 !dbg !13784 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13793, metadata !DIExpression()), !dbg !13804
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13794, metadata !DIExpression()), !dbg !13804
  call void @llvm.dbg.value(metadata i32 %2, metadata !13795, metadata !DIExpression()), !dbg !13804
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13796, metadata !DIExpression()), !dbg !13804
  call void @llvm.dbg.value(metadata i8* %4, metadata !13797, metadata !DIExpression()), !dbg !13804
  call void @llvm.dbg.value(metadata i8* %5, metadata !13798, metadata !DIExpression()), !dbg !13804
  call void @llvm.dbg.value(metadata i8* %6, metadata !13799, metadata !DIExpression()), !dbg !13804
  call void @llvm.dbg.value(metadata i32 %7, metadata !13800, metadata !DIExpression()), !dbg !13804
  call void @llvm.dbg.value(metadata i32 %8, metadata !13801, metadata !DIExpression()), !dbg !13804
  call void @llvm.dbg.value(metadata i8* %9, metadata !13802, metadata !DIExpression()), !dbg !13804
  %11 = icmp eq i32 %7, 15, !dbg !13805
  br i1 %11, label %12, label %15, !dbg !13805

12:                                               ; preds = %10
  %13 = bitcast void (i8*, i8*, i8*)* %3 to i8*, !dbg !13805
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef %13) #24, !dbg !13805
  br i1 %14, label %19, label %18, !dbg !13805

15:                                               ; preds = %10
  %16 = add i32 %7, 16, !dbg !13805
  %17 = icmp ult i32 %16, 31, !dbg !13805
  br i1 %17, label %19, label %18, !dbg !13805

18:                                               ; preds = %12, %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.223, i32 0, i32 0), i8* noundef getelementptr inbounds ([128 x i8], [128 x i8]* @.str.10.224, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.225, i32 0, i32 0), i32 noundef 536) #25, !dbg !13809
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12.226, i32 0, i32 0), i32 noundef %7, i32 noundef 14, i32 noundef -16) #25, !dbg !13809
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.225, i32 0, i32 0), i32 noundef 536) #25, !dbg !13809
  unreachable, !dbg !13809

19:                                               ; preds = %15, %12
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13811
  tail call fastcc void @z_waitq_init(%struct._wait_q_t* noundef nonnull %20) #24, !dbg !13812
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !13813
  tail call void @z_init_thread_base(%struct._thread_base* noundef %21, i32 noundef %7, i32 noundef 4, i32 noundef %8) #24, !dbg !13814
  %22 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #24, !dbg !13815
  call void @llvm.dbg.value(metadata i8* %22, metadata !13803, metadata !DIExpression()), !dbg !13804
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %22, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #25, !dbg !13816
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !13817
  store i8* null, i8** %23, align 4, !dbg !13818
  %24 = icmp eq i8* %9, null, !dbg !13819
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13821
  br i1 %24, label %29, label %26, !dbg !13822

26:                                               ; preds = %19
  %27 = tail call i8* @strncpy(i8* noundef nonnull %25, i8* noundef nonnull %9, i32 noundef 31) #25, !dbg !13823
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 31, !dbg !13825
  store i8 0, i8* %28, align 1, !dbg !13826
  br label %30, !dbg !13827

29:                                               ; preds = %19
  store i8 0, i8* %25, align 8, !dbg !13828
  br label %30

30:                                               ; preds = %29, %26
  %31 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13830
  %32 = icmp eq %struct.k_thread* %31, null, !dbg !13830
  br i1 %32, label %36, label %33, !dbg !13832

33:                                               ; preds = %30
  %34 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %31, i32 0, i32 7, !dbg !13833
  %35 = load %struct.k_heap*, %struct.k_heap** %34, align 8, !dbg !13833
  br label %36, !dbg !13834

36:                                               ; preds = %30, %33
  %37 = phi %struct.k_heap* [ %35, %33 ], [ null, %30 ], !dbg !13804
  %38 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, !dbg !13835
  store %struct.k_heap* %37, %struct.k_heap** %38, align 8, !dbg !13837
  ret i8* %22, !dbg !13838
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef readnone %0) unnamed_addr #3 !dbg !13839 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13843, metadata !DIExpression()), !dbg !13844
  %2 = icmp eq i8* %0, bitcast (void (i8*, i8*, i8*)* @idle to i8*), !dbg !13845
  ret i1 %2, !dbg !13846
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%struct._wait_q_t* noundef %0) unnamed_addr #7 !dbg !13847 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13852, metadata !DIExpression()), !dbg !13853
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13854
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #24, !dbg !13855
  ret void, !dbg !13856
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #7 !dbg !13857 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13862, metadata !DIExpression()), !dbg !13866
  call void @llvm.dbg.value(metadata i32 %1, metadata !13863, metadata !DIExpression()), !dbg !13866
  call void @llvm.dbg.value(metadata i32 %2, metadata !13864, metadata !DIExpression()), !dbg !13866
  call void @llvm.dbg.value(metadata i32 %3, metadata !13865, metadata !DIExpression()), !dbg !13866
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !13867
  store %struct._wait_q_t* null, %struct._wait_q_t** %5, align 8, !dbg !13868
  %6 = trunc i32 %3 to i8, !dbg !13869
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !13870
  store i8 %6, i8* %7, align 4, !dbg !13871
  %8 = trunc i32 %2 to i8, !dbg !13872
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !13873
  store i8 %8, i8* %9, align 1, !dbg !13874
  %10 = trunc i32 %1 to i8, !dbg !13875
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !13876
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !13876
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !13876
  store i8 %10, i8* %13, align 2, !dbg !13877
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !13878
  store i8 0, i8* %14, align 1, !dbg !13879
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #24, !dbg !13880
  ret void, !dbg !13881
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !13882 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13886, metadata !DIExpression()), !dbg !13894
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13887, metadata !DIExpression()), !dbg !13894
  call void @llvm.dbg.value(metadata i32 %2, metadata !13888, metadata !DIExpression()), !dbg !13894
  call void @llvm.dbg.value(metadata i32 0, metadata !13893, metadata !DIExpression()), !dbg !13894
  %4 = add i32 %2, 7, !dbg !13895
  %5 = and i32 %4, -8, !dbg !13895
  %6 = add i32 %5, 64, !dbg !13895
  call void @llvm.dbg.value(metadata i32 %6, metadata !13889, metadata !DIExpression()), !dbg !13894
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.227(%struct.z_thread_stack_element* noundef %1) #24, !dbg !13897
  call void @llvm.dbg.value(metadata i8* %7, metadata !13892, metadata !DIExpression()), !dbg !13894
  call void @llvm.dbg.value(metadata i32 %5, metadata !13890, metadata !DIExpression()), !dbg !13894
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !13898
  call void @llvm.dbg.value(metadata i8* %8, metadata !13891, metadata !DIExpression()), !dbg !13894
  call void @llvm.dbg.value(metadata i32 0, metadata !13893, metadata !DIExpression()), !dbg !13894
  %9 = ptrtoint i8* %7 to i32, !dbg !13899
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !13900
  store i32 %9, i32* %10, align 4, !dbg !13901
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !13902
  store i32 %5, i32* %11, align 4, !dbg !13903
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 2, !dbg !13904
  store i32 0, i32* %12, align 4, !dbg !13905
  call void @llvm.dbg.value(metadata i8* %8, metadata !13891, metadata !DIExpression()), !dbg !13894
  ret i8* %8, !dbg !13906
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.227(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #3 !dbg !13907 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13911, metadata !DIExpression()), !dbg !13912
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !13913
  ret i8* %2, !dbg !13914
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !13915 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13920, metadata !DIExpression()), !dbg !13921
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !13922
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !13923
  ret void, !dbg !13924
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !13925 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13927, metadata !DIExpression()), !dbg !13928
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13929
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #24, !dbg !13930
  ret void, !dbg !13931
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !13932 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13936, metadata !DIExpression()), !dbg !13937
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13938
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !13939
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13940
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !13941
  ret void, !dbg !13942
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !13943 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13948, metadata !DIExpression()), !dbg !13949
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13950
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13951
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13952
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13953
  ret void, !dbg !13954
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !13955 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13972, metadata !DIExpression()), !dbg !13973
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13963, metadata !DIExpression()), !dbg !13973
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13964, metadata !DIExpression()), !dbg !13973
  call void @llvm.dbg.value(metadata i32 %2, metadata !13965, metadata !DIExpression()), !dbg !13973
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13966, metadata !DIExpression()), !dbg !13973
  call void @llvm.dbg.value(metadata i8* %4, metadata !13967, metadata !DIExpression()), !dbg !13973
  call void @llvm.dbg.value(metadata i8* %5, metadata !13968, metadata !DIExpression()), !dbg !13973
  call void @llvm.dbg.value(metadata i8* %6, metadata !13969, metadata !DIExpression()), !dbg !13973
  call void @llvm.dbg.value(metadata i32 %7, metadata !13970, metadata !DIExpression()), !dbg !13973
  call void @llvm.dbg.value(metadata i32 %8, metadata !13971, metadata !DIExpression()), !dbg !13973
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13974, !srcloc !13670
  call void @llvm.dbg.value(metadata i32 %11, metadata !13666, metadata !DIExpression()) #23, !dbg !13979
  %12 = icmp eq i32 %11, 0, !dbg !13980
  br i1 %12, label %14, label %13, !dbg !13981

13:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.223, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.225, i32 0, i32 0), i32 noundef 647) #25, !dbg !13982
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14.231, i32 0, i32 0)) #25, !dbg !13982
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.225, i32 0, i32 0), i32 noundef 647) #25, !dbg !13982
  unreachable, !dbg !13982

14:                                               ; preds = %10
  %15 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %15, metadata !13972, metadata !DIExpression()), !dbg !13973
  %16 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef null) #24, !dbg !13984
  %17 = icmp eq i64 %15, -1, !dbg !13985
  br i1 %17, label %19, label %18, !dbg !13987

18:                                               ; preds = %14
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #24, !dbg !13988
  br label %19, !dbg !13990

19:                                               ; preds = %18, %14
  ret %struct.k_thread* %0, !dbg !13991
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13992 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13997, metadata !DIExpression()), !dbg !13998
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13996, metadata !DIExpression()), !dbg !13998
  %4 = icmp eq i64 %3, 0, !dbg !13999
  br i1 %4, label %5, label %6, !dbg !14001

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !14002
  br label %7, !dbg !14004

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !14005
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !14007
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14008 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14012, metadata !DIExpression()), !dbg !14013
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !14014, !srcloc !14016
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !14017
  ret void, !dbg !14018
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14019 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14022, metadata !DIExpression()), !dbg !14023
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14021, metadata !DIExpression()), !dbg !14023
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14024
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !14025
  ret void, !dbg !14026
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !14027 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14029, metadata !DIExpression()), !dbg !14049
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %1, label %2, !dbg !14050

1:                                                ; preds = %6, %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.223, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.234, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.225, i32 0, i32 0), i32 noundef 750) #25, !dbg !14054
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.235, i32 0, i32 0)) #25, !dbg !14054
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.225, i32 0, i32 0), i32 noundef 750) #25, !dbg !14054
  unreachable, !dbg !14054

2:                                                ; preds = %0, %6
  %3 = phi %struct._static_thread_data* [ %31, %6 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !14029, metadata !DIExpression()), !dbg !14049
  %4 = icmp ult %struct._static_thread_data* %3, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14057
  br i1 %4, label %6, label %5, !dbg !14058

5:                                                ; preds = %2
  tail call void @k_sched_lock() #25, !dbg !14059
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14047, metadata !DIExpression()), !dbg !14060
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %33, label %34, !dbg !14061

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !14065
  %8 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !14065
  %9 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !14067
  %10 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %9, align 4, !dbg !14067
  %11 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !14068
  %12 = load i32, i32* %11, align 4, !dbg !14068
  %13 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !14069
  %14 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %13, align 4, !dbg !14069
  %15 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !14070
  %16 = load i8*, i8** %15, align 4, !dbg !14070
  %17 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !14071
  %18 = load i8*, i8** %17, align 4, !dbg !14071
  %19 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !14072
  %20 = load i8*, i8** %19, align 4, !dbg !14072
  %21 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !14073
  %22 = load i32, i32* %21, align 4, !dbg !14073
  %23 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !14074
  %24 = load i32, i32* %23, align 4, !dbg !14074
  %25 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 11, !dbg !14075
  %26 = load i8*, i8** %25, align 4, !dbg !14075
  %27 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %8, %struct.z_thread_stack_element* noundef %10, i32 noundef %12, void (i8*, i8*, i8*)* noundef %14, i8* noundef %16, i8* noundef %18, i8* noundef %20, i32 noundef %22, i32 noundef %24, i8* noundef %26) #24, !dbg !14076
  %28 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !14077
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 2, !dbg !14078
  %30 = bitcast i8** %29 to %struct._static_thread_data**, !dbg !14079
  store %struct._static_thread_data* %3, %struct._static_thread_data** %30, align 4, !dbg !14079
  %31 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !14080
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !14029, metadata !DIExpression()), !dbg !14049
  %32 = icmp ugt %struct._static_thread_data* %31, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14081
  br i1 %32, label %1, label %2, !dbg !14050, !llvm.loop !14082

33:                                               ; preds = %50, %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.223, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.234, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.225, i32 0, i32 0), i32 noundef 781) #25, !dbg !14084
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.235, i32 0, i32 0)) #25, !dbg !14084
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.225, i32 0, i32 0), i32 noundef 781) #25, !dbg !14084
  unreachable, !dbg !14084

34:                                               ; preds = %5, %50
  %35 = phi %struct._static_thread_data* [ %51, %50 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %5 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %35, metadata !14047, metadata !DIExpression()), !dbg !14060
  %36 = icmp ult %struct._static_thread_data* %35, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14087
  br i1 %36, label %38, label %37, !dbg !14088

37:                                               ; preds = %34
  tail call void @k_sched_unlock() #25, !dbg !14089
  ret void, !dbg !14090

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 9, !dbg !14091
  %40 = load i32, i32* %39, align 4, !dbg !14091
  %41 = icmp eq i32 %40, -1, !dbg !14094
  br i1 %41, label %50, label %42, !dbg !14095

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 0, !dbg !14096
  %44 = load %struct.k_thread*, %struct.k_thread** %43, align 4, !dbg !14096
  %45 = icmp sgt i32 %40, 0, !dbg !14098
  %46 = select i1 %45, i32 %40, i32 0, !dbg !14098
  %47 = zext i32 %46 to i64, !dbg !14098
  %48 = tail call fastcc i64 @k_ms_to_ticks_ceil64.236(i64 noundef %47) #24, !dbg !14098
  %49 = insertvalue [1 x i64] poison, i64 %48, 0, !dbg !14099
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %44, [1 x i64] %49) #24, !dbg !14099
  br label %50, !dbg !14100

50:                                               ; preds = %38, %42
  %51 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 1, !dbg !14101
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %51, metadata !14047, metadata !DIExpression()), !dbg !14060
  %52 = icmp ugt %struct._static_thread_data* %51, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14102
  br i1 %52, label %33, label %34, !dbg !14061, !llvm.loop !14103
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.236(i64 noundef %0) unnamed_addr #3 !dbg !14105 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14107, metadata !DIExpression()), !dbg !14108
  call void @llvm.dbg.value(metadata i64 %0, metadata !14109, metadata !DIExpression()), !dbg !14124
  call void @llvm.dbg.value(metadata i32 1000, metadata !14112, metadata !DIExpression()), !dbg !14124
  call void @llvm.dbg.value(metadata i32 10000, metadata !14113, metadata !DIExpression()), !dbg !14124
  call void @llvm.dbg.value(metadata i8 1, metadata !14114, metadata !DIExpression()), !dbg !14124
  call void @llvm.dbg.value(metadata i8 0, metadata !14115, metadata !DIExpression()), !dbg !14124
  call void @llvm.dbg.value(metadata i8 1, metadata !14116, metadata !DIExpression()), !dbg !14124
  call void @llvm.dbg.value(metadata i8 0, metadata !14117, metadata !DIExpression()), !dbg !14124
  call void @llvm.dbg.value(metadata i8 1, metadata !14118, metadata !DIExpression()), !dbg !14124
  call void @llvm.dbg.value(metadata i8 0, metadata !14119, metadata !DIExpression()), !dbg !14124
  call void @llvm.dbg.value(metadata i64 0, metadata !14120, metadata !DIExpression()), !dbg !14124
  call void @llvm.dbg.value(metadata i64 0, metadata !14120, metadata !DIExpression()), !dbg !14124
  %2 = mul i64 %0, 10, !dbg !14126
  ret i64 %2, !dbg !14132
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #10 !dbg !14133 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !14135, metadata !DIExpression()), !dbg !14139
  call void @llvm.dbg.value(metadata i8* %1, metadata !14136, metadata !DIExpression()), !dbg !14139
  call void @llvm.dbg.value(metadata i8* %2, metadata !14137, metadata !DIExpression()), !dbg !14139
  call void @llvm.dbg.value(metadata i8* %3, metadata !14138, metadata !DIExpression()), !dbg !14139
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14140
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !14141
  %7 = load i8, i8* %6, align 4, !dbg !14142
  %8 = or i8 %7, 4, !dbg !14142
  store i8 %8, i8* %6, align 4, !dbg !14142
  tail call void @z_thread_essential_clear() #24, !dbg !14143
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !14144
  unreachable, !dbg !14144
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !14145 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14150, metadata !DIExpression()), !dbg !14152
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !14153
  %3 = load i32, i32* %2, align 4, !dbg !14153
  call void @llvm.dbg.value(metadata i32 %3, metadata !14151, metadata !DIExpression()), !dbg !14152
  %4 = icmp eq i32 %3, 0, !dbg !14154
  br i1 %4, label %10, label %5, !dbg !14156

5:                                                ; preds = %1
  %6 = and i32 %3, 3, !dbg !14157
  %7 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !14160
  %8 = zext i8 %7 to i32, !dbg !14161
  %9 = icmp eq i32 %6, %8, !dbg !14162
  br i1 %9, label %11, label %10, !dbg !14163

10:                                               ; preds = %5, %1
  br label %11, !dbg !14164

11:                                               ; preds = %5, %10
  %12 = phi i1 [ true, %10 ], [ false, %5 ], !dbg !14152
  ret i1 %12, !dbg !14165
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* nocapture noundef %0) local_unnamed_addr #9 !dbg !14166 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14168, metadata !DIExpression()), !dbg !14169
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !14170
  %3 = load i32, i32* %2, align 4, !dbg !14170
  %4 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !14172
  %5 = zext i8 %4 to i32, !dbg !14173
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14174
  %7 = ptrtoint %struct.k_thread* %6 to i32, !dbg !14175
  %8 = or i32 %7, %5, !dbg !14176
  %9 = icmp eq i32 %3, %8, !dbg !14177
  br i1 %9, label %10, label %11, !dbg !14178

10:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !14179
  br label %11, !dbg !14180

11:                                               ; preds = %1, %10
  ret i1 %9, !dbg !14181
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_spin_lock_set_owner(%struct.k_spinlock* nocapture noundef writeonly %0) local_unnamed_addr #9 !dbg !14182 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14186, metadata !DIExpression()), !dbg !14187
  %2 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !14188
  %3 = zext i8 %2 to i32, !dbg !14189
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14190
  %5 = ptrtoint %struct.k_thread* %4 to i32, !dbg !14191
  %6 = or i32 %5, %3, !dbg !14192
  %7 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !14193
  store i32 %6, i32* %7, align 4, !dbg !14194
  ret void, !dbg !14195
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #3 !dbg !14196 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14200, metadata !DIExpression()), !dbg !14201
  ret i32 -134, !dbg !14202
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #3 !dbg !14203 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14207, metadata !DIExpression()), !dbg !14209
  call void @llvm.dbg.value(metadata i32 %1, metadata !14208, metadata !DIExpression()), !dbg !14209
  ret i32 -134, !dbg !14210
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct._cpu_arch* noundef readnone %1) local_unnamed_addr #3 !dbg !14211 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14218, metadata !DIExpression()), !dbg !14220
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %1, metadata !14219, metadata !DIExpression()), !dbg !14220
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !14221
  %4 = icmp eq %struct._cpu_arch* %1, null
  %5 = or i1 %3, %4, !dbg !14223
  %6 = select i1 %5, i32 -22, i32 0, !dbg !14220
  ret i32 %6, !dbg !14224
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct._cpu_arch* noundef readnone %0) local_unnamed_addr #3 !dbg !14225 {
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %0, metadata !14229, metadata !DIExpression()), !dbg !14230
  %2 = icmp eq %struct._cpu_arch* %0, null, !dbg !14231
  %3 = select i1 %2, i32 -22, i32 0, !dbg !14230
  ret i32 %3, !dbg !14233
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !14234 {
  tail call void @sys_clock_idle_exit() #25, !dbg !14236
  ret void, !dbg !14237
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #10 !dbg !14238 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14240, metadata !DIExpression()), !dbg !14243
  call void @llvm.dbg.value(metadata i8* %1, metadata !14241, metadata !DIExpression()), !dbg !14243
  call void @llvm.dbg.value(metadata i8* %2, metadata !14242, metadata !DIExpression()), !dbg !14243
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14244
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !14244
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !14244
  %7 = load i8, i8* %6, align 2, !dbg !14244
  %8 = icmp sgt i8 %7, -1, !dbg !14244
  br i1 %8, label %10, label %9, !dbg !14247

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.245, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.247, i32 0, i32 0), i32 noundef 39) #25, !dbg !14248
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.247, i32 0, i32 0), i32 noundef 39) #25, !dbg !14248
  unreachable, !dbg !14248

10:                                               ; preds = %3, %10
  %11 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14250, !srcloc !14257
  call void @llvm.dbg.value(metadata i32 undef, metadata !14253, metadata !DIExpression()) #23, !dbg !14258
  call void @llvm.dbg.value(metadata i32 undef, metadata !14254, metadata !DIExpression()) #23, !dbg !14258
  tail call fastcc void @k_cpu_idle() #24, !dbg !14259
  br label %10, !dbg !14260, !llvm.loop !14261
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !14263 {
  tail call void @arch_cpu_idle() #25, !dbg !14264
  ret void, !dbg !14265
}

; Function Attrs: optsize
declare !dbg !14266 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_mutex_init(%struct.k_mutex* noundef %0) local_unnamed_addr #7 !dbg !14267 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !14278, metadata !DIExpression()), !dbg !14279
  %2 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !14280
  store %struct.k_thread* null, %struct.k_thread** %2, align 4, !dbg !14281
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !14282
  store i32 0, i32* %3, align 4, !dbg !14283
  %4 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !14284
  tail call fastcc void @z_waitq_init.248(%struct._wait_q_t* noundef %4) #24, !dbg !14285
  ret i32 0, !dbg !14286
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.248(%struct._wait_q_t* noundef %0) unnamed_addr #7 !dbg !14287 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14291, metadata !DIExpression()), !dbg !14292
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !14293
  tail call fastcc void @sys_dlist_init.249(%struct._dnode* noundef %2) #24, !dbg !14294
  ret void, !dbg !14295
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.249(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !14296 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14301, metadata !DIExpression()), !dbg !14302
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14303
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14304
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14305
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14306
  ret void, !dbg !14307
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !14308 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14317, metadata !DIExpression()), !dbg !14329
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !14316, metadata !DIExpression()), !dbg !14329
  call void @llvm.dbg.value(metadata i8 0, metadata !14324, metadata !DIExpression()), !dbg !14329
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14330, !srcloc !14339
  call void @llvm.dbg.value(metadata i32 %4, metadata !14333, metadata !DIExpression()) #23, !dbg !14340
  %5 = icmp eq i32 %4, 0, !dbg !14341
  br i1 %5, label %7, label %6, !dbg !14342

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.252, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.253, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 101) #25, !dbg !14343
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3.255, i32 0, i32 0)) #25, !dbg !14343
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 101) #25, !dbg !14343
  unreachable, !dbg !14343

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.256, metadata !14345, metadata !DIExpression()) #23, !dbg !14352
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14354, !srcloc !14360
  call void @llvm.dbg.value(metadata i32 undef, metadata !14357, metadata !DIExpression()) #23, !dbg !14361
  call void @llvm.dbg.value(metadata i32 undef, metadata !14358, metadata !DIExpression()) #23, !dbg !14361
  call void @llvm.dbg.value(metadata i32 undef, metadata !14351, metadata !DIExpression()) #23, !dbg !14352
  %9 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.256) #25, !dbg !14362
  br i1 %9, label %11, label %10, !dbg !14365

10:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.252, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.257, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.258, i32 0, i32 0), i32 noundef 148) #25, !dbg !14366
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.259, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.256) #25, !dbg !14366
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.258, i32 0, i32 0), i32 noundef 148) #25, !dbg !14366
  unreachable, !dbg !14366

11:                                               ; preds = %7
  %12 = extractvalue { i32, i32 } %8, 0, !dbg !14354
  call void @llvm.dbg.value(metadata i32 %12, metadata !14357, metadata !DIExpression()) #23, !dbg !14361
  call void @llvm.dbg.value(metadata i32 %12, metadata !14351, metadata !DIExpression()) #23, !dbg !14352
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.256) #25, !dbg !14368
  call void @llvm.dbg.value(metadata i32 %12, metadata !14319, metadata !DIExpression()), !dbg !14329
  %13 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !14369
  %14 = load i32, i32* %13, align 4, !dbg !14369
  %15 = icmp eq i32 %14, 0, !dbg !14369
  br i1 %15, label %21, label %16, !dbg !14369

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !14369
  %18 = load %struct.k_thread*, %struct.k_thread** %17, align 4, !dbg !14369
  %19 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14369
  %20 = icmp eq %struct.k_thread* %18, %19, !dbg !14369
  br i1 %20, label %27, label %39, !dbg !14371, !prof !14372

21:                                               ; preds = %11
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14373
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %22, i32 0, i32 0, i32 4, !dbg !14375
  %24 = bitcast %union.anon.2* %23 to i8*, !dbg !14375
  %25 = load i8, i8* %24, align 2, !dbg !14375
  %26 = sext i8 %25 to i32, !dbg !14373
  br label %30, !dbg !14376

27:                                               ; preds = %16
  %28 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !14377
  %29 = load i32, i32* %28, align 4, !dbg !14377
  br label %30, !dbg !14376

30:                                               ; preds = %27, %21
  %31 = phi %struct.k_thread* [ %22, %21 ], [ %18, %27 ], !dbg !14378
  %32 = phi i32 [ %26, %21 ], [ %29, %27 ], !dbg !14376
  %33 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !14379
  store i32 %32, i32* %33, align 4, !dbg !14380
  %34 = add i32 %14, 1, !dbg !14381
  store i32 %34, i32* %13, align 4, !dbg !14381
  %35 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !14382
  store %struct.k_thread* %31, %struct.k_thread** %35, align 4, !dbg !14383
  call void @llvm.dbg.value(metadata i32 undef, metadata !14384, metadata !DIExpression()) #23, !dbg !14390
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.256, metadata !14389, metadata !DIExpression()) #23, !dbg !14390
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.256) #25, !dbg !14392
  br i1 %36, label %38, label %37, !dbg !14395

37:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.252, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.258, i32 0, i32 0), i32 noundef 194) #25, !dbg !14396
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.261, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.256) #25, !dbg !14396
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.258, i32 0, i32 0), i32 noundef 194) #25, !dbg !14396
  unreachable, !dbg !14396

38:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %12, metadata !14384, metadata !DIExpression()) #23, !dbg !14390
  call void @llvm.dbg.value(metadata i32 %12, metadata !14398, metadata !DIExpression()) #23, !dbg !14401
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !14403, !srcloc !14404
  br label %97, !dbg !14405

39:                                               ; preds = %16
  %40 = icmp eq i64 %3, 0, !dbg !14406
  br i1 %40, label %41, label %45, !dbg !14408, !prof !14409

41:                                               ; preds = %39
  call void @llvm.dbg.value(metadata i32 undef, metadata !14384, metadata !DIExpression()) #23, !dbg !14410
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.256, metadata !14389, metadata !DIExpression()) #23, !dbg !14410
  %42 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.256) #25, !dbg !14413
  br i1 %42, label %44, label %43, !dbg !14414

43:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.252, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.258, i32 0, i32 0), i32 noundef 194) #25, !dbg !14415
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.261, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.256) #25, !dbg !14415
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.258, i32 0, i32 0), i32 noundef 194) #25, !dbg !14415
  unreachable, !dbg !14415

44:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %12, metadata !14384, metadata !DIExpression()) #23, !dbg !14410
  call void @llvm.dbg.value(metadata i32 %12, metadata !14398, metadata !DIExpression()) #23, !dbg !14416
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !14418, !srcloc !14404
  br label %97, !dbg !14419

45:                                               ; preds = %39
  %46 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %19, i32 0, i32 0, i32 4, !dbg !14420
  %47 = bitcast %union.anon.2* %46 to i8*, !dbg !14420
  %48 = load i8, i8* %47, align 2, !dbg !14420
  %49 = sext i8 %48 to i32, !dbg !14421
  %50 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %18, i32 0, i32 0, i32 4, !dbg !14422
  %51 = bitcast %union.anon.2* %50 to i8*, !dbg !14422
  %52 = load i8, i8* %51, align 2, !dbg !14422
  %53 = sext i8 %52 to i32, !dbg !14423
  %54 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %49, i32 noundef %53) #24, !dbg !14424
  call void @llvm.dbg.value(metadata i32 %54, metadata !14318, metadata !DIExpression()), !dbg !14329
  %55 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %54, i32 noundef %53) #24, !dbg !14425
  br i1 %55, label %56, label %58, !dbg !14427

56:                                               ; preds = %45
  %57 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %54) #24, !dbg !14428
  call void @llvm.dbg.value(metadata i1 %57, metadata !14324, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14329
  br label %58, !dbg !14430

58:                                               ; preds = %56, %45
  %59 = phi i1 [ %57, %56 ], [ false, %45 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !14324, metadata !DIExpression()), !dbg !14329
  %60 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !14431
  %61 = insertvalue [1 x i32] poison, i32 %12, 0, !dbg !14432
  %62 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock.256, [1 x i32] %61, %struct._wait_q_t* noundef %60, [1 x i64] %1) #25, !dbg !14432
  call void @llvm.dbg.value(metadata i32 %62, metadata !14325, metadata !DIExpression()), !dbg !14329
  %63 = icmp eq i32 %62, 0, !dbg !14433
  br i1 %63, label %97, label %64, !dbg !14435

64:                                               ; preds = %58
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.256, metadata !14345, metadata !DIExpression()) #23, !dbg !14436
  %65 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14438, !srcloc !14360
  call void @llvm.dbg.value(metadata i32 undef, metadata !14357, metadata !DIExpression()) #23, !dbg !14440
  call void @llvm.dbg.value(metadata i32 undef, metadata !14358, metadata !DIExpression()) #23, !dbg !14440
  call void @llvm.dbg.value(metadata i32 undef, metadata !14351, metadata !DIExpression()) #23, !dbg !14436
  %66 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.256) #25, !dbg !14441
  br i1 %66, label %68, label %67, !dbg !14442

67:                                               ; preds = %64
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.252, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.257, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.258, i32 0, i32 0), i32 noundef 148) #25, !dbg !14443
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.259, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.256) #25, !dbg !14443
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.258, i32 0, i32 0), i32 noundef 148) #25, !dbg !14443
  unreachable, !dbg !14443

68:                                               ; preds = %64
  %69 = extractvalue { i32, i32 } %65, 0, !dbg !14438
  call void @llvm.dbg.value(metadata i32 %69, metadata !14357, metadata !DIExpression()) #23, !dbg !14440
  call void @llvm.dbg.value(metadata i32 %69, metadata !14351, metadata !DIExpression()) #23, !dbg !14436
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.256) #25, !dbg !14444
  call void @llvm.dbg.value(metadata i32 %69, metadata !14319, metadata !DIExpression()), !dbg !14329
  %70 = load %struct.k_thread*, %struct.k_thread** %17, align 4, !dbg !14445
  %71 = icmp eq %struct.k_thread* %70, null, !dbg !14445
  br i1 %71, label %90, label %72, !dbg !14446, !prof !14409

72:                                               ; preds = %68
  %73 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef nonnull %60) #24, !dbg !14447
  call void @llvm.dbg.value(metadata %struct.k_thread* %73, metadata !14326, metadata !DIExpression()), !dbg !14448
  %74 = icmp eq %struct.k_thread* %73, null, !dbg !14449
  br i1 %74, label %83, label %75, !dbg !14450

75:                                               ; preds = %72
  %76 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %73, i32 0, i32 0, i32 4, !dbg !14451
  %77 = bitcast %union.anon.2* %76 to i8*, !dbg !14451
  %78 = load i8, i8* %77, align 2, !dbg !14451
  %79 = sext i8 %78 to i32, !dbg !14452
  %80 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !14453
  %81 = load i32, i32* %80, align 4, !dbg !14453
  %82 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %79, i32 noundef %81) #24, !dbg !14454
  br label %86, !dbg !14450

83:                                               ; preds = %72
  %84 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !14455
  %85 = load i32, i32* %84, align 4, !dbg !14455
  br label %86, !dbg !14450

86:                                               ; preds = %83, %75
  %87 = phi i32 [ %82, %75 ], [ %85, %83 ], !dbg !14450
  call void @llvm.dbg.value(metadata i32 %87, metadata !14318, metadata !DIExpression()), !dbg !14329
  %88 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %87) #24, !dbg !14456
  %89 = select i1 %88, i1 true, i1 %59, !dbg !14457
  call void @llvm.dbg.value(metadata i1 %89, metadata !14324, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14329
  call void @llvm.dbg.value(metadata i8 poison, metadata !14324, metadata !DIExpression()), !dbg !14329
  br i1 %89, label %91, label %93, !dbg !14458

90:                                               ; preds = %68
  call void @llvm.dbg.value(metadata i8 poison, metadata !14324, metadata !DIExpression()), !dbg !14329
  br i1 %59, label %91, label %93, !dbg !14458

91:                                               ; preds = %86, %90
  %92 = insertvalue [1 x i32] poison, i32 %69, 0, !dbg !14459
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.256, [1 x i32] %92) #25, !dbg !14459
  br label %97, !dbg !14462

93:                                               ; preds = %86, %90
  call void @llvm.dbg.value(metadata i32 undef, metadata !14384, metadata !DIExpression()) #23, !dbg !14463
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.256, metadata !14389, metadata !DIExpression()) #23, !dbg !14463
  %94 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.256) #25, !dbg !14466
  br i1 %94, label %96, label %95, !dbg !14467

95:                                               ; preds = %93
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.252, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.258, i32 0, i32 0), i32 noundef 194) #25, !dbg !14468
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.261, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.256) #25, !dbg !14468
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.258, i32 0, i32 0), i32 noundef 194) #25, !dbg !14468
  unreachable, !dbg !14468

96:                                               ; preds = %93
  call void @llvm.dbg.value(metadata i32 %69, metadata !14384, metadata !DIExpression()) #23, !dbg !14463
  call void @llvm.dbg.value(metadata i32 %69, metadata !14398, metadata !DIExpression()) #23, !dbg !14469
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %69) #23, !dbg !14471, !srcloc !14404
  br label %97

97:                                               ; preds = %58, %91, %96, %44, %38
  %98 = phi i32 [ 0, %38 ], [ -16, %44 ], [ 0, %58 ], [ -11, %91 ], [ -11, %96 ], !dbg !14329
  ret i32 %98, !dbg !14472
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @new_prio_for_inheritance(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !14473 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14477, metadata !DIExpression()), !dbg !14480
  call void @llvm.dbg.value(metadata i32 %1, metadata !14478, metadata !DIExpression()), !dbg !14480
  %3 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) #24, !dbg !14481
  %4 = select i1 %3, i32 %0, i32 %1, !dbg !14481
  call void @llvm.dbg.value(metadata i32 %4, metadata !14479, metadata !DIExpression()), !dbg !14480
  %5 = tail call fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %4) #24, !dbg !14482
  call void @llvm.dbg.value(metadata i32 %5, metadata !14479, metadata !DIExpression()), !dbg !14480
  ret i32 %5, !dbg !14483
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !14484 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14488, metadata !DIExpression()), !dbg !14490
  call void @llvm.dbg.value(metadata i32 %1, metadata !14489, metadata !DIExpression()), !dbg !14490
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #24, !dbg !14491
  ret i1 %3, !dbg !14492
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !14493 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !14497, metadata !DIExpression()), !dbg !14499
  call void @llvm.dbg.value(metadata i32 %1, metadata !14498, metadata !DIExpression()), !dbg !14499
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !14500
  %4 = load %struct.k_thread*, %struct.k_thread** %3, align 4, !dbg !14500
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !14502
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !14502
  %7 = load i8, i8* %6, align 2, !dbg !14502
  %8 = sext i8 %7 to i32, !dbg !14503
  %9 = icmp eq i32 %8, %1, !dbg !14504
  br i1 %9, label %12, label %10, !dbg !14505

10:                                               ; preds = %2
  %11 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef nonnull %4, i32 noundef %1) #25, !dbg !14506
  br label %12, !dbg !14508

12:                                               ; preds = %2, %10
  %13 = phi i1 [ %11, %10 ], [ false, %2 ], !dbg !14499
  ret i1 %13, !dbg !14509
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef readonly %0) unnamed_addr #8 !dbg !14510 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14514, metadata !DIExpression()), !dbg !14515
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !14516
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #24, !dbg !14517
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !14518
  ret %struct.k_thread* %4, !dbg !14519
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !14520 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14524, metadata !DIExpression()), !dbg !14525
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #24, !dbg !14526
  br i1 %2, label %6, label %3, !dbg !14526

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14527
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14527
  br label %6, !dbg !14526

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14526
  ret %struct._dnode* %7, !dbg !14528
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !14529 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14533, metadata !DIExpression()), !dbg !14534
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14535
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14535
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !14536
  ret i1 %4, !dbg !14537
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !14538 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14540, metadata !DIExpression()), !dbg !14542
  call void @llvm.dbg.value(metadata i32 %1, metadata !14541, metadata !DIExpression()), !dbg !14542
  %3 = icmp slt i32 %0, %1, !dbg !14543
  ret i1 %3, !dbg !14544
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %0) unnamed_addr #3 !dbg !14545 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14547, metadata !DIExpression()), !dbg !14548
  %2 = tail call fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) #24, !dbg !14549
  %3 = select i1 %2, i32 %0, i32 -127, !dbg !14549
  ret i32 %3, !dbg !14550
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) unnamed_addr #3 !dbg !14551 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14555, metadata !DIExpression()), !dbg !14556
  %2 = icmp sgt i32 %0, -128, !dbg !14557
  ret i1 %2, !dbg !14558
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) local_unnamed_addr #1 !dbg !14559 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !14561, metadata !DIExpression()), !dbg !14565
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14566, !srcloc !14339
  call void @llvm.dbg.value(metadata i32 %2, metadata !14333, metadata !DIExpression()) #23, !dbg !14571
  %3 = icmp eq i32 %2, 0, !dbg !14572
  br i1 %3, label %5, label %4, !dbg !14573

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.252, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.253, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 205) #25, !dbg !14574
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3.255, i32 0, i32 0)) #25, !dbg !14574
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 205) #25, !dbg !14574
  unreachable, !dbg !14574

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !14576
  %7 = load %struct.k_thread*, %struct.k_thread** %6, align 4, !dbg !14576
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !14576
  br i1 %8, label %41, label %9, !dbg !14578

9:                                                ; preds = %5
  %10 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14579
  %11 = icmp eq %struct.k_thread* %7, %10, !dbg !14579
  br i1 %11, label %12, label %41, !dbg !14581

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !14582
  %14 = load i32, i32* %13, align 4, !dbg !14582
  switch i32 %14, label %16 [
    i32 0, label %15
    i32 1, label %18
  ], !dbg !14585

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.252, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 229) #25, !dbg !14586
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 229) #25, !dbg !14586
  unreachable, !dbg !14586

16:                                               ; preds = %12
  %17 = add i32 %14, -1, !dbg !14588
  store i32 %17, i32* %13, align 4, !dbg !14588
  br label %41, !dbg !14591

18:                                               ; preds = %12
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.256, metadata !14345, metadata !DIExpression()) #23, !dbg !14592
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14594, !srcloc !14360
  call void @llvm.dbg.value(metadata i32 undef, metadata !14357, metadata !DIExpression()) #23, !dbg !14596
  call void @llvm.dbg.value(metadata i32 undef, metadata !14358, metadata !DIExpression()) #23, !dbg !14596
  call void @llvm.dbg.value(metadata i32 undef, metadata !14351, metadata !DIExpression()) #23, !dbg !14592
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.256) #25, !dbg !14597
  br i1 %20, label %22, label %21, !dbg !14598

21:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.252, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.257, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.258, i32 0, i32 0), i32 noundef 148) #25, !dbg !14599
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.259, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.256) #25, !dbg !14599
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.258, i32 0, i32 0), i32 noundef 148) #25, !dbg !14599
  unreachable, !dbg !14599

22:                                               ; preds = %18
  %23 = extractvalue { i32, i32 } %19, 0, !dbg !14594
  call void @llvm.dbg.value(metadata i32 %23, metadata !14357, metadata !DIExpression()) #23, !dbg !14596
  call void @llvm.dbg.value(metadata i32 %23, metadata !14351, metadata !DIExpression()) #23, !dbg !14592
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.256) #25, !dbg !14600
  call void @llvm.dbg.value(metadata i32 %23, metadata !14563, metadata !DIExpression()), !dbg !14565
  %24 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !14601
  %25 = load i32, i32* %24, align 4, !dbg !14601
  %26 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %25) #24, !dbg !14602
  %27 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !14603
  %28 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %27) #25, !dbg !14604
  call void @llvm.dbg.value(metadata %struct.k_thread* %28, metadata !14562, metadata !DIExpression()), !dbg !14565
  store %struct.k_thread* %28, %struct.k_thread** %6, align 4, !dbg !14605
  %29 = icmp eq %struct.k_thread* %28, null, !dbg !14606
  br i1 %29, label %37, label %30, !dbg !14608

30:                                               ; preds = %22
  %31 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 0, i32 4, !dbg !14609
  %32 = bitcast %union.anon.2* %31 to i8*, !dbg !14609
  %33 = load i8, i8* %32, align 2, !dbg !14609
  %34 = sext i8 %33 to i32, !dbg !14611
  store i32 %34, i32* %24, align 4, !dbg !14612
  call void @llvm.dbg.value(metadata %struct.k_thread* %28, metadata !14613, metadata !DIExpression()), !dbg !14619
  call void @llvm.dbg.value(metadata i32 0, metadata !14618, metadata !DIExpression()), !dbg !14619
  %35 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 8, i32 1, !dbg !14621
  store i32 0, i32* %35, align 4, !dbg !14622
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %28) #25, !dbg !14623
  %36 = insertvalue [1 x i32] poison, i32 %23, 0, !dbg !14624
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.256, [1 x i32] %36) #25, !dbg !14624
  br label %41, !dbg !14625

37:                                               ; preds = %22
  store i32 0, i32* %13, align 4, !dbg !14626
  call void @llvm.dbg.value(metadata i32 undef, metadata !14384, metadata !DIExpression()) #23, !dbg !14628
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.256, metadata !14389, metadata !DIExpression()) #23, !dbg !14628
  %38 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.256) #25, !dbg !14630
  br i1 %38, label %40, label %39, !dbg !14631

39:                                               ; preds = %37
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.252, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.258, i32 0, i32 0), i32 noundef 194) #25, !dbg !14632
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.261, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.256) #25, !dbg !14632
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.258, i32 0, i32 0), i32 noundef 194) #25, !dbg !14632
  unreachable, !dbg !14632

40:                                               ; preds = %37
  call void @llvm.dbg.value(metadata i32 %23, metadata !14384, metadata !DIExpression()) #23, !dbg !14628
  call void @llvm.dbg.value(metadata i32 %23, metadata !14398, metadata !DIExpression()) #23, !dbg !14633
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #23, !dbg !14635, !srcloc !14404
  br label %41

41:                                               ; preds = %30, %40, %16, %9, %5
  %42 = phi i32 [ -22, %5 ], [ -1, %9 ], [ 0, %16 ], [ 0, %40 ], [ 0, %30 ], !dbg !14565
  ret i32 %42, !dbg !14636
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !14637 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14641, metadata !DIExpression()), !dbg !14645
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14642, metadata !DIExpression()), !dbg !14645
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14646
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !14646
  %5 = load i8, i8* %4, align 2, !dbg !14646
  call void @llvm.dbg.value(metadata i8 %5, metadata !14643, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14645
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !14647
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !14647
  %8 = load i8, i8* %7, align 2, !dbg !14647
  call void @llvm.dbg.value(metadata i8 %8, metadata !14644, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14645
  %9 = icmp eq i8 %8, %5, !dbg !14648
  %10 = sext i8 %5 to i32, !dbg !14650
  %11 = sext i8 %8 to i32, !dbg !14650
  %12 = sub nsw i32 %11, %10, !dbg !14650
  %13 = select i1 %9, i32 0, i32 %12, !dbg !14650
  ret i32 %13, !dbg !14651
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !14652 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14656, metadata !DIExpression()), !dbg !14657
  %2 = tail call fastcc i32 @slice_time() #24, !dbg !14658
  %3 = icmp eq i32 %2, 0, !dbg !14660
  br i1 %3, label %8, label %4, !dbg !14661

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #25, !dbg !14662
  %6 = add i32 %5, %2, !dbg !14664
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14665
  %7 = tail call fastcc i32 @slice_time() #24, !dbg !14666
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #25, !dbg !14667
  br label %8, !dbg !14668

8:                                                ; preds = %4, %1
  ret void, !dbg !14669
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #8 !dbg !14670 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14674, metadata !DIExpression()), !dbg !14676
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !14677
  call void @llvm.dbg.value(metadata i32 %1, metadata !14675, metadata !DIExpression()), !dbg !14676
  ret i32 %1, !dbg !14678
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14679 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14683, metadata !DIExpression()), !dbg !14692
  call void @llvm.dbg.value(metadata i32 %1, metadata !14684, metadata !DIExpression()), !dbg !14692
  call void @llvm.dbg.value(metadata i32 0, metadata !14685, metadata !DIExpression()), !dbg !14693
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14694, metadata !DIExpression()) #23, !dbg !14701
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14703, !srcloc !14709
  call void @llvm.dbg.value(metadata i32 undef, metadata !14706, metadata !DIExpression()) #23, !dbg !14710
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !14710
  call void @llvm.dbg.value(metadata i32 undef, metadata !14700, metadata !DIExpression()) #23, !dbg !14701
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14711
  br i1 %4, label %6, label %5, !dbg !14714

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 148) #25, !dbg !14715
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.268, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14715
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 148) #25, !dbg !14715
  unreachable, !dbg !14715

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14706, metadata !DIExpression()) #23, !dbg !14710
  call void @llvm.dbg.value(metadata i32 undef, metadata !14700, metadata !DIExpression()) #23, !dbg !14701
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14717
  call void @llvm.dbg.value(metadata i32 undef, metadata !14691, metadata !DIExpression()), !dbg !14693
  call void @llvm.dbg.value(metadata i32 undef, metadata !14685, metadata !DIExpression()), !dbg !14693
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14718
  %7 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #24, !dbg !14721
  %8 = icmp sgt i32 %0, 0, !dbg !14722
  %9 = icmp sgt i32 %7, 2, !dbg !14724
  %10 = select i1 %9, i32 %7, i32 2, !dbg !14724
  %11 = select i1 %8, i32 %10, i32 %7, !dbg !14724
  store i32 %11, i32* @slice_ticks, align 4, !dbg !14725
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !14726
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14727
  call void @llvm.dbg.value(metadata i32 undef, metadata !14728, metadata !DIExpression()) #23, !dbg !14734
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14733, metadata !DIExpression()) #23, !dbg !14734
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14736
  br i1 %12, label %14, label %13, !dbg !14739

13:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 194) #25, !dbg !14740
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.270, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14740
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 194) #25, !dbg !14740
  unreachable, !dbg !14740

14:                                               ; preds = %6
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !14703
  call void @llvm.dbg.value(metadata i32 %15, metadata !14706, metadata !DIExpression()) #23, !dbg !14710
  call void @llvm.dbg.value(metadata i32 %15, metadata !14700, metadata !DIExpression()) #23, !dbg !14701
  call void @llvm.dbg.value(metadata i32 %15, metadata !14691, metadata !DIExpression()), !dbg !14693
  call void @llvm.dbg.value(metadata i32 undef, metadata !14728, metadata !DIExpression()) #23, !dbg !14734
  call void @llvm.dbg.value(metadata i32 undef, metadata !14742, metadata !DIExpression()) #23, !dbg !14745
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !14747, !srcloc !14748
  call void @llvm.dbg.value(metadata i32 1, metadata !14685, metadata !DIExpression()), !dbg !14693
  call void @llvm.dbg.value(metadata i32 undef, metadata !14685, metadata !DIExpression()), !dbg !14693
  ret void, !dbg !14749
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #3 !dbg !14750 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14752, metadata !DIExpression()), !dbg !14753
  call void @llvm.dbg.value(metadata i32 %0, metadata !14754, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14769
  call void @llvm.dbg.value(metadata i32 1000, metadata !14757, metadata !DIExpression()), !dbg !14769
  call void @llvm.dbg.value(metadata i32 10000, metadata !14758, metadata !DIExpression()), !dbg !14769
  call void @llvm.dbg.value(metadata i8 1, metadata !14759, metadata !DIExpression()), !dbg !14769
  call void @llvm.dbg.value(metadata i1 true, metadata !14760, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14769
  call void @llvm.dbg.value(metadata i1 true, metadata !14761, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14769
  call void @llvm.dbg.value(metadata i8 0, metadata !14762, metadata !DIExpression()), !dbg !14769
  call void @llvm.dbg.value(metadata i1 true, metadata !14763, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14769
  call void @llvm.dbg.value(metadata i1 false, metadata !14764, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14769
  call void @llvm.dbg.value(metadata i64 0, metadata !14765, metadata !DIExpression()), !dbg !14769
  call void @llvm.dbg.value(metadata i64 0, metadata !14765, metadata !DIExpression()), !dbg !14769
  %2 = mul i32 %0, 10, !dbg !14771
  ret i32 %2, !dbg !14777
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !14778 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14780, metadata !DIExpression()), !dbg !14782
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14694, metadata !DIExpression()) #23, !dbg !14783
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14785, !srcloc !14709
  call void @llvm.dbg.value(metadata i32 undef, metadata !14706, metadata !DIExpression()) #23, !dbg !14787
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !14787
  call void @llvm.dbg.value(metadata i32 undef, metadata !14700, metadata !DIExpression()) #23, !dbg !14783
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14788
  br i1 %3, label %5, label %4, !dbg !14789

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 148) #25, !dbg !14790
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.268, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14790
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 148) #25, !dbg !14790
  unreachable, !dbg !14790

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14785
  call void @llvm.dbg.value(metadata i32 %6, metadata !14706, metadata !DIExpression()) #23, !dbg !14787
  call void @llvm.dbg.value(metadata i32 %6, metadata !14700, metadata !DIExpression()) #23, !dbg !14783
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14791
  call void @llvm.dbg.value(metadata i32 %6, metadata !14781, metadata !DIExpression()), !dbg !14782
  %7 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14792
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14794
  %9 = icmp eq %struct.k_thread* %7, %8, !dbg !14795
  br i1 %9, label %10, label %14, !dbg !14796

10:                                               ; preds = %5
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14797
  call void @llvm.dbg.value(metadata i32 undef, metadata !14728, metadata !DIExpression()) #23, !dbg !14799
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14733, metadata !DIExpression()) #23, !dbg !14799
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14801
  br i1 %11, label %13, label %12, !dbg !14802

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 194) #25, !dbg !14803
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.270, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14803
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 194) #25, !dbg !14803
  unreachable, !dbg !14803

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %6, metadata !14728, metadata !DIExpression()) #23, !dbg !14799
  call void @llvm.dbg.value(metadata i32 %6, metadata !14742, metadata !DIExpression()) #23, !dbg !14804
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !14806, !srcloc !14748
  br label %33, !dbg !14807

14:                                               ; preds = %5
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14808
  %15 = tail call fastcc i32 @slice_time() #24, !dbg !14809
  %16 = icmp eq i32 %15, 0, !dbg !14809
  br i1 %16, label %27, label %17, !dbg !14811

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %8) #24, !dbg !14812
  br i1 %18, label %19, label %27, !dbg !14813

19:                                               ; preds = %17
  %20 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14814
  %21 = icmp sgt i32 %20, %0, !dbg !14817
  br i1 %21, label %25, label %22, !dbg !14818

22:                                               ; preds = %19
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14819
  %24 = tail call fastcc i32 @slice_expired_locked([1 x i32] %23) #24, !dbg !14819
  call void @llvm.dbg.value(metadata i32 %24, metadata !14781, metadata !DIExpression()), !dbg !14782
  br label %28, !dbg !14821

25:                                               ; preds = %19
  %26 = sub nsw i32 %20, %0, !dbg !14822
  store i32 %26, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14822
  br label %28

27:                                               ; preds = %17, %14
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14824
  br label %28

28:                                               ; preds = %22, %25, %27
  %29 = phi i32 [ %24, %22 ], [ %6, %25 ], [ %6, %27 ], !dbg !14782
  call void @llvm.dbg.value(metadata i32 %29, metadata !14781, metadata !DIExpression()), !dbg !14782
  call void @llvm.dbg.value(metadata i32 undef, metadata !14728, metadata !DIExpression()) #23, !dbg !14826
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14733, metadata !DIExpression()) #23, !dbg !14826
  %30 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14828
  br i1 %30, label %32, label %31, !dbg !14829

31:                                               ; preds = %28
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 194) #25, !dbg !14830
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.270, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14830
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 194) #25, !dbg !14830
  unreachable, !dbg !14830

32:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %29, metadata !14728, metadata !DIExpression()) #23, !dbg !14826
  call void @llvm.dbg.value(metadata i32 %29, metadata !14742, metadata !DIExpression()) #23, !dbg !14831
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %29) #23, !dbg !14833, !srcloc !14748
  br label %33, !dbg !14834

33:                                               ; preds = %32, %13
  ret void, !dbg !14834
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #8 !dbg !14835 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14839, metadata !DIExpression()), !dbg !14841
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #24, !dbg !14842
  %3 = icmp eq i32 %2, 0, !dbg !14842
  br i1 %3, label %16, label %4, !dbg !14843

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !14844
  br i1 %5, label %16, label %6, !dbg !14845

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14846
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !14846
  %9 = load i8, i8* %8, align 2, !dbg !14846
  %10 = sext i8 %9 to i32, !dbg !14847
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !14848
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher.278(i32 noundef %10, i32 noundef %11) #24, !dbg !14849
  br i1 %12, label %16, label %13, !dbg !14850

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #24, !dbg !14851
  %15 = xor i1 %14, true, !dbg !14852
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !14841
  call void @llvm.dbg.value(metadata i1 %17, metadata !14840, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14841
  ret i1 %17, !dbg !14853
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !14854 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14858, metadata !DIExpression()), !dbg !14860
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14861
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14859, metadata !DIExpression()), !dbg !14860
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #24, !dbg !14862
  br i1 %3, label %5, label %4, !dbg !14864

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #24, !dbg !14865
  br label %5, !dbg !14867

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !14858, metadata !DIExpression()), !dbg !14860
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14868
  ret i32 %6, !dbg !14869
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14870 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14872, metadata !DIExpression()), !dbg !14874
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14875
  %3 = load i8, i8* %2, align 1, !dbg !14875
  call void @llvm.dbg.value(metadata i8 %3, metadata !14873, metadata !DIExpression()), !dbg !14874
  %4 = and i8 %3, 31, !dbg !14876
  %5 = icmp ne i8 %4, 0, !dbg !14877
  ret i1 %5, !dbg !14878
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14879 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14881, metadata !DIExpression()), !dbg !14882
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !14883
  br i1 %2, label %3, label %7, !dbg !14885

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14886, metadata !DIExpression()) #23, !dbg !14889
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14892
  %5 = load i8, i8* %4, align 1, !dbg !14893
  %6 = and i8 %5, 127, !dbg !14893
  store i8 %6, i8* %4, align 1, !dbg !14893
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14894, metadata !DIExpression()) #23, !dbg !14897
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14901
  br label %7, !dbg !14902

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14903, metadata !DIExpression()) #23, !dbg !14906
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14908
  %9 = load i8, i8* %8, align 1, !dbg !14909
  %10 = or i8 %9, -128, !dbg !14909
  store i8 %10, i8* %8, align 1, !dbg !14909
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14910, metadata !DIExpression()) #23, !dbg !14913
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14917, metadata !DIExpression()) #23, !dbg !14925
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14923, metadata !DIExpression()) #23, !dbg !14925
  %11 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !14927
  br i1 %11, label %12, label %13, !dbg !14930

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.272, i32 0, i32 0), i32 noundef 186) #25, !dbg !14931
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.272, i32 0, i32 0), i32 noundef 186) #25, !dbg !14931
  unreachable, !dbg !14931

13:                                               ; preds = %7
  %14 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.273(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14933
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !14924, metadata !DIExpression()) #23, !dbg !14925
  %15 = icmp eq %struct._dnode* %14, null, !dbg !14935
  br i1 %15, label %26, label %16, !dbg !14933

16:                                               ; preds = %13, %23
  %17 = phi %struct._dnode* [ %24, %23 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !14924, metadata !DIExpression()) #23, !dbg !14925
  %18 = bitcast %struct._dnode* %17 to %struct.k_thread*, !dbg !14937
  call void @llvm.dbg.value(metadata %struct.k_thread* %18, metadata !14924, metadata !DIExpression()) #23, !dbg !14925
  %19 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %18) #25, !dbg !14938
  %20 = icmp sgt i32 %19, 0, !dbg !14941
  br i1 %20, label %21, label %23, !dbg !14942

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14943
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %17, %struct._dnode* noundef %22) #25, !dbg !14945
  br label %28, !dbg !14946

23:                                               ; preds = %16
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %17) #25, !dbg !14935
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14924, metadata !DIExpression()) #23, !dbg !14925
  %25 = icmp eq %struct._dnode* %24, null, !dbg !14935
  br i1 %25, label %26, label %16, !dbg !14933, !llvm.loop !14947

26:                                               ; preds = %23, %13
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14949
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %27) #25, !dbg !14950
  br label %28, !dbg !14951

28:                                               ; preds = %21, %26
  %29 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14952
  %30 = icmp eq %struct.k_thread* %29, %0, !dbg !14953
  %31 = zext i1 %30 to i32, !dbg !14953
  tail call fastcc void @update_cache(i32 noundef %31) #24, !dbg !14954
  ret void, !dbg !14955
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14956 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14958, metadata !DIExpression()), !dbg !14959
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0, i32 noundef 128) #24, !dbg !14960
  ret i1 %2, !dbg !14961
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14962 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !14964, metadata !DIExpression()), !dbg !14966
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14965, metadata !DIExpression()), !dbg !14966
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !14967
  br i1 %3, label %4, label %5, !dbg !14970

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.272, i32 0, i32 0), i32 noundef 1139) #25, !dbg !14971
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.272, i32 0, i32 0), i32 noundef 1139) #25, !dbg !14971
  unreachable, !dbg !14971

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !14973
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %6) #24, !dbg !14974
  ret void, !dbg !14975
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #3 !dbg !14976 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14978, metadata !DIExpression()), !dbg !14979
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !14980
  ret i1 %2, !dbg !14981
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.273(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !14982 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14986, metadata !DIExpression()), !dbg !14987
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.276(%struct._dnode* noundef %0) #24, !dbg !14988
  br i1 %2, label %6, label %3, !dbg !14988

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14989
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14989
  br label %6, !dbg !14988

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14988
  ret %struct._dnode* %7, !dbg !14990
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !14991 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14995, metadata !DIExpression()), !dbg !14999
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14996, metadata !DIExpression()), !dbg !14999
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15000
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15000
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14997, metadata !DIExpression()), !dbg !14999
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15001
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !15002
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15003
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !15004
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15005
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15006
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15007
  ret void, !dbg !15008
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !15009 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15013, metadata !DIExpression()), !dbg !15015
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15014, metadata !DIExpression()), !dbg !15015
  %3 = icmp eq %struct._dnode* %1, null, !dbg !15016
  br i1 %3, label %6, label %4, !dbg !15017

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #24, !dbg !15018
  br label %6, !dbg !15017

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !15017
  ret %struct._dnode* %7, !dbg !15019
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !15020 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15024, metadata !DIExpression()), !dbg !15027
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15025, metadata !DIExpression()), !dbg !15027
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15028
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15028
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15026, metadata !DIExpression()), !dbg !15027
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15029
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !15030
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15031
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !15032
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15033
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15034
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15035
  ret void, !dbg !15036
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !15037 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15039, metadata !DIExpression()), !dbg !15041
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15042
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15049, metadata !DIExpression()) #23, !dbg !15051
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15052
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !15053
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !15053
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15040, metadata !DIExpression()), !dbg !15041
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15054, metadata !DIExpression()) #23, !dbg !15060
  call void @llvm.dbg.value(metadata i32 %0, metadata !15059, metadata !DIExpression()) #23, !dbg !15060
  %6 = icmp eq i32 %0, 0, !dbg !15063
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15065
  br i1 %6, label %8, label %18, !dbg !15066

8:                                                ; preds = %1
  %9 = icmp eq %struct.k_thread* %7, null, !dbg !15067
  br i1 %9, label %10, label %11, !dbg !15070

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.272, i32 0, i32 0), i32 noundef 137) #25, !dbg !15071
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.275, i32 0, i32 0)) #25, !dbg !15071
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.272, i32 0, i32 0), i32 noundef 137) #25, !dbg !15071
  unreachable, !dbg !15071

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %7) #25, !dbg !15073
  br i1 %12, label %18, label %13, !dbg !15075

13:                                               ; preds = %11
  %14 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #25, !dbg !15076
  br i1 %14, label %18, label %15, !dbg !15078

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef nonnull %7) #25, !dbg !15079
  %17 = icmp eq i32 %16, 0, !dbg !15079
  br i1 %17, label %21, label %18, !dbg !15081

18:                                               ; preds = %1, %13, %11, %15
  %19 = icmp eq %struct.k_thread* %5, %7, !dbg !15082
  br i1 %19, label %21, label %20, !dbg !15085

20:                                               ; preds = %18
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !15086
  br label %21, !dbg !15088

21:                                               ; preds = %15, %18, %20
  %22 = phi %struct.k_thread* [ %5, %20 ], [ %5, %18 ], [ %7, %15 ], !dbg !15065
  store %struct.k_thread* %22, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15065
  ret void, !dbg !15089
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #8 !dbg !15090 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15094, metadata !DIExpression()), !dbg !15097
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15095, metadata !DIExpression()), !dbg !15097
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.273(%struct._dnode* noundef %0) #24, !dbg !15098
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !15096, metadata !DIExpression()), !dbg !15097
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15095, metadata !DIExpression()), !dbg !15097
  ret %struct.k_thread* %3, !dbg !15099
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15100 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15102, metadata !DIExpression()), !dbg !15103
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15104
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !15105
  %4 = xor i1 %3, true, !dbg !15106
  ret i1 %4, !dbg !15107
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15108 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15110, metadata !DIExpression()), !dbg !15111
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !15112
  %3 = load i16, i16* %2, align 2, !dbg !15112
  %4 = icmp ult i16 %3, 128, !dbg !15113
  %5 = zext i1 %4 to i32, !dbg !15113
  ret i32 %5, !dbg !15114
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15115 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15121, metadata !DIExpression()), !dbg !15122
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15123
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #24, !dbg !15124
  %4 = xor i1 %3, true, !dbg !15125
  ret i1 %4, !dbg !15126
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15127 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15133, metadata !DIExpression()), !dbg !15134
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15135
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15135
  %4 = icmp ne %struct._dnode* %3, null, !dbg !15136
  ret i1 %4, !dbg !15137
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !15138 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15140, metadata !DIExpression()), !dbg !15142
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15141, metadata !DIExpression()), !dbg !15142
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15143
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15143
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !15144
  br i1 %5, label %9, label %6, !dbg !15145

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15146
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !15146
  br label %9, !dbg !15145

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !15145
  ret %struct._dnode* %10, !dbg !15147
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.276(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !15148 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15152, metadata !DIExpression()), !dbg !15153
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15154
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15154
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !15155
  ret i1 %4, !dbg !15156
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !15157 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15161, metadata !DIExpression()), !dbg !15164
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15165
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15165
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15162, metadata !DIExpression()), !dbg !15164
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15166
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15166
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !15163, metadata !DIExpression()), !dbg !15164
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !15167
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !15168
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !15169
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !15170
  tail call fastcc void @sys_dnode_init.277(%struct._dnode* noundef %0) #24, !dbg !15171
  ret void, !dbg !15172
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.277(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !15173 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15175, metadata !DIExpression()), !dbg !15176
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15177
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15178
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15179
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15180
  ret void, !dbg !15181
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #8 !dbg !15182 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15186, metadata !DIExpression()), !dbg !15188
  call void @llvm.dbg.value(metadata i32 %1, metadata !15187, metadata !DIExpression()), !dbg !15188
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15189
  %4 = load i8, i8* %3, align 1, !dbg !15189
  %5 = zext i8 %4 to i32, !dbg !15190
  %6 = and i32 %5, %1, !dbg !15191
  %7 = icmp ne i32 %6, 0, !dbg !15192
  ret i1 %7, !dbg !15193
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher.278(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !15194 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15196, metadata !DIExpression()), !dbg !15198
  call void @llvm.dbg.value(metadata i32 %1, metadata !15197, metadata !DIExpression()), !dbg !15198
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2.279(i32 noundef %0, i32 noundef %1) #24, !dbg !15199
  ret i1 %3, !dbg !15200
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2.279(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !15201 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15203, metadata !DIExpression()), !dbg !15205
  call void @llvm.dbg.value(metadata i32 %1, metadata !15204, metadata !DIExpression()), !dbg !15205
  %3 = icmp slt i32 %0, %1, !dbg !15206
  ret i1 %3, !dbg !15207
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15208 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15210, metadata !DIExpression()), !dbg !15214
  call void @llvm.dbg.value(metadata i32 0, metadata !15211, metadata !DIExpression()), !dbg !15215
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14694, metadata !DIExpression()) #23, !dbg !15216
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15218, !srcloc !14709
  call void @llvm.dbg.value(metadata i32 undef, metadata !14706, metadata !DIExpression()) #23, !dbg !15220
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !15220
  call void @llvm.dbg.value(metadata i32 undef, metadata !14700, metadata !DIExpression()) #23, !dbg !15216
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15221
  br i1 %3, label %5, label %4, !dbg !15222

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 148) #25, !dbg !15223
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.268, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15223
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 148) #25, !dbg !15223
  unreachable, !dbg !15223

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14706, metadata !DIExpression()) #23, !dbg !15220
  call void @llvm.dbg.value(metadata i32 undef, metadata !14700, metadata !DIExpression()) #23, !dbg !15216
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15224
  call void @llvm.dbg.value(metadata i32 undef, metadata !15213, metadata !DIExpression()), !dbg !15215
  call void @llvm.dbg.value(metadata i32 undef, metadata !15211, metadata !DIExpression()), !dbg !15215
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15225
  call void @llvm.dbg.value(metadata i32 undef, metadata !14728, metadata !DIExpression()) #23, !dbg !15230
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14733, metadata !DIExpression()) #23, !dbg !15230
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15232
  br i1 %6, label %8, label %7, !dbg !15233

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 194) #25, !dbg !15234
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.270, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15234
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 194) #25, !dbg !15234
  unreachable, !dbg !15234

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15218
  call void @llvm.dbg.value(metadata i32 %9, metadata !14706, metadata !DIExpression()) #23, !dbg !15220
  call void @llvm.dbg.value(metadata i32 %9, metadata !14700, metadata !DIExpression()) #23, !dbg !15216
  call void @llvm.dbg.value(metadata i32 %9, metadata !15213, metadata !DIExpression()), !dbg !15215
  call void @llvm.dbg.value(metadata i32 undef, metadata !14728, metadata !DIExpression()) #23, !dbg !15230
  call void @llvm.dbg.value(metadata i32 undef, metadata !14742, metadata !DIExpression()) #23, !dbg !15235
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15237, !srcloc !14748
  call void @llvm.dbg.value(metadata i32 1, metadata !15211, metadata !DIExpression()), !dbg !15215
  call void @llvm.dbg.value(metadata i32 undef, metadata !15211, metadata !DIExpression()), !dbg !15215
  ret void, !dbg !15238
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15239 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15241, metadata !DIExpression()), !dbg !15242
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15243
  br i1 %2, label %27, label %3, !dbg !15245

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !15246
  br i1 %4, label %5, label %27, !dbg !15247

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14903, metadata !DIExpression()) #23, !dbg !15248
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15251
  %7 = load i8, i8* %6, align 1, !dbg !15252
  %8 = or i8 %7, -128, !dbg !15252
  store i8 %8, i8* %6, align 1, !dbg !15252
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14910, metadata !DIExpression()) #23, !dbg !15253
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14917, metadata !DIExpression()) #23, !dbg !15255
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14923, metadata !DIExpression()) #23, !dbg !15255
  %9 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !15257
  br i1 %9, label %10, label %11, !dbg !15258

10:                                               ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.272, i32 0, i32 0), i32 noundef 186) #25, !dbg !15259
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.272, i32 0, i32 0), i32 noundef 186) #25, !dbg !15259
  unreachable, !dbg !15259

11:                                               ; preds = %5
  %12 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.273(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15260
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !14924, metadata !DIExpression()) #23, !dbg !15255
  %13 = icmp eq %struct._dnode* %12, null, !dbg !15261
  br i1 %13, label %24, label %14, !dbg !15260

14:                                               ; preds = %11, %21
  %15 = phi %struct._dnode* [ %22, %21 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !14924, metadata !DIExpression()) #23, !dbg !15255
  %16 = bitcast %struct._dnode* %15 to %struct.k_thread*, !dbg !15262
  call void @llvm.dbg.value(metadata %struct.k_thread* %16, metadata !14924, metadata !DIExpression()) #23, !dbg !15255
  %17 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %16) #25, !dbg !15263
  %18 = icmp sgt i32 %17, 0, !dbg !15264
  br i1 %18, label %19, label %21, !dbg !15265

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15266
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %15, %struct._dnode* noundef %20) #25, !dbg !15267
  br label %26, !dbg !15268

21:                                               ; preds = %14
  %22 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %15) #25, !dbg !15261
  call void @llvm.dbg.value(metadata %struct._dnode* %22, metadata !14924, metadata !DIExpression()) #23, !dbg !15255
  %23 = icmp eq %struct._dnode* %22, null, !dbg !15261
  br i1 %23, label %24, label %14, !dbg !15260, !llvm.loop !15269

24:                                               ; preds = %21, %11
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15271
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %25) #25, !dbg !15272
  br label %26, !dbg !15273

26:                                               ; preds = %19, %24
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !15274
  br label %27, !dbg !15275

27:                                               ; preds = %26, %3, %1
  ret void, !dbg !15276
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15277 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15279, metadata !DIExpression()), !dbg !15280
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !15281
  br i1 %2, label %6, label %3, !dbg !15282

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #24, !dbg !15283
  %5 = xor i1 %4, true, !dbg !15282
  br label %6, !dbg !15282

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !15284
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15285 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15287, metadata !DIExpression()), !dbg !15291
  call void @llvm.dbg.value(metadata i32 0, metadata !15288, metadata !DIExpression()), !dbg !15292
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14694, metadata !DIExpression()) #23, !dbg !15293
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15295, !srcloc !14709
  call void @llvm.dbg.value(metadata i32 undef, metadata !14706, metadata !DIExpression()) #23, !dbg !15297
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !15297
  call void @llvm.dbg.value(metadata i32 undef, metadata !14700, metadata !DIExpression()) #23, !dbg !15293
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15298
  br i1 %3, label %5, label %4, !dbg !15299

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 148) #25, !dbg !15300
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.268, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15300
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 148) #25, !dbg !15300
  unreachable, !dbg !15300

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14706, metadata !DIExpression()) #23, !dbg !15297
  call void @llvm.dbg.value(metadata i32 undef, metadata !14700, metadata !DIExpression()) #23, !dbg !15293
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15301
  call void @llvm.dbg.value(metadata i32 undef, metadata !15290, metadata !DIExpression()), !dbg !15292
  call void @llvm.dbg.value(metadata i32 undef, metadata !15288, metadata !DIExpression()), !dbg !15292
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #24, !dbg !15302
  call void @llvm.dbg.value(metadata i32 undef, metadata !14728, metadata !DIExpression()) #23, !dbg !15305
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14733, metadata !DIExpression()) #23, !dbg !15305
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15307
  br i1 %6, label %8, label %7, !dbg !15308

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 194) #25, !dbg !15309
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.270, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15309
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 194) #25, !dbg !15309
  unreachable, !dbg !15309

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15295
  call void @llvm.dbg.value(metadata i32 %9, metadata !14706, metadata !DIExpression()) #23, !dbg !15297
  call void @llvm.dbg.value(metadata i32 %9, metadata !14700, metadata !DIExpression()) #23, !dbg !15293
  call void @llvm.dbg.value(metadata i32 %9, metadata !15290, metadata !DIExpression()), !dbg !15292
  call void @llvm.dbg.value(metadata i32 undef, metadata !14728, metadata !DIExpression()) #23, !dbg !15305
  call void @llvm.dbg.value(metadata i32 undef, metadata !14742, metadata !DIExpression()) #23, !dbg !15310
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15312, !srcloc !14748
  call void @llvm.dbg.value(metadata i32 1, metadata !15288, metadata !DIExpression()), !dbg !15292
  call void @llvm.dbg.value(metadata i32 undef, metadata !15288, metadata !DIExpression()), !dbg !15292
  ret void, !dbg !15313
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15314 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15316, metadata !DIExpression()), !dbg !15318
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14694, metadata !DIExpression()) #23, !dbg !15319
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15321, !srcloc !14709
  call void @llvm.dbg.value(metadata i32 undef, metadata !14706, metadata !DIExpression()) #23, !dbg !15323
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !15323
  call void @llvm.dbg.value(metadata i32 undef, metadata !14700, metadata !DIExpression()) #23, !dbg !15319
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15324
  br i1 %3, label %5, label %4, !dbg !15325

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 148) #25, !dbg !15326
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.268, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15326
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 148) #25, !dbg !15326
  unreachable, !dbg !15326

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !15321
  call void @llvm.dbg.value(metadata i32 %6, metadata !14706, metadata !DIExpression()) #23, !dbg !15323
  call void @llvm.dbg.value(metadata i32 %6, metadata !14700, metadata !DIExpression()) #23, !dbg !15319
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15327
  call void @llvm.dbg.value(metadata i32 %6, metadata !15317, metadata !DIExpression()), !dbg !15318
  %7 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #24, !dbg !15328
  br i1 %7, label %8, label %12, !dbg !15330

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14728, metadata !DIExpression()) #23, !dbg !15331
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14733, metadata !DIExpression()) #23, !dbg !15331
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15334
  br i1 %9, label %11, label %10, !dbg !15335

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 194) #25, !dbg !15336
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.270, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15336
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 194) #25, !dbg !15336
  unreachable, !dbg !15336

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !14728, metadata !DIExpression()) #23, !dbg !15331
  call void @llvm.dbg.value(metadata i32 %6, metadata !14742, metadata !DIExpression()) #23, !dbg !15337
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !15339, !srcloc !14748
  br label %14, !dbg !15340

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_started.284(%struct.k_thread* noundef %0) #24, !dbg !15341
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15342
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !15343
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #24, !dbg !15343
  br label %14, !dbg !15344

14:                                               ; preds = %12, %11
  ret void, !dbg !15344
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15345 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15347, metadata !DIExpression()), !dbg !15348
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15349
  %3 = load i8, i8* %2, align 1, !dbg !15349
  %4 = and i8 %3, 4, !dbg !15350
  %5 = icmp eq i8 %4, 0, !dbg !15351
  ret i1 %5, !dbg !15352
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.284(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15353 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15355, metadata !DIExpression()), !dbg !15356
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15357
  %3 = load i8, i8* %2, align 1, !dbg !15358
  %4 = and i8 %3, -5, !dbg !15358
  store i8 %4, i8* %2, align 1, !dbg !15358
  ret void, !dbg !15359
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !15360 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !15363, metadata !DIExpression()), !dbg !15364
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15362, metadata !DIExpression()), !dbg !15364
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #24, !dbg !15365
  br i1 %4, label %5, label %12, !dbg !15367

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #24, !dbg !15368
  br i1 %6, label %7, label %12, !dbg !15369

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !15370, metadata !DIExpression()) #23, !dbg !15376
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15375, metadata !DIExpression()) #23, !dbg !15376
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15379, metadata !DIExpression()) #23, !dbg !15384
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !15386
  br i1 %8, label %10, label %9, !dbg !15389

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 225) #25, !dbg !15390
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.270, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !15390
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 225) #25, !dbg !15390
  unreachable, !dbg !15390

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 %3, metadata !15370, metadata !DIExpression()) #23, !dbg !15376
  %11 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !15392
  br label %16, !dbg !15393

12:                                               ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14728, metadata !DIExpression()) #23, !dbg !15394
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14733, metadata !DIExpression()) #23, !dbg !15394
  %13 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !15397
  br i1 %13, label %15, label %14, !dbg !15398

14:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 194) #25, !dbg !15399
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.270, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !15399
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 194) #25, !dbg !15399
  unreachable, !dbg !15399

15:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 %3, metadata !14728, metadata !DIExpression()) #23, !dbg !15394
  call void @llvm.dbg.value(metadata i32 %3, metadata !14742, metadata !DIExpression()) #23, !dbg !15400
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15402, !srcloc !14748
  br label %16

16:                                               ; preds = %15, %10
  ret void, !dbg !15403
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !15404 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15408, metadata !DIExpression()), !dbg !15409
  call void @llvm.dbg.value(metadata i32 %0, metadata !15410, metadata !DIExpression()), !dbg !15415
  %2 = icmp eq i32 %0, 0, !dbg !15417
  br i1 %2, label %3, label %6, !dbg !15418

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15419, !srcloc !15426
  call void @llvm.dbg.value(metadata i32 %4, metadata !15422, metadata !DIExpression()) #23, !dbg !15427
  %5 = icmp eq i32 %4, 0, !dbg !15428
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !15409
  ret i1 %7, !dbg !15429
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #8 !dbg !15430 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15433
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15432, metadata !DIExpression()), !dbg !15434
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15435
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !15436
  ret i1 %3, !dbg !15437
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !15438 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15440, metadata !DIExpression()), !dbg !15442
  %2 = tail call i32 @arch_swap(i32 noundef %0) #25, !dbg !15443
  call void @llvm.dbg.value(metadata i32 %2, metadata !15441, metadata !DIExpression()), !dbg !15442
  ret i32 %2, !dbg !15444
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15445 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15447, metadata !DIExpression()), !dbg !15451
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !15452
  call void @llvm.dbg.value(metadata i32 0, metadata !15448, metadata !DIExpression()), !dbg !15453
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14694, metadata !DIExpression()) #23, !dbg !15454
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15456, !srcloc !14709
  call void @llvm.dbg.value(metadata i32 undef, metadata !14706, metadata !DIExpression()) #23, !dbg !15458
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !15458
  call void @llvm.dbg.value(metadata i32 undef, metadata !14700, metadata !DIExpression()) #23, !dbg !15454
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15459
  br i1 %4, label %6, label %5, !dbg !15460

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 148) #25, !dbg !15461
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.268, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15461
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 148) #25, !dbg !15461
  unreachable, !dbg !15461

6:                                                ; preds = %1
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !15456
  call void @llvm.dbg.value(metadata i32 %7, metadata !14706, metadata !DIExpression()) #23, !dbg !15458
  call void @llvm.dbg.value(metadata i32 %7, metadata !14700, metadata !DIExpression()) #23, !dbg !15454
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15462
  call void @llvm.dbg.value(metadata i32 %7, metadata !15450, metadata !DIExpression()), !dbg !15453
  call void @llvm.dbg.value(metadata i32 undef, metadata !15448, metadata !DIExpression()), !dbg !15453
  %8 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15463
  br i1 %8, label %9, label %13, !dbg !15467

9:                                                ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14886, metadata !DIExpression()) #23, !dbg !15468
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15471
  %11 = load i8, i8* %10, align 1, !dbg !15472
  %12 = and i8 %11, 127, !dbg !15472
  store i8 %12, i8* %10, align 1, !dbg !15472
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14894, metadata !DIExpression()) #23, !dbg !15473
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15475
  br label %13, !dbg !15476

13:                                               ; preds = %9, %6
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #24, !dbg !15477
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15478
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !15479
  %16 = zext i1 %15 to i32, !dbg !15479
  tail call fastcc void @update_cache(i32 noundef %16) #24, !dbg !15480
  call void @llvm.dbg.value(metadata i32 undef, metadata !14728, metadata !DIExpression()) #23, !dbg !15481
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14733, metadata !DIExpression()) #23, !dbg !15481
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15483
  br i1 %17, label %19, label %18, !dbg !15484

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 194) #25, !dbg !15485
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.270, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15485
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 194) #25, !dbg !15485
  unreachable, !dbg !15485

19:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %7, metadata !14728, metadata !DIExpression()) #23, !dbg !15481
  call void @llvm.dbg.value(metadata i32 %7, metadata !14742, metadata !DIExpression()) #23, !dbg !15486
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !15488, !srcloc !14748
  call void @llvm.dbg.value(metadata i32 1, metadata !15448, metadata !DIExpression()), !dbg !15453
  call void @llvm.dbg.value(metadata i32 undef, metadata !15448, metadata !DIExpression()), !dbg !15453
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15489
  %21 = icmp eq %struct.k_thread* %20, %0, !dbg !15491
  br i1 %21, label %22, label %23, !dbg !15492

22:                                               ; preds = %19
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15493
  br label %23, !dbg !15495

23:                                               ; preds = %22, %19
  ret void, !dbg !15496
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15497 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15499, metadata !DIExpression()), !dbg !15500
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15501
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !15502
  ret i32 %3, !dbg !15503
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15504 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15506, metadata !DIExpression()), !dbg !15507
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15508
  %3 = load i8, i8* %2, align 1, !dbg !15509
  %4 = or i8 %3, 16, !dbg !15509
  store i8 %4, i8* %2, align 1, !dbg !15509
  ret void, !dbg !15510
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !15511 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15512, !srcloc !14709
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15512
  call void @llvm.dbg.value(metadata i32 %2, metadata !14706, metadata !DIExpression()) #23, !dbg !15514
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !15514
  tail call void @z_reschedule_irqlock(i32 noundef %2) #24, !dbg !15515
  ret void, !dbg !15516
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !15517 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15519, metadata !DIExpression()), !dbg !15520
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #24, !dbg !15521
  br i1 %2, label %3, label %5, !dbg !15523

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !15524
  br label %6, !dbg !15526

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !14742, metadata !DIExpression()) #23, !dbg !15527
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !15530, !srcloc !14748
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !15531
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15532 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15534, metadata !DIExpression()), !dbg !15536
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14694, metadata !DIExpression()) #23, !dbg !15537
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15539, !srcloc !14709
  call void @llvm.dbg.value(metadata i32 undef, metadata !14706, metadata !DIExpression()) #23, !dbg !15541
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !15541
  call void @llvm.dbg.value(metadata i32 undef, metadata !14700, metadata !DIExpression()) #23, !dbg !15537
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15542
  br i1 %3, label %5, label %4, !dbg !15543

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 148) #25, !dbg !15544
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.268, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15544
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 148) #25, !dbg !15544
  unreachable, !dbg !15544

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !15539
  call void @llvm.dbg.value(metadata i32 %6, metadata !14706, metadata !DIExpression()) #23, !dbg !15541
  call void @llvm.dbg.value(metadata i32 %6, metadata !14700, metadata !DIExpression()) #23, !dbg !15537
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15545
  call void @llvm.dbg.value(metadata i32 %6, metadata !15535, metadata !DIExpression()), !dbg !15536
  %7 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #24, !dbg !15546
  br i1 %7, label %12, label %8, !dbg !15548

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14728, metadata !DIExpression()) #23, !dbg !15549
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14733, metadata !DIExpression()) #23, !dbg !15549
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15552
  br i1 %9, label %11, label %10, !dbg !15553

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 194) #25, !dbg !15554
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.270, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15554
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 194) #25, !dbg !15554
  unreachable, !dbg !15554

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !14728, metadata !DIExpression()) #23, !dbg !15549
  call void @llvm.dbg.value(metadata i32 %6, metadata !14742, metadata !DIExpression()) #23, !dbg !15555
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !15557, !srcloc !14748
  br label %14, !dbg !15558

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !15559
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15560
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !15561
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #24, !dbg !15561
  br label %14, !dbg !15562

14:                                               ; preds = %12, %11
  ret void, !dbg !15562
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15563 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15565, metadata !DIExpression()), !dbg !15566
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15567
  %3 = load i8, i8* %2, align 1, !dbg !15567
  %4 = and i8 %3, 16, !dbg !15568
  %5 = icmp ne i8 %4, 0, !dbg !15569
  ret i1 %5, !dbg !15570
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15571 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15573, metadata !DIExpression()), !dbg !15574
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15575
  %3 = load i8, i8* %2, align 1, !dbg !15576
  %4 = and i8 %3, -17, !dbg !15576
  store i8 %4, i8* %2, align 1, !dbg !15576
  ret void, !dbg !15577
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15578 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15588, metadata !DIExpression()), !dbg !15592
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15586, metadata !DIExpression()), !dbg !15592
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15587, metadata !DIExpression()), !dbg !15592
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15593
  %5 = icmp eq %struct.k_thread* %4, %0, !dbg !15593
  br i1 %5, label %9, label %6, !dbg !15593

6:                                                ; preds = %3
  %7 = tail call fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* noundef %0) #24, !dbg !15593
  br i1 %7, label %9, label %8, !dbg !15596

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.272, i32 0, i32 0), i32 noundef 773) #25, !dbg !15597
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.272, i32 0, i32 0), i32 noundef 773) #25, !dbg !15597
  unreachable, !dbg !15597

9:                                                ; preds = %3, %6
  call void @llvm.dbg.value(metadata i32 0, metadata !15589, metadata !DIExpression()), !dbg !15599
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14694, metadata !DIExpression()) #23, !dbg !15600
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15602, !srcloc !14709
  call void @llvm.dbg.value(metadata i32 undef, metadata !14706, metadata !DIExpression()) #23, !dbg !15604
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !15604
  call void @llvm.dbg.value(metadata i32 undef, metadata !14700, metadata !DIExpression()) #23, !dbg !15600
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15605
  br i1 %11, label %13, label %12, !dbg !15606

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 148) #25, !dbg !15607
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.268, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15607
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 148) #25, !dbg !15607
  unreachable, !dbg !15607

13:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14706, metadata !DIExpression()) #23, !dbg !15604
  call void @llvm.dbg.value(metadata i32 undef, metadata !14700, metadata !DIExpression()) #23, !dbg !15600
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15608
  call void @llvm.dbg.value(metadata i32 undef, metadata !15591, metadata !DIExpression()), !dbg !15599
  call void @llvm.dbg.value(metadata i32 undef, metadata !15589, metadata !DIExpression()), !dbg !15599
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) #24, !dbg !15609
  call void @llvm.dbg.value(metadata i32 undef, metadata !14728, metadata !DIExpression()) #23, !dbg !15612
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14733, metadata !DIExpression()) #23, !dbg !15612
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15614
  br i1 %14, label %16, label %15, !dbg !15615

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 194) #25, !dbg !15616
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.270, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15616
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 194) #25, !dbg !15616
  unreachable, !dbg !15616

16:                                               ; preds = %13
  %17 = extractvalue { i32, i32 } %10, 0, !dbg !15602
  call void @llvm.dbg.value(metadata i32 %17, metadata !14706, metadata !DIExpression()) #23, !dbg !15604
  call void @llvm.dbg.value(metadata i32 %17, metadata !14700, metadata !DIExpression()) #23, !dbg !15600
  call void @llvm.dbg.value(metadata i32 %17, metadata !15591, metadata !DIExpression()), !dbg !15599
  call void @llvm.dbg.value(metadata i32 undef, metadata !14728, metadata !DIExpression()) #23, !dbg !15612
  call void @llvm.dbg.value(metadata i32 undef, metadata !14742, metadata !DIExpression()) #23, !dbg !15617
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %17) #23, !dbg !15619, !srcloc !14748
  call void @llvm.dbg.value(metadata i32 1, metadata !15589, metadata !DIExpression()), !dbg !15599
  call void @llvm.dbg.value(metadata i32 undef, metadata !15589, metadata !DIExpression()), !dbg !15599
  ret void, !dbg !15620
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15621 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15623, metadata !DIExpression()), !dbg !15624
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15625
  %3 = load i8, i8* %2, align 1, !dbg !15625
  %4 = and i8 %3, 1, !dbg !15626
  %5 = icmp ne i8 %4, 0, !dbg !15627
  ret i1 %5, !dbg !15628
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !15629 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15633, metadata !DIExpression()), !dbg !15634
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15631, metadata !DIExpression()), !dbg !15634
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15632, metadata !DIExpression()), !dbg !15634
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) #24, !dbg !15635
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #24, !dbg !15636
  ret void, !dbg !15637
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) unnamed_addr #1 !dbg !15638 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15642, metadata !DIExpression()), !dbg !15644
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15643, metadata !DIExpression()), !dbg !15644
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #24, !dbg !15645
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #24, !dbg !15646
  %3 = icmp eq %struct._wait_q_t* %1, null, !dbg !15647
  br i1 %3, label %24, label %4, !dbg !15649

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15650
  store %struct._wait_q_t* %1, %struct._wait_q_t** %5, align 8, !dbg !15652
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %1, i32 0, i32 0, !dbg !15653
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !14917, metadata !DIExpression()) #23, !dbg !15654
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14923, metadata !DIExpression()) #23, !dbg !15654
  %7 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !15656
  br i1 %7, label %8, label %9, !dbg !15657

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.272, i32 0, i32 0), i32 noundef 186) #25, !dbg !15658
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.272, i32 0, i32 0), i32 noundef 186) #25, !dbg !15658
  unreachable, !dbg !15658

9:                                                ; preds = %4
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.273(%struct._dnode* noundef nonnull %6) #25, !dbg !15659
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14924, metadata !DIExpression()) #23, !dbg !15654
  %11 = icmp eq %struct._dnode* %10, null, !dbg !15660
  br i1 %11, label %22, label %12, !dbg !15659

12:                                               ; preds = %9, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !14924, metadata !DIExpression()) #23, !dbg !15654
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !15661
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14924, metadata !DIExpression()) #23, !dbg !15654
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %14) #25, !dbg !15662
  %16 = icmp sgt i32 %15, 0, !dbg !15663
  br i1 %16, label %17, label %19, !dbg !15664

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15665
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #25, !dbg !15666
  br label %24, !dbg !15667

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %13) #25, !dbg !15660
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14924, metadata !DIExpression()) #23, !dbg !15654
  %21 = icmp eq %struct._dnode* %20, null, !dbg !15660
  br i1 %21, label %22, label %12, !dbg !15659, !llvm.loop !15668

22:                                               ; preds = %19, %9
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15670
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %23) #25, !dbg !15671
  br label %24, !dbg !15672

24:                                               ; preds = %22, %17, %2
  ret void, !dbg !15673
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15674 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15679, metadata !DIExpression()), !dbg !15680
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15678, metadata !DIExpression()), !dbg !15680
  %4 = icmp eq i64 %3, -1, !dbg !15681
  br i1 %4, label %6, label %5, !dbg !15683

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.288(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !15684
  br label %6, !dbg !15686

6:                                                ; preds = %5, %2
  ret void, !dbg !15687
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.288(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15688 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15691, metadata !DIExpression()), !dbg !15692
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15690, metadata !DIExpression()), !dbg !15692
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15693
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !15694
  ret void, !dbg !15695
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !15696 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15698, metadata !DIExpression()), !dbg !15706
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !15707
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !15707
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15699, metadata !DIExpression()), !dbg !15706
  call void @llvm.dbg.value(metadata i32 0, metadata !15700, metadata !DIExpression()), !dbg !15708
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14694, metadata !DIExpression()) #23, !dbg !15709
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15711, !srcloc !14709
  call void @llvm.dbg.value(metadata i32 undef, metadata !14706, metadata !DIExpression()) #23, !dbg !15713
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !15713
  call void @llvm.dbg.value(metadata i32 undef, metadata !14700, metadata !DIExpression()) #23, !dbg !15709
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15714
  br i1 %5, label %7, label %6, !dbg !15715

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 148) #25, !dbg !15716
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.268, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15716
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 148) #25, !dbg !15716
  unreachable, !dbg !15716

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14706, metadata !DIExpression()) #23, !dbg !15713
  call void @llvm.dbg.value(metadata i32 undef, metadata !14700, metadata !DIExpression()) #23, !dbg !15709
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15717
  call void @llvm.dbg.value(metadata i32 undef, metadata !15702, metadata !DIExpression()), !dbg !15708
  call void @llvm.dbg.value(metadata i32 undef, metadata !15700, metadata !DIExpression()), !dbg !15708
  %8 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !15718
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %8, i32 0, i32 3, !dbg !15719
  %10 = load i8, i8* %9, align 1, !dbg !15719
  %11 = and i8 %10, 40, !dbg !15720
  %12 = icmp eq i8 %11, 0, !dbg !15720
  call void @llvm.dbg.value(metadata i1 %12, metadata !15703, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15721
  br i1 %12, label %13, label %20, !dbg !15722

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !15723
  %15 = bitcast void (%struct._timeout*)** %14 to %struct._wait_q_t**, !dbg !15723
  %16 = load %struct._wait_q_t*, %struct._wait_q_t** %15, align 8, !dbg !15723
  %17 = icmp eq %struct._wait_q_t* %16, null, !dbg !15727
  br i1 %17, label %19, label %18, !dbg !15728

18:                                               ; preds = %13
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #24, !dbg !15729
  br label %19, !dbg !15731

19:                                               ; preds = %18, %13
  tail call fastcc void @z_mark_thread_as_started.284(%struct.k_thread* noundef nonnull %3) #24, !dbg !15732
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #24, !dbg !15733
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #24, !dbg !15734
  br label %20, !dbg !15735

20:                                               ; preds = %19, %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !14728, metadata !DIExpression()) #23, !dbg !15736
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14733, metadata !DIExpression()) #23, !dbg !15736
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15738
  br i1 %21, label %23, label %22, !dbg !15739

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 194) #25, !dbg !15740
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.270, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15740
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 194) #25, !dbg !15740
  unreachable, !dbg !15740

23:                                               ; preds = %20
  %24 = extractvalue { i32, i32 } %4, 0, !dbg !15711
  call void @llvm.dbg.value(metadata i32 %24, metadata !14706, metadata !DIExpression()) #23, !dbg !15713
  call void @llvm.dbg.value(metadata i32 %24, metadata !14700, metadata !DIExpression()) #23, !dbg !15709
  call void @llvm.dbg.value(metadata i32 %24, metadata !15702, metadata !DIExpression()), !dbg !15708
  call void @llvm.dbg.value(metadata i32 undef, metadata !14728, metadata !DIExpression()) #23, !dbg !15736
  call void @llvm.dbg.value(metadata i32 undef, metadata !14742, metadata !DIExpression()) #23, !dbg !15741
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !15743, !srcloc !14748
  call void @llvm.dbg.value(metadata i32 1, metadata !15700, metadata !DIExpression()), !dbg !15708
  call void @llvm.dbg.value(metadata i32 undef, metadata !15700, metadata !DIExpression()), !dbg !15708
  ret void, !dbg !15744
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15745 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15747, metadata !DIExpression()), !dbg !15748
  %2 = tail call fastcc %struct._wait_q_t* @pended_on_thread(%struct.k_thread* noundef %0) #24, !dbg !15749
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !15750
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #24, !dbg !15751
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15752
  store %struct._wait_q_t* null, %struct._wait_q_t** %3, align 8, !dbg !15753
  ret void, !dbg !15754
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct._wait_q_t* @pended_on_thread(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #1 !dbg !15755 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15759, metadata !DIExpression()), !dbg !15760
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15761
  %3 = load %struct._wait_q_t*, %struct._wait_q_t** %2, align 8, !dbg !15761
  %4 = icmp eq %struct._wait_q_t* %3, null, !dbg !15761
  br i1 %4, label %5, label %6, !dbg !15764

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.272, i32 0, i32 0), i32 noundef 726) #25, !dbg !15765
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.272, i32 0, i32 0), i32 noundef 726) #25, !dbg !15765
  unreachable, !dbg !15765

6:                                                ; preds = %1
  ret %struct._wait_q_t* %3, !dbg !15767
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15768 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15770, metadata !DIExpression()), !dbg !15771
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15772
  %3 = load i8, i8* %2, align 1, !dbg !15773
  %4 = and i8 %3, -3, !dbg !15773
  store i8 %4, i8* %2, align 1, !dbg !15773
  ret void, !dbg !15774
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15775 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15777, metadata !DIExpression()), !dbg !15778
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15779
  br i1 %2, label %3, label %7, !dbg !15781

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14886, metadata !DIExpression()) #23, !dbg !15782
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15785
  %5 = load i8, i8* %4, align 1, !dbg !15786
  %6 = and i8 %5, 127, !dbg !15786
  store i8 %6, i8* %4, align 1, !dbg !15786
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14894, metadata !DIExpression()) #23, !dbg !15787
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15789
  br label %7, !dbg !15790

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15791
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !15792
  %10 = zext i1 %9 to i32, !dbg !15792
  tail call fastcc void @update_cache(i32 noundef %10) #24, !dbg !15793
  ret void, !dbg !15794
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15795 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15797, metadata !DIExpression()), !dbg !15798
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15799
  %3 = load i8, i8* %2, align 1, !dbg !15800
  %4 = or i8 %3, 2, !dbg !15800
  store i8 %4, i8* %2, align 1, !dbg !15800
  ret void, !dbg !15801
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* noundef %0) local_unnamed_addr #22 !dbg !15802 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15804, metadata !DIExpression()), !dbg !15808
  call void @llvm.dbg.value(metadata i32 0, metadata !15805, metadata !DIExpression()), !dbg !15809
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14694, metadata !DIExpression()) #23, !dbg !15810
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15812, !srcloc !14709
  call void @llvm.dbg.value(metadata i32 undef, metadata !14706, metadata !DIExpression()) #23, !dbg !15814
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !15814
  call void @llvm.dbg.value(metadata i32 undef, metadata !14700, metadata !DIExpression()) #23, !dbg !15810
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15815
  br i1 %3, label %5, label %4, !dbg !15816

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 148) #25, !dbg !15817
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.268, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15817
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 148) #25, !dbg !15817
  unreachable, !dbg !15817

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14706, metadata !DIExpression()) #23, !dbg !15814
  call void @llvm.dbg.value(metadata i32 undef, metadata !14700, metadata !DIExpression()) #23, !dbg !15810
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15818
  call void @llvm.dbg.value(metadata i32 undef, metadata !15807, metadata !DIExpression()), !dbg !15809
  call void @llvm.dbg.value(metadata i32 undef, metadata !15805, metadata !DIExpression()), !dbg !15809
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !15819
  call void @llvm.dbg.value(metadata i32 undef, metadata !14728, metadata !DIExpression()) #23, !dbg !15822
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14733, metadata !DIExpression()) #23, !dbg !15822
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15824
  br i1 %6, label %8, label %7, !dbg !15825

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 194) #25, !dbg !15826
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.270, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15826
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 194) #25, !dbg !15826
  unreachable, !dbg !15826

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15812
  call void @llvm.dbg.value(metadata i32 %9, metadata !14706, metadata !DIExpression()) #23, !dbg !15814
  call void @llvm.dbg.value(metadata i32 %9, metadata !14700, metadata !DIExpression()) #23, !dbg !15810
  call void @llvm.dbg.value(metadata i32 %9, metadata !15807, metadata !DIExpression()), !dbg !15809
  call void @llvm.dbg.value(metadata i32 undef, metadata !14728, metadata !DIExpression()) #23, !dbg !15822
  call void @llvm.dbg.value(metadata i32 undef, metadata !14742, metadata !DIExpression()) #23, !dbg !15827
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15829, !srcloc !14748
  call void @llvm.dbg.value(metadata i32 1, metadata !15805, metadata !DIExpression()), !dbg !15809
  call void @llvm.dbg.value(metadata i32 undef, metadata !15805, metadata !DIExpression()), !dbg !15809
  ret void, !dbg !15830
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15831 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15837, metadata !DIExpression()), !dbg !15842
  call void @llvm.dbg.value(metadata i32 %0, metadata !15835, metadata !DIExpression()), !dbg !15842
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15836, metadata !DIExpression()), !dbg !15842
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15843
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %struct._wait_q_t* noundef %1, [1 x i64] %2) #24, !dbg !15844
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15845
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15846
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !15847
  call void @llvm.dbg.value(metadata i32 %6, metadata !15838, metadata !DIExpression()), !dbg !15842
  call void @llvm.dbg.value(metadata i32 0, metadata !15839, metadata !DIExpression()), !dbg !15848
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14694, metadata !DIExpression()) #23, !dbg !15849
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15851, !srcloc !14709
  call void @llvm.dbg.value(metadata i32 undef, metadata !14706, metadata !DIExpression()) #23, !dbg !15853
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !15853
  call void @llvm.dbg.value(metadata i32 undef, metadata !14700, metadata !DIExpression()) #23, !dbg !15849
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15854
  br i1 %8, label %10, label %9, !dbg !15855

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 148) #25, !dbg !15856
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.268, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15856
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 148) #25, !dbg !15856
  unreachable, !dbg !15856

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !14706, metadata !DIExpression()) #23, !dbg !15853
  call void @llvm.dbg.value(metadata i32 undef, metadata !14700, metadata !DIExpression()) #23, !dbg !15849
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15857
  call void @llvm.dbg.value(metadata i32 undef, metadata !15841, metadata !DIExpression()), !dbg !15848
  call void @llvm.dbg.value(metadata i32 undef, metadata !15839, metadata !DIExpression()), !dbg !15848
  %11 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15858
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15862
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !15863
  br i1 %13, label %14, label %15, !dbg !15864

14:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15865
  br label %15, !dbg !15867

15:                                               ; preds = %10, %14
  call void @llvm.dbg.value(metadata i32 undef, metadata !14728, metadata !DIExpression()) #23, !dbg !15868
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14733, metadata !DIExpression()) #23, !dbg !15868
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15870
  br i1 %16, label %18, label %17, !dbg !15871

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 194) #25, !dbg !15872
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.270, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15872
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 194) #25, !dbg !15872
  unreachable, !dbg !15872

18:                                               ; preds = %15
  %19 = extractvalue { i32, i32 } %7, 0, !dbg !15851
  call void @llvm.dbg.value(metadata i32 %19, metadata !14706, metadata !DIExpression()) #23, !dbg !15853
  call void @llvm.dbg.value(metadata i32 %19, metadata !14700, metadata !DIExpression()) #23, !dbg !15849
  call void @llvm.dbg.value(metadata i32 %19, metadata !15841, metadata !DIExpression()), !dbg !15848
  call void @llvm.dbg.value(metadata i32 undef, metadata !14728, metadata !DIExpression()) #23, !dbg !15868
  call void @llvm.dbg.value(metadata i32 undef, metadata !14742, metadata !DIExpression()) #23, !dbg !15873
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #23, !dbg !15875, !srcloc !14748
  call void @llvm.dbg.value(metadata i32 1, metadata !15839, metadata !DIExpression()), !dbg !15848
  call void @llvm.dbg.value(metadata i32 undef, metadata !15839, metadata !DIExpression()), !dbg !15848
  ret i32 %6, !dbg !15876
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !15877 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15882, metadata !DIExpression()), !dbg !15885
  call void @llvm.dbg.value(metadata i64 undef, metadata !15884, metadata !DIExpression()), !dbg !15885
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15881, metadata !DIExpression()), !dbg !15885
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !15883, metadata !DIExpression()), !dbg !15885
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15886
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15887
  %6 = icmp eq %struct.k_spinlock* %0, @sched_spinlock, !dbg !15888
  br i1 %6, label %7, label %8, !dbg !15891

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3.294, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.272, i32 0, i32 0), i32 noundef 846) #25, !dbg !15892
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.272, i32 0, i32 0), i32 noundef 846) #25, !dbg !15892
  unreachable, !dbg !15892

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14694, metadata !DIExpression()) #23, !dbg !15894
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15896, !srcloc !14709
  call void @llvm.dbg.value(metadata i32 undef, metadata !14706, metadata !DIExpression()) #23, !dbg !15898
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !15898
  call void @llvm.dbg.value(metadata i32 undef, metadata !14700, metadata !DIExpression()) #23, !dbg !15894
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15899
  br i1 %10, label %12, label %11, !dbg !15900

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 148) #25, !dbg !15901
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.268, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15901
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 148) #25, !dbg !15901
  unreachable, !dbg !15901

12:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !14706, metadata !DIExpression()) #23, !dbg !15898
  call void @llvm.dbg.value(metadata i32 undef, metadata !14700, metadata !DIExpression()) #23, !dbg !15894
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15902
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15903
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %13, %struct._wait_q_t* noundef %2, [1 x i64] %3) #24, !dbg !15904
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15379, metadata !DIExpression()) #23, !dbg !15905
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !15907
  br i1 %14, label %16, label %15, !dbg !15908

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 225) #25, !dbg !15909
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.270, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !15909
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 225) #25, !dbg !15909
  unreachable, !dbg !15909

16:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !15370, metadata !DIExpression()) #23, !dbg !15910
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15375, metadata !DIExpression()) #23, !dbg !15910
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15379, metadata !DIExpression()) #23, !dbg !15912
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15914
  br i1 %17, label %19, label %18, !dbg !15915

18:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 225) #25, !dbg !15916
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.270, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15916
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 225) #25, !dbg !15916
  unreachable, !dbg !15916

19:                                               ; preds = %16
  %20 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %20, metadata !15370, metadata !DIExpression()) #23, !dbg !15910
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %20) #25, !dbg !15917
  ret i32 %21, !dbg !15918
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15919 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15923, metadata !DIExpression()), !dbg !15928
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15924, metadata !DIExpression()), !dbg !15928
  call void @llvm.dbg.value(metadata i32 0, metadata !15925, metadata !DIExpression()), !dbg !15929
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14694, metadata !DIExpression()) #23, !dbg !15930
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15932, !srcloc !14709
  call void @llvm.dbg.value(metadata i32 undef, metadata !14706, metadata !DIExpression()) #23, !dbg !15934
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !15934
  call void @llvm.dbg.value(metadata i32 undef, metadata !14700, metadata !DIExpression()) #23, !dbg !15930
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15935
  br i1 %3, label %5, label %4, !dbg !15936

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 148) #25, !dbg !15937
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.268, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15937
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 148) #25, !dbg !15937
  unreachable, !dbg !15937

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14706, metadata !DIExpression()) #23, !dbg !15934
  call void @llvm.dbg.value(metadata i32 undef, metadata !14700, metadata !DIExpression()) #23, !dbg !15930
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15938
  call void @llvm.dbg.value(metadata i32 undef, metadata !15927, metadata !DIExpression()), !dbg !15929
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15924, metadata !DIExpression()), !dbg !15928
  call void @llvm.dbg.value(metadata i32 undef, metadata !15925, metadata !DIExpression()), !dbg !15929
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #24, !dbg !15939
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15924, metadata !DIExpression()), !dbg !15928
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15942
  br i1 %8, label %10, label %9, !dbg !15944

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15945
  br label %10, !dbg !15947

10:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14728, metadata !DIExpression()) #23, !dbg !15948
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14733, metadata !DIExpression()) #23, !dbg !15948
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15950
  br i1 %11, label %13, label %12, !dbg !15951

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 194) #25, !dbg !15952
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.270, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15952
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 194) #25, !dbg !15952
  unreachable, !dbg !15952

13:                                               ; preds = %10
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !15932
  call void @llvm.dbg.value(metadata i32 %14, metadata !14706, metadata !DIExpression()) #23, !dbg !15934
  call void @llvm.dbg.value(metadata i32 %14, metadata !14700, metadata !DIExpression()) #23, !dbg !15930
  call void @llvm.dbg.value(metadata i32 %14, metadata !15927, metadata !DIExpression()), !dbg !15929
  call void @llvm.dbg.value(metadata i32 undef, metadata !14728, metadata !DIExpression()) #23, !dbg !15948
  call void @llvm.dbg.value(metadata i32 undef, metadata !14742, metadata !DIExpression()) #23, !dbg !15953
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !15955, !srcloc !14748
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15924, metadata !DIExpression()), !dbg !15928
  call void @llvm.dbg.value(metadata i32 undef, metadata !15925, metadata !DIExpression()), !dbg !15929
  ret %struct.k_thread* %7, !dbg !15956
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15957 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15959, metadata !DIExpression()), !dbg !15964
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15960, metadata !DIExpression()), !dbg !15964
  call void @llvm.dbg.value(metadata i32 0, metadata !15961, metadata !DIExpression()), !dbg !15965
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14694, metadata !DIExpression()) #23, !dbg !15966
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15968, !srcloc !14709
  call void @llvm.dbg.value(metadata i32 undef, metadata !14706, metadata !DIExpression()) #23, !dbg !15970
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !15970
  call void @llvm.dbg.value(metadata i32 undef, metadata !14700, metadata !DIExpression()) #23, !dbg !15966
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15971
  br i1 %3, label %5, label %4, !dbg !15972

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 148) #25, !dbg !15973
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.268, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15973
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 148) #25, !dbg !15973
  unreachable, !dbg !15973

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14706, metadata !DIExpression()) #23, !dbg !15970
  call void @llvm.dbg.value(metadata i32 undef, metadata !14700, metadata !DIExpression()) #23, !dbg !15966
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15974
  call void @llvm.dbg.value(metadata i32 undef, metadata !15963, metadata !DIExpression()), !dbg !15965
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15960, metadata !DIExpression()), !dbg !15964
  call void @llvm.dbg.value(metadata i32 undef, metadata !15961, metadata !DIExpression()), !dbg !15965
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #24, !dbg !15975
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15960, metadata !DIExpression()), !dbg !15964
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15978
  br i1 %8, label %11, label %9, !dbg !15980

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15981
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15983
  br label %11, !dbg !15984

11:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14728, metadata !DIExpression()) #23, !dbg !15985
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14733, metadata !DIExpression()) #23, !dbg !15985
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15987
  br i1 %12, label %14, label %13, !dbg !15988

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 194) #25, !dbg !15989
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.270, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15989
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 194) #25, !dbg !15989
  unreachable, !dbg !15989

14:                                               ; preds = %11
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !15968
  call void @llvm.dbg.value(metadata i32 %15, metadata !14706, metadata !DIExpression()) #23, !dbg !15970
  call void @llvm.dbg.value(metadata i32 %15, metadata !14700, metadata !DIExpression()) #23, !dbg !15966
  call void @llvm.dbg.value(metadata i32 %15, metadata !15963, metadata !DIExpression()), !dbg !15965
  call void @llvm.dbg.value(metadata i32 undef, metadata !14728, metadata !DIExpression()) #23, !dbg !15985
  call void @llvm.dbg.value(metadata i32 undef, metadata !14742, metadata !DIExpression()) #23, !dbg !15990
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !15992, !srcloc !14748
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15960, metadata !DIExpression()), !dbg !15964
  call void @llvm.dbg.value(metadata i32 undef, metadata !15961, metadata !DIExpression()), !dbg !15965
  ret %struct.k_thread* %7, !dbg !15993
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15994 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15996, metadata !DIExpression()), !dbg !15997
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15804, metadata !DIExpression()) #23, !dbg !15998
  call void @llvm.dbg.value(metadata i32 0, metadata !15805, metadata !DIExpression()) #23, !dbg !16000
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14694, metadata !DIExpression()) #23, !dbg !16001
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16003, !srcloc !14709
  call void @llvm.dbg.value(metadata i32 undef, metadata !14706, metadata !DIExpression()) #23, !dbg !16005
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !16005
  call void @llvm.dbg.value(metadata i32 undef, metadata !14700, metadata !DIExpression()) #23, !dbg !16001
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16006
  br i1 %3, label %5, label %4, !dbg !16007

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 148) #25, !dbg !16008
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.268, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16008
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 148) #25, !dbg !16008
  unreachable, !dbg !16008

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14706, metadata !DIExpression()) #23, !dbg !16005
  call void @llvm.dbg.value(metadata i32 undef, metadata !14700, metadata !DIExpression()) #23, !dbg !16001
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16009
  call void @llvm.dbg.value(metadata i32 undef, metadata !15807, metadata !DIExpression()) #23, !dbg !16000
  call void @llvm.dbg.value(metadata i32 undef, metadata !15805, metadata !DIExpression()) #23, !dbg !16000
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !16010
  call void @llvm.dbg.value(metadata i32 undef, metadata !14728, metadata !DIExpression()) #23, !dbg !16011
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14733, metadata !DIExpression()) #23, !dbg !16011
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16013
  br i1 %6, label %8, label %7, !dbg !16014

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 194) #25, !dbg !16015
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.270, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16015
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 194) #25, !dbg !16015
  unreachable, !dbg !16015

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !16003
  call void @llvm.dbg.value(metadata i32 %9, metadata !14706, metadata !DIExpression()) #23, !dbg !16005
  call void @llvm.dbg.value(metadata i32 %9, metadata !14700, metadata !DIExpression()) #23, !dbg !16001
  call void @llvm.dbg.value(metadata i32 %9, metadata !15807, metadata !DIExpression()) #23, !dbg !16000
  call void @llvm.dbg.value(metadata i32 undef, metadata !14728, metadata !DIExpression()) #23, !dbg !16011
  call void @llvm.dbg.value(metadata i32 undef, metadata !14742, metadata !DIExpression()) #23, !dbg !16016
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !16018, !srcloc !14748
  call void @llvm.dbg.value(metadata i32 1, metadata !15805, metadata !DIExpression()) #23, !dbg !16000
  call void @llvm.dbg.value(metadata i32 undef, metadata !15805, metadata !DIExpression()) #23, !dbg !16000
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !16019
  ret void, !dbg !16020
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16021 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16023, metadata !DIExpression()), !dbg !16029
  call void @llvm.dbg.value(metadata i32 %1, metadata !16024, metadata !DIExpression()), !dbg !16029
  call void @llvm.dbg.value(metadata i8 0, metadata !16025, metadata !DIExpression()), !dbg !16029
  call void @llvm.dbg.value(metadata i32 0, metadata !16026, metadata !DIExpression()), !dbg !16030
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14694, metadata !DIExpression()) #23, !dbg !16031
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16033, !srcloc !14709
  call void @llvm.dbg.value(metadata i32 undef, metadata !14706, metadata !DIExpression()) #23, !dbg !16035
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !16035
  call void @llvm.dbg.value(metadata i32 undef, metadata !14700, metadata !DIExpression()) #23, !dbg !16031
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16036
  br i1 %4, label %6, label %5, !dbg !16037

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 148) #25, !dbg !16038
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.268, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16038
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 148) #25, !dbg !16038
  unreachable, !dbg !16038

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14706, metadata !DIExpression()) #23, !dbg !16035
  call void @llvm.dbg.value(metadata i32 undef, metadata !14700, metadata !DIExpression()) #23, !dbg !16031
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16039
  call void @llvm.dbg.value(metadata i32 undef, metadata !16028, metadata !DIExpression()), !dbg !16030
  call void @llvm.dbg.value(metadata i8 poison, metadata !16025, metadata !DIExpression()), !dbg !16029
  call void @llvm.dbg.value(metadata i32 undef, metadata !16026, metadata !DIExpression()), !dbg !16030
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !16040
  call void @llvm.dbg.value(metadata i1 %9, metadata !16025, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16029
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %11 = bitcast %union.anon.2* %10 to i8*
  %12 = trunc i32 %1 to i8
  br i1 %9, label %13, label %34, !dbg !16043

13:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14886, metadata !DIExpression()) #23, !dbg !16044
  %14 = load i8, i8* %7, align 1, !dbg !16050
  %15 = and i8 %14, 127, !dbg !16050
  store i8 %15, i8* %7, align 1, !dbg !16050
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14894, metadata !DIExpression()) #23, !dbg !16051
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !16053
  store i8 %12, i8* %11, align 2, !dbg !16054
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14903, metadata !DIExpression()) #23, !dbg !16055
  %16 = load i8, i8* %7, align 1, !dbg !16057
  %17 = or i8 %16, -128, !dbg !16057
  store i8 %17, i8* %7, align 1, !dbg !16057
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14910, metadata !DIExpression()) #23, !dbg !16058
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14917, metadata !DIExpression()) #23, !dbg !16060
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14923, metadata !DIExpression()) #23, !dbg !16060
  %18 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !16062
  br i1 %18, label %19, label %20, !dbg !16063

19:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.272, i32 0, i32 0), i32 noundef 186) #25, !dbg !16064
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.272, i32 0, i32 0), i32 noundef 186) #25, !dbg !16064
  unreachable, !dbg !16064

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.273(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !16065
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !14924, metadata !DIExpression()) #23, !dbg !16060
  %22 = icmp eq %struct._dnode* %21, null, !dbg !16066
  br i1 %22, label %32, label %23, !dbg !16065

23:                                               ; preds = %20, %29
  %24 = phi %struct._dnode* [ %30, %29 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14924, metadata !DIExpression()) #23, !dbg !16060
  %25 = bitcast %struct._dnode* %24 to %struct.k_thread*, !dbg !16067
  call void @llvm.dbg.value(metadata %struct.k_thread* %25, metadata !14924, metadata !DIExpression()) #23, !dbg !16060
  %26 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %25) #25, !dbg !16068
  %27 = icmp sgt i32 %26, 0, !dbg !16069
  br i1 %27, label %28, label %29, !dbg !16070

28:                                               ; preds = %23
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %24, %struct._dnode* noundef %8) #25, !dbg !16071
  br label %33, !dbg !16072

29:                                               ; preds = %23
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %24) #25, !dbg !16066
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !14924, metadata !DIExpression()) #23, !dbg !16060
  %31 = icmp eq %struct._dnode* %30, null, !dbg !16066
  br i1 %31, label %32, label %23, !dbg !16065, !llvm.loop !16073

32:                                               ; preds = %29, %20
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %8) #25, !dbg !16075
  br label %33, !dbg !16076

33:                                               ; preds = %28, %32
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !16077
  br label %35, !dbg !16078

34:                                               ; preds = %6
  store i8 %12, i8* %11, align 2, !dbg !16079
  br label %35

35:                                               ; preds = %33, %34
  call void @llvm.dbg.value(metadata i32 undef, metadata !14728, metadata !DIExpression()) #23, !dbg !16081
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14733, metadata !DIExpression()) #23, !dbg !16081
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16083
  br i1 %36, label %38, label %37, !dbg !16084

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 194) #25, !dbg !16085
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.270, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16085
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 194) #25, !dbg !16085
  unreachable, !dbg !16085

38:                                               ; preds = %35
  %39 = extractvalue { i32, i32 } %3, 0, !dbg !16033
  call void @llvm.dbg.value(metadata i32 %39, metadata !14706, metadata !DIExpression()) #23, !dbg !16035
  call void @llvm.dbg.value(metadata i32 %39, metadata !14700, metadata !DIExpression()) #23, !dbg !16031
  call void @llvm.dbg.value(metadata i32 %39, metadata !16028, metadata !DIExpression()), !dbg !16030
  call void @llvm.dbg.value(metadata i32 undef, metadata !14728, metadata !DIExpression()) #23, !dbg !16081
  call void @llvm.dbg.value(metadata i32 undef, metadata !14742, metadata !DIExpression()) #23, !dbg !16086
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %39) #23, !dbg !16088, !srcloc !14748
  call void @llvm.dbg.value(metadata i8 poison, metadata !16025, metadata !DIExpression()), !dbg !16029
  call void @llvm.dbg.value(metadata i32 undef, metadata !16026, metadata !DIExpression()), !dbg !16030
  ret i1 %9, !dbg !16089
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16090 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16094, metadata !DIExpression()), !dbg !16097
  call void @llvm.dbg.value(metadata i32 %1, metadata !16095, metadata !DIExpression()), !dbg !16097
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !16098
  call void @llvm.dbg.value(metadata i1 %3, metadata !16096, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16097
  br i1 %3, label %4, label %12, !dbg !16099

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16101
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !16102
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !16102
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !16102
  %9 = load i8, i8* %8, align 1, !dbg !16102
  %10 = icmp eq i8 %9, 0, !dbg !16103
  br i1 %10, label %11, label %12, !dbg !16104

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !16105
  br label %12, !dbg !16107

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !16108
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !16109 {
  call void @llvm.dbg.value(metadata i32 0, metadata !16111, metadata !DIExpression()), !dbg !16114
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14694, metadata !DIExpression()) #23, !dbg !16115
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16117, !srcloc !14709
  call void @llvm.dbg.value(metadata i32 undef, metadata !14706, metadata !DIExpression()) #23, !dbg !16119
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !16119
  call void @llvm.dbg.value(metadata i32 undef, metadata !14700, metadata !DIExpression()) #23, !dbg !16115
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16120
  br i1 %2, label %4, label %3, !dbg !16121

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 148) #25, !dbg !16122
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.268, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16122
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 148) #25, !dbg !16122
  unreachable, !dbg !16122

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14706, metadata !DIExpression()) #23, !dbg !16119
  call void @llvm.dbg.value(metadata i32 undef, metadata !14700, metadata !DIExpression()) #23, !dbg !16115
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16123
  call void @llvm.dbg.value(metadata i32 undef, metadata !16113, metadata !DIExpression()), !dbg !16114
  call void @llvm.dbg.value(metadata i32 undef, metadata !16111, metadata !DIExpression()), !dbg !16114
  tail call fastcc void @z_sched_lock() #24, !dbg !16124
  call void @llvm.dbg.value(metadata i32 undef, metadata !14728, metadata !DIExpression()) #23, !dbg !16127
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14733, metadata !DIExpression()) #23, !dbg !16127
  %5 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16129
  br i1 %5, label %7, label %6, !dbg !16130

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 194) #25, !dbg !16131
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.270, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16131
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 194) #25, !dbg !16131
  unreachable, !dbg !16131

7:                                                ; preds = %4
  %8 = extractvalue { i32, i32 } %1, 0, !dbg !16117
  call void @llvm.dbg.value(metadata i32 %8, metadata !14706, metadata !DIExpression()) #23, !dbg !16119
  call void @llvm.dbg.value(metadata i32 %8, metadata !14700, metadata !DIExpression()) #23, !dbg !16115
  call void @llvm.dbg.value(metadata i32 %8, metadata !16113, metadata !DIExpression()), !dbg !16114
  call void @llvm.dbg.value(metadata i32 undef, metadata !14728, metadata !DIExpression()) #23, !dbg !16127
  call void @llvm.dbg.value(metadata i32 undef, metadata !14742, metadata !DIExpression()) #23, !dbg !16132
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !16134, !srcloc !14748
  call void @llvm.dbg.value(metadata i32 1, metadata !16111, metadata !DIExpression()), !dbg !16114
  call void @llvm.dbg.value(metadata i32 undef, metadata !16111, metadata !DIExpression()), !dbg !16114
  ret void, !dbg !16135
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !16136 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16137, !srcloc !15426
  call void @llvm.dbg.value(metadata i32 %1, metadata !15422, metadata !DIExpression()) #23, !dbg !16142
  %2 = icmp eq i32 %1, 0, !dbg !16143
  br i1 %2, label %4, label %3, !dbg !16144

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.302, i32 0, i32 0), i32 noundef 253) #25, !dbg !16145
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.275, i32 0, i32 0)) #25, !dbg !16145
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.302, i32 0, i32 0), i32 noundef 253) #25, !dbg !16145
  unreachable, !dbg !16145

4:                                                ; preds = %0
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16147
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !16147
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !16147
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !16147
  %9 = load i8, i8* %8, align 1, !dbg !16147
  %10 = icmp eq i8 %9, 1, !dbg !16147
  br i1 %10, label %11, label %12, !dbg !16150

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.22.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.302, i32 0, i32 0), i32 noundef 254) #25, !dbg !16151
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.275, i32 0, i32 0)) #25, !dbg !16151
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.302, i32 0, i32 0), i32 noundef 254) #25, !dbg !16151
  unreachable, !dbg !16151

12:                                               ; preds = %4
  %13 = add i8 %9, -1, !dbg !16153
  store i8 %13, i8* %8, align 1, !dbg !16153
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16154, !srcloc !16156
  ret void, !dbg !16157
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !16158 {
  call void @llvm.dbg.value(metadata i32 0, metadata !16160, metadata !DIExpression()), !dbg !16163
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14694, metadata !DIExpression()) #23, !dbg !16164
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16166, !srcloc !14709
  call void @llvm.dbg.value(metadata i32 undef, metadata !14706, metadata !DIExpression()) #23, !dbg !16168
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !16168
  call void @llvm.dbg.value(metadata i32 undef, metadata !14700, metadata !DIExpression()) #23, !dbg !16164
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16169
  br i1 %2, label %4, label %3, !dbg !16170

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 148) #25, !dbg !16171
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.268, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16171
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 148) #25, !dbg !16171
  unreachable, !dbg !16171

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14706, metadata !DIExpression()) #23, !dbg !16168
  call void @llvm.dbg.value(metadata i32 undef, metadata !14700, metadata !DIExpression()) #23, !dbg !16164
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16172
  call void @llvm.dbg.value(metadata i32 undef, metadata !16162, metadata !DIExpression()), !dbg !16163
  call void @llvm.dbg.value(metadata i32 undef, metadata !16160, metadata !DIExpression()), !dbg !16163
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16173
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !16173
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !16173
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !16173
  %9 = load i8, i8* %8, align 1, !dbg !16173
  %10 = icmp eq i8 %9, 0, !dbg !16173
  br i1 %10, label %11, label %12, !dbg !16178

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.272, i32 0, i32 0), i32 noundef 999) #25, !dbg !16179
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.275, i32 0, i32 0)) #25, !dbg !16179
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.272, i32 0, i32 0), i32 noundef 999) #25, !dbg !16179
  unreachable, !dbg !16179

12:                                               ; preds = %4
  %13 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16181, !srcloc !15426
  call void @llvm.dbg.value(metadata i32 %13, metadata !15422, metadata !DIExpression()) #23, !dbg !16186
  %14 = icmp eq i32 %13, 0, !dbg !16187
  br i1 %14, label %16, label %15, !dbg !16188

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.272, i32 0, i32 0), i32 noundef 1000) #25, !dbg !16189
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.275, i32 0, i32 0)) #25, !dbg !16189
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.272, i32 0, i32 0), i32 noundef 1000) #25, !dbg !16189
  unreachable, !dbg !16189

16:                                               ; preds = %12
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16191
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %17, i32 0, i32 0, i32 4, !dbg !16192
  %19 = bitcast %union.anon.2* %18 to %struct.device_state*, !dbg !16192
  %20 = getelementptr inbounds %struct.device_state, %struct.device_state* %19, i32 0, i32 1, !dbg !16192
  %21 = load i8, i8* %20, align 1, !dbg !16193
  %22 = add i8 %21, 1, !dbg !16193
  store i8 %22, i8* %20, align 1, !dbg !16193
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !16194
  call void @llvm.dbg.value(metadata i32 undef, metadata !14728, metadata !DIExpression()) #23, !dbg !16195
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14733, metadata !DIExpression()) #23, !dbg !16195
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16197
  br i1 %23, label %25, label %24, !dbg !16198

24:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 194) #25, !dbg !16199
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.270, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16199
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 194) #25, !dbg !16199
  unreachable, !dbg !16199

25:                                               ; preds = %16
  %26 = extractvalue { i32, i32 } %1, 0, !dbg !16166
  call void @llvm.dbg.value(metadata i32 %26, metadata !14706, metadata !DIExpression()) #23, !dbg !16168
  call void @llvm.dbg.value(metadata i32 %26, metadata !14700, metadata !DIExpression()) #23, !dbg !16164
  call void @llvm.dbg.value(metadata i32 %26, metadata !16162, metadata !DIExpression()), !dbg !16163
  call void @llvm.dbg.value(metadata i32 undef, metadata !14728, metadata !DIExpression()) #23, !dbg !16195
  call void @llvm.dbg.value(metadata i32 undef, metadata !14742, metadata !DIExpression()) #23, !dbg !16200
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %26) #23, !dbg !16202, !srcloc !14748
  call void @llvm.dbg.value(metadata i32 1, metadata !16160, metadata !DIExpression()), !dbg !16163
  call void @llvm.dbg.value(metadata i32 undef, metadata !16160, metadata !DIExpression()), !dbg !16163
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !16203
  ret void, !dbg !16204
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #8 !dbg !16205 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16206
  ret %struct.k_thread* %1, !dbg !16207
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !16208 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !16212, metadata !DIExpression()), !dbg !16217
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !16213, metadata !DIExpression()), !dbg !16217
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !16218
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16214, metadata !DIExpression()), !dbg !16217
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !16219
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16215, metadata !DIExpression()), !dbg !16217
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #24, !dbg !16220
  call void @llvm.dbg.value(metadata i32 %5, metadata !16216, metadata !DIExpression()), !dbg !16217
  %6 = icmp sgt i32 %5, 0, !dbg !16221
  br i1 %6, label %17, label %7, !dbg !16223

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !16224
  br i1 %8, label %17, label %9, !dbg !16226

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !16227
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !16227
  %12 = load i32, i32* %11, align 8, !dbg !16227
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !16229
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !16229
  %15 = load i32, i32* %14, align 8, !dbg !16229
  %16 = icmp ult i32 %12, %15, !dbg !16230
  br label %17, !dbg !16231

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !16232
  ret i1 %18, !dbg !16233
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16234 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16251, metadata !DIExpression()), !dbg !16266
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16252, metadata !DIExpression()), !dbg !16266
  %4 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !16267
  br i1 %4, label %5, label %6, !dbg !16270

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.272, i32 0, i32 0), i32 noundef 1179) #25, !dbg !16271
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.272, i32 0, i32 0), i32 noundef 1179) #25, !dbg !16271
  unreachable, !dbg !16271

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16273
  %8 = load i32, i32* %7, align 4, !dbg !16274
  %9 = add nsw i32 %8, 1, !dbg !16274
  store i32 %9, i32* %7, align 4, !dbg !16274
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !16275
  store i32 %8, i32* %10, align 8, !dbg !16276
  %11 = load i32, i32* %7, align 4, !dbg !16277
  %12 = icmp eq i32 %11, 0, !dbg !16278
  br i1 %12, label %13, label %35, !dbg !16279

13:                                               ; preds = %6
  %14 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !16280
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #23, !dbg !16280
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !16254, metadata !DIExpression()), !dbg !16280
  %15 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16280
  %16 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !16280
  %17 = load i32, i32* %16, align 4, !dbg !16280
  %18 = shl i32 %17, 2, !dbg !16280
  %19 = alloca i8, i32 %18, align 8, !dbg !16280
  %20 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !16280
  store i8* %19, i8** %20, align 4, !dbg !16280
  %21 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !16280
  %22 = alloca i8, i32 %17, align 8, !dbg !16280
  store i8* %22, i8** %21, align 4, !dbg !16280
  %23 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !16280
  store i32 -1, i32* %23, align 4, !dbg !16280
  %24 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16281
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !16263, metadata !DIExpression()), !dbg !16282
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !16253, metadata !DIExpression()), !dbg !16266
  %25 = icmp eq %struct.rbnode* %24, null, !dbg !16283
  br i1 %25, label %26, label %27, !dbg !16280

26:                                               ; preds = %27, %13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #23, !dbg !16283
  br label %35, !dbg !16284

27:                                               ; preds = %13, %27
  %28 = phi %struct.rbnode* [ %33, %27 ], [ %24, %13 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %28, metadata !16253, metadata !DIExpression()), !dbg !16266
  %29 = load i32, i32* %7, align 4, !dbg !16285
  %30 = add nsw i32 %29, 1, !dbg !16285
  store i32 %30, i32* %7, align 4, !dbg !16285
  %31 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %28, i32 2, !dbg !16287
  %32 = bitcast %struct.rbnode* %31 to i32*, !dbg !16287
  store i32 %29, i32* %32, align 8, !dbg !16288
  %33 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16281
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !16263, metadata !DIExpression()), !dbg !16282
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !16253, metadata !DIExpression()), !dbg !16266
  %34 = icmp eq %struct.rbnode* %33, null, !dbg !16283
  br i1 %34, label %26, label %27, !dbg !16280, !llvm.loop !16289

35:                                               ; preds = %26, %6
  %36 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16291
  %37 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16292
  call void @rb_insert(%struct.rbtree* noundef %36, %struct.rbnode* noundef %37) #25, !dbg !16293
  ret void, !dbg !16294
}

; Function Attrs: optsize
declare !dbg !16295 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !16300 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16303 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16305, metadata !DIExpression()), !dbg !16307
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16306, metadata !DIExpression()), !dbg !16307
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !16308
  br i1 %3, label %4, label %5, !dbg !16311

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.272, i32 0, i32 0), i32 noundef 1200) #25, !dbg !16312
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.272, i32 0, i32 0), i32 noundef 1200) #25, !dbg !16312
  unreachable, !dbg !16312

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16314
  %7 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16315
  tail call void @rb_remove(%struct.rbtree* noundef %6, %struct.rbnode* noundef %7) #25, !dbg !16316
  %8 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !16317
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !16317
  %10 = icmp eq %struct.rbnode* %9, null, !dbg !16319
  br i1 %10, label %11, label %13, !dbg !16320

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16321
  store i32 0, i32* %12, align 4, !dbg !16323
  br label %13, !dbg !16324

13:                                               ; preds = %11, %5
  ret void, !dbg !16325
}

; Function Attrs: optsize
declare !dbg !16326 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !16327 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16331, metadata !DIExpression()), !dbg !16334
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16332, metadata !DIExpression()), !dbg !16334
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16335
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #24, !dbg !16336
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !16333, metadata !DIExpression()), !dbg !16334
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16332, metadata !DIExpression()), !dbg !16334
  ret %struct.k_thread* %4, !dbg !16337
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !16338 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !16342, metadata !DIExpression()), !dbg !16343
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #25, !dbg !16344
  ret %struct.rbnode* %2, !dbg !16345
}

; Function Attrs: optsize
declare !dbg !16346 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #16 !dbg !16349 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !16359, metadata !DIExpression()), !dbg !16363
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !16364
  %3 = load i32, i32* %2, align 4, !dbg !16364
  %4 = icmp eq i32 %3, 0, !dbg !16366
  br i1 %4, label %10, label %5, !dbg !16367

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16360, metadata !DIExpression()), !dbg !16363
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !16368, !range !7683
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !16369
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !16361, metadata !DIExpression()), !dbg !16363
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.273(%struct._dnode* noundef %7) #24, !dbg !16370
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !16362, metadata !DIExpression()), !dbg !16363
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16360, metadata !DIExpression()), !dbg !16363
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !16363
  ret %struct.k_thread* %11, !dbg !16371
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !16372 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16376, metadata !DIExpression()), !dbg !16379
  call void @llvm.dbg.value(metadata i32 0, metadata !16377, metadata !DIExpression()), !dbg !16379
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.307(%struct._wait_q_t* noundef %0) #24, !dbg !16380
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16378, metadata !DIExpression()), !dbg !16379
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16381
  br i1 %3, label %8, label %4, !dbg !16382

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16383
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16385
  call void @llvm.dbg.value(metadata i32 1, metadata !16377, metadata !DIExpression()), !dbg !16379
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head.307(%struct._wait_q_t* noundef %0) #24, !dbg !16380
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16378, metadata !DIExpression()), !dbg !16379
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16381
  br i1 %7, label %8, label %4, !dbg !16382, !llvm.loop !16386

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !16379
  ret i32 %9, !dbg !16388
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.307(%struct._wait_q_t* noundef readonly %0) unnamed_addr #8 !dbg !16389 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16391, metadata !DIExpression()), !dbg !16392
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !16393
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.273(%struct._dnode* noundef %2) #24, !dbg !16394
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !16395
  ret %struct.k_thread* %4, !dbg !16396
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #7 !dbg !16397 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !16406, metadata !DIExpression()), !dbg !16407
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !16408
  tail call fastcc void @sys_dlist_init.308(%struct._dnode* noundef nonnull %2) #24, !dbg !16409
  ret void, !dbg !16410
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.308(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !16411 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16415, metadata !DIExpression()), !dbg !16416
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16417
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16418
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16419
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16420
  ret void, !dbg !16421
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !16422 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #24, !dbg !16423
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #24, !dbg !16424
  ret void, !dbg !16425
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !16426 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16431, metadata !DIExpression()), !dbg !16432
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !16433
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !16433
  %4 = load i8, i8* %3, align 2, !dbg !16433
  %5 = sext i8 %4 to i32, !dbg !16434
  ret i32 %5, !dbg !16435
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16436 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16440, metadata !DIExpression()), !dbg !16443
  call void @llvm.dbg.value(metadata i32 %1, metadata !16441, metadata !DIExpression()), !dbg !16443
  %3 = add i32 %1, 16, !dbg !16444
  %4 = icmp ult i32 %3, 31, !dbg !16444
  br i1 %4, label %6, label %5, !dbg !16444

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([134 x i8], [134 x i8]* @.str.8.311, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.272, i32 0, i32 0), i32 noundef 1331) #25, !dbg !16448
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9.312, i32 0, i32 0), i32 noundef %1, i32 noundef 14, i32 noundef -16) #25, !dbg !16448
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.272, i32 0, i32 0), i32 noundef 1331) #25, !dbg !16448
  unreachable, !dbg !16448

6:                                                ; preds = %2
  %7 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16450, !srcloc !15426
  call void @llvm.dbg.value(metadata i32 %7, metadata !15422, metadata !DIExpression()) #23, !dbg !16455
  %8 = icmp eq i32 %7, 0, !dbg !16456
  br i1 %8, label %10, label %9, !dbg !16457

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.272, i32 0, i32 0), i32 noundef 1332) #25, !dbg !16458
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.275, i32 0, i32 0)) #25, !dbg !16458
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.272, i32 0, i32 0), i32 noundef 1332) #25, !dbg !16458
  unreachable, !dbg !16458

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16442, metadata !DIExpression()), !dbg !16443
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !16460
  ret void, !dbg !16461
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !16462 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #24, !dbg !16463
  br i1 %1, label %8, label %2, !dbg !16464

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !16465
  br i1 %3, label %8, label %4, !dbg !16466

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16467
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #24, !dbg !16468
  %7 = xor i1 %6, true, !dbg !16466
  br label %8, !dbg !16466

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !16469
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #8 !dbg !16470 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !16471, !range !6846
  %2 = icmp eq i8 %1, 0, !dbg !16471
  ret i1 %2, !dbg !16472
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !16473 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16476, !srcloc !15426
  call void @llvm.dbg.value(metadata i32 %1, metadata !15422, metadata !DIExpression()) #23, !dbg !16481
  %2 = icmp eq i32 %1, 0, !dbg !16482
  br i1 %2, label %4, label %3, !dbg !16483

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.272, i32 0, i32 0), i32 noundef 1392) #25, !dbg !16484
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.275, i32 0, i32 0)) #25, !dbg !16484
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.272, i32 0, i32 0), i32 noundef 1392) #25, !dbg !16484
  unreachable, !dbg !16484

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14694, metadata !DIExpression()) #23, !dbg !16486
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16488, !srcloc !14709
  call void @llvm.dbg.value(metadata i32 undef, metadata !14706, metadata !DIExpression()) #23, !dbg !16490
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !16490
  call void @llvm.dbg.value(metadata i32 undef, metadata !14700, metadata !DIExpression()) #23, !dbg !16486
  %6 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16491
  br i1 %6, label %8, label %7, !dbg !16492

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 148) #25, !dbg !16493
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.268, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16493
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 148) #25, !dbg !16493
  unreachable, !dbg !16493

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !14706, metadata !DIExpression()) #23, !dbg !16490
  call void @llvm.dbg.value(metadata i32 undef, metadata !14700, metadata !DIExpression()) #23, !dbg !16486
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16494
  call void @llvm.dbg.value(metadata i32 undef, metadata !16475, metadata !DIExpression()), !dbg !16495
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16496
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14886, metadata !DIExpression()) #23, !dbg !16499
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 3, !dbg !16501
  %11 = load i8, i8* %10, align 1, !dbg !16502
  %12 = and i8 %11, 127, !dbg !16502
  store i8 %12, i8* %10, align 1, !dbg !16502
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14894, metadata !DIExpression()) #23, !dbg !16503
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %9) #25, !dbg !16505
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16506
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14903, metadata !DIExpression()) #23, !dbg !16507
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 3, !dbg !16509
  %15 = load i8, i8* %14, align 1, !dbg !16510
  %16 = or i8 %15, -128, !dbg !16510
  store i8 %16, i8* %14, align 1, !dbg !16510
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14910, metadata !DIExpression()) #23, !dbg !16511
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14917, metadata !DIExpression()) #23, !dbg !16513
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14923, metadata !DIExpression()) #23, !dbg !16513
  %17 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %13) #25, !dbg !16515
  br i1 %17, label %18, label %19, !dbg !16516

18:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.272, i32 0, i32 0), i32 noundef 186) #25, !dbg !16517
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.272, i32 0, i32 0), i32 noundef 186) #25, !dbg !16517
  unreachable, !dbg !16517

19:                                               ; preds = %8
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.273(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !16518
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14924, metadata !DIExpression()) #23, !dbg !16513
  %21 = icmp eq %struct._dnode* %20, null, !dbg !16519
  br i1 %21, label %32, label %22, !dbg !16518

22:                                               ; preds = %19, %29
  %23 = phi %struct._dnode* [ %30, %29 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %23, metadata !14924, metadata !DIExpression()) #23, !dbg !16513
  %24 = bitcast %struct._dnode* %23 to %struct.k_thread*, !dbg !16520
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !14924, metadata !DIExpression()) #23, !dbg !16513
  %25 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %13, %struct.k_thread* noundef nonnull %24) #25, !dbg !16521
  %26 = icmp sgt i32 %25, 0, !dbg !16522
  br i1 %26, label %27, label %29, !dbg !16523

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !16524
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %23, %struct._dnode* noundef %28) #25, !dbg !16525
  br label %34, !dbg !16526

29:                                               ; preds = %22
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %23) #25, !dbg !16519
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !14924, metadata !DIExpression()) #23, !dbg !16513
  %31 = icmp eq %struct._dnode* %30, null, !dbg !16519
  br i1 %31, label %32, label %22, !dbg !16518, !llvm.loop !16527

32:                                               ; preds = %29, %19
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !16529
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %33) #25, !dbg !16530
  br label %34, !dbg !16531

34:                                               ; preds = %27, %32
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !16532
  call void @llvm.dbg.value(metadata i32 undef, metadata !15370, metadata !DIExpression()) #23, !dbg !16533
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15375, metadata !DIExpression()) #23, !dbg !16533
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15379, metadata !DIExpression()) #23, !dbg !16535
  %35 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16537
  br i1 %35, label %37, label %36, !dbg !16538

36:                                               ; preds = %34
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 225) #25, !dbg !16539
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.270, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16539
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 225) #25, !dbg !16539
  unreachable, !dbg !16539

37:                                               ; preds = %34
  %38 = extractvalue { i32, i32 } %5, 0, !dbg !16488
  call void @llvm.dbg.value(metadata i32 %38, metadata !14706, metadata !DIExpression()) #23, !dbg !16490
  call void @llvm.dbg.value(metadata i32 %38, metadata !14700, metadata !DIExpression()) #23, !dbg !16486
  call void @llvm.dbg.value(metadata i32 %38, metadata !16475, metadata !DIExpression()), !dbg !16495
  call void @llvm.dbg.value(metadata i32 undef, metadata !15370, metadata !DIExpression()) #23, !dbg !16533
  %39 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %38) #25, !dbg !16540
  ret void, !dbg !16541
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !16542 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16546, metadata !DIExpression()), !dbg !16549
  %3 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16550, !srcloc !15426
  call void @llvm.dbg.value(metadata i32 %3, metadata !15422, metadata !DIExpression()) #23, !dbg !16555
  %4 = icmp eq i32 %3, 0, !dbg !16556
  br i1 %4, label %6, label %5, !dbg !16557

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.272, i32 0, i32 0), i32 noundef 1463) #25, !dbg !16558
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.275, i32 0, i32 0)) #25, !dbg !16558
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.272, i32 0, i32 0), i32 noundef 1463) #25, !dbg !16558
  unreachable, !dbg !16558

6:                                                ; preds = %1
  %7 = icmp eq i64 %2, -1, !dbg !16560
  br i1 %7, label %8, label %10, !dbg !16562

8:                                                ; preds = %6
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16563
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %9) #24, !dbg !16565
  br label %15, !dbg !16566

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i64 %2, metadata !16547, metadata !DIExpression()), !dbg !16549
  %11 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #24, !dbg !16567
  %12 = sext i32 %11 to i64, !dbg !16567
  call void @llvm.dbg.value(metadata i64 %12, metadata !16547, metadata !DIExpression()), !dbg !16549
  %13 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %12) #24, !dbg !16568
  %14 = trunc i64 %13 to i32, !dbg !16568
  call void @llvm.dbg.value(metadata i32 %14, metadata !16548, metadata !DIExpression()), !dbg !16549
  br label %15

15:                                               ; preds = %10, %8
  %16 = phi i32 [ -1, %8 ], [ %14, %10 ], !dbg !16549
  ret i32 %16, !dbg !16569
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16570 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16574, metadata !DIExpression()), !dbg !16575
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16576, !srcloc !16578
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #24, !dbg !16579
  ret void, !dbg !16580
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !16581 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16585, metadata !DIExpression()), !dbg !16589
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16590, !srcloc !15426
  call void @llvm.dbg.value(metadata i32 %2, metadata !15422, metadata !DIExpression()) #23, !dbg !16595
  %3 = icmp eq i32 %2, 0, !dbg !16596
  br i1 %3, label %5, label %4, !dbg !16597

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.272, i32 0, i32 0), i32 noundef 1420) #25, !dbg !16598
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.275, i32 0, i32 0)) #25, !dbg !16598
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.272, i32 0, i32 0), i32 noundef 1420) #25, !dbg !16598
  unreachable, !dbg !16598

5:                                                ; preds = %1
  %6 = icmp eq i64 %0, 0, !dbg !16600
  br i1 %6, label %7, label %8, !dbg !16602

7:                                                ; preds = %5
  tail call fastcc void @k_yield() #24, !dbg !16603
  br label %43, !dbg !16605

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i64 %0, metadata !16587, metadata !DIExpression()), !dbg !16589
  %9 = icmp sgt i64 %0, -3, !dbg !16606
  br i1 %9, label %10, label %14, !dbg !16608

10:                                               ; preds = %8
  %11 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !16609
  %12 = trunc i64 %0 to i32, !dbg !16611
  %13 = add i32 %11, %12, !dbg !16611
  call void @llvm.dbg.value(metadata i32 %13, metadata !16586, metadata !DIExpression()), !dbg !16589
  br label %17, !dbg !16612

14:                                               ; preds = %8
  %15 = trunc i64 %0 to i32, !dbg !16613
  %16 = sub i32 -2, %15, !dbg !16613
  call void @llvm.dbg.value(metadata i32 %16, metadata !16586, metadata !DIExpression()), !dbg !16589
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i32 [ %13, %10 ], [ %16, %14 ], !dbg !16615
  call void @llvm.dbg.value(metadata i32 %18, metadata !16586, metadata !DIExpression()), !dbg !16589
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14694, metadata !DIExpression()) #23, !dbg !16616
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16618, !srcloc !14709
  call void @llvm.dbg.value(metadata i32 undef, metadata !14706, metadata !DIExpression()) #23, !dbg !16620
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !16620
  call void @llvm.dbg.value(metadata i32 undef, metadata !14700, metadata !DIExpression()) #23, !dbg !16616
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16621
  br i1 %20, label %22, label %21, !dbg !16622

21:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 148) #25, !dbg !16623
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.268, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16623
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 148) #25, !dbg !16623
  unreachable, !dbg !16623

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !14706, metadata !DIExpression()) #23, !dbg !16620
  call void @llvm.dbg.value(metadata i32 undef, metadata !14700, metadata !DIExpression()) #23, !dbg !16616
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16624
  call void @llvm.dbg.value(metadata i32 undef, metadata !16588, metadata !DIExpression()), !dbg !16589
  %23 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16625
  store %struct.k_thread* %23, %struct.k_thread** @pending_current, align 4, !dbg !16626
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %23) #24, !dbg !16627
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16628
  %25 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !16629
  tail call fastcc void @z_add_thread_timeout.288(%struct.k_thread* noundef %24, [1 x i64] %25) #24, !dbg !16629
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16630
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %26) #24, !dbg !16631
  call void @llvm.dbg.value(metadata i32 undef, metadata !15370, metadata !DIExpression()) #23, !dbg !16632
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15375, metadata !DIExpression()) #23, !dbg !16632
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15379, metadata !DIExpression()) #23, !dbg !16634
  %27 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16636
  br i1 %27, label %29, label %28, !dbg !16637

28:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 225) #25, !dbg !16638
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.270, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16638
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 225) #25, !dbg !16638
  unreachable, !dbg !16638

29:                                               ; preds = %22
  %30 = extractvalue { i32, i32 } %19, 0, !dbg !16618
  call void @llvm.dbg.value(metadata i32 %30, metadata !14706, metadata !DIExpression()) #23, !dbg !16620
  call void @llvm.dbg.value(metadata i32 %30, metadata !14700, metadata !DIExpression()) #23, !dbg !16616
  call void @llvm.dbg.value(metadata i32 %30, metadata !16588, metadata !DIExpression()), !dbg !16589
  call void @llvm.dbg.value(metadata i32 undef, metadata !15370, metadata !DIExpression()) #23, !dbg !16632
  %31 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %30) #25, !dbg !16639
  %32 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16640
  %33 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %32, i32 noundef 16) #24, !dbg !16640
  br i1 %33, label %34, label %35, !dbg !16643

34:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.23.315, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.272, i32 0, i32 0), i32 noundef 1448) #25, !dbg !16644
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.275, i32 0, i32 0)) #25, !dbg !16644
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.272, i32 0, i32 0), i32 noundef 1448) #25, !dbg !16644
  unreachable, !dbg !16644

35:                                               ; preds = %29
  %36 = zext i32 %18 to i64, !dbg !16646
  %37 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !16647
  %38 = zext i32 %37 to i64, !dbg !16647
  %39 = sub nsw i64 %36, %38, !dbg !16648
  call void @llvm.dbg.value(metadata i64 %39, metadata !16585, metadata !DIExpression()), !dbg !16589
  %40 = icmp sgt i64 %39, 0, !dbg !16649
  %41 = select i1 %40, i64 %39, i64 0, !dbg !16649
  %42 = trunc i64 %41 to i32, !dbg !16649
  br label %43

43:                                               ; preds = %35, %7
  %44 = phi i32 [ 0, %7 ], [ %42, %35 ], !dbg !16589
  ret i32 %44, !dbg !16650
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #3 !dbg !16651 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16653, metadata !DIExpression()), !dbg !16654
  call void @llvm.dbg.value(metadata i64 %0, metadata !14754, metadata !DIExpression()), !dbg !16655
  call void @llvm.dbg.value(metadata i32 10000, metadata !14757, metadata !DIExpression()), !dbg !16655
  call void @llvm.dbg.value(metadata i32 1000, metadata !14758, metadata !DIExpression()), !dbg !16655
  call void @llvm.dbg.value(metadata i8 1, metadata !14759, metadata !DIExpression()), !dbg !16655
  call void @llvm.dbg.value(metadata i1 false, metadata !14760, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16655
  call void @llvm.dbg.value(metadata i1 false, metadata !14761, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16655
  call void @llvm.dbg.value(metadata i8 0, metadata !14762, metadata !DIExpression()), !dbg !16655
  call void @llvm.dbg.value(metadata i1 false, metadata !14763, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16655
  call void @llvm.dbg.value(metadata i1 true, metadata !14764, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16655
  call void @llvm.dbg.value(metadata i64 0, metadata !14765, metadata !DIExpression()), !dbg !16655
  call void @llvm.dbg.value(metadata i64 0, metadata !14765, metadata !DIExpression()), !dbg !16655
  call void @llvm.dbg.value(metadata i64 %0, metadata !14754, metadata !DIExpression()), !dbg !16655
  %2 = udiv i64 %0, 10, !dbg !16657
  ret i64 %2, !dbg !16661
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !16662 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16663, !srcloc !16665
  tail call void @z_impl_k_yield() #24, !dbg !16666
  ret void, !dbg !16667
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !16668 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16672, metadata !DIExpression()), !dbg !16674
  %2 = sext i32 %0 to i64, !dbg !16675
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #24, !dbg !16676
  call void @llvm.dbg.value(metadata i64 %3, metadata !16673, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16674
  %4 = shl i64 %3, 32, !dbg !16677
  %5 = ashr exact i64 %4, 32, !dbg !16677
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #24, !dbg !16678
  call void @llvm.dbg.value(metadata i32 %6, metadata !16673, metadata !DIExpression()), !dbg !16674
  %7 = sext i32 %6 to i64, !dbg !16679
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #24, !dbg !16680
  %9 = trunc i64 %8 to i32, !dbg !16680
  ret i32 %9, !dbg !16681
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #3 !dbg !16682 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16684, metadata !DIExpression()), !dbg !16685
  call void @llvm.dbg.value(metadata i64 %0, metadata !14754, metadata !DIExpression()), !dbg !16686
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14757, metadata !DIExpression()), !dbg !16686
  call void @llvm.dbg.value(metadata i32 10000, metadata !14758, metadata !DIExpression()), !dbg !16686
  call void @llvm.dbg.value(metadata i8 1, metadata !14759, metadata !DIExpression()), !dbg !16686
  call void @llvm.dbg.value(metadata i1 false, metadata !14760, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16686
  call void @llvm.dbg.value(metadata i1 true, metadata !14761, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16686
  call void @llvm.dbg.value(metadata i8 0, metadata !14762, metadata !DIExpression()), !dbg !16686
  call void @llvm.dbg.value(metadata i1 false, metadata !14763, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16686
  call void @llvm.dbg.value(metadata i1 true, metadata !14764, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16686
  call void @llvm.dbg.value(metadata i64 0, metadata !14765, metadata !DIExpression()), !dbg !16686
  call void @llvm.dbg.value(metadata i64 0, metadata !14765, metadata !DIExpression()), !dbg !16686
  %2 = add i64 %0, 99, !dbg !16688
  call void @llvm.dbg.value(metadata i64 %2, metadata !14754, metadata !DIExpression()), !dbg !16686
  %3 = udiv i64 %2, 100, !dbg !16689
  ret i64 %3, !dbg !16690
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #3 !dbg !16691 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16693, metadata !DIExpression()), !dbg !16694
  call void @llvm.dbg.value(metadata i64 %0, metadata !14754, metadata !DIExpression()), !dbg !16695
  call void @llvm.dbg.value(metadata i32 10000, metadata !14757, metadata !DIExpression()), !dbg !16695
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14758, metadata !DIExpression()), !dbg !16695
  call void @llvm.dbg.value(metadata i8 1, metadata !14759, metadata !DIExpression()), !dbg !16695
  call void @llvm.dbg.value(metadata i1 false, metadata !14760, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16695
  call void @llvm.dbg.value(metadata i1 false, metadata !14761, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16695
  call void @llvm.dbg.value(metadata i8 0, metadata !14762, metadata !DIExpression()), !dbg !16695
  call void @llvm.dbg.value(metadata i1 true, metadata !14763, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16695
  call void @llvm.dbg.value(metadata i1 false, metadata !14764, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16695
  call void @llvm.dbg.value(metadata i64 0, metadata !14765, metadata !DIExpression()), !dbg !16695
  call void @llvm.dbg.value(metadata i64 0, metadata !14765, metadata !DIExpression()), !dbg !16695
  %2 = mul i64 %0, 100, !dbg !16697
  ret i64 %2, !dbg !16699
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16700 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16702, metadata !DIExpression()), !dbg !16703
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #24, !dbg !16704
  br i1 %2, label %14, label %3, !dbg !16706

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !16707
  %5 = icmp slt i32 %4, 0, !dbg !16709
  br i1 %5, label %6, label %10, !dbg !16710

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16711
  %8 = load i8, i8* %7, align 1, !dbg !16711
  %9 = icmp eq i8 %8, 16, !dbg !16714
  br i1 %9, label %10, label %14, !dbg !16715

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !16716
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #24, !dbg !16717
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16718, !srcloc !15426
  call void @llvm.dbg.value(metadata i32 %11, metadata !15422, metadata !DIExpression()) #23, !dbg !16722
  %12 = icmp eq i32 %11, 0, !dbg !16723
  br i1 %12, label %13, label %14, !dbg !16724

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !16725
  br label %14, !dbg !16727

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !16728
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16729 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16731, metadata !DIExpression()), !dbg !16732
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16733
  %3 = load i8, i8* %2, align 1, !dbg !16733
  %4 = and i8 %3, 2, !dbg !16734
  %5 = icmp ne i8 %4, 0, !dbg !16735
  ret i1 %5, !dbg !16736
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #8 !dbg !16737 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16742
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16741, metadata !DIExpression()), !dbg !16743
  ret %struct.k_thread* %1, !dbg !16744
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !16745 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16746, !srcloc !15426
  call void @llvm.dbg.value(metadata i32 %1, metadata !15422, metadata !DIExpression()) #23, !dbg !16749
  %2 = icmp eq i32 %1, 0, !dbg !16750
  br i1 %2, label %3, label %8, !dbg !16751

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16752
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #24, !dbg !16753
  %6 = icmp ne i32 %5, 0, !dbg !16751
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !16754
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16755 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16757, metadata !DIExpression()), !dbg !16759
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14694, metadata !DIExpression()) #23, !dbg !16760
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16762, !srcloc !14709
  call void @llvm.dbg.value(metadata i32 undef, metadata !14706, metadata !DIExpression()) #23, !dbg !16764
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !16764
  call void @llvm.dbg.value(metadata i32 undef, metadata !14700, metadata !DIExpression()) #23, !dbg !16760
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16765
  br i1 %3, label %5, label %4, !dbg !16766

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 148) #25, !dbg !16767
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.268, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16767
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 148) #25, !dbg !16767
  unreachable, !dbg !16767

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !16762
  call void @llvm.dbg.value(metadata i32 %6, metadata !14706, metadata !DIExpression()) #23, !dbg !16764
  call void @llvm.dbg.value(metadata i32 %6, metadata !14700, metadata !DIExpression()) #23, !dbg !16760
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16768
  call void @llvm.dbg.value(metadata i32 %6, metadata !16758, metadata !DIExpression()), !dbg !16759
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !16769
  %8 = load i8, i8* %7, align 4, !dbg !16769
  %9 = and i8 %8, 1, !dbg !16771
  %10 = icmp eq i8 %9, 0, !dbg !16772
  br i1 %10, label %15, label %11, !dbg !16773

11:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14728, metadata !DIExpression()) #23, !dbg !16774
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14733, metadata !DIExpression()) #23, !dbg !16774
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16777
  br i1 %12, label %14, label %13, !dbg !16778

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 194) #25, !dbg !16779
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.270, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16779
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 194) #25, !dbg !16779
  unreachable, !dbg !16779

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %6, metadata !14728, metadata !DIExpression()) #23, !dbg !16774
  call void @llvm.dbg.value(metadata i32 %6, metadata !14742, metadata !DIExpression()) #23, !dbg !16780
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16782, !srcloc !14748
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.272, i32 0, i32 0), i32 noundef 1731) #25, !dbg !16783
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.321, i32 0, i32 0), %struct.k_thread* noundef nonnull %0) #25, !dbg !16783
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.272, i32 0, i32 0), i32 noundef 1731) #25, !dbg !16783
  unreachable, !dbg !16783

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16787
  %17 = load i8, i8* %16, align 1, !dbg !16787
  %18 = and i8 %17, 8, !dbg !16789
  %19 = icmp eq i8 %18, 0, !dbg !16790
  br i1 %19, label %24, label %20, !dbg !16791

20:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 undef, metadata !14728, metadata !DIExpression()) #23, !dbg !16792
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14733, metadata !DIExpression()) #23, !dbg !16792
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16795
  br i1 %21, label %23, label %22, !dbg !16796

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 194) #25, !dbg !16797
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.270, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16797
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 194) #25, !dbg !16797
  unreachable, !dbg !16797

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %6, metadata !14728, metadata !DIExpression()) #23, !dbg !16792
  call void @llvm.dbg.value(metadata i32 %6, metadata !14742, metadata !DIExpression()) #23, !dbg !16798
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16800, !srcloc !14748
  br label %39, !dbg !16801

24:                                               ; preds = %15
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #24, !dbg !16802
  %25 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16803
  %26 = icmp eq %struct.k_thread* %25, %0, !dbg !16805
  br i1 %26, label %27, label %35, !dbg !16806

27:                                               ; preds = %24
  %28 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16807, !srcloc !15426
  call void @llvm.dbg.value(metadata i32 %28, metadata !15422, metadata !DIExpression()) #23, !dbg !16810
  %29 = icmp eq i32 %28, 0, !dbg !16811
  br i1 %29, label %30, label %35, !dbg !16812

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !15370, metadata !DIExpression()) #23, !dbg !16813
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15375, metadata !DIExpression()) #23, !dbg !16813
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15379, metadata !DIExpression()) #23, !dbg !16816
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16818
  br i1 %31, label %33, label %32, !dbg !16819

32:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 225) #25, !dbg !16820
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.270, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16820
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 225) #25, !dbg !16820
  unreachable, !dbg !16820

33:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %6, metadata !15370, metadata !DIExpression()) #23, !dbg !16813
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %6) #25, !dbg !16821
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.272, i32 0, i32 0), i32 noundef 1778) #25, !dbg !16822
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.322, i32 0, i32 0)) #25, !dbg !16822
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.272, i32 0, i32 0), i32 noundef 1778) #25, !dbg !16822
  unreachable, !dbg !16822

35:                                               ; preds = %27, %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !14728, metadata !DIExpression()) #23, !dbg !16826
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14733, metadata !DIExpression()) #23, !dbg !16826
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16828
  br i1 %36, label %38, label %37, !dbg !16829

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 194) #25, !dbg !16830
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.270, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16830
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 194) #25, !dbg !16830
  unreachable, !dbg !16830

38:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %6, metadata !14728, metadata !DIExpression()) #23, !dbg !16826
  call void @llvm.dbg.value(metadata i32 %6, metadata !14742, metadata !DIExpression()) #23, !dbg !16831
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16833, !srcloc !14748
  br label %39, !dbg !16834

39:                                               ; preds = %38, %23
  ret void, !dbg !16834
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16835 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16837, metadata !DIExpression()), !dbg !16838
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16839
  %3 = load i8, i8* %2, align 1, !dbg !16839
  %4 = and i8 %3, 8, !dbg !16841
  %5 = icmp eq i8 %4, 0, !dbg !16842
  br i1 %5, label %6, label %20, !dbg !16843

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !16844
  %8 = or i8 %7, 8, !dbg !16844
  store i8 %8, i8* %2, align 1, !dbg !16844
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #24, !dbg !16846
  br i1 %9, label %10, label %12, !dbg !16848

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14886, metadata !DIExpression()) #23, !dbg !16849
  %11 = and i8 %8, 95, !dbg !16852
  store i8 %11, i8* %2, align 1, !dbg !16852
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14894, metadata !DIExpression()) #23, !dbg !16853
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #25, !dbg !16855
  br label %12, !dbg !16856

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16857
  %14 = load %struct._wait_q_t*, %struct._wait_q_t** %13, align 8, !dbg !16857
  %15 = icmp eq %struct._wait_q_t* %14, null, !dbg !16859
  br i1 %15, label %17, label %16, !dbg !16860

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !16861
  br label %17, !dbg !16863

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !16864
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16865
  tail call fastcc void @unpend_all(%struct._wait_q_t* noundef nonnull %19) #24, !dbg !16866
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !16867
  br label %20, !dbg !16868

20:                                               ; preds = %17, %1
  ret void, !dbg !16869
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%struct._wait_q_t* noundef %0) unnamed_addr #1 !dbg !16870 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16874, metadata !DIExpression()), !dbg !16876
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.307(%struct._wait_q_t* noundef %0) #24, !dbg !16877
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16875, metadata !DIExpression()), !dbg !16876
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16878
  br i1 %3, label %10, label %4, !dbg !16879

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !16880
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !16882
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16883, metadata !DIExpression()), !dbg !16889
  call void @llvm.dbg.value(metadata i32 0, metadata !16888, metadata !DIExpression()), !dbg !16889
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 8, i32 1, !dbg !16891
  store i32 0, i32* %7, align 4, !dbg !16892
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16893
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head.307(%struct._wait_q_t* noundef %0) #24, !dbg !16877
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16875, metadata !DIExpression()), !dbg !16876
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16878
  br i1 %9, label %10, label %4, !dbg !16879, !llvm.loop !16894

10:                                               ; preds = %4, %1
  ret void, !dbg !16896
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !16897 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16902, metadata !DIExpression()), !dbg !16905
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16901, metadata !DIExpression()), !dbg !16905
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14694, metadata !DIExpression()) #23, !dbg !16906
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16908, !srcloc !14709
  call void @llvm.dbg.value(metadata i32 undef, metadata !14706, metadata !DIExpression()) #23, !dbg !16910
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !16910
  call void @llvm.dbg.value(metadata i32 undef, metadata !14700, metadata !DIExpression()) #23, !dbg !16906
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16911
  br i1 %4, label %6, label %5, !dbg !16912

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 148) #25, !dbg !16913
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.268, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16913
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 148) #25, !dbg !16913
  unreachable, !dbg !16913

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !16908
  call void @llvm.dbg.value(metadata i32 %7, metadata !14706, metadata !DIExpression()) #23, !dbg !16910
  call void @llvm.dbg.value(metadata i32 %7, metadata !14700, metadata !DIExpression()) #23, !dbg !16906
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16914
  call void @llvm.dbg.value(metadata i32 %7, metadata !16903, metadata !DIExpression()), !dbg !16905
  call void @llvm.dbg.value(metadata i32 0, metadata !16904, metadata !DIExpression()), !dbg !16905
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16915
  %9 = load i8, i8* %8, align 1, !dbg !16915
  %10 = and i8 %9, 8, !dbg !16917
  %11 = icmp eq i8 %10, 0, !dbg !16918
  br i1 %11, label %12, label %35, !dbg !16919

12:                                               ; preds = %6
  %13 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %13, metadata !16902, metadata !DIExpression()), !dbg !16905
  %14 = icmp eq i64 %13, 0, !dbg !16920
  br i1 %14, label %35, label %15, !dbg !16922

15:                                               ; preds = %12
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16923
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !16925
  br i1 %17, label %35, label %18, !dbg !16926

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16927
  %20 = load %struct._wait_q_t*, %struct._wait_q_t** %19, align 8, !dbg !16927
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %16, i32 0, i32 3, !dbg !16928
  %22 = icmp eq %struct._wait_q_t* %20, %21, !dbg !16929
  br i1 %22, label %35, label %23, !dbg !16930

23:                                               ; preds = %18
  %24 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16931, !srcloc !15426
  call void @llvm.dbg.value(metadata i32 %24, metadata !15422, metadata !DIExpression()) #23, !dbg !16937
  %25 = icmp eq i32 %24, 0, !dbg !16938
  br i1 %25, label %27, label %26, !dbg !16939

26:                                               ; preds = %23
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.272, i32 0, i32 0), i32 noundef 1809) #25, !dbg !16940
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13.323, i32 0, i32 0)) #25, !dbg !16940
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.272, i32 0, i32 0), i32 noundef 1809) #25, !dbg !16940
  unreachable, !dbg !16940

27:                                               ; preds = %23
  %28 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16942
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16943
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %28, %struct._wait_q_t* noundef nonnull %29) #24, !dbg !16944
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16945
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %30, [1 x i64] %1) #24, !dbg !16946
  call void @llvm.dbg.value(metadata i32 undef, metadata !15370, metadata !DIExpression()) #23, !dbg !16947
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15375, metadata !DIExpression()) #23, !dbg !16947
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15379, metadata !DIExpression()) #23, !dbg !16949
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16951
  br i1 %31, label %33, label %32, !dbg !16952

32:                                               ; preds = %27
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 225) #25, !dbg !16953
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.270, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16953
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 225) #25, !dbg !16953
  unreachable, !dbg !16953

33:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %7, metadata !15370, metadata !DIExpression()) #23, !dbg !16947
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %7) #25, !dbg !16954
  call void @llvm.dbg.value(metadata i32 %34, metadata !16904, metadata !DIExpression()), !dbg !16905
  br label %40, !dbg !16955

35:                                               ; preds = %15, %18, %12, %6
  %36 = phi i32 [ 0, %6 ], [ -16, %12 ], [ -45, %18 ], [ -45, %15 ], !dbg !16956
  call void @llvm.dbg.value(metadata i32 %36, metadata !16904, metadata !DIExpression()), !dbg !16905
  call void @llvm.dbg.value(metadata i32 undef, metadata !14728, metadata !DIExpression()) #23, !dbg !16957
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14733, metadata !DIExpression()) #23, !dbg !16957
  %37 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16959
  br i1 %37, label %39, label %38, !dbg !16960

38:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 194) #25, !dbg !16961
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.270, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16961
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 194) #25, !dbg !16961
  unreachable, !dbg !16961

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %7, metadata !14728, metadata !DIExpression()) #23, !dbg !16957
  call void @llvm.dbg.value(metadata i32 %7, metadata !14742, metadata !DIExpression()) #23, !dbg !16962
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !16964, !srcloc !14748
  br label %40, !dbg !16965

40:                                               ; preds = %39, %33
  %41 = phi i32 [ %36, %39 ], [ %34, %33 ], !dbg !16905
  ret i32 %41, !dbg !16966
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%struct._wait_q_t* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !16967 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16971, metadata !DIExpression()), !dbg !16979
  call void @llvm.dbg.value(metadata i32 %1, metadata !16972, metadata !DIExpression()), !dbg !16979
  call void @llvm.dbg.value(metadata i8* %2, metadata !16973, metadata !DIExpression()), !dbg !16979
  call void @llvm.dbg.value(metadata i8 0, metadata !16975, metadata !DIExpression()), !dbg !16979
  call void @llvm.dbg.value(metadata i32 0, metadata !16976, metadata !DIExpression()), !dbg !16980
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14694, metadata !DIExpression()) #23, !dbg !16981
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16983, !srcloc !14709
  call void @llvm.dbg.value(metadata i32 undef, metadata !14706, metadata !DIExpression()) #23, !dbg !16985
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()) #23, !dbg !16985
  call void @llvm.dbg.value(metadata i32 undef, metadata !14700, metadata !DIExpression()) #23, !dbg !16981
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16986
  br i1 %5, label %7, label %6, !dbg !16987

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 148) #25, !dbg !16988
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.268, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16988
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 148) #25, !dbg !16988
  unreachable, !dbg !16988

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !14706, metadata !DIExpression()) #23, !dbg !16985
  call void @llvm.dbg.value(metadata i32 undef, metadata !14700, metadata !DIExpression()) #23, !dbg !16981
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16989
  call void @llvm.dbg.value(metadata i32 undef, metadata !16978, metadata !DIExpression()), !dbg !16980
  call void @llvm.dbg.value(metadata i8 poison, metadata !16975, metadata !DIExpression()), !dbg !16979
  call void @llvm.dbg.value(metadata i32 undef, metadata !16976, metadata !DIExpression()), !dbg !16980
  %8 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %9 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %8) #24, !dbg !16990
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16974, metadata !DIExpression()), !dbg !16979
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !16993
  br i1 %10, label %15, label %11, !dbg !16995

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16996, metadata !DIExpression()), !dbg !17004
  call void @llvm.dbg.value(metadata i32 %1, metadata !17002, metadata !DIExpression()), !dbg !17004
  call void @llvm.dbg.value(metadata i8* %2, metadata !17003, metadata !DIExpression()), !dbg !17004
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16883, metadata !DIExpression()), !dbg !17007
  call void @llvm.dbg.value(metadata i32 %1, metadata !16888, metadata !DIExpression()), !dbg !17007
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 8, i32 1, !dbg !17009
  store i32 %1, i32* %12, align 4, !dbg !17010
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !17011
  store i8* %2, i8** %13, align 4, !dbg !17012
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %9) #24, !dbg !17013
  %14 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %9) #24, !dbg !17014
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %9) #24, !dbg !17015
  call void @llvm.dbg.value(metadata i8 1, metadata !16975, metadata !DIExpression()), !dbg !16979
  br label %15, !dbg !17016

15:                                               ; preds = %7, %11
  call void @llvm.dbg.value(metadata i8 poison, metadata !16975, metadata !DIExpression()), !dbg !16979
  call void @llvm.dbg.value(metadata i32 undef, metadata !14728, metadata !DIExpression()) #23, !dbg !17017
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14733, metadata !DIExpression()) #23, !dbg !17017
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !17019
  br i1 %16, label %18, label %17, !dbg !17020

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 194) #25, !dbg !17021
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.270, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !17021
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.267, i32 0, i32 0), i32 noundef 194) #25, !dbg !17021
  unreachable, !dbg !17021

18:                                               ; preds = %15
  %19 = xor i1 %10, true, !dbg !16979
  %20 = extractvalue { i32, i32 } %4, 0, !dbg !16983
  call void @llvm.dbg.value(metadata i32 %20, metadata !14706, metadata !DIExpression()) #23, !dbg !16985
  call void @llvm.dbg.value(metadata i32 %20, metadata !14700, metadata !DIExpression()) #23, !dbg !16981
  call void @llvm.dbg.value(metadata i32 %20, metadata !16978, metadata !DIExpression()), !dbg !16980
  call void @llvm.dbg.value(metadata i32 undef, metadata !14728, metadata !DIExpression()) #23, !dbg !17017
  call void @llvm.dbg.value(metadata i32 undef, metadata !14742, metadata !DIExpression()) #23, !dbg !17022
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !17024, !srcloc !14748
  call void @llvm.dbg.value(metadata i8 poison, metadata !16975, metadata !DIExpression()), !dbg !16979
  call void @llvm.dbg.value(metadata i32 undef, metadata !16976, metadata !DIExpression()), !dbg !16980
  ret i1 %19, !dbg !17025
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !17026 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !17032, metadata !DIExpression()), !dbg !17037
  call void @llvm.dbg.value(metadata i64 undef, metadata !17034, metadata !DIExpression()), !dbg !17037
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !17031, metadata !DIExpression()), !dbg !17037
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !17033, metadata !DIExpression()), !dbg !17037
  call void @llvm.dbg.value(metadata i8** %4, metadata !17035, metadata !DIExpression()), !dbg !17037
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) #24, !dbg !17038
  call void @llvm.dbg.value(metadata i32 %6, metadata !17036, metadata !DIExpression()), !dbg !17037
  %7 = icmp eq i8** %4, null, !dbg !17039
  br i1 %7, label %12, label %8, !dbg !17041

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17042
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !17044
  %11 = load i8*, i8** %10, align 4, !dbg !17044
  store i8* %11, i8** %4, align 4, !dbg !17045
  br label %12, !dbg !17046

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !17047
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_condvar_init(%struct.k_condvar* noundef %0) local_unnamed_addr #7 !dbg !17048 {
  call void @llvm.dbg.value(metadata %struct.k_condvar* %0, metadata !17061, metadata !DIExpression()), !dbg !17062
  %2 = getelementptr inbounds %struct.k_condvar, %struct.k_condvar* %0, i32 0, i32 0, !dbg !17063
  tail call fastcc void @z_waitq_init.324(%struct._wait_q_t* noundef %2) #24, !dbg !17064
  ret i32 0, !dbg !17065
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.324(%struct._wait_q_t* noundef %0) unnamed_addr #7 !dbg !17066 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17071, metadata !DIExpression()), !dbg !17072
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !17073
  tail call fastcc void @sys_dlist_init.325(%struct._dnode* noundef %2) #24, !dbg !17074
  ret void, !dbg !17075
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.325(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !17076 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17081, metadata !DIExpression()), !dbg !17082
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17083
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !17084
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17085
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !17086
  ret void, !dbg !17087
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_condvar_signal(%struct.k_condvar* noundef %0) local_unnamed_addr #1 !dbg !17088 {
  call void @llvm.dbg.value(metadata %struct.k_condvar* %0, metadata !17090, metadata !DIExpression()), !dbg !17177
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.328, metadata !17178, metadata !DIExpression()) #23, !dbg !17185
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17187, !srcloc !17193
  call void @llvm.dbg.value(metadata i32 undef, metadata !17190, metadata !DIExpression()) #23, !dbg !17194
  call void @llvm.dbg.value(metadata i32 undef, metadata !17191, metadata !DIExpression()) #23, !dbg !17194
  call void @llvm.dbg.value(metadata i32 undef, metadata !17184, metadata !DIExpression()) #23, !dbg !17185
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.328) #25, !dbg !17195
  br i1 %3, label %5, label %4, !dbg !17198

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.329, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.331, i32 0, i32 0), i32 noundef 148) #25, !dbg !17199
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.332, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.328) #25, !dbg !17199
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.331, i32 0, i32 0), i32 noundef 148) #25, !dbg !17199
  unreachable, !dbg !17199

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !17187
  call void @llvm.dbg.value(metadata i32 %6, metadata !17190, metadata !DIExpression()) #23, !dbg !17194
  call void @llvm.dbg.value(metadata i32 %6, metadata !17184, metadata !DIExpression()) #23, !dbg !17185
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.328) #25, !dbg !17201
  call void @llvm.dbg.value(metadata i32 %6, metadata !17091, metadata !DIExpression()), !dbg !17177
  %7 = getelementptr inbounds %struct.k_condvar, %struct.k_condvar* %0, i32 0, i32 0, !dbg !17202
  %8 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %7) #25, !dbg !17203
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !17096, metadata !DIExpression()), !dbg !17177
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !17204
  br i1 %9, label %13, label %10, !dbg !17206

10:                                               ; preds = %5
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !17207, metadata !DIExpression()), !dbg !17213
  call void @llvm.dbg.value(metadata i32 0, metadata !17212, metadata !DIExpression()), !dbg !17213
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 8, i32 1, !dbg !17216
  store i32 0, i32* %11, align 4, !dbg !17217
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %8) #25, !dbg !17218
  %12 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !17219
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.328, [1 x i32] %12) #25, !dbg !17219
  br label %17, !dbg !17220

13:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !17221, metadata !DIExpression()) #23, !dbg !17227
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.328, metadata !17226, metadata !DIExpression()) #23, !dbg !17227
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.328) #25, !dbg !17230
  br i1 %14, label %16, label %15, !dbg !17233

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.329, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.333, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.331, i32 0, i32 0), i32 noundef 194) #25, !dbg !17234
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.334, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.328) #25, !dbg !17234
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.331, i32 0, i32 0), i32 noundef 194) #25, !dbg !17234
  unreachable, !dbg !17234

16:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %6, metadata !17221, metadata !DIExpression()) #23, !dbg !17227
  call void @llvm.dbg.value(metadata i32 %6, metadata !17236, metadata !DIExpression()) #23, !dbg !17239
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !17241, !srcloc !17242
  br label %17

17:                                               ; preds = %10, %16
  ret i32 0, !dbg !17243
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_condvar_broadcast(%struct.k_condvar* noundef %0) local_unnamed_addr #1 !dbg !17244 {
  call void @llvm.dbg.value(metadata %struct.k_condvar* %0, metadata !17246, metadata !DIExpression()), !dbg !17250
  call void @llvm.dbg.value(metadata i32 0, metadata !17249, metadata !DIExpression()), !dbg !17250
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.328, metadata !17178, metadata !DIExpression()) #23, !dbg !17251
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17253, !srcloc !17193
  call void @llvm.dbg.value(metadata i32 undef, metadata !17190, metadata !DIExpression()) #23, !dbg !17255
  call void @llvm.dbg.value(metadata i32 undef, metadata !17191, metadata !DIExpression()) #23, !dbg !17255
  call void @llvm.dbg.value(metadata i32 undef, metadata !17184, metadata !DIExpression()) #23, !dbg !17251
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.328) #25, !dbg !17256
  br i1 %3, label %5, label %4, !dbg !17257

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.329, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.331, i32 0, i32 0), i32 noundef 148) #25, !dbg !17258
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.332, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.328) #25, !dbg !17258
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.331, i32 0, i32 0), i32 noundef 148) #25, !dbg !17258
  unreachable, !dbg !17258

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !17190, metadata !DIExpression()) #23, !dbg !17255
  call void @llvm.dbg.value(metadata i32 undef, metadata !17184, metadata !DIExpression()) #23, !dbg !17251
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.328) #25, !dbg !17259
  call void @llvm.dbg.value(metadata i32 undef, metadata !17248, metadata !DIExpression()), !dbg !17250
  %6 = getelementptr inbounds %struct.k_condvar, %struct.k_condvar* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 0, metadata !17249, metadata !DIExpression()), !dbg !17250
  %7 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %6) #25, !dbg !17260
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !17247, metadata !DIExpression()), !dbg !17250
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !17261
  br i1 %8, label %16, label %9, !dbg !17262

9:                                                ; preds = %5, %9
  %10 = phi %struct.k_thread* [ %14, %9 ], [ %7, %5 ]
  %11 = phi i32 [ %12, %9 ], [ 0, %5 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !17249, metadata !DIExpression()), !dbg !17250
  %12 = add nuw nsw i32 %11, 1, !dbg !17263
  call void @llvm.dbg.value(metadata i32 %12, metadata !17249, metadata !DIExpression()), !dbg !17250
  call void @llvm.dbg.value(metadata %struct.k_thread* %10, metadata !17207, metadata !DIExpression()), !dbg !17265
  call void @llvm.dbg.value(metadata i32 0, metadata !17212, metadata !DIExpression()), !dbg !17265
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %10, i32 0, i32 8, i32 1, !dbg !17267
  store i32 0, i32* %13, align 4, !dbg !17268
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %10) #25, !dbg !17269
  %14 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %6) #25, !dbg !17260
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !17247, metadata !DIExpression()), !dbg !17250
  %15 = icmp eq %struct.k_thread* %14, null, !dbg !17261
  br i1 %15, label %16, label %9, !dbg !17262, !llvm.loop !17270

16:                                               ; preds = %9, %5
  %17 = phi i32 [ 0, %5 ], [ %12, %9 ], !dbg !17250
  %18 = extractvalue { i32, i32 } %2, 0, !dbg !17253
  call void @llvm.dbg.value(metadata i32 %18, metadata !17190, metadata !DIExpression()) #23, !dbg !17255
  call void @llvm.dbg.value(metadata i32 %18, metadata !17184, metadata !DIExpression()) #23, !dbg !17251
  call void @llvm.dbg.value(metadata i32 %18, metadata !17248, metadata !DIExpression()), !dbg !17250
  %19 = insertvalue [1 x i32] poison, i32 %18, 0, !dbg !17272
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.328, [1 x i32] %19) #25, !dbg !17272
  ret i32 %17, !dbg !17273
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_condvar_wait(%struct.k_condvar* noundef %0, %struct.k_mutex* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17274 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17291, metadata !DIExpression()), !dbg !17294
  call void @llvm.dbg.value(metadata %struct.k_condvar* %0, metadata !17289, metadata !DIExpression()), !dbg !17294
  call void @llvm.dbg.value(metadata %struct.k_mutex* %1, metadata !17290, metadata !DIExpression()), !dbg !17294
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.328, metadata !17178, metadata !DIExpression()) #23, !dbg !17295
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17297, !srcloc !17193
  call void @llvm.dbg.value(metadata i32 undef, metadata !17190, metadata !DIExpression()) #23, !dbg !17299
  call void @llvm.dbg.value(metadata i32 undef, metadata !17191, metadata !DIExpression()) #23, !dbg !17299
  call void @llvm.dbg.value(metadata i32 undef, metadata !17184, metadata !DIExpression()) #23, !dbg !17295
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.328) #25, !dbg !17300
  br i1 %5, label %7, label %6, !dbg !17301

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.329, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.331, i32 0, i32 0), i32 noundef 148) #25, !dbg !17302
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.332, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.328) #25, !dbg !17302
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.331, i32 0, i32 0), i32 noundef 148) #25, !dbg !17302
  unreachable, !dbg !17302

7:                                                ; preds = %3
  %8 = extractvalue { i32, i32 } %4, 0, !dbg !17297
  call void @llvm.dbg.value(metadata i32 %8, metadata !17190, metadata !DIExpression()) #23, !dbg !17299
  call void @llvm.dbg.value(metadata i32 %8, metadata !17184, metadata !DIExpression()) #23, !dbg !17295
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.328) #25, !dbg !17303
  call void @llvm.dbg.value(metadata i32 %8, metadata !17292, metadata !DIExpression()), !dbg !17294
  tail call fastcc void @k_mutex_unlock.337(%struct.k_mutex* noundef %1) #24, !dbg !17304
  %9 = getelementptr inbounds %struct.k_condvar, %struct.k_condvar* %0, i32 0, i32 0, !dbg !17305
  %10 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !17306
  %11 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock.328, [1 x i32] %10, %struct._wait_q_t* noundef %9, [1 x i64] %2) #25, !dbg !17306
  call void @llvm.dbg.value(metadata i32 %11, metadata !17293, metadata !DIExpression()), !dbg !17294
  tail call fastcc void @k_mutex_lock.338(%struct.k_mutex* noundef %1) #24, !dbg !17307
  ret i32 %11, !dbg !17308
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_unlock.337(%struct.k_mutex* noundef %0) unnamed_addr #1 !dbg !17309 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !17313, metadata !DIExpression()), !dbg !17314
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !17315, !srcloc !17317
  %2 = tail call i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) #25, !dbg !17318
  ret void, !dbg !17319
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_lock.338(%struct.k_mutex* noundef %0) unnamed_addr #1 !dbg !17320 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17325, metadata !DIExpression()), !dbg !17326
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !17324, metadata !DIExpression()), !dbg !17326
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !17327, !srcloc !17329
  %2 = tail call i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] [i64 -1]) #25, !dbg !17330
  ret void, !dbg !17331
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !17332 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #25, !dbg !17334
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #25, !dbg !17335
  ret void, !dbg !17336
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17337 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !17347, metadata !DIExpression()), !dbg !17364
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17345, metadata !DIExpression()), !dbg !17364
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !17346, metadata !DIExpression()), !dbg !17364
  %5 = icmp eq i64 %4, -1, !dbg !17365
  br i1 %5, label %63, label %6, !dbg !17367

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17368
  %8 = tail call fastcc zeroext i1 @sys_dnode_is_linked.343(%struct._dnode* noundef %7) #24, !dbg !17368
  br i1 %8, label %9, label %10, !dbg !17371

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.346, i32 0, i32 0), i32 noundef 99) #25, !dbg !17372
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.347, i32 0, i32 0)) #25, !dbg !17372
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.346, i32 0, i32 0), i32 noundef 99) #25, !dbg !17372
  unreachable, !dbg !17372

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !17374
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %11, align 8, !dbg !17375
  call void @llvm.dbg.value(metadata i32 0, metadata !17348, metadata !DIExpression()), !dbg !17376
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17377, metadata !DIExpression()) #23, !dbg !17384
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17386, !srcloc !17392
  call void @llvm.dbg.value(metadata i32 undef, metadata !17389, metadata !DIExpression()) #23, !dbg !17393
  call void @llvm.dbg.value(metadata i32 undef, metadata !17390, metadata !DIExpression()) #23, !dbg !17393
  call void @llvm.dbg.value(metadata i32 undef, metadata !17383, metadata !DIExpression()) #23, !dbg !17384
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17394
  br i1 %13, label %15, label %14, !dbg !17397

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.349, i32 0, i32 0), i32 noundef 148) #25, !dbg !17398
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.350, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17398
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.349, i32 0, i32 0), i32 noundef 148) #25, !dbg !17398
  unreachable, !dbg !17398

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !17386
  call void @llvm.dbg.value(metadata i32 %16, metadata !17389, metadata !DIExpression()) #23, !dbg !17393
  call void @llvm.dbg.value(metadata i32 %16, metadata !17383, metadata !DIExpression()) #23, !dbg !17384
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17400
  call void @llvm.dbg.value(metadata i32 %16, metadata !17354, metadata !DIExpression()), !dbg !17376
  call void @llvm.dbg.value(metadata i32 undef, metadata !17348, metadata !DIExpression()), !dbg !17376
  %17 = icmp slt i64 %4, -1, !dbg !17401
  br i1 %17, label %18, label %24, !dbg !17402

18:                                               ; preds = %15
  %19 = load i64, i64* @curr_tick, align 8, !dbg !17403
  %20 = add i64 %4, %19, !dbg !17404
  %21 = sub i64 -2, %20, !dbg !17404
  call void @llvm.dbg.value(metadata i64 %21, metadata !17358, metadata !DIExpression()), !dbg !17405
  %22 = icmp sgt i64 %21, 1, !dbg !17406
  %23 = select i1 %22, i64 %21, i64 1, !dbg !17406
  br label %29, !dbg !17407

24:                                               ; preds = %15
  %25 = add nuw nsw i64 %4, 1, !dbg !17408
  %26 = tail call fastcc i32 @elapsed.351() #24, !dbg !17410
  %27 = sext i32 %26 to i64, !dbg !17410
  %28 = add nsw i64 %25, %27, !dbg !17411
  br label %29

29:                                               ; preds = %24, %18
  %30 = phi i64 [ %23, %18 ], [ %28, %24 ], !dbg !17412
  %31 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17413
  store i64 %30, i64* %31, align 8, !dbg !17414
  %32 = tail call fastcc %struct._timeout* @first() #24, !dbg !17415
  call void @llvm.dbg.value(metadata %struct._timeout* %32, metadata !17355, metadata !DIExpression()), !dbg !17417
  %33 = icmp eq %struct._timeout* %32, null, !dbg !17418
  br i1 %33, label %48, label %34, !dbg !17418

34:                                               ; preds = %29, %44
  %35 = phi i64 [ %45, %44 ], [ %30, %29 ], !dbg !17419
  %36 = phi %struct._timeout* [ %46, %44 ], [ %32, %29 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %36, metadata !17355, metadata !DIExpression()), !dbg !17417
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !17423
  %38 = load i64, i64* %37, align 8, !dbg !17423
  %39 = icmp slt i64 %35, %38, !dbg !17424
  br i1 %39, label %40, label %44, !dbg !17425

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !17423
  %42 = sub nsw i64 %38, %35, !dbg !17426
  store i64 %42, i64* %41, align 8, !dbg !17426
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 0, !dbg !17428
  tail call fastcc void @sys_dlist_insert.352(%struct._dnode* noundef nonnull %43, %struct._dnode* noundef nonnull %7) #24, !dbg !17429
  br label %49, !dbg !17430

44:                                               ; preds = %34
  %45 = sub nsw i64 %35, %38, !dbg !17431
  store i64 %45, i64* %31, align 8, !dbg !17431
  %46 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %36) #24, !dbg !17432
  call void @llvm.dbg.value(metadata %struct._timeout* %46, metadata !17355, metadata !DIExpression()), !dbg !17417
  %47 = icmp eq %struct._timeout* %46, null, !dbg !17418
  br i1 %47, label %48, label %34, !dbg !17418, !llvm.loop !17433

48:                                               ; preds = %44, %29
  tail call fastcc void @sys_dlist_append.353(%struct._dnode* noundef nonnull %7) #24, !dbg !17435
  br label %49, !dbg !17438

49:                                               ; preds = %40, %48
  %50 = tail call fastcc %struct._timeout* @first() #24, !dbg !17439
  %51 = icmp eq %struct._timeout* %50, %0, !dbg !17440
  br i1 %51, label %52, label %59, !dbg !17441

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @next_timeout() #24, !dbg !17442
  call void @llvm.dbg.value(metadata i32 %53, metadata !17361, metadata !DIExpression()), !dbg !17443
  %54 = icmp ne i32 %53, 0, !dbg !17444
  %55 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %56 = icmp eq i32 %55, %53
  %57 = select i1 %54, i1 %56, i1 false, !dbg !17446
  br i1 %57, label %59, label %58, !dbg !17446

58:                                               ; preds = %52
  tail call void @sys_clock_set_timeout(i32 noundef %53, i1 noundef zeroext false) #25, !dbg !17447
  br label %59, !dbg !17449

59:                                               ; preds = %58, %52, %49
  call void @llvm.dbg.value(metadata i32 undef, metadata !17450, metadata !DIExpression()) #23, !dbg !17456
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17455, metadata !DIExpression()) #23, !dbg !17456
  %60 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17458
  br i1 %60, label %62, label %61, !dbg !17461

61:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.349, i32 0, i32 0), i32 noundef 194) #25, !dbg !17462
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.355, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17462
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.349, i32 0, i32 0), i32 noundef 194) #25, !dbg !17462
  unreachable, !dbg !17462

62:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !17450, metadata !DIExpression()) #23, !dbg !17456
  call void @llvm.dbg.value(metadata i32 %16, metadata !17464, metadata !DIExpression()) #23, !dbg !17467
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !17469, !srcloc !17470
  call void @llvm.dbg.value(metadata i32 undef, metadata !17348, metadata !DIExpression()), !dbg !17376
  br label %63

63:                                               ; preds = %3, %62
  ret void, !dbg !17471
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.343(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !17472 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17478, metadata !DIExpression()), !dbg !17479
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17480
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17480
  %4 = icmp ne %struct._dnode* %3, null, !dbg !17481
  ret i1 %4, !dbg !17482
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.351() unnamed_addr #1 !dbg !17483 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !17486
  %2 = icmp eq i32 %1, 0, !dbg !17487
  br i1 %2, label %3, label %5, !dbg !17486

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #25, !dbg !17488
  br label %5, !dbg !17486

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !17486
  ret i32 %6, !dbg !17489
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #8 !dbg !17490 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.358() #24, !dbg !17496
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17494, metadata !DIExpression()), !dbg !17497
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !17498
  ret %struct._timeout* %2, !dbg !17499
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.352(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !17500 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17504, metadata !DIExpression()), !dbg !17508
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17505, metadata !DIExpression()), !dbg !17508
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17509
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !17509
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !17506, metadata !DIExpression()), !dbg !17508
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !17510
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !17511
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !17512
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !17513
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !17514
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !17515
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !17516
  ret void, !dbg !17517
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #8 !dbg !17518 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17522, metadata !DIExpression()), !dbg !17524
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17525
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.356(%struct._dnode* noundef %2) #24, !dbg !17526
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17523, metadata !DIExpression()), !dbg !17524
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !17527
  ret %struct._timeout* %4, !dbg !17528
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.353(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !17529 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17534, metadata !DIExpression()), !dbg !17537
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17535, metadata !DIExpression()), !dbg !17537
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17538
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !17536, metadata !DIExpression()), !dbg !17537
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17539
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !17540
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17541
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !17542
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !17543
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !17544
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17545
  ret void, !dbg !17546
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !17547 {
  %1 = tail call fastcc %struct._timeout* @first() #24, !dbg !17552
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !17549, metadata !DIExpression()), !dbg !17553
  %2 = tail call fastcc i32 @elapsed.351() #24, !dbg !17554
  call void @llvm.dbg.value(metadata i32 %2, metadata !17550, metadata !DIExpression()), !dbg !17553
  %3 = icmp eq %struct._timeout* %1, null, !dbg !17555
  br i1 %3, label %14, label %4, !dbg !17557

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !17558
  %6 = load i64, i64* %5, align 8, !dbg !17558
  %7 = sext i32 %2 to i64, !dbg !17559
  %8 = sub nsw i64 %6, %7, !dbg !17560
  %9 = icmp sgt i64 %8, 2147483647, !dbg !17561
  br i1 %9, label %14, label %10, !dbg !17562

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !17563
  %12 = select i1 %11, i64 %8, i64 0, !dbg !17563
  %13 = trunc i64 %12 to i32, !dbg !17563
  call void @llvm.dbg.value(metadata i32 %13, metadata !17551, metadata !DIExpression()), !dbg !17553
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !17565
  call void @llvm.dbg.value(metadata i32 %15, metadata !17551, metadata !DIExpression()), !dbg !17553
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !17566
  %17 = icmp ne i32 %16, 0, !dbg !17568
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !17569
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !17569
  call void @llvm.dbg.value(metadata i32 %20, metadata !17551, metadata !DIExpression()), !dbg !17553
  ret i32 %20, !dbg !17570
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.356(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !17571 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17575, metadata !DIExpression()), !dbg !17577
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17576, metadata !DIExpression()), !dbg !17577
  %2 = icmp eq %struct._dnode* %0, null, !dbg !17578
  br i1 %2, label %5, label %3, !dbg !17579

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.357(%struct._dnode* noundef nonnull %0) #24, !dbg !17580
  br label %5, !dbg !17579

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !17579
  ret %struct._dnode* %6, !dbg !17581
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.357(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !17582 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17584, metadata !DIExpression()), !dbg !17586
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17585, metadata !DIExpression()), !dbg !17586
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17587
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !17588
  br i1 %3, label %7, label %4, !dbg !17589

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17590
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !17590
  br label %7, !dbg !17589

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !17589
  ret %struct._dnode* %8, !dbg !17591
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.358() unnamed_addr #8 !dbg !17592 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17596, metadata !DIExpression()), !dbg !17597
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.359() #24, !dbg !17598
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !17598
  ret %struct._dnode* %3, !dbg !17599
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.359() unnamed_addr #8 !dbg !17600 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17604, metadata !DIExpression()), !dbg !17605
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !17606
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !17607
  ret i1 %2, !dbg !17608
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17609 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17613, metadata !DIExpression()), !dbg !17618
  call void @llvm.dbg.value(metadata i32 -22, metadata !17614, metadata !DIExpression()), !dbg !17618
  call void @llvm.dbg.value(metadata i32 0, metadata !17615, metadata !DIExpression()), !dbg !17619
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17377, metadata !DIExpression()) #23, !dbg !17620
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17622, !srcloc !17392
  call void @llvm.dbg.value(metadata i32 undef, metadata !17389, metadata !DIExpression()) #23, !dbg !17624
  call void @llvm.dbg.value(metadata i32 undef, metadata !17390, metadata !DIExpression()) #23, !dbg !17624
  call void @llvm.dbg.value(metadata i32 undef, metadata !17383, metadata !DIExpression()) #23, !dbg !17620
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17625
  br i1 %3, label %5, label %4, !dbg !17626

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.349, i32 0, i32 0), i32 noundef 148) #25, !dbg !17627
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.350, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17627
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.349, i32 0, i32 0), i32 noundef 148) #25, !dbg !17627
  unreachable, !dbg !17627

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !17389, metadata !DIExpression()) #23, !dbg !17624
  call void @llvm.dbg.value(metadata i32 undef, metadata !17383, metadata !DIExpression()) #23, !dbg !17620
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17628
  call void @llvm.dbg.value(metadata i32 undef, metadata !17617, metadata !DIExpression()), !dbg !17619
  call void @llvm.dbg.value(metadata i32 -22, metadata !17614, metadata !DIExpression()), !dbg !17618
  call void @llvm.dbg.value(metadata i32 undef, metadata !17615, metadata !DIExpression()), !dbg !17619
  %6 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !17614, metadata !DIExpression()), !dbg !17618
  %7 = tail call fastcc zeroext i1 @sys_dnode_is_linked.343(%struct._dnode* noundef %6) #24, !dbg !17629
  br i1 %7, label %8, label %9, !dbg !17633

8:                                                ; preds = %5
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #24, !dbg !17634
  call void @llvm.dbg.value(metadata i32 0, metadata !17614, metadata !DIExpression()), !dbg !17618
  br label %9, !dbg !17636

9:                                                ; preds = %5, %8
  %10 = phi i32 [ 0, %8 ], [ -22, %5 ], !dbg !17618
  call void @llvm.dbg.value(metadata i32 %10, metadata !17614, metadata !DIExpression()), !dbg !17618
  call void @llvm.dbg.value(metadata i32 undef, metadata !17450, metadata !DIExpression()) #23, !dbg !17637
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17455, metadata !DIExpression()) #23, !dbg !17637
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17639
  br i1 %11, label %13, label %12, !dbg !17640

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.349, i32 0, i32 0), i32 noundef 194) #25, !dbg !17641
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.355, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17641
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.349, i32 0, i32 0), i32 noundef 194) #25, !dbg !17641
  unreachable, !dbg !17641

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !17622
  call void @llvm.dbg.value(metadata i32 %14, metadata !17389, metadata !DIExpression()) #23, !dbg !17624
  call void @llvm.dbg.value(metadata i32 %14, metadata !17383, metadata !DIExpression()) #23, !dbg !17620
  call void @llvm.dbg.value(metadata i32 %14, metadata !17617, metadata !DIExpression()), !dbg !17619
  call void @llvm.dbg.value(metadata i32 undef, metadata !17450, metadata !DIExpression()) #23, !dbg !17637
  call void @llvm.dbg.value(metadata i32 undef, metadata !17464, metadata !DIExpression()) #23, !dbg !17642
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !17644, !srcloc !17470
  call void @llvm.dbg.value(metadata i32 %10, metadata !17614, metadata !DIExpression()), !dbg !17618
  call void @llvm.dbg.value(metadata i32 undef, metadata !17615, metadata !DIExpression()), !dbg !17619
  ret i32 %10, !dbg !17645
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #9 !dbg !17646 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17648, metadata !DIExpression()), !dbg !17649
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #24, !dbg !17650
  %3 = icmp eq %struct._timeout* %2, null, !dbg !17652
  br i1 %3, label %10, label %4, !dbg !17653

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17654
  %6 = load i64, i64* %5, align 8, !dbg !17654
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !17656
  %8 = load i64, i64* %7, align 8, !dbg !17657
  %9 = add nsw i64 %8, %6, !dbg !17657
  store i64 %9, i64* %7, align 8, !dbg !17657
  br label %10, !dbg !17658

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17659
  tail call fastcc void @sys_dlist_remove.362(%struct._dnode* noundef %11) #24, !dbg !17660
  ret void, !dbg !17661
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.362(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !17662 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17666, metadata !DIExpression()), !dbg !17669
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17670
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17670
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17667, metadata !DIExpression()), !dbg !17669
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17671
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !17671
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !17668, metadata !DIExpression()), !dbg !17669
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !17672
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !17673
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !17674
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !17675
  tail call fastcc void @sys_dnode_init.363(%struct._dnode* noundef %0) #24, !dbg !17676
  ret void, !dbg !17677
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.363(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !17678 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17680, metadata !DIExpression()), !dbg !17681
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17682
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !17683
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17684
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !17685
  ret void, !dbg !17686
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17687 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17693, metadata !DIExpression()), !dbg !17698
  call void @llvm.dbg.value(metadata i64 0, metadata !17694, metadata !DIExpression()), !dbg !17698
  call void @llvm.dbg.value(metadata i32 0, metadata !17695, metadata !DIExpression()), !dbg !17699
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17377, metadata !DIExpression()) #23, !dbg !17700
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17702, !srcloc !17392
  call void @llvm.dbg.value(metadata i32 undef, metadata !17389, metadata !DIExpression()) #23, !dbg !17704
  call void @llvm.dbg.value(metadata i32 undef, metadata !17390, metadata !DIExpression()) #23, !dbg !17704
  call void @llvm.dbg.value(metadata i32 undef, metadata !17383, metadata !DIExpression()) #23, !dbg !17700
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17705
  br i1 %3, label %5, label %4, !dbg !17706

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.349, i32 0, i32 0), i32 noundef 148) #25, !dbg !17707
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.350, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17707
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.349, i32 0, i32 0), i32 noundef 148) #25, !dbg !17707
  unreachable, !dbg !17707

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !17389, metadata !DIExpression()) #23, !dbg !17704
  call void @llvm.dbg.value(metadata i32 undef, metadata !17383, metadata !DIExpression()) #23, !dbg !17700
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17708
  call void @llvm.dbg.value(metadata i32 undef, metadata !17697, metadata !DIExpression()), !dbg !17699
  call void @llvm.dbg.value(metadata i64 0, metadata !17694, metadata !DIExpression()), !dbg !17698
  call void @llvm.dbg.value(metadata i32 undef, metadata !17695, metadata !DIExpression()), !dbg !17699
  %6 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !17709
  call void @llvm.dbg.value(metadata i64 %6, metadata !17694, metadata !DIExpression()), !dbg !17698
  call void @llvm.dbg.value(metadata i32 undef, metadata !17450, metadata !DIExpression()) #23, !dbg !17712
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17455, metadata !DIExpression()) #23, !dbg !17712
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17714
  br i1 %7, label %9, label %8, !dbg !17715

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.349, i32 0, i32 0), i32 noundef 194) #25, !dbg !17716
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.355, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17716
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.349, i32 0, i32 0), i32 noundef 194) #25, !dbg !17716
  unreachable, !dbg !17716

9:                                                ; preds = %5
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !17702
  call void @llvm.dbg.value(metadata i32 %10, metadata !17389, metadata !DIExpression()) #23, !dbg !17704
  call void @llvm.dbg.value(metadata i32 %10, metadata !17383, metadata !DIExpression()) #23, !dbg !17700
  call void @llvm.dbg.value(metadata i32 %10, metadata !17697, metadata !DIExpression()), !dbg !17699
  call void @llvm.dbg.value(metadata i32 undef, metadata !17450, metadata !DIExpression()) #23, !dbg !17712
  call void @llvm.dbg.value(metadata i32 undef, metadata !17464, metadata !DIExpression()) #23, !dbg !17717
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !17719, !srcloc !17470
  call void @llvm.dbg.value(metadata i64 %6, metadata !17694, metadata !DIExpression()), !dbg !17698
  call void @llvm.dbg.value(metadata i32 undef, metadata !17695, metadata !DIExpression()), !dbg !17699
  ret i64 %6, !dbg !17720
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !17721 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17723, metadata !DIExpression()), !dbg !17727
  call void @llvm.dbg.value(metadata i64 0, metadata !17724, metadata !DIExpression()), !dbg !17727
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.364(%struct._timeout* noundef %0) #24, !dbg !17728
  br i1 %2, label %21, label %3, !dbg !17730

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #24, !dbg !17731
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !17725, metadata !DIExpression()), !dbg !17732
  call void @llvm.dbg.value(metadata i64 0, metadata !17724, metadata !DIExpression()), !dbg !17727
  %5 = icmp eq %struct._timeout* %4, null, !dbg !17733
  br i1 %5, label %16, label %6, !dbg !17735

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !17725, metadata !DIExpression()), !dbg !17732
  call void @llvm.dbg.value(metadata i64 %8, metadata !17724, metadata !DIExpression()), !dbg !17727
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !17736
  %10 = load i64, i64* %9, align 8, !dbg !17736
  %11 = add nsw i64 %10, %8, !dbg !17738
  call void @llvm.dbg.value(metadata i64 %11, metadata !17724, metadata !DIExpression()), !dbg !17727
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !17739
  br i1 %12, label %16, label %13, !dbg !17741

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #24, !dbg !17742
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !17725, metadata !DIExpression()), !dbg !17732
  call void @llvm.dbg.value(metadata i64 %11, metadata !17724, metadata !DIExpression()), !dbg !17727
  %15 = icmp eq %struct._timeout* %14, null, !dbg !17733
  br i1 %15, label %16, label %6, !dbg !17735, !llvm.loop !17743

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !17727
  call void @llvm.dbg.value(metadata i64 %17, metadata !17724, metadata !DIExpression()), !dbg !17727
  %18 = tail call fastcc i32 @elapsed.351() #24, !dbg !17745
  %19 = sext i32 %18 to i64, !dbg !17745
  %20 = sub nsw i64 %17, %19, !dbg !17746
  br label %21, !dbg !17747

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !17727
  ret i64 %22, !dbg !17748
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.364(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !17749 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17753, metadata !DIExpression()), !dbg !17754
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17755
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.343(%struct._dnode* noundef %2) #24, !dbg !17756
  %4 = xor i1 %3, true, !dbg !17757
  ret i1 %4, !dbg !17758
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17759 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17761, metadata !DIExpression()), !dbg !17766
  call void @llvm.dbg.value(metadata i64 0, metadata !17762, metadata !DIExpression()), !dbg !17766
  call void @llvm.dbg.value(metadata i32 0, metadata !17763, metadata !DIExpression()), !dbg !17767
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17377, metadata !DIExpression()) #23, !dbg !17768
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17770, !srcloc !17392
  call void @llvm.dbg.value(metadata i32 undef, metadata !17389, metadata !DIExpression()) #23, !dbg !17772
  call void @llvm.dbg.value(metadata i32 undef, metadata !17390, metadata !DIExpression()) #23, !dbg !17772
  call void @llvm.dbg.value(metadata i32 undef, metadata !17383, metadata !DIExpression()) #23, !dbg !17768
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17773
  br i1 %3, label %5, label %4, !dbg !17774

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.349, i32 0, i32 0), i32 noundef 148) #25, !dbg !17775
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.350, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17775
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.349, i32 0, i32 0), i32 noundef 148) #25, !dbg !17775
  unreachable, !dbg !17775

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !17389, metadata !DIExpression()) #23, !dbg !17772
  call void @llvm.dbg.value(metadata i32 undef, metadata !17383, metadata !DIExpression()) #23, !dbg !17768
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17776
  call void @llvm.dbg.value(metadata i32 undef, metadata !17765, metadata !DIExpression()), !dbg !17767
  call void @llvm.dbg.value(metadata i64 0, metadata !17762, metadata !DIExpression()), !dbg !17766
  call void @llvm.dbg.value(metadata i32 undef, metadata !17763, metadata !DIExpression()), !dbg !17767
  %6 = load i64, i64* @curr_tick, align 8, !dbg !17777
  %7 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !17780
  call void @llvm.dbg.value(metadata !DIArgList(i64 %6, i64 %7), metadata !17762, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17766
  call void @llvm.dbg.value(metadata i32 undef, metadata !17450, metadata !DIExpression()) #23, !dbg !17781
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17455, metadata !DIExpression()) #23, !dbg !17781
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17783
  br i1 %8, label %10, label %9, !dbg !17784

9:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.349, i32 0, i32 0), i32 noundef 194) #25, !dbg !17785
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.355, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17785
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.349, i32 0, i32 0), i32 noundef 194) #25, !dbg !17785
  unreachable, !dbg !17785

10:                                               ; preds = %5
  %11 = extractvalue { i32, i32 } %2, 0, !dbg !17770
  call void @llvm.dbg.value(metadata i32 %11, metadata !17389, metadata !DIExpression()) #23, !dbg !17772
  call void @llvm.dbg.value(metadata i32 %11, metadata !17383, metadata !DIExpression()) #23, !dbg !17768
  call void @llvm.dbg.value(metadata i32 %11, metadata !17765, metadata !DIExpression()), !dbg !17767
  call void @llvm.dbg.value(metadata !DIArgList(i64 %7, i64 %6), metadata !17762, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17766
  call void @llvm.dbg.value(metadata i32 undef, metadata !17450, metadata !DIExpression()) #23, !dbg !17781
  call void @llvm.dbg.value(metadata i32 undef, metadata !17464, metadata !DIExpression()) #23, !dbg !17786
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !17788, !srcloc !17470
  call void @llvm.dbg.value(metadata i32 undef, metadata !17763, metadata !DIExpression()), !dbg !17767
  %12 = add i64 %7, %6, !dbg !17789
  ret i64 %12, !dbg !17790
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !17791 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !17793, metadata !DIExpression()), !dbg !17797
  call void @llvm.dbg.value(metadata i32 0, metadata !17794, metadata !DIExpression()), !dbg !17798
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17377, metadata !DIExpression()) #23, !dbg !17799
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17801, !srcloc !17392
  call void @llvm.dbg.value(metadata i32 undef, metadata !17389, metadata !DIExpression()) #23, !dbg !17803
  call void @llvm.dbg.value(metadata i32 undef, metadata !17390, metadata !DIExpression()) #23, !dbg !17803
  call void @llvm.dbg.value(metadata i32 undef, metadata !17383, metadata !DIExpression()) #23, !dbg !17799
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17804
  br i1 %2, label %4, label %3, !dbg !17805

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.349, i32 0, i32 0), i32 noundef 148) #25, !dbg !17806
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.350, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17806
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.349, i32 0, i32 0), i32 noundef 148) #25, !dbg !17806
  unreachable, !dbg !17806

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !17389, metadata !DIExpression()) #23, !dbg !17803
  call void @llvm.dbg.value(metadata i32 undef, metadata !17383, metadata !DIExpression()) #23, !dbg !17799
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17807
  call void @llvm.dbg.value(metadata i32 undef, metadata !17796, metadata !DIExpression()), !dbg !17798
  call void @llvm.dbg.value(metadata i32 -1, metadata !17793, metadata !DIExpression()), !dbg !17797
  call void @llvm.dbg.value(metadata i32 undef, metadata !17794, metadata !DIExpression()), !dbg !17798
  %5 = tail call fastcc i32 @next_timeout() #24, !dbg !17808
  call void @llvm.dbg.value(metadata i32 %5, metadata !17793, metadata !DIExpression()), !dbg !17797
  call void @llvm.dbg.value(metadata i32 undef, metadata !17450, metadata !DIExpression()) #23, !dbg !17811
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17455, metadata !DIExpression()) #23, !dbg !17811
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17813
  br i1 %6, label %8, label %7, !dbg !17814

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.349, i32 0, i32 0), i32 noundef 194) #25, !dbg !17815
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.355, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17815
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.349, i32 0, i32 0), i32 noundef 194) #25, !dbg !17815
  unreachable, !dbg !17815

8:                                                ; preds = %4
  %9 = extractvalue { i32, i32 } %1, 0, !dbg !17801
  call void @llvm.dbg.value(metadata i32 %9, metadata !17389, metadata !DIExpression()) #23, !dbg !17803
  call void @llvm.dbg.value(metadata i32 %9, metadata !17383, metadata !DIExpression()) #23, !dbg !17799
  call void @llvm.dbg.value(metadata i32 %9, metadata !17796, metadata !DIExpression()), !dbg !17798
  call void @llvm.dbg.value(metadata i32 undef, metadata !17450, metadata !DIExpression()) #23, !dbg !17811
  call void @llvm.dbg.value(metadata i32 undef, metadata !17464, metadata !DIExpression()) #23, !dbg !17816
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !17818, !srcloc !17470
  call void @llvm.dbg.value(metadata i32 %5, metadata !17793, metadata !DIExpression()), !dbg !17797
  call void @llvm.dbg.value(metadata i32 undef, metadata !17794, metadata !DIExpression()), !dbg !17798
  ret i32 %5, !dbg !17819
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !17820 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17822, metadata !DIExpression()), !dbg !17832
  call void @llvm.dbg.value(metadata i1 %1, metadata !17823, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17832
  call void @llvm.dbg.value(metadata i32 0, metadata !17824, metadata !DIExpression()), !dbg !17833
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17377, metadata !DIExpression()) #23, !dbg !17834
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17836, !srcloc !17392
  call void @llvm.dbg.value(metadata i32 undef, metadata !17389, metadata !DIExpression()) #23, !dbg !17838
  call void @llvm.dbg.value(metadata i32 undef, metadata !17390, metadata !DIExpression()) #23, !dbg !17838
  call void @llvm.dbg.value(metadata i32 undef, metadata !17383, metadata !DIExpression()) #23, !dbg !17834
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17839
  br i1 %4, label %6, label %5, !dbg !17840

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.349, i32 0, i32 0), i32 noundef 148) #25, !dbg !17841
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.350, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17841
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.349, i32 0, i32 0), i32 noundef 148) #25, !dbg !17841
  unreachable, !dbg !17841

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !17389, metadata !DIExpression()) #23, !dbg !17838
  call void @llvm.dbg.value(metadata i32 undef, metadata !17383, metadata !DIExpression()) #23, !dbg !17834
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17842
  call void @llvm.dbg.value(metadata i32 undef, metadata !17826, metadata !DIExpression()), !dbg !17833
  call void @llvm.dbg.value(metadata i32 undef, metadata !17824, metadata !DIExpression()), !dbg !17833
  %7 = tail call fastcc i32 @next_timeout() #24, !dbg !17843
  call void @llvm.dbg.value(metadata i32 %7, metadata !17827, metadata !DIExpression()), !dbg !17844
  call void @llvm.dbg.value(metadata i1 undef, metadata !17830, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17844
  %8 = icmp slt i32 %7, 2, !dbg !17845
  call void @llvm.dbg.value(metadata i1 %8, metadata !17831, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17844
  %9 = icmp slt i32 %7, %0
  %10 = or i1 %8, %9, !dbg !17846
  call void @llvm.dbg.value(metadata i1 %9, metadata !17830, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17844
  br i1 %10, label %14, label %11, !dbg !17846

11:                                               ; preds = %6
  %12 = icmp sgt i32 %7, %0, !dbg !17848
  %13 = select i1 %12, i32 %0, i32 %7, !dbg !17848
  tail call void @sys_clock_set_timeout(i32 noundef %13, i1 noundef zeroext %1) #25, !dbg !17850
  br label %14, !dbg !17851

14:                                               ; preds = %11, %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !17450, metadata !DIExpression()) #23, !dbg !17852
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17455, metadata !DIExpression()) #23, !dbg !17852
  %15 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17854
  br i1 %15, label %17, label %16, !dbg !17855

16:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.349, i32 0, i32 0), i32 noundef 194) #25, !dbg !17856
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.355, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17856
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.349, i32 0, i32 0), i32 noundef 194) #25, !dbg !17856
  unreachable, !dbg !17856

17:                                               ; preds = %14
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !17836
  call void @llvm.dbg.value(metadata i32 %18, metadata !17389, metadata !DIExpression()) #23, !dbg !17838
  call void @llvm.dbg.value(metadata i32 %18, metadata !17383, metadata !DIExpression()) #23, !dbg !17834
  call void @llvm.dbg.value(metadata i32 %18, metadata !17826, metadata !DIExpression()), !dbg !17833
  call void @llvm.dbg.value(metadata i32 undef, metadata !17450, metadata !DIExpression()) #23, !dbg !17852
  call void @llvm.dbg.value(metadata i32 undef, metadata !17464, metadata !DIExpression()) #23, !dbg !17857
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !17859, !srcloc !17470
  call void @llvm.dbg.value(metadata i32 1, metadata !17824, metadata !DIExpression()), !dbg !17833
  call void @llvm.dbg.value(metadata i32 undef, metadata !17824, metadata !DIExpression()), !dbg !17833
  ret void, !dbg !17860
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !17861 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17865, metadata !DIExpression()), !dbg !17870
  tail call void @z_time_slice(i32 noundef %0) #25, !dbg !17871
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17377, metadata !DIExpression()) #23, !dbg !17872
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17874, !srcloc !17392
  call void @llvm.dbg.value(metadata i32 undef, metadata !17389, metadata !DIExpression()) #23, !dbg !17876
  call void @llvm.dbg.value(metadata i32 undef, metadata !17390, metadata !DIExpression()) #23, !dbg !17876
  call void @llvm.dbg.value(metadata i32 undef, metadata !17383, metadata !DIExpression()) #23, !dbg !17872
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17877
  br i1 %3, label %5, label %4, !dbg !17878

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.349, i32 0, i32 0), i32 noundef 148) #25, !dbg !17879
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.350, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17879
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.349, i32 0, i32 0), i32 noundef 148) #25, !dbg !17879
  unreachable, !dbg !17879

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !17389, metadata !DIExpression()) #23, !dbg !17876
  call void @llvm.dbg.value(metadata i32 undef, metadata !17383, metadata !DIExpression()) #23, !dbg !17872
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17880
  call void @llvm.dbg.value(metadata i32 undef, metadata !17866, metadata !DIExpression()), !dbg !17870
  store i32 %0, i32* @announce_remaining, align 4, !dbg !17870
  call void @llvm.dbg.value(metadata i32 undef, metadata !17866, metadata !DIExpression()), !dbg !17870
  %6 = tail call fastcc %struct._timeout* @first() #24, !dbg !17881
  %7 = icmp eq %struct._timeout* %6, null, !dbg !17882
  br i1 %7, label %37, label %8, !dbg !17883

8:                                                ; preds = %5, %30
  %9 = phi %struct._timeout* [ %33, %30 ], [ %6, %5 ]
  %10 = phi { i32, i32 } [ %27, %30 ], [ %2, %5 ]
  %11 = phi i32 [ %32, %30 ], [ %0, %5 ]
  %12 = extractvalue { i32, i32 } %10, 0, !dbg !17870
  %13 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 2, !dbg !17884
  %14 = load i64, i64* %13, align 8, !dbg !17884
  %15 = sext i32 %11 to i64, !dbg !17885
  %16 = icmp sgt i64 %14, %15, !dbg !17886
  br i1 %16, label %35, label %17, !dbg !17887

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct._timeout* %9, metadata !17867, metadata !DIExpression()), !dbg !17888
  %18 = trunc i64 %14 to i32, !dbg !17889
  call void @llvm.dbg.value(metadata i32 %18, metadata !17869, metadata !DIExpression()), !dbg !17888
  %19 = sext i32 %18 to i64, !dbg !17890
  %20 = load i64, i64* @curr_tick, align 8, !dbg !17891
  %21 = add i64 %20, %19, !dbg !17891
  store i64 %21, i64* @curr_tick, align 8, !dbg !17891
  store i64 0, i64* %13, align 8, !dbg !17892
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %9) #24, !dbg !17893
  call void @llvm.dbg.value(metadata i32 undef, metadata !17450, metadata !DIExpression()) #23, !dbg !17894
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17455, metadata !DIExpression()) #23, !dbg !17894
  %22 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17896
  br i1 %22, label %24, label %23, !dbg !17897

23:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.349, i32 0, i32 0), i32 noundef 194) #25, !dbg !17898
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.355, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17898
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.349, i32 0, i32 0), i32 noundef 194) #25, !dbg !17898
  unreachable, !dbg !17898

24:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %12, metadata !17450, metadata !DIExpression()) #23, !dbg !17894
  call void @llvm.dbg.value(metadata i32 %12, metadata !17464, metadata !DIExpression()) #23, !dbg !17899
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !17901, !srcloc !17470
  %25 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 1, !dbg !17902
  %26 = load void (%struct._timeout*)*, void (%struct._timeout*)** %25, align 8, !dbg !17902
  tail call void %26(%struct._timeout* noundef nonnull %9) #25, !dbg !17903
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17377, metadata !DIExpression()) #23, !dbg !17904
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17906, !srcloc !17392
  call void @llvm.dbg.value(metadata i32 undef, metadata !17389, metadata !DIExpression()) #23, !dbg !17908
  call void @llvm.dbg.value(metadata i32 undef, metadata !17390, metadata !DIExpression()) #23, !dbg !17908
  call void @llvm.dbg.value(metadata i32 undef, metadata !17383, metadata !DIExpression()) #23, !dbg !17904
  %28 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17909
  br i1 %28, label %30, label %29, !dbg !17910

29:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.349, i32 0, i32 0), i32 noundef 148) #25, !dbg !17911
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.350, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17911
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.349, i32 0, i32 0), i32 noundef 148) #25, !dbg !17911
  unreachable, !dbg !17911

30:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !17389, metadata !DIExpression()) #23, !dbg !17908
  call void @llvm.dbg.value(metadata i32 undef, metadata !17383, metadata !DIExpression()) #23, !dbg !17904
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17912
  call void @llvm.dbg.value(metadata i32 undef, metadata !17866, metadata !DIExpression()), !dbg !17870
  %31 = load i32, i32* @announce_remaining, align 4, !dbg !17913
  %32 = sub nsw i32 %31, %18, !dbg !17913
  store i32 %32, i32* @announce_remaining, align 4, !dbg !17870
  call void @llvm.dbg.value(metadata i32 undef, metadata !17866, metadata !DIExpression()), !dbg !17870
  %33 = tail call fastcc %struct._timeout* @first() #24, !dbg !17881
  %34 = icmp eq %struct._timeout* %33, null, !dbg !17882
  br i1 %34, label %37, label %8, !dbg !17883, !llvm.loop !17914

35:                                               ; preds = %8
  %36 = sub nsw i64 %14, %15, !dbg !17916
  store i64 %36, i64* %13, align 8, !dbg !17916
  br label %41, !dbg !17919

37:                                               ; preds = %30, %5
  %38 = phi { i32, i32 } [ %2, %5 ], [ %27, %30 ]
  %39 = phi i32 [ %0, %5 ], [ %32, %30 ], !dbg !17870
  %40 = sext i32 %39 to i64, !dbg !17920
  br label %41, !dbg !17920

41:                                               ; preds = %37, %35
  %42 = phi i64 [ %40, %37 ], [ %15, %35 ], !dbg !17920
  %43 = phi { i32, i32 } [ %38, %37 ], [ %10, %35 ]
  %44 = load i64, i64* @curr_tick, align 8, !dbg !17921
  %45 = add i64 %44, %42, !dbg !17921
  store i64 %45, i64* @curr_tick, align 8, !dbg !17921
  store i32 0, i32* @announce_remaining, align 4, !dbg !17922
  %46 = tail call fastcc i32 @next_timeout() #24, !dbg !17923
  tail call void @sys_clock_set_timeout(i32 noundef %46, i1 noundef zeroext false) #25, !dbg !17924
  call void @llvm.dbg.value(metadata i32 undef, metadata !17450, metadata !DIExpression()) #23, !dbg !17925
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17455, metadata !DIExpression()) #23, !dbg !17925
  %47 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17927
  br i1 %47, label %49, label %48, !dbg !17928

48:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.349, i32 0, i32 0), i32 noundef 194) #25, !dbg !17929
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.355, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17929
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.349, i32 0, i32 0), i32 noundef 194) #25, !dbg !17929
  unreachable, !dbg !17929

49:                                               ; preds = %41
  %50 = extractvalue { i32, i32 } %43, 0, !dbg !17870
  call void @llvm.dbg.value(metadata i32 %50, metadata !17450, metadata !DIExpression()) #23, !dbg !17925
  call void @llvm.dbg.value(metadata i32 %50, metadata !17464, metadata !DIExpression()) #23, !dbg !17930
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %50) #23, !dbg !17932, !srcloc !17470
  ret void, !dbg !17933
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !17934 {
  call void @llvm.dbg.value(metadata i64 0, metadata !17938, metadata !DIExpression()), !dbg !17942
  call void @llvm.dbg.value(metadata i32 0, metadata !17939, metadata !DIExpression()), !dbg !17943
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17377, metadata !DIExpression()) #23, !dbg !17944
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17946, !srcloc !17392
  call void @llvm.dbg.value(metadata i32 undef, metadata !17389, metadata !DIExpression()) #23, !dbg !17948
  call void @llvm.dbg.value(metadata i32 undef, metadata !17390, metadata !DIExpression()) #23, !dbg !17948
  call void @llvm.dbg.value(metadata i32 undef, metadata !17383, metadata !DIExpression()) #23, !dbg !17944
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17949
  br i1 %2, label %4, label %3, !dbg !17950

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.348, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.349, i32 0, i32 0), i32 noundef 148) #25, !dbg !17951
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.350, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17951
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.349, i32 0, i32 0), i32 noundef 148) #25, !dbg !17951
  unreachable, !dbg !17951

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !17389, metadata !DIExpression()) #23, !dbg !17948
  call void @llvm.dbg.value(metadata i32 undef, metadata !17383, metadata !DIExpression()) #23, !dbg !17944
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17952
  call void @llvm.dbg.value(metadata i32 undef, metadata !17941, metadata !DIExpression()), !dbg !17943
  call void @llvm.dbg.value(metadata i64 0, metadata !17938, metadata !DIExpression()), !dbg !17942
  call void @llvm.dbg.value(metadata i32 undef, metadata !17939, metadata !DIExpression()), !dbg !17943
  %5 = load i64, i64* @curr_tick, align 8, !dbg !17953
  %6 = tail call fastcc i32 @elapsed.351() #24, !dbg !17956
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !17938, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !17942
  call void @llvm.dbg.value(metadata i32 undef, metadata !17450, metadata !DIExpression()) #23, !dbg !17957
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17455, metadata !DIExpression()) #23, !dbg !17957
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17959
  br i1 %7, label %9, label %8, !dbg !17960

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.344, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.349, i32 0, i32 0), i32 noundef 194) #25, !dbg !17961
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.355, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17961
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.349, i32 0, i32 0), i32 noundef 194) #25, !dbg !17961
  unreachable, !dbg !17961

9:                                                ; preds = %4
  %10 = extractvalue { i32, i32 } %1, 0, !dbg !17946
  call void @llvm.dbg.value(metadata i32 %10, metadata !17389, metadata !DIExpression()) #23, !dbg !17948
  call void @llvm.dbg.value(metadata i32 %10, metadata !17383, metadata !DIExpression()) #23, !dbg !17944
  call void @llvm.dbg.value(metadata i32 %10, metadata !17941, metadata !DIExpression()), !dbg !17943
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !17938, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !17942
  call void @llvm.dbg.value(metadata !DIArgList(i32 %6, i64 %5), metadata !17938, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17942
  call void @llvm.dbg.value(metadata i32 undef, metadata !17450, metadata !DIExpression()) #23, !dbg !17957
  call void @llvm.dbg.value(metadata i32 undef, metadata !17464, metadata !DIExpression()) #23, !dbg !17962
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !17964, !srcloc !17470
  call void @llvm.dbg.value(metadata i32 undef, metadata !17939, metadata !DIExpression()), !dbg !17943
  %11 = sext i32 %6 to i64, !dbg !17956
  %12 = add i64 %5, %11, !dbg !17965
  ret i64 %12, !dbg !17966
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !17967 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !17968
  %2 = trunc i64 %1 to i32, !dbg !17969
  ret i32 %2, !dbg !17970
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !17971 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !17972
  ret i64 %1, !dbg !17973
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !17974 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17976, metadata !DIExpression()), !dbg !17983
  %2 = icmp eq i32 %0, 0, !dbg !17984
  br i1 %2, label %10, label %3, !dbg !17986

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !17987
  call void @llvm.dbg.value(metadata i32 %4, metadata !17977, metadata !DIExpression()), !dbg !17983
  %5 = mul i32 %0, 84, !dbg !17988
  call void @llvm.dbg.value(metadata i32 %5, metadata !17978, metadata !DIExpression()), !dbg !17983
  br label %6, !dbg !17989

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !17990
  call void @llvm.dbg.value(metadata i32 %7, metadata !17979, metadata !DIExpression()), !dbg !17991
  %8 = sub i32 %7, %4, !dbg !17992
  %9 = icmp ult i32 %8, %5, !dbg !17994
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !17995
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !17996 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #24, !dbg !17997
  ret i32 %1, !dbg !17998
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !17999 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !18001
  ret i32 %1, !dbg !18002
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !18003 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !18007, metadata !DIExpression()), !dbg !18009
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !18010

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #24, !dbg !18011
  br label %14, !dbg !18015

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !18008, metadata !DIExpression()), !dbg !18009
  %6 = icmp slt i64 %2, -1, !dbg !18016
  br i1 %6, label %7, label %9, !dbg !18019

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !18020
  br label %14, !dbg !18021

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #24, !dbg !18023
  %11 = icmp ugt i64 %2, 1, !dbg !18024
  %12 = select i1 %11, i64 %2, i64 1, !dbg !18024
  %13 = add nsw i64 %10, %12, !dbg !18025
  br label %14, !dbg !18026

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !18027
  ret i64 %15, !dbg !18028
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !18029 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.373, i32 0, i32 0)) #25, !dbg !18031
  ret void, !dbg !18032
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { argmemonly nofree nosync nounwind willreturn }
attributes #5 = { nofree nosync nounwind willreturn }
attributes #6 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { argmemonly nofree nounwind willreturn writeonly }
attributes #13 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin optsize "no-builtins" }
attributes #25 = { nobuiltin nounwind optsize "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #27 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #28 = { nounwind readnone }
attributes #29 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!803, !2, !2589, !27, !271, !297, !2591, !2593, !2627, !2629, !307, !358, !2631, !2634, !2645, !2691, !2693, !2721, !2749, !2792, !2864, !2909, !387, !530, !2937, !566, !576, !601, !841, !2942, !980, !1046, !1351, !1635, !2983, !1750, !1840, !2985, !3048, !3115, !1894, !3118, !1901, !2276, !3136, !2296, !2407, !2525, !3138, !2550, !3141}
!llvm.ident = !{!3143, !3143, !3143, !3143, !3143, !3143, !3143, !3143, !3143, !3143, !3143, !3143, !3143, !3143, !3143, !3143, !3143, !3143, !3143, !3143, !3143, !3143, !3143, !3143, !3143, !3143, !3143, !3143, !3143, !3143, !3143, !3143, !3143, !3143, !3143, !3143, !3143, !3143, !3143, !3143, !3143, !3143, !3143, !3143, !3143, !3143, !3143, !3143, !3143, !3143, !3143}
!llvm.module.flags = !{!3144, !3145, !3146, !3147, !3148, !3149, !3150, !3151, !3152}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/simple/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/simple")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 109, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/simple")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 6208, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 97)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 3104, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "mutex", scope: !27, file: !116, line: 18, type: !262, isLocal: false, isDefinition: true, align: 32)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !113, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/kernel/condition_variables/simple/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/simple")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103, !107, !108, !109, !110, !111}
!102 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!103 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !104, line: 46, baseType: !105)
!104 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!105 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !106)
!106 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!108 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !23, line: 104, baseType: !102)
!109 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!110 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!111 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !112)
!112 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!113 = !{!25, !114, !141, !152, !260}
!114 = !DIGlobalVariableExpression(var: !115, expr: !DIExpression())
!115 = distinct !DIGlobalVariable(name: "condvar", scope: !27, file: !116, line: 19, type: !117, isLocal: false, isDefinition: true, align: 32)
!116 = !DIFile(filename: "zephyr/samples/kernel/condition_variables/simple/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_condvar", file: !118, line: 2828, size: 64, elements: !119)
!118 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!119 = !{!120}
!120 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !117, file: !118, line: 2829, baseType: !121, size: 64)
!121 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !123)
!122 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!123 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !124)
!124 = !{!125}
!125 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !123, file: !122, line: 232, baseType: !126, size: 64)
!126 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !128)
!127 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !129)
!129 = !{!130, !136}
!130 = !DIDerivedType(tag: DW_TAG_member, scope: !128, file: !127, line: 38, baseType: !131, size: 32)
!131 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !128, file: !127, line: 38, size: 32, elements: !132)
!132 = !{!133, !135}
!133 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !131, file: !127, line: 39, baseType: !134, size: 32)
!134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !128, size: 32)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !131, file: !127, line: 40, baseType: !134, size: 32)
!136 = !DIDerivedType(tag: DW_TAG_member, scope: !128, file: !127, line: 42, baseType: !137, size: 32, offset: 32)
!137 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !128, file: !127, line: 42, size: 32, elements: !138)
!138 = !{!139, !140}
!139 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !137, file: !127, line: 43, baseType: !134, size: 32)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !137, file: !127, line: 44, baseType: !134, size: 32)
!141 = !DIGlobalVariableExpression(var: !142, expr: !DIExpression())
!142 = distinct !DIGlobalVariable(name: "tstacks", scope: !27, file: !116, line: 14, type: !143, isLocal: false, isDefinition: true, align: 512)
!143 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 174080, elements: !149)
!144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !145, line: 47, size: 8, elements: !146)
!145 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!146 = !{!147}
!147 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !144, file: !145, line: 48, baseType: !148, size: 8)
!148 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!149 = !{!150, !151}
!150 = !DISubrange(count: 20)
!151 = !DISubrange(count: 1088)
!152 = !DIGlobalVariableExpression(var: !153, expr: !DIExpression())
!153 = distinct !DIGlobalVariable(name: "t", scope: !27, file: !116, line: 16, type: !154, isLocal: true, isDefinition: true)
!154 = !DICompositeType(tag: DW_TAG_array_type, baseType: !155, size: 25600, elements: !259)
!155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1280, elements: !157)
!156 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!157 = !{!158, !207, !220, !221, !222, !226, !227, !235, !254}
!158 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !155, file: !156, line: 247, baseType: !159, size: 384)
!159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 384, elements: !160)
!160 = !{!161, !175, !177, !180, !181, !194, !195, !196}
!161 = !DIDerivedType(tag: DW_TAG_member, scope: !159, file: !156, line: 60, baseType: !162, size: 64)
!162 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !159, file: !156, line: 60, size: 64, elements: !163)
!163 = !{!164, !166}
!164 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !162, file: !156, line: 61, baseType: !165, size: 64)
!165 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !128)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !162, file: !156, line: 62, baseType: !167, size: 64)
!167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !169)
!168 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!169 = !{!170}
!170 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !167, file: !168, line: 50, baseType: !171, size: 64)
!171 = !DICompositeType(tag: DW_TAG_array_type, baseType: !172, size: 64, elements: !173)
!172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !167, size: 32)
!173 = !{!174}
!174 = !DISubrange(count: 2)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !159, file: !156, line: 68, baseType: !176, size: 32, offset: 64)
!176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 32)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !159, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!178 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !179)
!179 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !159, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!181 = !DIDerivedType(tag: DW_TAG_member, scope: !159, file: !156, line: 90, baseType: !182, size: 16, offset: 112)
!182 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !159, file: !156, line: 90, size: 16, elements: !183)
!183 = !{!184, !191}
!184 = !DIDerivedType(tag: DW_TAG_member, scope: !182, file: !156, line: 91, baseType: !185, size: 16)
!185 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !182, file: !156, line: 91, size: 16, elements: !186)
!186 = !{!187, !190}
!187 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !185, file: !156, line: 96, baseType: !188, size: 8)
!188 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !189)
!189 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !185, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !182, file: !156, line: 100, baseType: !192, size: 16)
!192 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !193)
!193 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !159, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !159, file: !156, line: 127, baseType: !107, size: 32, offset: 160)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !159, file: !156, line: 131, baseType: !197, size: 192, offset: 192)
!197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !198)
!198 = !{!199, !200, !206}
!199 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !197, file: !122, line: 245, baseType: !165, size: 64)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !197, file: !122, line: 246, baseType: !201, size: 32, offset: 64)
!201 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !202)
!202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !203, size: 32)
!203 = !DISubroutineType(types: !204)
!204 = !{null, !205}
!205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !197, size: 32)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !197, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !155, file: !156, line: 250, baseType: !208, size: 288, offset: 384)
!208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !210)
!209 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!210 = !{!211, !212, !213, !214, !215, !216, !217, !218, !219}
!211 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !208, file: !209, line: 26, baseType: !110, size: 32)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !208, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !208, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !208, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !208, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !208, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !208, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !208, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !208, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !155, file: !156, line: 253, baseType: !107, size: 32, offset: 672)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !155, file: !156, line: 256, baseType: !121, size: 64, offset: 704)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !155, file: !156, line: 279, baseType: !223, size: 256, offset: 768)
!223 = !DICompositeType(tag: DW_TAG_array_type, baseType: !148, size: 256, elements: !224)
!224 = !{!225}
!225 = !DISubrange(count: 32)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !155, file: !156, line: 294, baseType: !109, size: 32, offset: 1024)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !155, file: !156, line: 300, baseType: !228, size: 96, offset: 1056)
!228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !229)
!229 = !{!230, !231, !234}
!230 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !228, file: !156, line: 153, baseType: !22, size: 32)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !228, file: !156, line: 162, baseType: !232, size: 32, offset: 32)
!232 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !233, line: 214, baseType: !32)
!233 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!234 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !228, file: !156, line: 168, baseType: !232, size: 32, offset: 64)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !155, file: !156, line: 325, baseType: !236, size: 32, offset: 1152)
!236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !237, size: 32)
!237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !238)
!238 = !{!239, !248, !249}
!239 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !237, file: !118, line: 5074, baseType: !240, size: 96)
!240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !241, line: 56, size: 96, elements: !242)
!241 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!242 = !{!243, !246, !247}
!243 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !240, file: !241, line: 57, baseType: !244, size: 32)
!244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !245, size: 32)
!245 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !241, line: 57, flags: DIFlagFwdDecl)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !240, file: !241, line: 58, baseType: !107, size: 32, offset: 32)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !240, file: !241, line: 59, baseType: !232, size: 32, offset: 64)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !237, file: !118, line: 5075, baseType: !121, size: 64, offset: 96)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !237, file: !118, line: 5076, baseType: !250, size: 32, offset: 160)
!250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !252)
!251 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!252 = !{!253}
!253 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !250, file: !251, line: 52, baseType: !22, size: 32)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !155, file: !156, line: 343, baseType: !255, size: 64, offset: 1184)
!255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !209, line: 60, size: 64, elements: !256)
!256 = !{!257, !258}
!257 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !255, file: !209, line: 63, baseType: !110, size: 32)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !255, file: !209, line: 66, baseType: !110, size: 32, offset: 32)
!259 = !{!150}
!260 = !DIGlobalVariableExpression(var: !261, expr: !DIExpression())
!261 = distinct !DIGlobalVariable(name: "done", scope: !27, file: !116, line: 21, type: !109, isLocal: true, isDefinition: true)
!262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !118, line: 2720, size: 160, elements: !263)
!263 = !{!264, !265, !267, !268}
!264 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !262, file: !118, line: 2722, baseType: !121, size: 64)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !262, file: !118, line: 2724, baseType: !266, size: 32, offset: 64)
!266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !155, size: 32)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !262, file: !118, line: 2727, baseType: !110, size: 32, offset: 96)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !262, file: !118, line: 2730, baseType: !109, size: 32, offset: 128)
!269 = !DIGlobalVariableExpression(var: !270, expr: !DIExpression())
!270 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !271, file: !288, line: 18, type: !289, isLocal: false, isDefinition: true)
!271 = distinct !DICompileUnit(language: DW_LANG_C99, file: !272, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !273, globals: !287, splitDebugInlining: false, nameTableKind: None)
!272 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/simple")
!273 = !{!22, !107, !24, !274, !276, !278, !232, !109, !281, !282, !283, !284, !285, !286, !192, !279}
!274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !275, size: 32)
!275 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 32)
!277 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !279, size: 32)
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 32)
!280 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !148)
!281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 32)
!282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 32)
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !285, size: 32)
!285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !148, size: 32)
!286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !178, size: 32)
!287 = !{!269}
!288 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!289 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !290)
!290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !291, line: 16, size: 64, elements: !292)
!291 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!292 = !{!293, !294}
!293 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !290, file: !291, line: 17, baseType: !279, size: 32)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !290, file: !291, line: 18, baseType: !178, size: 8, offset: 32)
!295 = !DIGlobalVariableExpression(var: !296, expr: !DIExpression())
!296 = distinct !DIGlobalVariable(name: "_char_out", scope: !297, file: !301, line: 54, type: !302, isLocal: false, isDefinition: true)
!297 = distinct !DICompileUnit(language: DW_LANG_C99, file: !298, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, globals: !300, splitDebugInlining: false, nameTableKind: None)
!298 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/simple")
!299 = !{!107, !109}
!300 = !{!295}
!301 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !303, size: 32)
!303 = !DISubroutineType(types: !304)
!304 = !{!109, !109}
!305 = !DIGlobalVariableExpression(var: !306, expr: !DIExpression())
!306 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !307, file: !324, line: 56, type: !325, isLocal: true, isDefinition: true, align: 32)
!307 = distinct !DICompileUnit(language: DW_LANG_C99, file: !308, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !309, globals: !323, splitDebugInlining: false, nameTableKind: None)
!308 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/simple")
!309 = !{!310}
!310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !311, size: 32)
!311 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !312, line: 407, baseType: !313)
!312 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f446xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!313 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 398, size: 224, elements: !314)
!314 = !{!315, !317, !318, !319, !320, !321, !322}
!315 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !313, file: !312, line: 400, baseType: !316, size: 32)
!316 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !110)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !313, file: !312, line: 401, baseType: !316, size: 32, offset: 32)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !313, file: !312, line: 402, baseType: !316, size: 32, offset: 64)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !313, file: !312, line: 403, baseType: !316, size: 32, offset: 96)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !313, file: !312, line: 404, baseType: !316, size: 32, offset: 128)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !313, file: !312, line: 405, baseType: !316, size: 32, offset: 160)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !313, file: !312, line: 406, baseType: !316, size: 32, offset: 192)
!323 = !{!305}
!324 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!325 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !326)
!326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !328)
!327 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!328 = !{!329, !355}
!329 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !326, file: !327, line: 60, baseType: !330, size: 32)
!330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 32)
!331 = !DISubroutineType(types: !332)
!332 = !{!109, !333}
!333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !334, size: 32)
!334 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !335)
!335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !337)
!336 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!337 = !{!338, !339, !340, !341, !348, !349}
!338 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !335, file: !336, line: 380, baseType: !279, size: 32)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !335, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !335, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !335, file: !336, line: 386, baseType: !342, size: 32, offset: 96)
!342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !343, size: 32)
!343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !344)
!344 = !{!345, !346}
!345 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !343, file: !336, line: 359, baseType: !178, size: 8)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !343, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!347 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !335, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !335, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !351, size: 32)
!351 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !352)
!352 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !336, line: 43, baseType: !353)
!353 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !354)
!354 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !326, file: !327, line: 65, baseType: !333, size: 32, offset: 32)
!356 = !DIGlobalVariableExpression(var: !357, expr: !DIExpression())
!357 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !358, file: !361, line: 71, type: !362, isLocal: true, isDefinition: true, align: 32)
!358 = distinct !DICompileUnit(language: DW_LANG_C99, file: !359, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !360, splitDebugInlining: false, nameTableKind: None)
!359 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/simple")
!360 = !{!356}
!361 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!362 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !363)
!363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !364)
!364 = !{!365, !384}
!365 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !363, file: !327, line: 60, baseType: !366, size: 32)
!366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !367, size: 32)
!367 = !DISubroutineType(types: !368)
!368 = !{!109, !369}
!369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !370, size: 32)
!370 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !371)
!371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !372)
!372 = !{!373, !374, !375, !376, !382, !383}
!373 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !371, file: !336, line: 380, baseType: !279, size: 32)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !371, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !371, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !371, file: !336, line: 386, baseType: !377, size: 32, offset: 96)
!377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !378, size: 32)
!378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !379)
!379 = !{!380, !381}
!380 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !378, file: !336, line: 359, baseType: !178, size: 8)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !378, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !371, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !371, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !363, file: !327, line: 65, baseType: !369, size: 32, offset: 32)
!385 = !DIGlobalVariableExpression(var: !386, expr: !DIExpression())
!386 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !387, file: !394, line: 17, type: !523, isLocal: false, isDefinition: true)
!387 = distinct !DICompileUnit(language: DW_LANG_C99, file: !388, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !389, globals: !390, splitDebugInlining: false, nameTableKind: None)
!388 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/simple")
!389 = !{!232, !109, !110, !107}
!390 = !{!385, !391, !519}
!391 = !DIGlobalVariableExpression(var: !392, expr: !DIExpression())
!392 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !393, file: !394, line: 198, type: !505, isLocal: true, isDefinition: true)
!393 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !394, file: !394, line: 175, type: !395, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !500)
!394 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!395 = !DISubroutineType(types: !396)
!396 = !{null, !397}
!397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !398, size: 32)
!398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1280, elements: !399)
!399 = !{!400, !458, !470, !471, !472, !473, !474, !480, !495}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !398, file: !156, line: 247, baseType: !401, size: 384)
!401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 384, elements: !402)
!402 = !{!403, !427, !434, !435, !436, !445, !446, !447}
!403 = !DIDerivedType(tag: DW_TAG_member, scope: !401, file: !156, line: 60, baseType: !404, size: 64)
!404 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !401, file: !156, line: 60, size: 64, elements: !405)
!405 = !{!406, !421}
!406 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !404, file: !156, line: 61, baseType: !407, size: 64)
!407 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !408)
!408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !409)
!409 = !{!410, !416}
!410 = !DIDerivedType(tag: DW_TAG_member, scope: !408, file: !127, line: 38, baseType: !411, size: 32)
!411 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !408, file: !127, line: 38, size: 32, elements: !412)
!412 = !{!413, !415}
!413 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !411, file: !127, line: 39, baseType: !414, size: 32)
!414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !408, size: 32)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !411, file: !127, line: 40, baseType: !414, size: 32)
!416 = !DIDerivedType(tag: DW_TAG_member, scope: !408, file: !127, line: 42, baseType: !417, size: 32, offset: 32)
!417 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !408, file: !127, line: 42, size: 32, elements: !418)
!418 = !{!419, !420}
!419 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !417, file: !127, line: 43, baseType: !414, size: 32)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !417, file: !127, line: 44, baseType: !414, size: 32)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !404, file: !156, line: 62, baseType: !422, size: 64)
!422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !423)
!423 = !{!424}
!424 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !422, file: !168, line: 50, baseType: !425, size: 64)
!425 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 64, elements: !173)
!426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 32)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !401, file: !156, line: 68, baseType: !428, size: 32, offset: 64)
!428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !429, size: 32)
!429 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !430)
!430 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !431)
!431 = !{!432}
!432 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !430, file: !122, line: 232, baseType: !433, size: 64)
!433 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !408)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !401, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !401, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!436 = !DIDerivedType(tag: DW_TAG_member, scope: !401, file: !156, line: 90, baseType: !437, size: 16, offset: 112)
!437 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !401, file: !156, line: 90, size: 16, elements: !438)
!438 = !{!439, !444}
!439 = !DIDerivedType(tag: DW_TAG_member, scope: !437, file: !156, line: 91, baseType: !440, size: 16)
!440 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !437, file: !156, line: 91, size: 16, elements: !441)
!441 = !{!442, !443}
!442 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !440, file: !156, line: 96, baseType: !188, size: 8)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !440, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !437, file: !156, line: 100, baseType: !192, size: 16)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !401, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !401, file: !156, line: 127, baseType: !107, size: 32, offset: 160)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !401, file: !156, line: 131, baseType: !448, size: 192, offset: 192)
!448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !449)
!449 = !{!450, !451, !457}
!450 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !448, file: !122, line: 245, baseType: !407, size: 64)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !448, file: !122, line: 246, baseType: !452, size: 32, offset: 64)
!452 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !453)
!453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !454, size: 32)
!454 = !DISubroutineType(types: !455)
!455 = !{null, !456}
!456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !448, size: 32)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !448, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !398, file: !156, line: 250, baseType: !459, size: 288, offset: 384)
!459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !460)
!460 = !{!461, !462, !463, !464, !465, !466, !467, !468, !469}
!461 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !459, file: !209, line: 26, baseType: !110, size: 32)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !459, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !459, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !459, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !459, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !459, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !459, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !459, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !459, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !398, file: !156, line: 253, baseType: !107, size: 32, offset: 672)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !398, file: !156, line: 256, baseType: !429, size: 64, offset: 704)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !398, file: !156, line: 279, baseType: !223, size: 256, offset: 768)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !398, file: !156, line: 294, baseType: !109, size: 32, offset: 1024)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !398, file: !156, line: 300, baseType: !475, size: 96, offset: 1056)
!475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !476)
!476 = !{!477, !478, !479}
!477 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !475, file: !156, line: 153, baseType: !22, size: 32)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !475, file: !156, line: 162, baseType: !232, size: 32, offset: 32)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !475, file: !156, line: 168, baseType: !232, size: 32, offset: 64)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !398, file: !156, line: 325, baseType: !481, size: 32, offset: 1152)
!481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !482, size: 32)
!482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !483)
!483 = !{!484, !490, !491}
!484 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !482, file: !118, line: 5074, baseType: !485, size: 96)
!485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !241, line: 56, size: 96, elements: !486)
!486 = !{!487, !488, !489}
!487 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !485, file: !241, line: 57, baseType: !244, size: 32)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !485, file: !241, line: 58, baseType: !107, size: 32, offset: 32)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !485, file: !241, line: 59, baseType: !232, size: 32, offset: 64)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !482, file: !118, line: 5075, baseType: !429, size: 64, offset: 96)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !482, file: !118, line: 5076, baseType: !492, size: 32, offset: 160)
!492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !493)
!493 = !{!494}
!494 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !492, file: !251, line: 52, baseType: !22, size: 32)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !398, file: !156, line: 343, baseType: !496, size: 64, offset: 1184)
!496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !209, line: 60, size: 64, elements: !497)
!497 = !{!498, !499}
!498 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !496, file: !209, line: 63, baseType: !110, size: 32)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !496, file: !209, line: 66, baseType: !110, size: 32, offset: 32)
!500 = !{!501, !502, !503, !504}
!501 = !DILocalVariable(name: "thread", arg: 1, scope: !393, file: !394, line: 175, type: !397)
!502 = !DILocalVariable(name: "region_num", scope: !393, file: !394, line: 200, type: !178)
!503 = !DILocalVariable(name: "guard_start", scope: !393, file: !394, line: 265, type: !22)
!504 = !DILocalVariable(name: "guard_size", scope: !393, file: !394, line: 266, type: !232)
!505 = !DICompositeType(tag: DW_TAG_array_type, baseType: !506, size: 96, elements: !517)
!506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !507, line: 52, size: 96, elements: !508)
!507 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!508 = !{!509, !510, !511}
!509 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !506, file: !507, line: 53, baseType: !22, size: 32)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !506, file: !507, line: 54, baseType: !232, size: 32, offset: 32)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !506, file: !507, line: 55, baseType: !512, size: 32, offset: 64)
!512 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !513, line: 151, baseType: !514)
!513 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!514 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !513, line: 149, size: 32, elements: !515)
!515 = !{!516}
!516 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !514, file: !513, line: 150, baseType: !110, size: 32)
!517 = !{!518}
!518 = !DISubrange(count: 1)
!519 = !DIGlobalVariableExpression(var: !520, expr: !DIExpression())
!520 = distinct !DIGlobalVariable(name: "static_regions", scope: !387, file: !394, line: 62, type: !521, isLocal: true, isDefinition: true)
!521 = !DICompositeType(tag: DW_TAG_array_type, baseType: !522, size: 96, elements: !517)
!522 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !506)
!523 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !524)
!524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !291, line: 16, size: 64, elements: !525)
!525 = !{!526, !527}
!526 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !524, file: !291, line: 17, baseType: !279, size: 32)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !524, file: !291, line: 18, baseType: !178, size: 8, offset: 32)
!528 = !DIGlobalVariableExpression(var: !529, expr: !DIExpression())
!529 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !530, file: !563, line: 39, type: !178, isLocal: true, isDefinition: true)
!530 = distinct !DICompileUnit(language: DW_LANG_C99, file: !531, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !532, globals: !562, splitDebugInlining: false, nameTableKind: None)
!531 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/simple")
!532 = !{!533, !107, !109, !550, !178}
!533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !534, size: 32)
!534 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !535, line: 1226, baseType: !536)
!535 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!536 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 1213, size: 352, elements: !537)
!537 = !{!538, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549}
!538 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !536, file: !535, line: 1215, baseType: !539, size: 32)
!539 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !316)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !536, file: !535, line: 1216, baseType: !316, size: 32, offset: 32)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !536, file: !535, line: 1217, baseType: !316, size: 32, offset: 64)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !536, file: !535, line: 1218, baseType: !316, size: 32, offset: 96)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !536, file: !535, line: 1219, baseType: !316, size: 32, offset: 128)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !536, file: !535, line: 1220, baseType: !316, size: 32, offset: 160)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !536, file: !535, line: 1221, baseType: !316, size: 32, offset: 192)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !536, file: !535, line: 1222, baseType: !316, size: 32, offset: 224)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !536, file: !535, line: 1223, baseType: !316, size: 32, offset: 256)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !536, file: !535, line: 1224, baseType: !316, size: 32, offset: 288)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !536, file: !535, line: 1225, baseType: !316, size: 32, offset: 320)
!550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !551, size: 32)
!551 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !552)
!552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !553, line: 27, size: 96, elements: !554)
!553 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!554 = !{!555, !556, !557}
!555 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !552, file: !553, line: 29, baseType: !110, size: 32)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !552, file: !553, line: 31, baseType: !279, size: 32, offset: 32)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !552, file: !553, line: 37, baseType: !558, size: 32, offset: 64)
!558 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !513, line: 146, baseType: !559)
!559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !513, line: 141, size: 32, elements: !560)
!560 = !{!561}
!561 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !559, file: !513, line: 143, baseType: !110, size: 32)
!562 = !{!528}
!563 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!564 = !DIGlobalVariableExpression(var: !565, expr: !DIExpression())
!565 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !566, file: !573, line: 21, type: !302, isLocal: true, isDefinition: true)
!566 = distinct !DICompileUnit(language: DW_LANG_C99, file: !567, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !568, globals: !572, splitDebugInlining: false, nameTableKind: None)
!567 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/simple")
!568 = !{!569, !109, !107}
!569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !570, size: 32)
!570 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !571, line: 22, baseType: !109)
!571 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!572 = !{!564}
!573 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!574 = !DIGlobalVariableExpression(var: !575, expr: !DIExpression())
!575 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !576, file: !581, line: 13, type: !598, isLocal: true, isDefinition: true)
!576 = distinct !DICompileUnit(language: DW_LANG_C99, file: !577, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !578, splitDebugInlining: false, nameTableKind: None)
!577 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/simple")
!578 = !{!579, !574}
!579 = !DIGlobalVariableExpression(var: !580, expr: !DIExpression())
!580 = distinct !DIGlobalVariable(name: "mpu_config", scope: !576, file: !581, line: 37, type: !582, isLocal: false, isDefinition: true)
!581 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!582 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !583)
!583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !553, line: 41, size: 64, elements: !584)
!584 = !{!585, !586}
!585 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !583, file: !553, line: 43, baseType: !110, size: 32)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !583, file: !553, line: 45, baseType: !587, size: 32, offset: 32)
!587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !588, size: 32)
!588 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !589)
!589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !553, line: 27, size: 96, elements: !590)
!590 = !{!591, !592, !593}
!591 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !589, file: !553, line: 29, baseType: !110, size: 32)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !589, file: !553, line: 31, baseType: !279, size: 32, offset: 32)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !589, file: !553, line: 37, baseType: !594, size: 32, offset: 64)
!594 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !513, line: 146, baseType: !595)
!595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !513, line: 141, size: 32, elements: !596)
!596 = !{!597}
!597 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !595, file: !513, line: 143, baseType: !110, size: 32)
!598 = !DICompositeType(tag: DW_TAG_array_type, baseType: !588, size: 192, elements: !173)
!599 = !DIGlobalVariableExpression(var: !600, expr: !DIExpression())
!600 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !601, file: !714, line: 72, type: !798, isLocal: true, isDefinition: true)
!601 = distinct !DICompileUnit(language: DW_LANG_C99, file: !602, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !603, retainedTypes: !700, globals: !711, splitDebugInlining: false, nameTableKind: None)
!602 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/simple")
!603 = !{!30, !604}
!604 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !312, line: 65, baseType: !109, size: 32, elements: !605)
!605 = !{!606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699}
!606 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!607 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!608 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!609 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!610 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!611 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!612 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!613 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!614 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!615 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!616 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!617 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!618 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!619 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!620 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!621 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!622 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!623 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!624 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!625 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!626 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!627 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!628 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!629 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!630 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!631 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!632 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!633 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!634 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!635 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!636 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!637 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!638 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!639 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!640 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!641 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!642 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!643 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!644 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!645 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!646 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!647 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!648 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!649 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!650 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!651 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!652 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!653 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!654 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!655 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!656 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!657 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!658 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!659 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!660 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!661 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!662 = !DIEnumerator(name: "FMC_IRQn", value: 48)
!663 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!664 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!665 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!666 = !DIEnumerator(name: "UART4_IRQn", value: 52)
!667 = !DIEnumerator(name: "UART5_IRQn", value: 53)
!668 = !DIEnumerator(name: "TIM6_DAC_IRQn", value: 54)
!669 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!670 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!671 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!672 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!673 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!674 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!675 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!676 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!677 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!678 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!679 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!680 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!681 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!682 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!683 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!684 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!685 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!686 = !DIEnumerator(name: "OTG_HS_EP1_OUT_IRQn", value: 74)
!687 = !DIEnumerator(name: "OTG_HS_EP1_IN_IRQn", value: 75)
!688 = !DIEnumerator(name: "OTG_HS_WKUP_IRQn", value: 76)
!689 = !DIEnumerator(name: "OTG_HS_IRQn", value: 77)
!690 = !DIEnumerator(name: "DCMI_IRQn", value: 78)
!691 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!692 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!693 = !DIEnumerator(name: "SAI1_IRQn", value: 87)
!694 = !DIEnumerator(name: "SAI2_IRQn", value: 91)
!695 = !DIEnumerator(name: "QUADSPI_IRQn", value: 92)
!696 = !DIEnumerator(name: "CEC_IRQn", value: 93)
!697 = !DIEnumerator(name: "SPDIF_RX_IRQn", value: 94)
!698 = !DIEnumerator(name: "FMPI2C1_EV_IRQn", value: 95)
!699 = !DIEnumerator(name: "FMPI2C1_ER_IRQn", value: 96)
!700 = !{!232, !109, !107, !701}
!701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !702, size: 32)
!702 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !312, line: 392, baseType: !703)
!703 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 384, size: 192, elements: !704)
!704 = !{!705, !706, !707, !708, !709, !710}
!705 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !703, file: !312, line: 386, baseType: !316, size: 32)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !703, file: !312, line: 387, baseType: !316, size: 32, offset: 32)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !703, file: !312, line: 388, baseType: !316, size: 32, offset: 64)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !703, file: !312, line: 389, baseType: !316, size: 32, offset: 96)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !703, file: !312, line: 390, baseType: !316, size: 32, offset: 128)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !703, file: !312, line: 391, baseType: !316, size: 32, offset: 160)
!711 = !{!712, !718, !734, !745, !762, !599, !764, !778, !780, !782, !784, !786, !788, !790, !792, !794, !796}
!712 = !DIGlobalVariableExpression(var: !713, expr: !DIExpression())
!713 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !601, file: !714, line: 424, type: !715, isLocal: false, isDefinition: true, align: 16)
!714 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!715 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 64, elements: !716)
!716 = !{!717}
!717 = !DISubrange(count: 4)
!718 = !DIGlobalVariableExpression(var: !719, expr: !DIExpression())
!719 = distinct !DIGlobalVariable(name: "__device_dts_ord_36", scope: !601, file: !714, line: 424, type: !720, isLocal: false, isDefinition: true, align: 32)
!720 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !721)
!721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !722)
!722 = !{!723, !724, !725, !726, !732, !733}
!723 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !721, file: !336, line: 380, baseType: !279, size: 32)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !721, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !721, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !721, file: !336, line: 386, baseType: !727, size: 32, offset: 96)
!727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !728, size: 32)
!728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !729)
!729 = !{!730, !731}
!730 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !728, file: !336, line: 359, baseType: !178, size: 8)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !728, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !721, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !721, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!734 = !DIGlobalVariableExpression(var: !735, expr: !DIExpression())
!735 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_36", scope: !601, file: !714, line: 424, type: !736, isLocal: true, isDefinition: true, align: 32)
!736 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !737)
!737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !738)
!738 = !{!739, !744}
!739 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !737, file: !327, line: 60, baseType: !740, size: 32)
!740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !741, size: 32)
!741 = !DISubroutineType(types: !742)
!742 = !{!109, !743}
!743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !720, size: 32)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !737, file: !327, line: 65, baseType: !743, size: 32, offset: 32)
!745 = !DIGlobalVariableExpression(var: !746, expr: !DIExpression())
!746 = distinct !DIGlobalVariable(name: "exti_data", scope: !601, file: !714, line: 423, type: !747, isLocal: true, isDefinition: true)
!747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !714, line: 107, size: 1472, elements: !748)
!748 = !{!749}
!749 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !747, file: !714, line: 109, baseType: !750, size: 1472)
!750 = !DICompositeType(tag: DW_TAG_array_type, baseType: !751, size: 1472, elements: !760)
!751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !714, line: 101, size: 64, elements: !752)
!752 = !{!753, !759}
!753 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !751, file: !714, line: 102, baseType: !754, size: 32)
!754 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !755, line: 63, baseType: !756)
!755 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !757, size: 32)
!757 = !DISubroutineType(types: !758)
!758 = !{null, !109, !107}
!759 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !751, file: !714, line: 103, baseType: !107, size: 32, offset: 32)
!760 = !{!761}
!761 = !DISubrange(count: 23)
!762 = !DIGlobalVariableExpression(var: !763, expr: !DIExpression())
!763 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_36", scope: !601, file: !714, line: 424, type: !728, isLocal: true, isDefinition: true, align: 8)
!764 = !DIGlobalVariableExpression(var: !765, expr: !DIExpression())
!765 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !766, file: !714, line: 493, type: !771, isLocal: true, isDefinition: true, align: 32)
!766 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !714, file: !714, line: 460, type: !767, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !769)
!767 = !DISubroutineType(types: !768)
!768 = !{null, !743}
!769 = !{!770}
!770 = !DILocalVariable(name: "dev", arg: 1, scope: !766, file: !714, line: 460, type: !743)
!771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !772)
!772 = !{!773, !775, !776, !777}
!773 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !771, file: !10, line: 55, baseType: !774, size: 32)
!774 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !109)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !771, file: !10, line: 57, baseType: !774, size: 32, offset: 32)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !771, file: !10, line: 59, baseType: !107, size: 32, offset: 64)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !771, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!778 = !DIGlobalVariableExpression(var: !779, expr: !DIExpression())
!779 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !766, file: !714, line: 497, type: !771, isLocal: true, isDefinition: true, align: 32)
!780 = !DIGlobalVariableExpression(var: !781, expr: !DIExpression())
!781 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !766, file: !714, line: 507, type: !771, isLocal: true, isDefinition: true, align: 32)
!782 = !DIGlobalVariableExpression(var: !783, expr: !DIExpression())
!783 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !766, file: !714, line: 512, type: !771, isLocal: true, isDefinition: true, align: 32)
!784 = !DIGlobalVariableExpression(var: !785, expr: !DIExpression())
!785 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !766, file: !714, line: 516, type: !771, isLocal: true, isDefinition: true, align: 32)
!786 = !DIGlobalVariableExpression(var: !787, expr: !DIExpression())
!787 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !766, file: !714, line: 523, type: !771, isLocal: true, isDefinition: true, align: 32)
!788 = !DIGlobalVariableExpression(var: !789, expr: !DIExpression())
!789 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !766, file: !714, line: 527, type: !771, isLocal: true, isDefinition: true, align: 32)
!790 = !DIGlobalVariableExpression(var: !791, expr: !DIExpression())
!791 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !766, file: !714, line: 581, type: !771, isLocal: true, isDefinition: true, align: 32)
!792 = !DIGlobalVariableExpression(var: !793, expr: !DIExpression())
!793 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !766, file: !714, line: 586, type: !771, isLocal: true, isDefinition: true, align: 32)
!794 = !DIGlobalVariableExpression(var: !795, expr: !DIExpression())
!795 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !766, file: !714, line: 591, type: !771, isLocal: true, isDefinition: true, align: 32)
!796 = !DIGlobalVariableExpression(var: !797, expr: !DIExpression())
!797 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !766, file: !714, line: 595, type: !771, isLocal: true, isDefinition: true, align: 32)
!798 = !DICompositeType(tag: DW_TAG_array_type, baseType: !799, size: 736, elements: !760)
!799 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !800)
!800 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !312, line: 163, baseType: !604)
!801 = !DIGlobalVariableExpression(var: !802, expr: !DIExpression())
!802 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !803, file: !808, line: 25, type: !836, isLocal: false, isDefinition: true, align: 16)
!803 = distinct !DICompileUnit(language: DW_LANG_C99, file: !804, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !805, splitDebugInlining: false, nameTableKind: None)
!804 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/simple/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/simple")
!805 = !{!806, !801, !812, !814, !816, !818, !820, !822, !824, !826, !828, !830, !832, !834}
!806 = !DIGlobalVariableExpression(var: !807, expr: !DIExpression())
!807 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !803, file: !808, line: 20, type: !809, isLocal: false, isDefinition: true, align: 16)
!808 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/simple")
!809 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 240, elements: !810)
!810 = !{!811}
!811 = !DISubrange(count: 15)
!812 = !DIGlobalVariableExpression(var: !813, expr: !DIExpression())
!813 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_96", scope: !803, file: !808, line: 32, type: !715, isLocal: false, isDefinition: true, align: 16)
!814 = !DIGlobalVariableExpression(var: !815, expr: !DIExpression())
!815 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_95", scope: !803, file: !808, line: 39, type: !715, isLocal: false, isDefinition: true, align: 16)
!816 = !DIGlobalVariableExpression(var: !817, expr: !DIExpression())
!817 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_94", scope: !803, file: !808, line: 46, type: !715, isLocal: false, isDefinition: true, align: 16)
!818 = !DIGlobalVariableExpression(var: !819, expr: !DIExpression())
!819 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_93", scope: !803, file: !808, line: 53, type: !715, isLocal: false, isDefinition: true, align: 16)
!820 = !DIGlobalVariableExpression(var: !821, expr: !DIExpression())
!821 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !803, file: !808, line: 60, type: !715, isLocal: false, isDefinition: true, align: 16)
!822 = !DIGlobalVariableExpression(var: !823, expr: !DIExpression())
!823 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_92", scope: !803, file: !808, line: 67, type: !715, isLocal: false, isDefinition: true, align: 16)
!824 = !DIGlobalVariableExpression(var: !825, expr: !DIExpression())
!825 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_91", scope: !803, file: !808, line: 74, type: !715, isLocal: false, isDefinition: true, align: 16)
!826 = !DIGlobalVariableExpression(var: !827, expr: !DIExpression())
!827 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_90", scope: !803, file: !808, line: 81, type: !715, isLocal: false, isDefinition: true, align: 16)
!828 = !DIGlobalVariableExpression(var: !829, expr: !DIExpression())
!829 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_48", scope: !803, file: !808, line: 88, type: !715, isLocal: false, isDefinition: true, align: 16)
!830 = !DIGlobalVariableExpression(var: !831, expr: !DIExpression())
!831 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !803, file: !808, line: 95, type: !715, isLocal: false, isDefinition: true, align: 16)
!832 = !DIGlobalVariableExpression(var: !833, expr: !DIExpression())
!833 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !803, file: !808, line: 102, type: !715, isLocal: false, isDefinition: true, align: 16)
!834 = !DIGlobalVariableExpression(var: !835, expr: !DIExpression())
!835 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_52", scope: !803, file: !808, line: 109, type: !715, isLocal: false, isDefinition: true, align: 16)
!836 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 48, elements: !837)
!837 = !{!838}
!838 = !DISubrange(count: 3)
!839 = !DIGlobalVariableExpression(var: !840, expr: !DIExpression())
!840 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !841, file: !906, line: 398, type: !939, isLocal: true, isDefinition: true)
!841 = distinct !DICompileUnit(language: DW_LANG_C99, file: !842, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !843, retainedTypes: !856, globals: !903, splitDebugInlining: false, nameTableKind: None)
!842 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/simple")
!843 = !{!844, !30, !849}
!844 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !845, line: 197, baseType: !32, size: 32, elements: !846)
!845 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!846 = !{!847, !848}
!847 = !DIEnumerator(name: "SUCCESS", value: 0)
!848 = !DIEnumerator(name: "ERROR", value: 1)
!849 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !850, line: 44, baseType: !32, size: 32, elements: !851)
!850 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!851 = !{!852, !853, !854, !855}
!852 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!853 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!854 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!855 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!856 = !{!107, !109, !110, !857, !896, !902}
!857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !858, size: 32)
!858 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !312, line: 586, baseType: !859)
!859 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 550, size: 1216, elements: !860)
!860 = !{!861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895}
!861 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !859, file: !312, line: 552, baseType: !316, size: 32)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !859, file: !312, line: 553, baseType: !316, size: 32, offset: 32)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !859, file: !312, line: 554, baseType: !316, size: 32, offset: 64)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !859, file: !312, line: 555, baseType: !316, size: 32, offset: 96)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !859, file: !312, line: 556, baseType: !316, size: 32, offset: 128)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !859, file: !312, line: 557, baseType: !316, size: 32, offset: 160)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !859, file: !312, line: 558, baseType: !316, size: 32, offset: 192)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !859, file: !312, line: 559, baseType: !110, size: 32, offset: 224)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !859, file: !312, line: 560, baseType: !316, size: 32, offset: 256)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !859, file: !312, line: 561, baseType: !316, size: 32, offset: 288)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !859, file: !312, line: 562, baseType: !872, size: 64, offset: 320)
!872 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 64, elements: !173)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !859, file: !312, line: 563, baseType: !316, size: 32, offset: 384)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !859, file: !312, line: 564, baseType: !316, size: 32, offset: 416)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !859, file: !312, line: 565, baseType: !316, size: 32, offset: 448)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !859, file: !312, line: 566, baseType: !110, size: 32, offset: 480)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !859, file: !312, line: 567, baseType: !316, size: 32, offset: 512)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !859, file: !312, line: 568, baseType: !316, size: 32, offset: 544)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !859, file: !312, line: 569, baseType: !872, size: 64, offset: 576)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !859, file: !312, line: 570, baseType: !316, size: 32, offset: 640)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !859, file: !312, line: 571, baseType: !316, size: 32, offset: 672)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !859, file: !312, line: 572, baseType: !316, size: 32, offset: 704)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !859, file: !312, line: 573, baseType: !110, size: 32, offset: 736)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !859, file: !312, line: 574, baseType: !316, size: 32, offset: 768)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !859, file: !312, line: 575, baseType: !316, size: 32, offset: 800)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !859, file: !312, line: 576, baseType: !872, size: 64, offset: 832)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !859, file: !312, line: 577, baseType: !316, size: 32, offset: 896)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !859, file: !312, line: 578, baseType: !316, size: 32, offset: 928)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !859, file: !312, line: 579, baseType: !872, size: 64, offset: 960)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !859, file: !312, line: 580, baseType: !316, size: 32, offset: 1024)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !859, file: !312, line: 581, baseType: !316, size: 32, offset: 1056)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !859, file: !312, line: 582, baseType: !316, size: 32, offset: 1088)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !859, file: !312, line: 583, baseType: !316, size: 32, offset: 1120)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !859, file: !312, line: 584, baseType: !316, size: 32, offset: 1152)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !859, file: !312, line: 585, baseType: !316, size: 32, offset: 1184)
!896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !897, size: 32)
!897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !898, line: 343, size: 64, elements: !899)
!898 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!899 = !{!900, !901}
!900 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !897, file: !898, line: 344, baseType: !110, size: 32)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !897, file: !898, line: 345, baseType: !110, size: 32, offset: 32)
!902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !110, size: 32)
!903 = !{!904, !910, !926, !937, !839}
!904 = !DIGlobalVariableExpression(var: !905, expr: !DIExpression())
!905 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !841, file: !906, line: 752, type: !907, isLocal: false, isDefinition: true, align: 16)
!906 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!907 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 800, elements: !908)
!908 = !{!909}
!909 = !DISubrange(count: 50)
!910 = !DIGlobalVariableExpression(var: !911, expr: !DIExpression())
!911 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !841, file: !906, line: 752, type: !912, isLocal: false, isDefinition: true, align: 32)
!912 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !913)
!913 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !914)
!914 = !{!915, !916, !917, !918, !924, !925}
!915 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !913, file: !336, line: 380, baseType: !279, size: 32)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !913, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !913, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !913, file: !336, line: 386, baseType: !919, size: 32, offset: 96)
!919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !920, size: 32)
!920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !921)
!921 = !{!922, !923}
!922 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !920, file: !336, line: 359, baseType: !178, size: 8)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !920, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !913, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !913, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!926 = !DIGlobalVariableExpression(var: !927, expr: !DIExpression())
!927 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !841, file: !906, line: 752, type: !928, isLocal: true, isDefinition: true, align: 32)
!928 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !929)
!929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !930)
!930 = !{!931, !936}
!931 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !929, file: !327, line: 60, baseType: !932, size: 32)
!932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !933, size: 32)
!933 = !DISubroutineType(types: !934)
!934 = !{!109, !935}
!935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !912, size: 32)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !929, file: !327, line: 65, baseType: !935, size: 32, offset: 32)
!937 = !DIGlobalVariableExpression(var: !938, expr: !DIExpression())
!938 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !841, file: !906, line: 752, type: !920, isLocal: true, isDefinition: true, align: 8)
!939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !850, line: 100, size: 224, elements: !940)
!940 = !{!941, !947, !948, !957, !962, !967, !973}
!941 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !939, file: !850, line: 101, baseType: !942, size: 32)
!942 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !850, line: 76, baseType: !943)
!943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !944, size: 32)
!944 = !DISubroutineType(types: !945)
!945 = !{!109, !935, !946}
!946 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !850, line: 56, baseType: !107)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !939, file: !850, line: 102, baseType: !942, size: 32, offset: 32)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !939, file: !850, line: 103, baseType: !949, size: 32, offset: 64)
!949 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !850, line: 83, baseType: !950)
!950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !951, size: 32)
!951 = !DISubroutineType(types: !952)
!952 = !{!109, !935, !946, !953, !107}
!953 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !850, line: 72, baseType: !954)
!954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !955, size: 32)
!955 = !DISubroutineType(types: !956)
!956 = !{null, !935, !946, !107}
!957 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !939, file: !850, line: 104, baseType: !958, size: 32, offset: 96)
!958 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !850, line: 79, baseType: !959)
!959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !960, size: 32)
!960 = !DISubroutineType(types: !961)
!961 = !{!109, !935, !946, !902}
!962 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !939, file: !850, line: 105, baseType: !963, size: 32, offset: 128)
!963 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !850, line: 88, baseType: !964)
!964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !965, size: 32)
!965 = !DISubroutineType(types: !966)
!966 = !{!849, !935, !946}
!967 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !939, file: !850, line: 106, baseType: !968, size: 32, offset: 160)
!968 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !850, line: 92, baseType: !969)
!969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !970, size: 32)
!970 = !DISubroutineType(types: !971)
!971 = !{!109, !935, !946, !972}
!972 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !850, line: 64, baseType: !107)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !939, file: !850, line: 107, baseType: !974, size: 32, offset: 192)
!974 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !850, line: 96, baseType: !975)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 32)
!976 = !DISubroutineType(types: !977)
!977 = !{!109, !935, !946, !107}
!978 = !DIGlobalVariableExpression(var: !979, expr: !DIExpression())
!979 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !980, file: !1037, line: 603, type: !1039, isLocal: true, isDefinition: true, align: 32)
!980 = distinct !DICompileUnit(language: DW_LANG_C99, file: !981, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !982, globals: !1034, splitDebugInlining: false, nameTableKind: None)
!981 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/simple")
!982 = !{!107, !109, !983}
!983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !984, size: 32)
!984 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !985)
!985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !986, line: 336, size: 160, elements: !987)
!986 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!987 = !{!988, !1008, !1012, !1016, !1029}
!988 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !985, file: !986, line: 365, baseType: !989, size: 32)
!989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !990, size: 32)
!990 = !DISubroutineType(types: !991)
!991 = !{!109, !992, !1007}
!992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !993, size: 32)
!993 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !994)
!994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !995)
!995 = !{!996, !997, !998, !999, !1005, !1006}
!996 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !994, file: !336, line: 380, baseType: !279, size: 32)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !994, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !994, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !994, file: !336, line: 386, baseType: !1000, size: 32, offset: 96)
!1000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1001, size: 32)
!1001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !1002)
!1002 = !{!1003, !1004}
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1001, file: !336, line: 359, baseType: !178, size: 8)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1001, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !994, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !994, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!1007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !179, size: 32)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !985, file: !986, line: 366, baseType: !1009, size: 32, offset: 32)
!1009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1010, size: 32)
!1010 = !DISubroutineType(types: !1011)
!1011 = !{null, !992, !179}
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !985, file: !986, line: 374, baseType: !1013, size: 32, offset: 64)
!1013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 32)
!1014 = !DISubroutineType(types: !1015)
!1015 = !{!109, !992}
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !985, file: !986, line: 377, baseType: !1017, size: 32, offset: 96)
!1017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1018, size: 32)
!1018 = !DISubroutineType(types: !1019)
!1019 = !{!109, !992, !1020}
!1020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1021, size: 32)
!1021 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1022)
!1022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !986, line: 122, size: 64, elements: !1023)
!1023 = !{!1024, !1025, !1026, !1027, !1028}
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1022, file: !986, line: 123, baseType: !110, size: 32)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1022, file: !986, line: 124, baseType: !178, size: 8, offset: 32)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1022, file: !986, line: 125, baseType: !178, size: 8, offset: 40)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1022, file: !986, line: 126, baseType: !178, size: 8, offset: 48)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1022, file: !986, line: 127, baseType: !178, size: 8, offset: 56)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !985, file: !986, line: 379, baseType: !1030, size: 32, offset: 128)
!1030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 32)
!1031 = !DISubroutineType(types: !1032)
!1032 = !{!109, !992, !1033}
!1033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 32)
!1034 = !{!978, !1035}
!1035 = !DIGlobalVariableExpression(var: !1036, expr: !DIExpression())
!1036 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !980, file: !1037, line: 38, type: !1038, isLocal: true, isDefinition: true)
!1037 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1038 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !992)
!1039 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1040)
!1040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !1041)
!1041 = !{!1042, !1043}
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1040, file: !327, line: 60, baseType: !1013, size: 32)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1040, file: !327, line: 65, baseType: !992, size: 32, offset: 32)
!1044 = !DIGlobalVariableExpression(var: !1045, expr: !DIExpression())
!1045 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1046, file: !1217, line: 762, type: !1326, isLocal: true, isDefinition: true)
!1046 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1047, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1048, retainedTypes: !1066, globals: !1214, splitDebugInlining: false, nameTableKind: None)
!1047 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/simple")
!1048 = !{!30, !1049, !1055, !1060, !849}
!1049 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1050, line: 506, baseType: !32, size: 32, elements: !1051)
!1050 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1051 = !{!1052, !1053, !1054}
!1052 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1053 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1054 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1055 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1050, line: 512, baseType: !32, size: 32, elements: !1056)
!1056 = !{!1057, !1058, !1059}
!1057 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1058 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1059 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1060 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !755, line: 43, baseType: !32, size: 32, elements: !1061)
!1061 = !{!1062, !1063, !1064, !1065}
!1062 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1063 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1064 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1065 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1066 = !{!107, !109, !1067, !1137, !1142, !1102, !1055, !1049, !1147, !1148, !110, !1162, !1117, !285, !1174, !1175}
!1067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1068, size: 32)
!1068 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1069)
!1069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1050, line: 523, size: 288, elements: !1070)
!1070 = !{!1071, !1092, !1098, !1103, !1107, !1108, !1109, !1113, !1133}
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1069, file: !1050, line: 524, baseType: !1072, size: 32)
!1072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1073, size: 32)
!1073 = !DISubroutineType(types: !1074)
!1074 = !{!109, !1075, !1090, !1091}
!1075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 32)
!1076 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1077)
!1077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !1078)
!1078 = !{!1079, !1080, !1081, !1082, !1088, !1089}
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1077, file: !336, line: 380, baseType: !279, size: 32)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1077, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1077, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1077, file: !336, line: 386, baseType: !1083, size: 32, offset: 96)
!1083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1084, size: 32)
!1084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !1085)
!1085 = !{!1086, !1087}
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1084, file: !336, line: 359, baseType: !178, size: 8)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1084, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1077, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1077, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!1090 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1050, line: 237, baseType: !178)
!1091 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1050, line: 257, baseType: !110)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1069, file: !1050, line: 530, baseType: !1093, size: 32, offset: 32)
!1093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1094, size: 32)
!1094 = !DISubroutineType(types: !1095)
!1095 = !{!109, !1075, !1096}
!1096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 32)
!1097 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1050, line: 229, baseType: !110)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1069, file: !1050, line: 532, baseType: !1099, size: 32, offset: 64)
!1099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1100, size: 32)
!1100 = !DISubroutineType(types: !1101)
!1101 = !{!109, !1075, !1102, !1097}
!1102 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1050, line: 216, baseType: !110)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1069, file: !1050, line: 535, baseType: !1104, size: 32, offset: 96)
!1104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1105, size: 32)
!1105 = !DISubroutineType(types: !1106)
!1106 = !{!109, !1075, !1102}
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1069, file: !1050, line: 537, baseType: !1104, size: 32, offset: 128)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1069, file: !1050, line: 539, baseType: !1104, size: 32, offset: 160)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1069, file: !1050, line: 541, baseType: !1110, size: 32, offset: 192)
!1110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1111, size: 32)
!1111 = !DISubroutineType(types: !1112)
!1112 = !{!109, !1075, !1090, !1049, !1055}
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1069, file: !1050, line: 544, baseType: !1114, size: 32, offset: 224)
!1114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1115, size: 32)
!1115 = !DISubroutineType(types: !1116)
!1116 = !{!109, !1075, !1117, !347}
!1117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1118, size: 32)
!1118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1050, line: 478, size: 96, elements: !1119)
!1119 = !{!1120, !1127, !1132}
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1118, file: !1050, line: 482, baseType: !1121, size: 32)
!1121 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1122, line: 33, baseType: !1123)
!1122 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1122, line: 29, size: 32, elements: !1124)
!1124 = !{!1125}
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1123, file: !1122, line: 30, baseType: !1126, size: 32)
!1126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1123, size: 32)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1118, file: !1050, line: 485, baseType: !1128, size: 32, offset: 32)
!1128 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1050, line: 464, baseType: !1129)
!1129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1130, size: 32)
!1130 = !DISubroutineType(types: !1131)
!1131 = !{null, !1075, !1117, !1102}
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1118, file: !1050, line: 493, baseType: !1102, size: 32, offset: 64)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1069, file: !1050, line: 547, baseType: !1134, size: 32, offset: 256)
!1134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1135, size: 32)
!1135 = !DISubroutineType(types: !1136)
!1136 = !{!110, !1075}
!1137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1138, size: 32)
!1138 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1139)
!1139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1050, line: 428, size: 32, elements: !1140)
!1140 = !{!1141}
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1139, file: !1050, line: 434, baseType: !1102, size: 32)
!1142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1143, size: 32)
!1143 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1144)
!1144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1050, line: 441, size: 32, elements: !1145)
!1145 = !{!1146}
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1144, file: !1050, line: 447, baseType: !1102, size: 32)
!1147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1144, size: 32)
!1148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1149, size: 32)
!1149 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !312, line: 469, baseType: !1150)
!1150 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 458, size: 320, elements: !1151)
!1151 = !{!1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160}
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1150, file: !312, line: 460, baseType: !316, size: 32)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1150, file: !312, line: 461, baseType: !316, size: 32, offset: 32)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1150, file: !312, line: 462, baseType: !316, size: 32, offset: 64)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1150, file: !312, line: 463, baseType: !316, size: 32, offset: 96)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1150, file: !312, line: 464, baseType: !316, size: 32, offset: 128)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1150, file: !312, line: 465, baseType: !316, size: 32, offset: 160)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1150, file: !312, line: 466, baseType: !316, size: 32, offset: 192)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1150, file: !312, line: 467, baseType: !316, size: 32, offset: 224)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1150, file: !312, line: 468, baseType: !1161, size: 64, offset: 256)
!1161 = !DICompositeType(tag: DW_TAG_array_type, baseType: !316, size: 64, elements: !173)
!1162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1163, size: 32)
!1163 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !312, line: 484, baseType: !1164)
!1164 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 475, size: 384, elements: !1165)
!1165 = !{!1166, !1167, !1168, !1170, !1171, !1172, !1173}
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1164, file: !312, line: 477, baseType: !316, size: 32)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1164, file: !312, line: 478, baseType: !316, size: 32, offset: 32)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1164, file: !312, line: 479, baseType: !1169, size: 128, offset: 64)
!1169 = !DICompositeType(tag: DW_TAG_array_type, baseType: !316, size: 128, elements: !716)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1164, file: !312, line: 480, baseType: !872, size: 64, offset: 192)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1164, file: !312, line: 481, baseType: !316, size: 32, offset: 256)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1164, file: !312, line: 482, baseType: !872, size: 64, offset: 288)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1164, file: !312, line: 483, baseType: !316, size: 32, offset: 352)
!1174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !946, size: 32)
!1175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1176, size: 32)
!1176 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1177)
!1177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !850, line: 100, size: 224, elements: !1178)
!1178 = !{!1179, !1184, !1185, !1194, !1199, !1204, !1209}
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1177, file: !850, line: 101, baseType: !1180, size: 32)
!1180 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !850, line: 76, baseType: !1181)
!1181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1182, size: 32)
!1182 = !DISubroutineType(types: !1183)
!1183 = !{!109, !1075, !946}
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1177, file: !850, line: 102, baseType: !1180, size: 32, offset: 32)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1177, file: !850, line: 103, baseType: !1186, size: 32, offset: 64)
!1186 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !850, line: 83, baseType: !1187)
!1187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1188, size: 32)
!1188 = !DISubroutineType(types: !1189)
!1189 = !{!109, !1075, !946, !1190, !107}
!1190 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !850, line: 72, baseType: !1191)
!1191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1192, size: 32)
!1192 = !DISubroutineType(types: !1193)
!1193 = !{null, !1075, !946, !107}
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1177, file: !850, line: 104, baseType: !1195, size: 32, offset: 96)
!1195 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !850, line: 79, baseType: !1196)
!1196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1197, size: 32)
!1197 = !DISubroutineType(types: !1198)
!1198 = !{!109, !1075, !946, !902}
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1177, file: !850, line: 105, baseType: !1200, size: 32, offset: 128)
!1200 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !850, line: 88, baseType: !1201)
!1201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1202, size: 32)
!1202 = !DISubroutineType(types: !1203)
!1203 = !{!849, !1075, !946}
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1177, file: !850, line: 106, baseType: !1205, size: 32, offset: 160)
!1205 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !850, line: 92, baseType: !1206)
!1206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1207, size: 32)
!1207 = !DISubroutineType(types: !1208)
!1208 = !{!109, !1075, !946, !972}
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1177, file: !850, line: 107, baseType: !1210, size: 32, offset: 192)
!1210 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !850, line: 96, baseType: !1211)
!1211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1212, size: 32)
!1212 = !DISubroutineType(types: !1213)
!1213 = !{!109, !1075, !946, !107}
!1214 = !{!1215, !1221, !1223, !1233, !1235, !1237, !1239, !1241, !1243, !1245, !1250, !1252, !1254, !1256, !1258, !1260, !1262, !1264, !1266, !1268, !1270, !1272, !1274, !1276, !1278, !1292, !1294, !1296, !1298, !1300, !1302, !1304, !1306, !1308, !1310, !1312, !1314, !1316, !1318, !1320, !1044, !1322, !1324, !1337, !1339, !1341, !1343, !1345, !1347}
!1215 = !DIGlobalVariableExpression(var: !1216, expr: !DIExpression())
!1216 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_90", scope: !1046, file: !1217, line: 762, type: !1218, isLocal: false, isDefinition: true, align: 16)
!1217 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1218 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 80, elements: !1219)
!1219 = !{!1220}
!1220 = !DISubrange(count: 5)
!1221 = !DIGlobalVariableExpression(var: !1222, expr: !DIExpression())
!1222 = distinct !DIGlobalVariable(name: "__device_dts_ord_90", scope: !1046, file: !1217, line: 762, type: !1076, isLocal: false, isDefinition: true, align: 32)
!1223 = !DIGlobalVariableExpression(var: !1224, expr: !DIExpression())
!1224 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_90", scope: !1046, file: !1217, line: 762, type: !1225, isLocal: true, isDefinition: true, align: 32)
!1225 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1226)
!1226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !1227)
!1227 = !{!1228, !1232}
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1226, file: !327, line: 60, baseType: !1229, size: 32)
!1229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1230, size: 32)
!1230 = !DISubroutineType(types: !1231)
!1231 = !{!109, !1075}
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1226, file: !327, line: 65, baseType: !1075, size: 32, offset: 32)
!1233 = !DIGlobalVariableExpression(var: !1234, expr: !DIExpression())
!1234 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_91", scope: !1046, file: !1217, line: 766, type: !1218, isLocal: false, isDefinition: true, align: 16)
!1235 = !DIGlobalVariableExpression(var: !1236, expr: !DIExpression())
!1236 = distinct !DIGlobalVariable(name: "__device_dts_ord_91", scope: !1046, file: !1217, line: 766, type: !1076, isLocal: false, isDefinition: true, align: 32)
!1237 = !DIGlobalVariableExpression(var: !1238, expr: !DIExpression())
!1238 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_91", scope: !1046, file: !1217, line: 766, type: !1225, isLocal: true, isDefinition: true, align: 32)
!1239 = !DIGlobalVariableExpression(var: !1240, expr: !DIExpression())
!1240 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_92", scope: !1046, file: !1217, line: 770, type: !1218, isLocal: false, isDefinition: true, align: 16)
!1241 = !DIGlobalVariableExpression(var: !1242, expr: !DIExpression())
!1242 = distinct !DIGlobalVariable(name: "__device_dts_ord_92", scope: !1046, file: !1217, line: 770, type: !1076, isLocal: false, isDefinition: true, align: 32)
!1243 = !DIGlobalVariableExpression(var: !1244, expr: !DIExpression())
!1244 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_92", scope: !1046, file: !1217, line: 770, type: !1225, isLocal: true, isDefinition: true, align: 32)
!1245 = !DIGlobalVariableExpression(var: !1246, expr: !DIExpression())
!1246 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !1046, file: !1217, line: 774, type: !1247, isLocal: false, isDefinition: true, align: 16)
!1247 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 144, elements: !1248)
!1248 = !{!1249}
!1249 = !DISubrange(count: 9)
!1250 = !DIGlobalVariableExpression(var: !1251, expr: !DIExpression())
!1251 = distinct !DIGlobalVariable(name: "__device_dts_ord_19", scope: !1046, file: !1217, line: 774, type: !1076, isLocal: false, isDefinition: true, align: 32)
!1252 = !DIGlobalVariableExpression(var: !1253, expr: !DIExpression())
!1253 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_19", scope: !1046, file: !1217, line: 774, type: !1225, isLocal: true, isDefinition: true, align: 32)
!1254 = !DIGlobalVariableExpression(var: !1255, expr: !DIExpression())
!1255 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_93", scope: !1046, file: !1217, line: 778, type: !1218, isLocal: false, isDefinition: true, align: 16)
!1256 = !DIGlobalVariableExpression(var: !1257, expr: !DIExpression())
!1257 = distinct !DIGlobalVariable(name: "__device_dts_ord_93", scope: !1046, file: !1217, line: 778, type: !1076, isLocal: false, isDefinition: true, align: 32)
!1258 = !DIGlobalVariableExpression(var: !1259, expr: !DIExpression())
!1259 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_93", scope: !1046, file: !1217, line: 778, type: !1225, isLocal: true, isDefinition: true, align: 32)
!1260 = !DIGlobalVariableExpression(var: !1261, expr: !DIExpression())
!1261 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_94", scope: !1046, file: !1217, line: 782, type: !1218, isLocal: false, isDefinition: true, align: 16)
!1262 = !DIGlobalVariableExpression(var: !1263, expr: !DIExpression())
!1263 = distinct !DIGlobalVariable(name: "__device_dts_ord_94", scope: !1046, file: !1217, line: 782, type: !1076, isLocal: false, isDefinition: true, align: 32)
!1264 = !DIGlobalVariableExpression(var: !1265, expr: !DIExpression())
!1265 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_94", scope: !1046, file: !1217, line: 782, type: !1225, isLocal: true, isDefinition: true, align: 32)
!1266 = !DIGlobalVariableExpression(var: !1267, expr: !DIExpression())
!1267 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_95", scope: !1046, file: !1217, line: 786, type: !1218, isLocal: false, isDefinition: true, align: 16)
!1268 = !DIGlobalVariableExpression(var: !1269, expr: !DIExpression())
!1269 = distinct !DIGlobalVariable(name: "__device_dts_ord_95", scope: !1046, file: !1217, line: 786, type: !1076, isLocal: false, isDefinition: true, align: 32)
!1270 = !DIGlobalVariableExpression(var: !1271, expr: !DIExpression())
!1271 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_95", scope: !1046, file: !1217, line: 786, type: !1225, isLocal: true, isDefinition: true, align: 32)
!1272 = !DIGlobalVariableExpression(var: !1273, expr: !DIExpression())
!1273 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_96", scope: !1046, file: !1217, line: 790, type: !1218, isLocal: false, isDefinition: true, align: 16)
!1274 = !DIGlobalVariableExpression(var: !1275, expr: !DIExpression())
!1275 = distinct !DIGlobalVariable(name: "__device_dts_ord_96", scope: !1046, file: !1217, line: 790, type: !1076, isLocal: false, isDefinition: true, align: 32)
!1276 = !DIGlobalVariableExpression(var: !1277, expr: !DIExpression())
!1277 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_96", scope: !1046, file: !1217, line: 790, type: !1225, isLocal: true, isDefinition: true, align: 32)
!1278 = !DIGlobalVariableExpression(var: !1279, expr: !DIExpression())
!1279 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1046, file: !1217, line: 762, type: !1280, isLocal: true, isDefinition: true)
!1280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1281, line: 237, size: 128, elements: !1282)
!1281 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1282 = !{!1283, !1284, !1285}
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1280, file: !1281, line: 239, baseType: !1144, size: 32)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1280, file: !1281, line: 241, baseType: !1075, size: 32, offset: 32)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1280, file: !1281, line: 243, baseType: !1286, size: 64, offset: 64)
!1286 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1122, line: 40, baseType: !1287)
!1287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1122, line: 35, size: 64, elements: !1288)
!1288 = !{!1289, !1291}
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1287, file: !1122, line: 36, baseType: !1290, size: 32)
!1290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1121, size: 32)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1287, file: !1122, line: 37, baseType: !1290, size: 32, offset: 32)
!1292 = !DIGlobalVariableExpression(var: !1293, expr: !DIExpression())
!1293 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_90", scope: !1046, file: !1217, line: 762, type: !1084, isLocal: true, isDefinition: true, align: 8)
!1294 = !DIGlobalVariableExpression(var: !1295, expr: !DIExpression())
!1295 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1046, file: !1217, line: 766, type: !1280, isLocal: true, isDefinition: true)
!1296 = !DIGlobalVariableExpression(var: !1297, expr: !DIExpression())
!1297 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_91", scope: !1046, file: !1217, line: 766, type: !1084, isLocal: true, isDefinition: true, align: 8)
!1298 = !DIGlobalVariableExpression(var: !1299, expr: !DIExpression())
!1299 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1046, file: !1217, line: 770, type: !1280, isLocal: true, isDefinition: true)
!1300 = !DIGlobalVariableExpression(var: !1301, expr: !DIExpression())
!1301 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_92", scope: !1046, file: !1217, line: 770, type: !1084, isLocal: true, isDefinition: true, align: 8)
!1302 = !DIGlobalVariableExpression(var: !1303, expr: !DIExpression())
!1303 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1046, file: !1217, line: 774, type: !1280, isLocal: true, isDefinition: true)
!1304 = !DIGlobalVariableExpression(var: !1305, expr: !DIExpression())
!1305 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_19", scope: !1046, file: !1217, line: 774, type: !1084, isLocal: true, isDefinition: true, align: 8)
!1306 = !DIGlobalVariableExpression(var: !1307, expr: !DIExpression())
!1307 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1046, file: !1217, line: 778, type: !1280, isLocal: true, isDefinition: true)
!1308 = !DIGlobalVariableExpression(var: !1309, expr: !DIExpression())
!1309 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_93", scope: !1046, file: !1217, line: 778, type: !1084, isLocal: true, isDefinition: true, align: 8)
!1310 = !DIGlobalVariableExpression(var: !1311, expr: !DIExpression())
!1311 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1046, file: !1217, line: 782, type: !1280, isLocal: true, isDefinition: true)
!1312 = !DIGlobalVariableExpression(var: !1313, expr: !DIExpression())
!1313 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_94", scope: !1046, file: !1217, line: 782, type: !1084, isLocal: true, isDefinition: true, align: 8)
!1314 = !DIGlobalVariableExpression(var: !1315, expr: !DIExpression())
!1315 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1046, file: !1217, line: 786, type: !1280, isLocal: true, isDefinition: true)
!1316 = !DIGlobalVariableExpression(var: !1317, expr: !DIExpression())
!1317 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_95", scope: !1046, file: !1217, line: 786, type: !1084, isLocal: true, isDefinition: true, align: 8)
!1318 = !DIGlobalVariableExpression(var: !1319, expr: !DIExpression())
!1319 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1046, file: !1217, line: 790, type: !1280, isLocal: true, isDefinition: true)
!1320 = !DIGlobalVariableExpression(var: !1321, expr: !DIExpression())
!1321 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_96", scope: !1046, file: !1217, line: 790, type: !1084, isLocal: true, isDefinition: true, align: 8)
!1322 = !DIGlobalVariableExpression(var: !1323, expr: !DIExpression())
!1323 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1046, file: !1217, line: 656, type: !1068, isLocal: true, isDefinition: true)
!1324 = !DIGlobalVariableExpression(var: !1325, expr: !DIExpression())
!1325 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1046, file: !1217, line: 766, type: !1326, isLocal: true, isDefinition: true)
!1326 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1327)
!1327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1281, line: 224, size: 160, elements: !1328)
!1328 = !{!1329, !1330, !1331, !1332}
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1327, file: !1281, line: 226, baseType: !1139, size: 32)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1327, file: !1281, line: 228, baseType: !902, size: 32, offset: 32)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1327, file: !1281, line: 230, baseType: !109, size: 32, offset: 64)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1327, file: !1281, line: 231, baseType: !1333, size: 64, offset: 96)
!1333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !898, line: 343, size: 64, elements: !1334)
!1334 = !{!1335, !1336}
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1333, file: !898, line: 344, baseType: !110, size: 32)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1333, file: !898, line: 345, baseType: !110, size: 32, offset: 32)
!1337 = !DIGlobalVariableExpression(var: !1338, expr: !DIExpression())
!1338 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1046, file: !1217, line: 770, type: !1326, isLocal: true, isDefinition: true)
!1339 = !DIGlobalVariableExpression(var: !1340, expr: !DIExpression())
!1340 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1046, file: !1217, line: 774, type: !1326, isLocal: true, isDefinition: true)
!1341 = !DIGlobalVariableExpression(var: !1342, expr: !DIExpression())
!1342 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1046, file: !1217, line: 778, type: !1326, isLocal: true, isDefinition: true)
!1343 = !DIGlobalVariableExpression(var: !1344, expr: !DIExpression())
!1344 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1046, file: !1217, line: 782, type: !1326, isLocal: true, isDefinition: true)
!1345 = !DIGlobalVariableExpression(var: !1346, expr: !DIExpression())
!1346 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1046, file: !1217, line: 786, type: !1326, isLocal: true, isDefinition: true)
!1347 = !DIGlobalVariableExpression(var: !1348, expr: !DIExpression())
!1348 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1046, file: !1217, line: 790, type: !1326, isLocal: true, isDefinition: true)
!1349 = !DIGlobalVariableExpression(var: !1350, expr: !DIExpression())
!1350 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !1351, file: !1490, line: 44, type: !1628, isLocal: false, isDefinition: true)
!1351 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1352, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1353, retainedTypes: !1386, globals: !1487, splitDebugInlining: false, nameTableKind: None)
!1352 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/simple")
!1353 = !{!30, !1354, !1361, !1368, !1375, !1381, !849}
!1354 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !986, line: 47, baseType: !32, size: 32, elements: !1355)
!1355 = !{!1356, !1357, !1358, !1359, !1360}
!1356 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1357 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1358 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1359 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1360 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1361 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !986, line: 75, baseType: !32, size: 32, elements: !1362)
!1362 = !{!1363, !1364, !1365, !1366, !1367}
!1363 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1364 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1365 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1366 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1367 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1368 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !986, line: 92, baseType: !32, size: 32, elements: !1369)
!1369 = !{!1370, !1371, !1372, !1373, !1374}
!1370 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1371 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1372 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1373 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1374 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1375 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !986, line: 84, baseType: !32, size: 32, elements: !1376)
!1376 = !{!1377, !1378, !1379, !1380}
!1377 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1378 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1379 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1380 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1381 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !986, line: 107, baseType: !32, size: 32, elements: !1382)
!1382 = !{!1383, !1384, !1385}
!1383 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1384 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1385 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1386 = !{!107, !109, !1387, !179, !178, !1436, !110, !946, !1447, !192, !111, !1486}
!1387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1388, size: 32)
!1388 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1389)
!1389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !986, line: 336, size: 160, elements: !1390)
!1390 = !{!1391, !1410, !1414, !1418, !1431}
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1389, file: !986, line: 365, baseType: !1392, size: 32)
!1392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1393, size: 32)
!1393 = !DISubroutineType(types: !1394)
!1394 = !{!109, !1395, !1007}
!1395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1396, size: 32)
!1396 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1397)
!1397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !1398)
!1398 = !{!1399, !1400, !1401, !1402, !1408, !1409}
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1397, file: !336, line: 380, baseType: !279, size: 32)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1397, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1397, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1397, file: !336, line: 386, baseType: !1403, size: 32, offset: 96)
!1403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1404, size: 32)
!1404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !1405)
!1405 = !{!1406, !1407}
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1404, file: !336, line: 359, baseType: !178, size: 8)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1404, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1397, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1397, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1389, file: !986, line: 366, baseType: !1411, size: 32, offset: 32)
!1411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1412, size: 32)
!1412 = !DISubroutineType(types: !1413)
!1413 = !{null, !1395, !179}
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1389, file: !986, line: 374, baseType: !1415, size: 32, offset: 64)
!1415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1416, size: 32)
!1416 = !DISubroutineType(types: !1417)
!1417 = !{!109, !1395}
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1389, file: !986, line: 377, baseType: !1419, size: 32, offset: 96)
!1419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1420, size: 32)
!1420 = !DISubroutineType(types: !1421)
!1421 = !{!109, !1395, !1422}
!1422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1423, size: 32)
!1423 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1424)
!1424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !986, line: 122, size: 64, elements: !1425)
!1425 = !{!1426, !1427, !1428, !1429, !1430}
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1424, file: !986, line: 123, baseType: !110, size: 32)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1424, file: !986, line: 124, baseType: !178, size: 8, offset: 32)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1424, file: !986, line: 125, baseType: !178, size: 8, offset: 40)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1424, file: !986, line: 126, baseType: !178, size: 8, offset: 48)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1424, file: !986, line: 127, baseType: !178, size: 8, offset: 56)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1389, file: !986, line: 379, baseType: !1432, size: 32, offset: 128)
!1432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1433, size: 32)
!1433 = !DISubroutineType(types: !1434)
!1434 = !{!109, !1395, !1435}
!1435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1424, size: 32)
!1436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1437, size: 32)
!1437 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !312, line: 783, baseType: !1438)
!1438 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 774, size: 224, elements: !1439)
!1439 = !{!1440, !1441, !1442, !1443, !1444, !1445, !1446}
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1438, file: !312, line: 776, baseType: !316, size: 32)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1438, file: !312, line: 777, baseType: !316, size: 32, offset: 32)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1438, file: !312, line: 778, baseType: !316, size: 32, offset: 64)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1438, file: !312, line: 779, baseType: !316, size: 32, offset: 96)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1438, file: !312, line: 780, baseType: !316, size: 32, offset: 128)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1438, file: !312, line: 781, baseType: !316, size: 32, offset: 160)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1438, file: !312, line: 782, baseType: !316, size: 32, offset: 192)
!1447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1448, size: 32)
!1448 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1449)
!1449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !850, line: 100, size: 224, elements: !1450)
!1450 = !{!1451, !1456, !1457, !1466, !1471, !1476, !1481}
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1449, file: !850, line: 101, baseType: !1452, size: 32)
!1452 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !850, line: 76, baseType: !1453)
!1453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1454, size: 32)
!1454 = !DISubroutineType(types: !1455)
!1455 = !{!109, !1395, !946}
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1449, file: !850, line: 102, baseType: !1452, size: 32, offset: 32)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1449, file: !850, line: 103, baseType: !1458, size: 32, offset: 64)
!1458 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !850, line: 83, baseType: !1459)
!1459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1460, size: 32)
!1460 = !DISubroutineType(types: !1461)
!1461 = !{!109, !1395, !946, !1462, !107}
!1462 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !850, line: 72, baseType: !1463)
!1463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1464, size: 32)
!1464 = !DISubroutineType(types: !1465)
!1465 = !{null, !1395, !946, !107}
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1449, file: !850, line: 104, baseType: !1467, size: 32, offset: 96)
!1467 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !850, line: 79, baseType: !1468)
!1468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1469, size: 32)
!1469 = !DISubroutineType(types: !1470)
!1470 = !{!109, !1395, !946, !902}
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1449, file: !850, line: 105, baseType: !1472, size: 32, offset: 128)
!1472 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !850, line: 88, baseType: !1473)
!1473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1474, size: 32)
!1474 = !DISubroutineType(types: !1475)
!1475 = !{!849, !1395, !946}
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1449, file: !850, line: 106, baseType: !1477, size: 32, offset: 160)
!1477 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !850, line: 92, baseType: !1478)
!1478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1479, size: 32)
!1479 = !DISubroutineType(types: !1480)
!1480 = !{!109, !1395, !946, !972}
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1449, file: !850, line: 107, baseType: !1482, size: 32, offset: 192)
!1482 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !850, line: 96, baseType: !1483)
!1483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1484, size: 32)
!1484 = !DISubroutineType(types: !1485)
!1485 = !{!109, !1395, !946, !107}
!1486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !316, size: 32)
!1487 = !{!1349, !1488, !1494, !1496, !1503, !1505, !1507, !1509, !1511, !1513, !1515, !1517, !1519, !1521, !1523, !1525, !1527, !1529, !1573, !1576, !1578, !1581, !1584, !1586, !1592, !1594, !1596, !1598, !1600, !1602, !1604, !1606, !1608, !1610, !1612, !1614, !1616, !1618, !1620, !1622, !1624, !1626}
!1488 = !DIGlobalVariableExpression(var: !1489, expr: !DIExpression())
!1489 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_52", scope: !1351, file: !1490, line: 1914, type: !1491, isLocal: false, isDefinition: true, align: 16)
!1490 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1491 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 128, elements: !1492)
!1492 = !{!1493}
!1493 = !DISubrange(count: 8)
!1494 = !DIGlobalVariableExpression(var: !1495, expr: !DIExpression())
!1495 = distinct !DIGlobalVariable(name: "__device_dts_ord_52", scope: !1351, file: !1490, line: 1914, type: !1396, isLocal: false, isDefinition: true, align: 32)
!1496 = !DIGlobalVariableExpression(var: !1497, expr: !DIExpression())
!1497 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_52", scope: !1351, file: !1490, line: 1914, type: !1498, isLocal: true, isDefinition: true, align: 32)
!1498 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1499)
!1499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !1500)
!1500 = !{!1501, !1502}
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1499, file: !327, line: 60, baseType: !1415, size: 32)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1499, file: !327, line: 65, baseType: !1395, size: 32, offset: 32)
!1503 = !DIGlobalVariableExpression(var: !1504, expr: !DIExpression())
!1504 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !1351, file: !1490, line: 1914, type: !1491, isLocal: false, isDefinition: true, align: 16)
!1505 = !DIGlobalVariableExpression(var: !1506, expr: !DIExpression())
!1506 = distinct !DIGlobalVariable(name: "__device_dts_ord_42", scope: !1351, file: !1490, line: 1914, type: !1396, isLocal: false, isDefinition: true, align: 32)
!1507 = !DIGlobalVariableExpression(var: !1508, expr: !DIExpression())
!1508 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_42", scope: !1351, file: !1490, line: 1914, type: !1498, isLocal: true, isDefinition: true, align: 32)
!1509 = !DIGlobalVariableExpression(var: !1510, expr: !DIExpression())
!1510 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1351, file: !1490, line: 1914, type: !1491, isLocal: false, isDefinition: true, align: 16)
!1511 = !DIGlobalVariableExpression(var: !1512, expr: !DIExpression())
!1512 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !1351, file: !1490, line: 1914, type: !1396, isLocal: false, isDefinition: true, align: 32)
!1513 = !DIGlobalVariableExpression(var: !1514, expr: !DIExpression())
!1514 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !1351, file: !1490, line: 1914, type: !1498, isLocal: true, isDefinition: true, align: 32)
!1515 = !DIGlobalVariableExpression(var: !1516, expr: !DIExpression())
!1516 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_48", scope: !1351, file: !1490, line: 1914, type: !1491, isLocal: false, isDefinition: true, align: 16)
!1517 = !DIGlobalVariableExpression(var: !1518, expr: !DIExpression())
!1518 = distinct !DIGlobalVariable(name: "__device_dts_ord_48", scope: !1351, file: !1490, line: 1914, type: !1396, isLocal: false, isDefinition: true, align: 32)
!1519 = !DIGlobalVariableExpression(var: !1520, expr: !DIExpression())
!1520 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_48", scope: !1351, file: !1490, line: 1914, type: !1498, isLocal: true, isDefinition: true, align: 32)
!1521 = !DIGlobalVariableExpression(var: !1522, expr: !DIExpression())
!1522 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_52", scope: !1351, file: !1490, line: 1914, type: !1404, isLocal: true, isDefinition: true, align: 8)
!1523 = !DIGlobalVariableExpression(var: !1524, expr: !DIExpression())
!1524 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_42", scope: !1351, file: !1490, line: 1914, type: !1404, isLocal: true, isDefinition: true, align: 8)
!1525 = !DIGlobalVariableExpression(var: !1526, expr: !DIExpression())
!1526 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !1351, file: !1490, line: 1914, type: !1404, isLocal: true, isDefinition: true, align: 8)
!1527 = !DIGlobalVariableExpression(var: !1528, expr: !DIExpression())
!1528 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_48", scope: !1351, file: !1490, line: 1914, type: !1404, isLocal: true, isDefinition: true, align: 8)
!1529 = !DIGlobalVariableExpression(var: !1530, expr: !DIExpression())
!1530 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1351, file: !1490, line: 1914, type: !1531, isLocal: true, isDefinition: true)
!1531 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1532)
!1532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1533, line: 22, size: 224, elements: !1534)
!1533 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1534 = !{!1535, !1536, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550}
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1532, file: !1533, line: 24, baseType: !1436, size: 32)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1532, file: !1533, line: 26, baseType: !1537, size: 32, offset: 32)
!1537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1538, size: 32)
!1538 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1539)
!1539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !898, line: 343, size: 64, elements: !1540)
!1540 = !{!1541, !1542}
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1539, file: !898, line: 344, baseType: !110, size: 32)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1539, file: !898, line: 345, baseType: !110, size: 32, offset: 32)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1532, file: !1533, line: 28, baseType: !232, size: 32, offset: 64)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1532, file: !1533, line: 30, baseType: !347, size: 8, offset: 96)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1532, file: !1533, line: 32, baseType: !109, size: 32, offset: 128)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1532, file: !1533, line: 34, baseType: !347, size: 8, offset: 160)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1532, file: !1533, line: 36, baseType: !347, size: 8, offset: 168)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1532, file: !1533, line: 38, baseType: !347, size: 8, offset: 176)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1532, file: !1533, line: 40, baseType: !347, size: 8, offset: 184)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1532, file: !1533, line: 41, baseType: !1551, size: 32, offset: 192)
!1551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1552, size: 32)
!1552 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1553)
!1553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1554, line: 60, size: 64, elements: !1555)
!1554 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1555 = !{!1556, !1572}
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1553, file: !1554, line: 69, baseType: !1557, size: 32)
!1557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1558, size: 32)
!1558 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1559)
!1559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1554, line: 50, size: 64, elements: !1560)
!1560 = !{!1561, !1570, !1571}
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1559, file: !1554, line: 52, baseType: !1562, size: 32)
!1562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1563, size: 32)
!1563 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1564)
!1564 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1565, line: 37, baseType: !1566)
!1565 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1565, line: 32, size: 64, elements: !1567)
!1567 = !{!1568, !1569}
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1566, file: !1565, line: 34, baseType: !110, size: 32)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1566, file: !1565, line: 36, baseType: !110, size: 32, offset: 32)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1559, file: !1554, line: 54, baseType: !178, size: 8, offset: 32)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1559, file: !1554, line: 56, baseType: !178, size: 8, offset: 40)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1553, file: !1554, line: 71, baseType: !178, size: 8, offset: 32)
!1573 = !DIGlobalVariableExpression(var: !1574, expr: !DIExpression())
!1574 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1351, file: !1490, line: 1914, type: !1575, isLocal: true, isDefinition: true)
!1575 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1538, size: 64, elements: !517)
!1576 = !DIGlobalVariableExpression(var: !1577, expr: !DIExpression())
!1577 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_52", scope: !1351, file: !1490, line: 1914, type: !1552, isLocal: true, isDefinition: true)
!1578 = !DIGlobalVariableExpression(var: !1579, expr: !DIExpression())
!1579 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_52", scope: !1351, file: !1490, line: 1914, type: !1580, isLocal: true, isDefinition: true)
!1580 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1558, size: 64, elements: !517)
!1581 = !DIGlobalVariableExpression(var: !1582, expr: !DIExpression())
!1582 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_52", scope: !1351, file: !1490, line: 1914, type: !1583, isLocal: true, isDefinition: true)
!1583 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1563, size: 128, elements: !173)
!1584 = !DIGlobalVariableExpression(var: !1585, expr: !DIExpression())
!1585 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1351, file: !1490, line: 1539, type: !1388, isLocal: true, isDefinition: true)
!1586 = !DIGlobalVariableExpression(var: !1587, expr: !DIExpression())
!1587 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1351, file: !1490, line: 1914, type: !1588, isLocal: true, isDefinition: true)
!1588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1533, line: 74, size: 64, elements: !1589)
!1589 = !{!1590, !1591}
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1588, file: !1533, line: 76, baseType: !110, size: 32)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1588, file: !1533, line: 78, baseType: !1395, size: 32, offset: 32)
!1592 = !DIGlobalVariableExpression(var: !1593, expr: !DIExpression())
!1593 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_1", scope: !1351, file: !1490, line: 1914, type: !1531, isLocal: true, isDefinition: true)
!1594 = !DIGlobalVariableExpression(var: !1595, expr: !DIExpression())
!1595 = distinct !DIGlobalVariable(name: "pclken_1", scope: !1351, file: !1490, line: 1914, type: !1575, isLocal: true, isDefinition: true)
!1596 = !DIGlobalVariableExpression(var: !1597, expr: !DIExpression())
!1597 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_42", scope: !1351, file: !1490, line: 1914, type: !1552, isLocal: true, isDefinition: true)
!1598 = !DIGlobalVariableExpression(var: !1599, expr: !DIExpression())
!1599 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_42", scope: !1351, file: !1490, line: 1914, type: !1580, isLocal: true, isDefinition: true)
!1600 = !DIGlobalVariableExpression(var: !1601, expr: !DIExpression())
!1601 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_42", scope: !1351, file: !1490, line: 1914, type: !1583, isLocal: true, isDefinition: true)
!1602 = !DIGlobalVariableExpression(var: !1603, expr: !DIExpression())
!1603 = distinct !DIGlobalVariable(name: "uart_stm32_data_1", scope: !1351, file: !1490, line: 1914, type: !1588, isLocal: true, isDefinition: true)
!1604 = !DIGlobalVariableExpression(var: !1605, expr: !DIExpression())
!1605 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_2", scope: !1351, file: !1490, line: 1914, type: !1531, isLocal: true, isDefinition: true)
!1606 = !DIGlobalVariableExpression(var: !1607, expr: !DIExpression())
!1607 = distinct !DIGlobalVariable(name: "pclken_2", scope: !1351, file: !1490, line: 1914, type: !1575, isLocal: true, isDefinition: true)
!1608 = !DIGlobalVariableExpression(var: !1609, expr: !DIExpression())
!1609 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_45", scope: !1351, file: !1490, line: 1914, type: !1552, isLocal: true, isDefinition: true)
!1610 = !DIGlobalVariableExpression(var: !1611, expr: !DIExpression())
!1611 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_45", scope: !1351, file: !1490, line: 1914, type: !1580, isLocal: true, isDefinition: true)
!1612 = !DIGlobalVariableExpression(var: !1613, expr: !DIExpression())
!1613 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_45", scope: !1351, file: !1490, line: 1914, type: !1583, isLocal: true, isDefinition: true)
!1614 = !DIGlobalVariableExpression(var: !1615, expr: !DIExpression())
!1615 = distinct !DIGlobalVariable(name: "uart_stm32_data_2", scope: !1351, file: !1490, line: 1914, type: !1588, isLocal: true, isDefinition: true)
!1616 = !DIGlobalVariableExpression(var: !1617, expr: !DIExpression())
!1617 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_3", scope: !1351, file: !1490, line: 1914, type: !1531, isLocal: true, isDefinition: true)
!1618 = !DIGlobalVariableExpression(var: !1619, expr: !DIExpression())
!1619 = distinct !DIGlobalVariable(name: "pclken_3", scope: !1351, file: !1490, line: 1914, type: !1575, isLocal: true, isDefinition: true)
!1620 = !DIGlobalVariableExpression(var: !1621, expr: !DIExpression())
!1621 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_48", scope: !1351, file: !1490, line: 1914, type: !1552, isLocal: true, isDefinition: true)
!1622 = !DIGlobalVariableExpression(var: !1623, expr: !DIExpression())
!1623 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_48", scope: !1351, file: !1490, line: 1914, type: !1580, isLocal: true, isDefinition: true)
!1624 = !DIGlobalVariableExpression(var: !1625, expr: !DIExpression())
!1625 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_48", scope: !1351, file: !1490, line: 1914, type: !1583, isLocal: true, isDefinition: true)
!1626 = !DIGlobalVariableExpression(var: !1627, expr: !DIExpression())
!1627 = distinct !DIGlobalVariable(name: "uart_stm32_data_3", scope: !1351, file: !1490, line: 1914, type: !1588, isLocal: true, isDefinition: true)
!1628 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1629)
!1629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !291, line: 16, size: 64, elements: !1630)
!1630 = !{!1631, !1632}
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1629, file: !291, line: 17, baseType: !279, size: 32)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1629, file: !291, line: 18, baseType: !178, size: 8, offset: 32)
!1633 = !DIGlobalVariableExpression(var: !1634, expr: !DIExpression())
!1634 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1635, file: !1713, line: 65, type: !316, isLocal: true, isDefinition: true)
!1635 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1636, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1637, retainedTypes: !1638, globals: !1710, splitDebugInlining: false, nameTableKind: None)
!1636 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/simple")
!1637 = !{!604}
!1638 = !{!103, !1639, !774, !178, !110, !1647, !1678}
!1639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1640, size: 32)
!1640 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !535, line: 770, baseType: !1641)
!1641 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 764, size: 128, elements: !1642)
!1642 = !{!1643, !1644, !1645, !1646}
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1641, file: !535, line: 766, baseType: !316, size: 32)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1641, file: !535, line: 767, baseType: !316, size: 32, offset: 32)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1641, file: !535, line: 768, baseType: !316, size: 32, offset: 64)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1641, file: !535, line: 769, baseType: !539, size: 32, offset: 96)
!1647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1648, size: 32)
!1648 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !535, line: 426, baseType: !1649)
!1649 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 411, size: 28704, elements: !1650)
!1650 = !{!1651, !1653, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1668, !1673, !1677}
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1649, file: !535, line: 413, baseType: !1652, size: 256)
!1652 = !DICompositeType(tag: DW_TAG_array_type, baseType: !316, size: 256, elements: !1492)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1649, file: !535, line: 414, baseType: !1654, size: 768, offset: 256)
!1654 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 768, elements: !1655)
!1655 = !{!1656}
!1656 = !DISubrange(count: 24)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1649, file: !535, line: 415, baseType: !1652, size: 256, offset: 1024)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1649, file: !535, line: 416, baseType: !1654, size: 768, offset: 1280)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1649, file: !535, line: 417, baseType: !1652, size: 256, offset: 2048)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1649, file: !535, line: 418, baseType: !1654, size: 768, offset: 2304)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1649, file: !535, line: 419, baseType: !1652, size: 256, offset: 3072)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1649, file: !535, line: 420, baseType: !1654, size: 768, offset: 3328)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1649, file: !535, line: 421, baseType: !1652, size: 256, offset: 4096)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1649, file: !535, line: 422, baseType: !1665, size: 1792, offset: 4352)
!1665 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 1792, elements: !1666)
!1666 = !{!1667}
!1667 = !DISubrange(count: 56)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1649, file: !535, line: 423, baseType: !1669, size: 1920, offset: 6144)
!1669 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1670, size: 1920, elements: !1671)
!1670 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !178)
!1671 = !{!1672}
!1672 = !DISubrange(count: 240)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1649, file: !535, line: 424, baseType: !1674, size: 20608, offset: 8064)
!1674 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 20608, elements: !1675)
!1675 = !{!1676}
!1676 = !DISubrange(count: 644)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1649, file: !535, line: 425, baseType: !316, size: 32, offset: 28672)
!1678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1679, size: 32)
!1679 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !1680)
!1680 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !1681)
!1681 = !{!1682, !1683, !1684, !1685, !1686, !1687, !1688, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1701, !1702, !1703, !1705, !1707, !1709}
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1680, file: !535, line: 447, baseType: !539, size: 32)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1680, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1680, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1680, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1680, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1680, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1680, file: !535, line: 453, baseType: !1689, size: 96, offset: 192)
!1689 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1670, size: 96, elements: !1690)
!1690 = !{!1691}
!1691 = !DISubrange(count: 12)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1680, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1680, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1680, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1680, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1680, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1680, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1680, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1680, file: !535, line: 461, baseType: !1700, size: 64, offset: 512)
!1700 = !DICompositeType(tag: DW_TAG_array_type, baseType: !539, size: 64, elements: !173)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1680, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1680, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1680, file: !535, line: 464, baseType: !1704, size: 128, offset: 640)
!1704 = !DICompositeType(tag: DW_TAG_array_type, baseType: !539, size: 128, elements: !716)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1680, file: !535, line: 465, baseType: !1706, size: 160, offset: 768)
!1706 = !DICompositeType(tag: DW_TAG_array_type, baseType: !539, size: 160, elements: !1219)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1680, file: !535, line: 466, baseType: !1708, size: 160, offset: 928)
!1708 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 160, elements: !1219)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1680, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!1710 = !{!1711, !1737, !1742, !1744, !1746, !1633}
!1711 = !DIGlobalVariableExpression(var: !1712, expr: !DIExpression())
!1712 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1635, file: !1713, line: 285, type: !1714, isLocal: true, isDefinition: true, align: 32)
!1713 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1714 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1715)
!1715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !1716)
!1716 = !{!1717, !1736}
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1715, file: !327, line: 60, baseType: !1718, size: 32)
!1718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1719, size: 32)
!1719 = !DISubroutineType(types: !1720)
!1720 = !{!109, !1721}
!1721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1722, size: 32)
!1722 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1723)
!1723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !1724)
!1724 = !{!1725, !1726, !1727, !1728, !1734, !1735}
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1723, file: !336, line: 380, baseType: !279, size: 32)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1723, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1723, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1723, file: !336, line: 386, baseType: !1729, size: 32, offset: 96)
!1729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1730, size: 32)
!1730 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !1731)
!1731 = !{!1732, !1733}
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1730, file: !336, line: 359, baseType: !178, size: 8)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1730, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1723, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1723, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1715, file: !327, line: 65, baseType: !1721, size: 32, offset: 32)
!1737 = !DIGlobalVariableExpression(var: !1738, expr: !DIExpression())
!1738 = distinct !DIGlobalVariable(name: "lock", scope: !1635, file: !1713, line: 34, type: !1739, isLocal: true, isDefinition: true)
!1739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !1740)
!1740 = !{!1741}
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1739, file: !251, line: 52, baseType: !22, size: 32)
!1742 = !DIGlobalVariableExpression(var: !1743, expr: !DIExpression())
!1743 = distinct !DIGlobalVariable(name: "last_load", scope: !1635, file: !1713, line: 36, type: !110, isLocal: true, isDefinition: true)
!1744 = !DIGlobalVariableExpression(var: !1745, expr: !DIExpression())
!1745 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1635, file: !1713, line: 48, type: !110, isLocal: true, isDefinition: true)
!1746 = !DIGlobalVariableExpression(var: !1747, expr: !DIExpression())
!1747 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1635, file: !1713, line: 54, type: !110, isLocal: true, isDefinition: true)
!1748 = !DIGlobalVariableExpression(var: !1749, expr: !DIExpression())
!1749 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1750, file: !1832, line: 22, type: !1834, isLocal: true, isDefinition: true)
!1750 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1751, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1752, retainedTypes: !1753, globals: !1829, splitDebugInlining: false, nameTableKind: None)
!1751 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/simple")
!1752 = !{!1049, !1055}
!1753 = !{!1754, !1818, !1823, !1102, !1055, !1049, !1828, !107}
!1754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1755, size: 32)
!1755 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1756)
!1756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1050, line: 523, size: 288, elements: !1757)
!1757 = !{!1758, !1777, !1781, !1785, !1789, !1790, !1791, !1795, !1814}
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1756, file: !1050, line: 524, baseType: !1759, size: 32)
!1759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1760, size: 32)
!1760 = !DISubroutineType(types: !1761)
!1761 = !{!109, !1762, !1090, !1091}
!1762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1763, size: 32)
!1763 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1764)
!1764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !1765)
!1765 = !{!1766, !1767, !1768, !1769, !1775, !1776}
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1764, file: !336, line: 380, baseType: !279, size: 32)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1764, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1764, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1764, file: !336, line: 386, baseType: !1770, size: 32, offset: 96)
!1770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1771, size: 32)
!1771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !1772)
!1772 = !{!1773, !1774}
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1771, file: !336, line: 359, baseType: !178, size: 8)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1771, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1764, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1764, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1756, file: !1050, line: 530, baseType: !1778, size: 32, offset: 32)
!1778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1779, size: 32)
!1779 = !DISubroutineType(types: !1780)
!1780 = !{!109, !1762, !1096}
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1756, file: !1050, line: 532, baseType: !1782, size: 32, offset: 64)
!1782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1783, size: 32)
!1783 = !DISubroutineType(types: !1784)
!1784 = !{!109, !1762, !1102, !1097}
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1756, file: !1050, line: 535, baseType: !1786, size: 32, offset: 96)
!1786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1787, size: 32)
!1787 = !DISubroutineType(types: !1788)
!1788 = !{!109, !1762, !1102}
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1756, file: !1050, line: 537, baseType: !1786, size: 32, offset: 128)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1756, file: !1050, line: 539, baseType: !1786, size: 32, offset: 160)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1756, file: !1050, line: 541, baseType: !1792, size: 32, offset: 192)
!1792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1793, size: 32)
!1793 = !DISubroutineType(types: !1794)
!1794 = !{!109, !1762, !1090, !1049, !1055}
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1756, file: !1050, line: 544, baseType: !1796, size: 32, offset: 224)
!1796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1797, size: 32)
!1797 = !DISubroutineType(types: !1798)
!1798 = !{!109, !1762, !1799, !347}
!1799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1800, size: 32)
!1800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1050, line: 478, size: 96, elements: !1801)
!1801 = !{!1802, !1808, !1813}
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1800, file: !1050, line: 482, baseType: !1803, size: 32)
!1803 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1122, line: 33, baseType: !1804)
!1804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1122, line: 29, size: 32, elements: !1805)
!1805 = !{!1806}
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1804, file: !1122, line: 30, baseType: !1807, size: 32)
!1807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1804, size: 32)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1800, file: !1050, line: 485, baseType: !1809, size: 32, offset: 32)
!1809 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1050, line: 464, baseType: !1810)
!1810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1811, size: 32)
!1811 = !DISubroutineType(types: !1812)
!1812 = !{null, !1762, !1799, !1102}
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1800, file: !1050, line: 493, baseType: !1102, size: 32, offset: 64)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1756, file: !1050, line: 547, baseType: !1815, size: 32, offset: 256)
!1815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1816, size: 32)
!1816 = !DISubroutineType(types: !1817)
!1817 = !{!110, !1762}
!1818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1819, size: 32)
!1819 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1820)
!1820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1050, line: 428, size: 32, elements: !1821)
!1821 = !{!1822}
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1820, file: !1050, line: 434, baseType: !1102, size: 32)
!1823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1824, size: 32)
!1824 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1825)
!1825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1050, line: 441, size: 32, elements: !1826)
!1826 = !{!1827}
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1825, file: !1050, line: 447, baseType: !1102, size: 32)
!1828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1825, size: 32)
!1829 = !{!1830, !1748}
!1830 = !DIGlobalVariableExpression(var: !1831, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1831 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1750, file: !1832, line: 37, type: !1833, isLocal: true, isDefinition: true)
!1832 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1833 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !232)
!1834 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1835, size: 352, elements: !1836)
!1835 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1762)
!1836 = !{!1837}
!1837 = !DISubrange(count: 11)
!1838 = !DIGlobalVariableExpression(var: !1839, expr: !DIExpression())
!1839 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1840, file: !1884, line: 139, type: !1891, isLocal: false, isDefinition: true)
!1840 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1841, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1842, globals: !1881, splitDebugInlining: false, nameTableKind: None)
!1841 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/simple")
!1842 = !{!1843}
!1843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1844, size: 32)
!1844 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !312, line: 586, baseType: !1845)
!1845 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 550, size: 1216, elements: !1846)
!1846 = !{!1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880}
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1845, file: !312, line: 552, baseType: !316, size: 32)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1845, file: !312, line: 553, baseType: !316, size: 32, offset: 32)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1845, file: !312, line: 554, baseType: !316, size: 32, offset: 64)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1845, file: !312, line: 555, baseType: !316, size: 32, offset: 96)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1845, file: !312, line: 556, baseType: !316, size: 32, offset: 128)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1845, file: !312, line: 557, baseType: !316, size: 32, offset: 160)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1845, file: !312, line: 558, baseType: !316, size: 32, offset: 192)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1845, file: !312, line: 559, baseType: !110, size: 32, offset: 224)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1845, file: !312, line: 560, baseType: !316, size: 32, offset: 256)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1845, file: !312, line: 561, baseType: !316, size: 32, offset: 288)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1845, file: !312, line: 562, baseType: !872, size: 64, offset: 320)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1845, file: !312, line: 563, baseType: !316, size: 32, offset: 384)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1845, file: !312, line: 564, baseType: !316, size: 32, offset: 416)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1845, file: !312, line: 565, baseType: !316, size: 32, offset: 448)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1845, file: !312, line: 566, baseType: !110, size: 32, offset: 480)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1845, file: !312, line: 567, baseType: !316, size: 32, offset: 512)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1845, file: !312, line: 568, baseType: !316, size: 32, offset: 544)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1845, file: !312, line: 569, baseType: !872, size: 64, offset: 576)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1845, file: !312, line: 570, baseType: !316, size: 32, offset: 640)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1845, file: !312, line: 571, baseType: !316, size: 32, offset: 672)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1845, file: !312, line: 572, baseType: !316, size: 32, offset: 704)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1845, file: !312, line: 573, baseType: !110, size: 32, offset: 736)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1845, file: !312, line: 574, baseType: !316, size: 32, offset: 768)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1845, file: !312, line: 575, baseType: !316, size: 32, offset: 800)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1845, file: !312, line: 576, baseType: !872, size: 64, offset: 832)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1845, file: !312, line: 577, baseType: !316, size: 32, offset: 896)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1845, file: !312, line: 578, baseType: !316, size: 32, offset: 928)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1845, file: !312, line: 579, baseType: !872, size: 64, offset: 960)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1845, file: !312, line: 580, baseType: !316, size: 32, offset: 1024)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1845, file: !312, line: 581, baseType: !316, size: 32, offset: 1056)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !1845, file: !312, line: 582, baseType: !316, size: 32, offset: 1088)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1845, file: !312, line: 583, baseType: !316, size: 32, offset: 1120)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !1845, file: !312, line: 584, baseType: !316, size: 32, offset: 1152)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !1845, file: !312, line: 585, baseType: !316, size: 32, offset: 1184)
!1881 = !{!1882, !1885, !1838}
!1882 = !DIGlobalVariableExpression(var: !1883, expr: !DIExpression())
!1883 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1840, file: !1884, line: 137, type: !110, isLocal: false, isDefinition: true)
!1884 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1885 = !DIGlobalVariableExpression(var: !1886, expr: !DIExpression())
!1886 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1840, file: !1884, line: 138, type: !1887, isLocal: false, isDefinition: true)
!1887 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1888, size: 128, elements: !1889)
!1888 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !178)
!1889 = !{!1890}
!1890 = !DISubrange(count: 16)
!1891 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1888, size: 64, elements: !1492)
!1892 = !DIGlobalVariableExpression(var: !1893, expr: !DIExpression())
!1893 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1894, file: !1897, line: 23, type: !1898, isLocal: false, isDefinition: true)
!1894 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1895, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, globals: !1896, splitDebugInlining: false, nameTableKind: None)
!1895 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/simple")
!1896 = !{!1892}
!1897 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1898 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !109)
!1899 = !DIGlobalVariableExpression(var: !1900, expr: !DIExpression())
!1900 = distinct !DIGlobalVariable(name: "log_const_os", scope: !1901, file: !1905, line: 37, type: !2161, isLocal: false, isDefinition: true)
!1901 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1902, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1903, retainedTypes: !1912, globals: !1985, splitDebugInlining: false, nameTableKind: None)
!1902 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/simple")
!1903 = !{!1904, !30, !604}
!1904 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1905, line: 63, baseType: !32, size: 32, elements: !1906)
!1905 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1906 = !{!1907, !1908, !1909, !1910, !1911}
!1907 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1908 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1909 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1910 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1911 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1912 = !{!232, !107, !109, !1913, !285, !110, !1943, !774, !178, !1968}
!1913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1914, size: 32)
!1914 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1915)
!1915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1916, line: 51, size: 64, elements: !1917)
!1916 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1917 = !{!1918, !1938}
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1915, file: !1916, line: 52, baseType: !1919, size: 32)
!1919 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1916, line: 38, baseType: !1920)
!1920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1921, size: 32)
!1921 = !DISubroutineType(types: !1922)
!1922 = !{!109, !1923, !286, !192}
!1923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1924, size: 32)
!1924 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1925)
!1925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !1926)
!1926 = !{!1927, !1928, !1929, !1930, !1936, !1937}
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1925, file: !336, line: 380, baseType: !279, size: 32)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1925, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1925, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1925, file: !336, line: 386, baseType: !1931, size: 32, offset: 96)
!1931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1932, size: 32)
!1932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !1933)
!1933 = !{!1934, !1935}
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1932, file: !336, line: 359, baseType: !178, size: 8)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1932, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1925, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1925, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1915, file: !1916, line: 53, baseType: !1939, size: 32, offset: 32)
!1939 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1916, line: 47, baseType: !1940)
!1940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1941, size: 32)
!1941 = !DISubroutineType(types: !1942)
!1942 = !{!109, !1923, !286, !192, !110}
!1943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1944, size: 32)
!1944 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !1945)
!1945 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !1946)
!1946 = !{!1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967}
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1945, file: !535, line: 447, baseType: !539, size: 32)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1945, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1945, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1945, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1945, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1945, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1945, file: !535, line: 453, baseType: !1689, size: 96, offset: 192)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1945, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1945, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1945, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1945, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1945, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1945, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1945, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1945, file: !535, line: 461, baseType: !1700, size: 64, offset: 512)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1945, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1945, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1945, file: !535, line: 464, baseType: !1704, size: 128, offset: 640)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1945, file: !535, line: 465, baseType: !1706, size: 160, offset: 768)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1945, file: !535, line: 466, baseType: !1708, size: 160, offset: 928)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1945, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!1968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1969, size: 32)
!1969 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !535, line: 426, baseType: !1970)
!1970 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 411, size: 28704, elements: !1971)
!1971 = !{!1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984}
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1970, file: !535, line: 413, baseType: !1652, size: 256)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1970, file: !535, line: 414, baseType: !1654, size: 768, offset: 256)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1970, file: !535, line: 415, baseType: !1652, size: 256, offset: 1024)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1970, file: !535, line: 416, baseType: !1654, size: 768, offset: 1280)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1970, file: !535, line: 417, baseType: !1652, size: 256, offset: 2048)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1970, file: !535, line: 418, baseType: !1654, size: 768, offset: 2304)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1970, file: !535, line: 419, baseType: !1652, size: 256, offset: 3072)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1970, file: !535, line: 420, baseType: !1654, size: 768, offset: 3328)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1970, file: !535, line: 421, baseType: !1652, size: 256, offset: 4096)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1970, file: !535, line: 422, baseType: !1665, size: 1792, offset: 4352)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1970, file: !535, line: 423, baseType: !1669, size: 1920, offset: 6144)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1970, file: !535, line: 424, baseType: !1674, size: 20608, offset: 8064)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1970, file: !535, line: 425, baseType: !316, size: 32, offset: 28672)
!1985 = !{!1899, !1986, !2112, !2119, !2121, !2124, !2129, !2131, !2136}
!1986 = !DIGlobalVariableExpression(var: !1987, expr: !DIExpression())
!1987 = distinct !DIGlobalVariable(name: "_kernel", scope: !1901, file: !1905, line: 40, type: !1988, isLocal: false, isDefinition: true)
!1988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !122, line: 158, size: 288, elements: !1989)
!1989 = !{!1990, !2107}
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !1988, file: !122, line: 159, baseType: !1991, size: 192)
!1991 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1992, size: 192, elements: !517)
!1992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !122, line: 100, size: 192, elements: !1993)
!1993 = !{!1994, !1995, !1996, !2100, !2101, !2102, !2103}
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1992, file: !122, line: 102, baseType: !110, size: 32)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !1992, file: !122, line: 105, baseType: !285, size: 32, offset: 32)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1992, file: !122, line: 108, baseType: !1997, size: 32, offset: 64)
!1997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1998, size: 32)
!1998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1280, elements: !1999)
!1999 = !{!2000, !2058, !2070, !2071, !2072, !2073, !2074, !2080, !2095}
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1998, file: !156, line: 247, baseType: !2001, size: 384)
!2001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 384, elements: !2002)
!2002 = !{!2003, !2027, !2034, !2035, !2036, !2045, !2046, !2047}
!2003 = !DIDerivedType(tag: DW_TAG_member, scope: !2001, file: !156, line: 60, baseType: !2004, size: 64)
!2004 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2001, file: !156, line: 60, size: 64, elements: !2005)
!2005 = !{!2006, !2021}
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2004, file: !156, line: 61, baseType: !2007, size: 64)
!2007 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !2008)
!2008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !2009)
!2009 = !{!2010, !2016}
!2010 = !DIDerivedType(tag: DW_TAG_member, scope: !2008, file: !127, line: 38, baseType: !2011, size: 32)
!2011 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2008, file: !127, line: 38, size: 32, elements: !2012)
!2012 = !{!2013, !2015}
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2011, file: !127, line: 39, baseType: !2014, size: 32)
!2014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2008, size: 32)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2011, file: !127, line: 40, baseType: !2014, size: 32)
!2016 = !DIDerivedType(tag: DW_TAG_member, scope: !2008, file: !127, line: 42, baseType: !2017, size: 32, offset: 32)
!2017 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2008, file: !127, line: 42, size: 32, elements: !2018)
!2018 = !{!2019, !2020}
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2017, file: !127, line: 43, baseType: !2014, size: 32)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2017, file: !127, line: 44, baseType: !2014, size: 32)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2004, file: !156, line: 62, baseType: !2022, size: 64)
!2022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !2023)
!2023 = !{!2024}
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2022, file: !168, line: 50, baseType: !2025, size: 64)
!2025 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2026, size: 64, elements: !173)
!2026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2022, size: 32)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2001, file: !156, line: 68, baseType: !2028, size: 32, offset: 64)
!2028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2029, size: 32)
!2029 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !2030)
!2030 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !2031)
!2031 = !{!2032}
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2030, file: !122, line: 232, baseType: !2033, size: 64)
!2033 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !2008)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2001, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2001, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!2036 = !DIDerivedType(tag: DW_TAG_member, scope: !2001, file: !156, line: 90, baseType: !2037, size: 16, offset: 112)
!2037 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2001, file: !156, line: 90, size: 16, elements: !2038)
!2038 = !{!2039, !2044}
!2039 = !DIDerivedType(tag: DW_TAG_member, scope: !2037, file: !156, line: 91, baseType: !2040, size: 16)
!2040 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2037, file: !156, line: 91, size: 16, elements: !2041)
!2041 = !{!2042, !2043}
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2040, file: !156, line: 96, baseType: !188, size: 8)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2040, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2037, file: !156, line: 100, baseType: !192, size: 16)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2001, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2001, file: !156, line: 127, baseType: !107, size: 32, offset: 160)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2001, file: !156, line: 131, baseType: !2048, size: 192, offset: 192)
!2048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !2049)
!2049 = !{!2050, !2051, !2057}
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2048, file: !122, line: 245, baseType: !2007, size: 64)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2048, file: !122, line: 246, baseType: !2052, size: 32, offset: 64)
!2052 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !2053)
!2053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2054, size: 32)
!2054 = !DISubroutineType(types: !2055)
!2055 = !{null, !2056}
!2056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2048, size: 32)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2048, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1998, file: !156, line: 250, baseType: !2059, size: 288, offset: 384)
!2059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !2060)
!2060 = !{!2061, !2062, !2063, !2064, !2065, !2066, !2067, !2068, !2069}
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2059, file: !209, line: 26, baseType: !110, size: 32)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2059, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2059, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2059, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2059, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2059, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2059, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2059, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2059, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1998, file: !156, line: 253, baseType: !107, size: 32, offset: 672)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1998, file: !156, line: 256, baseType: !2029, size: 64, offset: 704)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1998, file: !156, line: 279, baseType: !223, size: 256, offset: 768)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1998, file: !156, line: 294, baseType: !109, size: 32, offset: 1024)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1998, file: !156, line: 300, baseType: !2075, size: 96, offset: 1056)
!2075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !2076)
!2076 = !{!2077, !2078, !2079}
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2075, file: !156, line: 153, baseType: !22, size: 32)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2075, file: !156, line: 162, baseType: !232, size: 32, offset: 32)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2075, file: !156, line: 168, baseType: !232, size: 32, offset: 64)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1998, file: !156, line: 325, baseType: !2081, size: 32, offset: 1152)
!2081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2082, size: 32)
!2082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !2083)
!2083 = !{!2084, !2090, !2091}
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2082, file: !118, line: 5074, baseType: !2085, size: 96)
!2085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !241, line: 56, size: 96, elements: !2086)
!2086 = !{!2087, !2088, !2089}
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2085, file: !241, line: 57, baseType: !244, size: 32)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2085, file: !241, line: 58, baseType: !107, size: 32, offset: 32)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2085, file: !241, line: 59, baseType: !232, size: 32, offset: 64)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2082, file: !118, line: 5075, baseType: !2029, size: 64, offset: 96)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2082, file: !118, line: 5076, baseType: !2092, size: 32, offset: 160)
!2092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !2093)
!2093 = !{!2094}
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2092, file: !251, line: 52, baseType: !22, size: 32)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1998, file: !156, line: 343, baseType: !2096, size: 64, offset: 1184)
!2096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !209, line: 60, size: 64, elements: !2097)
!2097 = !{!2098, !2099}
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2096, file: !209, line: 63, baseType: !110, size: 32)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2096, file: !209, line: 66, baseType: !110, size: 32, offset: 32)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !1992, file: !122, line: 111, baseType: !1997, size: 32, offset: 96)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !1992, file: !122, line: 124, baseType: !109, size: 32, offset: 128)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1992, file: !122, line: 127, baseType: !178, size: 8, offset: 160)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1992, file: !122, line: 153, baseType: !2104, offset: 168)
!2104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2105, line: 33, elements: !2106)
!2105 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2106 = !{}
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !1988, file: !122, line: 170, baseType: !2108, size: 96, offset: 192)
!2108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !122, line: 83, size: 96, elements: !2109)
!2109 = !{!2110, !2111}
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2108, file: !122, line: 86, baseType: !1997, size: 32)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2108, file: !122, line: 90, baseType: !2033, size: 64, offset: 32)
!2112 = !DIGlobalVariableExpression(var: !2113, expr: !DIExpression())
!2113 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1901, file: !1905, line: 43, type: !2114, isLocal: false, isDefinition: true, align: 512)
!2114 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2115, size: 8704, elements: !2118)
!2115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !145, line: 47, size: 8, elements: !2116)
!2116 = !{!2117}
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2115, file: !145, line: 48, baseType: !148, size: 8)
!2118 = !{!151}
!2119 = !DIGlobalVariableExpression(var: !2120, expr: !DIExpression())
!2120 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1901, file: !1905, line: 44, type: !1998, isLocal: false, isDefinition: true)
!2121 = !DIGlobalVariableExpression(var: !2122, expr: !DIExpression())
!2122 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1901, file: !1905, line: 48, type: !2123, isLocal: false, isDefinition: true)
!2123 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1998, size: 1280, elements: !517)
!2124 = !DIGlobalVariableExpression(var: !2125, expr: !DIExpression())
!2125 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1901, file: !1905, line: 86, type: !2126, isLocal: false, isDefinition: true, align: 512)
!2126 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2115, size: 16896, elements: !2127)
!2127 = !{!518, !2128}
!2128 = !DISubrange(count: 2112)
!2129 = !DIGlobalVariableExpression(var: !2130, expr: !DIExpression())
!2130 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1901, file: !1905, line: 217, type: !347, isLocal: false, isDefinition: true)
!2131 = !DIGlobalVariableExpression(var: !2132, expr: !DIExpression())
!2132 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1901, file: !1905, line: 50, type: !2133, isLocal: true, isDefinition: true, align: 512)
!2133 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2115, size: 3072, elements: !2134)
!2134 = !{!518, !2135}
!2135 = !DISubrange(count: 384)
!2136 = !DIGlobalVariableExpression(var: !2137, expr: !DIExpression())
!2137 = distinct !DIGlobalVariable(name: "levels", scope: !2138, file: !1905, line: 232, type: !2158, isLocal: true, isDefinition: true)
!2138 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1905, file: !1905, line: 230, type: !2139, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1901, retainedNodes: !2141)
!2139 = !DISubroutineType(types: !2140)
!2140 = !{null, !1904}
!2141 = !{!2142, !2143, !2153, !2157}
!2142 = !DILocalVariable(name: "level", arg: 1, scope: !2138, file: !1905, line: 230, type: !1904)
!2143 = !DILocalVariable(name: "entry", scope: !2138, file: !1905, line: 244, type: !2144)
!2144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2145, size: 32)
!2145 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2146)
!2146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !2147)
!2147 = !{!2148, !2152}
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2146, file: !327, line: 60, baseType: !2149, size: 32)
!2149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2150, size: 32)
!2150 = !DISubroutineType(types: !2151)
!2151 = !{!109, !1923}
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2146, file: !327, line: 65, baseType: !1923, size: 32, offset: 32)
!2153 = !DILocalVariable(name: "dev", scope: !2154, file: !1905, line: 247, type: !1923)
!2154 = distinct !DILexicalBlock(scope: !2155, file: !1905, line: 246, column: 64)
!2155 = distinct !DILexicalBlock(scope: !2156, file: !1905, line: 246, column: 2)
!2156 = distinct !DILexicalBlock(scope: !2138, file: !1905, line: 246, column: 2)
!2157 = !DILocalVariable(name: "rc", scope: !2154, file: !1905, line: 248, type: !109)
!2158 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2144, size: 192, elements: !2159)
!2159 = !{!2160}
!2160 = !DISubrange(count: 6)
!2161 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2162)
!2162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !291, line: 16, size: 64, elements: !2163)
!2163 = !{!2164, !2165}
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2162, file: !291, line: 17, baseType: !279, size: 32)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2162, file: !291, line: 18, baseType: !178, size: 8, offset: 32)
!2166 = !DIGlobalVariableExpression(var: !2167, expr: !DIExpression())
!2167 = distinct !DIGlobalVariable(name: "states_str", scope: !2168, file: !2169, line: 276, type: !2293, isLocal: true, isDefinition: true)
!2168 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2169, file: !2169, line: 271, type: !2170, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2276, retainedNodes: !2284)
!2169 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2170 = !DISubroutineType(types: !2171)
!2171 = !{!279, !2172, !285, !232}
!2172 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !156, line: 347, baseType: !2173)
!2173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2174, size: 32)
!2174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1280, elements: !2175)
!2175 = !{!2176, !2234, !2246, !2247, !2248, !2249, !2250, !2256, !2271}
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2174, file: !156, line: 247, baseType: !2177, size: 384)
!2177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 384, elements: !2178)
!2178 = !{!2179, !2203, !2210, !2211, !2212, !2221, !2222, !2223}
!2179 = !DIDerivedType(tag: DW_TAG_member, scope: !2177, file: !156, line: 60, baseType: !2180, size: 64)
!2180 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2177, file: !156, line: 60, size: 64, elements: !2181)
!2181 = !{!2182, !2197}
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2180, file: !156, line: 61, baseType: !2183, size: 64)
!2183 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !2184)
!2184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !2185)
!2185 = !{!2186, !2192}
!2186 = !DIDerivedType(tag: DW_TAG_member, scope: !2184, file: !127, line: 38, baseType: !2187, size: 32)
!2187 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2184, file: !127, line: 38, size: 32, elements: !2188)
!2188 = !{!2189, !2191}
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2187, file: !127, line: 39, baseType: !2190, size: 32)
!2190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2184, size: 32)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2187, file: !127, line: 40, baseType: !2190, size: 32)
!2192 = !DIDerivedType(tag: DW_TAG_member, scope: !2184, file: !127, line: 42, baseType: !2193, size: 32, offset: 32)
!2193 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2184, file: !127, line: 42, size: 32, elements: !2194)
!2194 = !{!2195, !2196}
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2193, file: !127, line: 43, baseType: !2190, size: 32)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2193, file: !127, line: 44, baseType: !2190, size: 32)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2180, file: !156, line: 62, baseType: !2198, size: 64)
!2198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !2199)
!2199 = !{!2200}
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2198, file: !168, line: 50, baseType: !2201, size: 64)
!2201 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2202, size: 64, elements: !173)
!2202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2198, size: 32)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2177, file: !156, line: 68, baseType: !2204, size: 32, offset: 64)
!2204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2205, size: 32)
!2205 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !2206)
!2206 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !2207)
!2207 = !{!2208}
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2206, file: !122, line: 232, baseType: !2209, size: 64)
!2209 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !2184)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2177, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2177, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!2212 = !DIDerivedType(tag: DW_TAG_member, scope: !2177, file: !156, line: 90, baseType: !2213, size: 16, offset: 112)
!2213 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2177, file: !156, line: 90, size: 16, elements: !2214)
!2214 = !{!2215, !2220}
!2215 = !DIDerivedType(tag: DW_TAG_member, scope: !2213, file: !156, line: 91, baseType: !2216, size: 16)
!2216 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2213, file: !156, line: 91, size: 16, elements: !2217)
!2217 = !{!2218, !2219}
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2216, file: !156, line: 96, baseType: !188, size: 8)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2216, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2213, file: !156, line: 100, baseType: !192, size: 16)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2177, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2177, file: !156, line: 127, baseType: !107, size: 32, offset: 160)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2177, file: !156, line: 131, baseType: !2224, size: 192, offset: 192)
!2224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !2225)
!2225 = !{!2226, !2227, !2233}
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2224, file: !122, line: 245, baseType: !2183, size: 64)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2224, file: !122, line: 246, baseType: !2228, size: 32, offset: 64)
!2228 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !2229)
!2229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2230, size: 32)
!2230 = !DISubroutineType(types: !2231)
!2231 = !{null, !2232}
!2232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2224, size: 32)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2224, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2174, file: !156, line: 250, baseType: !2235, size: 288, offset: 384)
!2235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !2236)
!2236 = !{!2237, !2238, !2239, !2240, !2241, !2242, !2243, !2244, !2245}
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2235, file: !209, line: 26, baseType: !110, size: 32)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2235, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2235, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2235, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2235, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2235, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2235, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2235, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2235, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2174, file: !156, line: 253, baseType: !107, size: 32, offset: 672)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2174, file: !156, line: 256, baseType: !2205, size: 64, offset: 704)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2174, file: !156, line: 279, baseType: !223, size: 256, offset: 768)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2174, file: !156, line: 294, baseType: !109, size: 32, offset: 1024)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2174, file: !156, line: 300, baseType: !2251, size: 96, offset: 1056)
!2251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !2252)
!2252 = !{!2253, !2254, !2255}
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2251, file: !156, line: 153, baseType: !22, size: 32)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2251, file: !156, line: 162, baseType: !232, size: 32, offset: 32)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2251, file: !156, line: 168, baseType: !232, size: 32, offset: 64)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2174, file: !156, line: 325, baseType: !2257, size: 32, offset: 1152)
!2257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2258, size: 32)
!2258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !2259)
!2259 = !{!2260, !2266, !2267}
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2258, file: !118, line: 5074, baseType: !2261, size: 96)
!2261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !241, line: 56, size: 96, elements: !2262)
!2262 = !{!2263, !2264, !2265}
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2261, file: !241, line: 57, baseType: !244, size: 32)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2261, file: !241, line: 58, baseType: !107, size: 32, offset: 32)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2261, file: !241, line: 59, baseType: !232, size: 32, offset: 64)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2258, file: !118, line: 5075, baseType: !2205, size: 64, offset: 96)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2258, file: !118, line: 5076, baseType: !2268, size: 32, offset: 160)
!2268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !2269)
!2269 = !{!2270}
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2268, file: !251, line: 52, baseType: !22, size: 32)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2174, file: !156, line: 343, baseType: !2272, size: 64, offset: 1184)
!2272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !209, line: 60, size: 64, elements: !2273)
!2273 = !{!2274, !2275}
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2272, file: !209, line: 63, baseType: !110, size: 32)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2272, file: !209, line: 66, baseType: !110, size: 32, offset: 32)
!2276 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2277, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2278, globals: !2280, splitDebugInlining: false, nameTableKind: None)
!2277 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/simple")
!2278 = !{!107, !279, !103, !178, !22, !109, !2279, !24, !232, !285, !110, !111}
!2279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2183, size: 32)
!2280 = !{!2166, !2281}
!2281 = !DIGlobalVariableExpression(var: !2282, expr: !DIExpression())
!2282 = distinct !DIGlobalVariable(name: "states_sz", scope: !2168, file: !2169, line: 279, type: !2283, isLocal: true, isDefinition: true)
!2283 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1833, size: 256, elements: !1492)
!2284 = !{!2285, !2286, !2287, !2288, !2289, !2290, !2291}
!2285 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2168, file: !2169, line: 271, type: !2172)
!2286 = !DILocalVariable(name: "buf", arg: 2, scope: !2168, file: !2169, line: 271, type: !285)
!2287 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2168, file: !2169, line: 271, type: !232)
!2288 = !DILocalVariable(name: "off", scope: !2168, file: !2169, line: 273, type: !232)
!2289 = !DILocalVariable(name: "bit", scope: !2168, file: !2169, line: 274, type: !178)
!2290 = !DILocalVariable(name: "thread_state", scope: !2168, file: !2169, line: 275, type: !178)
!2291 = !DILocalVariable(name: "index", scope: !2292, file: !2169, line: 293, type: !178)
!2292 = distinct !DILexicalBlock(scope: !2168, file: !2169, line: 293, column: 2)
!2293 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 256, elements: !1492)
!2294 = !DIGlobalVariableExpression(var: !2295, expr: !DIExpression())
!2295 = distinct !DIGlobalVariable(name: "lock", scope: !2296, file: !2404, line: 47, type: !2395, isLocal: true, isDefinition: true)
!2296 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2297, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2298, globals: !2403, splitDebugInlining: false, nameTableKind: None)
!2297 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/simple")
!2298 = !{!347, !107, !109, !2299, !2314}
!2299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2300, size: 32)
!2300 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !2301)
!2301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !2302)
!2302 = !{!2303, !2309}
!2303 = !DIDerivedType(tag: DW_TAG_member, scope: !2301, file: !127, line: 38, baseType: !2304, size: 32)
!2304 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2301, file: !127, line: 38, size: 32, elements: !2305)
!2305 = !{!2306, !2308}
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2304, file: !127, line: 39, baseType: !2307, size: 32)
!2307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2301, size: 32)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2304, file: !127, line: 40, baseType: !2307, size: 32)
!2309 = !DIDerivedType(tag: DW_TAG_member, scope: !2301, file: !127, line: 42, baseType: !2310, size: 32, offset: 32)
!2310 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2301, file: !127, line: 42, size: 32, elements: !2311)
!2311 = !{!2312, !2313}
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2310, file: !127, line: 43, baseType: !2307, size: 32)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2310, file: !127, line: 44, baseType: !2307, size: 32)
!2314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2315, size: 32)
!2315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1280, elements: !2316)
!2316 = !{!2317, !2361, !2373, !2374, !2375, !2376, !2377, !2383, !2398}
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2315, file: !156, line: 247, baseType: !2318, size: 384)
!2318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 384, elements: !2319)
!2319 = !{!2320, !2330, !2337, !2338, !2339, !2348, !2349, !2350}
!2320 = !DIDerivedType(tag: DW_TAG_member, scope: !2318, file: !156, line: 60, baseType: !2321, size: 64)
!2321 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2318, file: !156, line: 60, size: 64, elements: !2322)
!2322 = !{!2323, !2324}
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2321, file: !156, line: 61, baseType: !2300, size: 64)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2321, file: !156, line: 62, baseType: !2325, size: 64)
!2325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !2326)
!2326 = !{!2327}
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2325, file: !168, line: 50, baseType: !2328, size: 64)
!2328 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2329, size: 64, elements: !173)
!2329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2325, size: 32)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2318, file: !156, line: 68, baseType: !2331, size: 32, offset: 64)
!2331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2332, size: 32)
!2332 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !2333)
!2333 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !2334)
!2334 = !{!2335}
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2333, file: !122, line: 232, baseType: !2336, size: 64)
!2336 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !2301)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2318, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2318, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!2339 = !DIDerivedType(tag: DW_TAG_member, scope: !2318, file: !156, line: 90, baseType: !2340, size: 16, offset: 112)
!2340 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2318, file: !156, line: 90, size: 16, elements: !2341)
!2341 = !{!2342, !2347}
!2342 = !DIDerivedType(tag: DW_TAG_member, scope: !2340, file: !156, line: 91, baseType: !2343, size: 16)
!2343 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2340, file: !156, line: 91, size: 16, elements: !2344)
!2344 = !{!2345, !2346}
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2343, file: !156, line: 96, baseType: !188, size: 8)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2343, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2340, file: !156, line: 100, baseType: !192, size: 16)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2318, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2318, file: !156, line: 127, baseType: !107, size: 32, offset: 160)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2318, file: !156, line: 131, baseType: !2351, size: 192, offset: 192)
!2351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !2352)
!2352 = !{!2353, !2354, !2360}
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2351, file: !122, line: 245, baseType: !2300, size: 64)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2351, file: !122, line: 246, baseType: !2355, size: 32, offset: 64)
!2355 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !2356)
!2356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2357, size: 32)
!2357 = !DISubroutineType(types: !2358)
!2358 = !{null, !2359}
!2359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2351, size: 32)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2351, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2315, file: !156, line: 250, baseType: !2362, size: 288, offset: 384)
!2362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !2363)
!2363 = !{!2364, !2365, !2366, !2367, !2368, !2369, !2370, !2371, !2372}
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2362, file: !209, line: 26, baseType: !110, size: 32)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2362, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2362, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2362, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2362, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2362, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2362, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2362, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2362, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2315, file: !156, line: 253, baseType: !107, size: 32, offset: 672)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2315, file: !156, line: 256, baseType: !2332, size: 64, offset: 704)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2315, file: !156, line: 279, baseType: !223, size: 256, offset: 768)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2315, file: !156, line: 294, baseType: !109, size: 32, offset: 1024)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2315, file: !156, line: 300, baseType: !2378, size: 96, offset: 1056)
!2378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !2379)
!2379 = !{!2380, !2381, !2382}
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2378, file: !156, line: 153, baseType: !22, size: 32)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2378, file: !156, line: 162, baseType: !232, size: 32, offset: 32)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2378, file: !156, line: 168, baseType: !232, size: 32, offset: 64)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2315, file: !156, line: 325, baseType: !2384, size: 32, offset: 1152)
!2384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2385, size: 32)
!2385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !2386)
!2386 = !{!2387, !2393, !2394}
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2385, file: !118, line: 5074, baseType: !2388, size: 96)
!2388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !241, line: 56, size: 96, elements: !2389)
!2389 = !{!2390, !2391, !2392}
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2388, file: !241, line: 57, baseType: !244, size: 32)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2388, file: !241, line: 58, baseType: !107, size: 32, offset: 32)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2388, file: !241, line: 59, baseType: !232, size: 32, offset: 64)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2385, file: !118, line: 5075, baseType: !2332, size: 64, offset: 96)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2385, file: !118, line: 5076, baseType: !2395, size: 32, offset: 160)
!2395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !2396)
!2396 = !{!2397}
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2395, file: !251, line: 52, baseType: !22, size: 32)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2315, file: !156, line: 343, baseType: !2399, size: 64, offset: 1184)
!2399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !209, line: 60, size: 64, elements: !2400)
!2400 = !{!2401, !2402}
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2399, file: !209, line: 63, baseType: !110, size: 32)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2399, file: !209, line: 66, baseType: !110, size: 32, offset: 32)
!2403 = !{!2294}
!2404 = !DIFile(filename: "zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2405 = !DIGlobalVariableExpression(var: !2406, expr: !DIExpression())
!2406 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2407, file: !2518, line: 56, type: !2505, isLocal: false, isDefinition: true)
!2407 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2408, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2409, globals: !2515, splitDebugInlining: false, nameTableKind: None)
!2408 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/simple")
!2409 = !{!2410, !285, !107, !2513, !286, !103, !774, !109, !110, !111, !2514}
!2410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2411, size: 32)
!2411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1280, elements: !2412)
!2412 = !{!2413, !2471, !2483, !2484, !2485, !2486, !2487, !2493, !2508}
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2411, file: !156, line: 247, baseType: !2414, size: 384)
!2414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 384, elements: !2415)
!2415 = !{!2416, !2440, !2447, !2448, !2449, !2458, !2459, !2460}
!2416 = !DIDerivedType(tag: DW_TAG_member, scope: !2414, file: !156, line: 60, baseType: !2417, size: 64)
!2417 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2414, file: !156, line: 60, size: 64, elements: !2418)
!2418 = !{!2419, !2434}
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2417, file: !156, line: 61, baseType: !2420, size: 64)
!2420 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !2421)
!2421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !2422)
!2422 = !{!2423, !2429}
!2423 = !DIDerivedType(tag: DW_TAG_member, scope: !2421, file: !127, line: 38, baseType: !2424, size: 32)
!2424 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2421, file: !127, line: 38, size: 32, elements: !2425)
!2425 = !{!2426, !2428}
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2424, file: !127, line: 39, baseType: !2427, size: 32)
!2427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2421, size: 32)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2424, file: !127, line: 40, baseType: !2427, size: 32)
!2429 = !DIDerivedType(tag: DW_TAG_member, scope: !2421, file: !127, line: 42, baseType: !2430, size: 32, offset: 32)
!2430 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2421, file: !127, line: 42, size: 32, elements: !2431)
!2431 = !{!2432, !2433}
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2430, file: !127, line: 43, baseType: !2427, size: 32)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2430, file: !127, line: 44, baseType: !2427, size: 32)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2417, file: !156, line: 62, baseType: !2435, size: 64)
!2435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !2436)
!2436 = !{!2437}
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2435, file: !168, line: 50, baseType: !2438, size: 64)
!2438 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2439, size: 64, elements: !173)
!2439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2435, size: 32)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2414, file: !156, line: 68, baseType: !2441, size: 32, offset: 64)
!2441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2442, size: 32)
!2442 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !2443)
!2443 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !2444)
!2444 = !{!2445}
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2443, file: !122, line: 232, baseType: !2446, size: 64)
!2446 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !2421)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2414, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2414, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!2449 = !DIDerivedType(tag: DW_TAG_member, scope: !2414, file: !156, line: 90, baseType: !2450, size: 16, offset: 112)
!2450 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2414, file: !156, line: 90, size: 16, elements: !2451)
!2451 = !{!2452, !2457}
!2452 = !DIDerivedType(tag: DW_TAG_member, scope: !2450, file: !156, line: 91, baseType: !2453, size: 16)
!2453 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2450, file: !156, line: 91, size: 16, elements: !2454)
!2454 = !{!2455, !2456}
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2453, file: !156, line: 96, baseType: !188, size: 8)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2453, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2450, file: !156, line: 100, baseType: !192, size: 16)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2414, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2414, file: !156, line: 127, baseType: !107, size: 32, offset: 160)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2414, file: !156, line: 131, baseType: !2461, size: 192, offset: 192)
!2461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !2462)
!2462 = !{!2463, !2464, !2470}
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2461, file: !122, line: 245, baseType: !2420, size: 64)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2461, file: !122, line: 246, baseType: !2465, size: 32, offset: 64)
!2465 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !2466)
!2466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2467, size: 32)
!2467 = !DISubroutineType(types: !2468)
!2468 = !{null, !2469}
!2469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2461, size: 32)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2461, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2411, file: !156, line: 250, baseType: !2472, size: 288, offset: 384)
!2472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !2473)
!2473 = !{!2474, !2475, !2476, !2477, !2478, !2479, !2480, !2481, !2482}
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2472, file: !209, line: 26, baseType: !110, size: 32)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2472, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2472, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2472, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2472, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2472, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2472, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2472, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2472, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2411, file: !156, line: 253, baseType: !107, size: 32, offset: 672)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2411, file: !156, line: 256, baseType: !2442, size: 64, offset: 704)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2411, file: !156, line: 279, baseType: !223, size: 256, offset: 768)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2411, file: !156, line: 294, baseType: !109, size: 32, offset: 1024)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2411, file: !156, line: 300, baseType: !2488, size: 96, offset: 1056)
!2488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !2489)
!2489 = !{!2490, !2491, !2492}
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2488, file: !156, line: 153, baseType: !22, size: 32)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2488, file: !156, line: 162, baseType: !232, size: 32, offset: 32)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2488, file: !156, line: 168, baseType: !232, size: 32, offset: 64)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2411, file: !156, line: 325, baseType: !2494, size: 32, offset: 1152)
!2494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2495, size: 32)
!2495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !2496)
!2496 = !{!2497, !2503, !2504}
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2495, file: !118, line: 5074, baseType: !2498, size: 96)
!2498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !241, line: 56, size: 96, elements: !2499)
!2499 = !{!2500, !2501, !2502}
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2498, file: !241, line: 57, baseType: !244, size: 32)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2498, file: !241, line: 58, baseType: !107, size: 32, offset: 32)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2498, file: !241, line: 59, baseType: !232, size: 32, offset: 64)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2495, file: !118, line: 5075, baseType: !2442, size: 64, offset: 96)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2495, file: !118, line: 5076, baseType: !2505, size: 32, offset: 160)
!2505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !2506)
!2506 = !{!2507}
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2505, file: !251, line: 52, baseType: !22, size: 32)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2411, file: !156, line: 343, baseType: !2509, size: 64, offset: 1184)
!2509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !209, line: 60, size: 64, elements: !2510)
!2510 = !{!2511, !2512}
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2509, file: !209, line: 63, baseType: !110, size: 32)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2509, file: !209, line: 66, baseType: !110, size: 32, offset: 32)
!2513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2439, size: 32)
!2514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2420, size: 32)
!2515 = !{!2405, !2516, !2519, !2521}
!2516 = !DIGlobalVariableExpression(var: !2517, expr: !DIExpression())
!2517 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2407, file: !2518, line: 404, type: !109, isLocal: true, isDefinition: true)
!2518 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2519 = !DIGlobalVariableExpression(var: !2520, expr: !DIExpression())
!2520 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2407, file: !2518, line: 405, type: !109, isLocal: true, isDefinition: true)
!2521 = !DIGlobalVariableExpression(var: !2522, expr: !DIExpression())
!2522 = distinct !DIGlobalVariable(name: "pending_current", scope: !2407, file: !2518, line: 425, type: !2410, isLocal: true, isDefinition: true)
!2523 = !DIGlobalVariableExpression(var: !2524, expr: !DIExpression())
!2524 = distinct !DIGlobalVariable(name: "lock", scope: !2525, file: !2544, line: 14, type: !2545, isLocal: true, isDefinition: true)
!2525 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2526, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2527, globals: !2543, splitDebugInlining: false, nameTableKind: None)
!2526 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/condvar.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/simple")
!2527 = !{!107, !103, !109, !2528}
!2528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2529, size: 32)
!2529 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !2530)
!2530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !2531)
!2531 = !{!2532, !2538}
!2532 = !DIDerivedType(tag: DW_TAG_member, scope: !2530, file: !127, line: 38, baseType: !2533, size: 32)
!2533 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2530, file: !127, line: 38, size: 32, elements: !2534)
!2534 = !{!2535, !2537}
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2533, file: !127, line: 39, baseType: !2536, size: 32)
!2536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2530, size: 32)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2533, file: !127, line: 40, baseType: !2536, size: 32)
!2538 = !DIDerivedType(tag: DW_TAG_member, scope: !2530, file: !127, line: 42, baseType: !2539, size: 32, offset: 32)
!2539 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2530, file: !127, line: 42, size: 32, elements: !2540)
!2540 = !{!2541, !2542}
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2539, file: !127, line: 43, baseType: !2536, size: 32)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2539, file: !127, line: 44, baseType: !2536, size: 32)
!2543 = !{!2523}
!2544 = !DIFile(filename: "zephyr/kernel/condvar.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !2546)
!2546 = !{!2547}
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2545, file: !251, line: 52, baseType: !22, size: 32)
!2548 = !DIGlobalVariableExpression(var: !2549, expr: !DIExpression())
!2549 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2550, file: !2580, line: 19, type: !2586, isLocal: true, isDefinition: true)
!2550 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2551, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2552, globals: !2577, splitDebugInlining: false, nameTableKind: None)
!2551 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/simple")
!2552 = !{!103, !107, !774, !110, !111, !109, !2553, !285, !105}
!2553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2554, size: 32)
!2554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !2555)
!2555 = !{!2556, !2571, !2576}
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2554, file: !122, line: 245, baseType: !2557, size: 64)
!2557 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !2558)
!2558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !2559)
!2559 = !{!2560, !2566}
!2560 = !DIDerivedType(tag: DW_TAG_member, scope: !2558, file: !127, line: 38, baseType: !2561, size: 32)
!2561 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2558, file: !127, line: 38, size: 32, elements: !2562)
!2562 = !{!2563, !2565}
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2561, file: !127, line: 39, baseType: !2564, size: 32)
!2564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2558, size: 32)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2561, file: !127, line: 40, baseType: !2564, size: 32)
!2566 = !DIDerivedType(tag: DW_TAG_member, scope: !2558, file: !127, line: 42, baseType: !2567, size: 32, offset: 32)
!2567 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2558, file: !127, line: 42, size: 32, elements: !2568)
!2568 = !{!2569, !2570}
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2567, file: !127, line: 43, baseType: !2564, size: 32)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2567, file: !127, line: 44, baseType: !2564, size: 32)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2554, file: !122, line: 246, baseType: !2572, size: 32, offset: 64)
!2572 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !2573)
!2573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2574, size: 32)
!2574 = !DISubroutineType(types: !2575)
!2575 = !{null, !2553}
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2554, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!2577 = !{!2578, !2548, !2581, !2583}
!2578 = !DIGlobalVariableExpression(var: !2579, expr: !DIExpression())
!2579 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2550, file: !2580, line: 15, type: !111, isLocal: true, isDefinition: true)
!2580 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2581 = !DIGlobalVariableExpression(var: !2582, expr: !DIExpression())
!2582 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2550, file: !2580, line: 25, type: !109, isLocal: true, isDefinition: true)
!2583 = !DIGlobalVariableExpression(var: !2584, expr: !DIExpression())
!2584 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2550, file: !2580, line: 17, type: !2585, isLocal: true, isDefinition: true)
!2585 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !2558)
!2586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !2587)
!2587 = !{!2588}
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2586, file: !251, line: 52, baseType: !22, size: 32)
!2589 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2590, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!2590 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/simple")
!2591 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2592, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!2592 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/simple")
!2593 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2594, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2595, retainedTypes: !2615, splitDebugInlining: false, nameTableKind: None)
!2594 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/simple")
!2595 = !{!2596, !2604}
!2596 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2597, line: 69, baseType: !32, size: 32, elements: !2598)
!2597 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2598 = !{!2599, !2600, !2601, !2602, !2603}
!2599 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2600 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2601 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2602 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2603 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2604 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2597, line: 56, baseType: !32, size: 32, elements: !2605)
!2605 = !{!2606, !2607, !2608, !2609, !2610, !2611, !2612, !2613, !2614}
!2606 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2607 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2608 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2609 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2610 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2611 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2612 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2613 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2614 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2615 = !{!109, !2596, !2604, !2616, !189, !354, !2618, !2619, !179, !193, !279, !232, !107, !22, !32, !281, !2621, !2622, !102, !282, !106, !283, !2617, !2623, !2624, !2625, !2626}
!2616 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2597, line: 31, baseType: !2617)
!2617 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !106)
!2618 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !233, line: 329, baseType: !32)
!2619 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2597, line: 32, baseType: !2620)
!2620 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !112)
!2621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !189, size: 32)
!2622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !354, size: 32)
!2623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2617, size: 32)
!2624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !232, size: 32)
!2625 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !233, line: 145, baseType: !109)
!2626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2625, size: 32)
!2627 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2628, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!2628 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/simple")
!2629 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2630, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2630 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/simple/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/simple")
!2631 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2632, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2633, splitDebugInlining: false, nameTableKind: None)
!2632 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/simple")
!2633 = !{!279, !179, !109, !32}
!2634 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2635, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2636, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!2635 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/simple")
!2636 = !{!2637, !30}
!2637 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2638, line: 27, baseType: !32, size: 32, elements: !2639)
!2638 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2639 = !{!2640, !2641, !2642, !2643, !2644}
!2640 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2641 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2642 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2643 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2644 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2645 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2646, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2647, retainedTypes: !2648, splitDebugInlining: false, nameTableKind: None)
!2646 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/simple")
!2647 = !{!604, !2637, !30}
!2648 = !{!800, !2649, !107, !109, !774, !110, !178, !2666}
!2649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2650, size: 32)
!2650 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !535, line: 426, baseType: !2651)
!2651 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 411, size: 28704, elements: !2652)
!2652 = !{!2653, !2654, !2655, !2656, !2657, !2658, !2659, !2660, !2661, !2662, !2663, !2664, !2665}
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2651, file: !535, line: 413, baseType: !1652, size: 256)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2651, file: !535, line: 414, baseType: !1654, size: 768, offset: 256)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2651, file: !535, line: 415, baseType: !1652, size: 256, offset: 1024)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2651, file: !535, line: 416, baseType: !1654, size: 768, offset: 1280)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2651, file: !535, line: 417, baseType: !1652, size: 256, offset: 2048)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2651, file: !535, line: 418, baseType: !1654, size: 768, offset: 2304)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2651, file: !535, line: 419, baseType: !1652, size: 256, offset: 3072)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2651, file: !535, line: 420, baseType: !1654, size: 768, offset: 3328)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2651, file: !535, line: 421, baseType: !1652, size: 256, offset: 4096)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2651, file: !535, line: 422, baseType: !1665, size: 1792, offset: 4352)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2651, file: !535, line: 423, baseType: !1669, size: 1920, offset: 6144)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2651, file: !535, line: 424, baseType: !1674, size: 20608, offset: 8064)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2651, file: !535, line: 425, baseType: !316, size: 32, offset: 28672)
!2666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2667, size: 32)
!2667 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !2668)
!2668 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !2669)
!2669 = !{!2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2690}
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2668, file: !535, line: 447, baseType: !539, size: 32)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2668, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2668, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2668, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2668, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2668, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2668, file: !535, line: 453, baseType: !1689, size: 96, offset: 192)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2668, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2668, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2668, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2668, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2668, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2668, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2668, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2668, file: !535, line: 461, baseType: !1700, size: 64, offset: 512)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2668, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2668, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2668, file: !535, line: 464, baseType: !1704, size: 128, offset: 640)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2668, file: !535, line: 465, baseType: !1706, size: 160, offset: 768)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2668, file: !535, line: 466, baseType: !1708, size: 160, offset: 928)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2668, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!2691 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2692, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!2692 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/simple")
!2693 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2694, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2695, splitDebugInlining: false, nameTableKind: None)
!2694 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/simple")
!2695 = !{!107, !109, !22, !2696}
!2696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2697, size: 32)
!2697 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !2698)
!2698 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !2699)
!2699 = !{!2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717, !2718, !2719, !2720}
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2698, file: !535, line: 447, baseType: !539, size: 32)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2698, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2698, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2698, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2698, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2698, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2698, file: !535, line: 453, baseType: !1689, size: 96, offset: 192)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2698, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2698, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2698, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2698, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2698, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2698, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2698, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2698, file: !535, line: 461, baseType: !1700, size: 64, offset: 512)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2698, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2698, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2698, file: !535, line: 464, baseType: !1704, size: 128, offset: 640)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2698, file: !535, line: 465, baseType: !1706, size: 160, offset: 768)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2698, file: !535, line: 466, baseType: !1708, size: 160, offset: 928)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2698, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!2721 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2722, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2723, splitDebugInlining: false, nameTableKind: None)
!2722 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/simple")
!2723 = !{!2724, !107, !109}
!2724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2725, size: 32)
!2725 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !2726)
!2726 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !2727)
!2727 = !{!2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741, !2742, !2743, !2744, !2745, !2746, !2747, !2748}
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2726, file: !535, line: 447, baseType: !539, size: 32)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2726, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2726, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2726, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2726, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2726, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2726, file: !535, line: 453, baseType: !1689, size: 96, offset: 192)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2726, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2726, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2726, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2726, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2726, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2726, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2726, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2726, file: !535, line: 461, baseType: !1700, size: 64, offset: 512)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2726, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2726, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2726, file: !535, line: 464, baseType: !1704, size: 128, offset: 640)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2726, file: !535, line: 465, baseType: !1706, size: 160, offset: 768)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2726, file: !535, line: 466, baseType: !1708, size: 160, offset: 928)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2726, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!2749 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2750, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2751, splitDebugInlining: false, nameTableKind: None)
!2750 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/simple")
!2751 = !{!2752, !110, !107, !109}
!2752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2753, size: 32)
!2753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2754, line: 98, size: 256, elements: !2755)
!2754 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2755 = !{!2756, !2761, !2766, !2771, !2776, !2781, !2786, !2791}
!2756 = !DIDerivedType(tag: DW_TAG_member, scope: !2753, file: !2754, line: 99, baseType: !2757, size: 32)
!2757 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2753, file: !2754, line: 99, size: 32, elements: !2758)
!2758 = !{!2759, !2760}
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2757, file: !2754, line: 99, baseType: !110, size: 32)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2757, file: !2754, line: 99, baseType: !110, size: 32)
!2761 = !DIDerivedType(tag: DW_TAG_member, scope: !2753, file: !2754, line: 100, baseType: !2762, size: 32, offset: 32)
!2762 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2753, file: !2754, line: 100, size: 32, elements: !2763)
!2763 = !{!2764, !2765}
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2762, file: !2754, line: 100, baseType: !110, size: 32)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2762, file: !2754, line: 100, baseType: !110, size: 32)
!2766 = !DIDerivedType(tag: DW_TAG_member, scope: !2753, file: !2754, line: 101, baseType: !2767, size: 32, offset: 64)
!2767 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2753, file: !2754, line: 101, size: 32, elements: !2768)
!2768 = !{!2769, !2770}
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2767, file: !2754, line: 101, baseType: !110, size: 32)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2767, file: !2754, line: 101, baseType: !110, size: 32)
!2771 = !DIDerivedType(tag: DW_TAG_member, scope: !2753, file: !2754, line: 102, baseType: !2772, size: 32, offset: 96)
!2772 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2753, file: !2754, line: 102, size: 32, elements: !2773)
!2773 = !{!2774, !2775}
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2772, file: !2754, line: 102, baseType: !110, size: 32)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2772, file: !2754, line: 102, baseType: !110, size: 32)
!2776 = !DIDerivedType(tag: DW_TAG_member, scope: !2753, file: !2754, line: 103, baseType: !2777, size: 32, offset: 128)
!2777 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2753, file: !2754, line: 103, size: 32, elements: !2778)
!2778 = !{!2779, !2780}
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2777, file: !2754, line: 103, baseType: !110, size: 32)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2777, file: !2754, line: 103, baseType: !110, size: 32)
!2781 = !DIDerivedType(tag: DW_TAG_member, scope: !2753, file: !2754, line: 104, baseType: !2782, size: 32, offset: 160)
!2782 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2753, file: !2754, line: 104, size: 32, elements: !2783)
!2783 = !{!2784, !2785}
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2782, file: !2754, line: 104, baseType: !110, size: 32)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2782, file: !2754, line: 104, baseType: !110, size: 32)
!2786 = !DIDerivedType(tag: DW_TAG_member, scope: !2753, file: !2754, line: 105, baseType: !2787, size: 32, offset: 192)
!2787 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2753, file: !2754, line: 105, size: 32, elements: !2788)
!2788 = !{!2789, !2790}
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2787, file: !2754, line: 105, baseType: !110, size: 32)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2787, file: !2754, line: 105, baseType: !110, size: 32)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2753, file: !2754, line: 106, baseType: !110, size: 32, offset: 224)
!2792 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2793, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2636, retainedTypes: !2794, splitDebugInlining: false, nameTableKind: None)
!2793 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/simple")
!2794 = !{!2795, !107, !109, !2820, !2863, !110}
!2795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2796, size: 32)
!2796 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !2797)
!2797 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !2798)
!2798 = !{!2799, !2800, !2801, !2802, !2803, !2804, !2805, !2806, !2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819}
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2797, file: !535, line: 447, baseType: !539, size: 32)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2797, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2797, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2797, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2797, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2797, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2797, file: !535, line: 453, baseType: !1689, size: 96, offset: 192)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2797, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2797, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2797, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2797, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2797, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2797, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2797, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2797, file: !535, line: 461, baseType: !1700, size: 64, offset: 512)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2797, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2797, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2797, file: !535, line: 464, baseType: !1704, size: 128, offset: 640)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2797, file: !535, line: 465, baseType: !1706, size: 160, offset: 768)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2797, file: !535, line: 466, baseType: !1708, size: 160, offset: 928)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2797, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!2820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2821, size: 32)
!2821 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2754, line: 141, baseType: !2822)
!2822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2754, line: 97, size: 256, elements: !2823)
!2823 = !{!2824}
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2822, file: !2754, line: 107, baseType: !2825, size: 256)
!2825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2754, line: 98, size: 256, elements: !2826)
!2826 = !{!2827, !2832, !2837, !2842, !2847, !2852, !2857, !2862}
!2827 = !DIDerivedType(tag: DW_TAG_member, scope: !2825, file: !2754, line: 99, baseType: !2828, size: 32)
!2828 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2825, file: !2754, line: 99, size: 32, elements: !2829)
!2829 = !{!2830, !2831}
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2828, file: !2754, line: 99, baseType: !110, size: 32)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2828, file: !2754, line: 99, baseType: !110, size: 32)
!2832 = !DIDerivedType(tag: DW_TAG_member, scope: !2825, file: !2754, line: 100, baseType: !2833, size: 32, offset: 32)
!2833 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2825, file: !2754, line: 100, size: 32, elements: !2834)
!2834 = !{!2835, !2836}
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2833, file: !2754, line: 100, baseType: !110, size: 32)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2833, file: !2754, line: 100, baseType: !110, size: 32)
!2837 = !DIDerivedType(tag: DW_TAG_member, scope: !2825, file: !2754, line: 101, baseType: !2838, size: 32, offset: 64)
!2838 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2825, file: !2754, line: 101, size: 32, elements: !2839)
!2839 = !{!2840, !2841}
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2838, file: !2754, line: 101, baseType: !110, size: 32)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2838, file: !2754, line: 101, baseType: !110, size: 32)
!2842 = !DIDerivedType(tag: DW_TAG_member, scope: !2825, file: !2754, line: 102, baseType: !2843, size: 32, offset: 96)
!2843 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2825, file: !2754, line: 102, size: 32, elements: !2844)
!2844 = !{!2845, !2846}
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2843, file: !2754, line: 102, baseType: !110, size: 32)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2843, file: !2754, line: 102, baseType: !110, size: 32)
!2847 = !DIDerivedType(tag: DW_TAG_member, scope: !2825, file: !2754, line: 103, baseType: !2848, size: 32, offset: 128)
!2848 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2825, file: !2754, line: 103, size: 32, elements: !2849)
!2849 = !{!2850, !2851}
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2848, file: !2754, line: 103, baseType: !110, size: 32)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2848, file: !2754, line: 103, baseType: !110, size: 32)
!2852 = !DIDerivedType(tag: DW_TAG_member, scope: !2825, file: !2754, line: 104, baseType: !2853, size: 32, offset: 160)
!2853 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2825, file: !2754, line: 104, size: 32, elements: !2854)
!2854 = !{!2855, !2856}
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2853, file: !2754, line: 104, baseType: !110, size: 32)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2853, file: !2754, line: 104, baseType: !110, size: 32)
!2857 = !DIDerivedType(tag: DW_TAG_member, scope: !2825, file: !2754, line: 105, baseType: !2858, size: 32, offset: 192)
!2858 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2825, file: !2754, line: 105, size: 32, elements: !2859)
!2859 = !{!2860, !2861}
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2858, file: !2754, line: 105, baseType: !110, size: 32)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2858, file: !2754, line: 105, baseType: !110, size: 32)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2825, file: !2754, line: 106, baseType: !110, size: 32, offset: 224)
!2863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !192, size: 32)
!2864 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2865, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1637, retainedTypes: !2866, splitDebugInlining: false, nameTableKind: None)
!2865 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/simple")
!2866 = !{!800, !774, !178, !110, !2867, !2884}
!2867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2868, size: 32)
!2868 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !535, line: 426, baseType: !2869)
!2869 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 411, size: 28704, elements: !2870)
!2870 = !{!2871, !2872, !2873, !2874, !2875, !2876, !2877, !2878, !2879, !2880, !2881, !2882, !2883}
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2869, file: !535, line: 413, baseType: !1652, size: 256)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2869, file: !535, line: 414, baseType: !1654, size: 768, offset: 256)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2869, file: !535, line: 415, baseType: !1652, size: 256, offset: 1024)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2869, file: !535, line: 416, baseType: !1654, size: 768, offset: 1280)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2869, file: !535, line: 417, baseType: !1652, size: 256, offset: 2048)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2869, file: !535, line: 418, baseType: !1654, size: 768, offset: 2304)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2869, file: !535, line: 419, baseType: !1652, size: 256, offset: 3072)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2869, file: !535, line: 420, baseType: !1654, size: 768, offset: 3328)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2869, file: !535, line: 421, baseType: !1652, size: 256, offset: 4096)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2869, file: !535, line: 422, baseType: !1665, size: 1792, offset: 4352)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2869, file: !535, line: 423, baseType: !1669, size: 1920, offset: 6144)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2869, file: !535, line: 424, baseType: !1674, size: 20608, offset: 8064)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2869, file: !535, line: 425, baseType: !316, size: 32, offset: 28672)
!2884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2885, size: 32)
!2885 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !2886)
!2886 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !2887)
!2887 = !{!2888, !2889, !2890, !2891, !2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899, !2900, !2901, !2902, !2903, !2904, !2905, !2906, !2907, !2908}
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2886, file: !535, line: 447, baseType: !539, size: 32)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2886, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2886, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2886, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2886, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2886, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2886, file: !535, line: 453, baseType: !1689, size: 96, offset: 192)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2886, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2886, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2886, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2886, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2886, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2886, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2886, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2886, file: !535, line: 461, baseType: !1700, size: 64, offset: 512)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2886, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2886, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2886, file: !535, line: 464, baseType: !1704, size: 128, offset: 640)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2886, file: !535, line: 465, baseType: !1706, size: 160, offset: 768)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2886, file: !535, line: 466, baseType: !1708, size: 160, offset: 928)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2886, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!2909 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2910, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2911, splitDebugInlining: false, nameTableKind: None)
!2910 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/simple")
!2911 = !{!2912, !107, !109}
!2912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2913, size: 32)
!2913 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !2914)
!2914 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !2915)
!2915 = !{!2916, !2917, !2918, !2919, !2920, !2921, !2922, !2923, !2924, !2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933, !2934, !2935, !2936}
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2914, file: !535, line: 447, baseType: !539, size: 32)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2914, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2914, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2914, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2914, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2914, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2914, file: !535, line: 453, baseType: !1689, size: 96, offset: 192)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2914, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2914, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2914, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2914, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2914, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2914, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2914, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2914, file: !535, line: 461, baseType: !1700, size: 64, offset: 512)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2914, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2914, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2914, file: !535, line: 464, baseType: !1704, size: 128, offset: 640)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2914, file: !535, line: 465, baseType: !1706, size: 160, offset: 768)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2914, file: !535, line: 466, baseType: !1708, size: 160, offset: 928)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2914, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!2937 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2938, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2939, splitDebugInlining: false, nameTableKind: None)
!2938 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/simple")
!2939 = !{!148, !285, !232, !1007, !2940, !179, !107}
!2940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2941, size: 32)
!2941 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !179)
!2942 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2943, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2944, splitDebugInlining: false, nameTableKind: None)
!2943 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/simple")
!2944 = !{!2945}
!2945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2946, size: 32)
!2946 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !312, line: 586, baseType: !2947)
!2947 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 550, size: 1216, elements: !2948)
!2948 = !{!2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961, !2962, !2963, !2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974, !2975, !2976, !2977, !2978, !2979, !2980, !2981, !2982}
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2947, file: !312, line: 552, baseType: !316, size: 32)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2947, file: !312, line: 553, baseType: !316, size: 32, offset: 32)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2947, file: !312, line: 554, baseType: !316, size: 32, offset: 64)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2947, file: !312, line: 555, baseType: !316, size: 32, offset: 96)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2947, file: !312, line: 556, baseType: !316, size: 32, offset: 128)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2947, file: !312, line: 557, baseType: !316, size: 32, offset: 160)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2947, file: !312, line: 558, baseType: !316, size: 32, offset: 192)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2947, file: !312, line: 559, baseType: !110, size: 32, offset: 224)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2947, file: !312, line: 560, baseType: !316, size: 32, offset: 256)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2947, file: !312, line: 561, baseType: !316, size: 32, offset: 288)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2947, file: !312, line: 562, baseType: !872, size: 64, offset: 320)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2947, file: !312, line: 563, baseType: !316, size: 32, offset: 384)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2947, file: !312, line: 564, baseType: !316, size: 32, offset: 416)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2947, file: !312, line: 565, baseType: !316, size: 32, offset: 448)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2947, file: !312, line: 566, baseType: !110, size: 32, offset: 480)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2947, file: !312, line: 567, baseType: !316, size: 32, offset: 512)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2947, file: !312, line: 568, baseType: !316, size: 32, offset: 544)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2947, file: !312, line: 569, baseType: !872, size: 64, offset: 576)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2947, file: !312, line: 570, baseType: !316, size: 32, offset: 640)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2947, file: !312, line: 571, baseType: !316, size: 32, offset: 672)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2947, file: !312, line: 572, baseType: !316, size: 32, offset: 704)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2947, file: !312, line: 573, baseType: !110, size: 32, offset: 736)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2947, file: !312, line: 574, baseType: !316, size: 32, offset: 768)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2947, file: !312, line: 575, baseType: !316, size: 32, offset: 800)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2947, file: !312, line: 576, baseType: !872, size: 64, offset: 832)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2947, file: !312, line: 577, baseType: !316, size: 32, offset: 896)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2947, file: !312, line: 578, baseType: !316, size: 32, offset: 928)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2947, file: !312, line: 579, baseType: !872, size: 64, offset: 960)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2947, file: !312, line: 580, baseType: !316, size: 32, offset: 1024)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2947, file: !312, line: 581, baseType: !316, size: 32, offset: 1056)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !2947, file: !312, line: 582, baseType: !316, size: 32, offset: 1088)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2947, file: !312, line: 583, baseType: !316, size: 32, offset: 1120)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2947, file: !312, line: 584, baseType: !316, size: 32, offset: 1152)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2947, file: !312, line: 585, baseType: !316, size: 32, offset: 1184)
!2983 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2984, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2984 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/simple")
!2985 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2986, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2987, retainedTypes: !3003, splitDebugInlining: false, nameTableKind: None)
!2986 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc_ex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/simple")
!2987 = !{!2988, !2995, !2999}
!2988 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2989, line: 38, baseType: !32, size: 32, elements: !2990)
!2989 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2990 = !{!2991, !2992, !2993, !2994}
!2991 = !DIEnumerator(name: "HAL_OK", value: 0)
!2992 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2993 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2994 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2995 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !845, line: 184, baseType: !32, size: 32, elements: !2996)
!2996 = !{!2997, !2998}
!2997 = !DIEnumerator(name: "RESET", value: 0)
!2998 = !DIEnumerator(name: "SET", value: 1)
!2999 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !845, line: 190, baseType: !32, size: 32, elements: !3000)
!3000 = !{!3001, !3002}
!3001 = !DIEnumerator(name: "DISABLE", value: 0)
!3002 = !DIEnumerator(name: "ENABLE", value: 1)
!3003 = !{!3004, !110, !3042, !1486, !178, !111, !107}
!3004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3005, size: 32)
!3005 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !312, line: 586, baseType: !3006)
!3006 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 550, size: 1216, elements: !3007)
!3007 = !{!3008, !3009, !3010, !3011, !3012, !3013, !3014, !3015, !3016, !3017, !3018, !3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037, !3038, !3039, !3040, !3041}
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3006, file: !312, line: 552, baseType: !316, size: 32)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3006, file: !312, line: 553, baseType: !316, size: 32, offset: 32)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3006, file: !312, line: 554, baseType: !316, size: 32, offset: 64)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3006, file: !312, line: 555, baseType: !316, size: 32, offset: 96)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3006, file: !312, line: 556, baseType: !316, size: 32, offset: 128)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3006, file: !312, line: 557, baseType: !316, size: 32, offset: 160)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3006, file: !312, line: 558, baseType: !316, size: 32, offset: 192)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3006, file: !312, line: 559, baseType: !110, size: 32, offset: 224)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3006, file: !312, line: 560, baseType: !316, size: 32, offset: 256)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3006, file: !312, line: 561, baseType: !316, size: 32, offset: 288)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3006, file: !312, line: 562, baseType: !872, size: 64, offset: 320)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3006, file: !312, line: 563, baseType: !316, size: 32, offset: 384)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3006, file: !312, line: 564, baseType: !316, size: 32, offset: 416)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3006, file: !312, line: 565, baseType: !316, size: 32, offset: 448)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3006, file: !312, line: 566, baseType: !110, size: 32, offset: 480)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3006, file: !312, line: 567, baseType: !316, size: 32, offset: 512)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3006, file: !312, line: 568, baseType: !316, size: 32, offset: 544)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3006, file: !312, line: 569, baseType: !872, size: 64, offset: 576)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3006, file: !312, line: 570, baseType: !316, size: 32, offset: 640)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3006, file: !312, line: 571, baseType: !316, size: 32, offset: 672)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3006, file: !312, line: 572, baseType: !316, size: 32, offset: 704)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3006, file: !312, line: 573, baseType: !110, size: 32, offset: 736)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3006, file: !312, line: 574, baseType: !316, size: 32, offset: 768)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3006, file: !312, line: 575, baseType: !316, size: 32, offset: 800)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3006, file: !312, line: 576, baseType: !872, size: 64, offset: 832)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3006, file: !312, line: 577, baseType: !316, size: 32, offset: 896)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3006, file: !312, line: 578, baseType: !316, size: 32, offset: 928)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3006, file: !312, line: 579, baseType: !872, size: 64, offset: 960)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3006, file: !312, line: 580, baseType: !316, size: 32, offset: 1024)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3006, file: !312, line: 581, baseType: !316, size: 32, offset: 1056)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !3006, file: !312, line: 582, baseType: !316, size: 32, offset: 1088)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3006, file: !312, line: 583, baseType: !316, size: 32, offset: 1120)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3006, file: !312, line: 584, baseType: !316, size: 32, offset: 1152)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3006, file: !312, line: 585, baseType: !316, size: 32, offset: 1184)
!3042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3043, size: 32)
!3043 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !312, line: 544, baseType: !3044)
!3044 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 540, size: 64, elements: !3045)
!3045 = !{!3046, !3047}
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3044, file: !312, line: 542, baseType: !316, size: 32)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3044, file: !312, line: 543, baseType: !316, size: 32, offset: 32)
!3048 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3049, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3050, retainedTypes: !3051, splitDebugInlining: false, nameTableKind: None)
!3049 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/simple")
!3050 = !{!844}
!3051 = !{!3052, !110, !3060, !3066, !3077}
!3052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3053, size: 32)
!3053 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !535, line: 770, baseType: !3054)
!3054 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 764, size: 128, elements: !3055)
!3055 = !{!3056, !3057, !3058, !3059}
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3054, file: !535, line: 766, baseType: !316, size: 32)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3054, file: !535, line: 767, baseType: !316, size: 32, offset: 32)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3054, file: !535, line: 768, baseType: !316, size: 32, offset: 64)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3054, file: !535, line: 769, baseType: !539, size: 32, offset: 96)
!3060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3061, size: 32)
!3061 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !312, line: 544, baseType: !3062)
!3062 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 540, size: 64, elements: !3063)
!3063 = !{!3064, !3065}
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3062, file: !312, line: 542, baseType: !316, size: 32)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3062, file: !312, line: 543, baseType: !316, size: 32, offset: 32)
!3066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3067, size: 32)
!3067 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !312, line: 407, baseType: !3068)
!3068 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 398, size: 224, elements: !3069)
!3069 = !{!3070, !3071, !3072, !3073, !3074, !3075, !3076}
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3068, file: !312, line: 400, baseType: !316, size: 32)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3068, file: !312, line: 401, baseType: !316, size: 32, offset: 32)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3068, file: !312, line: 402, baseType: !316, size: 32, offset: 64)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3068, file: !312, line: 403, baseType: !316, size: 32, offset: 96)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3068, file: !312, line: 404, baseType: !316, size: 32, offset: 128)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3068, file: !312, line: 405, baseType: !316, size: 32, offset: 160)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3068, file: !312, line: 406, baseType: !316, size: 32, offset: 192)
!3077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3078, size: 32)
!3078 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !312, line: 586, baseType: !3079)
!3079 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 550, size: 1216, elements: !3080)
!3080 = !{!3081, !3082, !3083, !3084, !3085, !3086, !3087, !3088, !3089, !3090, !3091, !3092, !3093, !3094, !3095, !3096, !3097, !3098, !3099, !3100, !3101, !3102, !3103, !3104, !3105, !3106, !3107, !3108, !3109, !3110, !3111, !3112, !3113, !3114}
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3079, file: !312, line: 552, baseType: !316, size: 32)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3079, file: !312, line: 553, baseType: !316, size: 32, offset: 32)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3079, file: !312, line: 554, baseType: !316, size: 32, offset: 64)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3079, file: !312, line: 555, baseType: !316, size: 32, offset: 96)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3079, file: !312, line: 556, baseType: !316, size: 32, offset: 128)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3079, file: !312, line: 557, baseType: !316, size: 32, offset: 160)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3079, file: !312, line: 558, baseType: !316, size: 32, offset: 192)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3079, file: !312, line: 559, baseType: !110, size: 32, offset: 224)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3079, file: !312, line: 560, baseType: !316, size: 32, offset: 256)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3079, file: !312, line: 561, baseType: !316, size: 32, offset: 288)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3079, file: !312, line: 562, baseType: !872, size: 64, offset: 320)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3079, file: !312, line: 563, baseType: !316, size: 32, offset: 384)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3079, file: !312, line: 564, baseType: !316, size: 32, offset: 416)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3079, file: !312, line: 565, baseType: !316, size: 32, offset: 448)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3079, file: !312, line: 566, baseType: !110, size: 32, offset: 480)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3079, file: !312, line: 567, baseType: !316, size: 32, offset: 512)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3079, file: !312, line: 568, baseType: !316, size: 32, offset: 544)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3079, file: !312, line: 569, baseType: !872, size: 64, offset: 576)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3079, file: !312, line: 570, baseType: !316, size: 32, offset: 640)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3079, file: !312, line: 571, baseType: !316, size: 32, offset: 672)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3079, file: !312, line: 572, baseType: !316, size: 32, offset: 704)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3079, file: !312, line: 573, baseType: !110, size: 32, offset: 736)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3079, file: !312, line: 574, baseType: !316, size: 32, offset: 768)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3079, file: !312, line: 575, baseType: !316, size: 32, offset: 800)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3079, file: !312, line: 576, baseType: !872, size: 64, offset: 832)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3079, file: !312, line: 577, baseType: !316, size: 32, offset: 896)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3079, file: !312, line: 578, baseType: !316, size: 32, offset: 928)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3079, file: !312, line: 579, baseType: !872, size: 64, offset: 960)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3079, file: !312, line: 580, baseType: !316, size: 32, offset: 1024)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3079, file: !312, line: 581, baseType: !316, size: 32, offset: 1056)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !3079, file: !312, line: 582, baseType: !316, size: 32, offset: 1088)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3079, file: !312, line: 583, baseType: !316, size: 32, offset: 1120)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3079, file: !312, line: 584, baseType: !316, size: 32, offset: 1152)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3079, file: !312, line: 585, baseType: !316, size: 32, offset: 1184)
!3115 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3116, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3117, splitDebugInlining: false, nameTableKind: None)
!3116 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/simple")
!3117 = !{!107, !232}
!3118 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3119, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3120, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!3119 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/simple")
!3120 = !{!3121, !3128, !2637, !30}
!3121 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3122, line: 14, baseType: !32, size: 32, elements: !3123)
!3122 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3123 = !{!3124, !3125, !3126, !3127}
!3124 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3125 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3126 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3127 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3128 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3122, line: 42, baseType: !32, size: 32, elements: !3129)
!3129 = !{!3130, !3131, !3132, !3133, !3134, !3135}
!3130 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3131 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3132 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3133 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3134 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3135 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3136 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3137, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!3137 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/simple")
!3138 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3139, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3140, splitDebugInlining: false, nameTableKind: None)
!3139 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/simple")
!3140 = !{!22, !107, !109}
!3141 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3142, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!3142 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/simple")
!3143 = !{!"Ubuntu clang version 14.0.6"}
!3144 = !{i32 7, !"Dwarf Version", i32 4}
!3145 = !{i32 2, !"Debug Info Version", i32 3}
!3146 = !{i32 1, !"wchar_size", i32 4}
!3147 = !{i32 1, !"min_enum_size", i32 4}
!3148 = !{i32 1, !"branch-target-enforcement", i32 0}
!3149 = !{i32 1, !"sign-return-address", i32 0}
!3150 = !{i32 1, !"sign-return-address-all", i32 0}
!3151 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3152 = !{i32 7, !"frame-pointer", i32 2}
!3153 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3154, file: !3154, line: 26, type: !3155, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2589, retainedNodes: !2106)
!3154 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3155 = !DISubroutineType(types: !3156)
!3156 = !{null}
!3157 = !DILocation(line: 28, column: 1, scope: !3153)
!3158 = !{i64 2155376021, i64 2155376041, i64 2155376104}
!3159 = !DILocation(line: 29, column: 1, scope: !3153)
!3160 = !{i64 2155376436, i64 2155376456, i64 2155376519}
!3161 = !DILocation(line: 30, column: 1, scope: !3153)
!3162 = !{i64 2155376855, i64 2155376875, i64 2155376938}
!3163 = !DILocation(line: 31, column: 1, scope: !3153)
!3164 = !{i64 2155377274, i64 2155377294, i64 2155377357}
!3165 = !DILocation(line: 33, column: 1, scope: !3153)
!3166 = !{i64 2155377566, i64 2155377586, i64 2155377649}
!3167 = !DILocation(line: 35, column: 1, scope: !3153)
!3168 = !{i64 2155377891, i64 2155377911, i64 2155377974}
!3169 = !DILocation(line: 50, column: 1, scope: !3153)
!3170 = !{i64 2155378318, i64 2155378338, i64 2155378401}
!3171 = !DILocation(line: 54, column: 1, scope: !3153)
!3172 = !{i64 2155378757, i64 2155378777, i64 2155378840}
!3173 = !DILocation(line: 61, column: 1, scope: !3153)
!3174 = !{i64 2155379074, i64 2155379094, i64 2155379157}
!3175 = !DILocation(line: 63, column: 1, scope: !3153)
!3176 = !{i64 2155379454, i64 2155379474, i64 2155379537}
!3177 = !DILocation(line: 64, column: 1, scope: !3153)
!3178 = !{i64 2155379976, i64 2155379996, i64 2155380059}
!3179 = !DILocation(line: 65, column: 1, scope: !3153)
!3180 = !{i64 2155380474, i64 2155380494, i64 2155380557}
!3181 = !DILocation(line: 66, column: 1, scope: !3153)
!3182 = !{i64 2155380956, i64 2155380976, i64 2155381039}
!3183 = !DILocation(line: 67, column: 1, scope: !3153)
!3184 = !{i64 2155381463, i64 2155381483, i64 2155381546}
!3185 = !DILocation(line: 68, column: 1, scope: !3153)
!3186 = !{i64 2155381951, i64 2155381971, i64 2155382034}
!3187 = !DILocation(line: 70, column: 1, scope: !3153)
!3188 = !{i64 2155382419, i64 2155382439, i64 2155382502}
!3189 = !DILocation(line: 71, column: 1, scope: !3153)
!3190 = !{i64 2155382861, i64 2155382881, i64 2155382944}
!3191 = !DILocation(line: 72, column: 1, scope: !3153)
!3192 = !{i64 2155383319, i64 2155383339, i64 2155383402}
!3193 = !DILocation(line: 79, column: 1, scope: !3153)
!3194 = !{i64 2155383773, i64 2155383793, i64 2155383856}
!3195 = !DILocation(line: 80, column: 1, scope: !3153)
!3196 = !{i64 2155384284, i64 2155384304, i64 2155384367}
!3197 = !DILocation(line: 82, column: 1, scope: !3153)
!3198 = !{i64 2155384775, i64 2155384795, i64 2155384858}
!3199 = !DILocation(line: 97, column: 1, scope: !3153)
!3200 = !{i64 2155385112, i64 2155385132, i64 2155385195}
!3201 = !DILocation(line: 99, column: 1, scope: !3153)
!3202 = !{i64 2155385330, i64 2155385350, i64 2155385413}
!3203 = !DILocation(line: 102, column: 1, scope: !3153)
!3204 = !{i64 2155389648, i64 2155389668, i64 2155389731}
!3205 = !DILocation(line: 105, column: 1, scope: !3153)
!3206 = !{i64 2155389888, i64 2155389908, i64 2155389971}
!3207 = !DILocation(line: 115, column: 1, scope: !3153)
!3208 = !{i64 2155390227, i64 2155390247, i64 2155390310}
!3209 = !DILocation(line: 118, column: 1, scope: !3153)
!3210 = !{i64 2155390571, i64 2155390591, i64 2155390654}
!3211 = !DILocation(line: 32, column: 1, scope: !3212)
!3212 = !DILexicalBlockFile(scope: !3153, file: !3213, discriminator: 0)
!3213 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3214 = !{i64 2155390927, i64 2155390947, i64 2155391010}
!3215 = !DILocation(line: 33, column: 1, scope: !3212)
!3216 = !{i64 2155391439, i64 2155391459, i64 2155391522}
!3217 = !DILocation(line: 53, column: 1, scope: !3212)
!3218 = !{i64 2155391947, i64 2155391967, i64 2155392030}
!3219 = !DILocation(line: 54, column: 1, scope: !3212)
!3220 = !{i64 2155392365, i64 2155392385, i64 2155392448}
!3221 = !DILocation(line: 55, column: 1, scope: !3212)
!3222 = !{i64 2155392783, i64 2155392803, i64 2155392866}
!3223 = !DILocation(line: 56, column: 1, scope: !3212)
!3224 = !{i64 2155393201, i64 2155393221, i64 2155393284}
!3225 = !DILocation(line: 57, column: 1, scope: !3212)
!3226 = !{i64 2155393619, i64 2155393639, i64 2155393702}
!3227 = !DILocation(line: 58, column: 1, scope: !3212)
!3228 = !{i64 2155394037, i64 2155394057, i64 2155394120}
!3229 = !DILocation(line: 59, column: 1, scope: !3212)
!3230 = !{i64 2155394455, i64 2155394475, i64 2155394538}
!3231 = !DILocation(line: 60, column: 1, scope: !3212)
!3232 = !{i64 2155394879, i64 2155394899, i64 2155394962}
!3233 = !DILocation(line: 61, column: 1, scope: !3212)
!3234 = !{i64 2155395196, i64 2155395216, i64 2155395279}
!3235 = !DILocation(line: 70, column: 1, scope: !3212)
!3236 = !{i64 2155395425, i64 2155395445, i64 2155395508}
!3237 = !DILocation(line: 72, column: 1, scope: !3212)
!3238 = !{i64 2155395757, i64 2155395777, i64 2155395840}
!3239 = !DILocation(line: 73, column: 1, scope: !3212)
!3240 = !{i64 2155396207, i64 2155396227, i64 2155396290}
!3241 = !DILocation(line: 74, column: 1, scope: !3212)
!3242 = !{i64 2155396657, i64 2155396677, i64 2155396740}
!3243 = !DILocation(line: 75, column: 1, scope: !3212)
!3244 = !{i64 2155397107, i64 2155397127, i64 2155397190}
!3245 = !DILocation(line: 76, column: 1, scope: !3212)
!3246 = !{i64 2155397557, i64 2155397577, i64 2155397640}
!3247 = !DILocation(line: 77, column: 1, scope: !3212)
!3248 = !{i64 2155398007, i64 2155398027, i64 2155398090}
!3249 = !DILocation(line: 78, column: 1, scope: !3212)
!3250 = !{i64 2155398457, i64 2155398477, i64 2155398540}
!3251 = !DILocation(line: 79, column: 1, scope: !3212)
!3252 = !{i64 2155398907, i64 2155398927, i64 2155398990}
!3253 = !DILocation(line: 80, column: 1, scope: !3212)
!3254 = !{i64 2155403421, i64 2155403441, i64 2155403504}
!3255 = !DILocation(line: 84, column: 1, scope: !3212)
!3256 = !{i64 2155403753, i64 2155403773, i64 2155403836}
!3257 = !DILocation(line: 91, column: 1, scope: !3212)
!3258 = !{i64 2155404150, i64 2155404170, i64 2155404233}
!3259 = !DILocation(line: 93, column: 1, scope: !3212)
!3260 = !{i64 2155404517, i64 2155404537, i64 2155404600}
!3261 = !DILocation(line: 106, column: 1, scope: !3212)
!3262 = !{i64 2155404787, i64 2155404807, i64 2155404870}
!3263 = !DILocation(line: 11, column: 1, scope: !3264)
!3264 = !DILexicalBlockFile(scope: !3153, file: !3265, discriminator: 0)
!3265 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3266 = distinct !DISubprogram(name: "worker_thread", scope: !116, file: !116, line: 23, type: !3267, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3269)
!3267 = !DISubroutineType(types: !3268)
!3268 = !{null, !107, !107, !107}
!3269 = !{!3270, !3271, !3272, !3273, !3274, !3275}
!3270 = !DILocalVariable(name: "p1", arg: 1, scope: !3266, file: !116, line: 23, type: !107)
!3271 = !DILocalVariable(name: "p2", arg: 2, scope: !3266, file: !116, line: 23, type: !107)
!3272 = !DILocalVariable(name: "p3", arg: 3, scope: !3266, file: !116, line: 23, type: !107)
!3273 = !DILocalVariable(name: "myid", scope: !3266, file: !116, line: 25, type: !1898)
!3274 = !DILocalVariable(name: "workloops", scope: !3266, file: !116, line: 26, type: !1898)
!3275 = !DILocalVariable(name: "i", scope: !3276, file: !116, line: 28, type: !109)
!3276 = distinct !DILexicalBlock(scope: !3266, file: !116, line: 28, column: 2)
!3277 = !DILocation(line: 0, scope: !3266)
!3278 = !DILocation(line: 25, column: 19, scope: !3266)
!3279 = !DILocation(line: 0, scope: !3276)
!3280 = !DILocation(line: 28, column: 2, scope: !3276)
!3281 = !DILocation(line: 36, column: 2, scope: !3266)
!3282 = !DILocation(line: 41, column: 6, scope: !3266)
!3283 = !DILocation(line: 42, column: 2, scope: !3266)
!3284 = !DILocation(line: 44, column: 2, scope: !3266)
!3285 = !DILocation(line: 45, column: 2, scope: !3266)
!3286 = !DILocation(line: 46, column: 1, scope: !3266)
!3287 = !DILocation(line: 29, column: 3, scope: !3288)
!3288 = distinct !DILexicalBlock(scope: !3289, file: !116, line: 28, column: 38)
!3289 = distinct !DILexicalBlock(scope: !3276, file: !116, line: 28, column: 2)
!3290 = !DILocation(line: 30, column: 11, scope: !3288)
!3291 = !DILocation(line: 30, column: 3, scope: !3288)
!3292 = !DILocation(line: 28, column: 34, scope: !3289)
!3293 = !DILocation(line: 28, column: 20, scope: !3289)
!3294 = distinct !{!3294, !3280, !3295}
!3295 = !DILocation(line: 31, column: 2, scope: !3276)
!3296 = distinct !DISubprogram(name: "k_mutex_lock", scope: !3297, file: !3297, line: 927, type: !3298, scopeLine: 928, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3305)
!3297 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/simple")
!3298 = !DISubroutineType(types: !3299)
!3299 = !{!109, !3300, !3301}
!3300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 32)
!3301 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !3302)
!3302 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !3303)
!3303 = !{!3304}
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3302, file: !104, line: 66, baseType: !103, size: 64)
!3305 = !{!3306, !3307}
!3306 = !DILocalVariable(name: "mutex", arg: 1, scope: !3296, file: !3297, line: 927, type: !3300)
!3307 = !DILocalVariable(name: "timeout", arg: 2, scope: !3296, file: !3297, line: 927, type: !3301)
!3308 = !DILocation(line: 0, scope: !3296)
!3309 = !DILocation(line: 936, column: 2, scope: !3310)
!3310 = distinct !DILexicalBlock(scope: !3296, file: !3297, line: 936, column: 2)
!3311 = !{i64 2155070012}
!3312 = !DILocation(line: 937, column: 9, scope: !3296)
!3313 = !DILocation(line: 937, column: 2, scope: !3296)
!3314 = distinct !DISubprogram(name: "k_condvar_signal", scope: !3297, file: !3297, line: 976, type: !3315, scopeLine: 977, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3318)
!3315 = !DISubroutineType(types: !3316)
!3316 = !{!109, !3317}
!3317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 32)
!3318 = !{!3319}
!3319 = !DILocalVariable(name: "condvar", arg: 1, scope: !3314, file: !3297, line: 976, type: !3317)
!3320 = !DILocation(line: 0, scope: !3314)
!3321 = !DILocation(line: 984, column: 2, scope: !3322)
!3322 = distinct !DILexicalBlock(scope: !3314, file: !3297, line: 984, column: 2)
!3323 = !{i64 2155070216}
!3324 = !DILocation(line: 985, column: 9, scope: !3314)
!3325 = !DILocation(line: 985, column: 2, scope: !3314)
!3326 = distinct !DISubprogram(name: "k_mutex_unlock", scope: !3297, file: !3297, line: 944, type: !3327, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3329)
!3327 = !DISubroutineType(types: !3328)
!3328 = !{!109, !3300}
!3329 = !{!3330}
!3330 = !DILocalVariable(name: "mutex", arg: 1, scope: !3326, file: !3297, line: 944, type: !3300)
!3331 = !DILocation(line: 0, scope: !3326)
!3332 = !DILocation(line: 952, column: 2, scope: !3333)
!3333 = distinct !DILexicalBlock(scope: !3326, file: !3297, line: 952, column: 2)
!3334 = !{i64 2155070080}
!3335 = !DILocation(line: 953, column: 9, scope: !3326)
!3336 = !DILocation(line: 953, column: 2, scope: !3326)
!3337 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3338, file: !3338, line: 403, type: !3339, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3341)
!3338 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3339 = !DISubroutineType(types: !3340)
!3340 = !{!111, !111}
!3341 = !{!3342}
!3342 = !DILocalVariable(name: "t", arg: 1, scope: !3337, file: !3338, line: 403, type: !111)
!3343 = !DILocation(line: 0, scope: !3337)
!3344 = !DILocalVariable(name: "t", arg: 1, scope: !3345, file: !3338, line: 102, type: !111)
!3345 = distinct !DISubprogram(name: "z_tmcvt", scope: !3338, file: !3338, line: 102, type: !3346, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3348)
!3346 = !DISubroutineType(types: !3347)
!3347 = !{!111, !111, !110, !110, !347, !347, !347, !347}
!3348 = !{!3344, !3349, !3350, !3351, !3352, !3353, !3354, !3355, !3356, !3357, !3358}
!3349 = !DILocalVariable(name: "from_hz", arg: 2, scope: !3345, file: !3338, line: 102, type: !110)
!3350 = !DILocalVariable(name: "to_hz", arg: 3, scope: !3345, file: !3338, line: 103, type: !110)
!3351 = !DILocalVariable(name: "const_hz", arg: 4, scope: !3345, file: !3338, line: 103, type: !347)
!3352 = !DILocalVariable(name: "result32", arg: 5, scope: !3345, file: !3338, line: 104, type: !347)
!3353 = !DILocalVariable(name: "round_up", arg: 6, scope: !3345, file: !3338, line: 104, type: !347)
!3354 = !DILocalVariable(name: "round_off", arg: 7, scope: !3345, file: !3338, line: 105, type: !347)
!3355 = !DILocalVariable(name: "mul_ratio", scope: !3345, file: !3338, line: 107, type: !347)
!3356 = !DILocalVariable(name: "div_ratio", scope: !3345, file: !3338, line: 109, type: !347)
!3357 = !DILocalVariable(name: "off", scope: !3345, file: !3338, line: 116, type: !111)
!3358 = !DILocalVariable(name: "rdivisor", scope: !3359, file: !3338, line: 119, type: !110)
!3359 = distinct !DILexicalBlock(scope: !3360, file: !3338, line: 118, column: 18)
!3360 = distinct !DILexicalBlock(scope: !3345, file: !3338, line: 118, column: 6)
!3361 = !DILocation(line: 0, scope: !3345, inlinedAt: !3362)
!3362 = distinct !DILocation(line: 406, column: 9, scope: !3337)
!3363 = !DILocation(line: 145, column: 13, scope: !3364, inlinedAt: !3362)
!3364 = distinct !DILexicalBlock(scope: !3365, file: !3338, line: 144, column: 10)
!3365 = distinct !DILexicalBlock(scope: !3366, file: !3338, line: 142, column: 7)
!3366 = distinct !DILexicalBlock(scope: !3367, file: !3338, line: 141, column: 24)
!3367 = distinct !DILexicalBlock(scope: !3368, file: !3338, line: 141, column: 13)
!3368 = distinct !DILexicalBlock(scope: !3345, file: !3338, line: 134, column: 6)
!3369 = !DILocation(line: 406, column: 2, scope: !3337)
!3370 = distinct !DISubprogram(name: "k_sleep", scope: !3297, file: !3297, line: 91, type: !3371, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3373)
!3371 = !DISubroutineType(types: !3372)
!3372 = !{!774, !3301}
!3373 = !{!3374}
!3374 = !DILocalVariable(name: "timeout", arg: 1, scope: !3370, file: !3297, line: 91, type: !3301)
!3375 = !DILocation(line: 0, scope: !3370)
!3376 = !DILocation(line: 99, column: 2, scope: !3377)
!3377 = distinct !DILexicalBlock(scope: !3370, file: !3297, line: 99, column: 2)
!3378 = !{i64 2155066644}
!3379 = !DILocation(line: 100, column: 9, scope: !3370)
!3380 = !DILocation(line: 100, column: 2, scope: !3370)
!3381 = distinct !DISubprogram(name: "main", scope: !116, file: !116, line: 48, type: !3155, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3382)
!3382 = !{!3383, !3386}
!3383 = !DILocalVariable(name: "tid", scope: !3381, file: !116, line: 50, type: !3384)
!3384 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3385, size: 640, elements: !259)
!3385 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !156, line: 347, baseType: !266)
!3386 = !DILocalVariable(name: "i", scope: !3387, file: !116, line: 54, type: !109)
!3387 = distinct !DILexicalBlock(scope: !3381, file: !116, line: 54, column: 2)
!3388 = !DILocation(line: 52, column: 7, scope: !3381)
!3389 = !DILocation(line: 0, scope: !3387)
!3390 = !DILocation(line: 54, column: 2, scope: !3387)
!3391 = !DILocation(line: 60, column: 10, scope: !3381)
!3392 = !DILocation(line: 60, column: 2, scope: !3381)
!3393 = !DILocation(line: 62, column: 2, scope: !3381)
!3394 = !DILocation(line: 67, column: 9, scope: !3381)
!3395 = !DILocation(line: 67, column: 14, scope: !3381)
!3396 = !DILocation(line: 67, column: 2, scope: !3381)
!3397 = !DILocation(line: 56, column: 21, scope: !3398)
!3398 = distinct !DILexicalBlock(scope: !3399, file: !116, line: 54, column: 40)
!3399 = distinct !DILexicalBlock(scope: !3387, file: !116, line: 54, column: 2)
!3400 = !DILocation(line: 56, column: 27, scope: !3398)
!3401 = !DILocation(line: 57, column: 21, scope: !3398)
!3402 = !DILocation(line: 56, column: 4, scope: !3398)
!3403 = !DILocation(line: 0, scope: !3381)
!3404 = !DILocation(line: 54, column: 36, scope: !3399)
!3405 = !DILocation(line: 54, column: 20, scope: !3399)
!3406 = distinct !{!3406, !3390, !3407}
!3407 = !DILocation(line: 59, column: 2, scope: !3387)
!3408 = !DILocation(line: 68, column: 3, scope: !3409)
!3409 = distinct !DILexicalBlock(scope: !3381, file: !116, line: 67, column: 29)
!3410 = !DILocation(line: 75, column: 3, scope: !3409)
!3411 = !DILocation(line: 77, column: 3, scope: !3409)
!3412 = distinct !{!3412, !3396, !3413}
!3413 = !DILocation(line: 80, column: 2, scope: !3381)
!3414 = !DILocation(line: 82, column: 2, scope: !3381)
!3415 = !DILocation(line: 85, column: 2, scope: !3381)
!3416 = !DILocation(line: 86, column: 1, scope: !3381)
!3417 = distinct !DISubprogram(name: "k_thread_create", scope: !3297, file: !3297, line: 24, type: !3418, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3425)
!3418 = !DISubroutineType(types: !3419)
!3419 = !{!3385, !266, !3420, !232, !3423, !107, !107, !107, !109, !110, !3301}
!3420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3421, size: 32)
!3421 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3422, line: 44, baseType: !144)
!3422 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3423 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !3422, line: 46, baseType: !3424)
!3424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3267, size: 32)
!3425 = !{!3426, !3427, !3428, !3429, !3430, !3431, !3432, !3433, !3434, !3435}
!3426 = !DILocalVariable(name: "new_thread", arg: 1, scope: !3417, file: !3297, line: 24, type: !266)
!3427 = !DILocalVariable(name: "stack", arg: 2, scope: !3417, file: !3297, line: 24, type: !3420)
!3428 = !DILocalVariable(name: "stack_size", arg: 3, scope: !3417, file: !3297, line: 24, type: !232)
!3429 = !DILocalVariable(name: "entry", arg: 4, scope: !3417, file: !3297, line: 24, type: !3423)
!3430 = !DILocalVariable(name: "p1", arg: 5, scope: !3417, file: !3297, line: 24, type: !107)
!3431 = !DILocalVariable(name: "p2", arg: 6, scope: !3417, file: !3297, line: 24, type: !107)
!3432 = !DILocalVariable(name: "p3", arg: 7, scope: !3417, file: !3297, line: 24, type: !107)
!3433 = !DILocalVariable(name: "prio", arg: 8, scope: !3417, file: !3297, line: 24, type: !109)
!3434 = !DILocalVariable(name: "options", arg: 9, scope: !3417, file: !3297, line: 24, type: !110)
!3435 = !DILocalVariable(name: "delay", arg: 10, scope: !3417, file: !3297, line: 24, type: !3301)
!3436 = !DILocation(line: 0, scope: !3417)
!3437 = !DILocation(line: 49, column: 2, scope: !3438)
!3438 = distinct !DILexicalBlock(scope: !3417, file: !3297, line: 49, column: 2)
!3439 = !{i64 2155066440}
!3440 = !DILocation(line: 50, column: 9, scope: !3417)
!3441 = !DILocation(line: 50, column: 2, scope: !3417)
!3442 = distinct !DISubprogram(name: "k_condvar_wait", scope: !3297, file: !3297, line: 1008, type: !3443, scopeLine: 1009, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3445)
!3443 = !DISubroutineType(types: !3444)
!3444 = !{!109, !3317, !3300, !3301}
!3445 = !{!3446, !3447, !3448}
!3446 = !DILocalVariable(name: "condvar", arg: 1, scope: !3442, file: !3297, line: 1008, type: !3317)
!3447 = !DILocalVariable(name: "mutex", arg: 2, scope: !3442, file: !3297, line: 1008, type: !3300)
!3448 = !DILocalVariable(name: "timeout", arg: 3, scope: !3442, file: !3297, line: 1008, type: !3301)
!3449 = !DILocation(line: 0, scope: !3442)
!3450 = !DILocation(line: 1018, column: 2, scope: !3451)
!3451 = distinct !DILexicalBlock(scope: !3442, file: !3297, line: 1018, column: 2)
!3452 = !{i64 2155070352}
!3453 = !DILocation(line: 1019, column: 9, scope: !3442)
!3454 = !DILocation(line: 1019, column: 2, scope: !3442)
!3455 = distinct !DISubprogram(name: "cbvprintf_package", scope: !288, file: !288, line: 233, type: !3456, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3465)
!3456 = !DISubroutineType(types: !3457)
!3457 = !{!109, !107, !232, !110, !279, !3458}
!3458 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3459, line: 99, baseType: !3460)
!3459 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3460 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3459, line: 40, baseType: !3461)
!3461 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !288, baseType: !3462)
!3462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3463)
!3463 = !{!3464}
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3462, file: !288, line: 18, baseType: !107, size: 32)
!3465 = !{!3466, !3467, !3468, !3469, !3470, !3471, !3472, !3473, !3474, !3475, !3477, !3478, !3479, !3480, !3481, !3482, !3483, !3484, !3485, !3486, !3487, !3488, !3501, !3510, !3513, !3514, !3517, !3520, !3523, !3526, !3532}
!3466 = !DILocalVariable(name: "packaged", arg: 1, scope: !3455, file: !288, line: 233, type: !107)
!3467 = !DILocalVariable(name: "len", arg: 2, scope: !3455, file: !288, line: 233, type: !232)
!3468 = !DILocalVariable(name: "flags", arg: 3, scope: !3455, file: !288, line: 233, type: !110)
!3469 = !DILocalVariable(name: "fmt", arg: 4, scope: !3455, file: !288, line: 234, type: !279)
!3470 = !DILocalVariable(name: "ap", arg: 5, scope: !3455, file: !288, line: 234, type: !3458)
!3471 = !DILocalVariable(name: "buf0", scope: !3455, file: !288, line: 247, type: !286)
!3472 = !DILocalVariable(name: "buf", scope: !3455, file: !288, line: 248, type: !286)
!3473 = !DILocalVariable(name: "size", scope: !3455, file: !288, line: 249, type: !32)
!3474 = !DILocalVariable(name: "align", scope: !3455, file: !288, line: 250, type: !32)
!3475 = !DILocalVariable(name: "str_ptr_pos", scope: !3455, file: !288, line: 251, type: !3476)
!3476 = !DICompositeType(tag: DW_TAG_array_type, baseType: !178, size: 128, elements: !1889)
!3477 = !DILocalVariable(name: "str_ptr_arg", scope: !3455, file: !288, line: 252, type: !3476)
!3478 = !DILocalVariable(name: "s_idx", scope: !3455, file: !288, line: 253, type: !32)
!3479 = !DILocalVariable(name: "s_rw_cnt", scope: !3455, file: !288, line: 254, type: !32)
!3480 = !DILocalVariable(name: "s_ro_cnt", scope: !3455, file: !288, line: 255, type: !32)
!3481 = !DILocalVariable(name: "arg_idx", scope: !3455, file: !288, line: 256, type: !109)
!3482 = !DILocalVariable(name: "i", scope: !3455, file: !288, line: 257, type: !32)
!3483 = !DILocalVariable(name: "s", scope: !3455, file: !288, line: 258, type: !279)
!3484 = !DILocalVariable(name: "parsing", scope: !3455, file: !288, line: 259, type: !347)
!3485 = !DILocalVariable(name: "rws_pos_en", scope: !3455, file: !288, line: 263, type: !347)
!3486 = !DILocalVariable(name: "fros_cnt", scope: !3455, file: !288, line: 268, type: !109)
!3487 = !DILocalVariable(name: "is_str_arg", scope: !3455, file: !288, line: 269, type: !347)
!3488 = !DILocalVariable(name: "pkg_hdr", scope: !3455, file: !288, line: 270, type: !3489)
!3489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3490, size: 32)
!3490 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !3491, line: 78, size: 32, elements: !3492)
!3491 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3492 = !{!3493, !3500}
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !3490, file: !3491, line: 80, baseType: !3494, size: 32)
!3494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !3491, line: 45, size: 32, elements: !3495)
!3495 = !{!3496, !3497, !3498, !3499}
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3494, file: !3491, line: 47, baseType: !178, size: 8)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !3494, file: !3491, line: 50, baseType: !178, size: 8, offset: 8)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !3494, file: !3491, line: 53, baseType: !178, size: 8, offset: 16)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !3494, file: !3491, line: 56, baseType: !178, size: 8, offset: 24)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !3490, file: !3491, line: 82, baseType: !107, size: 32)
!3501 = !DILocalVariable(name: "v", scope: !3502, file: !288, line: 567, type: !3506)
!3502 = distinct !DILexicalBlock(scope: !3503, file: !288, line: 562, column: 14)
!3503 = distinct !DILexicalBlock(scope: !3504, file: !288, line: 481, column: 18)
!3504 = distinct !DILexicalBlock(scope: !3505, file: !288, line: 466, column: 3)
!3505 = distinct !DILexicalBlock(scope: !3455, file: !288, line: 343, column: 15)
!3506 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3455, file: !288, line: 567, size: 64, elements: !3507)
!3507 = !{!3508, !3509}
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3506, file: !288, line: 567, baseType: !277, size: 64)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !3506, file: !288, line: 567, baseType: !275, size: 64)
!3510 = !DILocalVariable(name: "is_ro", scope: !3511, file: !288, line: 620, type: !347)
!3511 = distinct !DILexicalBlock(scope: !3512, file: !288, line: 613, column: 19)
!3512 = distinct !DILexicalBlock(scope: !3505, file: !288, line: 613, column: 7)
!3513 = !DILocalVariable(name: "do_ro", scope: !3511, file: !288, line: 621, type: !347)
!3514 = !DILocalVariable(name: "s_ptr_idx", scope: !3515, file: !288, line: 626, type: !110)
!3515 = distinct !DILexicalBlock(scope: !3516, file: !288, line: 625, column: 11)
!3516 = distinct !DILexicalBlock(scope: !3511, file: !288, line: 623, column: 8)
!3517 = !DILocalVariable(name: "v", scope: !3518, file: !288, line: 684, type: !109)
!3518 = distinct !DILexicalBlock(scope: !3519, file: !288, line: 683, column: 35)
!3519 = distinct !DILexicalBlock(scope: !3512, file: !288, line: 683, column: 14)
!3520 = !DILocalVariable(name: "v", scope: !3521, file: !288, line: 691, type: !102)
!3521 = distinct !DILexicalBlock(scope: !3522, file: !288, line: 690, column: 36)
!3522 = distinct !DILexicalBlock(scope: !3519, file: !288, line: 690, column: 14)
!3523 = !DILocalVariable(name: "v", scope: !3524, file: !288, line: 698, type: !106)
!3524 = distinct !DILexicalBlock(scope: !3525, file: !288, line: 697, column: 41)
!3525 = distinct !DILexicalBlock(scope: !3522, file: !288, line: 697, column: 14)
!3526 = !DILocalVariable(name: "pos", scope: !3527, file: !288, line: 762, type: !178)
!3527 = distinct !DILexicalBlock(scope: !3528, file: !288, line: 757, column: 31)
!3528 = distinct !DILexicalBlock(scope: !3529, file: !288, line: 757, column: 3)
!3529 = distinct !DILexicalBlock(scope: !3530, file: !288, line: 757, column: 3)
!3530 = distinct !DILexicalBlock(scope: !3531, file: !288, line: 756, column: 16)
!3531 = distinct !DILexicalBlock(scope: !3455, file: !288, line: 756, column: 6)
!3532 = !DILabel(scope: !3511, name: "process_string", file: !288, line: 615)
!3533 = !DILocation(line: 0, scope: !3455)
!3534 = !DILocation(line: 251, column: 2, scope: !3455)
!3535 = !DILocation(line: 251, column: 10, scope: !3455)
!3536 = !DILocation(line: 252, column: 2, scope: !3455)
!3537 = !DILocation(line: 252, column: 10, scope: !3455)
!3538 = !DILocation(line: 263, column: 29, scope: !3455)
!3539 = !DILocation(line: 263, column: 21, scope: !3455)
!3540 = !DILocation(line: 268, column: 21, scope: !3455)
!3541 = !DILocation(line: 268, column: 19, scope: !3455)
!3542 = !DILocation(line: 273, column: 6, scope: !3543)
!3543 = distinct !DILexicalBlock(scope: !3455, file: !288, line: 273, column: 6)
!3544 = !DILocation(line: 273, column: 26, scope: !3543)
!3545 = !DILocation(line: 273, column: 6, scope: !3455)
!3546 = !DILocation(line: 297, column: 6, scope: !3455)
!3547 = !DILocation(line: 305, column: 11, scope: !3548)
!3548 = distinct !DILexicalBlock(scope: !3455, file: !288, line: 305, column: 6)
!3549 = !DILocation(line: 305, column: 6, scope: !3455)
!3550 = !DILocation(line: 327, column: 19, scope: !3551)
!3551 = distinct !DILexicalBlock(scope: !3455, file: !288, line: 327, column: 6)
!3552 = !DILocation(line: 327, column: 22, scope: !3551)
!3553 = !DILocation(line: 327, column: 33, scope: !3551)
!3554 = !DILocation(line: 327, column: 50, scope: !3551)
!3555 = !DILocation(line: 327, column: 6, scope: !3455)
!3556 = !DILocation(line: 338, column: 9, scope: !3455)
!3557 = !DILocation(line: 341, column: 2, scope: !3455)
!3558 = !DILocation(line: 472, column: 8, scope: !3504)
!3559 = !DILocation(line: 473, column: 14, scope: !3560)
!3560 = distinct !DILexicalBlock(scope: !3561, file: !288, line: 473, column: 9)
!3561 = distinct !DILexicalBlock(scope: !3562, file: !288, line: 472, column: 18)
!3562 = distinct !DILexicalBlock(scope: !3504, file: !288, line: 472, column: 8)
!3563 = !DILocation(line: 473, column: 9, scope: !3561)
!3564 = !DILocation(line: 479, column: 5, scope: !3561)
!3565 = !DILocation(line: 468, column: 9, scope: !3566)
!3566 = distinct !DILexicalBlock(scope: !3504, file: !288, line: 468, column: 8)
!3567 = !DILocation(line: 468, column: 8, scope: !3566)
!3568 = !DILocation(line: 468, column: 15, scope: !3566)
!3569 = !DILocation(line: 468, column: 8, scope: !3504)
!3570 = distinct !{!3570, !3571, !3572}
!3571 = !DILocation(line: 343, column: 2, scope: !3455)
!3572 = !DILocation(line: 712, column: 2, scope: !3455)
!3573 = !DILocation(line: 481, column: 4, scope: !3504)
!3574 = !DILocation(line: 484, column: 12, scope: !3503)
!3575 = !DILocation(line: 485, column: 5, scope: !3503)
!3576 = !DILocation(line: 505, column: 5, scope: !3503)
!3577 = !DILocation(line: 518, column: 5, scope: !3503)
!3578 = !DILocation(line: 523, column: 5, scope: !3503)
!3579 = !DILocation(line: 532, column: 9, scope: !3580)
!3580 = distinct !DILexicalBlock(scope: !3503, file: !288, line: 532, column: 9)
!3581 = !DILocation(line: 532, column: 17, scope: !3580)
!3582 = !DILocation(line: 532, column: 9, scope: !3503)
!3583 = !DILocation(line: 533, column: 10, scope: !3584)
!3584 = distinct !DILexicalBlock(scope: !3585, file: !288, line: 533, column: 10)
!3585 = distinct !DILexicalBlock(scope: !3580, file: !288, line: 532, column: 25)
!3586 = !DILocation(line: 533, column: 18, scope: !3584)
!3587 = !DILocation(line: 0, scope: !3588)
!3588 = distinct !DILexicalBlock(scope: !3502, file: !288, line: 569, column: 9)
!3589 = !DILocation(line: 0, scope: !3502)
!3590 = !DILocation(line: 579, column: 20, scope: !3502)
!3591 = !DILocation(line: 579, column: 11, scope: !3502)
!3592 = !DILocation(line: 580, column: 9, scope: !3502)
!3593 = !DILocation(line: 582, column: 21, scope: !3594)
!3594 = distinct !DILexicalBlock(scope: !3595, file: !288, line: 582, column: 10)
!3595 = distinct !DILexicalBlock(scope: !3596, file: !288, line: 580, column: 23)
!3596 = distinct !DILexicalBlock(scope: !3502, file: !288, line: 580, column: 9)
!3597 = !DILocation(line: 582, column: 28, scope: !3594)
!3598 = !DILocation(line: 582, column: 10, scope: !3595)
!3599 = !DILocation(line: 0, scope: !3600)
!3600 = distinct !DILexicalBlock(scope: !3601, file: !288, line: 587, column: 17)
!3601 = distinct !DILexicalBlock(scope: !3595, file: !288, line: 585, column: 10)
!3602 = !DILocation(line: 593, column: 9, scope: !3502)
!3603 = !DILocation(line: 600, column: 5, scope: !3503)
!3604 = !DILocation(line: 605, column: 18, scope: !3505)
!3605 = !DILocation(line: 605, column: 9, scope: !3505)
!3606 = !DILocation(line: 608, column: 20, scope: !3607)
!3607 = distinct !DILexicalBlock(scope: !3505, file: !288, line: 608, column: 7)
!3608 = !DILocation(line: 608, column: 23, scope: !3607)
!3609 = !DILocation(line: 608, column: 34, scope: !3607)
!3610 = !DILocation(line: 608, column: 41, scope: !3607)
!3611 = !DILocation(line: 608, column: 7, scope: !3505)
!3612 = !DILocation(line: 613, column: 7, scope: !3505)
!3613 = !DILocation(line: 614, column: 8, scope: !3511)
!3614 = !DILocation(line: 614, column: 4, scope: !3511)
!3615 = !DILocation(line: 256, column: 6, scope: !3455)
!3616 = !DILocation(line: 254, column: 15, scope: !3455)
!3617 = !DILocation(line: 320, column: 7, scope: !3618)
!3618 = distinct !DILexicalBlock(scope: !3548, file: !288, line: 305, column: 20)
!3619 = !DILocation(line: 615, column: 1, scope: !3511)
!3620 = !DILocation(line: 616, column: 8, scope: !3511)
!3621 = !DILocation(line: 617, column: 5, scope: !3622)
!3622 = distinct !DILexicalBlock(scope: !3623, file: !288, line: 616, column: 22)
!3623 = distinct !DILexicalBlock(scope: !3511, file: !288, line: 616, column: 8)
!3624 = !DILocation(line: 617, column: 25, scope: !3622)
!3625 = !DILocation(line: 618, column: 4, scope: !3622)
!3626 = !DILocation(line: 620, column: 26, scope: !3511)
!3627 = !DILocation(line: 620, column: 29, scope: !3511)
!3628 = !DILocation(line: 620, column: 17, scope: !3511)
!3629 = !DILocation(line: 620, column: 43, scope: !3511)
!3630 = !DILocation(line: 0, scope: !3511)
!3631 = !DILocation(line: 623, column: 14, scope: !3516)
!3632 = !DILocation(line: 626, column: 26, scope: !3515)
!3633 = !DILocation(line: 626, column: 37, scope: !3515)
!3634 = !DILocation(line: 0, scope: !3515)
!3635 = !DILocation(line: 634, column: 15, scope: !3636)
!3636 = distinct !DILexicalBlock(scope: !3515, file: !288, line: 634, column: 9)
!3637 = !DILocation(line: 635, column: 6, scope: !3638)
!3638 = distinct !DILexicalBlock(scope: !3639, file: !288, line: 635, column: 6)
!3639 = distinct !DILexicalBlock(scope: !3640, file: !288, line: 635, column: 6)
!3640 = distinct !DILexicalBlock(scope: !3641, file: !288, line: 635, column: 6)
!3641 = distinct !DILexicalBlock(scope: !3636, file: !288, line: 634, column: 44)
!3642 = !DILocation(line: 639, column: 15, scope: !3643)
!3643 = distinct !DILexicalBlock(scope: !3515, file: !288, line: 639, column: 9)
!3644 = !DILocation(line: 639, column: 9, scope: !3515)
!3645 = !DILocation(line: 640, column: 6, scope: !3646)
!3646 = distinct !DILexicalBlock(scope: !3647, file: !288, line: 640, column: 6)
!3647 = distinct !DILexicalBlock(scope: !3648, file: !288, line: 640, column: 6)
!3648 = distinct !DILexicalBlock(scope: !3649, file: !288, line: 640, column: 6)
!3649 = distinct !DILexicalBlock(scope: !3643, file: !288, line: 639, column: 43)
!3650 = !DILocation(line: 644, column: 9, scope: !3515)
!3651 = !DILocation(line: 649, column: 27, scope: !3652)
!3652 = distinct !DILexicalBlock(scope: !3653, file: !288, line: 644, column: 23)
!3653 = distinct !DILexicalBlock(scope: !3515, file: !288, line: 644, column: 9)
!3654 = !DILocation(line: 649, column: 6, scope: !3652)
!3655 = !DILocation(line: 649, column: 25, scope: !3652)
!3656 = !DILocation(line: 650, column: 27, scope: !3652)
!3657 = !DILocation(line: 650, column: 6, scope: !3652)
!3658 = !DILocation(line: 650, column: 25, scope: !3652)
!3659 = !DILocation(line: 651, column: 10, scope: !3652)
!3660 = !DILocation(line: 653, column: 26, scope: !3661)
!3661 = distinct !DILexicalBlock(scope: !3662, file: !288, line: 651, column: 17)
!3662 = distinct !DILexicalBlock(scope: !3652, file: !288, line: 651, column: 10)
!3663 = !DILocation(line: 654, column: 15, scope: !3661)
!3664 = !DILocation(line: 655, column: 6, scope: !3661)
!3665 = !DILocation(line: 656, column: 15, scope: !3666)
!3666 = distinct !DILexicalBlock(scope: !3662, file: !288, line: 655, column: 13)
!3667 = !DILocation(line: 658, column: 16, scope: !3653)
!3668 = !DILocation(line: 663, column: 10, scope: !3669)
!3669 = distinct !DILexicalBlock(scope: !3670, file: !288, line: 658, column: 23)
!3670 = distinct !DILexicalBlock(scope: !3653, file: !288, line: 658, column: 16)
!3671 = !DILocation(line: 664, column: 5, scope: !3669)
!3672 = !DILocation(line: 664, column: 16, scope: !3670)
!3673 = !DILocation(line: 669, column: 10, scope: !3674)
!3674 = distinct !DILexicalBlock(scope: !3675, file: !288, line: 664, column: 28)
!3675 = distinct !DILexicalBlock(scope: !3670, file: !288, line: 664, column: 16)
!3676 = !DILocation(line: 670, column: 5, scope: !3674)
!3677 = !DILocation(line: 675, column: 13, scope: !3678)
!3678 = distinct !DILexicalBlock(scope: !3675, file: !288, line: 670, column: 12)
!3679 = !DILocation(line: 675, column: 27, scope: !3678)
!3680 = !DILocation(line: 675, column: 10, scope: !3678)
!3681 = !DILocation(line: 678, column: 10, scope: !3515)
!3682 = !DILocation(line: 680, column: 8, scope: !3511)
!3683 = !DILocation(line: 683, column: 14, scope: !3512)
!3684 = !DILocation(line: 684, column: 12, scope: !3518)
!3685 = !DILocation(line: 0, scope: !3518)
!3686 = !DILocation(line: 686, column: 8, scope: !3518)
!3687 = !DILocation(line: 687, column: 5, scope: !3688)
!3688 = distinct !DILexicalBlock(scope: !3689, file: !288, line: 686, column: 22)
!3689 = distinct !DILexicalBlock(scope: !3518, file: !288, line: 686, column: 8)
!3690 = !DILocation(line: 687, column: 17, scope: !3688)
!3691 = !DILocation(line: 688, column: 4, scope: !3688)
!3692 = !DILocation(line: 698, column: 18, scope: !3524)
!3693 = !DILocation(line: 0, scope: !3524)
!3694 = !DILocation(line: 700, column: 8, scope: !3524)
!3695 = !DILocation(line: 704, column: 6, scope: !3696)
!3696 = distinct !DILexicalBlock(scope: !3697, file: !288, line: 703, column: 12)
!3697 = distinct !DILexicalBlock(scope: !3698, file: !288, line: 701, column: 9)
!3698 = distinct !DILexicalBlock(scope: !3699, file: !288, line: 700, column: 22)
!3699 = distinct !DILexicalBlock(scope: !3524, file: !288, line: 700, column: 8)
!3700 = !DILocation(line: 704, column: 24, scope: !3696)
!3701 = !DILocation(line: 706, column: 4, scope: !3698)
!3702 = !DILocation(line: 709, column: 4, scope: !3703)
!3703 = distinct !DILexicalBlock(scope: !3704, file: !288, line: 709, column: 4)
!3704 = distinct !DILexicalBlock(scope: !3705, file: !288, line: 709, column: 4)
!3705 = distinct !DILexicalBlock(scope: !3706, file: !288, line: 709, column: 4)
!3706 = distinct !DILexicalBlock(scope: !3525, file: !288, line: 708, column: 10)
!3707 = !DILocation(line: 0, scope: !3519)
!3708 = !DILocation(line: 0, scope: !3505)
!3709 = !DILocation(line: 720, column: 6, scope: !3710)
!3710 = distinct !DILexicalBlock(scope: !3455, file: !288, line: 720, column: 6)
!3711 = !DILocation(line: 720, column: 17, scope: !3710)
!3712 = !DILocation(line: 720, column: 31, scope: !3710)
!3713 = !DILocation(line: 720, column: 6, scope: !3455)
!3714 = !DILocation(line: 721, column: 3, scope: !3715)
!3715 = distinct !DILexicalBlock(scope: !3716, file: !288, line: 721, column: 3)
!3716 = distinct !DILexicalBlock(scope: !3717, file: !288, line: 721, column: 3)
!3717 = distinct !DILexicalBlock(scope: !3718, file: !288, line: 721, column: 3)
!3718 = distinct !DILexicalBlock(scope: !3710, file: !288, line: 720, column: 38)
!3719 = !DILocation(line: 729, column: 6, scope: !3455)
!3720 = !DILocation(line: 730, column: 21, scope: !3721)
!3721 = distinct !DILexicalBlock(scope: !3722, file: !288, line: 729, column: 20)
!3722 = distinct !DILexicalBlock(scope: !3455, file: !288, line: 729, column: 6)
!3723 = !DILocation(line: 730, column: 27, scope: !3721)
!3724 = !DILocation(line: 730, column: 3, scope: !3721)
!3725 = !DILocation(line: 737, column: 22, scope: !3455)
!3726 = !DILocation(line: 737, column: 20, scope: !3455)
!3727 = !DILocation(line: 0, scope: !3728)
!3728 = distinct !DILexicalBlock(scope: !3455, file: !288, line: 739, column: 6)
!3729 = !DILocation(line: 745, column: 17, scope: !3730)
!3730 = distinct !DILexicalBlock(scope: !3728, file: !288, line: 743, column: 9)
!3731 = !DILocation(line: 745, column: 25, scope: !3730)
!3732 = !DILocation(line: 746, column: 17, scope: !3730)
!3733 = !DILocation(line: 746, column: 28, scope: !3730)
!3734 = !DILocation(line: 749, column: 29, scope: !3455)
!3735 = !DILocation(line: 749, column: 16, scope: !3455)
!3736 = !DILocation(line: 749, column: 27, scope: !3455)
!3737 = !DILocation(line: 756, column: 6, scope: !3531)
!3738 = !DILocation(line: 756, column: 6, scope: !3455)
!3739 = !DILocation(line: 757, column: 3, scope: !3529)
!3740 = !DILocation(line: 758, column: 10, scope: !3741)
!3741 = distinct !DILexicalBlock(scope: !3527, file: !288, line: 758, column: 8)
!3742 = !DILocation(line: 758, column: 25, scope: !3741)
!3743 = !DILocation(line: 758, column: 8, scope: !3527)
!3744 = !DILocation(line: 0, scope: !3527)
!3745 = !DILocation(line: 765, column: 8, scope: !3746)
!3746 = distinct !DILexicalBlock(scope: !3527, file: !288, line: 765, column: 8)
!3747 = !DILocation(line: 765, column: 19, scope: !3746)
!3748 = !DILocation(line: 765, column: 23, scope: !3746)
!3749 = !DILocation(line: 765, column: 8, scope: !3527)
!3750 = !DILocation(line: 762, column: 33, scope: !3527)
!3751 = !DILocation(line: 769, column: 8, scope: !3527)
!3752 = !DILocation(line: 769, column: 11, scope: !3527)
!3753 = !DILocation(line: 757, column: 27, scope: !3528)
!3754 = !DILocation(line: 757, column: 17, scope: !3528)
!3755 = distinct !{!3755, !3739, !3756}
!3756 = !DILocation(line: 770, column: 3, scope: !3529)
!3757 = !DILocation(line: 774, column: 16, scope: !3758)
!3758 = distinct !DILexicalBlock(scope: !3759, file: !288, line: 774, column: 2)
!3759 = distinct !DILexicalBlock(scope: !3455, file: !288, line: 774, column: 2)
!3760 = !DILocation(line: 774, column: 2, scope: !3759)
!3761 = !DILocation(line: 776, column: 16, scope: !3762)
!3762 = distinct !DILexicalBlock(scope: !3763, file: !288, line: 776, column: 7)
!3763 = distinct !DILexicalBlock(scope: !3758, file: !288, line: 774, column: 30)
!3764 = !DILocation(line: 776, column: 19, scope: !3762)
!3765 = !DILocation(line: 776, column: 34, scope: !3762)
!3766 = !DILocation(line: 776, column: 7, scope: !3763)
!3767 = !DILocation(line: 780, column: 7, scope: !3763)
!3768 = !DILocation(line: 782, column: 13, scope: !3769)
!3769 = distinct !DILexicalBlock(scope: !3770, file: !288, line: 780, column: 19)
!3770 = distinct !DILexicalBlock(scope: !3763, file: !288, line: 780, column: 7)
!3771 = !DILocation(line: 782, column: 8, scope: !3769)
!3772 = !DILocation(line: 782, column: 11, scope: !3769)
!3773 = !DILocation(line: 783, column: 3, scope: !3769)
!3774 = !DILocation(line: 785, column: 26, scope: !3775)
!3775 = distinct !DILexicalBlock(scope: !3770, file: !288, line: 783, column: 10)
!3776 = !DILocation(line: 785, column: 41, scope: !3775)
!3777 = !DILocation(line: 785, column: 24, scope: !3775)
!3778 = !DILocation(line: 785, column: 8, scope: !3775)
!3779 = !DILocation(line: 787, column: 52, scope: !3775)
!3780 = !DILocation(line: 789, column: 11, scope: !3775)
!3781 = !DILocation(line: 789, column: 21, scope: !3775)
!3782 = !DILocation(line: 0, scope: !3770)
!3783 = !DILocation(line: 793, column: 7, scope: !3784)
!3784 = distinct !DILexicalBlock(scope: !3763, file: !288, line: 793, column: 7)
!3785 = !DILocation(line: 793, column: 18, scope: !3784)
!3786 = !DILocation(line: 793, column: 22, scope: !3784)
!3787 = !DILocation(line: 793, column: 29, scope: !3784)
!3788 = !DILocation(line: 793, column: 7, scope: !3763)
!3789 = !DILocation(line: 797, column: 12, scope: !3763)
!3790 = !DILocation(line: 797, column: 7, scope: !3763)
!3791 = !DILocation(line: 797, column: 10, scope: !3763)
!3792 = !DILocation(line: 799, column: 3, scope: !3763)
!3793 = !DILocation(line: 800, column: 7, scope: !3763)
!3794 = !DILocation(line: 801, column: 2, scope: !3763)
!3795 = !DILocation(line: 338, column: 4, scope: !3455)
!3796 = !DILocation(line: 774, column: 26, scope: !3758)
!3797 = distinct !{!3797, !3760, !3798}
!3798 = !DILocation(line: 801, column: 2, scope: !3759)
!3799 = !DILocation(line: 808, column: 9, scope: !3455)
!3800 = !DILocation(line: 808, column: 2, scope: !3455)
!3801 = !DILocation(line: 813, column: 1, scope: !3455)
!3802 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !288, file: !288, line: 33, type: !3803, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3805)
!3803 = !DISubroutineType(types: !3804)
!3804 = !{!347, !279}
!3805 = !{!3806}
!3806 = !DILocalVariable(name: "addr", arg: 1, scope: !3802, file: !288, line: 33, type: !279)
!3807 = !DILocation(line: 0, scope: !3802)
!3808 = !DILocation(line: 41, column: 9, scope: !3802)
!3809 = !DILocation(line: 41, column: 2, scope: !3802)
!3810 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !3811, file: !3811, line: 24, type: !3812, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3814)
!3811 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3812 = !DISubroutineType(types: !3813)
!3813 = !{!347, !13}
!3814 = !{!3815}
!3815 = !DILocalVariable(name: "addr", arg: 1, scope: !3810, file: !3811, line: 24, type: !13)
!3816 = !DILocation(line: 0, scope: !3810)
!3817 = !DILocation(line: 49, column: 30, scope: !3810)
!3818 = !DILocation(line: 49, column: 57, scope: !3810)
!3819 = !DILocation(line: 49, column: 2, scope: !3810)
!3820 = distinct !DISubprogram(name: "cbprintf_package", scope: !288, file: !288, line: 815, type: !3821, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3823)
!3821 = !DISubroutineType(types: !3822)
!3822 = !{!109, !107, !232, !110, !279, null}
!3823 = !{!3824, !3825, !3826, !3827, !3828, !3829}
!3824 = !DILocalVariable(name: "packaged", arg: 1, scope: !3820, file: !288, line: 815, type: !107)
!3825 = !DILocalVariable(name: "len", arg: 2, scope: !3820, file: !288, line: 815, type: !232)
!3826 = !DILocalVariable(name: "flags", arg: 3, scope: !3820, file: !288, line: 815, type: !110)
!3827 = !DILocalVariable(name: "format", arg: 4, scope: !3820, file: !288, line: 816, type: !279)
!3828 = !DILocalVariable(name: "ap", scope: !3820, file: !288, line: 818, type: !3458)
!3829 = !DILocalVariable(name: "ret", scope: !3820, file: !288, line: 819, type: !109)
!3830 = !DILocation(line: 0, scope: !3820)
!3831 = !DILocation(line: 818, column: 2, scope: !3820)
!3832 = !DILocation(line: 818, column: 10, scope: !3820)
!3833 = !DILocation(line: 821, column: 2, scope: !3820)
!3834 = !DILocation(line: 822, column: 8, scope: !3820)
!3835 = !DILocation(line: 823, column: 2, scope: !3820)
!3836 = !DILocation(line: 825, column: 1, scope: !3820)
!3837 = !DILocation(line: 824, column: 2, scope: !3820)
!3838 = distinct !DISubprogram(name: "cbpprintf_external", scope: !288, file: !288, line: 827, type: !3839, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3849)
!3839 = !DISubroutineType(types: !3840)
!3840 = !{!109, !3841, !3845, !107, !107}
!3841 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3491, line: 297, baseType: !3842)
!3842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3843, size: 32)
!3843 = !DISubroutineType(types: !3844)
!3844 = !{!109, null}
!3845 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !3491, line: 328, baseType: !3846)
!3846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3847, size: 32)
!3847 = !DISubroutineType(types: !3848)
!3848 = !{!109, !3841, !107, !279, !3458}
!3849 = !{!3850, !3851, !3852, !3853, !3854, !3855, !3861, !3862, !3863, !3864, !3865, !3866, !3867, !3868}
!3850 = !DILocalVariable(name: "out", arg: 1, scope: !3838, file: !288, line: 827, type: !3841)
!3851 = !DILocalVariable(name: "formatter", arg: 2, scope: !3838, file: !288, line: 828, type: !3845)
!3852 = !DILocalVariable(name: "ctx", arg: 3, scope: !3838, file: !288, line: 829, type: !107)
!3853 = !DILocalVariable(name: "packaged", arg: 4, scope: !3838, file: !288, line: 829, type: !107)
!3854 = !DILocalVariable(name: "buf", scope: !3838, file: !288, line: 831, type: !286)
!3855 = !DILocalVariable(name: "hdr", scope: !3838, file: !288, line: 832, type: !3856)
!3856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3857, size: 32)
!3857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !3491, line: 96, size: 64, elements: !3858)
!3858 = !{!3859, !3860}
!3859 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !3857, file: !3491, line: 98, baseType: !3490, size: 32)
!3860 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !3857, file: !3491, line: 101, baseType: !285, size: 32, offset: 32)
!3861 = !DILocalVariable(name: "s", scope: !3838, file: !288, line: 833, type: !285)
!3862 = !DILocalVariable(name: "ps", scope: !3838, file: !288, line: 833, type: !284)
!3863 = !DILocalVariable(name: "i", scope: !3838, file: !288, line: 834, type: !32)
!3864 = !DILocalVariable(name: "args_size", scope: !3838, file: !288, line: 834, type: !32)
!3865 = !DILocalVariable(name: "s_nbr", scope: !3838, file: !288, line: 834, type: !32)
!3866 = !DILocalVariable(name: "ros_nbr", scope: !3838, file: !288, line: 834, type: !32)
!3867 = !DILocalVariable(name: "rws_nbr", scope: !3838, file: !288, line: 834, type: !32)
!3868 = !DILocalVariable(name: "s_idx", scope: !3838, file: !288, line: 834, type: !32)
!3869 = !DILocation(line: 0, scope: !3838)
!3870 = !DILocation(line: 836, column: 10, scope: !3871)
!3871 = distinct !DILexicalBlock(scope: !3838, file: !288, line: 836, column: 6)
!3872 = !DILocation(line: 836, column: 6, scope: !3838)
!3873 = !DILocation(line: 842, column: 28, scope: !3838)
!3874 = !DILocation(line: 842, column: 14, scope: !3838)
!3875 = !DILocation(line: 852, column: 16, scope: !3876)
!3876 = distinct !DILexicalBlock(scope: !3877, file: !288, line: 852, column: 2)
!3877 = distinct !DILexicalBlock(scope: !3838, file: !288, line: 852, column: 2)
!3878 = !DILocation(line: 852, column: 2, scope: !3877)
!3879 = !DILocation(line: 841, column: 28, scope: !3838)
!3880 = !DILocation(line: 841, column: 14, scope: !3838)
!3881 = !DILocation(line: 841, column: 32, scope: !3838)
!3882 = !DILocation(line: 847, column: 19, scope: !3838)
!3883 = !DILocation(line: 843, column: 28, scope: !3838)
!3884 = !DILocation(line: 843, column: 14, scope: !3838)
!3885 = !DILocation(line: 847, column: 31, scope: !3838)
!3886 = !DILocation(line: 844, column: 28, scope: !3838)
!3887 = !DILocation(line: 844, column: 14, scope: !3838)
!3888 = !DILocation(line: 847, column: 45, scope: !3838)
!3889 = !DILocation(line: 847, column: 41, scope: !3838)
!3890 = !DILocation(line: 854, column: 24, scope: !3891)
!3891 = distinct !DILexicalBlock(scope: !3876, file: !288, line: 852, column: 30)
!3892 = !DILocation(line: 854, column: 11, scope: !3891)
!3893 = !DILocation(line: 855, column: 30, scope: !3891)
!3894 = !DILocation(line: 855, column: 22, scope: !3891)
!3895 = !DILocation(line: 855, column: 8, scope: !3891)
!3896 = !DILocation(line: 857, column: 7, scope: !3891)
!3897 = !DILocation(line: 859, column: 8, scope: !3891)
!3898 = !DILocation(line: 859, column: 18, scope: !3891)
!3899 = !DILocation(line: 859, column: 5, scope: !3891)
!3900 = !DILocation(line: 852, column: 26, scope: !3876)
!3901 = distinct !{!3901, !3878, !3902}
!3902 = !DILocation(line: 860, column: 2, scope: !3877)
!3903 = !DILocation(line: 863, column: 6, scope: !3838)
!3904 = !DILocation(line: 866, column: 56, scope: !3838)
!3905 = !DILocation(line: 866, column: 9, scope: !3838)
!3906 = !DILocation(line: 866, column: 2, scope: !3838)
!3907 = !DILocation(line: 867, column: 1, scope: !3838)
!3908 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !288, file: !288, line: 179, type: !3909, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3911)
!3909 = !DISubroutineType(types: !3910)
!3910 = !{!109, !3841, !3845, !107, !279, !107}
!3911 = !{!3912, !3913, !3914, !3915, !3916, !3917}
!3912 = !DILocalVariable(name: "out", arg: 1, scope: !3908, file: !288, line: 179, type: !3841)
!3913 = !DILocalVariable(name: "formatter", arg: 2, scope: !3908, file: !288, line: 180, type: !3845)
!3914 = !DILocalVariable(name: "ctx", arg: 3, scope: !3908, file: !288, line: 181, type: !107)
!3915 = !DILocalVariable(name: "fmt", arg: 4, scope: !3908, file: !288, line: 182, type: !279)
!3916 = !DILocalVariable(name: "buf", arg: 5, scope: !3908, file: !288, line: 182, type: !107)
!3917 = !DILocalVariable(name: "u", scope: !3908, file: !288, line: 187, type: !3918)
!3918 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3908, file: !288, line: 184, size: 32, elements: !3919)
!3919 = !{!3920, !3921}
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !3918, file: !288, line: 185, baseType: !3458, size: 32)
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3918, file: !288, line: 186, baseType: !107, size: 32)
!3922 = !DILocation(line: 0, scope: !3908)
!3923 = !DILocation(line: 191, column: 9, scope: !3908)
!3924 = !DILocation(line: 191, column: 2, scope: !3908)
!3925 = distinct !DISubprogram(name: "is_ptr", scope: !288, file: !288, line: 881, type: !3926, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3928)
!3926 = !DISubroutineType(types: !3927)
!3927 = !{!347, !279, !109}
!3928 = !{!3929, !3930, !3931, !3932, !3933}
!3929 = !DILocalVariable(name: "fmt", arg: 1, scope: !3925, file: !288, line: 881, type: !279)
!3930 = !DILocalVariable(name: "n", arg: 2, scope: !3925, file: !288, line: 881, type: !109)
!3931 = !DILocalVariable(name: "c", scope: !3925, file: !288, line: 883, type: !148)
!3932 = !DILocalVariable(name: "mod", scope: !3925, file: !288, line: 884, type: !347)
!3933 = !DILocalVariable(name: "cnt", scope: !3925, file: !288, line: 885, type: !109)
!3934 = !DILocation(line: 0, scope: !3925)
!3935 = !DILocation(line: 887, column: 14, scope: !3925)
!3936 = !DILocation(line: 887, column: 22, scope: !3925)
!3937 = !DILocation(line: 887, column: 2, scope: !3925)
!3938 = !DILocation(line: 887, column: 18, scope: !3925)
!3939 = !DILocation(line: 888, column: 7, scope: !3940)
!3940 = distinct !DILexicalBlock(scope: !3925, file: !288, line: 887, column: 31)
!3941 = !DILocation(line: 889, column: 12, scope: !3942)
!3942 = distinct !DILexicalBlock(scope: !3943, file: !288, line: 889, column: 8)
!3943 = distinct !DILexicalBlock(scope: !3944, file: !288, line: 888, column: 12)
!3944 = distinct !DILexicalBlock(scope: !3940, file: !288, line: 888, column: 7)
!3945 = !DILocation(line: 889, column: 8, scope: !3943)
!3946 = !DILocation(line: 890, column: 11, scope: !3947)
!3947 = distinct !DILexicalBlock(scope: !3948, file: !288, line: 890, column: 9)
!3948 = distinct !DILexicalBlock(scope: !3942, file: !288, line: 889, column: 18)
!3949 = !DILocation(line: 890, column: 9, scope: !3948)
!3950 = !DILocation(line: 892, column: 16, scope: !3951)
!3951 = distinct !DILexicalBlock(scope: !3947, file: !288, line: 892, column: 16)
!3952 = !DILocation(line: 892, column: 16, scope: !3947)
!3953 = !DILocation(line: 895, column: 15, scope: !3954)
!3954 = distinct !DILexicalBlock(scope: !3942, file: !288, line: 895, column: 15)
!3955 = !DILocation(line: 895, column: 15, scope: !3942)
!3956 = !DILocation(line: 900, column: 9, scope: !3957)
!3957 = distinct !DILexicalBlock(scope: !3940, file: !288, line: 900, column: 7)
!3958 = !DILocation(line: 900, column: 7, scope: !3940)
!3959 = distinct !{!3959, !3937, !3960}
!3960 = !DILocation(line: 903, column: 2, scope: !3925)
!3961 = !DILocation(line: 906, column: 1, scope: !3925)
!3962 = distinct !DISubprogram(name: "is_fmt_spec", scope: !288, file: !288, line: 873, type: !3963, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3965)
!3963 = !DISubroutineType(types: !3964)
!3964 = !{!347, !148}
!3965 = !{!3966}
!3966 = !DILocalVariable(name: "c", arg: 1, scope: !3962, file: !288, line: 873, type: !148)
!3967 = !DILocation(line: 0, scope: !3962)
!3968 = !DILocation(line: 875, column: 19, scope: !3962)
!3969 = !DILocation(line: 875, column: 2, scope: !3962)
!3970 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !288, file: !288, line: 908, type: !3971, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3977)
!3971 = !DISubroutineType(types: !3972)
!3972 = !{!109, !107, !232, !3973, !107, !110, !2863, !232}
!3973 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !3491, line: 308, baseType: !3974)
!3974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3975, size: 32)
!3975 = !DISubroutineType(types: !3976)
!3976 = !{!109, !13, !232, !107}
!3977 = !{!3978, !3979, !3980, !3981, !3982, !3983, !3984, !3985, !3986, !3987, !3988, !3989, !3990, !3991, !3992, !3993, !3995, !3996, !3997, !3998, !3999, !4005, !4008, !4009, !4010, !4012, !4015, !4016, !4017, !4018, !4019, !4020, !4021, !4022, !4023, !4024, !4025, !4026, !4028, !4031, !4032, !4033, !4034, !4035, !4036, !4038, !4041, !4042, !4043}
!3978 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !3970, file: !288, line: 908, type: !107)
!3979 = !DILocalVariable(name: "in_len", arg: 2, scope: !3970, file: !288, line: 909, type: !232)
!3980 = !DILocalVariable(name: "cb", arg: 3, scope: !3970, file: !288, line: 910, type: !3973)
!3981 = !DILocalVariable(name: "ctx", arg: 4, scope: !3970, file: !288, line: 911, type: !107)
!3982 = !DILocalVariable(name: "flags", arg: 5, scope: !3970, file: !288, line: 912, type: !110)
!3983 = !DILocalVariable(name: "strl", arg: 6, scope: !3970, file: !288, line: 913, type: !2863)
!3984 = !DILocalVariable(name: "strl_len", arg: 7, scope: !3970, file: !288, line: 914, type: !232)
!3985 = !DILocalVariable(name: "buf", scope: !3970, file: !288, line: 918, type: !286)
!3986 = !DILocalVariable(name: "buf32", scope: !3970, file: !288, line: 919, type: !902)
!3987 = !DILocalVariable(name: "args_size", scope: !3970, file: !288, line: 920, type: !32)
!3988 = !DILocalVariable(name: "ros_nbr", scope: !3970, file: !288, line: 920, type: !32)
!3989 = !DILocalVariable(name: "rws_nbr", scope: !3970, file: !288, line: 920, type: !32)
!3990 = !DILocalVariable(name: "fmt_present", scope: !3970, file: !288, line: 921, type: !347)
!3991 = !DILocalVariable(name: "rw_cpy", scope: !3970, file: !288, line: 922, type: !347)
!3992 = !DILocalVariable(name: "ro_cpy", scope: !3970, file: !288, line: 923, type: !347)
!3993 = !DILocalVariable(name: "in_desc", scope: !3970, file: !288, line: 924, type: !3994)
!3994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3494, size: 32)
!3995 = !DILocalVariable(name: "out_len", scope: !3970, file: !288, line: 960, type: !109)
!3996 = !DILocalVariable(name: "fmt", scope: !3970, file: !288, line: 965, type: !279)
!3997 = !DILocalVariable(name: "str_pos", scope: !3970, file: !288, line: 966, type: !286)
!3998 = !DILocalVariable(name: "strl_cnt", scope: !3970, file: !288, line: 967, type: !232)
!3999 = !DILocalVariable(name: "i", scope: !4000, file: !288, line: 973, type: !109)
!4000 = distinct !DILexicalBlock(scope: !4001, file: !288, line: 973, column: 4)
!4001 = distinct !DILexicalBlock(scope: !4002, file: !288, line: 972, column: 15)
!4002 = distinct !DILexicalBlock(scope: !4003, file: !288, line: 972, column: 7)
!4003 = distinct !DILexicalBlock(scope: !4004, file: !288, line: 970, column: 18)
!4004 = distinct !DILexicalBlock(scope: !3970, file: !288, line: 970, column: 6)
!4005 = !DILocalVariable(name: "str", scope: !4006, file: !288, line: 974, type: !279)
!4006 = distinct !DILexicalBlock(scope: !4007, file: !288, line: 973, column: 38)
!4007 = distinct !DILexicalBlock(scope: !4000, file: !288, line: 973, column: 4)
!4008 = !DILocalVariable(name: "len", scope: !4006, file: !288, line: 975, type: !109)
!4009 = !DILocalVariable(name: "drop_ro_str_pos", scope: !4003, file: !288, line: 990, type: !347)
!4010 = !DILocalVariable(name: "i", scope: !4011, file: !288, line: 995, type: !109)
!4011 = distinct !DILexicalBlock(scope: !4003, file: !288, line: 995, column: 3)
!4012 = !DILocalVariable(name: "arg_idx", scope: !4013, file: !288, line: 996, type: !178)
!4013 = distinct !DILexicalBlock(scope: !4014, file: !288, line: 995, column: 37)
!4014 = distinct !DILexicalBlock(scope: !4011, file: !288, line: 995, column: 3)
!4015 = !DILocalVariable(name: "arg_pos", scope: !4013, file: !288, line: 997, type: !178)
!4016 = !DILocalVariable(name: "str", scope: !4013, file: !288, line: 998, type: !279)
!4017 = !DILocalVariable(name: "is_ro", scope: !4013, file: !288, line: 999, type: !347)
!4018 = !DILocalVariable(name: "len", scope: !4013, file: !288, line: 1000, type: !109)
!4019 = !DILocalVariable(name: "out_desc", scope: !3970, file: !288, line: 1038, type: !3494)
!4020 = !DILocalVariable(name: "cpy_str_pos", scope: !3970, file: !288, line: 1040, type: !3476)
!4021 = !DILocalVariable(name: "keep_str_pos", scope: !3970, file: !288, line: 1042, type: !3476)
!4022 = !DILocalVariable(name: "scpy_cnt", scope: !3970, file: !288, line: 1043, type: !178)
!4023 = !DILocalVariable(name: "keep_cnt", scope: !3970, file: !288, line: 1044, type: !178)
!4024 = !DILocalVariable(name: "dst", scope: !3970, file: !288, line: 1045, type: !286)
!4025 = !DILocalVariable(name: "rv", scope: !3970, file: !288, line: 1046, type: !109)
!4026 = !DILocalVariable(name: "i", scope: !4027, file: !288, line: 1074, type: !109)
!4027 = distinct !DILexicalBlock(scope: !3970, file: !288, line: 1074, column: 2)
!4028 = !DILocalVariable(name: "arg_idx", scope: !4029, file: !288, line: 1075, type: !178)
!4029 = distinct !DILexicalBlock(scope: !4030, file: !288, line: 1074, column: 36)
!4030 = distinct !DILexicalBlock(scope: !4027, file: !288, line: 1074, column: 2)
!4031 = !DILocalVariable(name: "arg_pos", scope: !4029, file: !288, line: 1076, type: !178)
!4032 = !DILocalVariable(name: "str", scope: !4029, file: !288, line: 1077, type: !279)
!4033 = !DILocalVariable(name: "is_ro", scope: !4029, file: !288, line: 1078, type: !347)
!4034 = !DILocalVariable(name: "in_desc_backup", scope: !3970, file: !288, line: 1114, type: !3494)
!4035 = !DILocalVariable(name: "strs_len", scope: !3970, file: !288, line: 1134, type: !232)
!4036 = !DILocalVariable(name: "i", scope: !4037, file: !288, line: 1143, type: !109)
!4037 = distinct !DILexicalBlock(scope: !3970, file: !288, line: 1143, column: 2)
!4038 = !DILocalVariable(name: "loc", scope: !4039, file: !288, line: 1144, type: !178)
!4039 = distinct !DILexicalBlock(scope: !4040, file: !288, line: 1143, column: 37)
!4040 = distinct !DILexicalBlock(scope: !4037, file: !288, line: 1143, column: 2)
!4041 = !DILocalVariable(name: "str", scope: !4039, file: !288, line: 1145, type: !279)
!4042 = !DILocalVariable(name: "str_len", scope: !4039, file: !288, line: 1146, type: !192)
!4043 = !DILabel(scope: !4044, name: "calculate_string_length", file: !288, line: 1021)
!4044 = distinct !DILexicalBlock(scope: !4045, file: !288, line: 1020, column: 56)
!4045 = distinct !DILexicalBlock(scope: !4046, file: !288, line: 1020, column: 15)
!4046 = distinct !DILexicalBlock(scope: !4013, file: !288, line: 1014, column: 8)
!4047 = !DILocation(line: 0, scope: !3970)
!4048 = !DILocation(line: 916, column: 2, scope: !4049)
!4049 = distinct !DILexicalBlock(scope: !4050, file: !288, line: 916, column: 2)
!4050 = distinct !DILexicalBlock(scope: !3970, file: !288, line: 916, column: 2)
!4051 = !DILocation(line: 916, column: 2, scope: !4050)
!4052 = !DILocation(line: 916, column: 2, scope: !4053)
!4053 = distinct !DILexicalBlock(scope: !4049, file: !288, line: 916, column: 2)
!4054 = !DILocation(line: 919, column: 20, scope: !3970)
!4055 = !DILocation(line: 921, column: 27, scope: !3970)
!4056 = !DILocation(line: 921, column: 21, scope: !3970)
!4057 = !DILocation(line: 926, column: 18, scope: !3970)
!4058 = !DILocation(line: 926, column: 11, scope: !3970)
!4059 = !DILocation(line: 926, column: 34, scope: !3970)
!4060 = !DILocation(line: 931, column: 21, scope: !3970)
!4061 = !DILocation(line: 931, column: 12, scope: !3970)
!4062 = !DILocation(line: 932, column: 11, scope: !3970)
!4063 = !DILocation(line: 932, column: 19, scope: !3970)
!4064 = !DILocation(line: 938, column: 21, scope: !3970)
!4065 = !DILocation(line: 938, column: 12, scope: !3970)
!4066 = !DILocation(line: 939, column: 19, scope: !3970)
!4067 = !DILocation(line: 939, column: 23, scope: !3970)
!4068 = !DILocation(line: 946, column: 14, scope: !4069)
!4069 = distinct !DILexicalBlock(scope: !3970, file: !288, line: 946, column: 6)
!4070 = !DILocation(line: 947, column: 7, scope: !4071)
!4071 = distinct !DILexicalBlock(scope: !4072, file: !288, line: 947, column: 7)
!4072 = distinct !DILexicalBlock(scope: !4069, file: !288, line: 946, column: 26)
!4073 = !DILocation(line: 947, column: 7, scope: !4072)
!4074 = !DILocation(line: 948, column: 4, scope: !4075)
!4075 = distinct !DILexicalBlock(scope: !4071, file: !288, line: 947, column: 11)
!4076 = !DILocation(line: 949, column: 3, scope: !4075)
!4077 = !DILocation(line: 958, column: 23, scope: !3970)
!4078 = !DILocation(line: 958, column: 14, scope: !3970)
!4079 = !DILocation(line: 958, column: 27, scope: !3970)
!4080 = !DILocation(line: 965, column: 41, scope: !3970)
!4081 = !DILocation(line: 965, column: 20, scope: !3970)
!4082 = !DILocation(line: 966, column: 22, scope: !3970)
!4083 = !DILocation(line: 970, column: 9, scope: !4004)
!4084 = !DILocation(line: 970, column: 6, scope: !3970)
!4085 = !DILocation(line: 972, column: 7, scope: !4003)
!4086 = !DILocation(line: 0, scope: !4000)
!4087 = !DILocation(line: 973, column: 4, scope: !4000)
!4088 = !DILocation(line: 974, column: 46, scope: !4006)
!4089 = !DILocation(line: 974, column: 40, scope: !4006)
!4090 = !DILocation(line: 974, column: 23, scope: !4006)
!4091 = !DILocation(line: 0, scope: !4006)
!4092 = !DILocation(line: 975, column: 15, scope: !4006)
!4093 = !DILocation(line: 978, column: 14, scope: !4094)
!4094 = distinct !DILexicalBlock(scope: !4006, file: !288, line: 978, column: 9)
!4095 = !DILocation(line: 979, column: 25, scope: !4096)
!4096 = distinct !DILexicalBlock(scope: !4094, file: !288, line: 978, column: 38)
!4097 = !DILocation(line: 979, column: 19, scope: !4096)
!4098 = !DILocation(line: 979, column: 6, scope: !4096)
!4099 = !DILocation(line: 979, column: 23, scope: !4096)
!4100 = !DILocation(line: 980, column: 5, scope: !4096)
!4101 = !DILocation(line: 981, column: 13, scope: !4006)
!4102 = !DILocation(line: 982, column: 12, scope: !4006)
!4103 = !DILocation(line: 973, column: 34, scope: !4007)
!4104 = !DILocation(line: 973, column: 22, scope: !4007)
!4105 = distinct !{!4105, !4087, !4106}
!4106 = !DILocation(line: 983, column: 4, scope: !4000)
!4107 = !DILocation(line: 985, column: 16, scope: !4108)
!4108 = distinct !DILexicalBlock(scope: !4109, file: !288, line: 985, column: 8)
!4109 = distinct !DILexicalBlock(scope: !4002, file: !288, line: 984, column: 10)
!4110 = !DILocation(line: 967, column: 9, scope: !3970)
!4111 = !DILocation(line: 971, column: 11, scope: !4003)
!4112 = !DILocation(line: 0, scope: !4003)
!4113 = !DILocation(line: 0, scope: !4011)
!4114 = !DILocation(line: 995, column: 21, scope: !4014)
!4115 = !DILocation(line: 995, column: 3, scope: !4011)
!4116 = !DILocation(line: 990, column: 34, scope: !4003)
!4117 = !DILocation(line: 990, column: 26, scope: !4003)
!4118 = !DILocation(line: 996, column: 30, scope: !4013)
!4119 = !DILocation(line: 0, scope: !4013)
!4120 = !DILocation(line: 997, column: 30, scope: !4013)
!4121 = !DILocation(line: 997, column: 22, scope: !4013)
!4122 = !DILocation(line: 998, column: 39, scope: !4013)
!4123 = !DILocation(line: 998, column: 22, scope: !4013)
!4124 = !DILocation(line: 999, column: 17, scope: !4013)
!4125 = !DILocation(line: 1002, column: 20, scope: !4126)
!4126 = distinct !DILexicalBlock(scope: !4013, file: !288, line: 1002, column: 8)
!4127 = !DILocation(line: 996, column: 22, scope: !4013)
!4128 = !DILocation(line: 1002, column: 35, scope: !4126)
!4129 = !DILocation(line: 1002, column: 23, scope: !4126)
!4130 = !DILocation(line: 1002, column: 8, scope: !4013)
!4131 = !DILocation(line: 1003, column: 5, scope: !4132)
!4132 = distinct !DILexicalBlock(scope: !4133, file: !288, line: 1003, column: 5)
!4133 = distinct !DILexicalBlock(scope: !4134, file: !288, line: 1003, column: 5)
!4134 = distinct !DILexicalBlock(scope: !4135, file: !288, line: 1003, column: 5)
!4135 = distinct !DILexicalBlock(scope: !4136, file: !288, line: 1003, column: 5)
!4136 = distinct !DILexicalBlock(scope: !4126, file: !288, line: 1002, column: 45)
!4137 = !DILocation(line: 1010, column: 13, scope: !4136)
!4138 = !DILocation(line: 1011, column: 5, scope: !4136)
!4139 = !DILocation(line: 1014, column: 8, scope: !4013)
!4140 = !DILocation(line: 1015, column: 9, scope: !4141)
!4141 = distinct !DILexicalBlock(scope: !4046, file: !288, line: 1014, column: 15)
!4142 = !DILocation(line: 1018, column: 14, scope: !4143)
!4143 = distinct !DILexicalBlock(scope: !4144, file: !288, line: 1017, column: 12)
!4144 = distinct !DILexicalBlock(scope: !4141, file: !288, line: 1015, column: 9)
!4145 = !DILocation(line: 1020, column: 4, scope: !4141)
!4146 = !DILocation(line: 1020, column: 15, scope: !4046)
!4147 = !DILocation(line: 1021, column: 1, scope: !4044)
!4148 = !DILocation(line: 1022, column: 11, scope: !4044)
!4149 = !DILocation(line: 1025, column: 14, scope: !4150)
!4150 = distinct !DILexicalBlock(scope: !4044, file: !288, line: 1025, column: 9)
!4151 = !DILocation(line: 1026, column: 25, scope: !4152)
!4152 = distinct !DILexicalBlock(scope: !4150, file: !288, line: 1025, column: 38)
!4153 = !DILocation(line: 1026, column: 19, scope: !4152)
!4154 = !DILocation(line: 1026, column: 6, scope: !4152)
!4155 = !DILocation(line: 1026, column: 23, scope: !4152)
!4156 = !DILocation(line: 1027, column: 5, scope: !4152)
!4157 = !DILocation(line: 1031, column: 21, scope: !4044)
!4158 = !DILocation(line: 1031, column: 13, scope: !4044)
!4159 = !DILocation(line: 1032, column: 4, scope: !4044)
!4160 = !DILocation(line: 995, column: 33, scope: !4014)
!4161 = distinct !{!4161, !4115, !4162}
!4162 = !DILocation(line: 1033, column: 3, scope: !4011)
!4163 = !DILocation(line: 1040, column: 10, scope: !3970)
!4164 = !DILocation(line: 1042, column: 10, scope: !3970)
!4165 = !DILocation(line: 1052, column: 6, scope: !3970)
!4166 = !DILocation(line: 1055, column: 9, scope: !4167)
!4167 = distinct !DILexicalBlock(scope: !4168, file: !288, line: 1052, column: 14)
!4168 = distinct !DILexicalBlock(scope: !3970, file: !288, line: 1052, column: 6)
!4169 = !DILocation(line: 1056, column: 2, scope: !4167)
!4170 = !DILocation(line: 1056, column: 21, scope: !4171)
!4171 = distinct !DILexicalBlock(scope: !4168, file: !288, line: 1056, column: 13)
!4172 = !DILocation(line: 1066, column: 3, scope: !4173)
!4173 = distinct !DILexicalBlock(scope: !4174, file: !288, line: 1065, column: 11)
!4174 = distinct !DILexicalBlock(scope: !3970, file: !288, line: 1065, column: 6)
!4175 = !DILocation(line: 1067, column: 2, scope: !4173)
!4176 = !DILocation(line: 1068, column: 10, scope: !3970)
!4177 = !DILocation(line: 0, scope: !4027)
!4178 = !DILocation(line: 1074, column: 20, scope: !4030)
!4179 = !DILocation(line: 1074, column: 2, scope: !4027)
!4180 = !DILocation(line: 1110, column: 24, scope: !3970)
!4181 = !DILocation(line: 1053, column: 12, scope: !4167)
!4182 = !DILocation(line: 1054, column: 12, scope: !4167)
!4183 = !DILocation(line: 1108, column: 30, scope: !3970)
!4184 = !DILocation(line: 1108, column: 40, scope: !3970)
!4185 = !DILocation(line: 1108, column: 38, scope: !3970)
!4186 = !DILocation(line: 1109, column: 31, scope: !3970)
!4187 = !DILocation(line: 1109, column: 24, scope: !3970)
!4188 = !DILocation(line: 1110, column: 31, scope: !3970)
!4189 = !DILocation(line: 1114, column: 31, scope: !3970)
!4190 = !DILocation(line: 1114, column: 48, scope: !3970)
!4191 = !DILocation(line: 1115, column: 13, scope: !3970)
!4192 = !DILocation(line: 1118, column: 7, scope: !3970)
!4193 = !DILocation(line: 1119, column: 9, scope: !4194)
!4194 = distinct !DILexicalBlock(scope: !3970, file: !288, line: 1119, column: 6)
!4195 = !DILocation(line: 1119, column: 6, scope: !3970)
!4196 = !DILocation(line: 1075, column: 29, scope: !4029)
!4197 = !DILocation(line: 1075, column: 21, scope: !4029)
!4198 = !DILocation(line: 0, scope: !4029)
!4199 = !DILocation(line: 1076, column: 29, scope: !4029)
!4200 = !DILocation(line: 1076, column: 21, scope: !4029)
!4201 = !DILocation(line: 1077, column: 38, scope: !4029)
!4202 = !DILocation(line: 1077, column: 21, scope: !4029)
!4203 = !DILocation(line: 1078, column: 16, scope: !4029)
!4204 = !DILocation(line: 1080, column: 19, scope: !4205)
!4205 = distinct !DILexicalBlock(scope: !4029, file: !288, line: 1080, column: 7)
!4206 = !DILocation(line: 1080, column: 34, scope: !4205)
!4207 = !DILocation(line: 1080, column: 22, scope: !4205)
!4208 = !DILocation(line: 1080, column: 7, scope: !4029)
!4209 = !DILocation(line: 1084, column: 7, scope: !4029)
!4210 = !DILocation(line: 1085, column: 8, scope: !4211)
!4211 = distinct !DILexicalBlock(scope: !4212, file: !288, line: 1084, column: 14)
!4212 = distinct !DILexicalBlock(scope: !4029, file: !288, line: 1084, column: 7)
!4213 = !DILocation(line: 1086, column: 5, scope: !4214)
!4214 = distinct !DILexicalBlock(scope: !4215, file: !288, line: 1086, column: 5)
!4215 = distinct !DILexicalBlock(scope: !4216, file: !288, line: 1086, column: 5)
!4216 = distinct !DILexicalBlock(scope: !4217, file: !288, line: 1085, column: 49)
!4217 = distinct !DILexicalBlock(scope: !4211, file: !288, line: 1085, column: 8)
!4218 = !DILocation(line: 1086, column: 5, scope: !4215)
!4219 = !DILocation(line: 1086, column: 5, scope: !4220)
!4220 = distinct !DILexicalBlock(scope: !4214, file: !288, line: 1086, column: 5)
!4221 = !DILocation(line: 1087, column: 25, scope: !4216)
!4222 = !DILocation(line: 1087, column: 5, scope: !4216)
!4223 = !DILocation(line: 1088, column: 4, scope: !4216)
!4224 = !DILocation(line: 1088, column: 15, scope: !4217)
!4225 = !DILocation(line: 1089, column: 5, scope: !4226)
!4226 = distinct !DILexicalBlock(scope: !4227, file: !288, line: 1089, column: 5)
!4227 = distinct !DILexicalBlock(scope: !4228, file: !288, line: 1089, column: 5)
!4228 = distinct !DILexicalBlock(scope: !4229, file: !288, line: 1088, column: 61)
!4229 = distinct !DILexicalBlock(scope: !4217, file: !288, line: 1088, column: 15)
!4230 = !DILocation(line: 1089, column: 5, scope: !4227)
!4231 = !DILocation(line: 1089, column: 5, scope: !4232)
!4232 = distinct !DILexicalBlock(scope: !4226, file: !288, line: 1089, column: 5)
!4233 = !DILocation(line: 1090, column: 26, scope: !4228)
!4234 = !DILocation(line: 1090, column: 5, scope: !4228)
!4235 = !DILocation(line: 1091, column: 4, scope: !4228)
!4236 = !DILocation(line: 1095, column: 8, scope: !4237)
!4237 = distinct !DILexicalBlock(scope: !4212, file: !288, line: 1094, column: 10)
!4238 = !DILocation(line: 1096, column: 5, scope: !4239)
!4239 = distinct !DILexicalBlock(scope: !4240, file: !288, line: 1096, column: 5)
!4240 = distinct !DILexicalBlock(scope: !4241, file: !288, line: 1096, column: 5)
!4241 = distinct !DILexicalBlock(scope: !4242, file: !288, line: 1095, column: 49)
!4242 = distinct !DILexicalBlock(scope: !4237, file: !288, line: 1095, column: 8)
!4243 = !DILocation(line: 1096, column: 5, scope: !4240)
!4244 = !DILocation(line: 1096, column: 5, scope: !4245)
!4245 = distinct !DILexicalBlock(scope: !4239, file: !288, line: 1096, column: 5)
!4246 = !DILocation(line: 1097, column: 25, scope: !4241)
!4247 = !DILocation(line: 1097, column: 5, scope: !4241)
!4248 = !DILocation(line: 1098, column: 4, scope: !4241)
!4249 = !DILocation(line: 1099, column: 5, scope: !4250)
!4250 = distinct !DILexicalBlock(scope: !4251, file: !288, line: 1099, column: 5)
!4251 = distinct !DILexicalBlock(scope: !4252, file: !288, line: 1099, column: 5)
!4252 = distinct !DILexicalBlock(scope: !4242, file: !288, line: 1098, column: 11)
!4253 = !DILocation(line: 1099, column: 5, scope: !4251)
!4254 = !DILocation(line: 1099, column: 5, scope: !4255)
!4255 = distinct !DILexicalBlock(scope: !4250, file: !288, line: 1099, column: 5)
!4256 = !DILocation(line: 1100, column: 26, scope: !4252)
!4257 = !DILocation(line: 1100, column: 5, scope: !4252)
!4258 = !DILocation(line: 1100, column: 30, scope: !4252)
!4259 = !DILocation(line: 1101, column: 26, scope: !4252)
!4260 = !DILocation(line: 1101, column: 5, scope: !4252)
!4261 = !DILocation(line: 0, scope: !4212)
!4262 = !DILocation(line: 1074, column: 32, scope: !4030)
!4263 = distinct !{!4263, !4179, !4264}
!4264 = !DILocation(line: 1104, column: 2, scope: !4027)
!4265 = !DILocation(line: 1124, column: 13, scope: !3970)
!4266 = !DILocation(line: 1127, column: 10, scope: !3970)
!4267 = !DILocation(line: 1127, column: 7, scope: !3970)
!4268 = !DILocation(line: 1128, column: 9, scope: !4269)
!4269 = distinct !DILexicalBlock(scope: !3970, file: !288, line: 1128, column: 6)
!4270 = !DILocation(line: 1128, column: 6, scope: !3970)
!4271 = !DILocation(line: 1134, column: 27, scope: !3970)
!4272 = !DILocation(line: 1136, column: 7, scope: !3970)
!4273 = !DILocation(line: 1137, column: 9, scope: !4274)
!4274 = distinct !DILexicalBlock(scope: !3970, file: !288, line: 1137, column: 6)
!4275 = !DILocation(line: 1137, column: 6, scope: !3970)
!4276 = !DILocation(line: 1131, column: 10, scope: !3970)
!4277 = !DILocation(line: 1140, column: 10, scope: !3970)
!4278 = !DILocation(line: 0, scope: !4037)
!4279 = !DILocation(line: 1143, column: 20, scope: !4040)
!4280 = !DILocation(line: 1143, column: 2, scope: !4037)
!4281 = !DILocation(line: 1144, column: 3, scope: !4039)
!4282 = !DILocation(line: 1144, column: 17, scope: !4039)
!4283 = !DILocation(line: 0, scope: !4039)
!4284 = !DILocation(line: 1144, column: 11, scope: !4039)
!4285 = !DILocation(line: 1145, column: 38, scope: !4039)
!4286 = !DILocation(line: 1145, column: 21, scope: !4039)
!4287 = !DILocation(line: 1146, column: 22, scope: !4039)
!4288 = !DILocation(line: 1146, column: 29, scope: !4039)
!4289 = !DILocation(line: 1148, column: 8, scope: !4039)
!4290 = !DILocation(line: 1149, column: 10, scope: !4291)
!4291 = distinct !DILexicalBlock(scope: !4039, file: !288, line: 1149, column: 7)
!4292 = !DILocation(line: 1149, column: 7, scope: !4039)
!4293 = !DILocation(line: 1154, column: 8, scope: !4039)
!4294 = !DILocation(line: 1155, column: 10, scope: !4295)
!4295 = distinct !DILexicalBlock(scope: !4039, file: !288, line: 1155, column: 7)
!4296 = !DILocation(line: 1155, column: 7, scope: !4039)
!4297 = !DILocation(line: 1159, column: 2, scope: !4040)
!4298 = !DILocation(line: 1152, column: 11, scope: !4039)
!4299 = !DILocation(line: 1158, column: 11, scope: !4039)
!4300 = !DILocation(line: 1143, column: 33, scope: !4040)
!4301 = distinct !{!4301, !4280, !4302}
!4302 = !DILocation(line: 1159, column: 2, scope: !4037)
!4303 = !DILocation(line: 1162, column: 8, scope: !3970)
!4304 = !DILocation(line: 1164, column: 2, scope: !3970)
!4305 = !DILocation(line: 1165, column: 1, scope: !3970)
!4306 = distinct !DISubprogram(name: "get_package_len", scope: !288, file: !288, line: 196, type: !4307, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !4309)
!4307 = !DISubroutineType(types: !4308)
!4308 = !{!232, !107}
!4309 = !{!4310, !4311, !4312, !4313, !4314, !4315, !4316}
!4310 = !DILocalVariable(name: "packaged", arg: 1, scope: !4306, file: !288, line: 196, type: !107)
!4311 = !DILocalVariable(name: "buf", scope: !4306, file: !288, line: 200, type: !286)
!4312 = !DILocalVariable(name: "start", scope: !4306, file: !288, line: 201, type: !286)
!4313 = !DILocalVariable(name: "args_size", scope: !4306, file: !288, line: 202, type: !32)
!4314 = !DILocalVariable(name: "s_nbr", scope: !4306, file: !288, line: 202, type: !32)
!4315 = !DILocalVariable(name: "ros_nbr", scope: !4306, file: !288, line: 202, type: !32)
!4316 = !DILocalVariable(name: "i", scope: !4317, file: !288, line: 215, type: !109)
!4317 = distinct !DILexicalBlock(scope: !4306, file: !288, line: 215, column: 2)
!4318 = !DILocation(line: 0, scope: !4306)
!4319 = !DILocation(line: 198, column: 2, scope: !4320)
!4320 = distinct !DILexicalBlock(scope: !4321, file: !288, line: 198, column: 2)
!4321 = distinct !DILexicalBlock(scope: !4306, file: !288, line: 198, column: 2)
!4322 = !DILocation(line: 198, column: 2, scope: !4321)
!4323 = !DILocation(line: 198, column: 2, scope: !4324)
!4324 = distinct !DILexicalBlock(scope: !4320, file: !288, line: 198, column: 2)
!4325 = !DILocation(line: 204, column: 14, scope: !4306)
!4326 = !DILocation(line: 204, column: 21, scope: !4306)
!4327 = !DILocation(line: 205, column: 14, scope: !4306)
!4328 = !DILocation(line: 206, column: 14, scope: !4306)
!4329 = !DILocation(line: 209, column: 6, scope: !4306)
!4330 = !DILocation(line: 212, column: 6, scope: !4306)
!4331 = !DILocation(line: 0, scope: !4317)
!4332 = !DILocation(line: 215, column: 20, scope: !4333)
!4333 = distinct !DILexicalBlock(scope: !4317, file: !288, line: 215, column: 2)
!4334 = !DILocation(line: 215, column: 2, scope: !4317)
!4335 = !DILocation(line: 220, column: 33, scope: !4306)
!4336 = !DILocation(line: 220, column: 2, scope: !4306)
!4337 = !DILocation(line: 216, column: 6, scope: !4338)
!4338 = distinct !DILexicalBlock(scope: !4333, file: !288, line: 215, column: 34)
!4339 = !DILocation(line: 217, column: 10, scope: !4338)
!4340 = !DILocation(line: 217, column: 36, scope: !4338)
!4341 = !DILocation(line: 217, column: 7, scope: !4338)
!4342 = !DILocation(line: 215, column: 30, scope: !4333)
!4343 = distinct !{!4343, !4334, !4344}
!4344 = !DILocation(line: 218, column: 2, scope: !4317)
!4345 = distinct !DISubprogram(name: "append_string", scope: !288, file: !288, line: 223, type: !4346, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !4348)
!4346 = !DISubroutineType(types: !4347)
!4347 = !{!109, !3973, !107, !279, !192}
!4348 = !{!4349, !4350, !4351, !4352}
!4349 = !DILocalVariable(name: "cb", arg: 1, scope: !4345, file: !288, line: 223, type: !3973)
!4350 = !DILocalVariable(name: "ctx", arg: 2, scope: !4345, file: !288, line: 223, type: !107)
!4351 = !DILocalVariable(name: "str", arg: 3, scope: !4345, file: !288, line: 223, type: !279)
!4352 = !DILocalVariable(name: "strl", arg: 4, scope: !4345, file: !288, line: 223, type: !192)
!4353 = !DILocation(line: 0, scope: !4345)
!4354 = !DILocation(line: 225, column: 9, scope: !4355)
!4355 = distinct !DILexicalBlock(scope: !4345, file: !288, line: 225, column: 6)
!4356 = !DILocation(line: 225, column: 6, scope: !4345)
!4357 = !DILocation(line: 226, column: 14, scope: !4358)
!4358 = distinct !DILexicalBlock(scope: !4355, file: !288, line: 225, column: 18)
!4359 = !DILocation(line: 226, column: 12, scope: !4358)
!4360 = !DILocation(line: 226, column: 3, scope: !4358)
!4361 = !DILocation(line: 229, column: 14, scope: !4345)
!4362 = !DILocation(line: 229, column: 9, scope: !4345)
!4363 = !DILocation(line: 229, column: 27, scope: !4345)
!4364 = !DILocation(line: 229, column: 39, scope: !4345)
!4365 = !DILocation(line: 230, column: 17, scope: !4345)
!4366 = !DILocation(line: 230, column: 9, scope: !4345)
!4367 = !DILocation(line: 230, column: 2, scope: !4345)
!4368 = !DILocation(line: 231, column: 1, scope: !4345)
!4369 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !301, file: !301, line: 45, type: !303, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4370)
!4370 = !{!4371}
!4371 = !DILocalVariable(name: "c", arg: 1, scope: !4369, file: !301, line: 45, type: !109)
!4372 = !DILocation(line: 0, scope: !4369)
!4373 = !DILocation(line: 50, column: 2, scope: !4369)
!4374 = distinct !DISubprogram(name: "__printk_hook_install", scope: !301, file: !301, line: 63, type: !4375, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4377)
!4375 = !DISubroutineType(types: !4376)
!4376 = !{null, !302}
!4377 = !{!4378}
!4378 = !DILocalVariable(name: "fn", arg: 1, scope: !4374, file: !301, line: 63, type: !302)
!4379 = !DILocation(line: 0, scope: !4374)
!4380 = !DILocation(line: 65, column: 12, scope: !4374)
!4381 = !DILocation(line: 66, column: 1, scope: !4374)
!4382 = distinct !DISubprogram(name: "__printk_get_hook", scope: !301, file: !301, line: 76, type: !4383, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !2106)
!4383 = !DISubroutineType(types: !4384)
!4384 = !{!107}
!4385 = !DILocation(line: 78, column: 9, scope: !4382)
!4386 = !DILocation(line: 78, column: 2, scope: !4382)
!4387 = distinct !DISubprogram(name: "vprintk", scope: !301, file: !301, line: 113, type: !4388, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4396)
!4388 = !DISubroutineType(types: !4389)
!4389 = !{null, !279, !4390}
!4390 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3459, line: 99, baseType: !4391)
!4391 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3459, line: 40, baseType: !4392)
!4392 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !301, baseType: !4393)
!4393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4394)
!4394 = !{!4395}
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4393, file: !301, line: 79, baseType: !107, size: 32)
!4396 = !{!4397, !4398, !4399}
!4397 = !DILocalVariable(name: "fmt", arg: 1, scope: !4387, file: !301, line: 113, type: !279)
!4398 = !DILocalVariable(name: "ap", arg: 2, scope: !4387, file: !301, line: 113, type: !4390)
!4399 = !DILocalVariable(name: "ctx", scope: !4400, file: !301, line: 121, type: !4402)
!4400 = distinct !DILexicalBlock(scope: !4401, file: !301, line: 120, column: 27)
!4401 = distinct !DILexicalBlock(scope: !4387, file: !301, line: 120, column: 6)
!4402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !301, line: 81, size: 32, elements: !4403)
!4403 = !{!4404, !4405}
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !4402, file: !301, line: 85, baseType: !32, size: 32)
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4402, file: !301, line: 86, baseType: !4406, offset: 32)
!4406 = !DICompositeType(tag: DW_TAG_array_type, baseType: !148, elements: !4407)
!4407 = !{!4408}
!4408 = !DISubrange(count: 0)
!4409 = !DILocation(line: 0, scope: !4387)
!4410 = !DILocation(line: 148, column: 3, scope: !4411)
!4411 = distinct !DILexicalBlock(scope: !4401, file: !301, line: 138, column: 9)
!4412 = !DILocation(line: 155, column: 1, scope: !4387)
!4413 = distinct !DISubprogram(name: "char_out", scope: !301, file: !301, line: 107, type: !4414, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4416)
!4414 = !DISubroutineType(types: !4415)
!4415 = !{!109, !109, !107}
!4416 = !{!4417, !4418}
!4417 = !DILocalVariable(name: "c", arg: 1, scope: !4413, file: !301, line: 107, type: !109)
!4418 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !4413, file: !301, line: 107, type: !107)
!4419 = !DILocation(line: 0, scope: !4413)
!4420 = !DILocation(line: 110, column: 9, scope: !4413)
!4421 = !DILocation(line: 110, column: 2, scope: !4413)
!4422 = distinct !DISubprogram(name: "cbvprintf", scope: !3491, file: !3491, line: 739, type: !4423, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4425)
!4423 = !DISubroutineType(types: !4424)
!4424 = !{!109, !3841, !107, !279, !4390}
!4425 = !{!4426, !4427, !4428, !4429}
!4426 = !DILocalVariable(name: "out", arg: 1, scope: !4422, file: !3491, line: 739, type: !3841)
!4427 = !DILocalVariable(name: "ctx", arg: 2, scope: !4422, file: !3491, line: 739, type: !107)
!4428 = !DILocalVariable(name: "format", arg: 3, scope: !4422, file: !3491, line: 739, type: !279)
!4429 = !DILocalVariable(name: "ap", arg: 4, scope: !4422, file: !3491, line: 739, type: !4390)
!4430 = !DILocation(line: 0, scope: !4422)
!4431 = !DILocation(line: 741, column: 9, scope: !4422)
!4432 = !DILocation(line: 741, column: 2, scope: !4422)
!4433 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !301, file: !301, line: 157, type: !4434, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4436)
!4434 = !DISubroutineType(types: !4435)
!4435 = !{null, !285, !232}
!4436 = !{!4437, !4438, !4439}
!4437 = !DILocalVariable(name: "c", arg: 1, scope: !4433, file: !301, line: 157, type: !285)
!4438 = !DILocalVariable(name: "n", arg: 2, scope: !4433, file: !301, line: 157, type: !232)
!4439 = !DILocalVariable(name: "i", scope: !4433, file: !301, line: 159, type: !232)
!4440 = !DILocation(line: 0, scope: !4433)
!4441 = !DILocation(line: 164, column: 16, scope: !4442)
!4442 = distinct !DILexicalBlock(scope: !4443, file: !301, line: 164, column: 2)
!4443 = distinct !DILexicalBlock(scope: !4433, file: !301, line: 164, column: 2)
!4444 = !DILocation(line: 164, column: 2, scope: !4443)
!4445 = !DILocation(line: 165, column: 3, scope: !4446)
!4446 = distinct !DILexicalBlock(scope: !4442, file: !301, line: 164, column: 26)
!4447 = !DILocation(line: 165, column: 13, scope: !4446)
!4448 = !DILocation(line: 164, column: 22, scope: !4442)
!4449 = distinct !{!4449, !4444, !4450}
!4450 = !DILocation(line: 166, column: 2, scope: !4443)
!4451 = !DILocation(line: 171, column: 1, scope: !4433)
!4452 = distinct !DISubprogram(name: "printk", scope: !301, file: !301, line: 203, type: !4453, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4455)
!4453 = !DISubroutineType(types: !4454)
!4454 = !{null, !279, null}
!4455 = !{!4456, !4457}
!4456 = !DILocalVariable(name: "fmt", arg: 1, scope: !4452, file: !301, line: 203, type: !279)
!4457 = !DILocalVariable(name: "ap", scope: !4452, file: !301, line: 205, type: !4390)
!4458 = !DILocation(line: 0, scope: !4452)
!4459 = !DILocation(line: 205, column: 2, scope: !4452)
!4460 = !DILocation(line: 205, column: 10, scope: !4452)
!4461 = !DILocation(line: 207, column: 2, scope: !4452)
!4462 = !DILocation(line: 209, column: 2, scope: !4452)
!4463 = !DILocation(line: 211, column: 2, scope: !4452)
!4464 = !DILocation(line: 212, column: 1, scope: !4452)
!4465 = distinct !DISubprogram(name: "snprintk", scope: !301, file: !301, line: 239, type: !4466, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4468)
!4466 = !DISubroutineType(types: !4467)
!4467 = !{!109, !285, !232, !279, null}
!4468 = !{!4469, !4470, !4471, !4472, !4473}
!4469 = !DILocalVariable(name: "str", arg: 1, scope: !4465, file: !301, line: 239, type: !285)
!4470 = !DILocalVariable(name: "size", arg: 2, scope: !4465, file: !301, line: 239, type: !232)
!4471 = !DILocalVariable(name: "fmt", arg: 3, scope: !4465, file: !301, line: 239, type: !279)
!4472 = !DILocalVariable(name: "ap", scope: !4465, file: !301, line: 241, type: !4390)
!4473 = !DILocalVariable(name: "ret", scope: !4465, file: !301, line: 242, type: !109)
!4474 = !DILocation(line: 0, scope: !4465)
!4475 = !DILocation(line: 241, column: 2, scope: !4465)
!4476 = !DILocation(line: 241, column: 10, scope: !4465)
!4477 = !DILocation(line: 244, column: 2, scope: !4465)
!4478 = !DILocation(line: 245, column: 8, scope: !4465)
!4479 = !DILocation(line: 246, column: 2, scope: !4465)
!4480 = !DILocation(line: 249, column: 1, scope: !4465)
!4481 = !DILocation(line: 248, column: 2, scope: !4465)
!4482 = distinct !DISubprogram(name: "vsnprintk", scope: !301, file: !301, line: 251, type: !4483, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4485)
!4483 = !DISubroutineType(types: !4484)
!4484 = !{!109, !285, !232, !279, !4390}
!4485 = !{!4486, !4487, !4488, !4489, !4490}
!4486 = !DILocalVariable(name: "str", arg: 1, scope: !4482, file: !301, line: 251, type: !285)
!4487 = !DILocalVariable(name: "size", arg: 2, scope: !4482, file: !301, line: 251, type: !232)
!4488 = !DILocalVariable(name: "fmt", arg: 3, scope: !4482, file: !301, line: 251, type: !279)
!4489 = !DILocalVariable(name: "ap", arg: 4, scope: !4482, file: !301, line: 251, type: !4390)
!4490 = !DILocalVariable(name: "ctx", scope: !4482, file: !301, line: 253, type: !4491)
!4491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !301, line: 217, size: 96, elements: !4492)
!4492 = !{!4493, !4494, !4495}
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4491, file: !301, line: 218, baseType: !285, size: 32)
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4491, file: !301, line: 219, baseType: !109, size: 32, offset: 32)
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4491, file: !301, line: 220, baseType: !109, size: 32, offset: 64)
!4496 = !DILocation(line: 0, scope: !4482)
!4497 = !DILocation(line: 253, column: 2, scope: !4482)
!4498 = !DILocation(line: 253, column: 21, scope: !4482)
!4499 = !DILocation(line: 253, column: 27, scope: !4482)
!4500 = !DILocation(line: 255, column: 2, scope: !4482)
!4501 = !DILocation(line: 257, column: 10, scope: !4502)
!4502 = distinct !DILexicalBlock(scope: !4482, file: !301, line: 257, column: 6)
!4503 = !DILocation(line: 257, column: 22, scope: !4502)
!4504 = !DILocation(line: 257, column: 16, scope: !4502)
!4505 = !DILocation(line: 257, column: 6, scope: !4482)
!4506 = !DILocation(line: 258, column: 3, scope: !4507)
!4507 = distinct !DILexicalBlock(scope: !4502, file: !301, line: 257, column: 27)
!4508 = !DILocation(line: 258, column: 18, scope: !4507)
!4509 = !DILocation(line: 259, column: 2, scope: !4507)
!4510 = !DILocation(line: 262, column: 1, scope: !4482)
!4511 = !DILocation(line: 261, column: 2, scope: !4482)
!4512 = distinct !DISubprogram(name: "str_out", scope: !301, file: !301, line: 223, type: !4513, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4516)
!4513 = !DISubroutineType(types: !4514)
!4514 = !{!109, !109, !4515}
!4515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4491, size: 32)
!4516 = !{!4517, !4518}
!4517 = !DILocalVariable(name: "c", arg: 1, scope: !4512, file: !301, line: 223, type: !109)
!4518 = !DILocalVariable(name: "ctx", arg: 2, scope: !4512, file: !301, line: 223, type: !4515)
!4519 = !DILocation(line: 0, scope: !4512)
!4520 = !DILocation(line: 225, column: 11, scope: !4521)
!4521 = distinct !DILexicalBlock(scope: !4512, file: !301, line: 225, column: 6)
!4522 = !DILocation(line: 225, column: 15, scope: !4521)
!4523 = !DILocation(line: 0, scope: !4521)
!4524 = !DILocation(line: 225, column: 23, scope: !4521)
!4525 = !DILocation(line: 225, column: 45, scope: !4521)
!4526 = !DILocation(line: 225, column: 37, scope: !4521)
!4527 = !DILocation(line: 225, column: 6, scope: !4512)
!4528 = !DILocation(line: 226, column: 8, scope: !4529)
!4529 = distinct !DILexicalBlock(scope: !4521, file: !301, line: 225, column: 50)
!4530 = !DILocation(line: 226, column: 13, scope: !4529)
!4531 = !DILocation(line: 227, column: 3, scope: !4529)
!4532 = !DILocation(line: 230, column: 29, scope: !4533)
!4533 = distinct !DILexicalBlock(scope: !4512, file: !301, line: 230, column: 6)
!4534 = !DILocation(line: 230, column: 17, scope: !4533)
!4535 = !DILocation(line: 230, column: 6, scope: !4512)
!4536 = !DILocation(line: 231, column: 22, scope: !4537)
!4537 = distinct !DILexicalBlock(scope: !4533, file: !301, line: 230, column: 34)
!4538 = !DILocation(line: 231, column: 3, scope: !4537)
!4539 = !DILocation(line: 231, column: 26, scope: !4537)
!4540 = !DILocation(line: 232, column: 2, scope: !4537)
!4541 = !DILocation(line: 233, column: 28, scope: !4542)
!4542 = distinct !DILexicalBlock(scope: !4533, file: !301, line: 232, column: 9)
!4543 = !DILocation(line: 233, column: 22, scope: !4542)
!4544 = !DILocation(line: 233, column: 3, scope: !4542)
!4545 = !DILocation(line: 233, column: 26, scope: !4542)
!4546 = !DILocation(line: 237, column: 1, scope: !4512)
!4547 = distinct !DISubprogram(name: "z_thread_entry", scope: !4548, file: !4548, line: 30, type: !4549, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2591, retainedNodes: !4551)
!4548 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4549 = !DISubroutineType(types: !4550)
!4550 = !{null, !3423, !107, !107, !107}
!4551 = !{!4552, !4553, !4554, !4555}
!4552 = !DILocalVariable(name: "entry", arg: 1, scope: !4547, file: !4548, line: 30, type: !3423)
!4553 = !DILocalVariable(name: "p1", arg: 2, scope: !4547, file: !4548, line: 31, type: !107)
!4554 = !DILocalVariable(name: "p2", arg: 3, scope: !4547, file: !4548, line: 31, type: !107)
!4555 = !DILocalVariable(name: "p3", arg: 4, scope: !4547, file: !4548, line: 31, type: !107)
!4556 = !DILocation(line: 0, scope: !4547)
!4557 = !DILocation(line: 36, column: 2, scope: !4547)
!4558 = !DILocation(line: 38, column: 17, scope: !4547)
!4559 = !DILocation(line: 38, column: 2, scope: !4547)
!4560 = !DILocation(line: 45, column: 2, scope: !4547)
!4561 = distinct !DISubprogram(name: "k_current_get", scope: !118, file: !118, line: 530, type: !4562, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2591, retainedNodes: !2106)
!4562 = !DISubroutineType(types: !4563)
!4563 = !{!4564}
!4564 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !156, line: 347, baseType: !4565)
!4565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4566, size: 32)
!4566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1280, elements: !4567)
!4567 = !{!4568, !4626, !4638, !4639, !4640, !4641, !4642, !4648, !4663}
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4566, file: !156, line: 247, baseType: !4569, size: 384)
!4569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 384, elements: !4570)
!4570 = !{!4571, !4595, !4602, !4603, !4604, !4613, !4614, !4615}
!4571 = !DIDerivedType(tag: DW_TAG_member, scope: !4569, file: !156, line: 60, baseType: !4572, size: 64)
!4572 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4569, file: !156, line: 60, size: 64, elements: !4573)
!4573 = !{!4574, !4589}
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !4572, file: !156, line: 61, baseType: !4575, size: 64)
!4575 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !4576)
!4576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !4577)
!4577 = !{!4578, !4584}
!4578 = !DIDerivedType(tag: DW_TAG_member, scope: !4576, file: !127, line: 38, baseType: !4579, size: 32)
!4579 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4576, file: !127, line: 38, size: 32, elements: !4580)
!4580 = !{!4581, !4583}
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4579, file: !127, line: 39, baseType: !4582, size: 32)
!4582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4576, size: 32)
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4579, file: !127, line: 40, baseType: !4582, size: 32)
!4584 = !DIDerivedType(tag: DW_TAG_member, scope: !4576, file: !127, line: 42, baseType: !4585, size: 32, offset: 32)
!4585 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4576, file: !127, line: 42, size: 32, elements: !4586)
!4586 = !{!4587, !4588}
!4587 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4585, file: !127, line: 43, baseType: !4582, size: 32)
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4585, file: !127, line: 44, baseType: !4582, size: 32)
!4589 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !4572, file: !156, line: 62, baseType: !4590, size: 64)
!4590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !4591)
!4591 = !{!4592}
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4590, file: !168, line: 50, baseType: !4593, size: 64)
!4593 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4594, size: 64, elements: !173)
!4594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4590, size: 32)
!4595 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !4569, file: !156, line: 68, baseType: !4596, size: 32, offset: 64)
!4596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4597, size: 32)
!4597 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !4598)
!4598 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !4599)
!4599 = !{!4600}
!4600 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !4598, file: !122, line: 232, baseType: !4601, size: 64)
!4601 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !4576)
!4602 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !4569, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !4569, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!4604 = !DIDerivedType(tag: DW_TAG_member, scope: !4569, file: !156, line: 90, baseType: !4605, size: 16, offset: 112)
!4605 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4569, file: !156, line: 90, size: 16, elements: !4606)
!4606 = !{!4607, !4612}
!4607 = !DIDerivedType(tag: DW_TAG_member, scope: !4605, file: !156, line: 91, baseType: !4608, size: 16)
!4608 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4605, file: !156, line: 91, size: 16, elements: !4609)
!4609 = !{!4610, !4611}
!4610 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4608, file: !156, line: 96, baseType: !188, size: 8)
!4611 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !4608, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!4612 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !4605, file: !156, line: 100, baseType: !192, size: 16)
!4613 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !4569, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !4569, file: !156, line: 127, baseType: !107, size: 32, offset: 160)
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4569, file: !156, line: 131, baseType: !4616, size: 192, offset: 192)
!4616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !4617)
!4617 = !{!4618, !4619, !4625}
!4618 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4616, file: !122, line: 245, baseType: !4575, size: 64)
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4616, file: !122, line: 246, baseType: !4620, size: 32, offset: 64)
!4620 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !4621)
!4621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4622, size: 32)
!4622 = !DISubroutineType(types: !4623)
!4623 = !{null, !4624}
!4624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4616, size: 32)
!4625 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !4616, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!4626 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !4566, file: !156, line: 250, baseType: !4627, size: 288, offset: 384)
!4627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !4628)
!4628 = !{!4629, !4630, !4631, !4632, !4633, !4634, !4635, !4636, !4637}
!4629 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4627, file: !209, line: 26, baseType: !110, size: 32)
!4630 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4627, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!4631 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4627, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!4632 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4627, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4627, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!4634 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4627, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4627, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!4636 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4627, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4627, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!4638 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !4566, file: !156, line: 253, baseType: !107, size: 32, offset: 672)
!4639 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !4566, file: !156, line: 256, baseType: !4597, size: 64, offset: 704)
!4640 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4566, file: !156, line: 279, baseType: !223, size: 256, offset: 768)
!4641 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !4566, file: !156, line: 294, baseType: !109, size: 32, offset: 1024)
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !4566, file: !156, line: 300, baseType: !4643, size: 96, offset: 1056)
!4643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !4644)
!4644 = !{!4645, !4646, !4647}
!4645 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4643, file: !156, line: 153, baseType: !22, size: 32)
!4646 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4643, file: !156, line: 162, baseType: !232, size: 32, offset: 32)
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !4643, file: !156, line: 168, baseType: !232, size: 32, offset: 64)
!4648 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !4566, file: !156, line: 325, baseType: !4649, size: 32, offset: 1152)
!4649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4650, size: 32)
!4650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !4651)
!4651 = !{!4652, !4658, !4659}
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4650, file: !118, line: 5074, baseType: !4653, size: 96)
!4653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !241, line: 56, size: 96, elements: !4654)
!4654 = !{!4655, !4656, !4657}
!4655 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4653, file: !241, line: 57, baseType: !244, size: 32)
!4656 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4653, file: !241, line: 58, baseType: !107, size: 32, offset: 32)
!4657 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4653, file: !241, line: 59, baseType: !232, size: 32, offset: 64)
!4658 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !4650, file: !118, line: 5075, baseType: !4597, size: 64, offset: 96)
!4659 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4650, file: !118, line: 5076, baseType: !4660, size: 32, offset: 160)
!4660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !4661)
!4661 = !{!4662}
!4662 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !4660, file: !251, line: 52, baseType: !22, size: 32)
!4663 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4566, file: !156, line: 343, baseType: !4664, size: 64, offset: 1184)
!4664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !209, line: 60, size: 64, elements: !4665)
!4665 = !{!4666, !4667}
!4666 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !4664, file: !209, line: 63, baseType: !110, size: 32)
!4667 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !4664, file: !209, line: 66, baseType: !110, size: 32, offset: 32)
!4668 = !DILocation(line: 535, column: 9, scope: !4561)
!4669 = !DILocation(line: 535, column: 2, scope: !4561)
!4670 = distinct !DISubprogram(name: "k_thread_abort", scope: !3297, file: !3297, line: 188, type: !4671, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2591, retainedNodes: !4673)
!4671 = !DISubroutineType(types: !4672)
!4672 = !{null, !4564}
!4673 = !{!4674}
!4674 = !DILocalVariable(name: "thread", arg: 1, scope: !4670, file: !3297, line: 188, type: !4564)
!4675 = !DILocation(line: 0, scope: !4670)
!4676 = !DILocation(line: 197, column: 2, scope: !4677)
!4677 = distinct !DILexicalBlock(scope: !4670, file: !3297, line: 197, column: 2)
!4678 = !{i64 2155066237}
!4679 = !DILocation(line: 198, column: 2, scope: !4670)
!4680 = !DILocation(line: 199, column: 1, scope: !4670)
!4681 = distinct !DISubprogram(name: "z_current_get", scope: !3297, file: !3297, line: 173, type: !4562, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2591, retainedNodes: !2106)
!4682 = !DILocation(line: 180, column: 2, scope: !4683)
!4683 = distinct !DILexicalBlock(scope: !4681, file: !3297, line: 180, column: 2)
!4684 = !{i64 2155066169}
!4685 = !DILocation(line: 181, column: 9, scope: !4681)
!4686 = !DILocation(line: 181, column: 2, scope: !4681)
!4687 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2597, file: !2597, line: 1338, type: !4688, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !4696)
!4688 = !DISubroutineType(types: !4689)
!4689 = !{!109, !3841, !107, !279, !4690, !110}
!4690 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3459, line: 99, baseType: !4691)
!4691 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3459, line: 40, baseType: !4692)
!4692 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2597, baseType: !4693)
!4693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4694)
!4694 = !{!4695}
!4695 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4693, file: !2597, baseType: !107, size: 32)
!4696 = !{!4697, !4698, !4699, !4700, !4701, !4702, !4706, !4707, !4708, !4710, !4715, !4758, !4761, !4764, !4765, !4766, !4767, !4768, !4769, !4770, !4773, !4774, !4775, !4779, !4782, !4784, !4787, !4788, !4789, !4794, !4800, !4803, !4807, !4813, !4817, !4820, !4822, !4825}
!4697 = !DILocalVariable(name: "out", arg: 1, scope: !4687, file: !2597, line: 1338, type: !3841)
!4698 = !DILocalVariable(name: "ctx", arg: 2, scope: !4687, file: !2597, line: 1338, type: !107)
!4699 = !DILocalVariable(name: "fp", arg: 3, scope: !4687, file: !2597, line: 1338, type: !279)
!4700 = !DILocalVariable(name: "ap", arg: 4, scope: !4687, file: !2597, line: 1339, type: !4690)
!4701 = !DILocalVariable(name: "flags", arg: 5, scope: !4687, file: !2597, line: 1339, type: !110)
!4702 = !DILocalVariable(name: "buf", scope: !4687, file: !2597, line: 1341, type: !4703)
!4703 = !DICompositeType(tag: DW_TAG_array_type, baseType: !148, size: 176, elements: !4704)
!4704 = !{!4705}
!4705 = !DISubrange(count: 22)
!4706 = !DILocalVariable(name: "count", scope: !4687, file: !2597, line: 1342, type: !232)
!4707 = !DILocalVariable(name: "sint", scope: !4687, file: !2597, line: 1343, type: !2616)
!4708 = !DILocalVariable(name: "tagged_ap", scope: !4687, file: !2597, line: 1345, type: !4709)
!4709 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !347)
!4710 = !DILocalVariable(name: "rc", scope: !4711, file: !2597, line: 1377, type: !109)
!4711 = distinct !DILexicalBlock(scope: !4712, file: !2597, line: 1377, column: 4)
!4712 = distinct !DILexicalBlock(scope: !4713, file: !2597, line: 1376, column: 19)
!4713 = distinct !DILexicalBlock(scope: !4714, file: !2597, line: 1376, column: 7)
!4714 = distinct !DILexicalBlock(scope: !4687, file: !2597, line: 1375, column: 19)
!4715 = !DILocalVariable(name: "state", scope: !4714, file: !2597, line: 1395, type: !4716)
!4716 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4687, file: !2597, line: 1392, size: 192, elements: !4717)
!4717 = !{!4718, !4726}
!4718 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4716, file: !2597, line: 1393, baseType: !4719, size: 64)
!4719 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2597, line: 166, size: 64, elements: !4720)
!4720 = !{!4721, !4722, !4723, !4724, !4725}
!4721 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4719, file: !2597, line: 168, baseType: !2616, size: 64)
!4722 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4719, file: !2597, line: 171, baseType: !2619, size: 64)
!4723 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4719, file: !2597, line: 174, baseType: !277, size: 64)
!4724 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4719, file: !2597, line: 177, baseType: !275, size: 64)
!4725 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4719, file: !2597, line: 180, baseType: !107, size: 32)
!4726 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4716, file: !2597, line: 1394, baseType: !4727, size: 96, offset: 64)
!4727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2597, line: 189, size: 96, elements: !4728)
!4728 = !{!4729, !4730, !4731, !4732, !4733, !4734, !4735, !4736, !4737, !4738, !4739, !4740, !4741, !4742, !4743, !4744, !4745, !4746, !4747, !4748, !4753}
!4729 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4727, file: !2597, line: 191, baseType: !347, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4730 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4727, file: !2597, line: 194, baseType: !347, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4731 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4727, file: !2597, line: 197, baseType: !347, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4732 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4727, file: !2597, line: 200, baseType: !347, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4733 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4727, file: !2597, line: 203, baseType: !347, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4734 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4727, file: !2597, line: 206, baseType: !347, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4735 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4727, file: !2597, line: 209, baseType: !347, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4736 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4727, file: !2597, line: 212, baseType: !347, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4737 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4727, file: !2597, line: 219, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4738 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4727, file: !2597, line: 222, baseType: !347, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4739 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4727, file: !2597, line: 229, baseType: !347, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4740 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4727, file: !2597, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4741 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4727, file: !2597, line: 238, baseType: !347, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4742 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4727, file: !2597, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4743 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4727, file: !2597, line: 244, baseType: !347, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4744 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4727, file: !2597, line: 247, baseType: !347, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4745 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4727, file: !2597, line: 252, baseType: !347, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4746 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4727, file: !2597, line: 257, baseType: !347, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4747 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4727, file: !2597, line: 260, baseType: !179, size: 8, offset: 24)
!4748 = !DIDerivedType(tag: DW_TAG_member, scope: !4727, file: !2597, line: 262, baseType: !4749, size: 32, offset: 32)
!4749 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4727, file: !2597, line: 262, size: 32, elements: !4750)
!4750 = !{!4751, !4752}
!4751 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4749, file: !2597, line: 267, baseType: !109, size: 32)
!4752 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4749, file: !2597, line: 289, baseType: !109, size: 32)
!4753 = !DIDerivedType(tag: DW_TAG_member, scope: !4727, file: !2597, line: 292, baseType: !4754, size: 32, offset: 64)
!4754 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4727, file: !2597, line: 292, size: 32, elements: !4755)
!4755 = !{!4756, !4757}
!4756 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4754, file: !2597, line: 297, baseType: !109, size: 32)
!4757 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4754, file: !2597, line: 306, baseType: !109, size: 32)
!4758 = !DILocalVariable(name: "conv", scope: !4714, file: !2597, line: 1400, type: !4759)
!4759 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4760)
!4760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4727, size: 32)
!4761 = !DILocalVariable(name: "value", scope: !4714, file: !2597, line: 1401, type: !4762)
!4762 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4763)
!4763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4719, size: 32)
!4764 = !DILocalVariable(name: "sp", scope: !4714, file: !2597, line: 1402, type: !279)
!4765 = !DILocalVariable(name: "width", scope: !4714, file: !2597, line: 1403, type: !109)
!4766 = !DILocalVariable(name: "precision", scope: !4714, file: !2597, line: 1404, type: !109)
!4767 = !DILocalVariable(name: "bps", scope: !4714, file: !2597, line: 1405, type: !279)
!4768 = !DILocalVariable(name: "bpe", scope: !4714, file: !2597, line: 1406, type: !279)
!4769 = !DILocalVariable(name: "sign", scope: !4714, file: !2597, line: 1407, type: !148)
!4770 = !DILocalVariable(name: "arg", scope: !4771, file: !2597, line: 1432, type: !109)
!4771 = distinct !DILexicalBlock(scope: !4772, file: !2597, line: 1431, column: 24)
!4772 = distinct !DILexicalBlock(scope: !4714, file: !2597, line: 1431, column: 7)
!4773 = !DILocalVariable(name: "specifier_cat", scope: !4714, file: !2597, line: 1468, type: !2596)
!4774 = !DILocalVariable(name: "length_mod", scope: !4714, file: !2597, line: 1470, type: !2604)
!4775 = !DILocalVariable(name: "rc", scope: !4776, file: !2597, line: 1575, type: !109)
!4776 = distinct !DILexicalBlock(scope: !4777, file: !2597, line: 1575, column: 4)
!4777 = distinct !DILexicalBlock(scope: !4778, file: !2597, line: 1574, column: 43)
!4778 = distinct !DILexicalBlock(scope: !4714, file: !2597, line: 1574, column: 7)
!4779 = !DILocalVariable(name: "rc", scope: !4780, file: !2597, line: 1584, type: !109)
!4780 = distinct !DILexicalBlock(scope: !4781, file: !2597, line: 1584, column: 4)
!4781 = distinct !DILexicalBlock(scope: !4714, file: !2597, line: 1582, column: 28)
!4782 = !DILocalVariable(name: "len", scope: !4783, file: !2597, line: 1589, type: !232)
!4783 = distinct !DILexicalBlock(scope: !4781, file: !2597, line: 1586, column: 13)
!4784 = !DILocalVariable(name: "len", scope: !4785, file: !2597, line: 1641, type: !232)
!4785 = distinct !DILexicalBlock(scope: !4786, file: !2597, line: 1640, column: 24)
!4786 = distinct !DILexicalBlock(scope: !4781, file: !2597, line: 1640, column: 8)
!4787 = !DILocalVariable(name: "nj_len", scope: !4714, file: !2597, line: 1722, type: !232)
!4788 = !DILocalVariable(name: "pad_len", scope: !4714, file: !2597, line: 1723, type: !109)
!4789 = !DILocalVariable(name: "pad", scope: !4790, file: !2597, line: 1751, type: !148)
!4790 = distinct !DILexicalBlock(scope: !4791, file: !2597, line: 1750, column: 26)
!4791 = distinct !DILexicalBlock(scope: !4792, file: !2597, line: 1750, column: 8)
!4792 = distinct !DILexicalBlock(scope: !4793, file: !2597, line: 1747, column: 18)
!4793 = distinct !DILexicalBlock(scope: !4714, file: !2597, line: 1747, column: 7)
!4794 = !DILocalVariable(name: "rc", scope: !4795, file: !2597, line: 1758, type: !109)
!4795 = distinct !DILexicalBlock(scope: !4796, file: !2597, line: 1758, column: 7)
!4796 = distinct !DILexicalBlock(scope: !4797, file: !2597, line: 1757, column: 21)
!4797 = distinct !DILexicalBlock(scope: !4798, file: !2597, line: 1757, column: 10)
!4798 = distinct !DILexicalBlock(scope: !4799, file: !2597, line: 1756, column: 26)
!4799 = distinct !DILexicalBlock(scope: !4790, file: !2597, line: 1756, column: 9)
!4800 = !DILocalVariable(name: "rc", scope: !4801, file: !2597, line: 1765, type: !109)
!4801 = distinct !DILexicalBlock(scope: !4802, file: !2597, line: 1765, column: 6)
!4802 = distinct !DILexicalBlock(scope: !4790, file: !2597, line: 1764, column: 25)
!4803 = !DILocalVariable(name: "rc", scope: !4804, file: !2597, line: 1774, type: !109)
!4804 = distinct !DILexicalBlock(scope: !4805, file: !2597, line: 1774, column: 4)
!4805 = distinct !DILexicalBlock(scope: !4806, file: !2597, line: 1773, column: 18)
!4806 = distinct !DILexicalBlock(scope: !4714, file: !2597, line: 1773, column: 7)
!4807 = !DILocalVariable(name: "rc", scope: !4808, file: !2597, line: 1819, type: !109)
!4808 = distinct !DILexicalBlock(scope: !4809, file: !2597, line: 1819, column: 5)
!4809 = distinct !DILexicalBlock(scope: !4810, file: !2597, line: 1818, column: 44)
!4810 = distinct !DILexicalBlock(scope: !4811, file: !2597, line: 1818, column: 8)
!4811 = distinct !DILexicalBlock(scope: !4812, file: !2597, line: 1817, column: 10)
!4812 = distinct !DILexicalBlock(scope: !4714, file: !2597, line: 1777, column: 7)
!4813 = !DILocalVariable(name: "rc", scope: !4814, file: !2597, line: 1823, type: !109)
!4814 = distinct !DILexicalBlock(scope: !4815, file: !2597, line: 1823, column: 5)
!4815 = distinct !DILexicalBlock(scope: !4816, file: !2597, line: 1822, column: 26)
!4816 = distinct !DILexicalBlock(scope: !4811, file: !2597, line: 1822, column: 8)
!4817 = !DILocalVariable(name: "rc", scope: !4818, file: !2597, line: 1828, type: !109)
!4818 = distinct !DILexicalBlock(scope: !4819, file: !2597, line: 1828, column: 5)
!4819 = distinct !DILexicalBlock(scope: !4811, file: !2597, line: 1827, column: 26)
!4820 = !DILocalVariable(name: "rc", scope: !4821, file: !2597, line: 1831, type: !109)
!4821 = distinct !DILexicalBlock(scope: !4811, file: !2597, line: 1831, column: 4)
!4822 = !DILocalVariable(name: "rc", scope: !4823, file: !2597, line: 1836, type: !109)
!4823 = distinct !DILexicalBlock(scope: !4824, file: !2597, line: 1836, column: 4)
!4824 = distinct !DILexicalBlock(scope: !4714, file: !2597, line: 1835, column: 21)
!4825 = !DILabel(scope: !4781, name: "prec_int_pad0", file: !2597, line: 1634)
!4826 = !DILocation(line: 0, scope: !4687)
!4827 = !DILocation(line: 1341, column: 2, scope: !4687)
!4828 = !DILocation(line: 1341, column: 7, scope: !4687)
!4829 = !DILocation(line: 1375, column: 2, scope: !4687)
!4830 = !DILocation(line: 1342, column: 9, scope: !4687)
!4831 = !DILocation(line: 1375, column: 9, scope: !4687)
!4832 = !DILocation(line: 1377, column: 4, scope: !4711)
!4833 = !DILocation(line: 0, scope: !4711)
!4834 = !DILocation(line: 1377, column: 4, scope: !4835)
!4835 = distinct !DILexicalBlock(scope: !4711, file: !2597, line: 1377, column: 4)
!4836 = distinct !{!4836, !4829, !4837}
!4837 = !DILocation(line: 1839, column: 2, scope: !4687)
!4838 = !DILocation(line: 1392, column: 3, scope: !4714)
!4839 = !DILocation(line: 1395, column: 5, scope: !4714)
!4840 = !DILocation(line: 0, scope: !4714)
!4841 = !DILocation(line: 1409, column: 8, scope: !4714)
!4842 = !DILocation(line: 1414, column: 13, scope: !4843)
!4843 = distinct !DILexicalBlock(scope: !4714, file: !2597, line: 1414, column: 7)
!4844 = !DILocation(line: 1414, column: 7, scope: !4714)
!4845 = !DILocation(line: 1415, column: 12, scope: !4846)
!4846 = distinct !DILexicalBlock(scope: !4843, file: !2597, line: 1414, column: 25)
!4847 = !DILocation(line: 1417, column: 14, scope: !4848)
!4848 = distinct !DILexicalBlock(scope: !4846, file: !2597, line: 1417, column: 8)
!4849 = !DILocation(line: 1417, column: 8, scope: !4846)
!4850 = !DILocation(line: 1418, column: 21, scope: !4851)
!4851 = distinct !DILexicalBlock(scope: !4848, file: !2597, line: 1417, column: 19)
!4852 = !DILocation(line: 1419, column: 13, scope: !4851)
!4853 = !DILocation(line: 1420, column: 4, scope: !4851)
!4854 = !DILocation(line: 1421, column: 20, scope: !4855)
!4855 = distinct !DILexicalBlock(scope: !4843, file: !2597, line: 1421, column: 14)
!4856 = !DILocation(line: 1421, column: 14, scope: !4843)
!4857 = !DILocation(line: 1431, column: 13, scope: !4772)
!4858 = !DILocation(line: 1431, column: 7, scope: !4714)
!4859 = !DILocation(line: 1432, column: 14, scope: !4771)
!4860 = !DILocation(line: 0, scope: !4771)
!4861 = !DILocation(line: 1434, column: 12, scope: !4862)
!4862 = distinct !DILexicalBlock(scope: !4771, file: !2597, line: 1434, column: 8)
!4863 = !DILocation(line: 1434, column: 8, scope: !4771)
!4864 = !DILocation(line: 1435, column: 24, scope: !4865)
!4865 = distinct !DILexicalBlock(scope: !4862, file: !2597, line: 1434, column: 17)
!4866 = !DILocation(line: 1436, column: 4, scope: !4865)
!4867 = !DILocation(line: 1439, column: 20, scope: !4868)
!4868 = distinct !DILexicalBlock(scope: !4772, file: !2597, line: 1439, column: 14)
!4869 = !DILocation(line: 1439, column: 14, scope: !4772)
!4870 = !DILocation(line: 1469, column: 37, scope: !4714)
!4871 = !DILocation(line: 1448, column: 20, scope: !4714)
!4872 = !DILocation(line: 1449, column: 22, scope: !4714)
!4873 = !DILocation(line: 1471, column: 34, scope: !4714)
!4874 = !DILocation(line: 1478, column: 7, scope: !4714)
!4875 = !DILocation(line: 1479, column: 4, scope: !4876)
!4876 = distinct !DILexicalBlock(scope: !4877, file: !2597, line: 1478, column: 40)
!4877 = distinct !DILexicalBlock(scope: !4714, file: !2597, line: 1478, column: 7)
!4878 = !DILocation(line: 1484, column: 19, scope: !4879)
!4879 = distinct !DILexicalBlock(scope: !4876, file: !2597, line: 1479, column: 24)
!4880 = !DILocation(line: 1484, column: 17, scope: !4879)
!4881 = !DILocation(line: 1485, column: 5, scope: !4879)
!4882 = !DILocation(line: 1492, column: 20, scope: !4883)
!4883 = distinct !DILexicalBlock(scope: !4884, file: !2597, line: 1491, column: 12)
!4884 = distinct !DILexicalBlock(scope: !4879, file: !2597, line: 1487, column: 9)
!4885 = !DILocation(line: 1492, column: 18, scope: !4883)
!4886 = !DILocation(line: 1494, column: 5, scope: !4879)
!4887 = !DILocation(line: 1497, column: 23, scope: !4879)
!4888 = !DILocation(line: 1496, column: 17, scope: !4879)
!4889 = !DILocation(line: 1498, column: 5, scope: !4879)
!4890 = !DILocation(line: 1501, column: 23, scope: !4879)
!4891 = !DILocation(line: 1500, column: 17, scope: !4879)
!4892 = !DILocation(line: 1502, column: 5, scope: !4879)
!4893 = !DILocation(line: 1513, column: 23, scope: !4879)
!4894 = !DILocation(line: 1513, column: 6, scope: !4879)
!4895 = !DILocation(line: 1512, column: 17, scope: !4879)
!4896 = !DILocation(line: 1514, column: 5, scope: !4879)
!4897 = !DILocation(line: 0, scope: !4879)
!4898 = !DILocation(line: 1516, column: 8, scope: !4876)
!4899 = !DILocation(line: 1517, column: 19, scope: !4900)
!4900 = distinct !DILexicalBlock(scope: !4901, file: !2597, line: 1516, column: 33)
!4901 = distinct !DILexicalBlock(scope: !4876, file: !2597, line: 1516, column: 8)
!4902 = !DILocation(line: 1517, column: 17, scope: !4900)
!4903 = !DILocation(line: 1518, column: 4, scope: !4900)
!4904 = !DILocation(line: 1519, column: 19, scope: !4905)
!4905 = distinct !DILexicalBlock(scope: !4906, file: !2597, line: 1518, column: 39)
!4906 = distinct !DILexicalBlock(scope: !4901, file: !2597, line: 1518, column: 15)
!4907 = !DILocation(line: 1519, column: 17, scope: !4905)
!4908 = !DILocation(line: 1520, column: 4, scope: !4905)
!4909 = !DILocation(line: 1522, column: 4, scope: !4910)
!4910 = distinct !DILexicalBlock(scope: !4911, file: !2597, line: 1521, column: 47)
!4911 = distinct !DILexicalBlock(scope: !4877, file: !2597, line: 1521, column: 14)
!4912 = !DILocation(line: 1527, column: 19, scope: !4913)
!4913 = distinct !DILexicalBlock(scope: !4910, file: !2597, line: 1522, column: 24)
!4914 = !DILocation(line: 1527, column: 17, scope: !4913)
!4915 = !DILocation(line: 1528, column: 5, scope: !4913)
!4916 = !DILocation(line: 0, scope: !4917)
!4917 = distinct !DILexicalBlock(scope: !4913, file: !2597, line: 1530, column: 9)
!4918 = !DILocation(line: 1540, column: 23, scope: !4913)
!4919 = !DILocation(line: 1539, column: 17, scope: !4913)
!4920 = !DILocation(line: 1542, column: 5, scope: !4913)
!4921 = !DILocation(line: 1545, column: 23, scope: !4913)
!4922 = !DILocation(line: 1544, column: 17, scope: !4913)
!4923 = !DILocation(line: 1547, column: 5, scope: !4913)
!4924 = !DILocation(line: 1551, column: 23, scope: !4913)
!4925 = !DILocation(line: 1551, column: 6, scope: !4913)
!4926 = !DILocation(line: 1550, column: 17, scope: !4913)
!4927 = !DILocation(line: 1552, column: 5, scope: !4913)
!4928 = !DILocation(line: 0, scope: !4913)
!4929 = !DILocation(line: 1554, column: 8, scope: !4910)
!4930 = !DILocation(line: 1555, column: 19, scope: !4931)
!4931 = distinct !DILexicalBlock(scope: !4932, file: !2597, line: 1554, column: 33)
!4932 = distinct !DILexicalBlock(scope: !4910, file: !2597, line: 1554, column: 8)
!4933 = !DILocation(line: 1555, column: 17, scope: !4931)
!4934 = !DILocation(line: 1556, column: 4, scope: !4931)
!4935 = !DILocation(line: 1557, column: 19, scope: !4936)
!4936 = distinct !DILexicalBlock(scope: !4937, file: !2597, line: 1556, column: 39)
!4937 = distinct !DILexicalBlock(scope: !4932, file: !2597, line: 1556, column: 15)
!4938 = !DILocation(line: 1557, column: 17, scope: !4936)
!4939 = !DILocation(line: 1558, column: 4, scope: !4936)
!4940 = !DILocation(line: 0, scope: !4941)
!4941 = distinct !DILexicalBlock(scope: !4942, file: !2597, line: 1560, column: 8)
!4942 = distinct !DILexicalBlock(scope: !4943, file: !2597, line: 1559, column: 45)
!4943 = distinct !DILexicalBlock(scope: !4911, file: !2597, line: 1559, column: 14)
!4944 = !DILocation(line: 1566, column: 17, scope: !4945)
!4945 = distinct !DILexicalBlock(scope: !4946, file: !2597, line: 1565, column: 46)
!4946 = distinct !DILexicalBlock(scope: !4943, file: !2597, line: 1565, column: 14)
!4947 = !DILocation(line: 1566, column: 15, scope: !4945)
!4948 = !DILocation(line: 1567, column: 3, scope: !4945)
!4949 = !DILocation(line: 1574, column: 21, scope: !4778)
!4950 = !DILocation(line: 1575, column: 4, scope: !4776)
!4951 = !DILocation(line: 0, scope: !4776)
!4952 = !DILocation(line: 1575, column: 4, scope: !4953)
!4953 = distinct !DILexicalBlock(scope: !4776, file: !2597, line: 1575, column: 4)
!4954 = !DILocation(line: 1582, column: 17, scope: !4714)
!4955 = !DILocation(line: 1582, column: 3, scope: !4714)
!4956 = !DILocation(line: 1584, column: 4, scope: !4780)
!4957 = !DILocation(line: 0, scope: !4780)
!4958 = !DILocation(line: 1584, column: 4, scope: !4959)
!4959 = distinct !DILexicalBlock(scope: !4780, file: !2597, line: 1584, column: 4)
!4960 = !DILocation(line: 1587, column: 31, scope: !4783)
!4961 = !DILocation(line: 1591, column: 18, scope: !4962)
!4962 = distinct !DILexicalBlock(scope: !4783, file: !2597, line: 1591, column: 8)
!4963 = !DILocation(line: 1591, column: 8, scope: !4783)
!4964 = !DILocation(line: 1592, column: 11, scope: !4965)
!4965 = distinct !DILexicalBlock(scope: !4962, file: !2597, line: 1591, column: 24)
!4966 = !DILocation(line: 0, scope: !4783)
!4967 = !DILocation(line: 1593, column: 4, scope: !4965)
!4968 = !DILocation(line: 1594, column: 11, scope: !4969)
!4969 = distinct !DILexicalBlock(scope: !4962, file: !2597, line: 1593, column: 11)
!4970 = !DILocation(line: 1604, column: 51, scope: !4781)
!4971 = !DILocation(line: 1604, column: 13, scope: !4781)
!4972 = !DILocation(line: 1604, column: 11, scope: !4781)
!4973 = !DILocation(line: 1606, column: 4, scope: !4781)
!4974 = !DILocation(line: 1609, column: 14, scope: !4975)
!4975 = distinct !DILexicalBlock(scope: !4781, file: !2597, line: 1609, column: 8)
!4976 = !DILocation(line: 1609, column: 8, scope: !4781)
!4977 = !DILocation(line: 1619, column: 18, scope: !4781)
!4978 = !DILocation(line: 1620, column: 13, scope: !4979)
!4979 = distinct !DILexicalBlock(scope: !4781, file: !2597, line: 1620, column: 8)
!4980 = !DILocation(line: 1620, column: 8, scope: !4781)
!4981 = !DILocation(line: 1622, column: 36, scope: !4982)
!4982 = distinct !DILexicalBlock(scope: !4979, file: !2597, line: 1620, column: 18)
!4983 = !DILocation(line: 1622, column: 17, scope: !4982)
!4984 = !DILocation(line: 1623, column: 4, scope: !4982)
!4985 = !DILocation(line: 1632, column: 29, scope: !4781)
!4986 = !DILocation(line: 1632, column: 10, scope: !4781)
!4987 = !DILocation(line: 1632, column: 4, scope: !4781)
!4988 = !DILocation(line: 1407, column: 8, scope: !4714)
!4989 = !DILocation(line: 0, scope: !4781)
!4990 = !DILocation(line: 1634, column: 3, scope: !4781)
!4991 = !DILocation(line: 1640, column: 18, scope: !4786)
!4992 = !DILocation(line: 1640, column: 8, scope: !4781)
!4993 = !DILocation(line: 1729, column: 13, scope: !4994)
!4994 = distinct !DILexicalBlock(scope: !4714, file: !2597, line: 1729, column: 7)
!4995 = !DILocation(line: 1641, column: 22, scope: !4785)
!4996 = !DILocation(line: 0, scope: !4785)
!4997 = !DILocation(line: 1646, column: 21, scope: !4785)
!4998 = !DILocation(line: 1649, column: 13, scope: !4999)
!4999 = distinct !DILexicalBlock(scope: !4785, file: !2597, line: 1649, column: 9)
!5000 = !DILocation(line: 1649, column: 9, scope: !4785)
!5001 = !DILocation(line: 1650, column: 35, scope: !5002)
!5002 = distinct !DILexicalBlock(scope: !4999, file: !2597, line: 1649, column: 34)
!5003 = !DILocation(line: 1650, column: 23, scope: !5002)
!5004 = !DILocation(line: 1651, column: 5, scope: !5002)
!5005 = !DILocation(line: 1660, column: 15, scope: !5006)
!5006 = distinct !DILexicalBlock(scope: !4781, file: !2597, line: 1660, column: 8)
!5007 = !DILocation(line: 1660, column: 19, scope: !5006)
!5008 = !DILocation(line: 1660, column: 8, scope: !4781)
!5009 = !DILocation(line: 1661, column: 23, scope: !5010)
!5010 = distinct !DILexicalBlock(scope: !5006, file: !2597, line: 1660, column: 28)
!5011 = !DILocation(line: 1661, column: 11, scope: !5010)
!5012 = !DILocation(line: 1665, column: 22, scope: !5010)
!5013 = !DILocation(line: 1666, column: 21, scope: !5010)
!5014 = !DILocation(line: 1668, column: 5, scope: !5010)
!5015 = !DILocation(line: 1677, column: 30, scope: !5016)
!5016 = distinct !DILexicalBlock(scope: !5017, file: !2597, line: 1676, column: 49)
!5017 = distinct !DILexicalBlock(scope: !4781, file: !2597, line: 1676, column: 8)
!5018 = !DILocation(line: 1677, column: 5, scope: !5016)
!5019 = !DILocation(line: 1680, column: 4, scope: !4781)
!5020 = !DILocation(line: 0, scope: !4962)
!5021 = !DILocation(line: 1597, column: 14, scope: !4783)
!5022 = !DILocation(line: 1699, column: 11, scope: !5023)
!5023 = distinct !DILexicalBlock(scope: !4714, file: !2597, line: 1699, column: 7)
!5024 = !DILocation(line: 1699, column: 7, scope: !4714)
!5025 = !DILocation(line: 1725, column: 7, scope: !5026)
!5026 = distinct !DILexicalBlock(scope: !4714, file: !2597, line: 1725, column: 7)
!5027 = !DILocation(line: 1725, column: 12, scope: !5026)
!5028 = !DILocation(line: 1747, column: 13, scope: !4793)
!5029 = !DILocation(line: 1747, column: 7, scope: !4714)
!5030 = !DILocation(line: 1722, column: 24, scope: !4714)
!5031 = !DILocation(line: 1725, column: 7, scope: !4714)
!5032 = !DILocation(line: 1729, column: 7, scope: !4714)
!5033 = !DILocation(line: 1736, column: 13, scope: !5034)
!5034 = distinct !DILexicalBlock(scope: !4714, file: !2597, line: 1736, column: 7)
!5035 = !DILocation(line: 1735, column: 19, scope: !4714)
!5036 = !DILocation(line: 1736, column: 7, scope: !4714)
!5037 = !DILocation(line: 1748, column: 10, scope: !4792)
!5038 = !DILocation(line: 1750, column: 15, scope: !4791)
!5039 = !DILocation(line: 1750, column: 8, scope: !4792)
!5040 = !DILocation(line: 0, scope: !4790)
!5041 = !DILocation(line: 1756, column: 15, scope: !4799)
!5042 = !DILocation(line: 1756, column: 9, scope: !4790)
!5043 = !DILocation(line: 1758, column: 7, scope: !4795)
!5044 = !DILocation(line: 0, scope: !4795)
!5045 = !DILocation(line: 1758, column: 7, scope: !5046)
!5046 = distinct !DILexicalBlock(scope: !4795, file: !2597, line: 1758, column: 7)
!5047 = !DILocation(line: 1764, column: 5, scope: !4790)
!5048 = !DILocation(line: 0, scope: !4792)
!5049 = !DILocation(line: 1764, column: 20, scope: !4790)
!5050 = !DILocation(line: 1764, column: 17, scope: !4790)
!5051 = !DILocation(line: 1765, column: 6, scope: !4801)
!5052 = !DILocation(line: 0, scope: !4801)
!5053 = !DILocation(line: 1765, column: 6, scope: !5054)
!5054 = distinct !DILexicalBlock(scope: !4801, file: !2597, line: 1765, column: 6)
!5055 = distinct !{!5055, !5047, !5056}
!5056 = !DILocation(line: 1766, column: 5, scope: !4790)
!5057 = !DILocation(line: 1773, column: 12, scope: !4806)
!5058 = !DILocation(line: 1773, column: 7, scope: !4714)
!5059 = !DILocation(line: 1773, column: 7, scope: !4806)
!5060 = !DILocation(line: 1774, column: 4, scope: !4804)
!5061 = !DILocation(line: 0, scope: !4804)
!5062 = !DILocation(line: 1774, column: 4, scope: !5063)
!5063 = distinct !DILexicalBlock(scope: !4804, file: !2597, line: 1774, column: 4)
!5064 = !DILocation(line: 1818, column: 8, scope: !4810)
!5065 = !DILocation(line: 1818, column: 27, scope: !4810)
!5066 = !DILocation(line: 1818, column: 25, scope: !4810)
!5067 = !DILocation(line: 1818, column: 8, scope: !4811)
!5068 = !DILocation(line: 1819, column: 5, scope: !4808)
!5069 = !DILocation(line: 0, scope: !4808)
!5070 = !DILocation(line: 1819, column: 5, scope: !5071)
!5071 = distinct !DILexicalBlock(scope: !4808, file: !2597, line: 1819, column: 5)
!5072 = !DILocation(line: 1822, column: 14, scope: !4816)
!5073 = !DILocation(line: 1822, column: 8, scope: !4811)
!5074 = !DILocation(line: 1823, column: 5, scope: !4814)
!5075 = !DILocation(line: 0, scope: !4814)
!5076 = !DILocation(line: 1823, column: 5, scope: !5077)
!5077 = distinct !DILexicalBlock(scope: !4814, file: !2597, line: 1823, column: 5)
!5078 = !DILocation(line: 1826, column: 20, scope: !4811)
!5079 = !DILocation(line: 1827, column: 4, scope: !4811)
!5080 = !DILocation(line: 0, scope: !4811)
!5081 = !DILocation(line: 1827, column: 21, scope: !4811)
!5082 = !DILocation(line: 1827, column: 18, scope: !4811)
!5083 = !DILocation(line: 1828, column: 5, scope: !4818)
!5084 = !DILocation(line: 0, scope: !4818)
!5085 = !DILocation(line: 1828, column: 5, scope: !5086)
!5086 = distinct !DILexicalBlock(scope: !4818, file: !2597, line: 1828, column: 5)
!5087 = distinct !{!5087, !5079, !5088}
!5088 = !DILocation(line: 1829, column: 4, scope: !4811)
!5089 = !DILocation(line: 1831, column: 4, scope: !4821)
!5090 = !DILocation(line: 0, scope: !4821)
!5091 = !DILocation(line: 1831, column: 4, scope: !5092)
!5092 = distinct !DILexicalBlock(scope: !4821, file: !2597, line: 1831, column: 4)
!5093 = !DILocation(line: 1835, column: 16, scope: !4714)
!5094 = !DILocation(line: 1835, column: 3, scope: !4714)
!5095 = !DILocation(line: 1836, column: 4, scope: !4823)
!5096 = !DILocation(line: 0, scope: !4823)
!5097 = !DILocation(line: 1836, column: 4, scope: !5098)
!5098 = distinct !DILexicalBlock(scope: !4823, file: !2597, line: 1836, column: 4)
!5099 = !DILocation(line: 1837, column: 4, scope: !4824)
!5100 = distinct !{!5100, !5094, !5101}
!5101 = !DILocation(line: 1838, column: 3, scope: !4714)
!5102 = !DILocation(line: 1844, column: 1, scope: !4687)
!5103 = distinct !DISubprogram(name: "extract_conversion", scope: !2597, file: !2597, line: 642, type: !5104, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !5106)
!5104 = !DISubroutineType(types: !5105)
!5105 = !{!279, !4760, !279}
!5106 = !{!5107, !5108}
!5107 = !DILocalVariable(name: "conv", arg: 1, scope: !5103, file: !2597, line: 642, type: !4760)
!5108 = !DILocalVariable(name: "sp", arg: 2, scope: !5103, file: !2597, line: 643, type: !279)
!5109 = !DILocation(line: 0, scope: !5103)
!5110 = !DILocation(line: 645, column: 10, scope: !5103)
!5111 = !DILocation(line: 653, column: 2, scope: !5103)
!5112 = !DILocation(line: 654, column: 6, scope: !5113)
!5113 = distinct !DILexicalBlock(scope: !5103, file: !2597, line: 654, column: 6)
!5114 = !DILocation(line: 654, column: 10, scope: !5113)
!5115 = !DILocation(line: 654, column: 6, scope: !5103)
!5116 = !DILocation(line: 655, column: 24, scope: !5117)
!5117 = distinct !DILexicalBlock(scope: !5113, file: !2597, line: 654, column: 18)
!5118 = !DILocation(line: 655, column: 19, scope: !5117)
!5119 = !DILocation(line: 656, column: 3, scope: !5117)
!5120 = !DILocation(line: 659, column: 7, scope: !5103)
!5121 = !DILocation(line: 660, column: 7, scope: !5103)
!5122 = !DILocation(line: 661, column: 7, scope: !5103)
!5123 = !DILocation(line: 662, column: 7, scope: !5103)
!5124 = !DILocation(line: 663, column: 7, scope: !5103)
!5125 = !DILocation(line: 665, column: 2, scope: !5103)
!5126 = !DILocation(line: 666, column: 1, scope: !5103)
!5127 = distinct !DISubprogram(name: "outs", scope: !2597, file: !2597, line: 1319, type: !5128, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !5130)
!5128 = !DISubroutineType(types: !5129)
!5129 = !{!109, !3841, !107, !279, !279}
!5130 = !{!5131, !5132, !5133, !5134, !5135, !5136}
!5131 = !DILocalVariable(name: "out", arg: 1, scope: !5127, file: !2597, line: 1319, type: !3841)
!5132 = !DILocalVariable(name: "ctx", arg: 2, scope: !5127, file: !2597, line: 1320, type: !107)
!5133 = !DILocalVariable(name: "sp", arg: 3, scope: !5127, file: !2597, line: 1321, type: !279)
!5134 = !DILocalVariable(name: "ep", arg: 4, scope: !5127, file: !2597, line: 1322, type: !279)
!5135 = !DILocalVariable(name: "count", scope: !5127, file: !2597, line: 1324, type: !232)
!5136 = !DILocalVariable(name: "rc", scope: !5137, file: !2597, line: 1327, type: !109)
!5137 = distinct !DILexicalBlock(scope: !5127, file: !2597, line: 1326, column: 45)
!5138 = !DILocation(line: 0, scope: !5127)
!5139 = !DILocation(line: 1326, column: 2, scope: !5127)
!5140 = !DILocation(line: 1324, column: 9, scope: !5127)
!5141 = !DILocation(line: 1326, column: 13, scope: !5127)
!5142 = !DILocation(line: 1326, column: 19, scope: !5127)
!5143 = !DILocation(line: 1327, column: 21, scope: !5137)
!5144 = !DILocation(line: 1326, column: 36, scope: !5127)
!5145 = !DILocation(line: 1326, column: 39, scope: !5127)
!5146 = !DILocation(line: 1327, column: 24, scope: !5137)
!5147 = !DILocation(line: 1327, column: 16, scope: !5137)
!5148 = !DILocation(line: 1327, column: 12, scope: !5137)
!5149 = !DILocation(line: 0, scope: !5137)
!5150 = !DILocation(line: 1329, column: 10, scope: !5151)
!5151 = distinct !DILexicalBlock(scope: !5137, file: !2597, line: 1329, column: 7)
!5152 = !DILocation(line: 1329, column: 7, scope: !5137)
!5153 = distinct !{!5153, !5139, !5154}
!5154 = !DILocation(line: 1333, column: 2, scope: !5127)
!5155 = !DILocation(line: 1336, column: 1, scope: !5127)
!5156 = distinct !DISubprogram(name: "encode_uint", scope: !2597, file: !2597, line: 788, type: !5157, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !5159)
!5157 = !DISubroutineType(types: !5158)
!5158 = !{!285, !2619, !4760, !285, !279}
!5159 = !{!5160, !5161, !5162, !5163, !5164, !5165, !5167, !5168}
!5160 = !DILocalVariable(name: "value", arg: 1, scope: !5156, file: !2597, line: 788, type: !2619)
!5161 = !DILocalVariable(name: "conv", arg: 2, scope: !5156, file: !2597, line: 789, type: !4760)
!5162 = !DILocalVariable(name: "bps", arg: 3, scope: !5156, file: !2597, line: 790, type: !285)
!5163 = !DILocalVariable(name: "bpe", arg: 4, scope: !5156, file: !2597, line: 791, type: !279)
!5164 = !DILocalVariable(name: "upcase", scope: !5156, file: !2597, line: 793, type: !347)
!5165 = !DILocalVariable(name: "radix", scope: !5156, file: !2597, line: 794, type: !5166)
!5166 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!5167 = !DILocalVariable(name: "bp", scope: !5156, file: !2597, line: 795, type: !285)
!5168 = !DILocalVariable(name: "lsv", scope: !5169, file: !2597, line: 798, type: !32)
!5169 = distinct !DILexicalBlock(scope: !5156, file: !2597, line: 797, column: 5)
!5170 = !DILocation(line: 0, scope: !5156)
!5171 = !DILocation(line: 793, column: 35, scope: !5156)
!5172 = !DILocation(line: 793, column: 24, scope: !5156)
!5173 = !DILocation(line: 793, column: 16, scope: !5156)
!5174 = !DILocation(line: 794, column: 29, scope: !5156)
!5175 = !DILocation(line: 795, column: 24, scope: !5156)
!5176 = !DILocation(line: 795, column: 17, scope: !5156)
!5177 = !DILocation(line: 797, column: 2, scope: !5156)
!5178 = !DILocation(line: 802, column: 9, scope: !5169)
!5179 = !DILocation(line: 798, column: 22, scope: !5169)
!5180 = !DILocation(line: 0, scope: !5169)
!5181 = !DILocation(line: 800, column: 16, scope: !5169)
!5182 = !DILocation(line: 800, column: 11, scope: !5169)
!5183 = !DILocation(line: 800, column: 4, scope: !5169)
!5184 = !DILocation(line: 800, column: 9, scope: !5169)
!5185 = !DILocation(line: 803, column: 18, scope: !5156)
!5186 = !DILocation(line: 803, column: 24, scope: !5156)
!5187 = !DILocation(line: 803, column: 2, scope: !5169)
!5188 = distinct !{!5188, !5177, !5189}
!5189 = !DILocation(line: 803, column: 37, scope: !5156)
!5190 = !DILocation(line: 808, column: 12, scope: !5191)
!5191 = distinct !DILexicalBlock(scope: !5156, file: !2597, line: 808, column: 6)
!5192 = !DILocation(line: 808, column: 6, scope: !5156)
!5193 = !DILocation(line: 809, column: 7, scope: !5194)
!5194 = distinct !DILexicalBlock(scope: !5191, file: !2597, line: 808, column: 23)
!5195 = !DILocation(line: 813, column: 3, scope: !5196)
!5196 = distinct !DILexicalBlock(scope: !5197, file: !2597, line: 811, column: 27)
!5197 = distinct !DILexicalBlock(scope: !5198, file: !2597, line: 811, column: 14)
!5198 = distinct !DILexicalBlock(scope: !5194, file: !2597, line: 809, column: 7)
!5199 = !DILocation(line: 0, scope: !5198)
!5200 = !DILocation(line: 818, column: 2, scope: !5156)
!5201 = distinct !DISubprogram(name: "store_count", scope: !2597, file: !2597, line: 1280, type: !5202, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !5206)
!5202 = !DISubroutineType(types: !5203)
!5203 = !{null, !5204, !107, !109}
!5204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5205, size: 32)
!5205 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4727)
!5206 = !{!5207, !5208, !5209}
!5207 = !DILocalVariable(name: "conv", arg: 1, scope: !5201, file: !2597, line: 1280, type: !5204)
!5208 = !DILocalVariable(name: "dp", arg: 2, scope: !5201, file: !2597, line: 1281, type: !107)
!5209 = !DILocalVariable(name: "count", arg: 3, scope: !5201, file: !2597, line: 1282, type: !109)
!5210 = !DILocation(line: 0, scope: !5201)
!5211 = !DILocation(line: 1284, column: 38, scope: !5201)
!5212 = !DILocation(line: 1284, column: 2, scope: !5201)
!5213 = !DILocation(line: 1286, column: 4, scope: !5214)
!5214 = distinct !DILexicalBlock(scope: !5201, file: !2597, line: 1284, column: 50)
!5215 = !DILocation(line: 1286, column: 14, scope: !5214)
!5216 = !DILocation(line: 1287, column: 3, scope: !5214)
!5217 = !DILocation(line: 1289, column: 24, scope: !5214)
!5218 = !DILocation(line: 1289, column: 22, scope: !5214)
!5219 = !DILocation(line: 1290, column: 3, scope: !5214)
!5220 = !DILocation(line: 1292, column: 18, scope: !5214)
!5221 = !DILocation(line: 1292, column: 4, scope: !5214)
!5222 = !DILocation(line: 1292, column: 16, scope: !5214)
!5223 = !DILocation(line: 1293, column: 3, scope: !5214)
!5224 = !DILocation(line: 1295, column: 4, scope: !5214)
!5225 = !DILocation(line: 1295, column: 15, scope: !5214)
!5226 = !DILocation(line: 1296, column: 3, scope: !5214)
!5227 = !DILocation(line: 1298, column: 22, scope: !5214)
!5228 = !DILocation(line: 1298, column: 4, scope: !5214)
!5229 = !DILocation(line: 1298, column: 20, scope: !5214)
!5230 = !DILocation(line: 1299, column: 3, scope: !5214)
!5231 = !DILocation(line: 1301, column: 21, scope: !5214)
!5232 = !DILocation(line: 1301, column: 4, scope: !5214)
!5233 = !DILocation(line: 1301, column: 19, scope: !5214)
!5234 = !DILocation(line: 1302, column: 3, scope: !5214)
!5235 = !DILocation(line: 1304, column: 4, scope: !5214)
!5236 = !DILocation(line: 1304, column: 17, scope: !5214)
!5237 = !DILocation(line: 1305, column: 3, scope: !5214)
!5238 = !DILocation(line: 1307, column: 4, scope: !5214)
!5239 = !DILocation(line: 1307, column: 20, scope: !5214)
!5240 = !DILocation(line: 1308, column: 3, scope: !5214)
!5241 = !DILocation(line: 1316, column: 1, scope: !5201)
!5242 = distinct !DISubprogram(name: "isupper", scope: !5243, file: !5243, line: 16, type: !303, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !5244)
!5243 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5244 = !{!5245}
!5245 = !DILocalVariable(name: "a", arg: 1, scope: !5242, file: !5243, line: 16, type: !109)
!5246 = !DILocation(line: 0, scope: !5242)
!5247 = !DILocation(line: 18, column: 29, scope: !5242)
!5248 = !DILocation(line: 18, column: 45, scope: !5242)
!5249 = !DILocation(line: 18, column: 2, scope: !5242)
!5250 = distinct !DISubprogram(name: "conversion_radix", scope: !2597, file: !2597, line: 761, type: !5251, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !5253)
!5251 = !DISubroutineType(types: !5252)
!5252 = !{!232, !148}
!5253 = !{!5254}
!5254 = !DILocalVariable(name: "specifier", arg: 1, scope: !5250, file: !2597, line: 761, type: !148)
!5255 = !DILocation(line: 0, scope: !5250)
!5256 = !DILocation(line: 763, column: 2, scope: !5250)
!5257 = !DILocation(line: 770, column: 3, scope: !5258)
!5258 = distinct !DILexicalBlock(scope: !5250, file: !2597, line: 763, column: 21)
!5259 = !DILocation(line: 774, column: 3, scope: !5258)
!5260 = !DILocation(line: 0, scope: !5258)
!5261 = !DILocation(line: 776, column: 1, scope: !5250)
!5262 = distinct !DISubprogram(name: "extract_flags", scope: !2597, file: !2597, line: 339, type: !5104, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !5263)
!5263 = !{!5264, !5265, !5266}
!5264 = !DILocalVariable(name: "conv", arg: 1, scope: !5262, file: !2597, line: 339, type: !4760)
!5265 = !DILocalVariable(name: "sp", arg: 2, scope: !5262, file: !2597, line: 340, type: !279)
!5266 = !DILocalVariable(name: "loop", scope: !5262, file: !2597, line: 342, type: !347)
!5267 = !DILocation(line: 0, scope: !5262)
!5268 = !DILocation(line: 344, column: 2, scope: !5262)
!5269 = !DILocation(line: 345, column: 11, scope: !5270)
!5270 = distinct !DILexicalBlock(scope: !5262, file: !2597, line: 344, column: 5)
!5271 = !DILocation(line: 345, column: 3, scope: !5270)
!5272 = !DILocation(line: 351, column: 4, scope: !5273)
!5273 = distinct !DILexicalBlock(scope: !5270, file: !2597, line: 345, column: 16)
!5274 = !DILocation(line: 354, column: 4, scope: !5273)
!5275 = !DILocation(line: 357, column: 4, scope: !5273)
!5276 = !DILocation(line: 360, column: 4, scope: !5273)
!5277 = !DILocation(line: 0, scope: !5273)
!5278 = !DILocation(line: 370, column: 12, scope: !5279)
!5279 = distinct !DILexicalBlock(scope: !5262, file: !2597, line: 370, column: 6)
!5280 = !DILocation(line: 370, column: 22, scope: !5279)
!5281 = !DILocation(line: 371, column: 19, scope: !5282)
!5282 = distinct !DILexicalBlock(scope: !5279, file: !2597, line: 370, column: 42)
!5283 = !DILocation(line: 372, column: 2, scope: !5282)
!5284 = !DILocation(line: 376, column: 2, scope: !5262)
!5285 = distinct !DISubprogram(name: "extract_width", scope: !2597, file: !2597, line: 388, type: !5104, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !5286)
!5286 = !{!5287, !5288, !5289, !5290}
!5287 = !DILocalVariable(name: "conv", arg: 1, scope: !5285, file: !2597, line: 388, type: !4760)
!5288 = !DILocalVariable(name: "sp", arg: 2, scope: !5285, file: !2597, line: 389, type: !279)
!5289 = !DILocalVariable(name: "wp", scope: !5285, file: !2597, line: 398, type: !279)
!5290 = !DILocalVariable(name: "width", scope: !5285, file: !2597, line: 399, type: !232)
!5291 = !DILocation(line: 0, scope: !5285)
!5292 = !DILocation(line: 391, column: 8, scope: !5285)
!5293 = !DILocation(line: 391, column: 22, scope: !5285)
!5294 = !DILocation(line: 393, column: 6, scope: !5295)
!5295 = distinct !DILexicalBlock(scope: !5285, file: !2597, line: 393, column: 6)
!5296 = !DILocation(line: 393, column: 10, scope: !5295)
!5297 = !DILocation(line: 393, column: 6, scope: !5285)
!5298 = !DILocation(line: 394, column: 20, scope: !5299)
!5299 = distinct !DILexicalBlock(scope: !5295, file: !2597, line: 393, column: 18)
!5300 = !DILocation(line: 395, column: 10, scope: !5299)
!5301 = !DILocation(line: 395, column: 3, scope: !5299)
!5302 = !DILocation(line: 399, column: 17, scope: !5285)
!5303 = !DILocation(line: 401, column: 6, scope: !5304)
!5304 = distinct !DILexicalBlock(scope: !5285, file: !2597, line: 401, column: 6)
!5305 = !DILocation(line: 401, column: 9, scope: !5304)
!5306 = !DILocation(line: 401, column: 6, scope: !5285)
!5307 = !DILocation(line: 402, column: 23, scope: !5308)
!5308 = distinct !DILexicalBlock(scope: !5304, file: !2597, line: 401, column: 16)
!5309 = !DILocation(line: 403, column: 9, scope: !5308)
!5310 = !DILocation(line: 403, column: 21, scope: !5308)
!5311 = !DILocation(line: 405, column: 11, scope: !5308)
!5312 = !DILocation(line: 404, column: 21, scope: !5308)
!5313 = !DILocation(line: 406, column: 2, scope: !5308)
!5314 = !DILocation(line: 409, column: 1, scope: !5285)
!5315 = distinct !DISubprogram(name: "extract_prec", scope: !2597, file: !2597, line: 420, type: !5104, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !5316)
!5316 = !{!5317, !5318, !5319}
!5317 = !DILocalVariable(name: "conv", arg: 1, scope: !5315, file: !2597, line: 420, type: !4760)
!5318 = !DILocalVariable(name: "sp", arg: 2, scope: !5315, file: !2597, line: 421, type: !279)
!5319 = !DILocalVariable(name: "prec", scope: !5315, file: !2597, line: 435, type: !232)
!5320 = !DILocation(line: 0, scope: !5315)
!5321 = !DILocation(line: 423, column: 24, scope: !5315)
!5322 = !DILocation(line: 423, column: 28, scope: !5315)
!5323 = !DILocation(line: 423, column: 8, scope: !5315)
!5324 = !DILocation(line: 423, column: 21, scope: !5315)
!5325 = !DILocation(line: 425, column: 6, scope: !5315)
!5326 = !DILocation(line: 428, column: 2, scope: !5315)
!5327 = !DILocation(line: 430, column: 6, scope: !5328)
!5328 = distinct !DILexicalBlock(scope: !5315, file: !2597, line: 430, column: 6)
!5329 = !DILocation(line: 430, column: 10, scope: !5328)
!5330 = !DILocation(line: 430, column: 6, scope: !5315)
!5331 = !DILocation(line: 431, column: 19, scope: !5332)
!5332 = distinct !DILexicalBlock(scope: !5328, file: !2597, line: 430, column: 18)
!5333 = !DILocation(line: 432, column: 10, scope: !5332)
!5334 = !DILocation(line: 432, column: 3, scope: !5332)
!5335 = !DILocation(line: 435, column: 16, scope: !5315)
!5336 = !DILocation(line: 437, column: 8, scope: !5315)
!5337 = !DILocation(line: 437, column: 19, scope: !5315)
!5338 = !DILocation(line: 439, column: 10, scope: !5315)
!5339 = !DILocation(line: 438, column: 20, scope: !5315)
!5340 = !DILocation(line: 441, column: 9, scope: !5315)
!5341 = !DILocation(line: 442, column: 1, scope: !5315)
!5342 = distinct !DISubprogram(name: "extract_length", scope: !2597, file: !2597, line: 453, type: !5104, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !5343)
!5343 = !{!5344, !5345}
!5344 = !DILocalVariable(name: "conv", arg: 1, scope: !5342, file: !2597, line: 453, type: !4760)
!5345 = !DILocalVariable(name: "sp", arg: 2, scope: !5342, file: !2597, line: 454, type: !279)
!5346 = !DILocation(line: 0, scope: !5342)
!5347 = !DILocation(line: 456, column: 10, scope: !5342)
!5348 = !DILocation(line: 456, column: 2, scope: !5342)
!5349 = !DILocation(line: 458, column: 8, scope: !5350)
!5350 = distinct !DILexicalBlock(scope: !5351, file: !2597, line: 458, column: 7)
!5351 = distinct !DILexicalBlock(scope: !5342, file: !2597, line: 456, column: 15)
!5352 = !DILocation(line: 458, column: 7, scope: !5350)
!5353 = !DILocation(line: 458, column: 13, scope: !5350)
!5354 = !DILocation(line: 0, scope: !5350)
!5355 = !DILocation(line: 458, column: 7, scope: !5351)
!5356 = !DILocation(line: 459, column: 21, scope: !5357)
!5357 = distinct !DILexicalBlock(scope: !5350, file: !2597, line: 458, column: 21)
!5358 = !DILocation(line: 460, column: 4, scope: !5357)
!5359 = !DILocation(line: 461, column: 3, scope: !5357)
!5360 = !DILocation(line: 462, column: 21, scope: !5361)
!5361 = distinct !DILexicalBlock(scope: !5350, file: !2597, line: 461, column: 10)
!5362 = !DILocation(line: 466, column: 8, scope: !5363)
!5363 = distinct !DILexicalBlock(scope: !5351, file: !2597, line: 466, column: 7)
!5364 = !DILocation(line: 466, column: 7, scope: !5363)
!5365 = !DILocation(line: 466, column: 13, scope: !5363)
!5366 = !DILocation(line: 0, scope: !5363)
!5367 = !DILocation(line: 466, column: 7, scope: !5351)
!5368 = !DILocation(line: 467, column: 21, scope: !5369)
!5369 = distinct !DILexicalBlock(scope: !5363, file: !2597, line: 466, column: 21)
!5370 = !DILocation(line: 468, column: 4, scope: !5369)
!5371 = !DILocation(line: 469, column: 3, scope: !5369)
!5372 = !DILocation(line: 470, column: 21, scope: !5373)
!5373 = distinct !DILexicalBlock(scope: !5363, file: !2597, line: 469, column: 10)
!5374 = !DILocation(line: 474, column: 9, scope: !5351)
!5375 = !DILocation(line: 474, column: 20, scope: !5351)
!5376 = !DILocation(line: 475, column: 3, scope: !5351)
!5377 = !DILocation(line: 476, column: 3, scope: !5351)
!5378 = !DILocation(line: 478, column: 9, scope: !5351)
!5379 = !DILocation(line: 478, column: 20, scope: !5351)
!5380 = !DILocation(line: 479, column: 3, scope: !5351)
!5381 = !DILocation(line: 480, column: 3, scope: !5351)
!5382 = !DILocation(line: 482, column: 9, scope: !5351)
!5383 = !DILocation(line: 482, column: 20, scope: !5351)
!5384 = !DILocation(line: 483, column: 3, scope: !5351)
!5385 = !DILocation(line: 484, column: 3, scope: !5351)
!5386 = !DILocation(line: 486, column: 9, scope: !5351)
!5387 = !DILocation(line: 486, column: 20, scope: !5351)
!5388 = !DILocation(line: 487, column: 3, scope: !5351)
!5389 = !DILocation(line: 492, column: 21, scope: !5351)
!5390 = !DILocation(line: 493, column: 3, scope: !5351)
!5391 = !DILocation(line: 495, column: 9, scope: !5351)
!5392 = !DILocation(line: 495, column: 20, scope: !5351)
!5393 = !DILocation(line: 496, column: 3, scope: !5351)
!5394 = !DILocation(line: 498, column: 2, scope: !5342)
!5395 = distinct !DISubprogram(name: "extract_specifier", scope: !2597, file: !2597, line: 513, type: !5104, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !5396)
!5396 = !{!5397, !5398, !5399, !5400}
!5397 = !DILocalVariable(name: "conv", arg: 1, scope: !5395, file: !2597, line: 513, type: !4760)
!5398 = !DILocalVariable(name: "sp", arg: 2, scope: !5395, file: !2597, line: 514, type: !279)
!5399 = !DILocalVariable(name: "unsupported", scope: !5395, file: !2597, line: 516, type: !347)
!5400 = !DILabel(scope: !5401, name: "int_conv", file: !2597, line: 526)
!5401 = distinct !DILexicalBlock(scope: !5395, file: !2597, line: 520, column: 27)
!5402 = !DILocation(line: 0, scope: !5395)
!5403 = !DILocation(line: 518, column: 20, scope: !5395)
!5404 = !DILocation(line: 518, column: 8, scope: !5395)
!5405 = !DILocation(line: 518, column: 18, scope: !5395)
!5406 = !DILocation(line: 520, column: 2, scope: !5395)
!5407 = !DILocation(line: 525, column: 3, scope: !5401)
!5408 = !DILocation(line: 0, scope: !5401)
!5409 = !DILocation(line: 526, column: 1, scope: !5401)
!5410 = !DILocation(line: 528, column: 24, scope: !5411)
!5411 = distinct !DILexicalBlock(scope: !5401, file: !2597, line: 528, column: 7)
!5412 = !DILocation(line: 528, column: 7, scope: !5401)
!5413 = !DILocation(line: 535, column: 23, scope: !5414)
!5414 = distinct !DILexicalBlock(scope: !5401, file: !2597, line: 535, column: 7)
!5415 = !DILocation(line: 535, column: 7, scope: !5401)
!5416 = !DILocation(line: 536, column: 36, scope: !5417)
!5417 = distinct !DILexicalBlock(scope: !5414, file: !2597, line: 535, column: 31)
!5418 = !DILocation(line: 537, column: 3, scope: !5417)
!5419 = !DILocation(line: 570, column: 9, scope: !5401)
!5420 = !DILocation(line: 570, column: 23, scope: !5401)
!5421 = !DILocation(line: 575, column: 4, scope: !5422)
!5422 = distinct !DILexicalBlock(scope: !5423, file: !2597, line: 573, column: 48)
!5423 = distinct !DILexicalBlock(scope: !5401, file: !2597, line: 573, column: 7)
!5424 = !DILocation(line: 603, column: 9, scope: !5401)
!5425 = !DILocation(line: 603, column: 23, scope: !5401)
!5426 = !DILocation(line: 605, column: 24, scope: !5427)
!5427 = distinct !DILexicalBlock(scope: !5401, file: !2597, line: 605, column: 7)
!5428 = !DILocation(line: 605, column: 7, scope: !5401)
!5429 = !DILocation(line: 612, column: 9, scope: !5401)
!5430 = !DILocation(line: 612, column: 23, scope: !5401)
!5431 = !DILocation(line: 619, column: 24, scope: !5432)
!5432 = distinct !DILexicalBlock(scope: !5401, file: !2597, line: 619, column: 7)
!5433 = !DILocation(line: 619, column: 7, scope: !5401)
!5434 = !DILocation(line: 625, column: 9, scope: !5401)
!5435 = !DILocation(line: 625, column: 17, scope: !5401)
!5436 = !DILocation(line: 626, column: 3, scope: !5401)
!5437 = !DILocation(line: 629, column: 20, scope: !5395)
!5438 = !DILocation(line: 629, column: 8, scope: !5395)
!5439 = !DILocation(line: 518, column: 23, scope: !5395)
!5440 = !DILocation(line: 631, column: 2, scope: !5395)
!5441 = distinct !DISubprogram(name: "extract_decimal", scope: !2597, file: !2597, line: 318, type: !5442, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !5444)
!5442 = !DISubroutineType(types: !5443)
!5443 = !{!232, !278}
!5444 = !{!5445, !5446, !5447}
!5445 = !DILocalVariable(name: "str", arg: 1, scope: !5441, file: !2597, line: 318, type: !278)
!5446 = !DILocalVariable(name: "sp", scope: !5441, file: !2597, line: 320, type: !279)
!5447 = !DILocalVariable(name: "val", scope: !5441, file: !2597, line: 321, type: !232)
!5448 = !DILocation(line: 0, scope: !5441)
!5449 = !DILocation(line: 320, column: 19, scope: !5441)
!5450 = !DILocation(line: 323, column: 37, scope: !5441)
!5451 = !DILocation(line: 323, column: 17, scope: !5441)
!5452 = !DILocation(line: 323, column: 9, scope: !5441)
!5453 = !DILocation(line: 323, column: 2, scope: !5441)
!5454 = !DILocation(line: 324, column: 13, scope: !5455)
!5455 = distinct !DILexicalBlock(scope: !5441, file: !2597, line: 323, column: 43)
!5456 = !DILocation(line: 324, column: 24, scope: !5455)
!5457 = !DILocation(line: 324, column: 19, scope: !5455)
!5458 = !DILocation(line: 324, column: 27, scope: !5455)
!5459 = distinct !{!5459, !5453, !5460}
!5460 = !DILocation(line: 325, column: 2, scope: !5441)
!5461 = !DILocation(line: 326, column: 7, scope: !5441)
!5462 = !DILocation(line: 327, column: 2, scope: !5441)
!5463 = distinct !DISubprogram(name: "isdigit", scope: !5243, file: !5243, line: 43, type: !303, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2593, retainedNodes: !5464)
!5464 = !{!5465}
!5465 = !DILocalVariable(name: "a", arg: 1, scope: !5463, file: !5243, line: 43, type: !109)
!5466 = !DILocation(line: 0, scope: !5463)
!5467 = !DILocation(line: 45, column: 29, scope: !5463)
!5468 = !DILocation(line: 45, column: 45, scope: !5463)
!5469 = !DILocation(line: 45, column: 2, scope: !5463)
!5470 = distinct !DISubprogram(name: "assert_post_action", scope: !5471, file: !5471, line: 26, type: !5472, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !5474)
!5471 = !DIFile(filename: "zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5472 = !DISubroutineType(types: !5473)
!5473 = !{null, !279, !32}
!5474 = !{!5475, !5476}
!5475 = !DILocalVariable(name: "file", arg: 1, scope: !5470, file: !5471, line: 26, type: !279)
!5476 = !DILocalVariable(name: "line", arg: 2, scope: !5470, file: !5471, line: 26, type: !32)
!5477 = !DILocation(line: 0, scope: !5470)
!5478 = !DILocation(line: 43, column: 2, scope: !5479)
!5479 = distinct !DILexicalBlock(scope: !5470, file: !5471, line: 43, column: 2)
!5480 = !{i64 2155071581, i64 2155071597, i64 2155071623, i64 2155071651, i64 2155071671}
!5481 = !DILocation(line: 44, column: 1, scope: !5470)
!5482 = distinct !DISubprogram(name: "assert_print", scope: !5471, file: !5471, line: 46, type: !4453, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2627, retainedNodes: !5483)
!5483 = !{!5484, !5485}
!5484 = !DILocalVariable(name: "fmt", arg: 1, scope: !5482, file: !5471, line: 46, type: !279)
!5485 = !DILocalVariable(name: "ap", scope: !5482, file: !5471, line: 48, type: !5486)
!5486 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3459, line: 99, baseType: !5487)
!5487 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3459, line: 40, baseType: !5488)
!5488 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !5471, baseType: !5489)
!5489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5490)
!5490 = !{!5491}
!5491 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5489, file: !5471, line: 48, baseType: !107, size: 32)
!5492 = !DILocation(line: 0, scope: !5482)
!5493 = !DILocation(line: 48, column: 2, scope: !5482)
!5494 = !DILocation(line: 48, column: 10, scope: !5482)
!5495 = !DILocation(line: 50, column: 2, scope: !5482)
!5496 = !DILocation(line: 52, column: 2, scope: !5482)
!5497 = !DILocation(line: 54, column: 2, scope: !5482)
!5498 = !DILocation(line: 55, column: 1, scope: !5482)
!5499 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5500, file: !5500, line: 9, type: !3155, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2629, retainedNodes: !2106)
!5500 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/simple")
!5501 = !DILocation(line: 11, column: 1, scope: !5499)
!5502 = !{i64 2147565732, i64 2147565775, i64 2147565815}
!5503 = !DILocation(line: 12, column: 1, scope: !5499)
!5504 = !{i64 2147569959, i64 2147570002, i64 2147570042}
!5505 = !DILocation(line: 13, column: 1, scope: !5499)
!5506 = !{i64 2147570168, i64 2147570211, i64 2147570251}
!5507 = !DILocation(line: 14, column: 1, scope: !5499)
!5508 = !{i64 2147570337, i64 2147570380, i64 2147570420}
!5509 = !DILocation(line: 15, column: 1, scope: !5499)
!5510 = !{i64 2147570500, i64 2147570543, i64 2147570583}
!5511 = !DILocation(line: 16, column: 1, scope: !5499)
!5512 = !{i64 2147570684, i64 2147570727, i64 2147570767}
!5513 = !DILocation(line: 17, column: 1, scope: !5499)
!5514 = !{i64 2147570863, i64 2147570906, i64 2147570946}
!5515 = !DILocation(line: 18, column: 1, scope: !5499)
!5516 = !{i64 2147571105, i64 2147571148, i64 2147571188}
!5517 = !DILocation(line: 19, column: 1, scope: !5499)
!5518 = !{i64 2147571340, i64 2147571383, i64 2147571423}
!5519 = !DILocation(line: 20, column: 1, scope: !5499)
!5520 = !{i64 2147571526, i64 2147571569, i64 2147571609}
!5521 = !DILocation(line: 21, column: 1, scope: !5499)
!5522 = !{i64 2147571742, i64 2147571785, i64 2147571825}
!5523 = !DILocation(line: 22, column: 1, scope: !5499)
!5524 = !{i64 2147571945, i64 2147571988, i64 2147572028}
!5525 = !DILocation(line: 23, column: 1, scope: !5499)
!5526 = !{i64 2147572148, i64 2147572191, i64 2147572231}
!5527 = !DILocation(line: 24, column: 1, scope: !5499)
!5528 = !{i64 2147572323, i64 2147572366, i64 2147572406}
!5529 = !DILocation(line: 25, column: 1, scope: !5499)
!5530 = !{i64 2147572531, i64 2147572574, i64 2147572614}
!5531 = !DILocation(line: 26, column: 1, scope: !5499)
!5532 = !{i64 2147572735, i64 2147572778, i64 2147572818}
!5533 = !DILocation(line: 27, column: 1, scope: !5499)
!5534 = !{i64 2147572928, i64 2147572971, i64 2147573011}
!5535 = !DILocation(line: 28, column: 1, scope: !5499)
!5536 = !{i64 2147573130, i64 2147573173, i64 2147573213}
!5537 = !DILocation(line: 29, column: 1, scope: !5499)
!5538 = !{i64 2147573329, i64 2147573372, i64 2147573412}
!5539 = !DILocation(line: 30, column: 1, scope: !5499)
!5540 = !{i64 2147573556, i64 2147573599, i64 2147573639}
!5541 = !DILocation(line: 31, column: 1, scope: !5499)
!5542 = !{i64 2147573758, i64 2147573801, i64 2147573841}
!5543 = !DILocation(line: 32, column: 1, scope: !5499)
!5544 = !{i64 2147573973, i64 2147574016, i64 2147574056}
!5545 = !DILocation(line: 33, column: 1, scope: !5499)
!5546 = !{i64 2147574190, i64 2147574233, i64 2147574273}
!5547 = !DILocation(line: 34, column: 1, scope: !5499)
!5548 = !{i64 2147574362, i64 2147574405, i64 2147574445}
!5549 = !DILocation(line: 35, column: 1, scope: !5499)
!5550 = !{i64 2147574564, i64 2147574607, i64 2147574647}
!5551 = !DILocation(line: 36, column: 1, scope: !5499)
!5552 = !{i64 2147574790, i64 2147574833, i64 2147574873}
!5553 = !DILocation(line: 37, column: 1, scope: !5499)
!5554 = !{i64 2147574989, i64 2147575032, i64 2147575072}
!5555 = !DILocation(line: 38, column: 1, scope: !5499)
!5556 = !{i64 2147575164, i64 2147575207, i64 2147575247}
!5557 = !DILocation(line: 39, column: 1, scope: !5499)
!5558 = !{i64 2147575417, i64 2147575460, i64 2147575500}
!5559 = !DILocation(line: 40, column: 1, scope: !5499)
!5560 = !{i64 2147575658, i64 2147575701, i64 2147575741}
!5561 = !DILocation(line: 41, column: 1, scope: !5499)
!5562 = !{i64 2147575893, i64 2147575936, i64 2147575976}
!5563 = !DILocation(line: 42, column: 1, scope: !5499)
!5564 = !{i64 2147576125, i64 2147576168, i64 2147576208}
!5565 = !DILocation(line: 43, column: 1, scope: !5499)
!5566 = !{i64 2147576351, i64 2147576394, i64 2147576434}
!5567 = !DILocation(line: 44, column: 1, scope: !5499)
!5568 = !{i64 2147576577, i64 2147576620, i64 2147576660}
!5569 = !DILocation(line: 45, column: 1, scope: !5499)
!5570 = !{i64 2147576803, i64 2147576846, i64 2147576886}
!5571 = !DILocation(line: 46, column: 1, scope: !5499)
!5572 = !{i64 2147577038, i64 2147577081, i64 2147577121}
!5573 = !DILocation(line: 47, column: 1, scope: !5499)
!5574 = !{i64 2147577282, i64 2147577325, i64 2147577365}
!5575 = !DILocation(line: 48, column: 1, scope: !5499)
!5576 = !{i64 2147577529, i64 2147577572, i64 2147577612}
!5577 = !DILocation(line: 49, column: 1, scope: !5499)
!5578 = !{i64 2147577761, i64 2147577804, i64 2147577844}
!5579 = !DILocation(line: 50, column: 1, scope: !5499)
!5580 = !{i64 2147578005, i64 2147578048, i64 2147578088}
!5581 = !DILocation(line: 51, column: 1, scope: !5499)
!5582 = !{i64 2147578243, i64 2147578286, i64 2147578326}
!5583 = !DILocation(line: 52, column: 1, scope: !5499)
!5584 = !{i64 2147578517, i64 2147578560, i64 2147578600}
!5585 = !DILocation(line: 53, column: 1, scope: !5499)
!5586 = !{i64 2147582816, i64 2147582859, i64 2147582899}
!5587 = !DILocation(line: 54, column: 1, scope: !5499)
!5588 = !{i64 2147583069, i64 2147583112, i64 2147583152}
!5589 = !DILocation(line: 55, column: 1, scope: !5499)
!5590 = !{i64 2147583313, i64 2147583356, i64 2147583396}
!5591 = !DILocation(line: 56, column: 1, scope: !5499)
!5592 = !{i64 2147583548, i64 2147583591, i64 2147583631}
!5593 = !DILocation(line: 57, column: 1, scope: !5499)
!5594 = !{i64 2147583798, i64 2147583841, i64 2147583881}
!5595 = !DILocation(line: 58, column: 1, scope: !5499)
!5596 = !{i64 2147584045, i64 2147584088, i64 2147584128}
!5597 = !DILocation(line: 59, column: 1, scope: !5499)
!5598 = !{i64 2147584280, i64 2147584323, i64 2147584363}
!5599 = !DILocation(line: 60, column: 1, scope: !5499)
!5600 = !{i64 2147584515, i64 2147584558, i64 2147584598}
!5601 = !DILocation(line: 61, column: 1, scope: !5499)
!5602 = !{i64 2147584750, i64 2147584793, i64 2147584833}
!5603 = !DILocation(line: 62, column: 1, scope: !5499)
!5604 = !{i64 2147584985, i64 2147585028, i64 2147585068}
!5605 = !DILocation(line: 63, column: 1, scope: !5499)
!5606 = !{i64 2147585229, i64 2147585272, i64 2147585312}
!5607 = !DILocation(line: 64, column: 1, scope: !5499)
!5608 = !{i64 2147585467, i64 2147585510, i64 2147585550}
!5609 = !DILocation(line: 65, column: 1, scope: !5499)
!5610 = !{i64 2147585708, i64 2147585751, i64 2147585791}
!5611 = !DILocation(line: 66, column: 1, scope: !5499)
!5612 = !{i64 2147585988, i64 2147586031, i64 2147586071}
!5613 = !DILocation(line: 67, column: 1, scope: !5499)
!5614 = !{i64 2147586247, i64 2147586290, i64 2147586330}
!5615 = !DILocation(line: 68, column: 1, scope: !5499)
!5616 = !{i64 2147586485, i64 2147586528, i64 2147586568}
!5617 = !DILocation(line: 69, column: 1, scope: !5499)
!5618 = !{i64 2147586714, i64 2147586757, i64 2147586797}
!5619 = !DILocation(line: 70, column: 1, scope: !5499)
!5620 = !{i64 2147586922, i64 2147586965, i64 2147587005}
!5621 = !DILocation(line: 71, column: 1, scope: !5499)
!5622 = !{i64 2147587133, i64 2147587176, i64 2147587216}
!5623 = !DILocation(line: 72, column: 1, scope: !5499)
!5624 = !{i64 2147587368, i64 2147587411, i64 2147587451}
!5625 = !DILocation(line: 73, column: 1, scope: !5499)
!5626 = !{i64 2147587597, i64 2147587640, i64 2147587680}
!5627 = !DILocation(line: 74, column: 1, scope: !5499)
!5628 = !{i64 2147587814, i64 2147587857, i64 2147587897}
!5629 = !DILocation(line: 75, column: 1, scope: !5499)
!5630 = !{i64 2147588043, i64 2147588086, i64 2147588126}
!5631 = !DILocation(line: 76, column: 1, scope: !5499)
!5632 = !{i64 2147588281, i64 2147588324, i64 2147588364}
!5633 = !DILocation(line: 77, column: 1, scope: !5499)
!5634 = !{i64 2147588513, i64 2147588556, i64 2147588596}
!5635 = !DILocation(line: 78, column: 1, scope: !5499)
!5636 = !{i64 2147588739, i64 2147588782, i64 2147588822}
!5637 = !DILocation(line: 79, column: 1, scope: !5499)
!5638 = !{i64 2147588956, i64 2147588999, i64 2147589039}
!5639 = !DILocation(line: 80, column: 1, scope: !5499)
!5640 = !{i64 2147589188, i64 2147589231, i64 2147589271}
!5641 = !DILocation(line: 81, column: 1, scope: !5499)
!5642 = !{i64 2147589414, i64 2147589457, i64 2147589497}
!5643 = !DILocation(line: 82, column: 1, scope: !5499)
!5644 = !{i64 2147589628, i64 2147589671, i64 2147589711}
!5645 = !DILocation(line: 83, column: 1, scope: !5499)
!5646 = !{i64 2147589848, i64 2147589891, i64 2147589931}
!5647 = !DILocation(line: 84, column: 1, scope: !5499)
!5648 = !{i64 2147590080, i64 2147590123, i64 2147590163}
!5649 = !DILocation(line: 85, column: 1, scope: !5499)
!5650 = !{i64 2147590288, i64 2147590331, i64 2147590371}
!5651 = !DILocation(line: 86, column: 1, scope: !5499)
!5652 = !{i64 2147590493, i64 2147590536, i64 2147590576}
!5653 = !DILocation(line: 87, column: 1, scope: !5499)
!5654 = !{i64 2147590710, i64 2147590753, i64 2147590793}
!5655 = !DILocation(line: 88, column: 1, scope: !5499)
!5656 = !{i64 2147594985, i64 2147595028, i64 2147595068}
!5657 = !DILocation(line: 89, column: 1, scope: !5499)
!5658 = !{i64 2147595211, i64 2147595254, i64 2147595294}
!5659 = !DILocation(line: 90, column: 1, scope: !5499)
!5660 = !{i64 2147595431, i64 2147595474, i64 2147595514}
!5661 = !DILocation(line: 91, column: 1, scope: !5499)
!5662 = !{i64 2147595636, i64 2147595679, i64 2147595719}
!5663 = !DILocation(line: 92, column: 1, scope: !5499)
!5664 = !{i64 2147595868, i64 2147595911, i64 2147595951}
!5665 = !DILocation(line: 93, column: 1, scope: !5499)
!5666 = !{i64 2147596103, i64 2147596146, i64 2147596186}
!5667 = !DILocation(line: 94, column: 1, scope: !5499)
!5668 = !{i64 2147596353, i64 2147596396, i64 2147596436}
!5669 = !DILocation(line: 95, column: 1, scope: !5499)
!5670 = !{i64 2147596603, i64 2147596646, i64 2147596686}
!5671 = !DILocation(line: 96, column: 1, scope: !5499)
!5672 = !{i64 2147596841, i64 2147596884, i64 2147596924}
!5673 = !DILocation(line: 97, column: 1, scope: !5499)
!5674 = !{i64 2147597052, i64 2147597095, i64 2147597135}
!5675 = !DILocation(line: 98, column: 1, scope: !5499)
!5676 = !{i64 2147597269, i64 2147597312, i64 2147597352}
!5677 = !DILocation(line: 99, column: 1, scope: !5499)
!5678 = !{i64 2147597465, i64 2147597508, i64 2147597548}
!5679 = !DILocation(line: 100, column: 1, scope: !5499)
!5680 = !{i64 2147597667, i64 2147597710, i64 2147597750}
!5681 = !DILocation(line: 101, column: 1, scope: !5499)
!5682 = !{i64 2147597860, i64 2147597903, i64 2147597943}
!5683 = !DILocation(line: 102, column: 1, scope: !5499)
!5684 = !{i64 2147598068, i64 2147598111, i64 2147598151}
!5685 = !DILocation(line: 103, column: 1, scope: !5499)
!5686 = !{i64 2147598264, i64 2147598307, i64 2147598347}
!5687 = !DILocation(line: 104, column: 1, scope: !5499)
!5688 = !{i64 2147598496, i64 2147598539, i64 2147598579}
!5689 = !DILocation(line: 105, column: 1, scope: !5499)
!5690 = !{i64 2147598707, i64 2147598750, i64 2147598790}
!5691 = !DILocation(line: 106, column: 1, scope: !5499)
!5692 = !{i64 2147598906, i64 2147598949, i64 2147598989}
!5693 = !DILocation(line: 107, column: 1, scope: !5499)
!5694 = !{i64 2147599081, i64 2147599124, i64 2147599164}
!5695 = !DILocation(line: 108, column: 1, scope: !5499)
!5696 = !{i64 2147599265, i64 2147599308, i64 2147599348}
!5697 = !DILocation(line: 109, column: 1, scope: !5499)
!5698 = !{i64 2147599467, i64 2147599510, i64 2147599550}
!5699 = !DILocation(line: 110, column: 1, scope: !5499)
!5700 = !{i64 2147599666, i64 2147599709, i64 2147599749}
!5701 = !DILocation(line: 111, column: 1, scope: !5499)
!5702 = !{i64 2147599871, i64 2147599914, i64 2147599954}
!5703 = !DILocation(line: 112, column: 1, scope: !5499)
!5704 = !{i64 2147600064, i64 2147600107, i64 2147600147}
!5705 = !DILocation(line: 113, column: 1, scope: !5499)
!5706 = !{i64 2147600230, i64 2147600273, i64 2147600313}
!5707 = !DILocation(line: 114, column: 1, scope: !5499)
!5708 = !{i64 2147600414, i64 2147600457, i64 2147600497}
!5709 = !DILocation(line: 115, column: 1, scope: !5499)
!5710 = !{i64 2147600604, i64 2147600647, i64 2147600687}
!5711 = !DILocation(line: 116, column: 1, scope: !5499)
!5712 = !{i64 2147600788, i64 2147600831, i64 2147600871}
!5713 = !DILocation(line: 117, column: 1, scope: !5499)
!5714 = !{i64 2147601002, i64 2147601045, i64 2147601085}
!5715 = !DILocation(line: 118, column: 1, scope: !5499)
!5716 = !{i64 2147601213, i64 2147601256, i64 2147601296}
!5717 = !DILocation(line: 119, column: 1, scope: !5499)
!5718 = !{i64 2147601436, i64 2147601479, i64 2147601519}
!5719 = !DILocation(line: 120, column: 1, scope: !5499)
!5720 = !{i64 2147601620, i64 2147601663, i64 2147601703}
!5721 = !DILocation(line: 121, column: 1, scope: !5499)
!5722 = !{i64 2147601834, i64 2147601877, i64 2147601917}
!5723 = !DILocation(line: 122, column: 1, scope: !5499)
!5724 = !{i64 2147602000, i64 2147602043, i64 2147602083}
!5725 = !DILocation(line: 123, column: 1, scope: !5499)
!5726 = !{i64 2147602181, i64 2147602224, i64 2147602264}
!5727 = !DILocation(line: 124, column: 1, scope: !5499)
!5728 = !{i64 2147602374, i64 2147602417, i64 2147602457}
!5729 = !DILocation(line: 125, column: 1, scope: !5499)
!5730 = !{i64 2147602600, i64 2147602643, i64 2147602683}
!5731 = !DILocation(line: 126, column: 1, scope: !5499)
!5732 = !{i64 2147602814, i64 2147602857, i64 2147602897}
!5733 = !DILocation(line: 127, column: 1, scope: !5499)
!5734 = !{i64 2147603040, i64 2147603083, i64 2147603123}
!5735 = !DILocation(line: 128, column: 1, scope: !5499)
!5736 = !{i64 2147603257, i64 2147603300, i64 2147603340}
!5737 = !DILocation(line: 129, column: 1, scope: !5499)
!5738 = !{i64 2147603534, i64 2147603577, i64 2147603617}
!5739 = !DILocation(line: 130, column: 1, scope: !5499)
!5740 = !{i64 2147603760, i64 2147603803, i64 2147603843}
!5741 = !DILocation(line: 131, column: 1, scope: !5499)
!5742 = !{i64 2147603968, i64 2147604011, i64 2147604051}
!5743 = !DILocation(line: 132, column: 1, scope: !5499)
!5744 = !{i64 2147608225, i64 2147608268, i64 2147608308}
!5745 = !DILocation(line: 133, column: 1, scope: !5499)
!5746 = !{i64 2147608490, i64 2147608533, i64 2147608573}
!5747 = !DILocation(line: 134, column: 1, scope: !5499)
!5748 = !{i64 2147608704, i64 2147608747, i64 2147608787}
!5749 = !DILocation(line: 135, column: 1, scope: !5499)
!5750 = !{i64 2147608879, i64 2147608922, i64 2147608962}
!5751 = !DILocation(line: 136, column: 1, scope: !5499)
!5752 = !{i64 2147609133, i64 2147609176, i64 2147609216}
!5753 = !DILocation(line: 137, column: 1, scope: !5499)
!5754 = !{i64 2147609332, i64 2147609375, i64 2147609415}
!5755 = !DILocation(line: 138, column: 1, scope: !5499)
!5756 = !{i64 2147609574, i64 2147609617, i64 2147609657}
!5757 = !DILocation(line: 139, column: 1, scope: !5499)
!5758 = !{i64 2147609737, i64 2147609780, i64 2147609820}
!5759 = !DILocation(line: 140, column: 1, scope: !5499)
!5760 = !{i64 2147609924, i64 2147609967, i64 2147610007}
!5761 = !DILocation(line: 141, column: 1, scope: !5499)
!5762 = !{i64 2147610132, i64 2147610175, i64 2147610215}
!5763 = !DILocation(line: 142, column: 1, scope: !5499)
!5764 = !{i64 2147610328, i64 2147610371, i64 2147610411}
!5765 = !DILocation(line: 143, column: 1, scope: !5499)
!5766 = !{i64 2147610521, i64 2147610564, i64 2147610604}
!5767 = !DILocation(line: 144, column: 1, scope: !5499)
!5768 = !{i64 2147610704, i64 2147610747, i64 2147610787}
!5769 = !DILocation(line: 145, column: 1, scope: !5499)
!5770 = !{i64 2147610918, i64 2147610961, i64 2147611001}
!5771 = !DILocation(line: 146, column: 1, scope: !5499)
!5772 = !{i64 2147611129, i64 2147611172, i64 2147611212}
!5773 = !DILocation(line: 147, column: 1, scope: !5499)
!5774 = !{i64 2147611349, i64 2147611392, i64 2147611432}
!5775 = !DILocation(line: 148, column: 1, scope: !5499)
!5776 = !{i64 2147611556, i64 2147611599, i64 2147611639}
!5777 = !DILocation(line: 149, column: 1, scope: !5499)
!5778 = !{i64 2147611829, i64 2147611872, i64 2147611912}
!5779 = !DILocation(line: 150, column: 1, scope: !5499)
!5780 = !{i64 2147612077, i64 2147612120, i64 2147612160}
!5781 = !DILocation(line: 151, column: 1, scope: !5499)
!5782 = !{i64 2147612276, i64 2147612319, i64 2147612359}
!5783 = !DILocation(line: 152, column: 1, scope: !5499)
!5784 = !{i64 2147612511, i64 2147612554, i64 2147612594}
!5785 = !DILocation(line: 153, column: 1, scope: !5499)
!5786 = !{i64 2147612761, i64 2147612804, i64 2147612844}
!5787 = !DILocation(line: 154, column: 1, scope: !5499)
!5788 = !{i64 2147612963, i64 2147613006, i64 2147613046}
!5789 = !DILocation(line: 155, column: 1, scope: !5499)
!5790 = !{i64 2147613186, i64 2147613229, i64 2147613269}
!5791 = !DILocation(line: 156, column: 1, scope: !5499)
!5792 = !{i64 2147613400, i64 2147613443, i64 2147613483}
!5793 = !DILocation(line: 157, column: 1, scope: !5499)
!5794 = !{i64 2147613644, i64 2147613687, i64 2147613727}
!5795 = !DILocation(line: 158, column: 1, scope: !5499)
!5796 = !{i64 2147613873, i64 2147613916, i64 2147613956}
!5797 = !DILocation(line: 159, column: 1, scope: !5499)
!5798 = !{i64 2147614102, i64 2147614145, i64 2147614185}
!5799 = !DILocation(line: 160, column: 1, scope: !5499)
!5800 = !{i64 2147614310, i64 2147614353, i64 2147614393}
!5801 = !DILocation(line: 161, column: 1, scope: !5499)
!5802 = !{i64 2147614548, i64 2147614591, i64 2147614631}
!5803 = !DILocation(line: 162, column: 1, scope: !5499)
!5804 = !{i64 2147614774, i64 2147614817, i64 2147614857}
!5805 = !DILocation(line: 163, column: 1, scope: !5499)
!5806 = !{i64 2147615033, i64 2147615076, i64 2147615116}
!5807 = !DILocation(line: 164, column: 1, scope: !5499)
!5808 = !{i64 2147615253, i64 2147615296, i64 2147615336}
!5809 = !DILocation(line: 165, column: 1, scope: !5499)
!5810 = !{i64 2147615485, i64 2147615528, i64 2147615568}
!5811 = !DILocation(line: 166, column: 1, scope: !5499)
!5812 = !{i64 2147615726, i64 2147615769, i64 2147615809}
!5813 = !DILocation(line: 167, column: 1, scope: !5499)
!5814 = !{i64 2147615967, i64 2147616010, i64 2147616050}
!5815 = !DILocation(line: 168, column: 1, scope: !5499)
!5816 = !{i64 2147616190, i64 2147616233, i64 2147616273}
!5817 = !DILocation(line: 169, column: 1, scope: !5499)
!5818 = !{i64 2147616407, i64 2147616450, i64 2147616490}
!5819 = !DILocation(line: 170, column: 1, scope: !5499)
!5820 = !{i64 2147620709, i64 2147620752, i64 2147620792}
!5821 = !DILocation(line: 171, column: 1, scope: !5499)
!5822 = !{i64 2147620896, i64 2147620939, i64 2147620979}
!5823 = !DILocation(line: 172, column: 1, scope: !5499)
!5824 = !{i64 2147621083, i64 2147621126, i64 2147621166}
!5825 = !DILocation(line: 173, column: 1, scope: !5499)
!5826 = !{i64 2147621246, i64 2147621289, i64 2147621329}
!5827 = !DILocation(line: 174, column: 1, scope: !5499)
!5828 = !{i64 2147621451, i64 2147621494, i64 2147621534}
!5829 = !DILocation(line: 175, column: 1, scope: !5499)
!5830 = !{i64 2147621644, i64 2147621687, i64 2147621727}
!5831 = !DILocation(line: 176, column: 1, scope: !5499)
!5832 = !{i64 2147621903, i64 2147621946, i64 2147621986}
!5833 = !DILocation(line: 177, column: 1, scope: !5499)
!5834 = !{i64 2147622126, i64 2147622169, i64 2147622209}
!5835 = !DILocation(line: 178, column: 1, scope: !5499)
!5836 = !{i64 2147622355, i64 2147622398, i64 2147622438}
!5837 = !DILocation(line: 179, column: 1, scope: !5499)
!5838 = !{i64 2147622569, i64 2147622612, i64 2147622652}
!5839 = !DILocation(line: 180, column: 1, scope: !5499)
!5840 = !{i64 2147622771, i64 2147622814, i64 2147622854}
!5841 = !DILocation(line: 181, column: 1, scope: !5499)
!5842 = !{i64 2147622967, i64 2147623010, i64 2147623050}
!5843 = !DILocation(line: 182, column: 1, scope: !5499)
!5844 = !{i64 2147623179, i64 2147623222, i64 2147623262}
!5845 = !DILocation(line: 183, column: 1, scope: !5499)
!5846 = !{i64 2147623400, i64 2147623443, i64 2147623483}
!5847 = !DILocation(line: 184, column: 1, scope: !5499)
!5848 = !{i64 2147623614, i64 2147623657, i64 2147623697}
!5849 = !DILocation(line: 185, column: 1, scope: !5499)
!5850 = !{i64 2147623804, i64 2147623847, i64 2147623887}
!5851 = !DILocation(line: 186, column: 1, scope: !5499)
!5852 = !{i64 2147624003, i64 2147624046, i64 2147624086}
!5853 = !DILocation(line: 187, column: 1, scope: !5499)
!5854 = !{i64 2147624208, i64 2147624251, i64 2147624291}
!5855 = !DILocation(line: 188, column: 1, scope: !5499)
!5856 = !{i64 2147624428, i64 2147624471, i64 2147624511}
!5857 = !DILocation(line: 189, column: 1, scope: !5499)
!5858 = !{i64 2147624629, i64 2147624672, i64 2147624712}
!5859 = !DILocation(line: 190, column: 1, scope: !5499)
!5860 = !{i64 2147624828, i64 2147624871, i64 2147624911}
!5861 = !DILocation(line: 191, column: 1, scope: !5499)
!5862 = !{i64 2147625033, i64 2147625076, i64 2147625116}
!5863 = !DILocation(line: 192, column: 1, scope: !5499)
!5864 = !{i64 2147625202, i64 2147625245, i64 2147625285}
!5865 = !DILocation(line: 193, column: 1, scope: !5499)
!5866 = !{i64 2147625386, i64 2147625429, i64 2147625469}
!5867 = !DILocation(line: 194, column: 1, scope: !5499)
!5868 = !{i64 2147625570, i64 2147625613, i64 2147625653}
!5869 = !DILocation(line: 195, column: 1, scope: !5499)
!5870 = !{i64 2147625757, i64 2147625800, i64 2147625840}
!5871 = !DILocation(line: 196, column: 1, scope: !5499)
!5872 = !{i64 2147625941, i64 2147625984, i64 2147626024}
!5873 = !DILocation(line: 197, column: 1, scope: !5499)
!5874 = !{i64 2147626128, i64 2147626171, i64 2147626211}
!5875 = !DILocation(line: 198, column: 1, scope: !5499)
!5876 = !{i64 2147626340, i64 2147626383, i64 2147626423}
!5877 = !DILocation(line: 199, column: 1, scope: !5499)
!5878 = !{i64 2147626578, i64 2147626621, i64 2147626661}
!5879 = !DILocation(line: 200, column: 1, scope: !5499)
!5880 = !{i64 2147626808, i64 2147626851, i64 2147626891}
!5881 = !DILocation(line: 201, column: 1, scope: !5499)
!5882 = !{i64 2147627037, i64 2147627080, i64 2147627120}
!5883 = !DILocation(line: 202, column: 1, scope: !5499)
!5884 = !{i64 2147627224, i64 2147627267, i64 2147627307}
!5885 = !DILocation(line: 203, column: 1, scope: !5499)
!5886 = !{i64 2147627420, i64 2147627463, i64 2147627503}
!5887 = !DILocation(line: 204, column: 1, scope: !5499)
!5888 = !{i64 2147627628, i64 2147627671, i64 2147627711}
!5889 = !DILocation(line: 205, column: 1, scope: !5499)
!5890 = !{i64 2147627840, i64 2147627883, i64 2147627923}
!5891 = !DILocation(line: 206, column: 1, scope: !5499)
!5892 = !{i64 2147628039, i64 2147628082, i64 2147628122}
!5893 = !DILocation(line: 207, column: 1, scope: !5499)
!5894 = !{i64 2147628277, i64 2147628320, i64 2147628360}
!5895 = !DILocation(line: 208, column: 1, scope: !5499)
!5896 = !{i64 2147628473, i64 2147628516, i64 2147628556}
!5897 = !DILocation(line: 209, column: 1, scope: !5499)
!5898 = !{i64 2147628675, i64 2147628718, i64 2147628758}
!5899 = !DILocation(line: 210, column: 1, scope: !5499)
!5900 = !{i64 2147628868, i64 2147628911, i64 2147628951}
!5901 = !DILocation(line: 211, column: 1, scope: !5499)
!5902 = !{i64 2147629102, i64 2147629145, i64 2147629185}
!5903 = !DILocation(line: 212, column: 1, scope: !5499)
!5904 = !{i64 2147629265, i64 2147629308, i64 2147629348}
!5905 = !DILocation(line: 213, column: 1, scope: !5499)
!5906 = !{i64 2147629504, i64 2147629547, i64 2147629587}
!5907 = !DILocation(line: 214, column: 1, scope: !5499)
!5908 = !{i64 2147629743, i64 2147629786, i64 2147629826}
!5909 = !DILocation(line: 215, column: 1, scope: !5499)
!5910 = !{i64 2147634040, i64 2147634083, i64 2147634123}
!5911 = !DILocation(line: 216, column: 1, scope: !5499)
!5912 = !{i64 2147634270, i64 2147634313, i64 2147634353}
!5913 = !DILocation(line: 217, column: 1, scope: !5499)
!5914 = !{i64 2147634457, i64 2147634500, i64 2147634540}
!5915 = !DILocation(line: 218, column: 1, scope: !5499)
!5916 = !{i64 2147634656, i64 2147634699, i64 2147634739}
!5917 = !DILocation(line: 219, column: 1, scope: !5499)
!5918 = !{i64 2147634927, i64 2147634970, i64 2147635010}
!5919 = !DILocation(line: 220, column: 1, scope: !5499)
!5920 = !{i64 2147635102, i64 2147635145, i64 2147635185}
!5921 = !DILocation(line: 221, column: 1, scope: !5499)
!5922 = !{i64 2147635336, i64 2147635379, i64 2147635419}
!5923 = !DILocation(line: 222, column: 1, scope: !5499)
!5924 = !{i64 2147635544, i64 2147635587, i64 2147635627}
!5925 = !DILocation(line: 223, column: 1, scope: !5499)
!5926 = !{i64 2147635762, i64 2147635805, i64 2147635845}
!5927 = !DILocation(line: 224, column: 1, scope: !5499)
!5928 = !{i64 2147635952, i64 2147635995, i64 2147636035}
!5929 = !DILocation(line: 225, column: 1, scope: !5499)
!5930 = !{i64 2147636184, i64 2147636227, i64 2147636267}
!5931 = !DILocation(line: 226, column: 1, scope: !5499)
!5932 = !{i64 2147636404, i64 2147636447, i64 2147636487}
!5933 = !DILocation(line: 227, column: 1, scope: !5499)
!5934 = !{i64 2147636600, i64 2147636643, i64 2147636683}
!5935 = !DILocation(line: 228, column: 1, scope: !5499)
!5936 = !{i64 2147636806, i64 2147636849, i64 2147636889}
!5937 = !DILocation(line: 229, column: 1, scope: !5499)
!5938 = !{i64 2147637011, i64 2147637054, i64 2147637094}
!5939 = !DILocation(line: 230, column: 1, scope: !5499)
!5940 = !{i64 2147637225, i64 2147637268, i64 2147637308}
!5941 = !DILocation(line: 231, column: 1, scope: !5499)
!5942 = !{i64 2147637451, i64 2147637494, i64 2147637534}
!5943 = !DILocation(line: 232, column: 1, scope: !5499)
!5944 = !{i64 2147637659, i64 2147637702, i64 2147637742}
!5945 = !DILocation(line: 233, column: 1, scope: !5499)
!5946 = !{i64 2147637855, i64 2147637898, i64 2147637938}
!5947 = !DILocation(line: 234, column: 1, scope: !5499)
!5948 = !{i64 2147638087, i64 2147638130, i64 2147638170}
!5949 = !DILocation(line: 235, column: 1, scope: !5499)
!5950 = !{i64 2147638271, i64 2147638314, i64 2147638354}
!5951 = !DILocation(line: 236, column: 1, scope: !5499)
!5952 = !{i64 2147638480, i64 2147638523, i64 2147638563}
!5953 = !DILocation(line: 237, column: 1, scope: !5499)
!5954 = !{i64 2147638688, i64 2147638731, i64 2147638771}
!5955 = !DILocation(line: 238, column: 1, scope: !5499)
!5956 = !{i64 2147638884, i64 2147638927, i64 2147638967}
!5957 = !DILocation(line: 239, column: 1, scope: !5499)
!5958 = !{i64 2147639068, i64 2147639111, i64 2147639151}
!5959 = !DILocation(line: 240, column: 1, scope: !5499)
!5960 = !{i64 2147639294, i64 2147639337, i64 2147639377}
!5961 = !DILocation(line: 241, column: 1, scope: !5499)
!5962 = !{i64 2147639520, i64 2147639563, i64 2147639603}
!5963 = !DILocation(line: 242, column: 1, scope: !5499)
!5964 = !{i64 2147639746, i64 2147639789, i64 2147639829}
!5965 = !DILocation(line: 243, column: 1, scope: !5499)
!5966 = !{i64 2147639972, i64 2147640015, i64 2147640055}
!5967 = !DILocation(line: 244, column: 1, scope: !5499)
!5968 = !{i64 2147640198, i64 2147640241, i64 2147640281}
!5969 = !DILocation(line: 245, column: 1, scope: !5499)
!5970 = !{i64 2147640430, i64 2147640473, i64 2147640513}
!5971 = !DILocation(line: 246, column: 1, scope: !5499)
!5972 = !{i64 2147640668, i64 2147640711, i64 2147640751}
!5973 = !DILocation(line: 247, column: 1, scope: !5499)
!5974 = !{i64 2147640888, i64 2147640931, i64 2147640971}
!5975 = !DILocation(line: 248, column: 1, scope: !5499)
!5976 = !{i64 2147641132, i64 2147641175, i64 2147641215}
!5977 = !DILocation(line: 249, column: 1, scope: !5499)
!5978 = !{i64 2147641373, i64 2147641416, i64 2147641456}
!5979 = !DILocation(line: 250, column: 1, scope: !5499)
!5980 = !{i64 2147641608, i64 2147641651, i64 2147641691}
!5981 = !DILocation(line: 251, column: 1, scope: !5499)
!5982 = !{i64 2147641840, i64 2147641883, i64 2147641923}
!5983 = !DILocation(line: 252, column: 1, scope: !5499)
!5984 = !{i64 2147642042, i64 2147642085, i64 2147642125}
!5985 = !DILocation(line: 253, column: 1, scope: !5499)
!5986 = !{i64 2147642292, i64 2147642335, i64 2147642375}
!5987 = !DILocation(line: 254, column: 1, scope: !5499)
!5988 = !{i64 2147642530, i64 2147642573, i64 2147642613}
!5989 = !DILocation(line: 255, column: 1, scope: !5499)
!5990 = !{i64 2147646799, i64 2147646842, i64 2147646882}
!5991 = !DILocation(line: 256, column: 1, scope: !5499)
!5992 = !{i64 2147646995, i64 2147647038, i64 2147647078}
!5993 = !DILocation(line: 257, column: 1, scope: !5499)
!5994 = !{i64 2147647179, i64 2147647222, i64 2147647262}
!5995 = !DILocation(line: 258, column: 1, scope: !5499)
!5996 = !{i64 2147647396, i64 2147647439, i64 2147647479}
!5997 = !DILocation(line: 259, column: 1, scope: !5499)
!5998 = !{i64 2147647601, i64 2147647644, i64 2147647684}
!5999 = !DILocation(line: 260, column: 1, scope: !5499)
!6000 = !{i64 2147647836, i64 2147647879, i64 2147647919}
!6001 = !DILocation(line: 261, column: 1, scope: !5499)
!6002 = !{i64 2147648059, i64 2147648102, i64 2147648142}
!6003 = !DILocation(line: 262, column: 1, scope: !5499)
!6004 = !{i64 2147648283, i64 2147648326, i64 2147648366}
!6005 = !DILocation(line: 263, column: 1, scope: !5499)
!6006 = !{i64 2147648521, i64 2147648564, i64 2147648604}
!6007 = !DILocation(line: 264, column: 1, scope: !5499)
!6008 = !{i64 2147648759, i64 2147648802, i64 2147648842}
!6009 = !DILocation(line: 265, column: 1, scope: !5499)
!6010 = !{i64 2147648976, i64 2147649019, i64 2147649059}
!6011 = !DILocation(line: 266, column: 1, scope: !5499)
!6012 = !{i64 2147649181, i64 2147649224, i64 2147649264}
!6013 = !DILocation(line: 267, column: 1, scope: !5499)
!6014 = !{i64 2147649374, i64 2147649417, i64 2147649457}
!6015 = !DILocation(line: 268, column: 1, scope: !5499)
!6016 = !{i64 2147649627, i64 2147649670, i64 2147649710}
!6017 = !DILocation(line: 269, column: 1, scope: !5499)
!6018 = !{i64 2147649835, i64 2147649878, i64 2147649918}
!6019 = !DILocation(line: 270, column: 1, scope: !5499)
!6020 = !{i64 2147650031, i64 2147650074, i64 2147650114}
!6021 = !DILocation(line: 271, column: 1, scope: !5499)
!6022 = !{i64 2147650245, i64 2147650288, i64 2147650328}
!6023 = !DILocation(line: 272, column: 1, scope: !5499)
!6024 = !{i64 2147650453, i64 2147650496, i64 2147650536}
!6025 = !DILocation(line: 273, column: 1, scope: !5499)
!6026 = !{i64 2147650643, i64 2147650686, i64 2147650726}
!6027 = !DILocation(line: 274, column: 1, scope: !5499)
!6028 = !{i64 2147650857, i64 2147650900, i64 2147650940}
!6029 = !DILocation(line: 275, column: 1, scope: !5499)
!6030 = !{i64 2147651119, i64 2147651162, i64 2147651202}
!6031 = !DILocation(line: 276, column: 1, scope: !5499)
!6032 = !{i64 2147651330, i64 2147651373, i64 2147651413}
!6033 = !DILocation(line: 277, column: 1, scope: !5499)
!6034 = !{i64 2147651574, i64 2147651617, i64 2147651657}
!6035 = !DILocation(line: 278, column: 1, scope: !5499)
!6036 = !{i64 2147651785, i64 2147651828, i64 2147651868}
!6037 = !DILocation(line: 279, column: 1, scope: !5499)
!6038 = !{i64 2147652014, i64 2147652057, i64 2147652097}
!6039 = !DILocation(line: 280, column: 1, scope: !5499)
!6040 = !{i64 2147652279, i64 2147652322, i64 2147652362}
!6041 = !DILocation(line: 281, column: 1, scope: !5499)
!6042 = !{i64 2147652484, i64 2147652527, i64 2147652567}
!6043 = !DILocation(line: 282, column: 1, scope: !5499)
!6044 = !{i64 2147652680, i64 2147652723, i64 2147652763}
!6045 = !DILocation(line: 283, column: 1, scope: !5499)
!6046 = !{i64 2147652903, i64 2147652946, i64 2147652986}
!6047 = !DILocation(line: 284, column: 1, scope: !5499)
!6048 = !{i64 2147653066, i64 2147653109, i64 2147653149}
!6049 = !DILocation(line: 285, column: 1, scope: !5499)
!6050 = !{i64 2147653271, i64 2147653314, i64 2147653354}
!6051 = !DILocation(line: 286, column: 1, scope: !5499)
!6052 = !{i64 2147653491, i64 2147653534, i64 2147653574}
!6053 = !DILocation(line: 287, column: 1, scope: !5499)
!6054 = !{i64 2147653705, i64 2147653748, i64 2147653788}
!6055 = !DILocation(line: 288, column: 1, scope: !5499)
!6056 = !{i64 2147653949, i64 2147653992, i64 2147654032}
!6057 = !DILocation(line: 289, column: 1, scope: !5499)
!6058 = !{i64 2147654181, i64 2147654224, i64 2147654264}
!6059 = !DILocation(line: 290, column: 1, scope: !5499)
!6060 = !{i64 2147654395, i64 2147654438, i64 2147654478}
!6061 = !DILocation(line: 291, column: 1, scope: !5499)
!6062 = !{i64 2147654606, i64 2147654649, i64 2147654689}
!6063 = !DILocation(line: 292, column: 1, scope: !5499)
!6064 = !{i64 2147654799, i64 2147654842, i64 2147654882}
!6065 = !DILocation(line: 293, column: 1, scope: !5499)
!6066 = !{i64 2147654998, i64 2147655041, i64 2147655081}
!6067 = !DILocation(line: 294, column: 1, scope: !5499)
!6068 = !{i64 2147655170, i64 2147655213, i64 2147655253}
!6069 = !DILocation(line: 295, column: 1, scope: !5499)
!6070 = !{i64 2147655363, i64 2147655406, i64 2147655446}
!6071 = !DILocation(line: 296, column: 1, scope: !5499)
!6072 = !{i64 2147655535, i64 2147655578, i64 2147655618}
!6073 = !DILocation(line: 297, column: 1, scope: !5499)
!6074 = !{i64 2147659786, i64 2147659829, i64 2147659869}
!6075 = !DILocation(line: 298, column: 1, scope: !5499)
!6076 = !{i64 2147659979, i64 2147660022, i64 2147660062}
!6077 = !DILocation(line: 299, column: 1, scope: !5499)
!6078 = !{i64 2147660175, i64 2147660218, i64 2147660258}
!6079 = !DILocation(line: 300, column: 1, scope: !5499)
!6080 = !{i64 2147660338, i64 2147660381, i64 2147660421}
!6081 = !DILocation(line: 301, column: 1, scope: !5499)
!6082 = !{i64 2147660540, i64 2147660583, i64 2147660623}
!6083 = !DILocation(line: 302, column: 1, scope: !5499)
!6084 = !{i64 2147660751, i64 2147660794, i64 2147660834}
!6085 = !DILocation(line: 303, column: 1, scope: !5499)
!6086 = !{i64 2147660956, i64 2147660999, i64 2147661039}
!6087 = !DILocation(line: 304, column: 1, scope: !5499)
!6088 = !{i64 2147661164, i64 2147661207, i64 2147661247}
!6089 = !DILocation(line: 305, column: 1, scope: !5499)
!6090 = !{i64 2147661357, i64 2147661400, i64 2147661440}
!6091 = !DILocation(line: 306, column: 1, scope: !5499)
!6092 = !{i64 2147661544, i64 2147661587, i64 2147661627}
!6093 = !DILocation(line: 307, column: 1, scope: !5499)
!6094 = !{i64 2147661710, i64 2147661753, i64 2147661793}
!6095 = !DILocation(line: 308, column: 1, scope: !5499)
!6096 = !{i64 2147661937, i64 2147661980, i64 2147662020}
!6097 = !DILocation(line: 309, column: 1, scope: !5499)
!6098 = !{i64 2147662154, i64 2147662197, i64 2147662237}
!6099 = !DILocation(line: 310, column: 1, scope: !5499)
!6100 = !{i64 2147662380, i64 2147662423, i64 2147662463}
!6101 = !DILocation(line: 311, column: 1, scope: !5499)
!6102 = !{i64 2147662585, i64 2147662628, i64 2147662668}
!6103 = !DILocation(line: 312, column: 1, scope: !5499)
!6104 = !{i64 2147662802, i64 2147662845, i64 2147662885}
!6105 = !DILocation(line: 313, column: 1, scope: !5499)
!6106 = !{i64 2147663094, i64 2147663137, i64 2147663177}
!6107 = !DILocation(line: 314, column: 1, scope: !5499)
!6108 = !{i64 2147663326, i64 2147663369, i64 2147663409}
!6109 = !DILocation(line: 315, column: 1, scope: !5499)
!6110 = !{i64 2147663543, i64 2147663586, i64 2147663626}
!6111 = !DILocation(line: 316, column: 1, scope: !5499)
!6112 = !{i64 2147663750, i64 2147663793, i64 2147663833}
!6113 = !DILocation(line: 317, column: 1, scope: !5499)
!6114 = !{i64 2147663951, i64 2147663994, i64 2147664034}
!6115 = !DILocation(line: 318, column: 1, scope: !5499)
!6116 = !{i64 2147664183, i64 2147664226, i64 2147664266}
!6117 = !DILocation(line: 319, column: 1, scope: !5499)
!6118 = !{i64 2147664391, i64 2147664434, i64 2147664474}
!6119 = !DILocation(line: 320, column: 1, scope: !5499)
!6120 = !{i64 2147664581, i64 2147664624, i64 2147664664}
!6121 = !DILocation(line: 321, column: 1, scope: !5499)
!6122 = !{i64 2147664807, i64 2147664850, i64 2147664890}
!6123 = !DILocation(line: 322, column: 1, scope: !5499)
!6124 = !{i64 2147664996, i64 2147665039, i64 2147665079}
!6125 = !DILocation(line: 323, column: 1, scope: !5499)
!6126 = !{i64 2147665267, i64 2147665310, i64 2147665350}
!6127 = !DILocation(line: 324, column: 1, scope: !5499)
!6128 = !{i64 2147665487, i64 2147665530, i64 2147665570}
!6129 = !DILocation(line: 325, column: 1, scope: !5499)
!6130 = !{i64 2147665740, i64 2147665783, i64 2147665823}
!6131 = !DILocation(line: 326, column: 1, scope: !5499)
!6132 = !{i64 2147665948, i64 2147665991, i64 2147666031}
!6133 = !DILocation(line: 327, column: 1, scope: !5499)
!6134 = !{i64 2147666180, i64 2147666223, i64 2147666263}
!6135 = !DILocation(line: 328, column: 1, scope: !5499)
!6136 = !{i64 2147666391, i64 2147666434, i64 2147666474}
!6137 = !DILocation(line: 329, column: 1, scope: !5499)
!6138 = !{i64 2147666581, i64 2147666624, i64 2147666664}
!6139 = !DILocation(line: 330, column: 1, scope: !5499)
!6140 = !{i64 2147666795, i64 2147666838, i64 2147666878}
!6141 = !DILocation(line: 331, column: 1, scope: !5499)
!6142 = !{i64 2147666994, i64 2147667037, i64 2147667077}
!6143 = !DILocation(line: 332, column: 1, scope: !5499)
!6144 = !{i64 2147667181, i64 2147667224, i64 2147667264}
!6145 = !DILocation(line: 333, column: 1, scope: !5499)
!6146 = !{i64 2147667389, i64 2147667432, i64 2147667472}
!6147 = !DILocation(line: 334, column: 1, scope: !5499)
!6148 = !{i64 2147667618, i64 2147667661, i64 2147667701}
!6149 = !DILocation(line: 335, column: 1, scope: !5499)
!6150 = !{i64 2147667820, i64 2147667863, i64 2147667903}
!6151 = !DILocation(line: 336, column: 1, scope: !5499)
!6152 = !{i64 2147668019, i64 2147668062, i64 2147668102}
!6153 = !DILocation(line: 337, column: 1, scope: !5499)
!6154 = !{i64 2147668236, i64 2147668279, i64 2147668319}
!6155 = !DILocation(line: 339, column: 1, scope: !5499)
!6156 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !324, file: !324, line: 30, type: !331, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !307, retainedNodes: !6157)
!6157 = !{!6158, !6159}
!6158 = !DILocalVariable(name: "arg", arg: 1, scope: !6156, file: !324, line: 30, type: !333)
!6159 = !DILocalVariable(name: "key", scope: !6156, file: !324, line: 32, type: !110)
!6160 = !DILocation(line: 0, scope: !6156)
!6161 = !DILocation(line: 37, column: 2, scope: !6156)
!6162 = !DILocation(line: 38, column: 2, scope: !6156)
!6163 = !DILocation(line: 55, column: 2, scope: !6164, inlinedAt: !6171)
!6164 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6165, file: !6165, line: 42, type: !6166, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !307, retainedNodes: !6168)
!6165 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6166 = !DISubroutineType(types: !6167)
!6167 = !{!32}
!6168 = !{!6169, !6170}
!6169 = !DILocalVariable(name: "key", scope: !6164, file: !6165, line: 44, type: !32)
!6170 = !DILocalVariable(name: "tmp", scope: !6164, file: !6165, line: 53, type: !32)
!6171 = distinct !DILocation(line: 40, column: 8, scope: !6156)
!6172 = !{i64 2189286}
!6173 = !DILocation(line: 0, scope: !6164, inlinedAt: !6171)
!6174 = !DILocalVariable(name: "key", arg: 1, scope: !6175, file: !6165, line: 84, type: !32)
!6175 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6165, file: !6165, line: 84, type: !6176, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !307, retainedNodes: !6178)
!6176 = !DISubroutineType(types: !6177)
!6177 = !{null, !32}
!6178 = !{!6174}
!6179 = !DILocation(line: 0, scope: !6175, inlinedAt: !6180)
!6180 = distinct !DILocation(line: 47, column: 2, scope: !6156)
!6181 = !DILocation(line: 95, column: 2, scope: !6175, inlinedAt: !6180)
!6182 = !{i64 2190103}
!6183 = !DILocation(line: 51, column: 18, scope: !6156)
!6184 = !DILocation(line: 53, column: 2, scope: !6156)
!6185 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !6186, file: !6186, line: 1609, type: !3155, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !307, retainedNodes: !2106)
!6186 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6187 = !DILocation(line: 1611, column: 3, scope: !6185)
!6188 = !DILocation(line: 1612, column: 1, scope: !6185)
!6189 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !6186, file: !6186, line: 1629, type: !3155, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !307, retainedNodes: !2106)
!6190 = !DILocation(line: 1631, column: 3, scope: !6189)
!6191 = !DILocation(line: 1632, column: 1, scope: !6189)
!6192 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !361, file: !361, line: 26, type: !367, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !358, retainedNodes: !6193)
!6193 = !{!6194}
!6194 = !DILocalVariable(name: "dev", arg: 1, scope: !6192, file: !361, line: 26, type: !369)
!6195 = !DILocation(line: 0, scope: !6192)
!6196 = !DILocation(line: 68, column: 2, scope: !6192)
!6197 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !6198, file: !6198, line: 14, type: !4453, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !6199)
!6198 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6199 = !{!6200, !6201}
!6200 = !DILocalVariable(name: "fmt", arg: 1, scope: !6197, file: !6198, line: 14, type: !279)
!6201 = !DILocalVariable(name: "ap", scope: !6197, file: !6198, line: 16, type: !6202)
!6202 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3459, line: 99, baseType: !6203)
!6203 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3459, line: 40, baseType: !6204)
!6204 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !6198, baseType: !6205)
!6205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !6206)
!6206 = !{!6207}
!6207 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !6205, file: !6198, line: 16, baseType: !107, size: 32)
!6208 = !DILocation(line: 0, scope: !6197)
!6209 = !DILocation(line: 16, column: 2, scope: !6197)
!6210 = !DILocation(line: 16, column: 10, scope: !6197)
!6211 = !DILocation(line: 18, column: 2, scope: !6197)
!6212 = !DILocation(line: 19, column: 2, scope: !6197)
!6213 = !DILocation(line: 20, column: 2, scope: !6197)
!6214 = !DILocation(line: 21, column: 1, scope: !6197)
!6215 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !6198, file: !6198, line: 23, type: !6216, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !6218)
!6216 = !DISubroutineType(types: !6217)
!6217 = !{null, !279, !6202}
!6218 = !{!6219, !6220}
!6219 = !DILocalVariable(name: "fmt", arg: 1, scope: !6215, file: !6198, line: 23, type: !279)
!6220 = !DILocalVariable(name: "ap", arg: 2, scope: !6215, file: !6198, line: 23, type: !6202)
!6221 = !DILocation(line: 0, scope: !6215)
!6222 = !DILocation(line: 25, column: 2, scope: !6215)
!6223 = !DILocation(line: 26, column: 1, scope: !6215)
!6224 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !6198, file: !6198, line: 52, type: !6225, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !6227)
!6225 = !DISubroutineType(types: !6226)
!6226 = !{null, !109, !13, !232}
!6227 = !{!6228, !6229, !6230, !6231}
!6228 = !DILocalVariable(name: "level", arg: 1, scope: !6224, file: !6198, line: 52, type: !109)
!6229 = !DILocalVariable(name: "data", arg: 2, scope: !6224, file: !6198, line: 52, type: !13)
!6230 = !DILocalVariable(name: "size", arg: 3, scope: !6224, file: !6198, line: 52, type: !232)
!6231 = !DILocalVariable(name: "data_buffer", scope: !6224, file: !6198, line: 54, type: !279)
!6232 = !DILocation(line: 0, scope: !6224)
!6233 = !DILocation(line: 55, column: 14, scope: !6224)
!6234 = !DILocation(line: 55, column: 2, scope: !6224)
!6235 = !DILocation(line: 56, column: 3, scope: !6236)
!6236 = distinct !DILexicalBlock(scope: !6224, file: !6198, line: 55, column: 20)
!6237 = !DILocation(line: 57, column: 3, scope: !6236)
!6238 = !DILocation(line: 59, column: 7, scope: !6236)
!6239 = distinct !{!6239, !6234, !6240}
!6240 = !DILocation(line: 65, column: 2, scope: !6224)
!6241 = !DILocation(line: 66, column: 1, scope: !6224)
!6242 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !6243, file: !6243, line: 175, type: !6244, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !6246)
!6243 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6244 = !DISubroutineType(types: !6245)
!6245 = !{!148, !109}
!6246 = !{!6247}
!6247 = !DILocalVariable(name: "level", arg: 1, scope: !6242, file: !6243, line: 175, type: !109)
!6248 = !DILocation(line: 0, scope: !6242)
!6249 = !DILocation(line: 177, column: 2, scope: !6242)
!6250 = !DILocation(line: 189, column: 1, scope: !6242)
!6251 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !6198, file: !6198, line: 28, type: !6252, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !6254)
!6252 = !DISubroutineType(types: !6253)
!6253 = !{null, !279, !232}
!6254 = !{!6255, !6256, !6257, !6259, !6261}
!6255 = !DILocalVariable(name: "data", arg: 1, scope: !6251, file: !6198, line: 28, type: !279)
!6256 = !DILocalVariable(name: "length", arg: 2, scope: !6251, file: !6198, line: 28, type: !232)
!6257 = !DILocalVariable(name: "i", scope: !6258, file: !6198, line: 30, type: !232)
!6258 = distinct !DILexicalBlock(scope: !6251, file: !6198, line: 30, column: 2)
!6259 = !DILocalVariable(name: "i", scope: !6260, file: !6198, line: 40, type: !232)
!6260 = distinct !DILexicalBlock(scope: !6251, file: !6198, line: 40, column: 2)
!6261 = !DILocalVariable(name: "c", scope: !6262, file: !6198, line: 42, type: !179)
!6262 = distinct !DILexicalBlock(scope: !6263, file: !6198, line: 41, column: 19)
!6263 = distinct !DILexicalBlock(scope: !6264, file: !6198, line: 41, column: 7)
!6264 = distinct !DILexicalBlock(scope: !6265, file: !6198, line: 40, column: 54)
!6265 = distinct !DILexicalBlock(scope: !6260, file: !6198, line: 40, column: 2)
!6266 = !DILocation(line: 0, scope: !6251)
!6267 = !DILocation(line: 0, scope: !6258)
!6268 = !DILocation(line: 30, column: 2, scope: !6258)
!6269 = !DILocation(line: 38, column: 2, scope: !6251)
!6270 = !DILocation(line: 0, scope: !6260)
!6271 = !DILocation(line: 40, column: 2, scope: !6260)
!6272 = !DILocation(line: 31, column: 9, scope: !6273)
!6273 = distinct !DILexicalBlock(scope: !6274, file: !6198, line: 31, column: 7)
!6274 = distinct !DILexicalBlock(scope: !6275, file: !6198, line: 30, column: 54)
!6275 = distinct !DILexicalBlock(scope: !6258, file: !6198, line: 30, column: 2)
!6276 = !DILocation(line: 31, column: 7, scope: !6274)
!6277 = !DILocation(line: 32, column: 35, scope: !6278)
!6278 = distinct !DILexicalBlock(scope: !6273, file: !6198, line: 31, column: 19)
!6279 = !DILocation(line: 32, column: 20, scope: !6278)
!6280 = !DILocation(line: 32, column: 4, scope: !6278)
!6281 = !DILocation(line: 33, column: 3, scope: !6278)
!6282 = !DILocation(line: 34, column: 4, scope: !6283)
!6283 = distinct !DILexicalBlock(scope: !6273, file: !6198, line: 33, column: 10)
!6284 = !DILocation(line: 30, column: 50, scope: !6275)
!6285 = !DILocation(line: 30, column: 24, scope: !6275)
!6286 = distinct !{!6286, !6268, !6287}
!6287 = !DILocation(line: 36, column: 2, scope: !6258)
!6288 = !DILocation(line: 49, column: 2, scope: !6251)
!6289 = !DILocation(line: 50, column: 1, scope: !6251)
!6290 = !DILocation(line: 41, column: 9, scope: !6263)
!6291 = !DILocation(line: 41, column: 7, scope: !6264)
!6292 = !DILocation(line: 42, column: 22, scope: !6262)
!6293 = !DILocation(line: 0, scope: !6262)
!6294 = !DILocation(line: 44, column: 25, scope: !6262)
!6295 = !DILocation(line: 44, column: 17, scope: !6262)
!6296 = !DILocation(line: 44, column: 33, scope: !6262)
!6297 = !DILocation(line: 44, column: 4, scope: !6262)
!6298 = !DILocation(line: 45, column: 3, scope: !6262)
!6299 = !DILocation(line: 46, column: 4, scope: !6300)
!6300 = distinct !DILexicalBlock(scope: !6263, file: !6198, line: 45, column: 10)
!6301 = !DILocation(line: 40, column: 50, scope: !6265)
!6302 = !DILocation(line: 40, column: 24, scope: !6265)
!6303 = distinct !{!6303, !6271, !6304}
!6304 = !DILocation(line: 48, column: 2, scope: !6260)
!6305 = distinct !DISubprogram(name: "isprint", scope: !5243, file: !5243, line: 37, type: !303, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !6306)
!6306 = !{!6307}
!6307 = !DILocalVariable(name: "c", arg: 1, scope: !6305, file: !5243, line: 37, type: !109)
!6308 = !DILocation(line: 0, scope: !6305)
!6309 = !DILocation(line: 39, column: 38, scope: !6305)
!6310 = !DILocation(line: 39, column: 2, scope: !6305)
!6311 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6312, file: !6312, line: 57, type: !6313, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2634, retainedNodes: !6359)
!6312 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6313 = !DISubroutineType(types: !6314)
!6314 = !{null, !32, !6315}
!6315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6316, size: 32)
!6316 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6317)
!6317 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2754, line: 141, baseType: !6318)
!6318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2754, line: 97, size: 256, elements: !6319)
!6319 = !{!6320}
!6320 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6318, file: !2754, line: 107, baseType: !6321, size: 256)
!6321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2754, line: 98, size: 256, elements: !6322)
!6322 = !{!6323, !6328, !6333, !6338, !6343, !6348, !6353, !6358}
!6323 = !DIDerivedType(tag: DW_TAG_member, scope: !6321, file: !2754, line: 99, baseType: !6324, size: 32)
!6324 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6321, file: !2754, line: 99, size: 32, elements: !6325)
!6325 = !{!6326, !6327}
!6326 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6324, file: !2754, line: 99, baseType: !110, size: 32)
!6327 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6324, file: !2754, line: 99, baseType: !110, size: 32)
!6328 = !DIDerivedType(tag: DW_TAG_member, scope: !6321, file: !2754, line: 100, baseType: !6329, size: 32, offset: 32)
!6329 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6321, file: !2754, line: 100, size: 32, elements: !6330)
!6330 = !{!6331, !6332}
!6331 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6329, file: !2754, line: 100, baseType: !110, size: 32)
!6332 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6329, file: !2754, line: 100, baseType: !110, size: 32)
!6333 = !DIDerivedType(tag: DW_TAG_member, scope: !6321, file: !2754, line: 101, baseType: !6334, size: 32, offset: 64)
!6334 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6321, file: !2754, line: 101, size: 32, elements: !6335)
!6335 = !{!6336, !6337}
!6336 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6334, file: !2754, line: 101, baseType: !110, size: 32)
!6337 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6334, file: !2754, line: 101, baseType: !110, size: 32)
!6338 = !DIDerivedType(tag: DW_TAG_member, scope: !6321, file: !2754, line: 102, baseType: !6339, size: 32, offset: 96)
!6339 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6321, file: !2754, line: 102, size: 32, elements: !6340)
!6340 = !{!6341, !6342}
!6341 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6339, file: !2754, line: 102, baseType: !110, size: 32)
!6342 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6339, file: !2754, line: 102, baseType: !110, size: 32)
!6343 = !DIDerivedType(tag: DW_TAG_member, scope: !6321, file: !2754, line: 103, baseType: !6344, size: 32, offset: 128)
!6344 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6321, file: !2754, line: 103, size: 32, elements: !6345)
!6345 = !{!6346, !6347}
!6346 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6344, file: !2754, line: 103, baseType: !110, size: 32)
!6347 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6344, file: !2754, line: 103, baseType: !110, size: 32)
!6348 = !DIDerivedType(tag: DW_TAG_member, scope: !6321, file: !2754, line: 104, baseType: !6349, size: 32, offset: 160)
!6349 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6321, file: !2754, line: 104, size: 32, elements: !6350)
!6350 = !{!6351, !6352}
!6351 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6349, file: !2754, line: 104, baseType: !110, size: 32)
!6352 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6349, file: !2754, line: 104, baseType: !110, size: 32)
!6353 = !DIDerivedType(tag: DW_TAG_member, scope: !6321, file: !2754, line: 105, baseType: !6354, size: 32, offset: 192)
!6354 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6321, file: !2754, line: 105, size: 32, elements: !6355)
!6355 = !{!6356, !6357}
!6356 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6354, file: !2754, line: 105, baseType: !110, size: 32)
!6357 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6354, file: !2754, line: 105, baseType: !110, size: 32)
!6358 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6321, file: !2754, line: 106, baseType: !110, size: 32, offset: 224)
!6359 = !{!6360, !6361}
!6360 = !DILocalVariable(name: "reason", arg: 1, scope: !6311, file: !6312, line: 57, type: !32)
!6361 = !DILocalVariable(name: "esf", arg: 2, scope: !6311, file: !6312, line: 57, type: !6315)
!6362 = !DILocation(line: 0, scope: !6311)
!6363 = !DILocation(line: 60, column: 10, scope: !6364)
!6364 = distinct !DILexicalBlock(scope: !6311, file: !6312, line: 60, column: 6)
!6365 = !DILocation(line: 60, column: 6, scope: !6311)
!6366 = !DILocation(line: 61, column: 3, scope: !6367)
!6367 = distinct !DILexicalBlock(scope: !6364, file: !6312, line: 60, column: 19)
!6368 = !DILocation(line: 62, column: 2, scope: !6367)
!6369 = !DILocation(line: 63, column: 2, scope: !6311)
!6370 = !DILocation(line: 64, column: 1, scope: !6311)
!6371 = distinct !DISubprogram(name: "esf_dump", scope: !6312, file: !6312, line: 20, type: !6372, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2634, retainedNodes: !6374)
!6372 = !DISubroutineType(types: !6373)
!6373 = !{null, !6315}
!6374 = !{!6375}
!6375 = !DILocalVariable(name: "esf", arg: 1, scope: !6371, file: !6312, line: 20, type: !6315)
!6376 = !DILocation(line: 0, scope: !6371)
!6377 = !DILocation(line: 22, column: 2, scope: !6378)
!6378 = distinct !DILexicalBlock(scope: !6379, file: !6312, line: 22, column: 2)
!6379 = distinct !DILexicalBlock(scope: !6380, file: !6312, line: 22, column: 2)
!6380 = distinct !DILexicalBlock(scope: !6381, file: !6312, line: 22, column: 2)
!6381 = distinct !DILexicalBlock(scope: !6371, file: !6312, line: 22, column: 2)
!6382 = !DILocation(line: 24, column: 2, scope: !6383)
!6383 = distinct !DILexicalBlock(scope: !6384, file: !6312, line: 24, column: 2)
!6384 = distinct !DILexicalBlock(scope: !6385, file: !6312, line: 24, column: 2)
!6385 = distinct !DILexicalBlock(scope: !6386, file: !6312, line: 24, column: 2)
!6386 = distinct !DILexicalBlock(scope: !6371, file: !6312, line: 24, column: 2)
!6387 = !DILocation(line: 26, column: 2, scope: !6388)
!6388 = distinct !DILexicalBlock(scope: !6389, file: !6312, line: 26, column: 2)
!6389 = distinct !DILexicalBlock(scope: !6390, file: !6312, line: 26, column: 2)
!6390 = distinct !DILexicalBlock(scope: !6391, file: !6312, line: 26, column: 2)
!6391 = distinct !DILexicalBlock(scope: !6371, file: !6312, line: 26, column: 2)
!6392 = !DILocation(line: 53, column: 2, scope: !6393)
!6393 = distinct !DILexicalBlock(scope: !6394, file: !6312, line: 53, column: 2)
!6394 = distinct !DILexicalBlock(scope: !6395, file: !6312, line: 53, column: 2)
!6395 = distinct !DILexicalBlock(scope: !6396, file: !6312, line: 53, column: 2)
!6396 = distinct !DILexicalBlock(scope: !6371, file: !6312, line: 53, column: 2)
!6397 = !DILocation(line: 55, column: 1, scope: !6371)
!6398 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6312, file: !6312, line: 82, type: !6399, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2634, retainedNodes: !6414)
!6399 = !DISubroutineType(types: !6400)
!6400 = !{null, !6315, !6401}
!6401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6402, size: 32)
!6402 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !209, line: 37, baseType: !6403)
!6403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !6404)
!6404 = !{!6405, !6406, !6407, !6408, !6409, !6410, !6411, !6412, !6413}
!6405 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6403, file: !209, line: 26, baseType: !110, size: 32)
!6406 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6403, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!6407 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6403, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!6408 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6403, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!6409 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6403, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!6410 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6403, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!6411 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6403, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!6412 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6403, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!6413 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6403, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!6414 = !{!6415, !6416, !6417}
!6415 = !DILocalVariable(name: "esf", arg: 1, scope: !6398, file: !6312, line: 82, type: !6315)
!6416 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6398, file: !6312, line: 82, type: !6401)
!6417 = !DILocalVariable(name: "reason", scope: !6398, file: !6312, line: 88, type: !32)
!6418 = !DILocation(line: 0, scope: !6398)
!6419 = !DILocation(line: 88, column: 35, scope: !6398)
!6420 = !DILocation(line: 108, column: 2, scope: !6398)
!6421 = !DILocation(line: 131, column: 1, scope: !6398)
!6422 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6312, file: !6312, line: 133, type: !6423, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2634, retainedNodes: !6425)
!6423 = !DISubroutineType(types: !6424)
!6424 = !{null, !107}
!6425 = !{!6426, !6427, !6428}
!6426 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6422, file: !6312, line: 133, type: !107)
!6427 = !DILocalVariable(name: "ssf_contents", scope: !6422, file: !6312, line: 135, type: !902)
!6428 = !DILocalVariable(name: "oops_esf", scope: !6422, file: !6312, line: 136, type: !6317)
!6429 = !DILocation(line: 0, scope: !6422)
!6430 = !DILocation(line: 136, column: 2, scope: !6422)
!6431 = !DILocation(line: 136, column: 15, scope: !6422)
!6432 = !DILocation(line: 139, column: 22, scope: !6422)
!6433 = !DILocation(line: 139, column: 17, scope: !6422)
!6434 = !DILocation(line: 139, column: 20, scope: !6422)
!6435 = !DILocation(line: 141, column: 2, scope: !6422)
!6436 = !DILocation(line: 142, column: 2, scope: !6422)
!6437 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6438, file: !6438, line: 40, type: !6176, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !6439)
!6438 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6439 = !{!6440}
!6440 = !DILocalVariable(name: "irq", arg: 1, scope: !6437, file: !6438, line: 40, type: !32)
!6441 = !DILocation(line: 0, scope: !6437)
!6442 = !DILocation(line: 42, column: 2, scope: !6437)
!6443 = !DILocation(line: 43, column: 1, scope: !6437)
!6444 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !535, file: !535, line: 1684, type: !6445, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !6447)
!6445 = !DISubroutineType(types: !6446)
!6446 = !{null, !800}
!6447 = !{!6448}
!6448 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6444, file: !535, line: 1684, type: !800)
!6449 = !DILocation(line: 0, scope: !6444)
!6450 = !DILocation(line: 1686, column: 23, scope: !6451)
!6451 = distinct !DILexicalBlock(scope: !6444, file: !535, line: 1686, column: 7)
!6452 = !DILocation(line: 1686, column: 7, scope: !6444)
!6453 = !DILocation(line: 1688, column: 5, scope: !6454)
!6454 = distinct !DILexicalBlock(scope: !6451, file: !535, line: 1687, column: 3)
!6455 = !{i64 2151258062}
!6456 = !DILocation(line: 1689, column: 81, scope: !6454)
!6457 = !DILocation(line: 1689, column: 60, scope: !6454)
!6458 = !DILocation(line: 1689, column: 34, scope: !6454)
!6459 = !DILocation(line: 1689, column: 5, scope: !6454)
!6460 = !DILocation(line: 1689, column: 43, scope: !6454)
!6461 = !DILocation(line: 1690, column: 5, scope: !6454)
!6462 = !{i64 2151258176}
!6463 = !DILocation(line: 1691, column: 3, scope: !6454)
!6464 = !DILocation(line: 1692, column: 1, scope: !6444)
!6465 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6438, file: !6438, line: 45, type: !6176, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !6466)
!6466 = !{!6467}
!6467 = !DILocalVariable(name: "irq", arg: 1, scope: !6465, file: !6438, line: 45, type: !32)
!6468 = !DILocation(line: 0, scope: !6465)
!6469 = !DILocation(line: 47, column: 2, scope: !6465)
!6470 = !DILocation(line: 48, column: 1, scope: !6465)
!6471 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !535, file: !535, line: 1722, type: !6445, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !6472)
!6472 = !{!6473}
!6473 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6471, file: !535, line: 1722, type: !800)
!6474 = !DILocation(line: 0, scope: !6471)
!6475 = !DILocation(line: 1724, column: 23, scope: !6476)
!6476 = distinct !DILexicalBlock(scope: !6471, file: !535, line: 1724, column: 7)
!6477 = !DILocation(line: 1724, column: 7, scope: !6471)
!6478 = !DILocation(line: 1726, column: 81, scope: !6479)
!6479 = distinct !DILexicalBlock(scope: !6476, file: !535, line: 1725, column: 3)
!6480 = !DILocation(line: 1726, column: 60, scope: !6479)
!6481 = !DILocation(line: 1726, column: 34, scope: !6479)
!6482 = !DILocation(line: 1726, column: 5, scope: !6479)
!6483 = !DILocation(line: 1726, column: 43, scope: !6479)
!6484 = !DILocation(line: 271, column: 3, scope: !6485, inlinedAt: !6487)
!6485 = distinct !DISubprogram(name: "__DSB", scope: !6486, file: !6486, line: 269, type: !3155, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !2106)
!6486 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6487 = distinct !DILocation(line: 1727, column: 5, scope: !6479)
!6488 = !{i64 3712445}
!6489 = !DILocation(line: 260, column: 3, scope: !6490, inlinedAt: !6491)
!6490 = distinct !DISubprogram(name: "__ISB", scope: !6486, file: !6486, line: 258, type: !3155, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !2106)
!6491 = distinct !DILocation(line: 1728, column: 5, scope: !6479)
!6492 = !{i64 3712162}
!6493 = !DILocation(line: 1729, column: 3, scope: !6479)
!6494 = !DILocation(line: 1730, column: 1, scope: !6471)
!6495 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6438, file: !6438, line: 50, type: !6496, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !6498)
!6496 = !DISubroutineType(types: !6497)
!6497 = !{!109, !32}
!6498 = !{!6499}
!6499 = !DILocalVariable(name: "irq", arg: 1, scope: !6495, file: !6438, line: 50, type: !32)
!6500 = !DILocation(line: 0, scope: !6495)
!6501 = !DILocation(line: 52, column: 20, scope: !6495)
!6502 = !DILocation(line: 52, column: 9, scope: !6495)
!6503 = !DILocation(line: 52, column: 41, scope: !6495)
!6504 = !DILocation(line: 52, column: 39, scope: !6495)
!6505 = !DILocation(line: 52, column: 2, scope: !6495)
!6506 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6438, file: !6438, line: 64, type: !6507, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !6509)
!6507 = !DISubroutineType(types: !6508)
!6508 = !{null, !32, !32, !110}
!6509 = !{!6510, !6511, !6512}
!6510 = !DILocalVariable(name: "irq", arg: 1, scope: !6506, file: !6438, line: 64, type: !32)
!6511 = !DILocalVariable(name: "prio", arg: 2, scope: !6506, file: !6438, line: 64, type: !32)
!6512 = !DILocalVariable(name: "flags", arg: 3, scope: !6506, file: !6438, line: 64, type: !110)
!6513 = !DILocation(line: 0, scope: !6506)
!6514 = !DILocation(line: 83, column: 8, scope: !6515)
!6515 = distinct !DILexicalBlock(scope: !6516, file: !6438, line: 82, column: 9)
!6516 = distinct !DILexicalBlock(scope: !6506, file: !6438, line: 76, column: 6)
!6517 = !DILocation(line: 91, column: 2, scope: !6518)
!6518 = distinct !DILexicalBlock(scope: !6519, file: !6438, line: 91, column: 2)
!6519 = distinct !DILexicalBlock(scope: !6506, file: !6438, line: 91, column: 2)
!6520 = !DILocation(line: 91, column: 2, scope: !6519)
!6521 = !DILocation(line: 91, column: 2, scope: !6522)
!6522 = distinct !DILexicalBlock(scope: !6518, file: !6438, line: 91, column: 2)
!6523 = !DILocation(line: 95, column: 2, scope: !6506)
!6524 = !DILocation(line: 96, column: 1, scope: !6506)
!6525 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !535, file: !535, line: 1814, type: !6526, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !6528)
!6526 = !DISubroutineType(types: !6527)
!6527 = !{null, !800, !110}
!6528 = !{!6529, !6530}
!6529 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6525, file: !535, line: 1814, type: !800)
!6530 = !DILocalVariable(name: "priority", arg: 2, scope: !6525, file: !535, line: 1814, type: !110)
!6531 = !DILocation(line: 0, scope: !6525)
!6532 = !DILocation(line: 0, scope: !6533)
!6533 = distinct !DILexicalBlock(scope: !6525, file: !535, line: 1816, column: 7)
!6534 = !DILocation(line: 1816, column: 7, scope: !6525)
!6535 = !DILocation(line: 1824, column: 1, scope: !6525)
!6536 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6438, file: !6438, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2645, retainedNodes: !6537)
!6537 = !{!6538}
!6538 = !DILocalVariable(name: "unused", arg: 1, scope: !6536, file: !6438, line: 155, type: !13)
!6539 = !DILocation(line: 0, scope: !6536)
!6540 = !DILocation(line: 159, column: 2, scope: !6536)
!6541 = !DILocation(line: 160, column: 1, scope: !6536)
!6542 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6543, file: !6543, line: 87, type: !3155, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2691, retainedNodes: !2106)
!6543 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6544 = !DILocation(line: 89, column: 2, scope: !6542)
!6545 = !DILocation(line: 90, column: 2, scope: !6542)
!6546 = !DILocation(line: 91, column: 1, scope: !6542)
!6547 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6543, file: !6543, line: 23, type: !3155, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2106)
!6548 = !DISubprogram(name: "z_arm_int_exit", scope: !6549, file: !6549, line: 153, type: !3155, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2106)
!6549 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6550 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6551, file: !6551, line: 256, type: !3155, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !2106)
!6551 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6552 = !DILocation(line: 258, column: 2, scope: !6550)
!6553 = !DILocation(line: 260, column: 2, scope: !6550)
!6554 = !DILocation(line: 262, column: 2, scope: !6550)
!6555 = !DILocation(line: 263, column: 2, scope: !6550)
!6556 = !DILocation(line: 267, column: 2, scope: !6550)
!6557 = !DILocation(line: 268, column: 2, scope: !6550)
!6558 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6551, file: !6551, line: 53, type: !3155, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !2106)
!6559 = !DILocation(line: 55, column: 12, scope: !6558)
!6560 = !DILocation(line: 271, column: 3, scope: !6561, inlinedAt: !6562)
!6561 = distinct !DISubprogram(name: "__DSB", scope: !6486, file: !6486, line: 269, type: !3155, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !2106)
!6562 = distinct !DILocation(line: 56, column: 2, scope: !6558)
!6563 = !{i64 3711116}
!6564 = !DILocation(line: 260, column: 3, scope: !6565, inlinedAt: !6566)
!6565 = distinct !DISubprogram(name: "__ISB", scope: !6486, file: !6486, line: 258, type: !3155, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !2106)
!6566 = distinct !DILocation(line: 57, column: 2, scope: !6558)
!6567 = !{i64 3710833}
!6568 = !DILocation(line: 58, column: 1, scope: !6558)
!6569 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !6551, file: !6551, line: 96, type: !3155, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !2106)
!6570 = !DILocation(line: 103, column: 13, scope: !6569)
!6571 = !DILocation(line: 975, column: 3, scope: !6572, inlinedAt: !6577)
!6572 = distinct !DISubprogram(name: "__get_CONTROL", scope: !6486, file: !6486, line: 971, type: !6573, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !6575)
!6573 = !DISubroutineType(types: !6574)
!6574 = !{!110}
!6575 = !{!6576}
!6576 = !DILocalVariable(name: "result", scope: !6572, file: !6486, line: 973, type: !110)
!6577 = distinct !DILocation(line: 189, column: 16, scope: !6569)
!6578 = !{i64 3731946}
!6579 = !DILocation(line: 0, scope: !6572, inlinedAt: !6577)
!6580 = !DILocation(line: 189, column: 32, scope: !6569)
!6581 = !DILocalVariable(name: "control", arg: 1, scope: !6582, file: !6486, line: 1001, type: !110)
!6582 = distinct !DISubprogram(name: "__set_CONTROL", scope: !6486, file: !6486, line: 1001, type: !6583, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !6585)
!6583 = !DISubroutineType(types: !6584)
!6584 = !{null, !110}
!6585 = !{!6581}
!6586 = !DILocation(line: 0, scope: !6582, inlinedAt: !6587)
!6587 = distinct !DILocation(line: 189, column: 2, scope: !6569)
!6588 = !DILocation(line: 1003, column: 3, scope: !6582, inlinedAt: !6587)
!6589 = !{i64 3732666}
!6590 = !DILocation(line: 260, column: 3, scope: !6565, inlinedAt: !6591)
!6591 = distinct !DILocation(line: 1004, column: 3, scope: !6582, inlinedAt: !6587)
!6592 = !DILocation(line: 191, column: 1, scope: !6569)
!6593 = distinct !DISubprogram(name: "arch_swap", scope: !6594, file: !6594, line: 33, type: !6496, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2721, retainedNodes: !6595)
!6594 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6595 = !{!6596}
!6596 = !DILocalVariable(name: "key", arg: 1, scope: !6593, file: !6594, line: 33, type: !32)
!6597 = !DILocation(line: 0, scope: !6593)
!6598 = !DILocation(line: 36, column: 2, scope: !6593)
!6599 = !DILocation(line: 36, column: 17, scope: !6593)
!6600 = !DILocation(line: 36, column: 25, scope: !6593)
!6601 = !DILocation(line: 37, column: 37, scope: !6593)
!6602 = !DILocation(line: 37, column: 17, scope: !6593)
!6603 = !DILocation(line: 37, column: 35, scope: !6593)
!6604 = !DILocation(line: 41, column: 12, scope: !6593)
!6605 = !DILocalVariable(name: "key", arg: 1, scope: !6606, file: !6165, line: 84, type: !32)
!6606 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6165, file: !6165, line: 84, type: !6176, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2721, retainedNodes: !6607)
!6607 = !{!6605}
!6608 = !DILocation(line: 0, scope: !6606, inlinedAt: !6609)
!6609 = distinct !DILocation(line: 44, column: 2, scope: !6593)
!6610 = !DILocation(line: 95, column: 2, scope: !6606, inlinedAt: !6609)
!6611 = !{i64 2281617}
!6612 = !DILocation(line: 53, column: 9, scope: !6593)
!6613 = !DILocation(line: 53, column: 24, scope: !6593)
!6614 = !DILocation(line: 53, column: 2, scope: !6593)
!6615 = distinct !DISubprogram(name: "arch_new_thread", scope: !6616, file: !6616, line: 56, type: !6617, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2749, retainedNodes: !6727)
!6616 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6617 = !DISubroutineType(types: !6618)
!6618 = !{null, !6619, !6722, !285, !3423, !107, !107, !107}
!6619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6620, size: 32)
!6620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1280, elements: !6621)
!6621 = !{!6622, !6680, !6692, !6693, !6694, !6695, !6696, !6702, !6717}
!6622 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6620, file: !156, line: 247, baseType: !6623, size: 384)
!6623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 384, elements: !6624)
!6624 = !{!6625, !6649, !6656, !6657, !6658, !6667, !6668, !6669}
!6625 = !DIDerivedType(tag: DW_TAG_member, scope: !6623, file: !156, line: 60, baseType: !6626, size: 64)
!6626 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6623, file: !156, line: 60, size: 64, elements: !6627)
!6627 = !{!6628, !6643}
!6628 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6626, file: !156, line: 61, baseType: !6629, size: 64)
!6629 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !6630)
!6630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !6631)
!6631 = !{!6632, !6638}
!6632 = !DIDerivedType(tag: DW_TAG_member, scope: !6630, file: !127, line: 38, baseType: !6633, size: 32)
!6633 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6630, file: !127, line: 38, size: 32, elements: !6634)
!6634 = !{!6635, !6637}
!6635 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6633, file: !127, line: 39, baseType: !6636, size: 32)
!6636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6630, size: 32)
!6637 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6633, file: !127, line: 40, baseType: !6636, size: 32)
!6638 = !DIDerivedType(tag: DW_TAG_member, scope: !6630, file: !127, line: 42, baseType: !6639, size: 32, offset: 32)
!6639 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6630, file: !127, line: 42, size: 32, elements: !6640)
!6640 = !{!6641, !6642}
!6641 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6639, file: !127, line: 43, baseType: !6636, size: 32)
!6642 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6639, file: !127, line: 44, baseType: !6636, size: 32)
!6643 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6626, file: !156, line: 62, baseType: !6644, size: 64)
!6644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !6645)
!6645 = !{!6646}
!6646 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6644, file: !168, line: 50, baseType: !6647, size: 64)
!6647 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6648, size: 64, elements: !173)
!6648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6644, size: 32)
!6649 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6623, file: !156, line: 68, baseType: !6650, size: 32, offset: 64)
!6650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6651, size: 32)
!6651 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !6652)
!6652 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !6653)
!6653 = !{!6654}
!6654 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6652, file: !122, line: 232, baseType: !6655, size: 64)
!6655 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !6630)
!6656 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6623, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!6657 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6623, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!6658 = !DIDerivedType(tag: DW_TAG_member, scope: !6623, file: !156, line: 90, baseType: !6659, size: 16, offset: 112)
!6659 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6623, file: !156, line: 90, size: 16, elements: !6660)
!6660 = !{!6661, !6666}
!6661 = !DIDerivedType(tag: DW_TAG_member, scope: !6659, file: !156, line: 91, baseType: !6662, size: 16)
!6662 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6659, file: !156, line: 91, size: 16, elements: !6663)
!6663 = !{!6664, !6665}
!6664 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6662, file: !156, line: 96, baseType: !188, size: 8)
!6665 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6662, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!6666 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6659, file: !156, line: 100, baseType: !192, size: 16)
!6667 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6623, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!6668 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6623, file: !156, line: 127, baseType: !107, size: 32, offset: 160)
!6669 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6623, file: !156, line: 131, baseType: !6670, size: 192, offset: 192)
!6670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !6671)
!6671 = !{!6672, !6673, !6679}
!6672 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6670, file: !122, line: 245, baseType: !6629, size: 64)
!6673 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6670, file: !122, line: 246, baseType: !6674, size: 32, offset: 64)
!6674 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !6675)
!6675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6676, size: 32)
!6676 = !DISubroutineType(types: !6677)
!6677 = !{null, !6678}
!6678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6670, size: 32)
!6679 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6670, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!6680 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6620, file: !156, line: 250, baseType: !6681, size: 288, offset: 384)
!6681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !6682)
!6682 = !{!6683, !6684, !6685, !6686, !6687, !6688, !6689, !6690, !6691}
!6683 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6681, file: !209, line: 26, baseType: !110, size: 32)
!6684 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6681, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!6685 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6681, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!6686 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6681, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!6687 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6681, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!6688 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6681, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!6689 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6681, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!6690 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6681, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!6691 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6681, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!6692 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6620, file: !156, line: 253, baseType: !107, size: 32, offset: 672)
!6693 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6620, file: !156, line: 256, baseType: !6651, size: 64, offset: 704)
!6694 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6620, file: !156, line: 279, baseType: !223, size: 256, offset: 768)
!6695 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6620, file: !156, line: 294, baseType: !109, size: 32, offset: 1024)
!6696 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6620, file: !156, line: 300, baseType: !6697, size: 96, offset: 1056)
!6697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !6698)
!6698 = !{!6699, !6700, !6701}
!6699 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6697, file: !156, line: 153, baseType: !22, size: 32)
!6700 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6697, file: !156, line: 162, baseType: !232, size: 32, offset: 32)
!6701 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6697, file: !156, line: 168, baseType: !232, size: 32, offset: 64)
!6702 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6620, file: !156, line: 325, baseType: !6703, size: 32, offset: 1152)
!6703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6704, size: 32)
!6704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !6705)
!6705 = !{!6706, !6712, !6713}
!6706 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6704, file: !118, line: 5074, baseType: !6707, size: 96)
!6707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !241, line: 56, size: 96, elements: !6708)
!6708 = !{!6709, !6710, !6711}
!6709 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6707, file: !241, line: 57, baseType: !244, size: 32)
!6710 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6707, file: !241, line: 58, baseType: !107, size: 32, offset: 32)
!6711 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6707, file: !241, line: 59, baseType: !232, size: 32, offset: 64)
!6712 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6704, file: !118, line: 5075, baseType: !6651, size: 64, offset: 96)
!6713 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6704, file: !118, line: 5076, baseType: !6714, size: 32, offset: 160)
!6714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !6715)
!6715 = !{!6716}
!6716 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !6714, file: !251, line: 52, baseType: !22, size: 32)
!6717 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6620, file: !156, line: 343, baseType: !6718, size: 64, offset: 1184)
!6718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !209, line: 60, size: 64, elements: !6719)
!6719 = !{!6720, !6721}
!6720 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6718, file: !209, line: 63, baseType: !110, size: 32)
!6721 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6718, file: !209, line: 66, baseType: !110, size: 32, offset: 32)
!6722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6723, size: 32)
!6723 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3422, line: 44, baseType: !6724)
!6724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !145, line: 47, size: 8, elements: !6725)
!6725 = !{!6726}
!6726 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6724, file: !145, line: 48, baseType: !148, size: 8)
!6727 = !{!6728, !6729, !6730, !6731, !6732, !6733, !6734, !6735}
!6728 = !DILocalVariable(name: "thread", arg: 1, scope: !6615, file: !6616, line: 56, type: !6619)
!6729 = !DILocalVariable(name: "stack", arg: 2, scope: !6615, file: !6616, line: 56, type: !6722)
!6730 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6615, file: !6616, line: 57, type: !285)
!6731 = !DILocalVariable(name: "entry", arg: 4, scope: !6615, file: !6616, line: 57, type: !3423)
!6732 = !DILocalVariable(name: "p1", arg: 5, scope: !6615, file: !6616, line: 58, type: !107)
!6733 = !DILocalVariable(name: "p2", arg: 6, scope: !6615, file: !6616, line: 58, type: !107)
!6734 = !DILocalVariable(name: "p3", arg: 7, scope: !6615, file: !6616, line: 58, type: !107)
!6735 = !DILocalVariable(name: "iframe", scope: !6615, file: !6616, line: 60, type: !2752)
!6736 = !DILocation(line: 0, scope: !6615)
!6737 = !DILocation(line: 85, column: 11, scope: !6615)
!6738 = !DILocation(line: 93, column: 10, scope: !6615)
!6739 = !DILocation(line: 98, column: 13, scope: !6615)
!6740 = !DILocation(line: 100, column: 15, scope: !6615)
!6741 = !DILocation(line: 100, column: 10, scope: !6615)
!6742 = !DILocation(line: 100, column: 13, scope: !6615)
!6743 = !DILocation(line: 101, column: 15, scope: !6615)
!6744 = !DILocation(line: 101, column: 10, scope: !6615)
!6745 = !DILocation(line: 101, column: 13, scope: !6615)
!6746 = !DILocation(line: 102, column: 15, scope: !6615)
!6747 = !DILocation(line: 102, column: 10, scope: !6615)
!6748 = !DILocation(line: 102, column: 13, scope: !6615)
!6749 = !DILocation(line: 103, column: 15, scope: !6615)
!6750 = !DILocation(line: 103, column: 10, scope: !6615)
!6751 = !DILocation(line: 103, column: 13, scope: !6615)
!6752 = !DILocation(line: 106, column: 10, scope: !6615)
!6753 = !DILocation(line: 106, column: 15, scope: !6615)
!6754 = !DILocation(line: 122, column: 29, scope: !6615)
!6755 = !DILocation(line: 122, column: 23, scope: !6615)
!6756 = !DILocation(line: 122, column: 27, scope: !6615)
!6757 = !DILocation(line: 123, column: 15, scope: !6615)
!6758 = !DILocation(line: 123, column: 23, scope: !6615)
!6759 = !DILocation(line: 143, column: 1, scope: !6615)
!6760 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6616, file: !6616, line: 385, type: !6761, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2749, retainedNodes: !6764)
!6761 = !DISubroutineType(types: !6762)
!6762 = !{!110, !6763, !6763}
!6763 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !110)
!6764 = !{!6765, !6766, !6767, !6770}
!6765 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !6760, file: !6616, line: 385, type: !6763)
!6766 = !DILocalVariable(name: "psp", arg: 2, scope: !6760, file: !6616, line: 385, type: !6763)
!6767 = !DILocalVariable(name: "thread", scope: !6760, file: !6616, line: 388, type: !6768)
!6768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6769, size: 32)
!6769 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6620)
!6770 = !DILocalVariable(name: "guard_len", scope: !6760, file: !6616, line: 405, type: !110)
!6771 = !DILocation(line: 0, scope: !6760)
!6772 = !DILocation(line: 388, column: 34, scope: !6760)
!6773 = !DILocation(line: 390, column: 13, scope: !6774)
!6774 = distinct !DILexicalBlock(scope: !6760, file: !6616, line: 390, column: 6)
!6775 = !DILocation(line: 390, column: 6, scope: !6760)
!6776 = !DILocation(line: 438, column: 6, scope: !6777)
!6777 = distinct !DILexicalBlock(scope: !6760, file: !6616, line: 438, column: 6)
!6778 = !DILocation(line: 438, column: 6, scope: !6760)
!6779 = !DILocation(line: 442, column: 3, scope: !6780)
!6780 = distinct !DILexicalBlock(scope: !6777, file: !6616, line: 440, column: 22)
!6781 = !DILocation(line: 455, column: 1, scope: !6760)
!6782 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6616, file: !6616, line: 530, type: !6783, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2749, retainedNodes: !6785)
!6783 = !DISubroutineType(types: !6784)
!6784 = !{null, !6619, !285, !3423}
!6785 = !{!6786, !6787, !6788}
!6786 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6782, file: !6616, line: 530, type: !6619)
!6787 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6782, file: !6616, line: 530, type: !285)
!6788 = !DILocalVariable(name: "_main", arg: 3, scope: !6782, file: !6616, line: 531, type: !3423)
!6789 = !DILocation(line: 0, scope: !6782)
!6790 = !DILocation(line: 535, column: 11, scope: !6782)
!6791 = !DILocation(line: 560, column: 2, scope: !6782)
!6792 = !DILocation(line: 576, column: 2, scope: !6782)
!6793 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6794 = !DILocation(line: 603, column: 2, scope: !6782)
!6795 = distinct !DISubprogram(name: "z_arm_fault", scope: !6796, file: !6796, line: 1036, type: !6797, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2792, retainedNodes: !6812)
!6796 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6797 = !DISubroutineType(types: !6798)
!6798 = !{null, !110, !110, !110, !6799}
!6799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6800, size: 32)
!6800 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !209, line: 37, baseType: !6801)
!6801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !6802)
!6802 = !{!6803, !6804, !6805, !6806, !6807, !6808, !6809, !6810, !6811}
!6803 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6801, file: !209, line: 26, baseType: !110, size: 32)
!6804 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6801, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!6805 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6801, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!6806 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6801, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!6807 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6801, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!6808 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6801, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!6809 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6801, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!6810 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6801, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!6811 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6801, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!6812 = !{!6813, !6814, !6815, !6816, !6817, !6818, !6819, !6820, !6821, !6822}
!6813 = !DILocalVariable(name: "msp", arg: 1, scope: !6795, file: !6796, line: 1036, type: !110)
!6814 = !DILocalVariable(name: "psp", arg: 2, scope: !6795, file: !6796, line: 1036, type: !110)
!6815 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6795, file: !6796, line: 1036, type: !110)
!6816 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6795, file: !6796, line: 1037, type: !6799)
!6817 = !DILocalVariable(name: "reason", scope: !6795, file: !6796, line: 1039, type: !110)
!6818 = !DILocalVariable(name: "fault", scope: !6795, file: !6796, line: 1040, type: !109)
!6819 = !DILocalVariable(name: "recoverable", scope: !6795, file: !6796, line: 1041, type: !347)
!6820 = !DILocalVariable(name: "nested_exc", scope: !6795, file: !6796, line: 1041, type: !347)
!6821 = !DILocalVariable(name: "esf", scope: !6795, file: !6796, line: 1042, type: !2820)
!6822 = !DILocalVariable(name: "esf_copy", scope: !6795, file: !6796, line: 1047, type: !2821)
!6823 = !DILocation(line: 0, scope: !6795)
!6824 = !DILocation(line: 1040, column: 19, scope: !6795)
!6825 = !DILocation(line: 1041, column: 2, scope: !6795)
!6826 = !DILocation(line: 1047, column: 2, scope: !6795)
!6827 = !DILocation(line: 1047, column: 15, scope: !6795)
!6828 = !DILocalVariable(name: "key", arg: 1, scope: !6829, file: !6165, line: 84, type: !32)
!6829 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6165, file: !6165, line: 84, type: !6176, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2792, retainedNodes: !6830)
!6830 = !{!6828}
!6831 = !DILocation(line: 0, scope: !6829, inlinedAt: !6832)
!6832 = distinct !DILocation(line: 1050, column: 2, scope: !6795)
!6833 = !DILocation(line: 95, column: 2, scope: !6829, inlinedAt: !6832)
!6834 = !{i64 2314861}
!6835 = !DILocation(line: 1055, column: 9, scope: !6795)
!6836 = !DILocation(line: 1056, column: 2, scope: !6837)
!6837 = distinct !DILexicalBlock(scope: !6838, file: !6796, line: 1056, column: 2)
!6838 = distinct !DILexicalBlock(scope: !6795, file: !6796, line: 1056, column: 2)
!6839 = !DILocation(line: 1056, column: 2, scope: !6838)
!6840 = !DILocation(line: 1056, column: 2, scope: !6841)
!6841 = distinct !DILexicalBlock(scope: !6837, file: !6796, line: 1056, column: 2)
!6842 = !DILocation(line: 1040, column: 24, scope: !6795)
!6843 = !DILocation(line: 1063, column: 11, scope: !6795)
!6844 = !DILocation(line: 1064, column: 6, scope: !6845)
!6845 = distinct !DILexicalBlock(scope: !6795, file: !6796, line: 1064, column: 6)
!6846 = !{i8 0, i8 2}
!6847 = !DILocation(line: 1064, column: 6, scope: !6795)
!6848 = !DILocation(line: 1070, column: 20, scope: !6795)
!6849 = !DILocation(line: 1070, column: 2, scope: !6795)
!6850 = !DILocation(line: 1089, column: 6, scope: !6851)
!6851 = distinct !DILexicalBlock(scope: !6795, file: !6796, line: 1089, column: 6)
!6852 = !DILocation(line: 0, scope: !6851)
!6853 = !DILocation(line: 1089, column: 6, scope: !6795)
!6854 = !DILocation(line: 1090, column: 28, scope: !6855)
!6855 = distinct !DILexicalBlock(scope: !6856, file: !6796, line: 1090, column: 7)
!6856 = distinct !DILexicalBlock(scope: !6851, file: !6796, line: 1089, column: 18)
!6857 = !DILocation(line: 1090, column: 44, scope: !6855)
!6858 = !DILocation(line: 1090, column: 7, scope: !6856)
!6859 = !DILocation(line: 1091, column: 24, scope: !6860)
!6860 = distinct !DILexicalBlock(scope: !6855, file: !6796, line: 1090, column: 50)
!6861 = !DILocation(line: 1092, column: 3, scope: !6860)
!6862 = !DILocation(line: 1094, column: 23, scope: !6863)
!6863 = distinct !DILexicalBlock(scope: !6851, file: !6796, line: 1093, column: 9)
!6864 = !DILocation(line: 1097, column: 2, scope: !6795)
!6865 = !DILocation(line: 1098, column: 1, scope: !6795)
!6866 = distinct !DISubprogram(name: "get_esf", scope: !6796, file: !6796, line: 894, type: !6867, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2792, retainedNodes: !6870)
!6867 = !DISubroutineType(types: !6868)
!6868 = !{!2820, !110, !110, !110, !6869}
!6869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !347, size: 32)
!6870 = !{!6871, !6872, !6873, !6874, !6875, !6876}
!6871 = !DILocalVariable(name: "msp", arg: 1, scope: !6866, file: !6796, line: 894, type: !110)
!6872 = !DILocalVariable(name: "psp", arg: 2, scope: !6866, file: !6796, line: 894, type: !110)
!6873 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6866, file: !6796, line: 894, type: !110)
!6874 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6866, file: !6796, line: 895, type: !6869)
!6875 = !DILocalVariable(name: "alternative_state_exc", scope: !6866, file: !6796, line: 897, type: !347)
!6876 = !DILocalVariable(name: "ptr_esf", scope: !6866, file: !6796, line: 898, type: !2820)
!6877 = !DILocation(line: 0, scope: !6866)
!6878 = !DILocation(line: 900, column: 14, scope: !6866)
!6879 = !DILocation(line: 902, column: 49, scope: !6880)
!6880 = distinct !DILexicalBlock(scope: !6866, file: !6796, line: 902, column: 6)
!6881 = !DILocation(line: 902, column: 6, scope: !6866)
!6882 = !DILocation(line: 983, column: 44, scope: !6883)
!6883 = distinct !DILexicalBlock(scope: !6866, file: !6796, line: 983, column: 6)
!6884 = !DILocation(line: 985, column: 3, scope: !6885)
!6885 = distinct !DILexicalBlock(scope: !6886, file: !6796, line: 985, column: 3)
!6886 = distinct !DILexicalBlock(scope: !6887, file: !6796, line: 985, column: 3)
!6887 = distinct !DILexicalBlock(scope: !6888, file: !6796, line: 985, column: 3)
!6888 = distinct !DILexicalBlock(scope: !6889, file: !6796, line: 985, column: 3)
!6889 = distinct !DILexicalBlock(scope: !6883, file: !6796, line: 984, column: 47)
!6890 = !DILocation(line: 986, column: 3, scope: !6889)
!6891 = !DILocation(line: 983, column: 18, scope: !6883)
!6892 = !DILocation(line: 991, column: 7, scope: !6893)
!6893 = distinct !DILexicalBlock(scope: !6894, file: !6796, line: 990, column: 30)
!6894 = distinct !DILexicalBlock(scope: !6866, file: !6796, line: 990, column: 6)
!6895 = !DILocation(line: 998, column: 16, scope: !6896)
!6896 = distinct !DILexicalBlock(scope: !6897, file: !6796, line: 995, column: 10)
!6897 = distinct !DILexicalBlock(scope: !6893, file: !6796, line: 991, column: 7)
!6898 = !DILocation(line: 1002, column: 2, scope: !6866)
!6899 = !DILocation(line: 1003, column: 1, scope: !6866)
!6900 = distinct !DISubprogram(name: "fault_handle", scope: !6796, file: !6796, line: 786, type: !6901, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2792, retainedNodes: !6903)
!6901 = !DISubroutineType(types: !6902)
!6902 = !{!110, !2820, !109, !6869}
!6903 = !{!6904, !6905, !6906, !6907}
!6904 = !DILocalVariable(name: "esf", arg: 1, scope: !6900, file: !6796, line: 786, type: !2820)
!6905 = !DILocalVariable(name: "fault", arg: 2, scope: !6900, file: !6796, line: 786, type: !109)
!6906 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6900, file: !6796, line: 786, type: !6869)
!6907 = !DILocalVariable(name: "reason", scope: !6900, file: !6796, line: 788, type: !110)
!6908 = !DILocation(line: 0, scope: !6900)
!6909 = !DILocation(line: 790, column: 15, scope: !6900)
!6910 = !DILocation(line: 792, column: 2, scope: !6900)
!6911 = !DILocation(line: 794, column: 12, scope: !6912)
!6912 = distinct !DILexicalBlock(scope: !6900, file: !6796, line: 792, column: 17)
!6913 = !DILocation(line: 795, column: 3, scope: !6912)
!6914 = !DILocation(line: 800, column: 12, scope: !6912)
!6915 = !DILocation(line: 801, column: 3, scope: !6912)
!6916 = !DILocation(line: 803, column: 12, scope: !6912)
!6917 = !DILocation(line: 804, column: 3, scope: !6912)
!6918 = !DILocation(line: 806, column: 12, scope: !6912)
!6919 = !DILocation(line: 807, column: 3, scope: !6912)
!6920 = !DILocation(line: 814, column: 3, scope: !6912)
!6921 = !DILocation(line: 815, column: 3, scope: !6912)
!6922 = !DILocation(line: 820, column: 3, scope: !6912)
!6923 = !DILocation(line: 821, column: 3, scope: !6912)
!6924 = !DILocation(line: 829, column: 2, scope: !6900)
!6925 = distinct !DISubprogram(name: "hard_fault", scope: !6796, file: !6796, line: 709, type: !6926, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2792, retainedNodes: !6928)
!6926 = !DISubroutineType(types: !6927)
!6927 = !{!110, !2820, !6869}
!6928 = !{!6929, !6930, !6931}
!6929 = !DILocalVariable(name: "esf", arg: 1, scope: !6925, file: !6796, line: 709, type: !2820)
!6930 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6925, file: !6796, line: 709, type: !6869)
!6931 = !DILocalVariable(name: "reason", scope: !6925, file: !6796, line: 711, type: !110)
!6932 = !DILocation(line: 0, scope: !6925)
!6933 = !DILocation(line: 713, column: 2, scope: !6934)
!6934 = distinct !DILexicalBlock(scope: !6935, file: !6796, line: 713, column: 2)
!6935 = distinct !DILexicalBlock(scope: !6936, file: !6796, line: 713, column: 2)
!6936 = distinct !DILexicalBlock(scope: !6937, file: !6796, line: 713, column: 2)
!6937 = distinct !DILexicalBlock(scope: !6925, file: !6796, line: 713, column: 2)
!6938 = !DILocation(line: 732, column: 15, scope: !6925)
!6939 = !DILocation(line: 734, column: 12, scope: !6940)
!6940 = distinct !DILexicalBlock(scope: !6925, file: !6796, line: 734, column: 6)
!6941 = !DILocation(line: 734, column: 17, scope: !6940)
!6942 = !DILocation(line: 734, column: 41, scope: !6940)
!6943 = !DILocation(line: 734, column: 6, scope: !6925)
!6944 = !DILocation(line: 735, column: 3, scope: !6945)
!6945 = distinct !DILexicalBlock(scope: !6946, file: !6796, line: 735, column: 3)
!6946 = distinct !DILexicalBlock(scope: !6947, file: !6796, line: 735, column: 3)
!6947 = distinct !DILexicalBlock(scope: !6948, file: !6796, line: 735, column: 3)
!6948 = distinct !DILexicalBlock(scope: !6949, file: !6796, line: 735, column: 3)
!6949 = distinct !DILexicalBlock(scope: !6940, file: !6796, line: 734, column: 47)
!6950 = !DILocation(line: 736, column: 2, scope: !6949)
!6951 = !DILocation(line: 736, column: 19, scope: !6952)
!6952 = distinct !DILexicalBlock(scope: !6940, file: !6796, line: 736, column: 13)
!6953 = !DILocation(line: 736, column: 49, scope: !6952)
!6954 = !DILocation(line: 736, column: 13, scope: !6940)
!6955 = !DILocation(line: 737, column: 3, scope: !6956)
!6956 = distinct !DILexicalBlock(scope: !6957, file: !6796, line: 737, column: 3)
!6957 = distinct !DILexicalBlock(scope: !6958, file: !6796, line: 737, column: 3)
!6958 = distinct !DILexicalBlock(scope: !6959, file: !6796, line: 737, column: 3)
!6959 = distinct !DILexicalBlock(scope: !6960, file: !6796, line: 737, column: 3)
!6960 = distinct !DILexicalBlock(scope: !6952, file: !6796, line: 736, column: 55)
!6961 = !DILocation(line: 738, column: 2, scope: !6960)
!6962 = !DILocation(line: 738, column: 19, scope: !6963)
!6963 = distinct !DILexicalBlock(scope: !6952, file: !6796, line: 738, column: 13)
!6964 = !DILocation(line: 738, column: 24, scope: !6963)
!6965 = !DILocation(line: 738, column: 47, scope: !6963)
!6966 = !DILocation(line: 738, column: 13, scope: !6952)
!6967 = !DILocation(line: 739, column: 3, scope: !6968)
!6968 = distinct !DILexicalBlock(scope: !6969, file: !6796, line: 739, column: 3)
!6969 = distinct !DILexicalBlock(scope: !6970, file: !6796, line: 739, column: 3)
!6970 = distinct !DILexicalBlock(scope: !6971, file: !6796, line: 739, column: 3)
!6971 = distinct !DILexicalBlock(scope: !6972, file: !6796, line: 739, column: 3)
!6972 = distinct !DILexicalBlock(scope: !6963, file: !6796, line: 738, column: 53)
!6973 = !DILocation(line: 740, column: 7, scope: !6974)
!6974 = distinct !DILexicalBlock(scope: !6972, file: !6796, line: 740, column: 7)
!6975 = !DILocation(line: 740, column: 7, scope: !6972)
!6976 = !DILocation(line: 741, column: 4, scope: !6977)
!6977 = distinct !DILexicalBlock(scope: !6978, file: !6796, line: 741, column: 4)
!6978 = distinct !DILexicalBlock(scope: !6979, file: !6796, line: 741, column: 4)
!6979 = distinct !DILexicalBlock(scope: !6980, file: !6796, line: 741, column: 4)
!6980 = distinct !DILexicalBlock(scope: !6981, file: !6796, line: 741, column: 4)
!6981 = distinct !DILexicalBlock(scope: !6974, file: !6796, line: 740, column: 38)
!6982 = !DILocation(line: 742, column: 24, scope: !6981)
!6983 = !DILocation(line: 743, column: 3, scope: !6981)
!6984 = !DILocation(line: 743, column: 20, scope: !6985)
!6985 = distinct !DILexicalBlock(scope: !6974, file: !6796, line: 743, column: 14)
!6986 = !DILocation(line: 743, column: 25, scope: !6985)
!6987 = !DILocation(line: 743, column: 52, scope: !6985)
!6988 = !DILocation(line: 743, column: 14, scope: !6974)
!6989 = !DILocation(line: 744, column: 13, scope: !6990)
!6990 = distinct !DILexicalBlock(scope: !6985, file: !6796, line: 743, column: 58)
!6991 = !DILocation(line: 745, column: 3, scope: !6990)
!6992 = !DILocation(line: 745, column: 20, scope: !6993)
!6993 = distinct !DILexicalBlock(scope: !6985, file: !6796, line: 745, column: 14)
!6994 = !DILocation(line: 745, column: 25, scope: !6993)
!6995 = !DILocation(line: 745, column: 52, scope: !6993)
!6996 = !DILocation(line: 745, column: 14, scope: !6985)
!6997 = !DILocation(line: 746, column: 13, scope: !6998)
!6998 = distinct !DILexicalBlock(scope: !6993, file: !6796, line: 745, column: 58)
!6999 = !DILocation(line: 747, column: 3, scope: !6998)
!7000 = !DILocation(line: 747, column: 20, scope: !7001)
!7001 = distinct !DILexicalBlock(scope: !6993, file: !6796, line: 747, column: 14)
!7002 = !DILocation(line: 747, column: 52, scope: !7001)
!7003 = !DILocation(line: 747, column: 14, scope: !6993)
!7004 = !DILocation(line: 748, column: 13, scope: !7005)
!7005 = distinct !DILexicalBlock(scope: !7001, file: !6796, line: 747, column: 58)
!7006 = !DILocation(line: 754, column: 4, scope: !7007)
!7007 = distinct !DILexicalBlock(scope: !7008, file: !6796, line: 754, column: 4)
!7008 = distinct !DILexicalBlock(scope: !7009, file: !6796, line: 754, column: 4)
!7009 = distinct !DILexicalBlock(scope: !7010, file: !6796, line: 754, column: 4)
!7010 = distinct !DILexicalBlock(scope: !7001, file: !6796, line: 753, column: 10)
!7011 = !DILocation(line: 758, column: 3, scope: !7012)
!7012 = distinct !DILexicalBlock(scope: !7013, file: !6796, line: 758, column: 3)
!7013 = distinct !DILexicalBlock(scope: !7014, file: !6796, line: 758, column: 3)
!7014 = distinct !DILexicalBlock(scope: !7015, file: !6796, line: 758, column: 3)
!7015 = distinct !DILexicalBlock(scope: !6963, file: !6796, line: 757, column: 9)
!7016 = !DILocation(line: 766, column: 2, scope: !6925)
!7017 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6796, file: !6796, line: 229, type: !6901, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2792, retainedNodes: !7018)
!7018 = !{!7019, !7020, !7021, !7022, !7023, !7024, !7027}
!7019 = !DILocalVariable(name: "esf", arg: 1, scope: !7017, file: !6796, line: 229, type: !2820)
!7020 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7017, file: !6796, line: 229, type: !109)
!7021 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7017, file: !6796, line: 230, type: !6869)
!7022 = !DILocalVariable(name: "reason", scope: !7017, file: !6796, line: 232, type: !110)
!7023 = !DILocalVariable(name: "mmfar", scope: !7017, file: !6796, line: 233, type: !110)
!7024 = !DILocalVariable(name: "temp", scope: !7025, file: !6796, line: 254, type: !110)
!7025 = distinct !DILexicalBlock(scope: !7026, file: !6796, line: 244, column: 48)
!7026 = distinct !DILexicalBlock(scope: !7017, file: !6796, line: 244, column: 6)
!7027 = !DILocalVariable(name: "min_stack_ptr", scope: !7028, file: !6796, line: 309, type: !110)
!7028 = distinct !DILexicalBlock(scope: !7029, file: !6796, line: 308, column: 43)
!7029 = distinct !DILexicalBlock(scope: !7030, file: !6796, line: 308, column: 7)
!7030 = distinct !DILexicalBlock(scope: !7031, file: !6796, line: 289, column: 40)
!7031 = distinct !DILexicalBlock(scope: !7017, file: !6796, line: 288, column: 6)
!7032 = !DILocation(line: 0, scope: !7017)
!7033 = !DILocation(line: 235, column: 2, scope: !7034)
!7034 = distinct !DILexicalBlock(scope: !7035, file: !6796, line: 235, column: 2)
!7035 = distinct !DILexicalBlock(scope: !7036, file: !6796, line: 235, column: 2)
!7036 = distinct !DILexicalBlock(scope: !7037, file: !6796, line: 235, column: 2)
!7037 = distinct !DILexicalBlock(scope: !7017, file: !6796, line: 235, column: 2)
!7038 = !DILocation(line: 237, column: 12, scope: !7039)
!7039 = distinct !DILexicalBlock(scope: !7017, file: !6796, line: 237, column: 6)
!7040 = !DILocation(line: 237, column: 17, scope: !7039)
!7041 = !DILocation(line: 237, column: 41, scope: !7039)
!7042 = !DILocation(line: 237, column: 6, scope: !7017)
!7043 = !DILocation(line: 238, column: 3, scope: !7044)
!7044 = distinct !DILexicalBlock(scope: !7045, file: !6796, line: 238, column: 3)
!7045 = distinct !DILexicalBlock(scope: !7046, file: !6796, line: 238, column: 3)
!7046 = distinct !DILexicalBlock(scope: !7047, file: !6796, line: 238, column: 3)
!7047 = distinct !DILexicalBlock(scope: !7048, file: !6796, line: 238, column: 3)
!7048 = distinct !DILexicalBlock(scope: !7039, file: !6796, line: 237, column: 47)
!7049 = !DILocation(line: 240, column: 2, scope: !7048)
!7050 = !DILocation(line: 241, column: 12, scope: !7051)
!7051 = distinct !DILexicalBlock(scope: !7017, file: !6796, line: 241, column: 6)
!7052 = !DILocation(line: 241, column: 17, scope: !7051)
!7053 = !DILocation(line: 241, column: 43, scope: !7051)
!7054 = !DILocation(line: 241, column: 6, scope: !7017)
!7055 = !DILocation(line: 242, column: 3, scope: !7056)
!7056 = distinct !DILexicalBlock(scope: !7057, file: !6796, line: 242, column: 3)
!7057 = distinct !DILexicalBlock(scope: !7058, file: !6796, line: 242, column: 3)
!7058 = distinct !DILexicalBlock(scope: !7059, file: !6796, line: 242, column: 3)
!7059 = distinct !DILexicalBlock(scope: !7060, file: !6796, line: 242, column: 3)
!7060 = distinct !DILexicalBlock(scope: !7051, file: !6796, line: 241, column: 49)
!7061 = !DILocation(line: 243, column: 2, scope: !7060)
!7062 = !DILocation(line: 244, column: 12, scope: !7026)
!7063 = !DILocation(line: 244, column: 17, scope: !7026)
!7064 = !DILocation(line: 244, column: 42, scope: !7026)
!7065 = !DILocation(line: 244, column: 6, scope: !7017)
!7066 = !DILocation(line: 245, column: 3, scope: !7067)
!7067 = distinct !DILexicalBlock(scope: !7068, file: !6796, line: 245, column: 3)
!7068 = distinct !DILexicalBlock(scope: !7069, file: !6796, line: 245, column: 3)
!7069 = distinct !DILexicalBlock(scope: !7070, file: !6796, line: 245, column: 3)
!7070 = distinct !DILexicalBlock(scope: !7025, file: !6796, line: 245, column: 3)
!7071 = !DILocation(line: 254, column: 24, scope: !7025)
!7072 = !DILocation(line: 0, scope: !7025)
!7073 = !DILocation(line: 256, column: 13, scope: !7074)
!7074 = distinct !DILexicalBlock(scope: !7025, file: !6796, line: 256, column: 7)
!7075 = !DILocation(line: 256, column: 18, scope: !7074)
!7076 = !DILocation(line: 256, column: 44, scope: !7074)
!7077 = !DILocation(line: 256, column: 7, scope: !7025)
!7078 = !DILocation(line: 258, column: 4, scope: !7079)
!7079 = distinct !DILexicalBlock(scope: !7080, file: !6796, line: 258, column: 4)
!7080 = distinct !DILexicalBlock(scope: !7081, file: !6796, line: 258, column: 4)
!7081 = distinct !DILexicalBlock(scope: !7082, file: !6796, line: 258, column: 4)
!7082 = distinct !DILexicalBlock(scope: !7083, file: !6796, line: 258, column: 4)
!7083 = distinct !DILexicalBlock(scope: !7074, file: !6796, line: 256, column: 50)
!7084 = !DILocation(line: 259, column: 24, scope: !7085)
!7085 = distinct !DILexicalBlock(scope: !7083, file: !6796, line: 259, column: 8)
!7086 = !DILocation(line: 259, column: 8, scope: !7083)
!7087 = !DILocation(line: 261, column: 15, scope: !7088)
!7088 = distinct !DILexicalBlock(scope: !7085, file: !6796, line: 259, column: 30)
!7089 = !DILocation(line: 262, column: 4, scope: !7088)
!7090 = !DILocation(line: 265, column: 12, scope: !7091)
!7091 = distinct !DILexicalBlock(scope: !7017, file: !6796, line: 265, column: 6)
!7092 = !DILocation(line: 265, column: 17, scope: !7091)
!7093 = !DILocation(line: 265, column: 42, scope: !7091)
!7094 = !DILocation(line: 265, column: 6, scope: !7017)
!7095 = !DILocation(line: 266, column: 3, scope: !7096)
!7096 = distinct !DILexicalBlock(scope: !7097, file: !6796, line: 266, column: 3)
!7097 = distinct !DILexicalBlock(scope: !7098, file: !6796, line: 266, column: 3)
!7098 = distinct !DILexicalBlock(scope: !7099, file: !6796, line: 266, column: 3)
!7099 = distinct !DILexicalBlock(scope: !7100, file: !6796, line: 266, column: 3)
!7100 = distinct !DILexicalBlock(scope: !7091, file: !6796, line: 265, column: 48)
!7101 = !DILocation(line: 267, column: 2, scope: !7100)
!7102 = !DILocation(line: 269, column: 12, scope: !7103)
!7103 = distinct !DILexicalBlock(scope: !7017, file: !6796, line: 269, column: 6)
!7104 = !DILocation(line: 269, column: 17, scope: !7103)
!7105 = !DILocation(line: 269, column: 41, scope: !7103)
!7106 = !DILocation(line: 269, column: 6, scope: !7017)
!7107 = !DILocation(line: 270, column: 3, scope: !7108)
!7108 = distinct !DILexicalBlock(scope: !7109, file: !6796, line: 270, column: 3)
!7109 = distinct !DILexicalBlock(scope: !7110, file: !6796, line: 270, column: 3)
!7110 = distinct !DILexicalBlock(scope: !7111, file: !6796, line: 270, column: 3)
!7111 = distinct !DILexicalBlock(scope: !7112, file: !6796, line: 270, column: 3)
!7112 = distinct !DILexicalBlock(scope: !7103, file: !6796, line: 269, column: 47)
!7113 = !DILocation(line: 272, column: 2, scope: !7112)
!7114 = !DILocation(line: 288, column: 12, scope: !7031)
!7115 = !DILocation(line: 288, column: 17, scope: !7031)
!7116 = !DILocation(line: 288, column: 41, scope: !7031)
!7117 = !DILocation(line: 289, column: 9, scope: !7031)
!7118 = !DILocation(line: 289, column: 14, scope: !7031)
!7119 = !DILocation(line: 288, column: 6, scope: !7017)
!7120 = !DILocation(line: 308, column: 12, scope: !7029)
!7121 = !DILocation(line: 308, column: 17, scope: !7029)
!7122 = !DILocation(line: 308, column: 7, scope: !7030)
!7123 = !DILocation(line: 310, column: 6, scope: !7028)
!7124 = !DILocation(line: 309, column: 29, scope: !7028)
!7125 = !DILocation(line: 0, scope: !7028)
!7126 = !DILocation(line: 312, column: 8, scope: !7127)
!7127 = distinct !DILexicalBlock(scope: !7028, file: !6796, line: 312, column: 8)
!7128 = !DILocation(line: 312, column: 8, scope: !7028)
!7129 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !7130, file: !6486, line: 1099, type: !110)
!7130 = distinct !DISubprogram(name: "__set_PSP", scope: !6486, file: !6486, line: 1099, type: !6583, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2792, retainedNodes: !7131)
!7131 = !{!7129}
!7132 = !DILocation(line: 0, scope: !7130, inlinedAt: !7133)
!7133 = distinct !DILocation(line: 338, column: 5, scope: !7134)
!7134 = distinct !DILexicalBlock(scope: !7127, file: !6796, line: 312, column: 23)
!7135 = !DILocation(line: 1101, column: 3, scope: !7130, inlinedAt: !7133)
!7136 = !{i64 3762085}
!7137 = !DILocation(line: 341, column: 4, scope: !7134)
!7138 = !DILocation(line: 342, column: 5, scope: !7139)
!7139 = distinct !DILexicalBlock(scope: !7140, file: !6796, line: 342, column: 5)
!7140 = distinct !DILexicalBlock(scope: !7141, file: !6796, line: 342, column: 5)
!7141 = distinct !DILexicalBlock(scope: !7127, file: !6796, line: 341, column: 11)
!7142 = !DILocation(line: 342, column: 5, scope: !7140)
!7143 = !DILocation(line: 342, column: 5, scope: !7144)
!7144 = distinct !DILexicalBlock(scope: !7139, file: !6796, line: 342, column: 5)
!7145 = !DILocation(line: 360, column: 12, scope: !7146)
!7146 = distinct !DILexicalBlock(scope: !7017, file: !6796, line: 360, column: 6)
!7147 = !DILocation(line: 360, column: 17, scope: !7146)
!7148 = !DILocation(line: 360, column: 41, scope: !7146)
!7149 = !DILocation(line: 360, column: 6, scope: !7017)
!7150 = !DILocation(line: 361, column: 14, scope: !7151)
!7151 = distinct !DILexicalBlock(scope: !7146, file: !6796, line: 360, column: 47)
!7152 = !DILocation(line: 362, column: 2, scope: !7151)
!7153 = !DILocation(line: 366, column: 12, scope: !7017)
!7154 = !DILocation(line: 369, column: 15, scope: !7017)
!7155 = !DILocation(line: 371, column: 2, scope: !7017)
!7156 = distinct !DISubprogram(name: "bus_fault", scope: !6796, file: !6796, line: 383, type: !7157, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2792, retainedNodes: !7159)
!7157 = !DISubroutineType(types: !7158)
!7158 = !{!109, !2820, !109, !6869}
!7159 = !{!7160, !7161, !7162, !7163, !7164}
!7160 = !DILocalVariable(name: "esf", arg: 1, scope: !7156, file: !6796, line: 383, type: !2820)
!7161 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7156, file: !6796, line: 383, type: !109)
!7162 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7156, file: !6796, line: 383, type: !6869)
!7163 = !DILocalVariable(name: "reason", scope: !7156, file: !6796, line: 385, type: !110)
!7164 = !DILocalVariable(name: "bfar", scope: !7165, file: !6796, line: 405, type: !110)
!7165 = distinct !DILexicalBlock(scope: !7166, file: !6796, line: 395, column: 42)
!7166 = distinct !DILexicalBlock(scope: !7156, file: !6796, line: 395, column: 6)
!7167 = !DILocation(line: 0, scope: !7156)
!7168 = !DILocation(line: 387, column: 2, scope: !7169)
!7169 = distinct !DILexicalBlock(scope: !7170, file: !6796, line: 387, column: 2)
!7170 = distinct !DILexicalBlock(scope: !7171, file: !6796, line: 387, column: 2)
!7171 = distinct !DILexicalBlock(scope: !7172, file: !6796, line: 387, column: 2)
!7172 = distinct !DILexicalBlock(scope: !7156, file: !6796, line: 387, column: 2)
!7173 = !DILocation(line: 389, column: 11, scope: !7174)
!7174 = distinct !DILexicalBlock(scope: !7156, file: !6796, line: 389, column: 6)
!7175 = !DILocation(line: 389, column: 16, scope: !7174)
!7176 = !DILocation(line: 389, column: 6, scope: !7156)
!7177 = !DILocation(line: 390, column: 3, scope: !7178)
!7178 = distinct !DILexicalBlock(scope: !7179, file: !6796, line: 390, column: 3)
!7179 = distinct !DILexicalBlock(scope: !7180, file: !6796, line: 390, column: 3)
!7180 = distinct !DILexicalBlock(scope: !7181, file: !6796, line: 390, column: 3)
!7181 = distinct !DILexicalBlock(scope: !7182, file: !6796, line: 390, column: 3)
!7182 = distinct !DILexicalBlock(scope: !7174, file: !6796, line: 389, column: 39)
!7183 = !DILocation(line: 391, column: 2, scope: !7182)
!7184 = !DILocation(line: 392, column: 11, scope: !7185)
!7185 = distinct !DILexicalBlock(scope: !7156, file: !6796, line: 392, column: 6)
!7186 = !DILocation(line: 392, column: 16, scope: !7185)
!7187 = !DILocation(line: 392, column: 6, scope: !7156)
!7188 = !DILocation(line: 393, column: 3, scope: !7189)
!7189 = distinct !DILexicalBlock(scope: !7190, file: !6796, line: 393, column: 3)
!7190 = distinct !DILexicalBlock(scope: !7191, file: !6796, line: 393, column: 3)
!7191 = distinct !DILexicalBlock(scope: !7192, file: !6796, line: 393, column: 3)
!7192 = distinct !DILexicalBlock(scope: !7193, file: !6796, line: 393, column: 3)
!7193 = distinct !DILexicalBlock(scope: !7185, file: !6796, line: 392, column: 41)
!7194 = !DILocation(line: 394, column: 2, scope: !7193)
!7195 = !DILocation(line: 395, column: 11, scope: !7166)
!7196 = !DILocation(line: 395, column: 16, scope: !7166)
!7197 = !DILocation(line: 395, column: 6, scope: !7156)
!7198 = !DILocation(line: 396, column: 3, scope: !7199)
!7199 = distinct !DILexicalBlock(scope: !7200, file: !6796, line: 396, column: 3)
!7200 = distinct !DILexicalBlock(scope: !7201, file: !6796, line: 396, column: 3)
!7201 = distinct !DILexicalBlock(scope: !7202, file: !6796, line: 396, column: 3)
!7202 = distinct !DILexicalBlock(scope: !7165, file: !6796, line: 396, column: 3)
!7203 = !DILocation(line: 405, column: 3, scope: !7165)
!7204 = !DILocation(line: 0, scope: !7165)
!7205 = !DILocation(line: 407, column: 13, scope: !7206)
!7206 = distinct !DILexicalBlock(scope: !7165, file: !6796, line: 407, column: 7)
!7207 = !DILocation(line: 407, column: 18, scope: !7206)
!7208 = !DILocation(line: 407, column: 44, scope: !7206)
!7209 = !DILocation(line: 407, column: 7, scope: !7165)
!7210 = !DILocation(line: 408, column: 4, scope: !7211)
!7211 = distinct !DILexicalBlock(scope: !7212, file: !6796, line: 408, column: 4)
!7212 = distinct !DILexicalBlock(scope: !7213, file: !6796, line: 408, column: 4)
!7213 = distinct !DILexicalBlock(scope: !7214, file: !6796, line: 408, column: 4)
!7214 = distinct !DILexicalBlock(scope: !7215, file: !6796, line: 408, column: 4)
!7215 = distinct !DILexicalBlock(scope: !7206, file: !6796, line: 407, column: 50)
!7216 = !DILocation(line: 409, column: 24, scope: !7217)
!7217 = distinct !DILexicalBlock(scope: !7215, file: !6796, line: 409, column: 8)
!7218 = !DILocation(line: 409, column: 8, scope: !7215)
!7219 = !DILocation(line: 411, column: 15, scope: !7220)
!7220 = distinct !DILexicalBlock(scope: !7217, file: !6796, line: 409, column: 30)
!7221 = !DILocation(line: 412, column: 4, scope: !7220)
!7222 = !DILocation(line: 415, column: 11, scope: !7223)
!7223 = distinct !DILexicalBlock(scope: !7156, file: !6796, line: 415, column: 6)
!7224 = !DILocation(line: 415, column: 16, scope: !7223)
!7225 = !DILocation(line: 415, column: 6, scope: !7156)
!7226 = !DILocation(line: 416, column: 3, scope: !7227)
!7227 = distinct !DILexicalBlock(scope: !7228, file: !6796, line: 416, column: 3)
!7228 = distinct !DILexicalBlock(scope: !7229, file: !6796, line: 416, column: 3)
!7229 = distinct !DILexicalBlock(scope: !7230, file: !6796, line: 416, column: 3)
!7230 = distinct !DILexicalBlock(scope: !7231, file: !6796, line: 416, column: 3)
!7231 = distinct !DILexicalBlock(scope: !7223, file: !6796, line: 415, column: 44)
!7232 = !DILocation(line: 417, column: 2, scope: !7231)
!7233 = !DILocation(line: 418, column: 12, scope: !7234)
!7234 = distinct !DILexicalBlock(scope: !7156, file: !6796, line: 418, column: 6)
!7235 = !DILocation(line: 418, column: 17, scope: !7234)
!7236 = !DILocation(line: 418, column: 41, scope: !7234)
!7237 = !DILocation(line: 418, column: 6, scope: !7156)
!7238 = !DILocation(line: 423, column: 18, scope: !7239)
!7239 = distinct !DILexicalBlock(scope: !7234, file: !6796, line: 423, column: 13)
!7240 = !DILocation(line: 423, column: 23, scope: !7239)
!7241 = !DILocation(line: 423, column: 13, scope: !7234)
!7242 = !DILocation(line: 0, scope: !7234)
!7243 = !DILocation(line: 524, column: 12, scope: !7156)
!7244 = !DILocation(line: 526, column: 15, scope: !7156)
!7245 = !DILocation(line: 528, column: 2, scope: !7156)
!7246 = distinct !DISubprogram(name: "usage_fault", scope: !6796, file: !6796, line: 539, type: !7247, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2792, retainedNodes: !7251)
!7247 = !DISubroutineType(types: !7248)
!7248 = !{!110, !7249}
!7249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7250, size: 32)
!7250 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2821)
!7251 = !{!7252, !7253}
!7252 = !DILocalVariable(name: "esf", arg: 1, scope: !7246, file: !6796, line: 539, type: !7249)
!7253 = !DILocalVariable(name: "reason", scope: !7246, file: !6796, line: 541, type: !110)
!7254 = !DILocation(line: 0, scope: !7246)
!7255 = !DILocation(line: 543, column: 2, scope: !7256)
!7256 = distinct !DILexicalBlock(scope: !7257, file: !6796, line: 543, column: 2)
!7257 = distinct !DILexicalBlock(scope: !7258, file: !6796, line: 543, column: 2)
!7258 = distinct !DILexicalBlock(scope: !7259, file: !6796, line: 543, column: 2)
!7259 = distinct !DILexicalBlock(scope: !7246, file: !6796, line: 543, column: 2)
!7260 = !DILocation(line: 546, column: 12, scope: !7261)
!7261 = distinct !DILexicalBlock(scope: !7246, file: !6796, line: 546, column: 6)
!7262 = !DILocation(line: 546, column: 17, scope: !7261)
!7263 = !DILocation(line: 546, column: 43, scope: !7261)
!7264 = !DILocation(line: 546, column: 6, scope: !7246)
!7265 = !DILocation(line: 547, column: 3, scope: !7266)
!7266 = distinct !DILexicalBlock(scope: !7267, file: !6796, line: 547, column: 3)
!7267 = distinct !DILexicalBlock(scope: !7268, file: !6796, line: 547, column: 3)
!7268 = distinct !DILexicalBlock(scope: !7269, file: !6796, line: 547, column: 3)
!7269 = distinct !DILexicalBlock(scope: !7270, file: !6796, line: 547, column: 3)
!7270 = distinct !DILexicalBlock(scope: !7261, file: !6796, line: 546, column: 49)
!7271 = !DILocation(line: 548, column: 2, scope: !7270)
!7272 = !DILocation(line: 549, column: 12, scope: !7273)
!7273 = distinct !DILexicalBlock(scope: !7246, file: !6796, line: 549, column: 6)
!7274 = !DILocation(line: 549, column: 17, scope: !7273)
!7275 = !DILocation(line: 549, column: 43, scope: !7273)
!7276 = !DILocation(line: 549, column: 6, scope: !7246)
!7277 = !DILocation(line: 550, column: 3, scope: !7278)
!7278 = distinct !DILexicalBlock(scope: !7279, file: !6796, line: 550, column: 3)
!7279 = distinct !DILexicalBlock(scope: !7280, file: !6796, line: 550, column: 3)
!7280 = distinct !DILexicalBlock(scope: !7281, file: !6796, line: 550, column: 3)
!7281 = distinct !DILexicalBlock(scope: !7282, file: !6796, line: 550, column: 3)
!7282 = distinct !DILexicalBlock(scope: !7273, file: !6796, line: 549, column: 49)
!7283 = !DILocation(line: 551, column: 2, scope: !7282)
!7284 = !DILocation(line: 567, column: 12, scope: !7285)
!7285 = distinct !DILexicalBlock(scope: !7246, file: !6796, line: 567, column: 6)
!7286 = !DILocation(line: 567, column: 17, scope: !7285)
!7287 = !DILocation(line: 567, column: 38, scope: !7285)
!7288 = !DILocation(line: 567, column: 6, scope: !7246)
!7289 = !DILocation(line: 568, column: 3, scope: !7290)
!7290 = distinct !DILexicalBlock(scope: !7291, file: !6796, line: 568, column: 3)
!7291 = distinct !DILexicalBlock(scope: !7292, file: !6796, line: 568, column: 3)
!7292 = distinct !DILexicalBlock(scope: !7293, file: !6796, line: 568, column: 3)
!7293 = distinct !DILexicalBlock(scope: !7294, file: !6796, line: 568, column: 3)
!7294 = distinct !DILexicalBlock(scope: !7285, file: !6796, line: 567, column: 44)
!7295 = !DILocation(line: 569, column: 2, scope: !7294)
!7296 = !DILocation(line: 570, column: 12, scope: !7297)
!7297 = distinct !DILexicalBlock(scope: !7246, file: !6796, line: 570, column: 6)
!7298 = !DILocation(line: 570, column: 17, scope: !7297)
!7299 = !DILocation(line: 570, column: 39, scope: !7297)
!7300 = !DILocation(line: 570, column: 6, scope: !7246)
!7301 = !DILocation(line: 571, column: 3, scope: !7302)
!7302 = distinct !DILexicalBlock(scope: !7303, file: !6796, line: 571, column: 3)
!7303 = distinct !DILexicalBlock(scope: !7304, file: !6796, line: 571, column: 3)
!7304 = distinct !DILexicalBlock(scope: !7305, file: !6796, line: 571, column: 3)
!7305 = distinct !DILexicalBlock(scope: !7306, file: !6796, line: 571, column: 3)
!7306 = distinct !DILexicalBlock(scope: !7297, file: !6796, line: 570, column: 45)
!7307 = !DILocation(line: 572, column: 2, scope: !7306)
!7308 = !DILocation(line: 573, column: 12, scope: !7309)
!7309 = distinct !DILexicalBlock(scope: !7246, file: !6796, line: 573, column: 6)
!7310 = !DILocation(line: 573, column: 17, scope: !7309)
!7311 = !DILocation(line: 573, column: 42, scope: !7309)
!7312 = !DILocation(line: 573, column: 6, scope: !7246)
!7313 = !DILocation(line: 574, column: 3, scope: !7314)
!7314 = distinct !DILexicalBlock(scope: !7315, file: !6796, line: 574, column: 3)
!7315 = distinct !DILexicalBlock(scope: !7316, file: !6796, line: 574, column: 3)
!7316 = distinct !DILexicalBlock(scope: !7317, file: !6796, line: 574, column: 3)
!7317 = distinct !DILexicalBlock(scope: !7318, file: !6796, line: 574, column: 3)
!7318 = distinct !DILexicalBlock(scope: !7309, file: !6796, line: 573, column: 48)
!7319 = !DILocation(line: 575, column: 2, scope: !7318)
!7320 = !DILocation(line: 576, column: 12, scope: !7321)
!7321 = distinct !DILexicalBlock(scope: !7246, file: !6796, line: 576, column: 6)
!7322 = !DILocation(line: 576, column: 17, scope: !7321)
!7323 = !DILocation(line: 576, column: 44, scope: !7321)
!7324 = !DILocation(line: 576, column: 6, scope: !7246)
!7325 = !DILocation(line: 577, column: 3, scope: !7326)
!7326 = distinct !DILexicalBlock(scope: !7327, file: !6796, line: 577, column: 3)
!7327 = distinct !DILexicalBlock(scope: !7328, file: !6796, line: 577, column: 3)
!7328 = distinct !DILexicalBlock(scope: !7329, file: !6796, line: 577, column: 3)
!7329 = distinct !DILexicalBlock(scope: !7330, file: !6796, line: 577, column: 3)
!7330 = distinct !DILexicalBlock(scope: !7321, file: !6796, line: 576, column: 50)
!7331 = !DILocation(line: 578, column: 2, scope: !7330)
!7332 = !DILocation(line: 581, column: 12, scope: !7246)
!7333 = !DILocation(line: 583, column: 2, scope: !7246)
!7334 = distinct !DISubprogram(name: "debug_monitor", scope: !6796, file: !6796, line: 632, type: !7335, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2792, retainedNodes: !7337)
!7335 = !DISubroutineType(types: !7336)
!7336 = !{null, !2820, !6869}
!7337 = !{!7338, !7339}
!7338 = !DILocalVariable(name: "esf", arg: 1, scope: !7334, file: !6796, line: 632, type: !2820)
!7339 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7334, file: !6796, line: 632, type: !6869)
!7340 = !DILocation(line: 0, scope: !7334)
!7341 = !DILocation(line: 634, column: 15, scope: !7334)
!7342 = !DILocation(line: 636, column: 2, scope: !7343)
!7343 = distinct !DILexicalBlock(scope: !7344, file: !6796, line: 636, column: 2)
!7344 = distinct !DILexicalBlock(scope: !7345, file: !6796, line: 636, column: 2)
!7345 = distinct !DILexicalBlock(scope: !7346, file: !6796, line: 636, column: 2)
!7346 = distinct !DILexicalBlock(scope: !7334, file: !6796, line: 636, column: 2)
!7347 = !DILocation(line: 652, column: 1, scope: !7334)
!7348 = distinct !DISubprogram(name: "reserved_exception", scope: !6796, file: !6796, line: 776, type: !7349, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2792, retainedNodes: !7351)
!7349 = !DISubroutineType(types: !7350)
!7350 = !{null, !7249, !109}
!7351 = !{!7352, !7353}
!7352 = !DILocalVariable(name: "esf", arg: 1, scope: !7348, file: !6796, line: 776, type: !7249)
!7353 = !DILocalVariable(name: "fault", arg: 2, scope: !7348, file: !6796, line: 776, type: !109)
!7354 = !DILocation(line: 0, scope: !7348)
!7355 = !DILocation(line: 780, column: 2, scope: !7356)
!7356 = distinct !DILexicalBlock(scope: !7357, file: !6796, line: 780, column: 2)
!7357 = distinct !DILexicalBlock(scope: !7358, file: !6796, line: 780, column: 2)
!7358 = distinct !DILexicalBlock(scope: !7359, file: !6796, line: 780, column: 2)
!7359 = distinct !DILexicalBlock(scope: !7348, file: !6796, line: 780, column: 2)
!7360 = !DILocation(line: 783, column: 1, scope: !7348)
!7361 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6796, file: !6796, line: 658, type: !7362, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2792, retainedNodes: !7364)
!7362 = !DISubroutineType(types: !7363)
!7363 = !{!347, !2820}
!7364 = !{!7365, !7366, !7367}
!7365 = !DILocalVariable(name: "esf", arg: 1, scope: !7361, file: !6796, line: 658, type: !2820)
!7366 = !DILocalVariable(name: "ret_addr", scope: !7361, file: !6796, line: 660, type: !2863)
!7367 = !DILocalVariable(name: "fault_insn", scope: !7361, file: !6796, line: 686, type: !192)
!7368 = !DILocation(line: 0, scope: !7361)
!7369 = !DILocation(line: 660, column: 46, scope: !7361)
!7370 = !DILocation(line: 660, column: 23, scope: !7361)
!7371 = !DILocation(line: 682, column: 11, scope: !7361)
!7372 = !DILocation(line: 271, column: 3, scope: !7373, inlinedAt: !7374)
!7373 = distinct !DISubprogram(name: "__DSB", scope: !6486, file: !6486, line: 269, type: !3155, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2792, retainedNodes: !2106)
!7374 = distinct !DILocation(line: 683, column: 2, scope: !7361)
!7375 = !{i64 3738220}
!7376 = !DILocation(line: 260, column: 3, scope: !7377, inlinedAt: !7378)
!7377 = distinct !DISubprogram(name: "__ISB", scope: !6486, file: !6486, line: 258, type: !3155, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2792, retainedNodes: !2106)
!7378 = distinct !DILocation(line: 684, column: 2, scope: !7361)
!7379 = !{i64 3737937}
!7380 = !DILocation(line: 686, column: 35, scope: !7361)
!7381 = !DILocation(line: 686, column: 24, scope: !7361)
!7382 = !DILocation(line: 688, column: 11, scope: !7361)
!7383 = !DILocation(line: 271, column: 3, scope: !7373, inlinedAt: !7384)
!7384 = distinct !DILocation(line: 689, column: 2, scope: !7361)
!7385 = !DILocation(line: 260, column: 3, scope: !7377, inlinedAt: !7386)
!7386 = distinct !DILocation(line: 690, column: 2, scope: !7361)
!7387 = !DILocation(line: 693, column: 45, scope: !7388)
!7388 = distinct !DILexicalBlock(scope: !7361, file: !6796, line: 693, column: 6)
!7389 = !DILocation(line: 699, column: 1, scope: !7361)
!7390 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6796, file: !6796, line: 1107, type: !3155, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2792, retainedNodes: !2106)
!7391 = !DILocation(line: 1111, column: 11, scope: !7390)
!7392 = !DILocation(line: 1136, column: 1, scope: !7390)
!7393 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !7394, file: !7394, line: 26, type: !3155, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2864, retainedNodes: !7395)
!7394 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7395 = !{!7396}
!7396 = !DILocalVariable(name: "irq", scope: !7393, file: !7394, line: 28, type: !109)
!7397 = !DILocation(line: 0, scope: !7393)
!7398 = !DILocation(line: 30, column: 2, scope: !7399)
!7399 = distinct !DILexicalBlock(scope: !7393, file: !7394, line: 30, column: 2)
!7400 = !DILocation(line: 31, column: 3, scope: !7401)
!7401 = distinct !DILexicalBlock(scope: !7402, file: !7394, line: 30, column: 39)
!7402 = distinct !DILexicalBlock(scope: !7399, file: !7394, line: 30, column: 2)
!7403 = !DILocation(line: 30, column: 35, scope: !7402)
!7404 = !DILocation(line: 30, column: 13, scope: !7402)
!7405 = distinct !{!7405, !7398, !7406}
!7406 = !DILocation(line: 32, column: 2, scope: !7399)
!7407 = !DILocation(line: 33, column: 1, scope: !7393)
!7408 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !535, file: !535, line: 1814, type: !6526, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2864, retainedNodes: !7409)
!7409 = !{!7410, !7411}
!7410 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7408, file: !535, line: 1814, type: !800)
!7411 = !DILocalVariable(name: "priority", arg: 2, scope: !7408, file: !535, line: 1814, type: !110)
!7412 = !DILocation(line: 0, scope: !7408)
!7413 = !DILocation(line: 1816, column: 7, scope: !7408)
!7414 = !DILocation(line: 0, scope: !7415)
!7415 = distinct !DILexicalBlock(scope: !7408, file: !535, line: 1816, column: 7)
!7416 = !DILocation(line: 1824, column: 1, scope: !7408)
!7417 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !7418, file: !7418, line: 27, type: !7419, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2909, retainedNodes: !7525)
!7418 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7419 = !DISubroutineType(types: !7420)
!7420 = !{null, !7421}
!7421 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !156, line: 347, baseType: !7422)
!7422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7423, size: 32)
!7423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1280, elements: !7424)
!7424 = !{!7425, !7483, !7495, !7496, !7497, !7498, !7499, !7505, !7520}
!7425 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7423, file: !156, line: 247, baseType: !7426, size: 384)
!7426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 384, elements: !7427)
!7427 = !{!7428, !7452, !7459, !7460, !7461, !7470, !7471, !7472}
!7428 = !DIDerivedType(tag: DW_TAG_member, scope: !7426, file: !156, line: 60, baseType: !7429, size: 64)
!7429 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7426, file: !156, line: 60, size: 64, elements: !7430)
!7430 = !{!7431, !7446}
!7431 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7429, file: !156, line: 61, baseType: !7432, size: 64)
!7432 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !7433)
!7433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !7434)
!7434 = !{!7435, !7441}
!7435 = !DIDerivedType(tag: DW_TAG_member, scope: !7433, file: !127, line: 38, baseType: !7436, size: 32)
!7436 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7433, file: !127, line: 38, size: 32, elements: !7437)
!7437 = !{!7438, !7440}
!7438 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7436, file: !127, line: 39, baseType: !7439, size: 32)
!7439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7433, size: 32)
!7440 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7436, file: !127, line: 40, baseType: !7439, size: 32)
!7441 = !DIDerivedType(tag: DW_TAG_member, scope: !7433, file: !127, line: 42, baseType: !7442, size: 32, offset: 32)
!7442 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7433, file: !127, line: 42, size: 32, elements: !7443)
!7443 = !{!7444, !7445}
!7444 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7442, file: !127, line: 43, baseType: !7439, size: 32)
!7445 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7442, file: !127, line: 44, baseType: !7439, size: 32)
!7446 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7429, file: !156, line: 62, baseType: !7447, size: 64)
!7447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !7448)
!7448 = !{!7449}
!7449 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7447, file: !168, line: 50, baseType: !7450, size: 64)
!7450 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7451, size: 64, elements: !173)
!7451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7447, size: 32)
!7452 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7426, file: !156, line: 68, baseType: !7453, size: 32, offset: 64)
!7453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7454, size: 32)
!7454 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !7455)
!7455 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !7456)
!7456 = !{!7457}
!7457 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7455, file: !122, line: 232, baseType: !7458, size: 64)
!7458 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !7433)
!7459 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7426, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!7460 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7426, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!7461 = !DIDerivedType(tag: DW_TAG_member, scope: !7426, file: !156, line: 90, baseType: !7462, size: 16, offset: 112)
!7462 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7426, file: !156, line: 90, size: 16, elements: !7463)
!7463 = !{!7464, !7469}
!7464 = !DIDerivedType(tag: DW_TAG_member, scope: !7462, file: !156, line: 91, baseType: !7465, size: 16)
!7465 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7462, file: !156, line: 91, size: 16, elements: !7466)
!7466 = !{!7467, !7468}
!7467 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7465, file: !156, line: 96, baseType: !188, size: 8)
!7468 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7465, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!7469 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7462, file: !156, line: 100, baseType: !192, size: 16)
!7470 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7426, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!7471 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7426, file: !156, line: 127, baseType: !107, size: 32, offset: 160)
!7472 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7426, file: !156, line: 131, baseType: !7473, size: 192, offset: 192)
!7473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !7474)
!7474 = !{!7475, !7476, !7482}
!7475 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7473, file: !122, line: 245, baseType: !7432, size: 64)
!7476 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7473, file: !122, line: 246, baseType: !7477, size: 32, offset: 64)
!7477 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !7478)
!7478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7479, size: 32)
!7479 = !DISubroutineType(types: !7480)
!7480 = !{null, !7481}
!7481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7473, size: 32)
!7482 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7473, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!7483 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7423, file: !156, line: 250, baseType: !7484, size: 288, offset: 384)
!7484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !7485)
!7485 = !{!7486, !7487, !7488, !7489, !7490, !7491, !7492, !7493, !7494}
!7486 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7484, file: !209, line: 26, baseType: !110, size: 32)
!7487 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7484, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!7488 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7484, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!7489 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7484, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!7490 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7484, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!7491 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7484, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!7492 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7484, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!7493 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7484, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!7494 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7484, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!7495 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7423, file: !156, line: 253, baseType: !107, size: 32, offset: 672)
!7496 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7423, file: !156, line: 256, baseType: !7454, size: 64, offset: 704)
!7497 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7423, file: !156, line: 279, baseType: !223, size: 256, offset: 768)
!7498 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7423, file: !156, line: 294, baseType: !109, size: 32, offset: 1024)
!7499 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7423, file: !156, line: 300, baseType: !7500, size: 96, offset: 1056)
!7500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !7501)
!7501 = !{!7502, !7503, !7504}
!7502 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7500, file: !156, line: 153, baseType: !22, size: 32)
!7503 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7500, file: !156, line: 162, baseType: !232, size: 32, offset: 32)
!7504 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7500, file: !156, line: 168, baseType: !232, size: 32, offset: 64)
!7505 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7423, file: !156, line: 325, baseType: !7506, size: 32, offset: 1152)
!7506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7507, size: 32)
!7507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !7508)
!7508 = !{!7509, !7515, !7516}
!7509 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7507, file: !118, line: 5074, baseType: !7510, size: 96)
!7510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !241, line: 56, size: 96, elements: !7511)
!7511 = !{!7512, !7513, !7514}
!7512 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7510, file: !241, line: 57, baseType: !244, size: 32)
!7513 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7510, file: !241, line: 58, baseType: !107, size: 32, offset: 32)
!7514 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7510, file: !241, line: 59, baseType: !232, size: 32, offset: 64)
!7515 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7507, file: !118, line: 5075, baseType: !7454, size: 64, offset: 96)
!7516 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7507, file: !118, line: 5076, baseType: !7517, size: 32, offset: 160)
!7517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !7518)
!7518 = !{!7519}
!7519 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !7517, file: !251, line: 52, baseType: !22, size: 32)
!7520 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7423, file: !156, line: 343, baseType: !7521, size: 64, offset: 1184)
!7521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !209, line: 60, size: 64, elements: !7522)
!7522 = !{!7523, !7524}
!7523 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7521, file: !209, line: 63, baseType: !110, size: 32)
!7524 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7521, file: !209, line: 66, baseType: !110, size: 32, offset: 32)
!7525 = !{!7526}
!7526 = !DILocalVariable(name: "thread", arg: 1, scope: !7417, file: !7418, line: 27, type: !7421)
!7527 = !DILocation(line: 0, scope: !7417)
!7528 = !DILocation(line: 29, column: 6, scope: !7529)
!7529 = distinct !DILexicalBlock(scope: !7417, file: !7418, line: 29, column: 6)
!7530 = !DILocation(line: 29, column: 15, scope: !7529)
!7531 = !DILocation(line: 29, column: 6, scope: !7417)
!7532 = !DILocation(line: 1031, column: 3, scope: !7533, inlinedAt: !7536)
!7533 = distinct !DISubprogram(name: "__get_IPSR", scope: !6486, file: !6486, line: 1027, type: !6573, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2909, retainedNodes: !7534)
!7534 = !{!7535}
!7535 = !DILocalVariable(name: "result", scope: !7533, file: !6486, line: 1029, type: !110)
!7536 = distinct !DILocation(line: 48, column: 10, scope: !7537, inlinedAt: !7541)
!7537 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7538, file: !7538, line: 46, type: !7539, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2909, retainedNodes: !2106)
!7538 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7539 = !DISubroutineType(types: !7540)
!7540 = !{!347}
!7541 = distinct !DILocation(line: 30, column: 7, scope: !7542)
!7542 = distinct !DILexicalBlock(scope: !7543, file: !7418, line: 30, column: 7)
!7543 = distinct !DILexicalBlock(scope: !7529, file: !7418, line: 29, column: 26)
!7544 = !{i64 3727068}
!7545 = !DILocation(line: 0, scope: !7533, inlinedAt: !7536)
!7546 = !DILocation(line: 48, column: 9, scope: !7537, inlinedAt: !7541)
!7547 = !DILocation(line: 30, column: 7, scope: !7543)
!7548 = !DILocation(line: 42, column: 14, scope: !7549)
!7549 = distinct !DILexicalBlock(scope: !7542, file: !7418, line: 30, column: 25)
!7550 = !DILocation(line: 48, column: 15, scope: !7549)
!7551 = !DILocation(line: 49, column: 3, scope: !7549)
!7552 = !DILocation(line: 52, column: 2, scope: !7417)
!7553 = !DILocation(line: 53, column: 1, scope: !7417)
!7554 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !394, file: !394, line: 127, type: !3155, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !2106)
!7555 = !DILocation(line: 134, column: 2, scope: !7554)
!7556 = !DILocation(line: 156, column: 1, scope: !7554)
!7557 = !DILocation(line: 0, scope: !393)
!7558 = !DILocation(line: 289, column: 36, scope: !7559)
!7559 = distinct !DILexicalBlock(scope: !393, file: !394, line: 285, column: 2)
!7560 = !DILocation(line: 289, column: 42, scope: !7559)
!7561 = !DILocation(line: 300, column: 36, scope: !393)
!7562 = !DILocation(line: 301, column: 35, scope: !393)
!7563 = !DILocation(line: 302, column: 37, scope: !393)
!7564 = !DILocation(line: 311, column: 2, scope: !393)
!7565 = !DILocation(line: 316, column: 1, scope: !393)
!7566 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !563, file: !563, line: 180, type: !3155, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !2106)
!7567 = !DILocation(line: 188, column: 12, scope: !7566)
!7568 = !DILocation(line: 271, column: 3, scope: !7569, inlinedAt: !7570)
!7569 = distinct !DISubprogram(name: "__DSB", scope: !6486, file: !6486, line: 269, type: !3155, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !2106)
!7570 = distinct !DILocation(line: 192, column: 2, scope: !7566)
!7571 = !{i64 3917958}
!7572 = !DILocation(line: 260, column: 3, scope: !7573, inlinedAt: !7574)
!7573 = distinct !DISubprogram(name: "__ISB", scope: !6486, file: !6486, line: 258, type: !3155, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !2106)
!7574 = distinct !DILocation(line: 193, column: 2, scope: !7566)
!7575 = !{i64 3917675}
!7576 = !DILocation(line: 194, column: 1, scope: !7566)
!7577 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !563, file: !563, line: 199, type: !3155, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !2106)
!7578 = !DILocation(line: 282, column: 3, scope: !7579, inlinedAt: !7580)
!7579 = distinct !DISubprogram(name: "__DMB", scope: !6486, file: !6486, line: 280, type: !3155, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !2106)
!7580 = distinct !DILocation(line: 202, column: 2, scope: !7577)
!7581 = !{i64 3918234}
!7582 = !DILocation(line: 205, column: 12, scope: !7577)
!7583 = !DILocation(line: 206, column: 1, scope: !7577)
!7584 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !563, file: !563, line: 275, type: !7585, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7598)
!7585 = !DISubroutineType(types: !7586)
!7586 = !{null, !7587, !1888, !6763, !6763}
!7587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7588, size: 32)
!7588 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7589)
!7589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !507, line: 52, size: 96, elements: !7590)
!7590 = !{!7591, !7592, !7593}
!7591 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7589, file: !507, line: 53, baseType: !22, size: 32)
!7592 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7589, file: !507, line: 54, baseType: !232, size: 32, offset: 32)
!7593 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7589, file: !507, line: 55, baseType: !7594, size: 32, offset: 64)
!7594 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !513, line: 151, baseType: !7595)
!7595 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !513, line: 149, size: 32, elements: !7596)
!7596 = !{!7597}
!7597 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !7595, file: !513, line: 150, baseType: !110, size: 32)
!7598 = !{!7599, !7600, !7601, !7602}
!7599 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7584, file: !563, line: 276, type: !7587)
!7600 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7584, file: !563, line: 276, type: !1888)
!7601 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !7584, file: !563, line: 277, type: !6763)
!7602 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7584, file: !563, line: 277, type: !6763)
!7603 = !DILocation(line: 0, scope: !7584)
!7604 = !DILocation(line: 279, column: 6, scope: !7605)
!7605 = distinct !DILexicalBlock(scope: !7584, file: !563, line: 279, column: 6)
!7606 = !DILocation(line: 280, column: 57, scope: !7605)
!7607 = !DILocation(line: 279, column: 6, scope: !7584)
!7608 = !DILocation(line: 282, column: 3, scope: !7609)
!7609 = distinct !DILexicalBlock(scope: !7610, file: !563, line: 282, column: 3)
!7610 = distinct !DILexicalBlock(scope: !7611, file: !563, line: 282, column: 3)
!7611 = distinct !DILexicalBlock(scope: !7612, file: !563, line: 282, column: 3)
!7612 = distinct !DILexicalBlock(scope: !7605, file: !563, line: 280, column: 69)
!7613 = !DILocation(line: 285, column: 1, scope: !7584)
!7614 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !7615, file: !7615, line: 220, type: !7616, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7618)
!7615 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7616 = !DISubroutineType(types: !7617)
!7617 = !{!109, !7587, !1888, !6763, !6763}
!7618 = !{!7619, !7620, !7621, !7622, !7623}
!7619 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7614, file: !7615, line: 221, type: !7587)
!7620 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7614, file: !7615, line: 221, type: !1888)
!7621 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !7614, file: !7615, line: 222, type: !6763)
!7622 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7614, file: !7615, line: 223, type: !6763)
!7623 = !DILocalVariable(name: "mpu_reg_index", scope: !7614, file: !7615, line: 225, type: !109)
!7624 = !DILocation(line: 0, scope: !7614)
!7625 = !DILocation(line: 225, column: 22, scope: !7614)
!7626 = !DILocation(line: 233, column: 18, scope: !7614)
!7627 = !DILocation(line: 236, column: 23, scope: !7614)
!7628 = !DILocation(line: 236, column: 21, scope: !7614)
!7629 = !DILocation(line: 238, column: 2, scope: !7614)
!7630 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !563, file: !563, line: 105, type: !7631, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7633)
!7631 = !DISubroutineType(types: !7632)
!7632 = !{!109, !7587, !178, !178, !347}
!7633 = !{!7634, !7635, !7636, !7637, !7638, !7639}
!7634 = !DILocalVariable(name: "regions", arg: 1, scope: !7630, file: !563, line: 106, type: !7587)
!7635 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7630, file: !563, line: 106, type: !178)
!7636 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !7630, file: !563, line: 106, type: !178)
!7637 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !7630, file: !563, line: 107, type: !347)
!7638 = !DILocalVariable(name: "i", scope: !7630, file: !563, line: 109, type: !109)
!7639 = !DILocalVariable(name: "reg_index", scope: !7630, file: !563, line: 110, type: !109)
!7640 = !DILocation(line: 0, scope: !7630)
!7641 = !DILocation(line: 110, column: 18, scope: !7630)
!7642 = !DILocation(line: 112, column: 16, scope: !7643)
!7643 = distinct !DILexicalBlock(scope: !7644, file: !563, line: 112, column: 2)
!7644 = distinct !DILexicalBlock(scope: !7630, file: !563, line: 112, column: 2)
!7645 = !DILocation(line: 112, column: 2, scope: !7644)
!7646 = !DILocation(line: 113, column: 7, scope: !7647)
!7647 = distinct !DILexicalBlock(scope: !7648, file: !563, line: 113, column: 7)
!7648 = distinct !DILexicalBlock(scope: !7643, file: !563, line: 112, column: 36)
!7649 = !DILocation(line: 113, column: 18, scope: !7647)
!7650 = !DILocation(line: 113, column: 23, scope: !7647)
!7651 = !DILocation(line: 113, column: 7, scope: !7648)
!7652 = !DILocation(line: 118, column: 23, scope: !7653)
!7653 = distinct !DILexicalBlock(scope: !7648, file: !563, line: 118, column: 7)
!7654 = !DILocation(line: 119, column: 7, scope: !7653)
!7655 = !DILocation(line: 118, column: 7, scope: !7648)
!7656 = !DILocation(line: 120, column: 4, scope: !7657)
!7657 = distinct !DILexicalBlock(scope: !7658, file: !563, line: 120, column: 4)
!7658 = distinct !DILexicalBlock(scope: !7659, file: !563, line: 120, column: 4)
!7659 = distinct !DILexicalBlock(scope: !7660, file: !563, line: 120, column: 4)
!7660 = distinct !DILexicalBlock(scope: !7661, file: !563, line: 120, column: 4)
!7661 = distinct !DILexicalBlock(scope: !7653, file: !563, line: 119, column: 45)
!7662 = !DILocation(line: 121, column: 4, scope: !7661)
!7663 = !DILocation(line: 124, column: 36, scope: !7648)
!7664 = !DILocation(line: 124, column: 15, scope: !7648)
!7665 = !DILocation(line: 126, column: 17, scope: !7666)
!7666 = distinct !DILexicalBlock(scope: !7648, file: !563, line: 126, column: 7)
!7667 = !DILocation(line: 126, column: 7, scope: !7648)
!7668 = !DILocation(line: 131, column: 12, scope: !7648)
!7669 = !DILocation(line: 132, column: 2, scope: !7648)
!7670 = !DILocation(line: 112, column: 32, scope: !7643)
!7671 = distinct !{!7671, !7645, !7672}
!7672 = !DILocation(line: 132, column: 2, scope: !7644)
!7673 = !DILocation(line: 135, column: 1, scope: !7630)
!7674 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !7615, file: !7615, line: 63, type: !7675, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7677)
!7675 = !DISubroutineType(types: !7676)
!7676 = !{!109, !7587}
!7677 = !{!7678, !7679}
!7678 = !DILocalVariable(name: "part", arg: 1, scope: !7674, file: !7615, line: 63, type: !7587)
!7679 = !DILocalVariable(name: "partition_is_valid", scope: !7674, file: !7615, line: 70, type: !109)
!7680 = !DILocation(line: 0, scope: !7674)
!7681 = !DILocation(line: 71, column: 11, scope: !7674)
!7682 = !DILocation(line: 71, column: 37, scope: !7674)
!7683 = !{i32 0, i32 33}
!7684 = !DILocation(line: 72, column: 3, scope: !7674)
!7685 = !DILocation(line: 71, column: 30, scope: !7674)
!7686 = !DILocation(line: 75, column: 11, scope: !7674)
!7687 = !DILocation(line: 75, column: 17, scope: !7674)
!7688 = !DILocation(line: 75, column: 38, scope: !7674)
!7689 = !DILocation(line: 77, column: 2, scope: !7674)
!7690 = distinct !DISubprogram(name: "mpu_configure_region", scope: !563, file: !563, line: 79, type: !7691, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7693)
!7691 = !DISubroutineType(types: !7692)
!7692 = !{!109, !1888, !7587}
!7693 = !{!7694, !7695, !7696}
!7694 = !DILocalVariable(name: "index", arg: 1, scope: !7690, file: !563, line: 79, type: !1888)
!7695 = !DILocalVariable(name: "new_region", arg: 2, scope: !7690, file: !563, line: 80, type: !7587)
!7696 = !DILocalVariable(name: "region_conf", scope: !7690, file: !563, line: 82, type: !552)
!7697 = !DILocation(line: 0, scope: !7690)
!7698 = !DILocation(line: 82, column: 2, scope: !7690)
!7699 = !DILocation(line: 82, column: 24, scope: !7690)
!7700 = !DILocation(line: 87, column: 33, scope: !7690)
!7701 = !DILocation(line: 87, column: 14, scope: !7690)
!7702 = !DILocation(line: 87, column: 19, scope: !7690)
!7703 = !DILocation(line: 91, column: 55, scope: !7690)
!7704 = !DILocation(line: 92, column: 16, scope: !7690)
!7705 = !DILocation(line: 92, column: 53, scope: !7690)
!7706 = !DILocation(line: 91, column: 2, scope: !7690)
!7707 = !DILocation(line: 95, column: 9, scope: !7690)
!7708 = !DILocation(line: 97, column: 1, scope: !7690)
!7709 = !DILocation(line: 95, column: 2, scope: !7690)
!7710 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !7615, file: !7615, line: 113, type: !7711, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7716)
!7711 = !DISubroutineType(types: !7712)
!7712 = !{null, !7713, !7714, !110, !110}
!7713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !558, size: 32)
!7714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7715, size: 32)
!7715 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7594)
!7716 = !{!7717, !7718, !7719, !7720}
!7717 = !DILocalVariable(name: "p_attr", arg: 1, scope: !7710, file: !7615, line: 114, type: !7713)
!7718 = !DILocalVariable(name: "attr", arg: 2, scope: !7710, file: !7615, line: 115, type: !7714)
!7719 = !DILocalVariable(name: "base", arg: 3, scope: !7710, file: !7615, line: 115, type: !110)
!7720 = !DILocalVariable(name: "size", arg: 4, scope: !7710, file: !7615, line: 115, type: !110)
!7721 = !DILocation(line: 0, scope: !7710)
!7722 = !DILocation(line: 127, column: 23, scope: !7710)
!7723 = !DILocation(line: 127, column: 35, scope: !7710)
!7724 = !DILocation(line: 127, column: 33, scope: !7710)
!7725 = !DILocation(line: 127, column: 10, scope: !7710)
!7726 = !DILocation(line: 127, column: 15, scope: !7710)
!7727 = !DILocation(line: 129, column: 1, scope: !7710)
!7728 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !563, file: !563, line: 57, type: !7729, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7731)
!7729 = !DISubroutineType(types: !7730)
!7730 = !{!109, !1888, !550}
!7731 = !{!7732, !7733}
!7732 = !DILocalVariable(name: "index", arg: 1, scope: !7728, file: !563, line: 57, type: !1888)
!7733 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7728, file: !563, line: 58, type: !550)
!7734 = !DILocation(line: 0, scope: !7728)
!7735 = !DILocation(line: 61, column: 6, scope: !7736)
!7736 = distinct !DILexicalBlock(scope: !7728, file: !563, line: 61, column: 6)
!7737 = !DILocation(line: 61, column: 12, scope: !7736)
!7738 = !DILocation(line: 61, column: 6, scope: !7728)
!7739 = !DILocation(line: 64, column: 3, scope: !7740)
!7740 = distinct !DILexicalBlock(scope: !7741, file: !563, line: 64, column: 3)
!7741 = distinct !DILexicalBlock(scope: !7742, file: !563, line: 64, column: 3)
!7742 = distinct !DILexicalBlock(scope: !7743, file: !563, line: 64, column: 3)
!7743 = distinct !DILexicalBlock(scope: !7744, file: !563, line: 64, column: 3)
!7744 = distinct !DILexicalBlock(scope: !7736, file: !563, line: 61, column: 40)
!7745 = !DILocation(line: 65, column: 3, scope: !7744)
!7746 = !DILocation(line: 71, column: 2, scope: !7728)
!7747 = !DILocation(line: 73, column: 2, scope: !7728)
!7748 = !DILocation(line: 74, column: 1, scope: !7728)
!7749 = distinct !DISubprogram(name: "region_init", scope: !7615, file: !7615, line: 29, type: !7750, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7752)
!7750 = !DISubroutineType(types: !7751)
!7751 = !{null, !6763, !550}
!7752 = !{!7753, !7754}
!7753 = !DILocalVariable(name: "index", arg: 1, scope: !7749, file: !7615, line: 29, type: !6763)
!7754 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7749, file: !7615, line: 30, type: !550)
!7755 = !DILocation(line: 0, scope: !7749)
!7756 = !DILocation(line: 33, column: 2, scope: !7749)
!7757 = !DILocation(line: 47, column: 28, scope: !7749)
!7758 = !DILocation(line: 47, column: 33, scope: !7749)
!7759 = !DILocation(line: 48, column: 26, scope: !7749)
!7760 = !DILocation(line: 47, column: 12, scope: !7749)
!7761 = !DILocation(line: 49, column: 32, scope: !7749)
!7762 = !DILocation(line: 49, column: 37, scope: !7749)
!7763 = !DILocation(line: 49, column: 12, scope: !7749)
!7764 = !DILocation(line: 53, column: 1, scope: !7749)
!7765 = distinct !DISubprogram(name: "set_region_number", scope: !7766, file: !7766, line: 32, type: !6583, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7767)
!7766 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7767 = !{!7768}
!7768 = !DILocalVariable(name: "index", arg: 1, scope: !7765, file: !7766, line: 32, type: !110)
!7769 = !DILocation(line: 0, scope: !7765)
!7770 = !DILocation(line: 34, column: 11, scope: !7765)
!7771 = !DILocation(line: 35, column: 1, scope: !7765)
!7772 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !7615, file: !7615, line: 88, type: !7773, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7775)
!7773 = !DISubroutineType(types: !7774)
!7774 = !{!110, !110}
!7775 = !{!7776}
!7776 = !DILocalVariable(name: "size", arg: 1, scope: !7772, file: !7615, line: 88, type: !110)
!7777 = !DILocation(line: 0, scope: !7772)
!7778 = !DILocation(line: 91, column: 11, scope: !7779)
!7779 = distinct !DILexicalBlock(scope: !7772, file: !7615, line: 91, column: 6)
!7780 = !DILocation(line: 91, column: 6, scope: !7772)
!7781 = !DILocation(line: 100, column: 11, scope: !7782)
!7782 = distinct !DILexicalBlock(scope: !7772, file: !7615, line: 100, column: 6)
!7783 = !DILocation(line: 100, column: 6, scope: !7772)
!7784 = !DILocation(line: 104, column: 35, scope: !7772)
!7785 = !DILocation(line: 104, column: 16, scope: !7772)
!7786 = !DILocation(line: 104, column: 50, scope: !7772)
!7787 = !DILocation(line: 104, column: 72, scope: !7772)
!7788 = !DILocation(line: 104, column: 2, scope: !7772)
!7789 = !DILocation(line: 106, column: 1, scope: !7772)
!7790 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !563, file: !563, line: 307, type: !7791, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7793)
!7791 = !DISubroutineType(types: !7792)
!7792 = !{null, !7587, !178}
!7793 = !{!7794, !7795}
!7794 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7790, file: !563, line: 308, type: !7587)
!7795 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7790, file: !563, line: 308, type: !178)
!7796 = !DILocation(line: 0, scope: !7790)
!7797 = !DILocation(line: 310, column: 6, scope: !7798)
!7798 = distinct !DILexicalBlock(scope: !7790, file: !563, line: 310, column: 6)
!7799 = !DILocation(line: 311, column: 3, scope: !7798)
!7800 = !DILocation(line: 310, column: 6, scope: !7790)
!7801 = !DILocation(line: 313, column: 3, scope: !7802)
!7802 = distinct !DILexicalBlock(scope: !7803, file: !563, line: 313, column: 3)
!7803 = distinct !DILexicalBlock(scope: !7804, file: !563, line: 313, column: 3)
!7804 = distinct !DILexicalBlock(scope: !7805, file: !563, line: 313, column: 3)
!7805 = distinct !DILexicalBlock(scope: !7798, file: !563, line: 311, column: 15)
!7806 = !DILocation(line: 316, column: 1, scope: !7790)
!7807 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !7615, file: !7615, line: 249, type: !7808, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7810)
!7808 = !DISubroutineType(types: !7809)
!7809 = !{!109, !7587, !178}
!7810 = !{!7811, !7812, !7813, !7814}
!7811 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7807, file: !7615, line: 250, type: !7587)
!7812 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7807, file: !7615, line: 250, type: !178)
!7813 = !DILocalVariable(name: "mpu_reg_index", scope: !7807, file: !7615, line: 252, type: !109)
!7814 = !DILocalVariable(name: "i", scope: !7815, file: !7615, line: 264, type: !109)
!7815 = distinct !DILexicalBlock(scope: !7816, file: !7615, line: 264, column: 3)
!7816 = distinct !DILexicalBlock(scope: !7817, file: !7615, line: 261, column: 32)
!7817 = distinct !DILexicalBlock(scope: !7807, file: !7615, line: 261, column: 6)
!7818 = !DILocation(line: 0, scope: !7807)
!7819 = !DILocation(line: 252, column: 22, scope: !7807)
!7820 = !DILocation(line: 258, column: 18, scope: !7807)
!7821 = !DILocation(line: 261, column: 20, scope: !7817)
!7822 = !DILocation(line: 261, column: 6, scope: !7807)
!7823 = !DILocation(line: 0, scope: !7815)
!7824 = !DILocation(line: 265, column: 4, scope: !7825)
!7825 = distinct !DILexicalBlock(scope: !7826, file: !7615, line: 264, column: 59)
!7826 = distinct !DILexicalBlock(scope: !7815, file: !7615, line: 264, column: 3)
!7827 = !DILocation(line: 264, column: 55, scope: !7826)
!7828 = !DILocation(line: 264, column: 33, scope: !7826)
!7829 = !DILocation(line: 264, column: 3, scope: !7815)
!7830 = distinct !{!7830, !7829, !7831}
!7831 = !DILocation(line: 266, column: 3, scope: !7815)
!7832 = !DILocation(line: 269, column: 2, scope: !7807)
!7833 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7834, file: !7834, line: 218, type: !6583, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7835)
!7834 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7835 = !{!7836}
!7836 = !DILocalVariable(name: "rnr", arg: 1, scope: !7833, file: !7834, line: 218, type: !110)
!7837 = !DILocation(line: 0, scope: !7833)
!7838 = !DILocation(line: 220, column: 12, scope: !7833)
!7839 = !DILocation(line: 221, column: 13, scope: !7833)
!7840 = !DILocation(line: 222, column: 1, scope: !7833)
!7841 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !563, file: !563, line: 326, type: !7842, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7844)
!7842 = !DISubroutineType(types: !7843)
!7843 = !{!109}
!7844 = !{!7845}
!7845 = !DILocalVariable(name: "r_index", scope: !7841, file: !563, line: 328, type: !110)
!7846 = !DILocation(line: 330, column: 17, scope: !7847)
!7847 = distinct !DILexicalBlock(scope: !7841, file: !563, line: 330, column: 6)
!7848 = !DILocation(line: 330, column: 29, scope: !7847)
!7849 = !DILocation(line: 330, column: 6, scope: !7841)
!7850 = !DILocation(line: 337, column: 3, scope: !7851)
!7851 = distinct !DILexicalBlock(scope: !7852, file: !563, line: 337, column: 3)
!7852 = distinct !DILexicalBlock(scope: !7853, file: !563, line: 337, column: 3)
!7853 = distinct !DILexicalBlock(scope: !7854, file: !563, line: 337, column: 3)
!7854 = distinct !DILexicalBlock(scope: !7847, file: !563, line: 330, column: 50)
!7855 = !DILocation(line: 347, column: 2, scope: !7841)
!7856 = !DILocation(line: 0, scope: !7841)
!7857 = !DILocation(line: 364, column: 29, scope: !7858)
!7858 = distinct !DILexicalBlock(scope: !7859, file: !563, line: 364, column: 2)
!7859 = distinct !DILexicalBlock(scope: !7841, file: !563, line: 364, column: 2)
!7860 = !DILocation(line: 364, column: 2, scope: !7859)
!7861 = !DILocation(line: 365, column: 25, scope: !7862)
!7862 = distinct !DILexicalBlock(scope: !7858, file: !563, line: 364, column: 66)
!7863 = !DILocation(line: 365, column: 3, scope: !7862)
!7864 = !DILocation(line: 364, column: 62, scope: !7858)
!7865 = distinct !{!7865, !7860, !7866}
!7866 = !DILocation(line: 366, column: 2, scope: !7859)
!7867 = !DILocation(line: 369, column: 23, scope: !7841)
!7868 = !DILocation(line: 369, column: 21, scope: !7841)
!7869 = !DILocation(line: 372, column: 2, scope: !7841)
!7870 = !DILocation(line: 433, column: 2, scope: !7871)
!7871 = distinct !DILexicalBlock(scope: !7872, file: !563, line: 433, column: 2)
!7872 = distinct !DILexicalBlock(scope: !7841, file: !563, line: 433, column: 2)
!7873 = !DILocation(line: 433, column: 2, scope: !7872)
!7874 = !DILocation(line: 433, column: 2, scope: !7875)
!7875 = distinct !DILexicalBlock(scope: !7871, file: !563, line: 433, column: 2)
!7876 = !DILocation(line: 444, column: 1, scope: !7841)
!7877 = distinct !DISubprogram(name: "strcpy", scope: !7878, file: !7878, line: 20, type: !7879, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2937, retainedNodes: !7883)
!7878 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7879 = !DISubroutineType(types: !7880)
!7880 = !{!285, !7881, !7882}
!7881 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !285)
!7882 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !279)
!7883 = !{!7884, !7885, !7886}
!7884 = !DILocalVariable(name: "d", arg: 1, scope: !7877, file: !7878, line: 20, type: !7881)
!7885 = !DILocalVariable(name: "s", arg: 2, scope: !7877, file: !7878, line: 20, type: !7882)
!7886 = !DILocalVariable(name: "dest", scope: !7877, file: !7878, line: 22, type: !285)
!7887 = !DILocation(line: 0, scope: !7877)
!7888 = !DILocation(line: 24, column: 9, scope: !7877)
!7889 = !DILocation(line: 24, column: 12, scope: !7877)
!7890 = !DILocation(line: 24, column: 2, scope: !7877)
!7891 = !DILocation(line: 25, column: 6, scope: !7892)
!7892 = distinct !DILexicalBlock(scope: !7877, file: !7878, line: 24, column: 21)
!7893 = !DILocation(line: 26, column: 4, scope: !7892)
!7894 = !DILocation(line: 27, column: 4, scope: !7892)
!7895 = distinct !{!7895, !7890, !7896}
!7896 = !DILocation(line: 28, column: 2, scope: !7877)
!7897 = !DILocation(line: 30, column: 5, scope: !7877)
!7898 = !DILocation(line: 32, column: 2, scope: !7877)
!7899 = distinct !DISubprogram(name: "strncpy", scope: !7878, file: !7878, line: 42, type: !7900, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2937, retainedNodes: !7902)
!7900 = !DISubroutineType(types: !7901)
!7901 = !{!285, !7881, !7882, !232}
!7902 = !{!7903, !7904, !7905, !7906}
!7903 = !DILocalVariable(name: "d", arg: 1, scope: !7899, file: !7878, line: 42, type: !7881)
!7904 = !DILocalVariable(name: "s", arg: 2, scope: !7899, file: !7878, line: 42, type: !7882)
!7905 = !DILocalVariable(name: "n", arg: 3, scope: !7899, file: !7878, line: 42, type: !232)
!7906 = !DILocalVariable(name: "dest", scope: !7899, file: !7878, line: 44, type: !285)
!7907 = !DILocation(line: 0, scope: !7899)
!7908 = !DILocation(line: 46, column: 12, scope: !7899)
!7909 = !DILocation(line: 46, column: 17, scope: !7899)
!7910 = !DILocation(line: 46, column: 20, scope: !7899)
!7911 = !DILocation(line: 46, column: 23, scope: !7899)
!7912 = !DILocation(line: 46, column: 2, scope: !7899)
!7913 = !DILocation(line: 47, column: 6, scope: !7914)
!7914 = distinct !DILexicalBlock(scope: !7899, file: !7878, line: 46, column: 32)
!7915 = !DILocation(line: 48, column: 4, scope: !7914)
!7916 = !DILocation(line: 49, column: 4, scope: !7914)
!7917 = !DILocation(line: 50, column: 4, scope: !7914)
!7918 = distinct !{!7918, !7912, !7919}
!7919 = !DILocation(line: 51, column: 2, scope: !7899)
!7920 = !DILocation(line: 54, column: 6, scope: !7921)
!7921 = distinct !DILexicalBlock(scope: !7899, file: !7878, line: 53, column: 16)
!7922 = !DILocation(line: 55, column: 4, scope: !7921)
!7923 = !DILocation(line: 56, column: 4, scope: !7921)
!7924 = !DILocation(line: 53, column: 11, scope: !7899)
!7925 = !DILocation(line: 53, column: 2, scope: !7899)
!7926 = distinct !{!7926, !7925, !7927}
!7927 = !DILocation(line: 57, column: 2, scope: !7899)
!7928 = !DILocation(line: 59, column: 2, scope: !7899)
!7929 = distinct !DISubprogram(name: "strchr", scope: !7878, file: !7878, line: 69, type: !7930, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2937, retainedNodes: !7932)
!7930 = !DISubroutineType(types: !7931)
!7931 = !{!285, !279, !109}
!7932 = !{!7933, !7934, !7935}
!7933 = !DILocalVariable(name: "s", arg: 1, scope: !7929, file: !7878, line: 69, type: !279)
!7934 = !DILocalVariable(name: "c", arg: 2, scope: !7929, file: !7878, line: 69, type: !109)
!7935 = !DILocalVariable(name: "tmp", scope: !7929, file: !7878, line: 71, type: !148)
!7936 = !DILocation(line: 0, scope: !7929)
!7937 = !DILocation(line: 73, column: 2, scope: !7929)
!7938 = !DILocation(line: 73, column: 10, scope: !7929)
!7939 = !DILocation(line: 73, column: 13, scope: !7929)
!7940 = !DILocation(line: 73, column: 21, scope: !7929)
!7941 = !DILocation(line: 74, column: 4, scope: !7942)
!7942 = distinct !DILexicalBlock(scope: !7929, file: !7878, line: 73, column: 38)
!7943 = distinct !{!7943, !7937, !7944}
!7944 = !DILocation(line: 75, column: 2, scope: !7929)
!7945 = !DILocation(line: 77, column: 9, scope: !7929)
!7946 = !DILocation(line: 77, column: 2, scope: !7929)
!7947 = distinct !DISubprogram(name: "strrchr", scope: !7878, file: !7878, line: 87, type: !7930, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2937, retainedNodes: !7948)
!7948 = !{!7949, !7950, !7951}
!7949 = !DILocalVariable(name: "s", arg: 1, scope: !7947, file: !7878, line: 87, type: !279)
!7950 = !DILocalVariable(name: "c", arg: 2, scope: !7947, file: !7878, line: 87, type: !109)
!7951 = !DILocalVariable(name: "match", scope: !7947, file: !7878, line: 89, type: !285)
!7952 = !DILocation(line: 0, scope: !7947)
!7953 = !DILocation(line: 91, column: 2, scope: !7947)
!7954 = !DILocation(line: 92, column: 7, scope: !7955)
!7955 = distinct !DILexicalBlock(scope: !7956, file: !7878, line: 92, column: 7)
!7956 = distinct !DILexicalBlock(scope: !7947, file: !7878, line: 91, column: 5)
!7957 = !DILocation(line: 92, column: 10, scope: !7955)
!7958 = !DILocation(line: 92, column: 7, scope: !7956)
!7959 = !DILocation(line: 95, column: 13, scope: !7947)
!7960 = !DILocation(line: 95, column: 2, scope: !7956)
!7961 = distinct !{!7961, !7953, !7962}
!7962 = !DILocation(line: 95, column: 15, scope: !7947)
!7963 = !DILocation(line: 97, column: 2, scope: !7947)
!7964 = distinct !DISubprogram(name: "strlen", scope: !7878, file: !7878, line: 107, type: !7965, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2937, retainedNodes: !7967)
!7965 = !DISubroutineType(types: !7966)
!7966 = !{!232, !279}
!7967 = !{!7968, !7969}
!7968 = !DILocalVariable(name: "s", arg: 1, scope: !7964, file: !7878, line: 107, type: !279)
!7969 = !DILocalVariable(name: "n", scope: !7964, file: !7878, line: 109, type: !232)
!7970 = !DILocation(line: 0, scope: !7964)
!7971 = !DILocation(line: 111, column: 9, scope: !7964)
!7972 = !DILocation(line: 111, column: 12, scope: !7964)
!7973 = !DILocation(line: 111, column: 2, scope: !7964)
!7974 = !DILocation(line: 112, column: 4, scope: !7975)
!7975 = distinct !DILexicalBlock(scope: !7964, file: !7878, line: 111, column: 21)
!7976 = !DILocation(line: 113, column: 4, scope: !7975)
!7977 = distinct !{!7977, !7973, !7978}
!7978 = !DILocation(line: 114, column: 2, scope: !7964)
!7979 = !DILocation(line: 116, column: 2, scope: !7964)
!7980 = distinct !DISubprogram(name: "strnlen", scope: !7878, file: !7878, line: 126, type: !7981, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2937, retainedNodes: !7983)
!7981 = !DISubroutineType(types: !7982)
!7982 = !{!232, !279, !232}
!7983 = !{!7984, !7985, !7986}
!7984 = !DILocalVariable(name: "s", arg: 1, scope: !7980, file: !7878, line: 126, type: !279)
!7985 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7980, file: !7878, line: 126, type: !232)
!7986 = !DILocalVariable(name: "n", scope: !7980, file: !7878, line: 128, type: !232)
!7987 = !DILocation(line: 0, scope: !7980)
!7988 = !DILocation(line: 130, column: 9, scope: !7980)
!7989 = !DILocation(line: 130, column: 12, scope: !7980)
!7990 = !DILocation(line: 130, column: 20, scope: !7980)
!7991 = !DILocation(line: 130, column: 2, scope: !7980)
!7992 = !DILocation(line: 131, column: 4, scope: !7993)
!7993 = distinct !DILexicalBlock(scope: !7980, file: !7878, line: 130, column: 35)
!7994 = !DILocation(line: 132, column: 4, scope: !7993)
!7995 = distinct !{!7995, !7991, !7996}
!7996 = !DILocation(line: 133, column: 2, scope: !7980)
!7997 = !DILocation(line: 135, column: 2, scope: !7980)
!7998 = distinct !DISubprogram(name: "strcmp", scope: !7878, file: !7878, line: 145, type: !7999, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2937, retainedNodes: !8001)
!7999 = !DISubroutineType(types: !8000)
!8000 = !{!109, !279, !279}
!8001 = !{!8002, !8003}
!8002 = !DILocalVariable(name: "s1", arg: 1, scope: !7998, file: !7878, line: 145, type: !279)
!8003 = !DILocalVariable(name: "s2", arg: 2, scope: !7998, file: !7878, line: 145, type: !279)
!8004 = !DILocation(line: 0, scope: !7998)
!8005 = !DILocation(line: 147, column: 10, scope: !7998)
!8006 = !DILocation(line: 147, column: 17, scope: !7998)
!8007 = !DILocation(line: 147, column: 14, scope: !7998)
!8008 = !DILocation(line: 147, column: 22, scope: !7998)
!8009 = !DILocation(line: 148, column: 5, scope: !8010)
!8010 = distinct !DILexicalBlock(scope: !7998, file: !7878, line: 147, column: 40)
!8011 = !DILocation(line: 149, column: 5, scope: !8010)
!8012 = distinct !{!8012, !8013, !8014}
!8013 = !DILocation(line: 147, column: 2, scope: !7998)
!8014 = !DILocation(line: 150, column: 2, scope: !7998)
!8015 = !DILocation(line: 152, column: 9, scope: !7998)
!8016 = !DILocation(line: 152, column: 15, scope: !7998)
!8017 = !DILocation(line: 152, column: 13, scope: !7998)
!8018 = !DILocation(line: 152, column: 2, scope: !7998)
!8019 = distinct !DISubprogram(name: "strncmp", scope: !7878, file: !7878, line: 162, type: !8020, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2937, retainedNodes: !8022)
!8020 = !DISubroutineType(types: !8021)
!8021 = !{!109, !279, !279, !232}
!8022 = !{!8023, !8024, !8025}
!8023 = !DILocalVariable(name: "s1", arg: 1, scope: !8019, file: !7878, line: 162, type: !279)
!8024 = !DILocalVariable(name: "s2", arg: 2, scope: !8019, file: !7878, line: 162, type: !279)
!8025 = !DILocalVariable(name: "n", arg: 3, scope: !8019, file: !7878, line: 162, type: !232)
!8026 = !DILocation(line: 0, scope: !8019)
!8027 = !DILocation(line: 164, column: 17, scope: !8019)
!8028 = !DILocation(line: 164, column: 21, scope: !8019)
!8029 = !DILocation(line: 164, column: 28, scope: !8019)
!8030 = !DILocation(line: 164, column: 25, scope: !8019)
!8031 = !DILocation(line: 164, column: 33, scope: !8019)
!8032 = !DILocation(line: 165, column: 5, scope: !8033)
!8033 = distinct !DILexicalBlock(scope: !8019, file: !7878, line: 164, column: 51)
!8034 = !DILocation(line: 166, column: 5, scope: !8033)
!8035 = !DILocation(line: 167, column: 4, scope: !8033)
!8036 = distinct !{!8036, !8037, !8038}
!8037 = !DILocation(line: 164, column: 2, scope: !8019)
!8038 = !DILocation(line: 168, column: 2, scope: !8019)
!8039 = !DILocation(line: 170, column: 25, scope: !8019)
!8040 = !DILocation(line: 170, column: 31, scope: !8019)
!8041 = !DILocation(line: 170, column: 29, scope: !8019)
!8042 = !DILocation(line: 170, column: 9, scope: !8019)
!8043 = !DILocation(line: 170, column: 2, scope: !8019)
!8044 = distinct !DISubprogram(name: "strtok_r", scope: !7878, file: !7878, line: 180, type: !8045, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2937, retainedNodes: !8047)
!8045 = !DISubroutineType(types: !8046)
!8046 = !{!285, !285, !279, !284}
!8047 = !{!8048, !8049, !8050, !8051, !8052}
!8048 = !DILocalVariable(name: "str", arg: 1, scope: !8044, file: !7878, line: 180, type: !285)
!8049 = !DILocalVariable(name: "sep", arg: 2, scope: !8044, file: !7878, line: 180, type: !279)
!8050 = !DILocalVariable(name: "state", arg: 3, scope: !8044, file: !7878, line: 180, type: !284)
!8051 = !DILocalVariable(name: "start", scope: !8044, file: !7878, line: 182, type: !285)
!8052 = !DILocalVariable(name: "end", scope: !8044, file: !7878, line: 182, type: !285)
!8053 = !DILocation(line: 0, scope: !8044)
!8054 = !DILocation(line: 184, column: 10, scope: !8044)
!8055 = !DILocation(line: 184, column: 22, scope: !8044)
!8056 = !DILocation(line: 187, column: 9, scope: !8044)
!8057 = !DILocation(line: 187, column: 16, scope: !8044)
!8058 = !DILocation(line: 187, column: 19, scope: !8044)
!8059 = !DILocation(line: 187, column: 2, scope: !8044)
!8060 = !DILocation(line: 188, column: 8, scope: !8061)
!8061 = distinct !DILexicalBlock(scope: !8044, file: !7878, line: 187, column: 40)
!8062 = distinct !{!8062, !8059, !8063}
!8063 = !DILocation(line: 189, column: 2, scope: !8044)
!8064 = !DILocation(line: 198, column: 9, scope: !8044)
!8065 = !DILocation(line: 198, column: 18, scope: !8044)
!8066 = !DILocation(line: 198, column: 17, scope: !8044)
!8067 = !DILocation(line: 198, column: 2, scope: !8044)
!8068 = !DILocation(line: 199, column: 6, scope: !8069)
!8069 = distinct !DILexicalBlock(scope: !8044, file: !7878, line: 198, column: 37)
!8070 = !DILocation(line: 198, column: 14, scope: !8044)
!8071 = distinct !{!8071, !8067, !8072}
!8072 = !DILocation(line: 200, column: 2, scope: !8044)
!8073 = !DILocation(line: 203, column: 8, scope: !8074)
!8074 = distinct !DILexicalBlock(scope: !8075, file: !7878, line: 202, column: 20)
!8075 = distinct !DILexicalBlock(scope: !8044, file: !7878, line: 202, column: 6)
!8076 = !DILocation(line: 204, column: 16, scope: !8074)
!8077 = !DILocation(line: 205, column: 2, scope: !8074)
!8078 = !DILocation(line: 210, column: 1, scope: !8044)
!8079 = distinct !DISubprogram(name: "strcat", scope: !7878, file: !7878, line: 212, type: !7879, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2937, retainedNodes: !8080)
!8080 = !{!8081, !8082}
!8081 = !DILocalVariable(name: "dest", arg: 1, scope: !8079, file: !7878, line: 212, type: !7881)
!8082 = !DILocalVariable(name: "src", arg: 2, scope: !8079, file: !7878, line: 212, type: !7882)
!8083 = !DILocation(line: 0, scope: !8079)
!8084 = !DILocation(line: 214, column: 16, scope: !8079)
!8085 = !DILocation(line: 214, column: 14, scope: !8079)
!8086 = !DILocation(line: 214, column: 2, scope: !8079)
!8087 = !DILocation(line: 215, column: 2, scope: !8079)
!8088 = distinct !DISubprogram(name: "strncat", scope: !7878, file: !7878, line: 218, type: !7900, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2937, retainedNodes: !8089)
!8089 = !{!8090, !8091, !8092, !8093, !8094}
!8090 = !DILocalVariable(name: "dest", arg: 1, scope: !8088, file: !7878, line: 218, type: !7881)
!8091 = !DILocalVariable(name: "src", arg: 2, scope: !8088, file: !7878, line: 218, type: !7882)
!8092 = !DILocalVariable(name: "n", arg: 3, scope: !8088, file: !7878, line: 219, type: !232)
!8093 = !DILocalVariable(name: "orig_dest", scope: !8088, file: !7878, line: 221, type: !285)
!8094 = !DILocalVariable(name: "len", scope: !8088, file: !7878, line: 222, type: !232)
!8095 = !DILocation(line: 0, scope: !8088)
!8096 = !DILocation(line: 222, column: 15, scope: !8088)
!8097 = !DILocation(line: 224, column: 7, scope: !8088)
!8098 = !DILocation(line: 225, column: 14, scope: !8088)
!8099 = !DILocation(line: 225, column: 19, scope: !8088)
!8100 = !DILocation(line: 225, column: 11, scope: !8088)
!8101 = !DILocation(line: 225, column: 23, scope: !8088)
!8102 = !DILocation(line: 225, column: 28, scope: !8088)
!8103 = !DILocation(line: 225, column: 2, scope: !8088)
!8104 = !DILocation(line: 226, column: 17, scope: !8105)
!8105 = distinct !DILexicalBlock(scope: !8088, file: !7878, line: 225, column: 38)
!8106 = !DILocation(line: 226, column: 8, scope: !8105)
!8107 = !DILocation(line: 226, column: 11, scope: !8105)
!8108 = distinct !{!8108, !8103, !8109}
!8109 = !DILocation(line: 227, column: 2, scope: !8088)
!8110 = !DILocation(line: 228, column: 8, scope: !8088)
!8111 = !DILocation(line: 230, column: 2, scope: !8088)
!8112 = distinct !DISubprogram(name: "memcmp", scope: !7878, file: !7878, line: 239, type: !8113, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2937, retainedNodes: !8115)
!8113 = !DISubroutineType(types: !8114)
!8114 = !{!109, !13, !13, !232}
!8115 = !{!8116, !8117, !8118, !8119, !8120}
!8116 = !DILocalVariable(name: "m1", arg: 1, scope: !8112, file: !7878, line: 239, type: !13)
!8117 = !DILocalVariable(name: "m2", arg: 2, scope: !8112, file: !7878, line: 239, type: !13)
!8118 = !DILocalVariable(name: "n", arg: 3, scope: !8112, file: !7878, line: 239, type: !232)
!8119 = !DILocalVariable(name: "c1", scope: !8112, file: !7878, line: 241, type: !279)
!8120 = !DILocalVariable(name: "c2", scope: !8112, file: !7878, line: 242, type: !279)
!8121 = !DILocation(line: 0, scope: !8112)
!8122 = !DILocation(line: 244, column: 7, scope: !8123)
!8123 = distinct !DILexicalBlock(scope: !8112, file: !7878, line: 244, column: 6)
!8124 = !DILocation(line: 244, column: 6, scope: !8112)
!8125 = !DILocation(line: 248, column: 10, scope: !8112)
!8126 = !DILocation(line: 248, column: 14, scope: !8112)
!8127 = !DILocation(line: 248, column: 19, scope: !8112)
!8128 = !DILocation(line: 248, column: 2, scope: !8112)
!8129 = !DILocation(line: 248, column: 23, scope: !8112)
!8130 = !DILocation(line: 248, column: 30, scope: !8112)
!8131 = !DILocation(line: 248, column: 27, scope: !8112)
!8132 = !DILocation(line: 249, column: 5, scope: !8133)
!8133 = distinct !DILexicalBlock(scope: !8112, file: !7878, line: 248, column: 36)
!8134 = !DILocation(line: 250, column: 5, scope: !8133)
!8135 = distinct !{!8135, !8128, !8136}
!8136 = !DILocation(line: 251, column: 2, scope: !8112)
!8137 = !DILocation(line: 253, column: 9, scope: !8112)
!8138 = !DILocation(line: 253, column: 15, scope: !8112)
!8139 = !DILocation(line: 253, column: 13, scope: !8112)
!8140 = !DILocation(line: 253, column: 2, scope: !8112)
!8141 = !DILocation(line: 254, column: 1, scope: !8112)
!8142 = distinct !DISubprogram(name: "memmove", scope: !7878, file: !7878, line: 263, type: !8143, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2937, retainedNodes: !8145)
!8143 = !DISubroutineType(types: !8144)
!8144 = !{!107, !107, !13, !232}
!8145 = !{!8146, !8147, !8148, !8149, !8150}
!8146 = !DILocalVariable(name: "d", arg: 1, scope: !8142, file: !7878, line: 263, type: !107)
!8147 = !DILocalVariable(name: "s", arg: 2, scope: !8142, file: !7878, line: 263, type: !13)
!8148 = !DILocalVariable(name: "n", arg: 3, scope: !8142, file: !7878, line: 263, type: !232)
!8149 = !DILocalVariable(name: "dest", scope: !8142, file: !7878, line: 265, type: !285)
!8150 = !DILocalVariable(name: "src", scope: !8142, file: !7878, line: 266, type: !279)
!8151 = !DILocation(line: 0, scope: !8142)
!8152 = !DILocation(line: 268, column: 21, scope: !8153)
!8153 = distinct !DILexicalBlock(scope: !8142, file: !7878, line: 268, column: 6)
!8154 = !DILocation(line: 268, column: 28, scope: !8153)
!8155 = !DILocation(line: 268, column: 6, scope: !8142)
!8156 = !DILocation(line: 280, column: 12, scope: !8157)
!8157 = distinct !DILexicalBlock(scope: !8153, file: !7878, line: 278, column: 9)
!8158 = !DILocation(line: 280, column: 3, scope: !8157)
!8159 = !DILocation(line: 275, column: 5, scope: !8160)
!8160 = distinct !DILexicalBlock(scope: !8161, file: !7878, line: 274, column: 17)
!8161 = distinct !DILexicalBlock(scope: !8153, file: !7878, line: 268, column: 33)
!8162 = !DILocation(line: 276, column: 14, scope: !8160)
!8163 = !DILocation(line: 276, column: 4, scope: !8160)
!8164 = !DILocation(line: 276, column: 12, scope: !8160)
!8165 = !DILocation(line: 274, column: 12, scope: !8161)
!8166 = !DILocation(line: 274, column: 3, scope: !8161)
!8167 = distinct !{!8167, !8166, !8168}
!8168 = !DILocation(line: 277, column: 3, scope: !8161)
!8169 = !DILocation(line: 281, column: 12, scope: !8170)
!8170 = distinct !DILexicalBlock(scope: !8157, file: !7878, line: 280, column: 17)
!8171 = !DILocation(line: 281, column: 10, scope: !8170)
!8172 = !DILocation(line: 282, column: 8, scope: !8170)
!8173 = !DILocation(line: 283, column: 7, scope: !8170)
!8174 = !DILocation(line: 284, column: 5, scope: !8170)
!8175 = distinct !{!8175, !8158, !8176}
!8176 = !DILocation(line: 285, column: 3, scope: !8157)
!8177 = !DILocation(line: 288, column: 2, scope: !8142)
!8178 = distinct !DISubprogram(name: "memcpy", scope: !7878, file: !7878, line: 298, type: !8179, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2937, retainedNodes: !8183)
!8179 = !DISubroutineType(types: !8180)
!8180 = !{!107, !8181, !8182, !232}
!8181 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !107)
!8182 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!8183 = !{!8184, !8185, !8186, !8187, !8188}
!8184 = !DILocalVariable(name: "d", arg: 1, scope: !8178, file: !7878, line: 298, type: !8181)
!8185 = !DILocalVariable(name: "s", arg: 2, scope: !8178, file: !7878, line: 298, type: !8182)
!8186 = !DILocalVariable(name: "n", arg: 3, scope: !8178, file: !7878, line: 298, type: !232)
!8187 = !DILocalVariable(name: "d_byte", scope: !8178, file: !7878, line: 302, type: !1007)
!8188 = !DILocalVariable(name: "s_byte", scope: !8178, file: !7878, line: 303, type: !2940)
!8189 = !DILocation(line: 0, scope: !8178)
!8190 = !DILocation(line: 337, column: 11, scope: !8178)
!8191 = !DILocation(line: 337, column: 2, scope: !8178)
!8192 = !DILocation(line: 338, column: 25, scope: !8193)
!8193 = distinct !DILexicalBlock(scope: !8178, file: !7878, line: 337, column: 16)
!8194 = !DILocation(line: 338, column: 17, scope: !8193)
!8195 = !DILocation(line: 338, column: 11, scope: !8193)
!8196 = !DILocation(line: 338, column: 15, scope: !8193)
!8197 = !DILocation(line: 339, column: 4, scope: !8193)
!8198 = distinct !{!8198, !8191, !8199}
!8199 = !DILocation(line: 340, column: 2, scope: !8178)
!8200 = !DILocation(line: 342, column: 2, scope: !8178)
!8201 = distinct !DISubprogram(name: "memset", scope: !7878, file: !7878, line: 352, type: !8202, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2937, retainedNodes: !8204)
!8202 = !DISubroutineType(types: !8203)
!8203 = !{!107, !107, !109, !232}
!8204 = !{!8205, !8206, !8207, !8208, !8209}
!8205 = !DILocalVariable(name: "buf", arg: 1, scope: !8201, file: !7878, line: 352, type: !107)
!8206 = !DILocalVariable(name: "c", arg: 2, scope: !8201, file: !7878, line: 352, type: !109)
!8207 = !DILocalVariable(name: "n", arg: 3, scope: !8201, file: !7878, line: 352, type: !232)
!8208 = !DILocalVariable(name: "d_byte", scope: !8201, file: !7878, line: 356, type: !1007)
!8209 = !DILocalVariable(name: "c_byte", scope: !8201, file: !7878, line: 357, type: !179)
!8210 = !DILocation(line: 0, scope: !8201)
!8211 = !DILocation(line: 357, column: 25, scope: !8201)
!8212 = !DILocation(line: 389, column: 11, scope: !8201)
!8213 = !DILocation(line: 389, column: 2, scope: !8201)
!8214 = !DILocation(line: 390, column: 11, scope: !8215)
!8215 = distinct !DILexicalBlock(scope: !8201, file: !7878, line: 389, column: 16)
!8216 = !DILocation(line: 390, column: 15, scope: !8215)
!8217 = !DILocation(line: 391, column: 4, scope: !8215)
!8218 = distinct !{!8218, !8213, !8219}
!8219 = !DILocation(line: 392, column: 2, scope: !8201)
!8220 = !DILocation(line: 394, column: 2, scope: !8201)
!8221 = distinct !DISubprogram(name: "memchr", scope: !7878, file: !7878, line: 404, type: !8222, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2937, retainedNodes: !8224)
!8222 = !DISubroutineType(types: !8223)
!8223 = !{!107, !13, !109, !232}
!8224 = !{!8225, !8226, !8227, !8228}
!8225 = !DILocalVariable(name: "s", arg: 1, scope: !8221, file: !7878, line: 404, type: !13)
!8226 = !DILocalVariable(name: "c", arg: 2, scope: !8221, file: !7878, line: 404, type: !109)
!8227 = !DILocalVariable(name: "n", arg: 3, scope: !8221, file: !7878, line: 404, type: !232)
!8228 = !DILocalVariable(name: "p", scope: !8229, file: !7878, line: 407, type: !2940)
!8229 = distinct !DILexicalBlock(scope: !8230, file: !7878, line: 406, column: 14)
!8230 = distinct !DILexicalBlock(scope: !8221, file: !7878, line: 406, column: 6)
!8231 = !DILocation(line: 0, scope: !8221)
!8232 = !DILocation(line: 406, column: 8, scope: !8230)
!8233 = !DILocation(line: 406, column: 6, scope: !8221)
!8234 = !DILocation(line: 409, column: 3, scope: !8229)
!8235 = !DILocation(line: 0, scope: !8229)
!8236 = !DILocation(line: 410, column: 8, scope: !8237)
!8237 = distinct !DILexicalBlock(scope: !8238, file: !7878, line: 410, column: 8)
!8238 = distinct !DILexicalBlock(scope: !8229, file: !7878, line: 409, column: 6)
!8239 = !DILocation(line: 410, column: 13, scope: !8237)
!8240 = !DILocation(line: 410, column: 8, scope: !8238)
!8241 = distinct !{!8241, !8234, !8242}
!8242 = !DILocation(line: 414, column: 20, scope: !8229)
!8243 = !DILocation(line: 417, column: 2, scope: !8221)
!8244 = !DILocation(line: 418, column: 1, scope: !8221)
!8245 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !573, file: !573, line: 23, type: !4375, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8246)
!8246 = !{!8247}
!8247 = !DILocalVariable(name: "hook", arg: 1, scope: !8245, file: !573, line: 23, type: !302)
!8248 = !DILocation(line: 0, scope: !8245)
!8249 = !DILocation(line: 25, column: 15, scope: !8245)
!8250 = !DILocation(line: 26, column: 1, scope: !8245)
!8251 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !573, file: !573, line: 14, type: !303, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8252)
!8252 = !{!8253}
!8253 = !DILocalVariable(name: "c", arg: 1, scope: !8251, file: !573, line: 14, type: !109)
!8254 = !DILocation(line: 0, scope: !8251)
!8255 = !DILocation(line: 18, column: 2, scope: !8251)
!8256 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !573, file: !573, line: 28, type: !8257, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8259)
!8257 = !DISubroutineType(types: !8258)
!8258 = !{!109, !109, !569}
!8259 = !{!8260, !8261}
!8260 = !DILocalVariable(name: "c", arg: 1, scope: !8256, file: !573, line: 28, type: !109)
!8261 = !DILocalVariable(name: "stream", arg: 2, scope: !8256, file: !573, line: 28, type: !569)
!8262 = !DILocation(line: 0, scope: !8256)
!8263 = !DILocation(line: 30, column: 27, scope: !8256)
!8264 = !DILocation(line: 30, column: 50, scope: !8256)
!8265 = !DILocation(line: 30, column: 9, scope: !8256)
!8266 = !DILocation(line: 30, column: 2, scope: !8256)
!8267 = distinct !DISubprogram(name: "fputc", scope: !573, file: !573, line: 41, type: !8257, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8268)
!8268 = !{!8269, !8270}
!8269 = !DILocalVariable(name: "c", arg: 1, scope: !8267, file: !573, line: 41, type: !109)
!8270 = !DILocalVariable(name: "stream", arg: 2, scope: !8267, file: !573, line: 41, type: !569)
!8271 = !DILocation(line: 0, scope: !8267)
!8272 = !DILocation(line: 43, column: 9, scope: !8267)
!8273 = !DILocation(line: 43, column: 2, scope: !8267)
!8274 = distinct !DISubprogram(name: "zephyr_fputc", scope: !8275, file: !8275, line: 72, type: !8257, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8276)
!8275 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/simple")
!8276 = !{!8277, !8278}
!8277 = !DILocalVariable(name: "c", arg: 1, scope: !8274, file: !8275, line: 72, type: !109)
!8278 = !DILocalVariable(name: "stream", arg: 2, scope: !8274, file: !8275, line: 72, type: !569)
!8279 = !DILocation(line: 0, scope: !8274)
!8280 = !DILocation(line: 81, column: 2, scope: !8281)
!8281 = distinct !DILexicalBlock(scope: !8274, file: !8275, line: 81, column: 2)
!8282 = !{i64 2155131786}
!8283 = !DILocation(line: 82, column: 9, scope: !8274)
!8284 = !DILocation(line: 82, column: 2, scope: !8274)
!8285 = distinct !DISubprogram(name: "fputs", scope: !573, file: !573, line: 46, type: !8286, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8289)
!8286 = !DISubroutineType(types: !8287)
!8287 = !{!109, !7882, !8288}
!8288 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !569)
!8289 = !{!8290, !8291, !8292, !8293}
!8290 = !DILocalVariable(name: "s", arg: 1, scope: !8285, file: !573, line: 46, type: !7882)
!8291 = !DILocalVariable(name: "stream", arg: 2, scope: !8285, file: !573, line: 46, type: !8288)
!8292 = !DILocalVariable(name: "len", scope: !8285, file: !573, line: 48, type: !109)
!8293 = !DILocalVariable(name: "ret", scope: !8285, file: !573, line: 49, type: !109)
!8294 = !DILocation(line: 0, scope: !8285)
!8295 = !DILocation(line: 48, column: 12, scope: !8285)
!8296 = !DILocation(line: 51, column: 8, scope: !8285)
!8297 = !DILocation(line: 53, column: 13, scope: !8285)
!8298 = !DILocation(line: 53, column: 9, scope: !8285)
!8299 = !DILocation(line: 53, column: 2, scope: !8285)
!8300 = distinct !DISubprogram(name: "fwrite", scope: !573, file: !573, line: 99, type: !8301, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8303)
!8301 = !DISubroutineType(types: !8302)
!8302 = !{!232, !8182, !232, !232, !8288}
!8303 = !{!8304, !8305, !8306, !8307}
!8304 = !DILocalVariable(name: "ptr", arg: 1, scope: !8300, file: !573, line: 99, type: !8182)
!8305 = !DILocalVariable(name: "size", arg: 2, scope: !8300, file: !573, line: 99, type: !232)
!8306 = !DILocalVariable(name: "nitems", arg: 3, scope: !8300, file: !573, line: 99, type: !232)
!8307 = !DILocalVariable(name: "stream", arg: 4, scope: !8300, file: !573, line: 100, type: !8288)
!8308 = !DILocation(line: 0, scope: !8300)
!8309 = !DILocation(line: 102, column: 9, scope: !8300)
!8310 = !DILocation(line: 102, column: 2, scope: !8300)
!8311 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !8275, file: !8275, line: 96, type: !8301, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8312)
!8312 = !{!8313, !8314, !8315, !8316}
!8313 = !DILocalVariable(name: "ptr", arg: 1, scope: !8311, file: !8275, line: 96, type: !8182)
!8314 = !DILocalVariable(name: "size", arg: 2, scope: !8311, file: !8275, line: 96, type: !232)
!8315 = !DILocalVariable(name: "nitems", arg: 3, scope: !8311, file: !8275, line: 96, type: !232)
!8316 = !DILocalVariable(name: "stream", arg: 4, scope: !8311, file: !8275, line: 96, type: !8288)
!8317 = !DILocation(line: 0, scope: !8311)
!8318 = !DILocation(line: 107, column: 2, scope: !8319)
!8319 = distinct !DILexicalBlock(scope: !8311, file: !8275, line: 107, column: 2)
!8320 = !{i64 2155131890}
!8321 = !DILocation(line: 108, column: 9, scope: !8311)
!8322 = !DILocation(line: 108, column: 2, scope: !8311)
!8323 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !573, file: !573, line: 56, type: !8301, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8324)
!8324 = !{!8325, !8326, !8327, !8328, !8329, !8330, !8331, !8332}
!8325 = !DILocalVariable(name: "ptr", arg: 1, scope: !8323, file: !573, line: 56, type: !8182)
!8326 = !DILocalVariable(name: "size", arg: 2, scope: !8323, file: !573, line: 56, type: !232)
!8327 = !DILocalVariable(name: "nitems", arg: 3, scope: !8323, file: !573, line: 57, type: !232)
!8328 = !DILocalVariable(name: "stream", arg: 4, scope: !8323, file: !573, line: 57, type: !8288)
!8329 = !DILocalVariable(name: "i", scope: !8323, file: !573, line: 59, type: !232)
!8330 = !DILocalVariable(name: "j", scope: !8323, file: !573, line: 60, type: !232)
!8331 = !DILocalVariable(name: "p", scope: !8323, file: !573, line: 61, type: !2940)
!8332 = !DILabel(scope: !8323, name: "done", file: !573, line: 82)
!8333 = !DILocation(line: 0, scope: !8323)
!8334 = !DILocation(line: 63, column: 14, scope: !8335)
!8335 = distinct !DILexicalBlock(scope: !8323, file: !573, line: 63, column: 6)
!8336 = !DILocation(line: 63, column: 24, scope: !8335)
!8337 = !DILocation(line: 72, column: 3, scope: !8338)
!8338 = distinct !DILexicalBlock(scope: !8323, file: !573, line: 70, column: 5)
!8339 = !DILocation(line: 0, scope: !8338)
!8340 = !DILocation(line: 73, column: 8, scope: !8341)
!8341 = distinct !DILexicalBlock(scope: !8342, file: !573, line: 73, column: 8)
!8342 = distinct !DILexicalBlock(scope: !8338, file: !573, line: 72, column: 6)
!8343 = !DILocation(line: 73, column: 29, scope: !8341)
!8344 = !DILocation(line: 73, column: 27, scope: !8341)
!8345 = !DILocation(line: 73, column: 21, scope: !8341)
!8346 = !DILocation(line: 73, column: 33, scope: !8341)
!8347 = !DILocation(line: 73, column: 8, scope: !8342)
!8348 = !DILocation(line: 76, column: 5, scope: !8342)
!8349 = !DILocation(line: 77, column: 14, scope: !8338)
!8350 = !DILocation(line: 77, column: 3, scope: !8342)
!8351 = distinct !{!8351, !8337, !8352}
!8352 = !DILocation(line: 77, column: 17, scope: !8338)
!8353 = !DILocation(line: 79, column: 4, scope: !8338)
!8354 = !DILocation(line: 80, column: 13, scope: !8323)
!8355 = !DILocation(line: 80, column: 2, scope: !8338)
!8356 = distinct !{!8356, !8357, !8358}
!8357 = !DILocation(line: 70, column: 2, scope: !8323)
!8358 = !DILocation(line: 80, column: 16, scope: !8323)
!8359 = !DILocation(line: 82, column: 1, scope: !8323)
!8360 = !DILocation(line: 83, column: 17, scope: !8323)
!8361 = !DILocation(line: 83, column: 2, scope: !8323)
!8362 = !DILocation(line: 84, column: 1, scope: !8323)
!8363 = distinct !DISubprogram(name: "puts", scope: !573, file: !573, line: 106, type: !8364, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8366)
!8364 = !DISubroutineType(types: !8365)
!8365 = !{!109, !279}
!8366 = !{!8367}
!8367 = !DILocalVariable(name: "s", arg: 1, scope: !8363, file: !573, line: 106, type: !279)
!8368 = !DILocation(line: 0, scope: !8363)
!8369 = !DILocation(line: 108, column: 6, scope: !8370)
!8370 = distinct !DILexicalBlock(scope: !8363, file: !573, line: 108, column: 6)
!8371 = !DILocation(line: 108, column: 23, scope: !8370)
!8372 = !DILocation(line: 108, column: 6, scope: !8363)
!8373 = !DILocation(line: 112, column: 9, scope: !8363)
!8374 = !DILocation(line: 112, column: 29, scope: !8363)
!8375 = !DILocation(line: 112, column: 2, scope: !8363)
!8376 = !DILocation(line: 113, column: 1, scope: !8363)
!8377 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !714, file: !714, line: 368, type: !767, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8378)
!8378 = !{!8379}
!8379 = !DILocalVariable(name: "dev", arg: 1, scope: !8377, file: !714, line: 368, type: !743)
!8380 = !DILocation(line: 0, scope: !8377)
!8381 = !DILocation(line: 370, column: 2, scope: !8377)
!8382 = !DILocation(line: 371, column: 1, scope: !8377)
!8383 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !714, file: !714, line: 243, type: !8384, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8386)
!8384 = !DISubroutineType(types: !8385)
!8385 = !{null, !109, !109, !743}
!8386 = !{!8387, !8388, !8389, !8390, !8392}
!8387 = !DILocalVariable(name: "min", arg: 1, scope: !8383, file: !714, line: 243, type: !109)
!8388 = !DILocalVariable(name: "max", arg: 2, scope: !8383, file: !714, line: 243, type: !109)
!8389 = !DILocalVariable(name: "dev", arg: 3, scope: !8383, file: !714, line: 243, type: !743)
!8390 = !DILocalVariable(name: "data", scope: !8383, file: !714, line: 245, type: !8391)
!8391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !747, size: 32)
!8392 = !DILocalVariable(name: "line", scope: !8383, file: !714, line: 246, type: !109)
!8393 = !DILocation(line: 0, scope: !8383)
!8394 = !DILocation(line: 245, column: 38, scope: !8383)
!8395 = !DILocation(line: 249, column: 24, scope: !8396)
!8396 = distinct !DILexicalBlock(scope: !8397, file: !714, line: 249, column: 2)
!8397 = distinct !DILexicalBlock(scope: !8383, file: !714, line: 249, column: 2)
!8398 = !DILocation(line: 249, column: 2, scope: !8397)
!8399 = !DILocation(line: 251, column: 7, scope: !8400)
!8400 = distinct !DILexicalBlock(scope: !8401, file: !714, line: 251, column: 7)
!8401 = distinct !DILexicalBlock(scope: !8396, file: !714, line: 249, column: 39)
!8402 = !DILocation(line: 251, column: 7, scope: !8401)
!8403 = !DILocation(line: 253, column: 4, scope: !8404)
!8404 = distinct !DILexicalBlock(scope: !8400, file: !714, line: 251, column: 36)
!8405 = !DILocation(line: 256, column: 24, scope: !8406)
!8406 = distinct !DILexicalBlock(scope: !8404, file: !714, line: 256, column: 8)
!8407 = !DILocation(line: 256, column: 9, scope: !8406)
!8408 = !DILocation(line: 256, column: 8, scope: !8404)
!8409 = !DILocation(line: 260, column: 43, scope: !8404)
!8410 = !DILocation(line: 260, column: 4, scope: !8404)
!8411 = !DILocation(line: 261, column: 3, scope: !8404)
!8412 = !DILocation(line: 249, column: 35, scope: !8396)
!8413 = distinct !{!8413, !8398, !8414}
!8414 = !DILocation(line: 262, column: 2, scope: !8397)
!8415 = !DILocation(line: 263, column: 1, scope: !8383)
!8416 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !714, file: !714, line: 158, type: !303, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8417)
!8417 = !{!8418}
!8418 = !DILocalVariable(name: "line", arg: 1, scope: !8416, file: !714, line: 158, type: !109)
!8419 = !DILocation(line: 0, scope: !8416)
!8420 = !DILocation(line: 170, column: 38, scope: !8421)
!8421 = distinct !DILexicalBlock(scope: !8422, file: !714, line: 160, column: 17)
!8422 = distinct !DILexicalBlock(scope: !8416, file: !714, line: 160, column: 6)
!8423 = !DILocation(line: 170, column: 10, scope: !8421)
!8424 = !DILocation(line: 176, column: 1, scope: !8416)
!8425 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !714, file: !714, line: 183, type: !8426, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8428)
!8426 = !DISubroutineType(types: !8427)
!8427 = !{null, !109}
!8428 = !{!8429}
!8429 = !DILocalVariable(name: "line", arg: 1, scope: !8425, file: !714, line: 183, type: !109)
!8430 = !DILocation(line: 0, scope: !8425)
!8431 = !DILocation(line: 195, column: 28, scope: !8432)
!8432 = distinct !DILexicalBlock(scope: !8433, file: !714, line: 185, column: 17)
!8433 = distinct !DILexicalBlock(scope: !8425, file: !714, line: 185, column: 6)
!8434 = !DILocation(line: 195, column: 3, scope: !8432)
!8435 = !DILocation(line: 200, column: 1, scope: !8425)
!8436 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !8437, file: !8437, line: 910, type: !6583, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8438)
!8437 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8438 = !{!8439}
!8439 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8436, file: !8437, line: 910, type: !110)
!8440 = !DILocation(line: 0, scope: !8436)
!8441 = !DILocation(line: 912, column: 3, scope: !8436)
!8442 = !DILocation(line: 913, column: 1, scope: !8436)
!8443 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !8437, file: !8437, line: 834, type: !7773, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8444)
!8444 = !{!8445}
!8445 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8443, file: !8437, line: 834, type: !110)
!8446 = !DILocation(line: 0, scope: !8443)
!8447 = !DILocation(line: 836, column: 11, scope: !8443)
!8448 = !DILocation(line: 836, column: 40, scope: !8443)
!8449 = !DILocation(line: 836, column: 3, scope: !8443)
!8450 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !714, file: !714, line: 304, type: !767, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8451)
!8451 = !{!8452}
!8452 = !DILocalVariable(name: "dev", arg: 1, scope: !8450, file: !714, line: 304, type: !743)
!8453 = !DILocation(line: 0, scope: !8450)
!8454 = !DILocation(line: 306, column: 2, scope: !8450)
!8455 = !DILocation(line: 307, column: 1, scope: !8450)
!8456 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !714, file: !714, line: 299, type: !767, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8457)
!8457 = !{!8458}
!8458 = !DILocalVariable(name: "dev", arg: 1, scope: !8456, file: !714, line: 299, type: !743)
!8459 = !DILocation(line: 0, scope: !8456)
!8460 = !DILocation(line: 301, column: 2, scope: !8456)
!8461 = !DILocation(line: 302, column: 1, scope: !8456)
!8462 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !714, file: !714, line: 294, type: !767, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8463)
!8463 = !{!8464}
!8464 = !DILocalVariable(name: "dev", arg: 1, scope: !8462, file: !714, line: 294, type: !743)
!8465 = !DILocation(line: 0, scope: !8462)
!8466 = !DILocation(line: 296, column: 2, scope: !8462)
!8467 = !DILocation(line: 297, column: 1, scope: !8462)
!8468 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !714, file: !714, line: 397, type: !767, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8469)
!8469 = !{!8470}
!8470 = !DILocalVariable(name: "dev", arg: 1, scope: !8468, file: !714, line: 397, type: !743)
!8471 = !DILocation(line: 0, scope: !8468)
!8472 = !DILocation(line: 399, column: 2, scope: !8468)
!8473 = !DILocation(line: 400, column: 1, scope: !8468)
!8474 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !714, file: !714, line: 392, type: !767, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8475)
!8475 = !{!8476}
!8476 = !DILocalVariable(name: "dev", arg: 1, scope: !8474, file: !714, line: 392, type: !743)
!8477 = !DILocation(line: 0, scope: !8474)
!8478 = !DILocation(line: 394, column: 2, scope: !8474)
!8479 = !DILocation(line: 395, column: 1, scope: !8474)
!8480 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !714, file: !714, line: 289, type: !767, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8481)
!8481 = !{!8482}
!8482 = !DILocalVariable(name: "dev", arg: 1, scope: !8480, file: !714, line: 289, type: !743)
!8483 = !DILocation(line: 0, scope: !8480)
!8484 = !DILocation(line: 291, column: 2, scope: !8480)
!8485 = !DILocation(line: 292, column: 1, scope: !8480)
!8486 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !714, file: !714, line: 387, type: !767, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8487)
!8487 = !{!8488}
!8488 = !DILocalVariable(name: "dev", arg: 1, scope: !8486, file: !714, line: 387, type: !743)
!8489 = !DILocation(line: 0, scope: !8486)
!8490 = !DILocation(line: 389, column: 2, scope: !8486)
!8491 = !DILocation(line: 390, column: 1, scope: !8486)
!8492 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !714, file: !714, line: 382, type: !767, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8493)
!8493 = !{!8494}
!8494 = !DILocalVariable(name: "dev", arg: 1, scope: !8492, file: !714, line: 382, type: !743)
!8495 = !DILocation(line: 0, scope: !8492)
!8496 = !DILocation(line: 384, column: 2, scope: !8492)
!8497 = !DILocation(line: 385, column: 1, scope: !8492)
!8498 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !714, file: !714, line: 373, type: !767, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8499)
!8499 = !{!8500}
!8500 = !DILocalVariable(name: "dev", arg: 1, scope: !8498, file: !714, line: 373, type: !743)
!8501 = !DILocation(line: 0, scope: !8498)
!8502 = !DILocation(line: 375, column: 2, scope: !8498)
!8503 = !DILocation(line: 376, column: 1, scope: !8498)
!8504 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !714, file: !714, line: 284, type: !767, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8505)
!8505 = !{!8506}
!8506 = !DILocalVariable(name: "dev", arg: 1, scope: !8504, file: !714, line: 284, type: !743)
!8507 = !DILocation(line: 0, scope: !8504)
!8508 = !DILocation(line: 286, column: 2, scope: !8504)
!8509 = !DILocation(line: 287, column: 1, scope: !8504)
!8510 = distinct !DISubprogram(name: "stm32_exti_init", scope: !714, file: !714, line: 416, type: !741, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8511)
!8511 = !{!8512}
!8512 = !DILocalVariable(name: "dev", arg: 1, scope: !8510, file: !714, line: 416, type: !743)
!8513 = !DILocation(line: 0, scope: !8510)
!8514 = !DILocation(line: 418, column: 2, scope: !8510)
!8515 = !DILocation(line: 420, column: 2, scope: !8510)
!8516 = !DILocation(line: 0, scope: !766)
!8517 = !DILocation(line: 493, column: 2, scope: !8518)
!8518 = distinct !DILexicalBlock(scope: !766, file: !714, line: 493, column: 2)
!8519 = !DILocation(line: 497, column: 2, scope: !8520)
!8520 = distinct !DILexicalBlock(scope: !766, file: !714, line: 497, column: 2)
!8521 = !DILocation(line: 507, column: 2, scope: !8522)
!8522 = distinct !DILexicalBlock(scope: !766, file: !714, line: 507, column: 2)
!8523 = !DILocation(line: 512, column: 2, scope: !8524)
!8524 = distinct !DILexicalBlock(scope: !766, file: !714, line: 512, column: 2)
!8525 = !DILocation(line: 516, column: 2, scope: !8526)
!8526 = distinct !DILexicalBlock(scope: !766, file: !714, line: 516, column: 2)
!8527 = !DILocation(line: 523, column: 2, scope: !8528)
!8528 = distinct !DILexicalBlock(scope: !766, file: !714, line: 523, column: 2)
!8529 = !DILocation(line: 527, column: 2, scope: !8530)
!8530 = distinct !DILexicalBlock(scope: !766, file: !714, line: 527, column: 2)
!8531 = !DILocation(line: 581, column: 2, scope: !8532)
!8532 = distinct !DILexicalBlock(scope: !766, file: !714, line: 581, column: 2)
!8533 = !DILocation(line: 586, column: 2, scope: !8534)
!8534 = distinct !DILexicalBlock(scope: !766, file: !714, line: 586, column: 2)
!8535 = !DILocation(line: 591, column: 2, scope: !8536)
!8536 = distinct !DILexicalBlock(scope: !766, file: !714, line: 591, column: 2)
!8537 = !DILocation(line: 595, column: 2, scope: !8538)
!8538 = distinct !DILexicalBlock(scope: !766, file: !714, line: 595, column: 2)
!8539 = !DILocation(line: 607, column: 1, scope: !766)
!8540 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !714, file: !714, line: 112, type: !8426, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8541)
!8541 = !{!8542, !8543}
!8542 = !DILocalVariable(name: "line", arg: 1, scope: !8540, file: !714, line: 112, type: !109)
!8543 = !DILocalVariable(name: "irqnum", scope: !8540, file: !714, line: 114, type: !109)
!8544 = !DILocation(line: 0, scope: !8540)
!8545 = !DILocation(line: 122, column: 13, scope: !8546)
!8546 = distinct !DILexicalBlock(scope: !8540, file: !714, line: 122, column: 6)
!8547 = !DILocation(line: 122, column: 6, scope: !8540)
!8548 = !DILocation(line: 123, column: 3, scope: !8549)
!8549 = distinct !DILexicalBlock(scope: !8550, file: !714, line: 123, column: 3)
!8550 = distinct !DILexicalBlock(scope: !8551, file: !714, line: 123, column: 3)
!8551 = distinct !DILexicalBlock(scope: !8552, file: !714, line: 123, column: 3)
!8552 = distinct !DILexicalBlock(scope: !8546, file: !714, line: 122, column: 22)
!8553 = !DILocation(line: 121, column: 11, scope: !8540)
!8554 = !DILocation(line: 130, column: 26, scope: !8540)
!8555 = !DILocation(line: 130, column: 2, scope: !8540)
!8556 = !DILocation(line: 134, column: 2, scope: !8540)
!8557 = !DILocation(line: 135, column: 1, scope: !8540)
!8558 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !8437, file: !8437, line: 268, type: !6583, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8559)
!8559 = !{!8560}
!8560 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8558, file: !8437, line: 268, type: !110)
!8561 = !DILocation(line: 0, scope: !8558)
!8562 = !DILocation(line: 270, column: 3, scope: !8558)
!8563 = !DILocation(line: 271, column: 1, scope: !8558)
!8564 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !714, file: !714, line: 137, type: !8426, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8565)
!8565 = !{!8566}
!8566 = !DILocalVariable(name: "line", arg: 1, scope: !8564, file: !714, line: 137, type: !109)
!8567 = !DILocation(line: 0, scope: !8564)
!8568 = !DILocation(line: 141, column: 11, scope: !8569)
!8569 = distinct !DILexicalBlock(scope: !8564, file: !714, line: 141, column: 6)
!8570 = !DILocation(line: 141, column: 6, scope: !8564)
!8571 = !DILocation(line: 145, column: 28, scope: !8572)
!8572 = distinct !DILexicalBlock(scope: !8569, file: !714, line: 141, column: 17)
!8573 = !DILocation(line: 145, column: 3, scope: !8572)
!8574 = !DILocation(line: 147, column: 2, scope: !8572)
!8575 = !DILocation(line: 151, column: 1, scope: !8564)
!8576 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !8437, file: !8437, line: 309, type: !6583, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8577)
!8577 = !{!8578}
!8578 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8576, file: !8437, line: 309, type: !110)
!8579 = !DILocation(line: 0, scope: !8576)
!8580 = !DILocation(line: 311, column: 3, scope: !8576)
!8581 = !DILocation(line: 312, column: 1, scope: !8576)
!8582 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !714, file: !714, line: 202, type: !8583, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8585)
!8583 = !DISubroutineType(types: !8584)
!8584 = !{null, !109, !109}
!8585 = !{!8586, !8587}
!8586 = !DILocalVariable(name: "line", arg: 1, scope: !8582, file: !714, line: 202, type: !109)
!8587 = !DILocalVariable(name: "trigger", arg: 2, scope: !8582, file: !714, line: 202, type: !109)
!8588 = !DILocation(line: 0, scope: !8582)
!8589 = !DILocation(line: 211, column: 2, scope: !8582)
!8590 = !DILocation(line: 213, column: 36, scope: !8591)
!8591 = distinct !DILexicalBlock(scope: !8582, file: !714, line: 211, column: 19)
!8592 = !DILocation(line: 213, column: 3, scope: !8591)
!8593 = !DILocation(line: 214, column: 3, scope: !8591)
!8594 = !DILocation(line: 215, column: 3, scope: !8591)
!8595 = !DILocation(line: 217, column: 35, scope: !8591)
!8596 = !DILocation(line: 217, column: 3, scope: !8591)
!8597 = !DILocation(line: 218, column: 3, scope: !8591)
!8598 = !DILocation(line: 219, column: 3, scope: !8591)
!8599 = !DILocation(line: 221, column: 36, scope: !8591)
!8600 = !DILocation(line: 221, column: 3, scope: !8591)
!8601 = !DILocation(line: 222, column: 3, scope: !8591)
!8602 = !DILocation(line: 223, column: 3, scope: !8591)
!8603 = !DILocation(line: 225, column: 35, scope: !8591)
!8604 = !DILocation(line: 225, column: 3, scope: !8591)
!8605 = !DILocation(line: 226, column: 3, scope: !8591)
!8606 = !DILocation(line: 227, column: 3, scope: !8591)
!8607 = !DILocation(line: 232, column: 1, scope: !8582)
!8608 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !8437, file: !8437, line: 573, type: !6583, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8609)
!8609 = !{!8610}
!8610 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8608, file: !8437, line: 573, type: !110)
!8611 = !DILocation(line: 0, scope: !8608)
!8612 = !DILocation(line: 575, column: 3, scope: !8608)
!8613 = !DILocation(line: 577, column: 1, scope: !8608)
!8614 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !8437, file: !8437, line: 703, type: !6583, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8615)
!8615 = !{!8616}
!8616 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8614, file: !8437, line: 703, type: !110)
!8617 = !DILocation(line: 0, scope: !8614)
!8618 = !DILocation(line: 705, column: 3, scope: !8614)
!8619 = !DILocation(line: 706, column: 1, scope: !8614)
!8620 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !8437, file: !8437, line: 529, type: !6583, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8621)
!8621 = !{!8622}
!8622 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8620, file: !8437, line: 529, type: !110)
!8623 = !DILocation(line: 0, scope: !8620)
!8624 = !DILocation(line: 531, column: 3, scope: !8620)
!8625 = !DILocation(line: 533, column: 1, scope: !8620)
!8626 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !8437, file: !8437, line: 661, type: !6583, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8627)
!8627 = !{!8628}
!8628 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8626, file: !8437, line: 661, type: !110)
!8629 = !DILocation(line: 0, scope: !8626)
!8630 = !DILocation(line: 663, column: 3, scope: !8626)
!8631 = !DILocation(line: 664, column: 1, scope: !8626)
!8632 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !714, file: !714, line: 433, type: !8633, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8635)
!8633 = !DISubroutineType(types: !8634)
!8634 = !{!109, !109, !754, !107}
!8635 = !{!8636, !8637, !8638, !8639, !8641}
!8636 = !DILocalVariable(name: "line", arg: 1, scope: !8632, file: !714, line: 433, type: !109)
!8637 = !DILocalVariable(name: "cb", arg: 2, scope: !8632, file: !714, line: 433, type: !754)
!8638 = !DILocalVariable(name: "arg", arg: 3, scope: !8632, file: !714, line: 433, type: !107)
!8639 = !DILocalVariable(name: "dev", scope: !8632, file: !714, line: 435, type: !8640)
!8640 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !743)
!8641 = !DILocalVariable(name: "data", scope: !8632, file: !714, line: 436, type: !8391)
!8642 = !DILocation(line: 0, scope: !8632)
!8643 = !DILocation(line: 438, column: 21, scope: !8644)
!8644 = distinct !DILexicalBlock(scope: !8632, file: !714, line: 438, column: 6)
!8645 = !DILocation(line: 438, column: 6, scope: !8644)
!8646 = !DILocation(line: 438, column: 6, scope: !8632)
!8647 = !DILocation(line: 442, column: 20, scope: !8632)
!8648 = !DILocation(line: 443, column: 17, scope: !8632)
!8649 = !DILocation(line: 443, column: 22, scope: !8632)
!8650 = !DILocation(line: 445, column: 2, scope: !8632)
!8651 = !DILocation(line: 446, column: 1, scope: !8632)
!8652 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !714, file: !714, line: 448, type: !8426, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8653)
!8653 = !{!8654, !8655, !8656}
!8654 = !DILocalVariable(name: "line", arg: 1, scope: !8652, file: !714, line: 448, type: !109)
!8655 = !DILocalVariable(name: "dev", scope: !8652, file: !714, line: 450, type: !8640)
!8656 = !DILocalVariable(name: "data", scope: !8652, file: !714, line: 451, type: !8391)
!8657 = !DILocation(line: 0, scope: !8652)
!8658 = !DILocation(line: 453, column: 17, scope: !8652)
!8659 = !DILocation(line: 453, column: 20, scope: !8652)
!8660 = !DILocation(line: 454, column: 17, scope: !8652)
!8661 = !DILocation(line: 454, column: 22, scope: !8652)
!8662 = !DILocation(line: 455, column: 1, scope: !8652)
!8663 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !906, file: !906, line: 183, type: !944, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !841, retainedNodes: !8664)
!8664 = !{!8665, !8666, !8667, !8668, !8669}
!8665 = !DILocalVariable(name: "dev", arg: 1, scope: !8663, file: !906, line: 183, type: !935)
!8666 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8663, file: !906, line: 184, type: !946)
!8667 = !DILocalVariable(name: "pclken", scope: !8663, file: !906, line: 186, type: !896)
!8668 = !DILocalVariable(name: "reg", scope: !8663, file: !906, line: 187, type: !1486)
!8669 = !DILocalVariable(name: "reg_val", scope: !8663, file: !906, line: 188, type: !110)
!8670 = !DILocation(line: 0, scope: !8663)
!8671 = !DILocation(line: 192, column: 6, scope: !8672)
!8672 = distinct !DILexicalBlock(scope: !8663, file: !906, line: 192, column: 6)
!8673 = !DILocation(line: 192, column: 6, scope: !8663)
!8674 = !DILocation(line: 197, column: 52, scope: !8663)
!8675 = !DILocation(line: 197, column: 8, scope: !8663)
!8676 = !DILocation(line: 198, column: 12, scope: !8663)
!8677 = !DILocation(line: 199, column: 21, scope: !8663)
!8678 = !DILocation(line: 199, column: 10, scope: !8663)
!8679 = !DILocation(line: 200, column: 7, scope: !8663)
!8680 = !DILocation(line: 202, column: 2, scope: !8663)
!8681 = !DILocation(line: 203, column: 1, scope: !8663)
!8682 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !906, file: !906, line: 205, type: !944, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !841, retainedNodes: !8683)
!8683 = !{!8684, !8685, !8686, !8687, !8688}
!8684 = !DILocalVariable(name: "dev", arg: 1, scope: !8682, file: !906, line: 205, type: !935)
!8685 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8682, file: !906, line: 206, type: !946)
!8686 = !DILocalVariable(name: "pclken", scope: !8682, file: !906, line: 208, type: !896)
!8687 = !DILocalVariable(name: "reg", scope: !8682, file: !906, line: 209, type: !1486)
!8688 = !DILocalVariable(name: "reg_val", scope: !8682, file: !906, line: 210, type: !110)
!8689 = !DILocation(line: 0, scope: !8682)
!8690 = !DILocation(line: 214, column: 6, scope: !8691)
!8691 = distinct !DILexicalBlock(scope: !8682, file: !906, line: 214, column: 6)
!8692 = !DILocation(line: 214, column: 6, scope: !8682)
!8693 = !DILocation(line: 219, column: 52, scope: !8682)
!8694 = !DILocation(line: 219, column: 8, scope: !8682)
!8695 = !DILocation(line: 220, column: 12, scope: !8682)
!8696 = !DILocation(line: 221, column: 22, scope: !8682)
!8697 = !DILocation(line: 221, column: 13, scope: !8682)
!8698 = !DILocation(line: 221, column: 10, scope: !8682)
!8699 = !DILocation(line: 222, column: 7, scope: !8682)
!8700 = !DILocation(line: 224, column: 2, scope: !8682)
!8701 = !DILocation(line: 225, column: 1, scope: !8682)
!8702 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !906, file: !906, line: 262, type: !960, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !841, retainedNodes: !8703)
!8703 = !{!8704, !8705, !8706, !8707, !8708, !8709, !8710, !8711}
!8704 = !DILocalVariable(name: "clock", arg: 1, scope: !8702, file: !906, line: 262, type: !935)
!8705 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8702, file: !906, line: 263, type: !946)
!8706 = !DILocalVariable(name: "rate", arg: 3, scope: !8702, file: !906, line: 264, type: !902)
!8707 = !DILocalVariable(name: "pclken", scope: !8702, file: !906, line: 266, type: !896)
!8708 = !DILocalVariable(name: "ahb_clock", scope: !8702, file: !906, line: 273, type: !110)
!8709 = !DILocalVariable(name: "apb1_clock", scope: !8702, file: !906, line: 274, type: !110)
!8710 = !DILocalVariable(name: "apb2_clock", scope: !8702, file: !906, line: 276, type: !110)
!8711 = !DILocalVariable(name: "ahb3_clock", scope: !8702, file: !906, line: 286, type: !110)
!8712 = !DILocation(line: 0, scope: !8702)
!8713 = !DILocation(line: 273, column: 23, scope: !8702)
!8714 = !DILocation(line: 299, column: 18, scope: !8702)
!8715 = !DILocation(line: 299, column: 2, scope: !8702)
!8716 = !DILocation(line: 274, column: 24, scope: !8702)
!8717 = !DILocation(line: 319, column: 3, scope: !8718)
!8718 = distinct !DILexicalBlock(scope: !8702, file: !906, line: 299, column: 23)
!8719 = !DILocation(line: 276, column: 24, scope: !8702)
!8720 = !DILocation(line: 323, column: 3, scope: !8718)
!8721 = !DILocation(line: 346, column: 33, scope: !8718)
!8722 = !DILocation(line: 346, column: 11, scope: !8718)
!8723 = !DILocation(line: 350, column: 3, scope: !8718)
!8724 = !DILocation(line: 354, column: 33, scope: !8718)
!8725 = !DILocation(line: 354, column: 11, scope: !8718)
!8726 = !DILocation(line: 358, column: 3, scope: !8718)
!8727 = !DILocation(line: 374, column: 3, scope: !8718)
!8728 = !DILocation(line: 379, column: 3, scope: !8718)
!8729 = !DILocation(line: 0, scope: !8718)
!8730 = !DILocation(line: 396, column: 1, scope: !8702)
!8731 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !906, file: !906, line: 227, type: !976, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !841, retainedNodes: !8732)
!8732 = !{!8733, !8734, !8735, !8736, !8737, !8738, !8739, !8740}
!8733 = !DILocalVariable(name: "dev", arg: 1, scope: !8731, file: !906, line: 227, type: !935)
!8734 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8731, file: !906, line: 228, type: !946)
!8735 = !DILocalVariable(name: "data", arg: 3, scope: !8731, file: !906, line: 229, type: !107)
!8736 = !DILocalVariable(name: "pclken", scope: !8731, file: !906, line: 233, type: !896)
!8737 = !DILocalVariable(name: "reg", scope: !8731, file: !906, line: 234, type: !1486)
!8738 = !DILocalVariable(name: "reg_val", scope: !8731, file: !906, line: 235, type: !110)
!8739 = !DILocalVariable(name: "dt_val", scope: !8731, file: !906, line: 235, type: !110)
!8740 = !DILocalVariable(name: "err", scope: !8731, file: !906, line: 236, type: !109)
!8741 = !DILocation(line: 0, scope: !8731)
!8742 = !DILocation(line: 241, column: 30, scope: !8731)
!8743 = !DILocation(line: 241, column: 8, scope: !8731)
!8744 = !DILocation(line: 242, column: 10, scope: !8745)
!8745 = distinct !DILexicalBlock(scope: !8731, file: !906, line: 242, column: 6)
!8746 = !DILocation(line: 242, column: 6, scope: !8731)
!8747 = !DILocation(line: 247, column: 11, scope: !8731)
!8748 = !DILocation(line: 248, column: 6, scope: !8731)
!8749 = !DILocation(line: 247, column: 44, scope: !8731)
!8750 = !DILocation(line: 250, column: 6, scope: !8731)
!8751 = !DILocation(line: 249, column: 52, scope: !8731)
!8752 = !DILocation(line: 249, column: 8, scope: !8731)
!8753 = !DILocation(line: 251, column: 12, scope: !8731)
!8754 = !DILocation(line: 252, column: 10, scope: !8731)
!8755 = !DILocation(line: 253, column: 7, scope: !8731)
!8756 = !DILocation(line: 255, column: 2, scope: !8731)
!8757 = !DILocation(line: 260, column: 1, scope: !8731)
!8758 = distinct !DISubprogram(name: "enabled_clock", scope: !906, file: !906, line: 100, type: !8759, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !841, retainedNodes: !8761)
!8759 = !DISubroutineType(types: !8760)
!8760 = !{!109, !110}
!8761 = !{!8762, !8763}
!8762 = !DILocalVariable(name: "src_clk", arg: 1, scope: !8758, file: !906, line: 100, type: !110)
!8763 = !DILocalVariable(name: "r", scope: !8758, file: !906, line: 102, type: !109)
!8764 = !DILocation(line: 0, scope: !8758)
!8765 = !DILocation(line: 104, column: 2, scope: !8758)
!8766 = !DILocation(line: 180, column: 2, scope: !8758)
!8767 = !DILocation(line: 181, column: 1, scope: !8758)
!8768 = distinct !DISubprogram(name: "get_bus_clock", scope: !906, file: !906, line: 79, type: !8769, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !841, retainedNodes: !8771)
!8769 = !DISubroutineType(types: !8770)
!8770 = !{!110, !110, !110}
!8771 = !{!8772, !8773}
!8772 = !DILocalVariable(name: "clock", arg: 1, scope: !8768, file: !906, line: 79, type: !110)
!8773 = !DILocalVariable(name: "prescaler", arg: 2, scope: !8768, file: !906, line: 79, type: !110)
!8774 = !DILocation(line: 0, scope: !8768)
!8775 = !DILocation(line: 81, column: 15, scope: !8768)
!8776 = !DILocation(line: 81, column: 2, scope: !8768)
!8777 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !906, file: !906, line: 68, type: !8778, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !841, retainedNodes: !8780)
!8778 = !DISubroutineType(types: !8779)
!8779 = !{!110, !110, !109, !109, !109}
!8780 = !{!8781, !8782, !8783, !8784}
!8781 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !8777, file: !906, line: 68, type: !110)
!8782 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !8777, file: !906, line: 69, type: !109)
!8783 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !8777, file: !906, line: 70, type: !109)
!8784 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !8777, file: !906, line: 71, type: !109)
!8785 = !DILocation(line: 0, scope: !8777)
!8786 = !DILocation(line: 75, column: 22, scope: !8777)
!8787 = !DILocation(line: 76, column: 13, scope: !8777)
!8788 = !DILocation(line: 75, column: 34, scope: !8777)
!8789 = !DILocation(line: 75, column: 2, scope: !8777)
!8790 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !906, file: !906, line: 641, type: !933, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !841, retainedNodes: !8791)
!8791 = !{!8792, !8793, !8794}
!8792 = !DILocalVariable(name: "dev", arg: 1, scope: !8790, file: !906, line: 641, type: !935)
!8793 = !DILocalVariable(name: "old_flash_freq", scope: !8790, file: !906, line: 664, type: !110)
!8794 = !DILocalVariable(name: "new_flash_freq", scope: !8790, file: !906, line: 665, type: !110)
!8795 = !DILocation(line: 0, scope: !8790)
!8796 = !DILocation(line: 646, column: 2, scope: !8790)
!8797 = !DILocation(line: 667, column: 19, scope: !8790)
!8798 = !DILocation(line: 674, column: 21, scope: !8799)
!8799 = distinct !DILexicalBlock(scope: !8790, file: !906, line: 674, column: 6)
!8800 = !DILocation(line: 674, column: 6, scope: !8790)
!8801 = !DILocation(line: 675, column: 3, scope: !8802)
!8802 = distinct !DILexicalBlock(scope: !8799, file: !906, line: 674, column: 59)
!8803 = !DILocation(line: 676, column: 2, scope: !8802)
!8804 = !DILocation(line: 680, column: 2, scope: !8790)
!8805 = !DILocation(line: 683, column: 2, scope: !8790)
!8806 = !DILocation(line: 690, column: 3, scope: !8807)
!8807 = distinct !DILexicalBlock(scope: !8808, file: !906, line: 689, column: 9)
!8808 = distinct !DILexicalBlock(scope: !8790, file: !906, line: 685, column: 6)
!8809 = !DILocation(line: 695, column: 2, scope: !8790)
!8810 = !DILocation(line: 696, column: 2, scope: !8790)
!8811 = !DILocation(line: 696, column: 9, scope: !8790)
!8812 = !DILocation(line: 696, column: 34, scope: !8790)
!8813 = distinct !{!8813, !8810, !8814}
!8814 = !DILocation(line: 697, column: 2, scope: !8790)
!8815 = !DILocation(line: 720, column: 21, scope: !8816)
!8816 = distinct !DILexicalBlock(scope: !8790, file: !906, line: 720, column: 6)
!8817 = !DILocation(line: 720, column: 6, scope: !8790)
!8818 = !DILocation(line: 721, column: 3, scope: !8819)
!8819 = distinct !DILexicalBlock(scope: !8816, file: !906, line: 720, column: 60)
!8820 = !DILocation(line: 722, column: 2, scope: !8819)
!8821 = !DILocation(line: 725, column: 18, scope: !8790)
!8822 = !DILocation(line: 728, column: 2, scope: !8790)
!8823 = !DILocation(line: 730, column: 2, scope: !8790)
!8824 = !DILocation(line: 745, column: 2, scope: !8790)
!8825 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !8826, file: !8826, line: 3275, type: !6573, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !841, retainedNodes: !2106)
!8826 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8827 = !DILocation(line: 3277, column: 21, scope: !8825)
!8828 = !DILocation(line: 3277, column: 3, scope: !8825)
!8829 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !906, file: !906, line: 507, type: !3155, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !841, retainedNodes: !2106)
!8830 = !DILocation(line: 516, column: 4, scope: !8831)
!8831 = distinct !DILexicalBlock(scope: !8832, file: !906, line: 515, column: 10)
!8832 = distinct !DILexicalBlock(scope: !8833, file: !906, line: 513, column: 7)
!8833 = distinct !DILexicalBlock(scope: !8834, file: !906, line: 510, column: 37)
!8834 = distinct !DILexicalBlock(scope: !8829, file: !906, line: 510, column: 6)
!8835 = !DILocation(line: 526, column: 3, scope: !8833)
!8836 = !DILocation(line: 527, column: 3, scope: !8833)
!8837 = !DILocation(line: 527, column: 10, scope: !8833)
!8838 = !DILocation(line: 527, column: 31, scope: !8833)
!8839 = distinct !{!8839, !8836, !8840}
!8840 = !DILocation(line: 529, column: 3, scope: !8833)
!8841 = !DILocation(line: 583, column: 3, scope: !8842)
!8842 = distinct !DILexicalBlock(scope: !8843, file: !906, line: 577, column: 37)
!8843 = distinct !DILexicalBlock(scope: !8829, file: !906, line: 577, column: 6)
!8844 = !DILocation(line: 584, column: 3, scope: !8842)
!8845 = !DILocation(line: 584, column: 10, scope: !8842)
!8846 = !DILocation(line: 584, column: 31, scope: !8842)
!8847 = distinct !{!8847, !8844, !8848}
!8848 = !DILocation(line: 585, column: 3, scope: !8842)
!8849 = !DILocation(line: 627, column: 1, scope: !8829)
!8850 = distinct !DISubprogram(name: "set_up_plls", scope: !906, file: !906, line: 448, type: !3155, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !841, retainedNodes: !2106)
!8851 = !DILocation(line: 460, column: 6, scope: !8852)
!8852 = distinct !DILexicalBlock(scope: !8850, file: !906, line: 460, column: 6)
!8853 = !DILocation(line: 460, column: 31, scope: !8852)
!8854 = !DILocation(line: 460, column: 6, scope: !8850)
!8855 = !DILocation(line: 461, column: 3, scope: !8856)
!8856 = distinct !DILexicalBlock(scope: !8852, file: !906, line: 460, column: 67)
!8857 = !DILocation(line: 462, column: 3, scope: !8856)
!8858 = !DILocation(line: 463, column: 2, scope: !8856)
!8859 = !DILocation(line: 464, column: 2, scope: !8850)
!8860 = !DILocation(line: 488, column: 2, scope: !8850)
!8861 = !DILocation(line: 492, column: 2, scope: !8850)
!8862 = !DILocation(line: 496, column: 2, scope: !8850)
!8863 = !DILocation(line: 499, column: 2, scope: !8850)
!8864 = !DILocation(line: 500, column: 2, scope: !8850)
!8865 = !DILocation(line: 500, column: 9, scope: !8850)
!8866 = !DILocation(line: 500, column: 30, scope: !8850)
!8867 = distinct !{!8867, !8864, !8868}
!8868 = !DILocation(line: 502, column: 2, scope: !8850)
!8869 = !DILocation(line: 505, column: 1, scope: !8850)
!8870 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8826, file: !8826, line: 3224, type: !6583, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !841, retainedNodes: !8871)
!8871 = !{!8872}
!8872 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8870, file: !8826, line: 3224, type: !110)
!8873 = !DILocation(line: 0, scope: !8870)
!8874 = !DILocation(line: 3226, column: 3, scope: !8870)
!8875 = !DILocation(line: 3227, column: 1, scope: !8870)
!8876 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8826, file: !8826, line: 3188, type: !6583, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !841, retainedNodes: !8877)
!8877 = !{!8878}
!8878 = !DILocalVariable(name: "Source", arg: 1, scope: !8876, file: !8826, line: 3188, type: !110)
!8879 = !DILocation(line: 0, scope: !8876)
!8880 = !DILocation(line: 3190, column: 3, scope: !8876)
!8881 = !DILocation(line: 3191, column: 1, scope: !8876)
!8882 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8826, file: !8826, line: 3204, type: !6573, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !841, retainedNodes: !2106)
!8883 = !DILocation(line: 3206, column: 21, scope: !8882)
!8884 = !DILocation(line: 3206, column: 3, scope: !8882)
!8885 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8826, file: !8826, line: 3240, type: !6583, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !841, retainedNodes: !8886)
!8886 = !{!8887}
!8887 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8885, file: !8826, line: 3240, type: !110)
!8888 = !DILocation(line: 0, scope: !8885)
!8889 = !DILocation(line: 3242, column: 3, scope: !8885)
!8890 = !DILocation(line: 3243, column: 1, scope: !8885)
!8891 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8826, file: !8826, line: 3256, type: !6583, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !841, retainedNodes: !8892)
!8892 = !{!8893}
!8893 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8891, file: !8826, line: 3256, type: !110)
!8894 = !DILocation(line: 0, scope: !8891)
!8895 = !DILocation(line: 3258, column: 3, scope: !8891)
!8896 = !DILocation(line: 3259, column: 1, scope: !8891)
!8897 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !906, file: !906, line: 409, type: !3155, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !841, retainedNodes: !2106)
!8898 = !DILocation(line: 412, column: 6, scope: !8899)
!8899 = distinct !DILexicalBlock(scope: !8897, file: !906, line: 412, column: 6)
!8900 = !DILocation(line: 412, column: 27, scope: !8899)
!8901 = !DILocation(line: 412, column: 6, scope: !8897)
!8902 = !DILocation(line: 414, column: 3, scope: !8903)
!8903 = distinct !DILexicalBlock(scope: !8899, file: !906, line: 412, column: 33)
!8904 = !DILocation(line: 415, column: 3, scope: !8903)
!8905 = !DILocation(line: 415, column: 10, scope: !8903)
!8906 = !DILocation(line: 415, column: 31, scope: !8903)
!8907 = distinct !{!8907, !8904, !8908}
!8908 = !DILocation(line: 417, column: 3, scope: !8903)
!8909 = !DILocation(line: 421, column: 2, scope: !8897)
!8910 = !DILocation(line: 422, column: 2, scope: !8897)
!8911 = !DILocation(line: 422, column: 9, scope: !8897)
!8912 = !DILocation(line: 422, column: 34, scope: !8897)
!8913 = distinct !{!8913, !8910, !8914}
!8914 = !DILocation(line: 423, column: 2, scope: !8897)
!8915 = !DILocation(line: 424, column: 1, scope: !8897)
!8916 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !8826, file: !8826, line: 4195, type: !3155, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !841, retainedNodes: !2106)
!8917 = !DILocation(line: 4197, column: 3, scope: !8916)
!8918 = !DILocation(line: 4198, column: 1, scope: !8916)
!8919 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8826, file: !8826, line: 4184, type: !3155, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !841, retainedNodes: !2106)
!8920 = !DILocation(line: 4186, column: 3, scope: !8919)
!8921 = !DILocation(line: 4187, column: 1, scope: !8919)
!8922 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8826, file: !8826, line: 4205, type: !6573, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !841, retainedNodes: !2106)
!8923 = !DILocation(line: 4207, column: 11, scope: !8922)
!8924 = !DILocation(line: 4207, column: 44, scope: !8922)
!8925 = !DILocation(line: 4207, column: 3, scope: !8922)
!8926 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8826, file: !8826, line: 3007, type: !6573, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !841, retainedNodes: !2106)
!8927 = !DILocation(line: 3009, column: 11, scope: !8926)
!8928 = !DILocation(line: 3009, column: 44, scope: !8926)
!8929 = !DILocation(line: 3009, column: 3, scope: !8926)
!8930 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8826, file: !8826, line: 2987, type: !3155, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !841, retainedNodes: !2106)
!8931 = !DILocation(line: 2989, column: 3, scope: !8930)
!8932 = !DILocation(line: 2990, column: 1, scope: !8930)
!8933 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8826, file: !8826, line: 2939, type: !3155, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !841, retainedNodes: !2106)
!8934 = !DILocation(line: 2941, column: 3, scope: !8933)
!8935 = !DILocation(line: 2942, column: 1, scope: !8933)
!8936 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8826, file: !8826, line: 2949, type: !3155, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !841, retainedNodes: !2106)
!8937 = !DILocation(line: 2951, column: 3, scope: !8936)
!8938 = !DILocation(line: 2952, column: 1, scope: !8936)
!8939 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8826, file: !8826, line: 2969, type: !6573, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !841, retainedNodes: !2106)
!8940 = !DILocation(line: 2971, column: 11, scope: !8939)
!8941 = !DILocation(line: 2971, column: 44, scope: !8939)
!8942 = !DILocation(line: 2971, column: 3, scope: !8939)
!8943 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !8826, file: !8826, line: 3143, type: !3155, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !841, retainedNodes: !2106)
!8944 = !DILocation(line: 3145, column: 3, scope: !8943)
!8945 = !DILocation(line: 3146, column: 1, scope: !8943)
!8946 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !8826, file: !8826, line: 3163, type: !6573, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !841, retainedNodes: !2106)
!8947 = !DILocation(line: 3165, column: 11, scope: !8946)
!8948 = !DILocation(line: 3165, column: 46, scope: !8946)
!8949 = !DILocation(line: 3165, column: 3, scope: !8946)
!8950 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !8951, file: !8951, line: 40, type: !6573, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2942, retainedNodes: !2106)
!8951 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8952 = !DILocation(line: 45, column: 3, scope: !8953)
!8953 = distinct !DILexicalBlock(scope: !8954, file: !8951, line: 44, column: 44)
!8954 = distinct !DILexicalBlock(scope: !8955, file: !8951, line: 44, column: 13)
!8955 = distinct !DILexicalBlock(scope: !8950, file: !8951, line: 42, column: 6)
!8956 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !8951, file: !8951, line: 56, type: !3155, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2942, retainedNodes: !2106)
!8957 = !DILocation(line: 58, column: 2, scope: !8956)
!8958 = !DILocation(line: 62, column: 1, scope: !8956)
!8959 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8826, file: !8826, line: 4304, type: !8960, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2942, retainedNodes: !8962)
!8960 = !DISubroutineType(types: !8961)
!8961 = !{null, !110, !110, !110, !110}
!8962 = !{!8963, !8964, !8965, !8966}
!8963 = !DILocalVariable(name: "Source", arg: 1, scope: !8959, file: !8826, line: 4304, type: !110)
!8964 = !DILocalVariable(name: "PLLM", arg: 2, scope: !8959, file: !8826, line: 4304, type: !110)
!8965 = !DILocalVariable(name: "PLLN", arg: 3, scope: !8959, file: !8826, line: 4304, type: !110)
!8966 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !8959, file: !8826, line: 4304, type: !110)
!8967 = !DILocation(line: 0, scope: !8959)
!8968 = !DILocation(line: 4306, column: 3, scope: !8959)
!8969 = !DILocation(line: 4308, column: 3, scope: !8959)
!8970 = !DILocation(line: 4310, column: 3, scope: !8959)
!8971 = !DILocation(line: 4312, column: 1, scope: !8959)
!8972 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !8951, file: !8951, line: 69, type: !3155, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2942, retainedNodes: !2106)
!8973 = !DILocation(line: 72, column: 2, scope: !8972)
!8974 = !DILocation(line: 73, column: 1, scope: !8972)
!8975 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !8976, file: !8976, line: 1185, type: !6583, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2942, retainedNodes: !8977)
!8976 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8977 = !{!8978, !8979}
!8978 = !DILocalVariable(name: "Periphs", arg: 1, scope: !8975, file: !8976, line: 1185, type: !110)
!8979 = !DILocalVariable(name: "tmpreg", scope: !8975, file: !8976, line: 1187, type: !316)
!8980 = !DILocation(line: 0, scope: !8975)
!8981 = !DILocation(line: 1187, column: 3, scope: !8975)
!8982 = !DILocation(line: 1187, column: 17, scope: !8975)
!8983 = !DILocation(line: 1188, column: 3, scope: !8975)
!8984 = !DILocation(line: 1190, column: 12, scope: !8975)
!8985 = !DILocation(line: 1190, column: 10, scope: !8975)
!8986 = !DILocation(line: 1191, column: 9, scope: !8975)
!8987 = !DILocation(line: 1192, column: 1, scope: !8975)
!8988 = distinct !DISubprogram(name: "uart_console_init", scope: !1037, file: !1037, line: 588, type: !1014, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !980, retainedNodes: !8989)
!8989 = !{!8990}
!8990 = !DILocalVariable(name: "arg", arg: 1, scope: !8988, file: !1037, line: 588, type: !992)
!8991 = !DILocation(line: 0, scope: !8988)
!8992 = !DILocation(line: 593, column: 7, scope: !8993)
!8993 = distinct !DILexicalBlock(scope: !8988, file: !1037, line: 593, column: 6)
!8994 = !DILocation(line: 593, column: 6, scope: !8988)
!8995 = !DILocation(line: 597, column: 2, scope: !8988)
!8996 = !DILocation(line: 599, column: 2, scope: !8988)
!8997 = !DILocation(line: 600, column: 1, scope: !8988)
!8998 = distinct !DISubprogram(name: "device_is_ready", scope: !8999, file: !8999, line: 47, type: !9000, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !980, retainedNodes: !9002)
!8999 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/simple")
!9000 = !DISubroutineType(types: !9001)
!9001 = !{!347, !992}
!9002 = !{!9003}
!9003 = !DILocalVariable(name: "dev", arg: 1, scope: !8998, file: !8999, line: 47, type: !992)
!9004 = !DILocation(line: 0, scope: !8998)
!9005 = !DILocation(line: 55, column: 2, scope: !9006)
!9006 = distinct !DILexicalBlock(scope: !8998, file: !8999, line: 55, column: 2)
!9007 = !{i64 2155297867}
!9008 = !DILocation(line: 56, column: 9, scope: !8998)
!9009 = !DILocation(line: 56, column: 2, scope: !8998)
!9010 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1037, file: !1037, line: 573, type: !3155, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !980, retainedNodes: !2106)
!9011 = !DILocation(line: 576, column: 2, scope: !9010)
!9012 = !DILocation(line: 579, column: 2, scope: !9010)
!9013 = !DILocation(line: 581, column: 1, scope: !9010)
!9014 = distinct !DISubprogram(name: "console_out", scope: !1037, file: !1037, line: 77, type: !303, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !980, retainedNodes: !9015)
!9015 = !{!9016}
!9016 = !DILocalVariable(name: "c", arg: 1, scope: !9014, file: !1037, line: 77, type: !109)
!9017 = !DILocation(line: 0, scope: !9014)
!9018 = !DILocation(line: 89, column: 11, scope: !9019)
!9019 = distinct !DILexicalBlock(scope: !9014, file: !1037, line: 89, column: 6)
!9020 = !DILocation(line: 89, column: 6, scope: !9014)
!9021 = !DILocation(line: 90, column: 3, scope: !9022)
!9022 = distinct !DILexicalBlock(scope: !9019, file: !1037, line: 89, column: 17)
!9023 = !DILocation(line: 91, column: 2, scope: !9022)
!9024 = !DILocation(line: 92, column: 34, scope: !9014)
!9025 = !DILocation(line: 92, column: 2, scope: !9014)
!9026 = !DILocation(line: 94, column: 2, scope: !9014)
!9027 = distinct !DISubprogram(name: "uart_poll_out", scope: !9028, file: !9028, line: 95, type: !1010, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !980, retainedNodes: !9029)
!9028 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/simple")
!9029 = !{!9030, !9031}
!9030 = !DILocalVariable(name: "dev", arg: 1, scope: !9027, file: !9028, line: 95, type: !992)
!9031 = !DILocalVariable(name: "out_char", arg: 2, scope: !9027, file: !9028, line: 95, type: !179)
!9032 = !DILocation(line: 0, scope: !9027)
!9033 = !DILocation(line: 105, column: 2, scope: !9034)
!9034 = distinct !DILexicalBlock(scope: !9027, file: !9028, line: 105, column: 2)
!9035 = !{i64 2155381258}
!9036 = !DILocation(line: 106, column: 2, scope: !9027)
!9037 = !DILocation(line: 107, column: 1, scope: !9027)
!9038 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !986, file: !986, line: 574, type: !1010, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !980, retainedNodes: !9039)
!9039 = !{!9040, !9041, !9042}
!9040 = !DILocalVariable(name: "dev", arg: 1, scope: !9038, file: !986, line: 574, type: !992)
!9041 = !DILocalVariable(name: "out_char", arg: 2, scope: !9038, file: !986, line: 575, type: !179)
!9042 = !DILocalVariable(name: "api", scope: !9038, file: !986, line: 577, type: !983)
!9043 = !DILocation(line: 0, scope: !9038)
!9044 = !DILocation(line: 578, column: 40, scope: !9038)
!9045 = !DILocation(line: 580, column: 7, scope: !9038)
!9046 = !DILocation(line: 580, column: 2, scope: !9038)
!9047 = !DILocation(line: 581, column: 1, scope: !9038)
!9048 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !336, file: !336, line: 730, type: !9000, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !980, retainedNodes: !9049)
!9049 = !{!9050}
!9050 = !DILocalVariable(name: "dev", arg: 1, scope: !9048, file: !336, line: 730, type: !992)
!9051 = !DILocation(line: 0, scope: !9048)
!9052 = !DILocation(line: 732, column: 9, scope: !9048)
!9053 = !DILocation(line: 732, column: 2, scope: !9048)
!9054 = distinct !DISubprogram(name: "uart_register_input", scope: !1037, file: !1037, line: 560, type: !9055, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !980, retainedNodes: !9102)
!9055 = !DISubroutineType(types: !9056)
!9056 = !{null, !9057, !9057, !9099}
!9057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9058, size: 32)
!9058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !118, line: 2208, size: 160, elements: !9059)
!9059 = !{!9060}
!9060 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !9058, file: !118, line: 2209, baseType: !9061, size: 160)
!9061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !118, line: 1709, size: 160, elements: !9062)
!9062 = !{!9063, !9076, !9080}
!9063 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !9061, file: !118, line: 1710, baseType: !9064, size: 64)
!9064 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !9065, line: 46, baseType: !9066)
!9065 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !9065, line: 41, size: 64, elements: !9067)
!9067 = !{!9068, !9075}
!9068 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9066, file: !9065, line: 42, baseType: !9069, size: 32)
!9069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9070, size: 32)
!9070 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !9065, line: 39, baseType: !9071)
!9071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !9065, line: 35, size: 32, elements: !9072)
!9072 = !{!9073}
!9073 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !9071, file: !9065, line: 36, baseType: !9074, size: 32)
!9074 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !9065, line: 32, baseType: !110)
!9075 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9066, file: !9065, line: 43, baseType: !9069, size: 32, offset: 32)
!9076 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9061, file: !118, line: 1711, baseType: !9077, size: 32, offset: 64)
!9077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !9078)
!9078 = !{!9079}
!9079 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !9077, file: !251, line: 52, baseType: !22, size: 32)
!9080 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9061, file: !118, line: 1712, baseType: !9081, size: 64, offset: 96)
!9081 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !9082)
!9082 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !9083)
!9083 = !{!9084}
!9084 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9082, file: !122, line: 232, baseType: !9085, size: 64)
!9085 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !9086)
!9086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !9087)
!9087 = !{!9088, !9094}
!9088 = !DIDerivedType(tag: DW_TAG_member, scope: !9086, file: !127, line: 38, baseType: !9089, size: 32)
!9089 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9086, file: !127, line: 38, size: 32, elements: !9090)
!9090 = !{!9091, !9093}
!9091 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9089, file: !127, line: 39, baseType: !9092, size: 32)
!9092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9086, size: 32)
!9093 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9089, file: !127, line: 40, baseType: !9092, size: 32)
!9094 = !DIDerivedType(tag: DW_TAG_member, scope: !9086, file: !127, line: 42, baseType: !9095, size: 32, offset: 32)
!9095 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9086, file: !127, line: 42, size: 32, elements: !9096)
!9096 = !{!9097, !9098}
!9097 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9095, file: !127, line: 43, baseType: !9092, size: 32)
!9098 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9095, file: !127, line: 44, baseType: !9092, size: 32)
!9099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9100, size: 32)
!9100 = !DISubroutineType(types: !9101)
!9101 = !{!178, !285, !178}
!9102 = !{!9103, !9104, !9105}
!9103 = !DILocalVariable(name: "avail", arg: 1, scope: !9054, file: !1037, line: 560, type: !9057)
!9104 = !DILocalVariable(name: "lines", arg: 2, scope: !9054, file: !1037, line: 560, type: !9057)
!9105 = !DILocalVariable(name: "completion", arg: 3, scope: !9054, file: !1037, line: 561, type: !9099)
!9106 = !DILocation(line: 0, scope: !9054)
!9107 = !DILocation(line: 566, column: 1, scope: !9054)
!9108 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1217, file: !1217, line: 523, type: !1073, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1046, retainedNodes: !9109)
!9109 = !{!9110, !9111, !9112, !9113, !9114}
!9110 = !DILocalVariable(name: "dev", arg: 1, scope: !9108, file: !1217, line: 523, type: !1075)
!9111 = !DILocalVariable(name: "pin", arg: 2, scope: !9108, file: !1217, line: 524, type: !1090)
!9112 = !DILocalVariable(name: "flags", arg: 3, scope: !9108, file: !1217, line: 524, type: !1091)
!9113 = !DILocalVariable(name: "err", scope: !9108, file: !1217, line: 526, type: !109)
!9114 = !DILocalVariable(name: "pincfg", scope: !9108, file: !1217, line: 527, type: !109)
!9115 = !DILocation(line: 0, scope: !9108)
!9116 = !DILocation(line: 527, column: 2, scope: !9108)
!9117 = !DILocation(line: 532, column: 8, scope: !9108)
!9118 = !DILocation(line: 533, column: 10, scope: !9119)
!9119 = distinct !DILexicalBlock(scope: !9108, file: !1217, line: 533, column: 6)
!9120 = !DILocation(line: 533, column: 6, scope: !9108)
!9121 = !DILocation(line: 543, column: 13, scope: !9122)
!9122 = distinct !DILexicalBlock(scope: !9108, file: !1217, line: 543, column: 6)
!9123 = !DILocation(line: 543, column: 28, scope: !9122)
!9124 = !DILocation(line: 543, column: 6, scope: !9108)
!9125 = !DILocation(line: 544, column: 14, scope: !9126)
!9126 = distinct !DILexicalBlock(scope: !9127, file: !1217, line: 544, column: 7)
!9127 = distinct !DILexicalBlock(scope: !9122, file: !1217, line: 543, column: 34)
!9128 = !DILocation(line: 544, column: 39, scope: !9126)
!9129 = !DILocation(line: 544, column: 7, scope: !9127)
!9130 = !DILocation(line: 545, column: 38, scope: !9131)
!9131 = distinct !DILexicalBlock(scope: !9126, file: !1217, line: 544, column: 45)
!9132 = !DILocation(line: 545, column: 4, scope: !9131)
!9133 = !DILocation(line: 546, column: 3, scope: !9131)
!9134 = !DILocation(line: 546, column: 21, scope: !9135)
!9135 = distinct !DILexicalBlock(scope: !9126, file: !1217, line: 546, column: 14)
!9136 = !DILocation(line: 546, column: 45, scope: !9135)
!9137 = !DILocation(line: 546, column: 14, scope: !9126)
!9138 = !DILocation(line: 547, column: 40, scope: !9139)
!9139 = distinct !DILexicalBlock(scope: !9135, file: !1217, line: 546, column: 51)
!9140 = !DILocation(line: 547, column: 4, scope: !9139)
!9141 = !DILocation(line: 548, column: 3, scope: !9139)
!9142 = !DILocation(line: 551, column: 32, scope: !9108)
!9143 = !DILocation(line: 551, column: 37, scope: !9108)
!9144 = !DILocation(line: 551, column: 2, scope: !9108)
!9145 = !DILocation(line: 554, column: 6, scope: !9108)
!9146 = !DILocation(line: 562, column: 1, scope: !9108)
!9147 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1217, file: !1217, line: 410, type: !9148, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1046, retainedNodes: !9150)
!9148 = !DISubroutineType(types: !9149)
!9149 = !{!109, !1075, !902}
!9150 = !{!9151, !9152, !9153, !9155}
!9151 = !DILocalVariable(name: "dev", arg: 1, scope: !9147, file: !1217, line: 410, type: !1075)
!9152 = !DILocalVariable(name: "value", arg: 2, scope: !9147, file: !1217, line: 410, type: !902)
!9153 = !DILocalVariable(name: "cfg", scope: !9147, file: !1217, line: 412, type: !9154)
!9154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1326, size: 32)
!9155 = !DILocalVariable(name: "gpio", scope: !9147, file: !1217, line: 413, type: !1148)
!9156 = !DILocation(line: 0, scope: !9147)
!9157 = !DILocation(line: 412, column: 45, scope: !9147)
!9158 = !DILocation(line: 413, column: 44, scope: !9147)
!9159 = !DILocation(line: 415, column: 11, scope: !9147)
!9160 = !DILocation(line: 415, column: 9, scope: !9147)
!9161 = !DILocation(line: 417, column: 2, scope: !9147)
!9162 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1217, file: !1217, line: 420, type: !1100, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1046, retainedNodes: !9163)
!9163 = !{!9164, !9165, !9166, !9167, !9168, !9169}
!9164 = !DILocalVariable(name: "dev", arg: 1, scope: !9162, file: !1217, line: 420, type: !1075)
!9165 = !DILocalVariable(name: "mask", arg: 2, scope: !9162, file: !1217, line: 421, type: !1102)
!9166 = !DILocalVariable(name: "value", arg: 3, scope: !9162, file: !1217, line: 422, type: !1097)
!9167 = !DILocalVariable(name: "cfg", scope: !9162, file: !1217, line: 424, type: !9154)
!9168 = !DILocalVariable(name: "gpio", scope: !9162, file: !1217, line: 425, type: !1148)
!9169 = !DILocalVariable(name: "port_value", scope: !9162, file: !1217, line: 426, type: !110)
!9170 = !DILocation(line: 0, scope: !9162)
!9171 = !DILocation(line: 424, column: 45, scope: !9162)
!9172 = !DILocation(line: 425, column: 44, scope: !9162)
!9173 = !DILocation(line: 430, column: 15, scope: !9162)
!9174 = !DILocation(line: 431, column: 46, scope: !9162)
!9175 = !DILocation(line: 431, column: 44, scope: !9162)
!9176 = !DILocation(line: 431, column: 61, scope: !9162)
!9177 = !DILocation(line: 431, column: 53, scope: !9162)
!9178 = !DILocation(line: 431, column: 2, scope: !9162)
!9179 = !DILocation(line: 435, column: 2, scope: !9162)
!9180 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1217, file: !1217, line: 438, type: !1105, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1046, retainedNodes: !9181)
!9181 = !{!9182, !9183, !9184, !9185}
!9182 = !DILocalVariable(name: "dev", arg: 1, scope: !9180, file: !1217, line: 438, type: !1075)
!9183 = !DILocalVariable(name: "pins", arg: 2, scope: !9180, file: !1217, line: 439, type: !1102)
!9184 = !DILocalVariable(name: "cfg", scope: !9180, file: !1217, line: 441, type: !9154)
!9185 = !DILocalVariable(name: "gpio", scope: !9180, file: !1217, line: 442, type: !1148)
!9186 = !DILocation(line: 0, scope: !9180)
!9187 = !DILocation(line: 441, column: 45, scope: !9180)
!9188 = !DILocation(line: 442, column: 44, scope: !9180)
!9189 = !DILocation(line: 448, column: 2, scope: !9180)
!9190 = !DILocation(line: 450, column: 2, scope: !9180)
!9191 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1217, file: !1217, line: 453, type: !1105, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1046, retainedNodes: !9192)
!9192 = !{!9193, !9194, !9195, !9196}
!9193 = !DILocalVariable(name: "dev", arg: 1, scope: !9191, file: !1217, line: 453, type: !1075)
!9194 = !DILocalVariable(name: "pins", arg: 2, scope: !9191, file: !1217, line: 454, type: !1102)
!9195 = !DILocalVariable(name: "cfg", scope: !9191, file: !1217, line: 456, type: !9154)
!9196 = !DILocalVariable(name: "gpio", scope: !9191, file: !1217, line: 457, type: !1148)
!9197 = !DILocation(line: 0, scope: !9191)
!9198 = !DILocation(line: 456, column: 45, scope: !9191)
!9199 = !DILocation(line: 457, column: 44, scope: !9191)
!9200 = !DILocation(line: 467, column: 2, scope: !9191)
!9201 = !DILocation(line: 470, column: 2, scope: !9191)
!9202 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1217, file: !1217, line: 473, type: !1105, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1046, retainedNodes: !9203)
!9203 = !{!9204, !9205, !9206, !9207}
!9204 = !DILocalVariable(name: "dev", arg: 1, scope: !9202, file: !1217, line: 473, type: !1075)
!9205 = !DILocalVariable(name: "pins", arg: 2, scope: !9202, file: !1217, line: 474, type: !1102)
!9206 = !DILocalVariable(name: "cfg", scope: !9202, file: !1217, line: 476, type: !9154)
!9207 = !DILocalVariable(name: "gpio", scope: !9202, file: !1217, line: 477, type: !1148)
!9208 = !DILocation(line: 0, scope: !9202)
!9209 = !DILocation(line: 476, column: 45, scope: !9202)
!9210 = !DILocation(line: 477, column: 44, scope: !9202)
!9211 = !DILocation(line: 484, column: 2, scope: !9202)
!9212 = !DILocation(line: 487, column: 2, scope: !9202)
!9213 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1217, file: !1217, line: 594, type: !1111, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1046, retainedNodes: !9214)
!9214 = !{!9215, !9216, !9217, !9218, !9219, !9220, !9222, !9223, !9224}
!9215 = !DILocalVariable(name: "dev", arg: 1, scope: !9213, file: !1217, line: 594, type: !1075)
!9216 = !DILocalVariable(name: "pin", arg: 2, scope: !9213, file: !1217, line: 595, type: !1090)
!9217 = !DILocalVariable(name: "mode", arg: 3, scope: !9213, file: !1217, line: 596, type: !1049)
!9218 = !DILocalVariable(name: "trig", arg: 4, scope: !9213, file: !1217, line: 597, type: !1055)
!9219 = !DILocalVariable(name: "cfg", scope: !9213, file: !1217, line: 599, type: !9154)
!9220 = !DILocalVariable(name: "data", scope: !9213, file: !1217, line: 600, type: !9221)
!9221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1280, size: 32)
!9222 = !DILocalVariable(name: "edge", scope: !9213, file: !1217, line: 601, type: !109)
!9223 = !DILocalVariable(name: "err", scope: !9213, file: !1217, line: 602, type: !109)
!9224 = !DILabel(scope: !9213, name: "exit", file: !1217, line: 643)
!9225 = !DILocation(line: 0, scope: !9213)
!9226 = !DILocation(line: 599, column: 45, scope: !9213)
!9227 = !DILocation(line: 604, column: 6, scope: !9213)
!9228 = !DILocation(line: 605, column: 34, scope: !9229)
!9229 = distinct !DILexicalBlock(scope: !9230, file: !1217, line: 605, column: 7)
!9230 = distinct !DILexicalBlock(scope: !9231, file: !1217, line: 604, column: 38)
!9231 = distinct !DILexicalBlock(scope: !9213, file: !1217, line: 604, column: 6)
!9232 = !DILocation(line: 605, column: 7, scope: !9229)
!9233 = !DILocation(line: 605, column: 47, scope: !9229)
!9234 = !DILocation(line: 605, column: 39, scope: !9229)
!9235 = !DILocation(line: 605, column: 7, scope: !9230)
!9236 = !DILocation(line: 606, column: 4, scope: !9237)
!9237 = distinct !DILexicalBlock(scope: !9229, file: !1217, line: 605, column: 53)
!9238 = !DILocation(line: 607, column: 4, scope: !9237)
!9239 = !DILocation(line: 608, column: 4, scope: !9237)
!9240 = !DILocation(line: 609, column: 3, scope: !9237)
!9241 = !DILocation(line: 600, column: 38, scope: !9213)
!9242 = !DILocation(line: 620, column: 30, scope: !9243)
!9243 = distinct !DILexicalBlock(scope: !9213, file: !1217, line: 620, column: 6)
!9244 = !DILocation(line: 620, column: 6, scope: !9243)
!9245 = !DILocation(line: 620, column: 57, scope: !9243)
!9246 = !DILocation(line: 620, column: 6, scope: !9213)
!9247 = !DILocation(line: 625, column: 29, scope: !9213)
!9248 = !DILocation(line: 625, column: 2, scope: !9213)
!9249 = !DILocation(line: 627, column: 2, scope: !9213)
!9250 = !DILocation(line: 630, column: 3, scope: !9251)
!9251 = distinct !DILexicalBlock(scope: !9213, file: !1217, line: 627, column: 16)
!9252 = !DILocation(line: 633, column: 3, scope: !9251)
!9253 = !DILocation(line: 636, column: 3, scope: !9251)
!9254 = !DILocation(line: 639, column: 2, scope: !9213)
!9255 = !DILocation(line: 641, column: 2, scope: !9213)
!9256 = !DILocation(line: 643, column: 1, scope: !9213)
!9257 = !DILocation(line: 644, column: 2, scope: !9213)
!9258 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1217, file: !1217, line: 647, type: !1115, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1046, retainedNodes: !9259)
!9259 = !{!9260, !9261, !9262, !9263}
!9260 = !DILocalVariable(name: "dev", arg: 1, scope: !9258, file: !1217, line: 647, type: !1075)
!9261 = !DILocalVariable(name: "callback", arg: 2, scope: !9258, file: !1217, line: 648, type: !1117)
!9262 = !DILocalVariable(name: "set", arg: 3, scope: !9258, file: !1217, line: 649, type: !347)
!9263 = !DILocalVariable(name: "data", scope: !9258, file: !1217, line: 651, type: !9221)
!9264 = !DILocation(line: 0, scope: !9258)
!9265 = !DILocation(line: 651, column: 38, scope: !9258)
!9266 = !DILocation(line: 653, column: 37, scope: !9258)
!9267 = !DILocation(line: 653, column: 9, scope: !9258)
!9268 = !DILocation(line: 653, column: 2, scope: !9258)
!9269 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !9270, file: !9270, line: 38, type: !9271, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1046, retainedNodes: !9274)
!9270 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9271 = !DISubroutineType(types: !9272)
!9272 = !{!109, !9273, !1117, !347}
!9273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1286, size: 32)
!9274 = !{!9275, !9276, !9277}
!9275 = !DILocalVariable(name: "callbacks", arg: 1, scope: !9269, file: !9270, line: 38, type: !9273)
!9276 = !DILocalVariable(name: "callback", arg: 2, scope: !9269, file: !9270, line: 39, type: !1117)
!9277 = !DILocalVariable(name: "set", arg: 3, scope: !9269, file: !9270, line: 40, type: !347)
!9278 = !DILocation(line: 0, scope: !9269)
!9279 = !DILocation(line: 42, column: 2, scope: !9280)
!9280 = distinct !DILexicalBlock(scope: !9281, file: !9270, line: 42, column: 2)
!9281 = distinct !DILexicalBlock(scope: !9269, file: !9270, line: 42, column: 2)
!9282 = !DILocation(line: 42, column: 2, scope: !9281)
!9283 = !DILocation(line: 42, column: 2, scope: !9284)
!9284 = distinct !DILexicalBlock(scope: !9280, file: !9270, line: 42, column: 2)
!9285 = !DILocation(line: 43, column: 2, scope: !9286)
!9286 = distinct !DILexicalBlock(scope: !9287, file: !9270, line: 43, column: 2)
!9287 = distinct !DILexicalBlock(scope: !9269, file: !9270, line: 43, column: 2)
!9288 = !DILocation(line: 43, column: 2, scope: !9287)
!9289 = !DILocation(line: 43, column: 2, scope: !9290)
!9290 = distinct !DILexicalBlock(scope: !9286, file: !9270, line: 43, column: 2)
!9291 = !DILocation(line: 45, column: 7, scope: !9292)
!9292 = distinct !DILexicalBlock(scope: !9269, file: !9270, line: 45, column: 6)
!9293 = !DILocation(line: 45, column: 6, scope: !9269)
!9294 = !DILocation(line: 46, column: 56, scope: !9295)
!9295 = distinct !DILexicalBlock(scope: !9296, file: !9270, line: 46, column: 7)
!9296 = distinct !DILexicalBlock(scope: !9292, file: !9270, line: 45, column: 38)
!9297 = !DILocation(line: 46, column: 8, scope: !9295)
!9298 = !DILocation(line: 46, column: 7, scope: !9296)
!9299 = !DILocation(line: 51, column: 13, scope: !9292)
!9300 = !DILocation(line: 56, column: 43, scope: !9301)
!9301 = distinct !DILexicalBlock(scope: !9302, file: !9270, line: 55, column: 11)
!9302 = distinct !DILexicalBlock(scope: !9269, file: !9270, line: 55, column: 6)
!9303 = !DILocation(line: 56, column: 3, scope: !9301)
!9304 = !DILocation(line: 57, column: 2, scope: !9301)
!9305 = !DILocation(line: 60, column: 1, scope: !9269)
!9306 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1122, file: !1122, line: 261, type: !9307, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1046, retainedNodes: !9309)
!9307 = !DISubroutineType(types: !9308)
!9308 = !{!347, !9273}
!9309 = !{!9310}
!9310 = !DILocalVariable(name: "list", arg: 1, scope: !9306, file: !1122, line: 261, type: !9273)
!9311 = !DILocation(line: 0, scope: !9306)
!9312 = !DILocation(line: 261, column: 1, scope: !9306)
!9313 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1122, file: !1122, line: 417, type: !9314, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1046, retainedNodes: !9316)
!9314 = !DISubroutineType(types: !9315)
!9315 = !{!347, !9273, !1290}
!9316 = !{!9317, !9318, !9319, !9320}
!9317 = !DILocalVariable(name: "list", arg: 1, scope: !9313, file: !1122, line: 417, type: !9273)
!9318 = !DILocalVariable(name: "node", arg: 2, scope: !9313, file: !1122, line: 417, type: !1290)
!9319 = !DILocalVariable(name: "prev", scope: !9313, file: !1122, line: 417, type: !1290)
!9320 = !DILocalVariable(name: "test", scope: !9313, file: !1122, line: 417, type: !1290)
!9321 = !DILocation(line: 0, scope: !9313)
!9322 = !DILocation(line: 417, column: 1, scope: !9323)
!9323 = distinct !DILexicalBlock(scope: !9313, file: !1122, line: 417, column: 1)
!9324 = !DILocation(line: 417, column: 1, scope: !9325)
!9325 = distinct !DILexicalBlock(scope: !9323, file: !1122, line: 417, column: 1)
!9326 = !DILocation(line: 417, column: 1, scope: !9327)
!9327 = distinct !DILexicalBlock(scope: !9328, file: !1122, line: 417, column: 1)
!9328 = distinct !DILexicalBlock(scope: !9325, file: !1122, line: 417, column: 1)
!9329 = !DILocation(line: 417, column: 1, scope: !9328)
!9330 = distinct !{!9330, !9322, !9322}
!9331 = !DILocation(line: 417, column: 1, scope: !9332)
!9332 = distinct !DILexicalBlock(scope: !9327, file: !1122, line: 417, column: 1)
!9333 = !DILocation(line: 417, column: 1, scope: !9313)
!9334 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1122, file: !1122, line: 298, type: !9335, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1046, retainedNodes: !9337)
!9335 = !DISubroutineType(types: !9336)
!9336 = !{null, !9273, !1290}
!9337 = !{!9338, !9339}
!9338 = !DILocalVariable(name: "list", arg: 1, scope: !9334, file: !1122, line: 298, type: !9273)
!9339 = !DILocalVariable(name: "node", arg: 2, scope: !9334, file: !1122, line: 298, type: !1290)
!9340 = !DILocation(line: 0, scope: !9334)
!9341 = !DILocation(line: 298, column: 1, scope: !9334)
!9342 = !DILocation(line: 298, column: 1, scope: !9343)
!9343 = distinct !DILexicalBlock(scope: !9334, file: !1122, line: 298, column: 1)
!9344 = !DILocation(line: 298, column: 1, scope: !9345)
!9345 = distinct !DILexicalBlock(scope: !9343, file: !1122, line: 298, column: 1)
!9346 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1122, file: !1122, line: 231, type: !9347, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1046, retainedNodes: !9349)
!9347 = !DISubroutineType(types: !9348)
!9348 = !{!1290, !9273}
!9349 = !{!9350}
!9350 = !DILocalVariable(name: "list", arg: 1, scope: !9346, file: !1122, line: 231, type: !9273)
!9351 = !DILocation(line: 0, scope: !9346)
!9352 = !DILocation(line: 233, column: 15, scope: !9346)
!9353 = !DILocation(line: 233, column: 2, scope: !9346)
!9354 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1122, file: !1122, line: 209, type: !9355, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1046, retainedNodes: !9357)
!9355 = !DISubroutineType(types: !9356)
!9356 = !{null, !1290, !1290}
!9357 = !{!9358, !9359}
!9358 = !DILocalVariable(name: "parent", arg: 1, scope: !9354, file: !1122, line: 209, type: !1290)
!9359 = !DILocalVariable(name: "child", arg: 2, scope: !9354, file: !1122, line: 209, type: !1290)
!9360 = !DILocation(line: 0, scope: !9354)
!9361 = !DILocation(line: 211, column: 10, scope: !9354)
!9362 = !DILocation(line: 211, column: 15, scope: !9354)
!9363 = !DILocation(line: 212, column: 1, scope: !9354)
!9364 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1122, file: !1122, line: 214, type: !9335, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1046, retainedNodes: !9365)
!9365 = !{!9366, !9367}
!9366 = !DILocalVariable(name: "list", arg: 1, scope: !9364, file: !1122, line: 214, type: !9273)
!9367 = !DILocalVariable(name: "node", arg: 2, scope: !9364, file: !1122, line: 214, type: !1290)
!9368 = !DILocation(line: 0, scope: !9364)
!9369 = !DILocation(line: 216, column: 8, scope: !9364)
!9370 = !DILocation(line: 216, column: 13, scope: !9364)
!9371 = !DILocation(line: 217, column: 1, scope: !9364)
!9372 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1122, file: !1122, line: 243, type: !9347, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1046, retainedNodes: !9373)
!9373 = !{!9374}
!9374 = !DILocalVariable(name: "list", arg: 1, scope: !9372, file: !1122, line: 243, type: !9273)
!9375 = !DILocation(line: 0, scope: !9372)
!9376 = !DILocation(line: 245, column: 15, scope: !9372)
!9377 = !DILocation(line: 245, column: 2, scope: !9372)
!9378 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1122, file: !1122, line: 219, type: !9335, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1046, retainedNodes: !9379)
!9379 = !{!9380, !9381}
!9380 = !DILocalVariable(name: "list", arg: 1, scope: !9378, file: !1122, line: 219, type: !9273)
!9381 = !DILocalVariable(name: "node", arg: 2, scope: !9378, file: !1122, line: 219, type: !1290)
!9382 = !DILocation(line: 0, scope: !9378)
!9383 = !DILocation(line: 221, column: 8, scope: !9378)
!9384 = !DILocation(line: 221, column: 13, scope: !9378)
!9385 = !DILocation(line: 222, column: 1, scope: !9378)
!9386 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1122, file: !1122, line: 401, type: !9387, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1046, retainedNodes: !9389)
!9387 = !DISubroutineType(types: !9388)
!9388 = !{null, !9273, !1290, !1290}
!9389 = !{!9390, !9391, !9392}
!9390 = !DILocalVariable(name: "list", arg: 1, scope: !9386, file: !1122, line: 401, type: !9273)
!9391 = !DILocalVariable(name: "prev_node", arg: 2, scope: !9386, file: !1122, line: 401, type: !1290)
!9392 = !DILocalVariable(name: "node", arg: 3, scope: !9386, file: !1122, line: 401, type: !1290)
!9393 = !DILocation(line: 0, scope: !9386)
!9394 = !DILocation(line: 401, column: 1, scope: !9395)
!9395 = distinct !DILexicalBlock(scope: !9386, file: !1122, line: 401, column: 1)
!9396 = !DILocation(line: 0, scope: !9395)
!9397 = !DILocation(line: 401, column: 1, scope: !9386)
!9398 = !DILocation(line: 401, column: 1, scope: !9399)
!9399 = distinct !DILexicalBlock(scope: !9395, file: !1122, line: 401, column: 1)
!9400 = !DILocation(line: 401, column: 1, scope: !9401)
!9401 = distinct !DILexicalBlock(scope: !9399, file: !1122, line: 401, column: 1)
!9402 = !DILocation(line: 401, column: 1, scope: !9403)
!9403 = distinct !DILexicalBlock(scope: !9401, file: !1122, line: 401, column: 1)
!9404 = !DILocation(line: 401, column: 1, scope: !9405)
!9405 = distinct !DILexicalBlock(scope: !9395, file: !1122, line: 401, column: 1)
!9406 = !DILocation(line: 401, column: 1, scope: !9407)
!9407 = distinct !DILexicalBlock(scope: !9405, file: !1122, line: 401, column: 1)
!9408 = !DILocation(line: 401, column: 1, scope: !9409)
!9409 = distinct !DILexicalBlock(scope: !9407, file: !1122, line: 401, column: 1)
!9410 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1122, file: !1122, line: 285, type: !9411, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1046, retainedNodes: !9413)
!9411 = !DISubroutineType(types: !9412)
!9412 = !{!1290, !1290}
!9413 = !{!9414}
!9414 = !DILocalVariable(name: "node", arg: 1, scope: !9410, file: !1122, line: 285, type: !1290)
!9415 = !DILocation(line: 0, scope: !9410)
!9416 = !DILocation(line: 285, column: 1, scope: !9410)
!9417 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1122, file: !1122, line: 274, type: !9411, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1046, retainedNodes: !9418)
!9418 = !{!9419}
!9419 = !DILocalVariable(name: "node", arg: 1, scope: !9417, file: !1122, line: 274, type: !1290)
!9420 = !DILocation(line: 0, scope: !9417)
!9421 = !DILocation(line: 274, column: 1, scope: !9417)
!9422 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1122, file: !1122, line: 204, type: !9411, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1046, retainedNodes: !9423)
!9423 = !{!9424}
!9424 = !DILocalVariable(name: "node", arg: 1, scope: !9422, file: !1122, line: 204, type: !1290)
!9425 = !DILocation(line: 0, scope: !9422)
!9426 = !DILocation(line: 206, column: 15, scope: !9422)
!9427 = !DILocation(line: 206, column: 2, scope: !9422)
!9428 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1217, file: !1217, line: 342, type: !303, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1046, retainedNodes: !9429)
!9429 = !{!9430, !9431, !9432}
!9430 = !DILocalVariable(name: "pin", arg: 1, scope: !9428, file: !1217, line: 342, type: !109)
!9431 = !DILocalVariable(name: "line", scope: !9428, file: !1217, line: 344, type: !110)
!9432 = !DILocalVariable(name: "port", scope: !9428, file: !1217, line: 345, type: !109)
!9433 = !DILocation(line: 0, scope: !9428)
!9434 = !DILocation(line: 344, column: 18, scope: !9428)
!9435 = !{i32 983040, i32 0}
!9436 = !DILocation(line: 356, column: 9, scope: !9428)
!9437 = !DILocation(line: 370, column: 2, scope: !9428)
!9438 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1217, file: !1217, line: 37, type: !757, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1046, retainedNodes: !9439)
!9439 = !{!9440, !9441, !9442}
!9440 = !DILocalVariable(name: "line", arg: 1, scope: !9438, file: !1217, line: 37, type: !109)
!9441 = !DILocalVariable(name: "arg", arg: 2, scope: !9438, file: !1217, line: 37, type: !107)
!9442 = !DILocalVariable(name: "data", scope: !9438, file: !1217, line: 39, type: !9221)
!9443 = !DILocation(line: 0, scope: !9438)
!9444 = !DILocation(line: 41, column: 29, scope: !9438)
!9445 = !DILocation(line: 41, column: 39, scope: !9438)
!9446 = !DILocation(line: 41, column: 44, scope: !9438)
!9447 = !DILocation(line: 41, column: 2, scope: !9438)
!9448 = !DILocation(line: 42, column: 1, scope: !9438)
!9449 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1217, file: !1217, line: 376, type: !9450, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1046, retainedNodes: !9452)
!9450 = !DISubroutineType(types: !9451)
!9451 = !{!109, !109, !109}
!9452 = !{!9453, !9454, !9455, !9457, !9458}
!9453 = !DILocalVariable(name: "port", arg: 1, scope: !9449, file: !1217, line: 376, type: !109)
!9454 = !DILocalVariable(name: "pin", arg: 2, scope: !9449, file: !1217, line: 376, type: !109)
!9455 = !DILocalVariable(name: "clk", scope: !9449, file: !1217, line: 386, type: !9456)
!9456 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1075)
!9457 = !DILocalVariable(name: "pclken", scope: !9449, file: !1217, line: 387, type: !1333)
!9458 = !DILocalVariable(name: "ret", scope: !9449, file: !1217, line: 396, type: !109)
!9459 = !DILocation(line: 0, scope: !9449)
!9460 = !DILocation(line: 387, column: 2, scope: !9449)
!9461 = !DILocation(line: 387, column: 22, scope: !9449)
!9462 = !DILocation(line: 399, column: 8, scope: !9449)
!9463 = !DILocation(line: 400, column: 10, scope: !9464)
!9464 = distinct !DILexicalBlock(scope: !9449, file: !1217, line: 400, column: 6)
!9465 = !DILocation(line: 400, column: 6, scope: !9449)
!9466 = !DILocation(line: 405, column: 2, scope: !9449)
!9467 = !DILocation(line: 407, column: 2, scope: !9449)
!9468 = !DILocation(line: 408, column: 1, scope: !9449)
!9469 = distinct !DISubprogram(name: "clock_control_on", scope: !850, file: !850, line: 123, type: !1182, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1046, retainedNodes: !9470)
!9470 = !{!9471, !9472, !9473}
!9471 = !DILocalVariable(name: "dev", arg: 1, scope: !9469, file: !850, line: 123, type: !1075)
!9472 = !DILocalVariable(name: "sys", arg: 2, scope: !9469, file: !850, line: 124, type: !946)
!9473 = !DILocalVariable(name: "api", scope: !9469, file: !850, line: 126, type: !1175)
!9474 = !DILocation(line: 0, scope: !9469)
!9475 = !DILocation(line: 127, column: 49, scope: !9469)
!9476 = !DILocation(line: 129, column: 14, scope: !9469)
!9477 = !DILocation(line: 129, column: 9, scope: !9469)
!9478 = !DILocation(line: 129, column: 2, scope: !9469)
!9479 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1217, file: !1217, line: 311, type: !8583, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1046, retainedNodes: !9480)
!9480 = !{!9481, !9482, !9483}
!9481 = !DILocalVariable(name: "port", arg: 1, scope: !9479, file: !1217, line: 311, type: !109)
!9482 = !DILocalVariable(name: "pin", arg: 2, scope: !9479, file: !1217, line: 311, type: !109)
!9483 = !DILocalVariable(name: "line", scope: !9479, file: !1217, line: 313, type: !110)
!9484 = !DILocation(line: 0, scope: !9479)
!9485 = !DILocation(line: 313, column: 18, scope: !9479)
!9486 = !DILocation(line: 337, column: 2, scope: !9479)
!9487 = !DILocation(line: 340, column: 1, scope: !9479)
!9488 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1217, file: !1217, line: 295, type: !9489, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1046, retainedNodes: !9491)
!9489 = !DISubroutineType(types: !9490)
!9490 = !{!110, !109}
!9491 = !{!9492}
!9492 = !DILocalVariable(name: "pin", arg: 1, scope: !9488, file: !1217, line: 295, type: !109)
!9493 = !DILocation(line: 0, scope: !9488)
!9494 = !DILocation(line: 307, column: 46, scope: !9488)
!9495 = !DILocation(line: 307, column: 27, scope: !9488)
!9496 = !DILocation(line: 307, column: 32, scope: !9488)
!9497 = !DILocation(line: 307, column: 14, scope: !9488)
!9498 = !DILocation(line: 307, column: 39, scope: !9488)
!9499 = !DILocation(line: 307, column: 2, scope: !9488)
!9500 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !6186, file: !6186, line: 671, type: !9501, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1046, retainedNodes: !9503)
!9501 = !DISubroutineType(types: !9502)
!9502 = !{null, !110, !110}
!9503 = !{!9504, !9505}
!9504 = !DILocalVariable(name: "Port", arg: 1, scope: !9500, file: !6186, line: 671, type: !110)
!9505 = !DILocalVariable(name: "Line", arg: 2, scope: !9500, file: !6186, line: 671, type: !110)
!9506 = !DILocation(line: 0, scope: !9500)
!9507 = !DILocation(line: 673, column: 3, scope: !9500)
!9508 = !DILocalVariable(name: "value", arg: 1, scope: !9509, file: !6486, line: 373, type: !110)
!9509 = distinct !DISubprogram(name: "__RBIT", scope: !6486, file: !6486, line: 373, type: !7773, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1046, retainedNodes: !9510)
!9510 = !{!9508, !9511}
!9511 = !DILocalVariable(name: "result", scope: !9509, file: !6486, line: 375, type: !110)
!9512 = !DILocation(line: 0, scope: !9509, inlinedAt: !9513)
!9513 = distinct !DILocation(line: 673, column: 3, scope: !9500)
!9514 = !DILocation(line: 380, column: 4, scope: !9509, inlinedAt: !9513)
!9515 = !{i64 3734368}
!9516 = !DILocalVariable(name: "value", arg: 1, scope: !9517, file: !6486, line: 403, type: !110)
!9517 = distinct !DISubprogram(name: "__CLZ", scope: !6486, file: !6486, line: 403, type: !9518, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1046, retainedNodes: !9520)
!9518 = !DISubroutineType(types: !9519)
!9519 = !{!178, !110}
!9520 = !{!9516}
!9521 = !DILocation(line: 0, scope: !9517, inlinedAt: !9522)
!9522 = distinct !DILocation(line: 673, column: 3, scope: !9500)
!9523 = !DILocation(line: 414, column: 7, scope: !9517, inlinedAt: !9522)
!9524 = !DILocation(line: 674, column: 1, scope: !9500)
!9525 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !9270, file: !9270, line: 69, type: !9526, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1046, retainedNodes: !9528)
!9526 = !DISubroutineType(types: !9527)
!9527 = !{null, !9273, !1075, !110}
!9528 = !{!9529, !9530, !9531, !9532, !9533}
!9529 = !DILocalVariable(name: "list", arg: 1, scope: !9525, file: !9270, line: 69, type: !9273)
!9530 = !DILocalVariable(name: "port", arg: 2, scope: !9525, file: !9270, line: 70, type: !1075)
!9531 = !DILocalVariable(name: "pins", arg: 3, scope: !9525, file: !9270, line: 71, type: !110)
!9532 = !DILocalVariable(name: "cb", scope: !9525, file: !9270, line: 73, type: !1117)
!9533 = !DILocalVariable(name: "tmp", scope: !9525, file: !9270, line: 73, type: !1117)
!9534 = !DILocation(line: 0, scope: !9525)
!9535 = !DILocation(line: 75, column: 2, scope: !9536)
!9536 = distinct !DILexicalBlock(scope: !9525, file: !9270, line: 75, column: 2)
!9537 = !DILocation(line: 0, scope: !9536)
!9538 = !DILocation(line: 76, column: 11, scope: !9539)
!9539 = distinct !DILexicalBlock(scope: !9540, file: !9270, line: 76, column: 7)
!9540 = distinct !DILexicalBlock(scope: !9541, file: !9270, line: 75, column: 57)
!9541 = distinct !DILexicalBlock(scope: !9536, file: !9270, line: 75, column: 2)
!9542 = !DILocation(line: 76, column: 20, scope: !9539)
!9543 = !DILocation(line: 76, column: 7, scope: !9540)
!9544 = !DILocation(line: 77, column: 4, scope: !9545)
!9545 = distinct !DILexicalBlock(scope: !9546, file: !9270, line: 77, column: 4)
!9546 = distinct !DILexicalBlock(scope: !9547, file: !9270, line: 77, column: 4)
!9547 = distinct !DILexicalBlock(scope: !9539, file: !9270, line: 76, column: 28)
!9548 = !DILocation(line: 77, column: 4, scope: !9546)
!9549 = !DILocation(line: 77, column: 4, scope: !9550)
!9550 = distinct !DILexicalBlock(scope: !9545, file: !9270, line: 77, column: 4)
!9551 = !DILocation(line: 78, column: 4, scope: !9547)
!9552 = !DILocation(line: 79, column: 3, scope: !9547)
!9553 = !DILocation(line: 75, column: 2, scope: !9541)
!9554 = !DILocation(line: 81, column: 1, scope: !9525)
!9555 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !6186, file: !6186, line: 710, type: !7773, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1046, retainedNodes: !9556)
!9556 = !{!9557}
!9557 = !DILocalVariable(name: "Line", arg: 1, scope: !9555, file: !6186, line: 710, type: !110)
!9558 = !DILocation(line: 0, scope: !9555)
!9559 = !DILocation(line: 712, column: 21, scope: !9555)
!9560 = !DILocation(line: 0, scope: !9509, inlinedAt: !9561)
!9561 = distinct !DILocation(line: 712, column: 76, scope: !9555)
!9562 = !DILocation(line: 380, column: 4, scope: !9509, inlinedAt: !9561)
!9563 = !DILocation(line: 0, scope: !9517, inlinedAt: !9564)
!9564 = distinct !DILocation(line: 712, column: 76, scope: !9555)
!9565 = !DILocation(line: 414, column: 7, scope: !9517, inlinedAt: !9564)
!9566 = !DILocation(line: 712, column: 73, scope: !9555)
!9567 = !DILocation(line: 712, column: 3, scope: !9555)
!9568 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !9569, file: !9569, line: 910, type: !9570, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1046, retainedNodes: !9572)
!9569 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9570 = !DISubroutineType(types: !9571)
!9571 = !{null, !1148, !110}
!9572 = !{!9573, !9574}
!9573 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9568, file: !9569, line: 910, type: !1148)
!9574 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9568, file: !9569, line: 910, type: !110)
!9575 = !DILocation(line: 0, scope: !9568)
!9576 = !DILocation(line: 912, column: 3, scope: !9568)
!9577 = !DILocation(line: 913, column: 1, scope: !9568)
!9578 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !9569, file: !9569, line: 823, type: !9579, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1046, retainedNodes: !9581)
!9579 = !DISubroutineType(types: !9580)
!9580 = !{!110, !1148}
!9581 = !{!9582}
!9582 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9578, file: !9569, line: 823, type: !1148)
!9583 = !DILocation(line: 0, scope: !9578)
!9584 = !DILocation(line: 825, column: 21, scope: !9578)
!9585 = !DILocation(line: 825, column: 3, scope: !9578)
!9586 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !9569, file: !9569, line: 812, type: !9570, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1046, retainedNodes: !9587)
!9587 = !{!9588, !9589}
!9588 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9586, file: !9569, line: 812, type: !1148)
!9589 = !DILocalVariable(name: "PortValue", arg: 2, scope: !9586, file: !9569, line: 812, type: !110)
!9590 = !DILocation(line: 0, scope: !9586)
!9591 = !DILocation(line: 814, column: 3, scope: !9586)
!9592 = !DILocation(line: 815, column: 1, scope: !9586)
!9593 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !9569, file: !9569, line: 771, type: !9579, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1046, retainedNodes: !9594)
!9594 = !{!9595}
!9595 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9593, file: !9569, line: 771, type: !1148)
!9596 = !DILocation(line: 0, scope: !9593)
!9597 = !DILocation(line: 773, column: 21, scope: !9593)
!9598 = !DILocation(line: 773, column: 3, scope: !9593)
!9599 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1217, file: !1217, line: 47, type: !9600, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1046, retainedNodes: !9602)
!9600 = !DISubroutineType(types: !9601)
!9601 = !{!109, !1091, !281}
!9602 = !{!9603, !9604}
!9603 = !DILocalVariable(name: "flags", arg: 1, scope: !9599, file: !1217, line: 47, type: !1091)
!9604 = !DILocalVariable(name: "pincfg", arg: 2, scope: !9599, file: !1217, line: 47, type: !281)
!9605 = !DILocation(line: 0, scope: !9599)
!9606 = !DILocation(line: 50, column: 13, scope: !9607)
!9607 = distinct !DILexicalBlock(scope: !9599, file: !1217, line: 50, column: 6)
!9608 = !DILocation(line: 50, column: 28, scope: !9607)
!9609 = !DILocation(line: 50, column: 6, scope: !9599)
!9610 = !DILocation(line: 53, column: 11, scope: !9611)
!9611 = distinct !DILexicalBlock(scope: !9607, file: !1217, line: 50, column: 34)
!9612 = !DILocation(line: 55, column: 14, scope: !9613)
!9613 = distinct !DILexicalBlock(scope: !9611, file: !1217, line: 55, column: 7)
!9614 = !DILocation(line: 55, column: 35, scope: !9613)
!9615 = !DILocation(line: 55, column: 7, scope: !9611)
!9616 = !DILocation(line: 56, column: 14, scope: !9617)
!9617 = distinct !DILexicalBlock(scope: !9618, file: !1217, line: 56, column: 8)
!9618 = distinct !DILexicalBlock(scope: !9613, file: !1217, line: 55, column: 41)
!9619 = !DILocation(line: 56, column: 8, scope: !9618)
!9620 = !DILocation(line: 0, scope: !9613)
!9621 = !DILocation(line: 66, column: 14, scope: !9622)
!9622 = distinct !DILexicalBlock(scope: !9611, file: !1217, line: 66, column: 7)
!9623 = !DILocation(line: 66, column: 30, scope: !9622)
!9624 = !DILocation(line: 66, column: 7, scope: !9611)
!9625 = !DILocation(line: 67, column: 12, scope: !9626)
!9626 = distinct !DILexicalBlock(scope: !9622, file: !1217, line: 66, column: 36)
!9627 = !DILocation(line: 68, column: 3, scope: !9626)
!9628 = !DILocation(line: 68, column: 21, scope: !9629)
!9629 = distinct !DILexicalBlock(scope: !9622, file: !1217, line: 68, column: 14)
!9630 = !DILocation(line: 68, column: 39, scope: !9629)
!9631 = !DILocation(line: 68, column: 14, scope: !9622)
!9632 = !DILocation(line: 69, column: 12, scope: !9633)
!9633 = distinct !DILexicalBlock(scope: !9629, file: !1217, line: 68, column: 45)
!9634 = !DILocation(line: 70, column: 3, scope: !9633)
!9635 = !DILocation(line: 72, column: 21, scope: !9636)
!9636 = distinct !DILexicalBlock(scope: !9607, file: !1217, line: 72, column: 14)
!9637 = !DILocation(line: 72, column: 35, scope: !9636)
!9638 = !DILocation(line: 72, column: 14, scope: !9607)
!9639 = !DILocation(line: 77, column: 14, scope: !9640)
!9640 = distinct !DILexicalBlock(scope: !9641, file: !1217, line: 77, column: 7)
!9641 = distinct !DILexicalBlock(scope: !9636, file: !1217, line: 72, column: 41)
!9642 = !DILocation(line: 77, column: 30, scope: !9640)
!9643 = !DILocation(line: 77, column: 7, scope: !9641)
!9644 = !DILocation(line: 0, scope: !9607)
!9645 = !DILocation(line: 90, column: 1, scope: !9599)
!9646 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1217, file: !1217, line: 157, type: !9647, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1046, retainedNodes: !9649)
!9647 = !DISubroutineType(types: !9648)
!9648 = !{null, !1075, !109, !109, !109}
!9649 = !{!9650, !9651, !9652, !9653, !9654, !9655, !9656, !9657, !9658, !9659, !9660}
!9650 = !DILocalVariable(name: "dev", arg: 1, scope: !9646, file: !1217, line: 157, type: !1075)
!9651 = !DILocalVariable(name: "pin", arg: 2, scope: !9646, file: !1217, line: 157, type: !109)
!9652 = !DILocalVariable(name: "conf", arg: 3, scope: !9646, file: !1217, line: 158, type: !109)
!9653 = !DILocalVariable(name: "func", arg: 4, scope: !9646, file: !1217, line: 158, type: !109)
!9654 = !DILocalVariable(name: "cfg", scope: !9646, file: !1217, line: 160, type: !9154)
!9655 = !DILocalVariable(name: "gpio", scope: !9646, file: !1217, line: 161, type: !1148)
!9656 = !DILocalVariable(name: "pin_ll", scope: !9646, file: !1217, line: 163, type: !109)
!9657 = !DILocalVariable(name: "mode", scope: !9646, file: !1217, line: 227, type: !32)
!9658 = !DILocalVariable(name: "otype", scope: !9646, file: !1217, line: 227, type: !32)
!9659 = !DILocalVariable(name: "ospeed", scope: !9646, file: !1217, line: 227, type: !32)
!9660 = !DILocalVariable(name: "pupd", scope: !9646, file: !1217, line: 227, type: !32)
!9661 = !DILocation(line: 0, scope: !9646)
!9662 = !DILocation(line: 160, column: 45, scope: !9646)
!9663 = !DILocation(line: 161, column: 44, scope: !9646)
!9664 = !DILocation(line: 163, column: 15, scope: !9646)
!9665 = !DILocation(line: 229, column: 14, scope: !9646)
!9666 = !DILocation(line: 246, column: 47, scope: !9646)
!9667 = !DILocation(line: 246, column: 2, scope: !9646)
!9668 = !DILocation(line: 248, column: 43, scope: !9646)
!9669 = !DILocation(line: 248, column: 2, scope: !9646)
!9670 = !DILocation(line: 250, column: 40, scope: !9646)
!9671 = !DILocation(line: 250, column: 2, scope: !9646)
!9672 = !DILocation(line: 252, column: 11, scope: !9673)
!9673 = distinct !DILexicalBlock(scope: !9646, file: !1217, line: 252, column: 6)
!9674 = !DILocation(line: 252, column: 6, scope: !9646)
!9675 = !DILocation(line: 253, column: 11, scope: !9676)
!9676 = distinct !DILexicalBlock(scope: !9677, file: !1217, line: 253, column: 7)
!9677 = distinct !DILexicalBlock(scope: !9673, file: !1217, line: 252, column: 36)
!9678 = !DILocation(line: 253, column: 7, scope: !9677)
!9679 = !DILocation(line: 254, column: 4, scope: !9680)
!9680 = distinct !DILexicalBlock(scope: !9676, file: !1217, line: 253, column: 16)
!9681 = !DILocation(line: 255, column: 3, scope: !9680)
!9682 = !DILocation(line: 256, column: 4, scope: !9683)
!9683 = distinct !DILexicalBlock(scope: !9676, file: !1217, line: 255, column: 10)
!9684 = !DILocation(line: 260, column: 40, scope: !9646)
!9685 = !DILocation(line: 260, column: 2, scope: !9646)
!9686 = !DILocation(line: 265, column: 1, scope: !9646)
!9687 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1217, file: !1217, line: 137, type: !9489, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1046, retainedNodes: !9688)
!9688 = !{!9689, !9690}
!9689 = !DILocalVariable(name: "pin", arg: 1, scope: !9687, file: !1217, line: 137, type: !109)
!9690 = !DILocalVariable(name: "pinval", scope: !9687, file: !1217, line: 139, type: !110)
!9691 = !DILocation(line: 0, scope: !9687)
!9692 = !DILocation(line: 149, column: 13, scope: !9687)
!9693 = !DILocation(line: 151, column: 2, scope: !9687)
!9694 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !9569, file: !9569, line: 342, type: !9695, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1046, retainedNodes: !9697)
!9695 = !DISubroutineType(types: !9696)
!9696 = !{null, !1148, !110, !110}
!9697 = !{!9698, !9699, !9700}
!9698 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9694, file: !9569, line: 342, type: !1148)
!9699 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9694, file: !9569, line: 342, type: !110)
!9700 = !DILocalVariable(name: "OutputType", arg: 3, scope: !9694, file: !9569, line: 342, type: !110)
!9701 = !DILocation(line: 0, scope: !9694)
!9702 = !DILocation(line: 344, column: 3, scope: !9694)
!9703 = !DILocation(line: 345, column: 1, scope: !9694)
!9704 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !9569, file: !9569, line: 413, type: !9695, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1046, retainedNodes: !9705)
!9705 = !{!9706, !9707, !9708}
!9706 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9704, file: !9569, line: 413, type: !1148)
!9707 = !DILocalVariable(name: "Pin", arg: 2, scope: !9704, file: !9569, line: 413, type: !110)
!9708 = !DILocalVariable(name: "Speed", arg: 3, scope: !9704, file: !9569, line: 413, type: !110)
!9709 = !DILocation(line: 0, scope: !9704)
!9710 = !DILocation(line: 415, column: 3, scope: !9704)
!9711 = !DILocation(line: 0, scope: !9509, inlinedAt: !9712)
!9712 = distinct !DILocation(line: 415, column: 3, scope: !9704)
!9713 = !DILocation(line: 380, column: 4, scope: !9509, inlinedAt: !9712)
!9714 = !DILocation(line: 0, scope: !9517, inlinedAt: !9715)
!9715 = distinct !DILocation(line: 415, column: 3, scope: !9704)
!9716 = !DILocation(line: 414, column: 7, scope: !9517, inlinedAt: !9715)
!9717 = !DILocation(line: 0, scope: !9509, inlinedAt: !9718)
!9718 = distinct !DILocation(line: 415, column: 3, scope: !9704)
!9719 = !DILocation(line: 0, scope: !9517, inlinedAt: !9720)
!9720 = distinct !DILocation(line: 415, column: 3, scope: !9704)
!9721 = !DILocation(line: 417, column: 1, scope: !9704)
!9722 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !9569, file: !9569, line: 484, type: !9695, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1046, retainedNodes: !9723)
!9723 = !{!9724, !9725, !9726}
!9724 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9722, file: !9569, line: 484, type: !1148)
!9725 = !DILocalVariable(name: "Pin", arg: 2, scope: !9722, file: !9569, line: 484, type: !110)
!9726 = !DILocalVariable(name: "Pull", arg: 3, scope: !9722, file: !9569, line: 484, type: !110)
!9727 = !DILocation(line: 0, scope: !9722)
!9728 = !DILocation(line: 486, column: 3, scope: !9722)
!9729 = !DILocation(line: 0, scope: !9509, inlinedAt: !9730)
!9730 = distinct !DILocation(line: 486, column: 3, scope: !9722)
!9731 = !DILocation(line: 380, column: 4, scope: !9509, inlinedAt: !9730)
!9732 = !DILocation(line: 0, scope: !9517, inlinedAt: !9733)
!9733 = distinct !DILocation(line: 486, column: 3, scope: !9722)
!9734 = !DILocation(line: 414, column: 7, scope: !9517, inlinedAt: !9733)
!9735 = !DILocation(line: 0, scope: !9509, inlinedAt: !9736)
!9736 = distinct !DILocation(line: 486, column: 3, scope: !9722)
!9737 = !DILocation(line: 0, scope: !9517, inlinedAt: !9738)
!9738 = distinct !DILocation(line: 486, column: 3, scope: !9722)
!9739 = !DILocation(line: 487, column: 1, scope: !9722)
!9740 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !9569, file: !9569, line: 556, type: !9695, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1046, retainedNodes: !9741)
!9741 = !{!9742, !9743, !9744}
!9742 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9740, file: !9569, line: 556, type: !1148)
!9743 = !DILocalVariable(name: "Pin", arg: 2, scope: !9740, file: !9569, line: 556, type: !110)
!9744 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9740, file: !9569, line: 556, type: !110)
!9745 = !DILocation(line: 0, scope: !9740)
!9746 = !DILocation(line: 558, column: 3, scope: !9740)
!9747 = !DILocation(line: 0, scope: !9509, inlinedAt: !9748)
!9748 = distinct !DILocation(line: 558, column: 3, scope: !9740)
!9749 = !DILocation(line: 380, column: 4, scope: !9509, inlinedAt: !9748)
!9750 = !DILocation(line: 0, scope: !9517, inlinedAt: !9751)
!9751 = distinct !DILocation(line: 558, column: 3, scope: !9740)
!9752 = !DILocation(line: 414, column: 7, scope: !9517, inlinedAt: !9751)
!9753 = !DILocation(line: 0, scope: !9509, inlinedAt: !9754)
!9754 = distinct !DILocation(line: 558, column: 3, scope: !9740)
!9755 = !DILocation(line: 0, scope: !9517, inlinedAt: !9756)
!9756 = distinct !DILocation(line: 558, column: 3, scope: !9740)
!9757 = !DILocation(line: 560, column: 1, scope: !9740)
!9758 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !9569, file: !9569, line: 633, type: !9695, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1046, retainedNodes: !9759)
!9759 = !{!9760, !9761, !9762}
!9760 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9758, file: !9569, line: 633, type: !1148)
!9761 = !DILocalVariable(name: "Pin", arg: 2, scope: !9758, file: !9569, line: 633, type: !110)
!9762 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9758, file: !9569, line: 633, type: !110)
!9763 = !DILocation(line: 0, scope: !9758)
!9764 = !DILocation(line: 635, column: 3, scope: !9758)
!9765 = !DILocation(line: 0, scope: !9509, inlinedAt: !9766)
!9766 = distinct !DILocation(line: 635, column: 3, scope: !9758)
!9767 = !DILocation(line: 380, column: 4, scope: !9509, inlinedAt: !9766)
!9768 = !DILocation(line: 0, scope: !9517, inlinedAt: !9769)
!9769 = distinct !DILocation(line: 635, column: 3, scope: !9758)
!9770 = !DILocation(line: 414, column: 7, scope: !9517, inlinedAt: !9769)
!9771 = !DILocation(line: 0, scope: !9509, inlinedAt: !9772)
!9772 = distinct !DILocation(line: 635, column: 3, scope: !9758)
!9773 = !DILocation(line: 0, scope: !9517, inlinedAt: !9774)
!9774 = distinct !DILocation(line: 635, column: 3, scope: !9758)
!9775 = !DILocation(line: 637, column: 1, scope: !9758)
!9776 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !9569, file: !9569, line: 273, type: !9695, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1046, retainedNodes: !9777)
!9777 = !{!9778, !9779, !9780}
!9778 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9776, file: !9569, line: 273, type: !1148)
!9779 = !DILocalVariable(name: "Pin", arg: 2, scope: !9776, file: !9569, line: 273, type: !110)
!9780 = !DILocalVariable(name: "Mode", arg: 3, scope: !9776, file: !9569, line: 273, type: !110)
!9781 = !DILocation(line: 0, scope: !9776)
!9782 = !DILocation(line: 275, column: 3, scope: !9776)
!9783 = !DILocation(line: 0, scope: !9509, inlinedAt: !9784)
!9784 = distinct !DILocation(line: 275, column: 3, scope: !9776)
!9785 = !DILocation(line: 380, column: 4, scope: !9509, inlinedAt: !9784)
!9786 = !DILocation(line: 0, scope: !9517, inlinedAt: !9787)
!9787 = distinct !DILocation(line: 275, column: 3, scope: !9776)
!9788 = !DILocation(line: 414, column: 7, scope: !9517, inlinedAt: !9787)
!9789 = !DILocation(line: 0, scope: !9509, inlinedAt: !9790)
!9790 = distinct !DILocation(line: 275, column: 3, scope: !9776)
!9791 = !DILocation(line: 0, scope: !9517, inlinedAt: !9792)
!9792 = distinct !DILocation(line: 275, column: 3, scope: !9776)
!9793 = !DILocation(line: 276, column: 1, scope: !9776)
!9794 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1217, file: !1217, line: 698, type: !1230, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1046, retainedNodes: !9795)
!9795 = !{!9796, !9797, !9798}
!9796 = !DILocalVariable(name: "dev", arg: 1, scope: !9794, file: !1217, line: 698, type: !1075)
!9797 = !DILocalVariable(name: "data", scope: !9794, file: !1217, line: 700, type: !9221)
!9798 = !DILocalVariable(name: "ret", scope: !9794, file: !1217, line: 701, type: !109)
!9799 = !DILocation(line: 0, scope: !9794)
!9800 = !DILocation(line: 700, column: 38, scope: !9794)
!9801 = !DILocation(line: 703, column: 8, scope: !9794)
!9802 = !DILocation(line: 703, column: 12, scope: !9794)
!9803 = !DILocation(line: 705, column: 7, scope: !9804)
!9804 = distinct !DILexicalBlock(scope: !9794, file: !1217, line: 705, column: 6)
!9805 = !DILocation(line: 705, column: 6, scope: !9794)
!9806 = !DILocation(line: 722, column: 8, scope: !9794)
!9807 = !DILocation(line: 723, column: 10, scope: !9808)
!9808 = distinct !DILexicalBlock(scope: !9794, file: !1217, line: 723, column: 6)
!9809 = !DILocation(line: 723, column: 6, scope: !9794)
!9810 = !DILocation(line: 731, column: 1, scope: !9794)
!9811 = distinct !DISubprogram(name: "device_is_ready", scope: !8999, file: !8999, line: 47, type: !9812, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1046, retainedNodes: !9814)
!9812 = !DISubroutineType(types: !9813)
!9813 = !{!347, !1075}
!9814 = !{!9815}
!9815 = !DILocalVariable(name: "dev", arg: 1, scope: !9811, file: !8999, line: 47, type: !1075)
!9816 = !DILocation(line: 0, scope: !9811)
!9817 = !DILocation(line: 55, column: 2, scope: !9818)
!9818 = distinct !DILexicalBlock(scope: !9811, file: !8999, line: 55, column: 2)
!9819 = !{i64 2155289074}
!9820 = !DILocation(line: 56, column: 9, scope: !9811)
!9821 = !DILocation(line: 56, column: 2, scope: !9811)
!9822 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1217, file: !1217, line: 270, type: !9823, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1046, retainedNodes: !9825)
!9823 = !DISubroutineType(types: !9824)
!9824 = !{!109, !1075, !347}
!9825 = !{!9826, !9827, !9828, !9829, !9830}
!9826 = !DILocalVariable(name: "dev", arg: 1, scope: !9822, file: !1217, line: 270, type: !1075)
!9827 = !DILocalVariable(name: "on", arg: 2, scope: !9822, file: !1217, line: 270, type: !347)
!9828 = !DILocalVariable(name: "cfg", scope: !9822, file: !1217, line: 272, type: !9154)
!9829 = !DILocalVariable(name: "ret", scope: !9822, file: !1217, line: 273, type: !109)
!9830 = !DILocalVariable(name: "clk", scope: !9822, file: !1217, line: 278, type: !9456)
!9831 = !DILocation(line: 0, scope: !9822)
!9832 = !DILocation(line: 272, column: 45, scope: !9822)
!9833 = !DILocation(line: 282, column: 38, scope: !9834)
!9834 = distinct !DILexicalBlock(scope: !9835, file: !1217, line: 280, column: 10)
!9835 = distinct !DILexicalBlock(scope: !9822, file: !1217, line: 280, column: 6)
!9836 = !DILocation(line: 282, column: 6, scope: !9834)
!9837 = !DILocation(line: 281, column: 9, scope: !9834)
!9838 = !DILocation(line: 293, column: 1, scope: !9822)
!9839 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !336, file: !336, line: 730, type: !9812, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1046, retainedNodes: !9840)
!9840 = !{!9841}
!9841 = !DILocalVariable(name: "dev", arg: 1, scope: !9839, file: !336, line: 730, type: !1075)
!9842 = !DILocation(line: 0, scope: !9839)
!9843 = !DILocation(line: 732, column: 9, scope: !9839)
!9844 = !DILocation(line: 732, column: 2, scope: !9839)
!9845 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1217, file: !1217, line: 496, type: !9846, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1046, retainedNodes: !9848)
!9846 = !DISubroutineType(types: !9847)
!9847 = !{!109, !1075, !109, !109, !109}
!9848 = !{!9849, !9850, !9851, !9852, !9853, !9854}
!9849 = !DILocalVariable(name: "dev", arg: 1, scope: !9845, file: !1217, line: 496, type: !1075)
!9850 = !DILocalVariable(name: "pin", arg: 2, scope: !9845, file: !1217, line: 496, type: !109)
!9851 = !DILocalVariable(name: "conf", arg: 3, scope: !9845, file: !1217, line: 496, type: !109)
!9852 = !DILocalVariable(name: "func", arg: 4, scope: !9845, file: !1217, line: 496, type: !109)
!9853 = !DILocalVariable(name: "ret", scope: !9845, file: !1217, line: 498, type: !109)
!9854 = !DILocalVariable(name: "gpio_out", scope: !9855, file: !1217, line: 508, type: !110)
!9855 = distinct !DILexicalBlock(scope: !9856, file: !1217, line: 507, column: 27)
!9856 = distinct !DILexicalBlock(scope: !9845, file: !1217, line: 507, column: 6)
!9857 = !DILocation(line: 0, scope: !9845)
!9858 = !DILocation(line: 505, column: 2, scope: !9845)
!9859 = !DILocation(line: 507, column: 11, scope: !9856)
!9860 = !DILocation(line: 507, column: 6, scope: !9845)
!9861 = !DILocation(line: 508, column: 28, scope: !9855)
!9862 = !DILocation(line: 0, scope: !9855)
!9863 = !DILocation(line: 510, column: 16, scope: !9864)
!9864 = distinct !DILexicalBlock(scope: !9855, file: !1217, line: 510, column: 7)
!9865 = !DILocation(line: 0, scope: !9864)
!9866 = !DILocation(line: 510, column: 7, scope: !9855)
!9867 = !DILocation(line: 511, column: 4, scope: !9868)
!9868 = distinct !DILexicalBlock(scope: !9864, file: !1217, line: 510, column: 32)
!9869 = !DILocation(line: 512, column: 3, scope: !9868)
!9870 = !DILocation(line: 513, column: 4, scope: !9871)
!9871 = distinct !DILexicalBlock(scope: !9872, file: !1217, line: 512, column: 39)
!9872 = distinct !DILexicalBlock(scope: !9864, file: !1217, line: 512, column: 14)
!9873 = !DILocation(line: 514, column: 3, scope: !9871)
!9874 = !DILocation(line: 518, column: 1, scope: !9845)
!9875 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1490, file: !1490, line: 526, type: !1393, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1351, retainedNodes: !9876)
!9876 = !{!9877, !9878, !9879}
!9877 = !DILocalVariable(name: "dev", arg: 1, scope: !9875, file: !1490, line: 526, type: !1395)
!9878 = !DILocalVariable(name: "c", arg: 2, scope: !9875, file: !1490, line: 526, type: !1007)
!9879 = !DILocalVariable(name: "config", scope: !9875, file: !1490, line: 528, type: !9880)
!9880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1531, size: 32)
!9881 = !DILocation(line: 0, scope: !9875)
!9882 = !DILocation(line: 528, column: 48, scope: !9875)
!9883 = !DILocation(line: 531, column: 40, scope: !9884)
!9884 = distinct !DILexicalBlock(scope: !9875, file: !1490, line: 531, column: 6)
!9885 = !DILocation(line: 531, column: 6, scope: !9884)
!9886 = !DILocation(line: 531, column: 6, scope: !9875)
!9887 = !DILocation(line: 532, column: 34, scope: !9888)
!9888 = distinct !DILexicalBlock(scope: !9884, file: !1490, line: 531, column: 48)
!9889 = !DILocation(line: 532, column: 3, scope: !9888)
!9890 = !DILocation(line: 533, column: 2, scope: !9888)
!9891 = !DILocation(line: 539, column: 42, scope: !9892)
!9892 = distinct !DILexicalBlock(scope: !9875, file: !1490, line: 539, column: 6)
!9893 = !DILocation(line: 539, column: 7, scope: !9892)
!9894 = !DILocation(line: 539, column: 6, scope: !9875)
!9895 = !DILocation(line: 543, column: 52, scope: !9875)
!9896 = !DILocation(line: 543, column: 22, scope: !9875)
!9897 = !DILocation(line: 543, column: 5, scope: !9875)
!9898 = !DILocation(line: 545, column: 2, scope: !9875)
!9899 = !DILocation(line: 546, column: 1, scope: !9875)
!9900 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1490, file: !1490, line: 548, type: !1412, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1351, retainedNodes: !9901)
!9901 = !{!9902, !9903, !9904, !9905}
!9902 = !DILocalVariable(name: "dev", arg: 1, scope: !9900, file: !1490, line: 548, type: !1395)
!9903 = !DILocalVariable(name: "c", arg: 2, scope: !9900, file: !1490, line: 549, type: !179)
!9904 = !DILocalVariable(name: "config", scope: !9900, file: !1490, line: 551, type: !9880)
!9905 = !DILocalVariable(name: "key", scope: !9900, file: !1490, line: 555, type: !32)
!9906 = !DILocation(line: 0, scope: !9900)
!9907 = !DILocation(line: 551, column: 48, scope: !9900)
!9908 = !DILocation(line: 562, column: 2, scope: !9900)
!9909 = !DILocation(line: 563, column: 41, scope: !9910)
!9910 = distinct !DILexicalBlock(scope: !9911, file: !1490, line: 563, column: 7)
!9911 = distinct !DILexicalBlock(scope: !9900, file: !1490, line: 562, column: 12)
!9912 = !DILocation(line: 563, column: 7, scope: !9910)
!9913 = !DILocation(line: 563, column: 7, scope: !9911)
!9914 = !DILocation(line: 55, column: 2, scope: !9915, inlinedAt: !9919)
!9915 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6165, file: !6165, line: 42, type: !6166, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1351, retainedNodes: !9916)
!9916 = !{!9917, !9918}
!9917 = !DILocalVariable(name: "key", scope: !9915, file: !6165, line: 44, type: !32)
!9918 = !DILocalVariable(name: "tmp", scope: !9915, file: !6165, line: 53, type: !32)
!9919 = distinct !DILocation(line: 564, column: 10, scope: !9920)
!9920 = distinct !DILexicalBlock(scope: !9910, file: !1490, line: 563, column: 49)
!9921 = !{i64 2331218}
!9922 = !DILocation(line: 0, scope: !9915, inlinedAt: !9919)
!9923 = !DILocation(line: 565, column: 42, scope: !9924)
!9924 = distinct !DILexicalBlock(scope: !9920, file: !1490, line: 565, column: 8)
!9925 = !DILocation(line: 565, column: 8, scope: !9924)
!9926 = !DILocation(line: 565, column: 8, scope: !9920)
!9927 = !DILocalVariable(name: "key", arg: 1, scope: !9928, file: !6165, line: 84, type: !32)
!9928 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6165, file: !6165, line: 84, type: !6176, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1351, retainedNodes: !9929)
!9929 = !{!9927}
!9930 = !DILocation(line: 0, scope: !9928, inlinedAt: !9931)
!9931 = distinct !DILocation(line: 568, column: 4, scope: !9920)
!9932 = !DILocation(line: 95, column: 2, scope: !9928, inlinedAt: !9931)
!9933 = !{i64 2332035}
!9934 = !DILocation(line: 569, column: 3, scope: !9920)
!9935 = distinct !{!9935, !9908, !9936}
!9936 = !DILocation(line: 570, column: 2, scope: !9900)
!9937 = !DILocation(line: 592, column: 33, scope: !9900)
!9938 = !DILocation(line: 592, column: 2, scope: !9900)
!9939 = !DILocation(line: 0, scope: !9928, inlinedAt: !9940)
!9940 = distinct !DILocation(line: 593, column: 2, scope: !9900)
!9941 = !DILocation(line: 95, column: 2, scope: !9928, inlinedAt: !9940)
!9942 = !DILocation(line: 594, column: 1, scope: !9900)
!9943 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1490, file: !1490, line: 596, type: !1416, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1351, retainedNodes: !9944)
!9944 = !{!9945, !9946, !9947}
!9945 = !DILocalVariable(name: "dev", arg: 1, scope: !9943, file: !1490, line: 596, type: !1395)
!9946 = !DILocalVariable(name: "config", scope: !9943, file: !1490, line: 598, type: !9880)
!9947 = !DILocalVariable(name: "err", scope: !9943, file: !1490, line: 599, type: !110)
!9948 = !DILocation(line: 0, scope: !9943)
!9949 = !DILocation(line: 598, column: 48, scope: !9943)
!9950 = !DILocation(line: 606, column: 40, scope: !9951)
!9951 = distinct !DILexicalBlock(scope: !9943, file: !1490, line: 606, column: 6)
!9952 = !DILocation(line: 606, column: 6, scope: !9951)
!9953 = !DILocation(line: 606, column: 6, scope: !9943)
!9954 = !DILocation(line: 610, column: 39, scope: !9955)
!9955 = distinct !DILexicalBlock(scope: !9943, file: !1490, line: 610, column: 6)
!9956 = !DILocation(line: 610, column: 6, scope: !9955)
!9957 = !DILocation(line: 610, column: 6, scope: !9943)
!9958 = !DILocation(line: 614, column: 39, scope: !9959)
!9959 = distinct !DILexicalBlock(scope: !9943, file: !1490, line: 614, column: 6)
!9960 = !DILocation(line: 614, column: 6, scope: !9959)
!9961 = !DILocation(line: 614, column: 6, scope: !9943)
!9962 = !DILocation(line: 619, column: 40, scope: !9963)
!9963 = distinct !DILexicalBlock(scope: !9943, file: !1490, line: 619, column: 6)
!9964 = !DILocation(line: 619, column: 6, scope: !9963)
!9965 = !DILocation(line: 619, column: 6, scope: !9943)
!9966 = !DILocation(line: 623, column: 10, scope: !9967)
!9967 = distinct !DILexicalBlock(scope: !9943, file: !1490, line: 623, column: 6)
!9968 = !DILocation(line: 623, column: 6, scope: !9943)
!9969 = !DILocation(line: 624, column: 34, scope: !9970)
!9970 = distinct !DILexicalBlock(scope: !9967, file: !1490, line: 623, column: 24)
!9971 = !DILocation(line: 624, column: 3, scope: !9970)
!9972 = !DILocation(line: 625, column: 2, scope: !9970)
!9973 = !DILocation(line: 632, column: 10, scope: !9974)
!9974 = distinct !DILexicalBlock(scope: !9943, file: !1490, line: 632, column: 6)
!9975 = !DILocation(line: 632, column: 6, scope: !9943)
!9976 = !DILocation(line: 633, column: 34, scope: !9977)
!9977 = distinct !DILexicalBlock(scope: !9974, file: !1490, line: 632, column: 32)
!9978 = !DILocation(line: 633, column: 3, scope: !9977)
!9979 = !DILocation(line: 634, column: 2, scope: !9977)
!9980 = !DILocation(line: 636, column: 10, scope: !9981)
!9981 = distinct !DILexicalBlock(scope: !9943, file: !1490, line: 636, column: 6)
!9982 = !DILocation(line: 636, column: 6, scope: !9943)
!9983 = !DILocation(line: 637, column: 33, scope: !9984)
!9984 = distinct !DILexicalBlock(scope: !9981, file: !1490, line: 636, column: 31)
!9985 = !DILocation(line: 637, column: 3, scope: !9984)
!9986 = !DILocation(line: 638, column: 2, scope: !9984)
!9987 = !DILocation(line: 640, column: 10, scope: !9988)
!9988 = distinct !DILexicalBlock(scope: !9943, file: !1490, line: 640, column: 6)
!9989 = !DILocation(line: 640, column: 6, scope: !9943)
!9990 = !DILocation(line: 641, column: 33, scope: !9991)
!9991 = distinct !DILexicalBlock(scope: !9988, file: !1490, line: 640, column: 32)
!9992 = !DILocation(line: 641, column: 3, scope: !9991)
!9993 = !DILocation(line: 642, column: 2, scope: !9991)
!9994 = !DILocation(line: 646, column: 32, scope: !9943)
!9995 = !DILocation(line: 646, column: 2, scope: !9943)
!9996 = !DILocation(line: 648, column: 2, scope: !9943)
!9997 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1490, file: !1490, line: 419, type: !1420, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1351, retainedNodes: !9998)
!9998 = !{!9999, !10000, !10001, !10002, !10004, !10005, !10006, !10007}
!9999 = !DILocalVariable(name: "dev", arg: 1, scope: !9997, file: !1490, line: 419, type: !1395)
!10000 = !DILocalVariable(name: "cfg", arg: 2, scope: !9997, file: !1490, line: 420, type: !1422)
!10001 = !DILocalVariable(name: "config", scope: !9997, file: !1490, line: 422, type: !9880)
!10002 = !DILocalVariable(name: "data", scope: !9997, file: !1490, line: 423, type: !10003)
!10003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1588, size: 32)
!10004 = !DILocalVariable(name: "parity", scope: !9997, file: !1490, line: 424, type: !6763)
!10005 = !DILocalVariable(name: "stopbits", scope: !9997, file: !1490, line: 425, type: !6763)
!10006 = !DILocalVariable(name: "databits", scope: !9997, file: !1490, line: 426, type: !6763)
!10007 = !DILocalVariable(name: "flowctrl", scope: !9997, file: !1490, line: 428, type: !6763)
!10008 = !DILocation(line: 0, scope: !9997)
!10009 = !DILocation(line: 422, column: 48, scope: !9997)
!10010 = !DILocation(line: 423, column: 38, scope: !9997)
!10011 = !DILocation(line: 424, column: 56, scope: !9997)
!10012 = !DILocation(line: 424, column: 51, scope: !9997)
!10013 = !DILocation(line: 424, column: 26, scope: !9997)
!10014 = !DILocation(line: 425, column: 60, scope: !9997)
!10015 = !DILocation(line: 425, column: 55, scope: !9997)
!10016 = !DILocation(line: 425, column: 28, scope: !9997)
!10017 = !DILocation(line: 426, column: 60, scope: !9997)
!10018 = !DILocation(line: 426, column: 55, scope: !9997)
!10019 = !DILocation(line: 426, column: 28, scope: !9997)
!10020 = !DILocation(line: 428, column: 58, scope: !9997)
!10021 = !DILocation(line: 428, column: 53, scope: !9997)
!10022 = !DILocation(line: 428, column: 28, scope: !9997)
!10023 = !DILocation(line: 431, column: 44, scope: !10024)
!10024 = distinct !DILexicalBlock(scope: !9997, file: !1490, line: 431, column: 6)
!10025 = !DILocation(line: 438, column: 22, scope: !10026)
!10026 = distinct !DILexicalBlock(scope: !9997, file: !1490, line: 437, column: 6)
!10027 = !DILocation(line: 437, column: 6, scope: !9997)
!10028 = !DILocation(line: 448, column: 6, scope: !9997)
!10029 = !DILocation(line: 465, column: 47, scope: !10030)
!10030 = distinct !DILexicalBlock(scope: !9997, file: !1490, line: 465, column: 6)
!10031 = !DILocation(line: 475, column: 21, scope: !10032)
!10032 = distinct !DILexicalBlock(scope: !9997, file: !1490, line: 475, column: 6)
!10033 = !DILocation(line: 475, column: 6, scope: !9997)
!10034 = !DILocation(line: 476, column: 8, scope: !10035)
!10035 = distinct !DILexicalBlock(scope: !10036, file: !1490, line: 476, column: 7)
!10036 = distinct !DILexicalBlock(scope: !10032, file: !1490, line: 475, column: 49)
!10037 = !DILocation(line: 477, column: 34, scope: !10035)
!10038 = !DILocation(line: 476, column: 7, scope: !10036)
!10039 = !DILocation(line: 482, column: 27, scope: !9997)
!10040 = !DILocation(line: 482, column: 2, scope: !9997)
!10041 = !DILocation(line: 484, column: 16, scope: !10042)
!10042 = distinct !DILexicalBlock(scope: !9997, file: !1490, line: 484, column: 6)
!10043 = !DILocation(line: 484, column: 13, scope: !10042)
!10044 = !DILocation(line: 484, column: 6, scope: !9997)
!10045 = !DILocation(line: 485, column: 3, scope: !10046)
!10046 = distinct !DILexicalBlock(scope: !10042, file: !1490, line: 484, column: 44)
!10047 = !DILocation(line: 486, column: 2, scope: !10046)
!10048 = !DILocation(line: 488, column: 18, scope: !10049)
!10049 = distinct !DILexicalBlock(scope: !9997, file: !1490, line: 488, column: 6)
!10050 = !DILocation(line: 488, column: 15, scope: !10049)
!10051 = !DILocation(line: 488, column: 6, scope: !9997)
!10052 = !DILocation(line: 489, column: 3, scope: !10053)
!10053 = distinct !DILexicalBlock(scope: !10049, file: !1490, line: 488, column: 48)
!10054 = !DILocation(line: 490, column: 2, scope: !10053)
!10055 = !DILocation(line: 492, column: 18, scope: !10056)
!10056 = distinct !DILexicalBlock(scope: !9997, file: !1490, line: 492, column: 6)
!10057 = !DILocation(line: 492, column: 15, scope: !10056)
!10058 = !DILocation(line: 492, column: 6, scope: !9997)
!10059 = !DILocation(line: 493, column: 3, scope: !10060)
!10060 = distinct !DILexicalBlock(scope: !10056, file: !1490, line: 492, column: 48)
!10061 = !DILocation(line: 494, column: 2, scope: !10060)
!10062 = !DILocation(line: 496, column: 18, scope: !10063)
!10063 = distinct !DILexicalBlock(scope: !9997, file: !1490, line: 496, column: 6)
!10064 = !DILocation(line: 496, column: 15, scope: !10063)
!10065 = !DILocation(line: 496, column: 6, scope: !9997)
!10066 = !DILocation(line: 497, column: 3, scope: !10067)
!10067 = distinct !DILexicalBlock(scope: !10063, file: !1490, line: 496, column: 46)
!10068 = !DILocation(line: 498, column: 2, scope: !10067)
!10069 = !DILocation(line: 500, column: 11, scope: !10070)
!10070 = distinct !DILexicalBlock(scope: !9997, file: !1490, line: 500, column: 6)
!10071 = !DILocation(line: 500, column: 29, scope: !10070)
!10072 = !DILocation(line: 500, column: 20, scope: !10070)
!10073 = !DILocation(line: 500, column: 6, scope: !9997)
!10074 = !DILocation(line: 501, column: 3, scope: !10075)
!10075 = distinct !DILexicalBlock(scope: !10070, file: !1490, line: 500, column: 40)
!10076 = !DILocation(line: 502, column: 26, scope: !10075)
!10077 = !DILocation(line: 502, column: 19, scope: !10075)
!10078 = !DILocation(line: 503, column: 2, scope: !10075)
!10079 = !DILocation(line: 505, column: 26, scope: !9997)
!10080 = !DILocation(line: 505, column: 2, scope: !9997)
!10081 = !DILocation(line: 506, column: 2, scope: !9997)
!10082 = !DILocation(line: 507, column: 1, scope: !9997)
!10083 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1490, file: !1490, line: 509, type: !1433, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1351, retainedNodes: !10084)
!10084 = !{!10085, !10086, !10087}
!10085 = !DILocalVariable(name: "dev", arg: 1, scope: !10083, file: !1490, line: 509, type: !1395)
!10086 = !DILocalVariable(name: "cfg", arg: 2, scope: !10083, file: !1490, line: 510, type: !1435)
!10087 = !DILocalVariable(name: "data", scope: !10083, file: !1490, line: 512, type: !10003)
!10088 = !DILocation(line: 0, scope: !10083)
!10089 = !DILocation(line: 512, column: 38, scope: !10083)
!10090 = !DILocation(line: 514, column: 24, scope: !10083)
!10091 = !DILocation(line: 514, column: 7, scope: !10083)
!10092 = !DILocation(line: 514, column: 16, scope: !10083)
!10093 = !DILocation(line: 515, column: 41, scope: !10083)
!10094 = !{i32 0, i32 1537}
!10095 = !DILocation(line: 515, column: 16, scope: !10083)
!10096 = !DILocation(line: 515, column: 7, scope: !10083)
!10097 = !DILocation(line: 515, column: 14, scope: !10083)
!10098 = !DILocation(line: 517, column: 3, scope: !10083)
!10099 = !{i32 0, i32 12289}
!10100 = !DILocation(line: 516, column: 19, scope: !10083)
!10101 = !DILocation(line: 516, column: 7, scope: !10083)
!10102 = !DILocation(line: 516, column: 17, scope: !10083)
!10103 = !DILocation(line: 519, column: 3, scope: !10083)
!10104 = !DILocation(line: 519, column: 33, scope: !10083)
!10105 = !DILocation(line: 518, column: 19, scope: !10083)
!10106 = !DILocation(line: 518, column: 7, scope: !10083)
!10107 = !DILocation(line: 518, column: 17, scope: !10083)
!10108 = !DILocation(line: 521, column: 3, scope: !10083)
!10109 = !{i32 0, i32 769}
!10110 = !DILocation(line: 520, column: 19, scope: !10083)
!10111 = !DILocation(line: 520, column: 7, scope: !10083)
!10112 = !DILocation(line: 520, column: 17, scope: !10083)
!10113 = !DILocation(line: 522, column: 2, scope: !10083)
!10114 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1490, file: !1490, line: 205, type: !10115, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1351, retainedNodes: !10117)
!10115 = !DISubroutineType(types: !10116)
!10116 = !{!110, !1395}
!10117 = !{!10118, !10119}
!10118 = !DILocalVariable(name: "dev", arg: 1, scope: !10114, file: !1490, line: 205, type: !1395)
!10119 = !DILocalVariable(name: "config", scope: !10114, file: !1490, line: 207, type: !9880)
!10120 = !DILocation(line: 0, scope: !10114)
!10121 = !DILocation(line: 207, column: 48, scope: !10114)
!10122 = !DILocation(line: 209, column: 36, scope: !10114)
!10123 = !DILocation(line: 209, column: 9, scope: !10114)
!10124 = !DILocation(line: 209, column: 2, scope: !10114)
!10125 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1490, file: !1490, line: 270, type: !10126, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1351, retainedNodes: !10128)
!10126 = !DISubroutineType(types: !10127)
!10127 = !{!1361, !110}
!10128 = !{!10129}
!10129 = !DILocalVariable(name: "parity", arg: 1, scope: !10125, file: !1490, line: 270, type: !110)
!10130 = !DILocation(line: 0, scope: !10125)
!10131 = !DILocation(line: 272, column: 2, scope: !10125)
!10132 = !DILocation(line: 281, column: 1, scope: !10125)
!10133 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1490, file: !1490, line: 220, type: !10115, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1351, retainedNodes: !10134)
!10134 = !{!10135, !10136}
!10135 = !DILocalVariable(name: "dev", arg: 1, scope: !10133, file: !1490, line: 220, type: !1395)
!10136 = !DILocalVariable(name: "config", scope: !10133, file: !1490, line: 222, type: !9880)
!10137 = !DILocation(line: 0, scope: !10133)
!10138 = !DILocation(line: 222, column: 48, scope: !10133)
!10139 = !DILocation(line: 224, column: 44, scope: !10133)
!10140 = !DILocation(line: 224, column: 9, scope: !10133)
!10141 = !DILocation(line: 224, column: 2, scope: !10133)
!10142 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1490, file: !1490, line: 304, type: !10143, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1351, retainedNodes: !10145)
!10143 = !DISubroutineType(types: !10144)
!10144 = !{!1375, !110}
!10145 = !{!10146}
!10146 = !DILocalVariable(name: "sb", arg: 1, scope: !10142, file: !1490, line: 304, type: !110)
!10147 = !DILocation(line: 0, scope: !10142)
!10148 = !DILocation(line: 306, column: 2, scope: !10142)
!10149 = !DILocation(line: 0, scope: !10150)
!10150 = distinct !DILexicalBlock(scope: !10142, file: !1490, line: 306, column: 14)
!10151 = !DILocation(line: 323, column: 1, scope: !10142)
!10152 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1490, file: !1490, line: 235, type: !10115, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1351, retainedNodes: !10153)
!10153 = !{!10154, !10155}
!10154 = !DILocalVariable(name: "dev", arg: 1, scope: !10152, file: !1490, line: 235, type: !1395)
!10155 = !DILocalVariable(name: "config", scope: !10152, file: !1490, line: 237, type: !9880)
!10156 = !DILocation(line: 0, scope: !10152)
!10157 = !DILocation(line: 237, column: 48, scope: !10152)
!10158 = !DILocation(line: 239, column: 39, scope: !10152)
!10159 = !DILocation(line: 239, column: 9, scope: !10152)
!10160 = !DILocation(line: 239, column: 2, scope: !10152)
!10161 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1490, file: !1490, line: 355, type: !10162, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1351, retainedNodes: !10164)
!10162 = !DISubroutineType(types: !10163)
!10163 = !{!1368, !110, !110}
!10164 = !{!10165, !10166}
!10165 = !DILocalVariable(name: "db", arg: 1, scope: !10161, file: !1490, line: 355, type: !110)
!10166 = !DILocalVariable(name: "p", arg: 2, scope: !10161, file: !1490, line: 356, type: !110)
!10167 = !DILocation(line: 0, scope: !10161)
!10168 = !DILocation(line: 358, column: 2, scope: !10161)
!10169 = !DILocation(line: 384, column: 1, scope: !10161)
!10170 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1490, file: !1490, line: 250, type: !10115, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1351, retainedNodes: !10171)
!10171 = !{!10172, !10173}
!10172 = !DILocalVariable(name: "dev", arg: 1, scope: !10170, file: !1490, line: 250, type: !1395)
!10173 = !DILocalVariable(name: "config", scope: !10170, file: !1490, line: 252, type: !9880)
!10174 = !DILocation(line: 0, scope: !10170)
!10175 = !DILocation(line: 252, column: 48, scope: !10170)
!10176 = !DILocation(line: 254, column: 40, scope: !10170)
!10177 = !DILocation(line: 254, column: 9, scope: !10170)
!10178 = !DILocation(line: 254, column: 2, scope: !10170)
!10179 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1490, file: !1490, line: 409, type: !10180, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1351, retainedNodes: !10182)
!10180 = !DISubroutineType(types: !10181)
!10181 = !{!1381, !110}
!10182 = !{!10183}
!10183 = !DILocalVariable(name: "fc", arg: 1, scope: !10179, file: !1490, line: 409, type: !110)
!10184 = !DILocation(line: 0, scope: !10179)
!10185 = !DILocation(line: 411, column: 9, scope: !10186)
!10186 = distinct !DILexicalBlock(scope: !10179, file: !1490, line: 411, column: 6)
!10187 = !DILocation(line: 416, column: 1, scope: !10179)
!10188 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !10189, file: !10189, line: 967, type: !10190, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1351, retainedNodes: !10192)
!10189 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10190 = !DISubroutineType(types: !10191)
!10191 = !{!110, !1436}
!10192 = !{!10193}
!10193 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10188, file: !10189, line: 967, type: !1436)
!10194 = !DILocation(line: 0, scope: !10188)
!10195 = !DILocation(line: 969, column: 21, scope: !10188)
!10196 = !DILocation(line: 969, column: 3, scope: !10188)
!10197 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !10189, file: !10189, line: 601, type: !10190, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1351, retainedNodes: !10198)
!10198 = !{!10199}
!10199 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10197, file: !10189, line: 601, type: !1436)
!10200 = !DILocation(line: 0, scope: !10197)
!10201 = !DILocation(line: 603, column: 21, scope: !10197)
!10202 = !DILocation(line: 603, column: 3, scope: !10197)
!10203 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !10189, file: !10189, line: 820, type: !10190, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1351, retainedNodes: !10204)
!10204 = !{!10205}
!10205 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10203, file: !10189, line: 820, type: !1436)
!10206 = !DILocation(line: 0, scope: !10203)
!10207 = !DILocation(line: 822, column: 21, scope: !10203)
!10208 = !DILocation(line: 822, column: 3, scope: !10203)
!10209 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !10189, file: !10189, line: 547, type: !10190, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1351, retainedNodes: !10210)
!10210 = !{!10211}
!10211 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10209, file: !10189, line: 547, type: !1436)
!10212 = !DILocation(line: 0, scope: !10209)
!10213 = !DILocation(line: 549, column: 21, scope: !10209)
!10214 = !DILocation(line: 549, column: 3, scope: !10209)
!10215 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1490, file: !1490, line: 257, type: !10216, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1351, retainedNodes: !10218)
!10216 = !DISubroutineType(types: !10217)
!10217 = !{!110, !1361}
!10218 = !{!10219}
!10219 = !DILocalVariable(name: "parity", arg: 1, scope: !10215, file: !1490, line: 257, type: !1361)
!10220 = !DILocation(line: 0, scope: !10215)
!10221 = !DILocation(line: 259, column: 2, scope: !10215)
!10222 = !DILocation(line: 268, column: 1, scope: !10215)
!10223 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1490, file: !1490, line: 283, type: !10224, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1351, retainedNodes: !10226)
!10224 = !DISubroutineType(types: !10225)
!10225 = !{!110, !1375}
!10226 = !{!10227}
!10227 = !DILocalVariable(name: "sb", arg: 1, scope: !10223, file: !1490, line: 283, type: !1375)
!10228 = !DILocation(line: 0, scope: !10223)
!10229 = !DILocation(line: 285, column: 2, scope: !10223)
!10230 = !DILocation(line: 0, scope: !10231)
!10231 = distinct !DILexicalBlock(scope: !10223, file: !1490, line: 285, column: 14)
!10232 = !DILocation(line: 302, column: 1, scope: !10223)
!10233 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1490, file: !1490, line: 325, type: !10234, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1351, retainedNodes: !10236)
!10234 = !DISubroutineType(types: !10235)
!10235 = !{!110, !1368, !1361}
!10236 = !{!10237, !10238}
!10237 = !DILocalVariable(name: "db", arg: 1, scope: !10233, file: !1490, line: 325, type: !1368)
!10238 = !DILocalVariable(name: "p", arg: 2, scope: !10233, file: !1490, line: 326, type: !1361)
!10239 = !DILocation(line: 0, scope: !10233)
!10240 = !DILocation(line: 328, column: 2, scope: !10233)
!10241 = !DILocation(line: 353, column: 1, scope: !10233)
!10242 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1490, file: !1490, line: 393, type: !10243, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1351, retainedNodes: !10245)
!10243 = !DISubroutineType(types: !10244)
!10244 = !{!110, !1381}
!10245 = !{!10246}
!10246 = !DILocalVariable(name: "fc", arg: 1, scope: !10242, file: !1490, line: 393, type: !1381)
!10247 = !DILocation(line: 0, scope: !10242)
!10248 = !DILocation(line: 395, column: 9, scope: !10249)
!10249 = distinct !DILexicalBlock(scope: !10242, file: !1490, line: 395, column: 6)
!10250 = !DILocation(line: 400, column: 1, scope: !10242)
!10251 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !10189, file: !10189, line: 424, type: !10252, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1351, retainedNodes: !10254)
!10252 = !DISubroutineType(types: !10253)
!10253 = !{null, !1436}
!10254 = !{!10255}
!10255 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10251, file: !10189, line: 424, type: !1436)
!10256 = !DILocation(line: 0, scope: !10251)
!10257 = !DILocation(line: 426, column: 3, scope: !10251)
!10258 = !DILocation(line: 427, column: 1, scope: !10251)
!10259 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1490, file: !1490, line: 197, type: !10260, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1351, retainedNodes: !10262)
!10260 = !DISubroutineType(types: !10261)
!10261 = !{null, !1395, !110}
!10262 = !{!10263, !10264, !10265}
!10263 = !DILocalVariable(name: "dev", arg: 1, scope: !10259, file: !1490, line: 197, type: !1395)
!10264 = !DILocalVariable(name: "parity", arg: 2, scope: !10259, file: !1490, line: 198, type: !110)
!10265 = !DILocalVariable(name: "config", scope: !10259, file: !1490, line: 200, type: !9880)
!10266 = !DILocation(line: 0, scope: !10259)
!10267 = !DILocation(line: 200, column: 48, scope: !10259)
!10268 = !DILocation(line: 202, column: 29, scope: !10259)
!10269 = !DILocation(line: 202, column: 2, scope: !10259)
!10270 = !DILocation(line: 203, column: 1, scope: !10259)
!10271 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1490, file: !1490, line: 212, type: !10260, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1351, retainedNodes: !10272)
!10272 = !{!10273, !10274, !10275}
!10273 = !DILocalVariable(name: "dev", arg: 1, scope: !10271, file: !1490, line: 212, type: !1395)
!10274 = !DILocalVariable(name: "stopbits", arg: 2, scope: !10271, file: !1490, line: 213, type: !110)
!10275 = !DILocalVariable(name: "config", scope: !10271, file: !1490, line: 215, type: !9880)
!10276 = !DILocation(line: 0, scope: !10271)
!10277 = !DILocation(line: 215, column: 48, scope: !10271)
!10278 = !DILocation(line: 217, column: 37, scope: !10271)
!10279 = !DILocation(line: 217, column: 2, scope: !10271)
!10280 = !DILocation(line: 218, column: 1, scope: !10271)
!10281 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1490, file: !1490, line: 227, type: !10260, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1351, retainedNodes: !10282)
!10282 = !{!10283, !10284, !10285}
!10283 = !DILocalVariable(name: "dev", arg: 1, scope: !10281, file: !1490, line: 227, type: !1395)
!10284 = !DILocalVariable(name: "databits", arg: 2, scope: !10281, file: !1490, line: 228, type: !110)
!10285 = !DILocalVariable(name: "config", scope: !10281, file: !1490, line: 230, type: !9880)
!10286 = !DILocation(line: 0, scope: !10281)
!10287 = !DILocation(line: 230, column: 48, scope: !10281)
!10288 = !DILocation(line: 232, column: 32, scope: !10281)
!10289 = !DILocation(line: 232, column: 2, scope: !10281)
!10290 = !DILocation(line: 233, column: 1, scope: !10281)
!10291 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1490, file: !1490, line: 242, type: !10260, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1351, retainedNodes: !10292)
!10292 = !{!10293, !10294, !10295}
!10293 = !DILocalVariable(name: "dev", arg: 1, scope: !10291, file: !1490, line: 242, type: !1395)
!10294 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !10291, file: !1490, line: 243, type: !110)
!10295 = !DILocalVariable(name: "config", scope: !10291, file: !1490, line: 245, type: !9880)
!10296 = !DILocation(line: 0, scope: !10291)
!10297 = !DILocation(line: 245, column: 48, scope: !10291)
!10298 = !DILocation(line: 247, column: 33, scope: !10291)
!10299 = !DILocation(line: 247, column: 2, scope: !10291)
!10300 = !DILocation(line: 248, column: 1, scope: !10291)
!10301 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1490, file: !1490, line: 107, type: !10260, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1351, retainedNodes: !10302)
!10302 = !{!10303, !10304, !10305, !10306, !10307}
!10303 = !DILocalVariable(name: "dev", arg: 1, scope: !10301, file: !1490, line: 107, type: !1395)
!10304 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !10301, file: !1490, line: 107, type: !110)
!10305 = !DILocalVariable(name: "config", scope: !10301, file: !1490, line: 109, type: !9880)
!10306 = !DILocalVariable(name: "data", scope: !10301, file: !1490, line: 110, type: !10003)
!10307 = !DILocalVariable(name: "clock_rate", scope: !10301, file: !1490, line: 112, type: !110)
!10308 = !DILocation(line: 0, scope: !10301)
!10309 = !DILocation(line: 109, column: 48, scope: !10301)
!10310 = !DILocation(line: 110, column: 38, scope: !10301)
!10311 = !DILocation(line: 112, column: 2, scope: !10301)
!10312 = !DILocation(line: 123, column: 36, scope: !10313)
!10313 = distinct !DILexicalBlock(scope: !10314, file: !1490, line: 123, column: 7)
!10314 = distinct !DILexicalBlock(scope: !10315, file: !1490, line: 122, column: 9)
!10315 = distinct !DILexicalBlock(scope: !10301, file: !1490, line: 115, column: 6)
!10316 = !DILocation(line: 124, column: 42, scope: !10313)
!10317 = !DILocation(line: 123, column: 7, scope: !10313)
!10318 = !DILocation(line: 125, column: 22, scope: !10313)
!10319 = !DILocation(line: 123, column: 7, scope: !10314)
!10320 = !DILocation(line: 126, column: 4, scope: !10321)
!10321 = distinct !DILexicalBlock(scope: !10322, file: !1490, line: 126, column: 4)
!10322 = distinct !DILexicalBlock(scope: !10323, file: !1490, line: 126, column: 4)
!10323 = distinct !DILexicalBlock(scope: !10324, file: !1490, line: 126, column: 4)
!10324 = distinct !DILexicalBlock(scope: !10325, file: !1490, line: 126, column: 4)
!10325 = distinct !DILexicalBlock(scope: !10313, file: !1490, line: 125, column: 27)
!10326 = !DILocation(line: 127, column: 4, scope: !10325)
!10327 = !DILocation(line: 176, column: 36, scope: !10301)
!10328 = !DILocation(line: 176, column: 3, scope: !10301)
!10329 = !DILocation(line: 179, column: 32, scope: !10301)
!10330 = !DILocation(line: 180, column: 10, scope: !10301)
!10331 = !DILocation(line: 179, column: 3, scope: !10301)
!10332 = !DILocation(line: 189, column: 3, scope: !10333)
!10333 = distinct !DILexicalBlock(scope: !10334, file: !1490, line: 189, column: 3)
!10334 = distinct !DILexicalBlock(scope: !10301, file: !1490, line: 189, column: 3)
!10335 = !DILocation(line: 189, column: 3, scope: !10334)
!10336 = !DILocation(line: 189, column: 3, scope: !10337)
!10337 = distinct !DILexicalBlock(scope: !10333, file: !1490, line: 189, column: 3)
!10338 = !DILocation(line: 195, column: 1, scope: !10301)
!10339 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !10189, file: !10189, line: 410, type: !10252, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1351, retainedNodes: !10340)
!10340 = !{!10341}
!10341 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10339, file: !10189, line: 410, type: !1436)
!10342 = !DILocation(line: 0, scope: !10339)
!10343 = !DILocation(line: 412, column: 3, scope: !10339)
!10344 = !DILocation(line: 413, column: 1, scope: !10339)
!10345 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !850, file: !850, line: 216, type: !1469, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1351, retainedNodes: !10346)
!10346 = !{!10347, !10348, !10349, !10350}
!10347 = !DILocalVariable(name: "dev", arg: 1, scope: !10345, file: !850, line: 216, type: !1395)
!10348 = !DILocalVariable(name: "sys", arg: 2, scope: !10345, file: !850, line: 217, type: !946)
!10349 = !DILocalVariable(name: "rate", arg: 3, scope: !10345, file: !850, line: 218, type: !902)
!10350 = !DILocalVariable(name: "api", scope: !10345, file: !850, line: 220, type: !1447)
!10351 = !DILocation(line: 0, scope: !10345)
!10352 = !DILocation(line: 221, column: 49, scope: !10345)
!10353 = !DILocation(line: 223, column: 11, scope: !10354)
!10354 = distinct !DILexicalBlock(scope: !10345, file: !850, line: 223, column: 6)
!10355 = !DILocation(line: 223, column: 20, scope: !10354)
!10356 = !DILocation(line: 223, column: 6, scope: !10345)
!10357 = !DILocation(line: 227, column: 9, scope: !10345)
!10358 = !DILocation(line: 227, column: 2, scope: !10345)
!10359 = !DILocation(line: 228, column: 1, scope: !10345)
!10360 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !6243, file: !6243, line: 175, type: !6244, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1351, retainedNodes: !10361)
!10361 = !{!10362}
!10362 = !DILocalVariable(name: "level", arg: 1, scope: !10360, file: !6243, line: 175, type: !109)
!10363 = !DILocation(line: 0, scope: !10360)
!10364 = !DILocation(line: 177, column: 2, scope: !10360)
!10365 = !DILocation(line: 189, column: 1, scope: !10360)
!10366 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !10189, file: !10189, line: 615, type: !10367, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1351, retainedNodes: !10369)
!10367 = !DISubroutineType(types: !10368)
!10368 = !{null, !1436, !110}
!10369 = !{!10370, !10371}
!10370 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10366, file: !10189, line: 615, type: !1436)
!10371 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !10366, file: !10189, line: 615, type: !110)
!10372 = !DILocation(line: 0, scope: !10366)
!10373 = !DILocation(line: 617, column: 3, scope: !10366)
!10374 = !DILocation(line: 618, column: 1, scope: !10366)
!10375 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !10189, file: !10189, line: 1020, type: !10376, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1351, retainedNodes: !10378)
!10376 = !DISubroutineType(types: !10377)
!10377 = !{null, !1436, !110, !110, !110}
!10378 = !{!10379, !10380, !10381, !10382}
!10379 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10375, file: !10189, line: 1020, type: !1436)
!10380 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !10375, file: !10189, line: 1020, type: !110)
!10381 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !10375, file: !10189, line: 1020, type: !110)
!10382 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !10375, file: !10189, line: 1021, type: !110)
!10383 = !DILocation(line: 0, scope: !10375)
!10384 = !DILocation(line: 1029, column: 30, scope: !10385)
!10385 = distinct !DILexicalBlock(scope: !10386, file: !10189, line: 1028, column: 3)
!10386 = distinct !DILexicalBlock(scope: !10375, file: !10189, line: 1023, column: 7)
!10387 = !DILocation(line: 1029, column: 19, scope: !10385)
!10388 = !DILocation(line: 1029, column: 13, scope: !10385)
!10389 = !DILocation(line: 1029, column: 17, scope: !10385)
!10390 = !DILocation(line: 1031, column: 1, scope: !10375)
!10391 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !10189, file: !10189, line: 949, type: !10367, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1351, retainedNodes: !10392)
!10392 = !{!10393, !10394}
!10393 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10391, file: !10189, line: 949, type: !1436)
!10394 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !10391, file: !10189, line: 949, type: !110)
!10395 = !DILocation(line: 0, scope: !10391)
!10396 = !DILocation(line: 951, column: 3, scope: !10391)
!10397 = !DILocation(line: 952, column: 1, scope: !10391)
!10398 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !10189, file: !10189, line: 588, type: !10367, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1351, retainedNodes: !10399)
!10399 = !{!10400, !10401}
!10400 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10398, file: !10189, line: 588, type: !1436)
!10401 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10398, file: !10189, line: 588, type: !110)
!10402 = !DILocation(line: 0, scope: !10398)
!10403 = !DILocation(line: 590, column: 3, scope: !10398)
!10404 = !DILocation(line: 591, column: 1, scope: !10398)
!10405 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !10189, file: !10189, line: 805, type: !10367, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1351, retainedNodes: !10406)
!10406 = !{!10407, !10408}
!10407 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10405, file: !10189, line: 805, type: !1436)
!10408 = !DILocalVariable(name: "StopBits", arg: 2, scope: !10405, file: !10189, line: 805, type: !110)
!10409 = !DILocation(line: 0, scope: !10405)
!10410 = !DILocation(line: 807, column: 3, scope: !10405)
!10411 = !DILocation(line: 808, column: 1, scope: !10405)
!10412 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !10189, file: !10189, line: 532, type: !10367, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1351, retainedNodes: !10413)
!10413 = !{!10414, !10415}
!10414 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10412, file: !10189, line: 532, type: !1436)
!10415 = !DILocalVariable(name: "Parity", arg: 2, scope: !10412, file: !10189, line: 532, type: !110)
!10416 = !DILocation(line: 0, scope: !10412)
!10417 = !DILocation(line: 534, column: 3, scope: !10412)
!10418 = !DILocation(line: 535, column: 1, scope: !10412)
!10419 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !10189, file: !10189, line: 1770, type: !10190, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1351, retainedNodes: !10420)
!10420 = !{!10421}
!10421 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10419, file: !10189, line: 1770, type: !1436)
!10422 = !DILocation(line: 0, scope: !10419)
!10423 = !DILocation(line: 1772, column: 11, scope: !10419)
!10424 = !DILocation(line: 1772, column: 46, scope: !10419)
!10425 = !DILocation(line: 1772, column: 3, scope: !10419)
!10426 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !10189, file: !10189, line: 1737, type: !10190, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1351, retainedNodes: !10427)
!10427 = !{!10428}
!10428 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10426, file: !10189, line: 1737, type: !1436)
!10429 = !DILocation(line: 0, scope: !10426)
!10430 = !DILocation(line: 1739, column: 11, scope: !10426)
!10431 = !DILocation(line: 1739, column: 3, scope: !10426)
!10432 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !10189, file: !10189, line: 1748, type: !10190, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1351, retainedNodes: !10433)
!10433 = !{!10434}
!10434 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10432, file: !10189, line: 1748, type: !1436)
!10435 = !DILocation(line: 0, scope: !10432)
!10436 = !DILocation(line: 1750, column: 11, scope: !10432)
!10437 = !DILocation(line: 1750, column: 45, scope: !10432)
!10438 = !DILocation(line: 1750, column: 3, scope: !10432)
!10439 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !10189, file: !10189, line: 1827, type: !10190, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1351, retainedNodes: !10440)
!10440 = !{!10441}
!10441 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10439, file: !10189, line: 1827, type: !1436)
!10442 = !DILocation(line: 0, scope: !10439)
!10443 = !DILocation(line: 1829, column: 11, scope: !10439)
!10444 = !DILocation(line: 1829, column: 46, scope: !10439)
!10445 = !DILocation(line: 1829, column: 3, scope: !10439)
!10446 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !10189, file: !10189, line: 1992, type: !10252, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1351, retainedNodes: !10447)
!10447 = !{!10448}
!10448 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10446, file: !10189, line: 1992, type: !1436)
!10449 = !DILocation(line: 0, scope: !10446)
!10450 = !DILocation(line: 1994, column: 3, scope: !10446)
!10451 = !DILocation(line: 1995, column: 1, scope: !10446)
!10452 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !10189, file: !10189, line: 1934, type: !10252, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1351, retainedNodes: !10453)
!10453 = !{!10454, !10455}
!10454 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10452, file: !10189, line: 1934, type: !1436)
!10455 = !DILocalVariable(name: "tmpreg", scope: !10452, file: !10189, line: 1936, type: !316)
!10456 = !DILocation(line: 0, scope: !10452)
!10457 = !DILocation(line: 1936, column: 3, scope: !10452)
!10458 = !DILocation(line: 1936, column: 17, scope: !10452)
!10459 = !DILocation(line: 1937, column: 20, scope: !10452)
!10460 = !DILocation(line: 1937, column: 10, scope: !10452)
!10461 = !DILocation(line: 1938, column: 10, scope: !10452)
!10462 = !DILocation(line: 1939, column: 20, scope: !10452)
!10463 = !DILocation(line: 1939, column: 10, scope: !10452)
!10464 = !DILocation(line: 1940, column: 10, scope: !10452)
!10465 = !DILocation(line: 1941, column: 1, scope: !10452)
!10466 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !10189, file: !10189, line: 1877, type: !10252, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1351, retainedNodes: !10467)
!10467 = !{!10468, !10469}
!10468 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10466, file: !10189, line: 1877, type: !1436)
!10469 = !DILocalVariable(name: "tmpreg", scope: !10466, file: !10189, line: 1879, type: !316)
!10470 = !DILocation(line: 0, scope: !10466)
!10471 = !DILocation(line: 1879, column: 3, scope: !10466)
!10472 = !DILocation(line: 1879, column: 17, scope: !10466)
!10473 = !DILocation(line: 1880, column: 20, scope: !10466)
!10474 = !DILocation(line: 1880, column: 10, scope: !10466)
!10475 = !DILocation(line: 1881, column: 10, scope: !10466)
!10476 = !DILocation(line: 1882, column: 20, scope: !10466)
!10477 = !DILocation(line: 1882, column: 10, scope: !10466)
!10478 = !DILocation(line: 1883, column: 10, scope: !10466)
!10479 = !DILocation(line: 1884, column: 1, scope: !10466)
!10480 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !10189, file: !10189, line: 1896, type: !10252, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1351, retainedNodes: !10481)
!10481 = !{!10482, !10483}
!10482 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10480, file: !10189, line: 1896, type: !1436)
!10483 = !DILocalVariable(name: "tmpreg", scope: !10480, file: !10189, line: 1898, type: !316)
!10484 = !DILocation(line: 0, scope: !10480)
!10485 = !DILocation(line: 1898, column: 3, scope: !10480)
!10486 = !DILocation(line: 1898, column: 17, scope: !10480)
!10487 = !DILocation(line: 1899, column: 20, scope: !10480)
!10488 = !DILocation(line: 1899, column: 10, scope: !10480)
!10489 = !DILocation(line: 1900, column: 10, scope: !10480)
!10490 = !DILocation(line: 1901, column: 20, scope: !10480)
!10491 = !DILocation(line: 1901, column: 10, scope: !10480)
!10492 = !DILocation(line: 1902, column: 10, scope: !10480)
!10493 = !DILocation(line: 1903, column: 1, scope: !10480)
!10494 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !10189, file: !10189, line: 1915, type: !10252, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1351, retainedNodes: !10495)
!10495 = !{!10496, !10497}
!10496 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10494, file: !10189, line: 1915, type: !1436)
!10497 = !DILocalVariable(name: "tmpreg", scope: !10494, file: !10189, line: 1917, type: !316)
!10498 = !DILocation(line: 0, scope: !10494)
!10499 = !DILocation(line: 1917, column: 3, scope: !10494)
!10500 = !DILocation(line: 1917, column: 17, scope: !10494)
!10501 = !DILocation(line: 1918, column: 20, scope: !10494)
!10502 = !DILocation(line: 1918, column: 10, scope: !10494)
!10503 = !DILocation(line: 1919, column: 10, scope: !10494)
!10504 = !DILocation(line: 1920, column: 20, scope: !10494)
!10505 = !DILocation(line: 1920, column: 10, scope: !10494)
!10506 = !DILocation(line: 1921, column: 10, scope: !10494)
!10507 = !DILocation(line: 1922, column: 1, scope: !10494)
!10508 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !10189, file: !10189, line: 1814, type: !10190, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1351, retainedNodes: !10509)
!10509 = !{!10510}
!10510 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10508, file: !10189, line: 1814, type: !1436)
!10511 = !DILocation(line: 0, scope: !10508)
!10512 = !DILocation(line: 1816, column: 11, scope: !10508)
!10513 = !DILocation(line: 1816, column: 46, scope: !10508)
!10514 = !DILocation(line: 1816, column: 3, scope: !10508)
!10515 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !10189, file: !10189, line: 2426, type: !10516, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1351, retainedNodes: !10518)
!10516 = !DISubroutineType(types: !10517)
!10517 = !{null, !1436, !178}
!10518 = !{!10519, !10520}
!10519 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10515, file: !10189, line: 2426, type: !1436)
!10520 = !DILocalVariable(name: "Value", arg: 2, scope: !10515, file: !10189, line: 2426, type: !178)
!10521 = !DILocation(line: 0, scope: !10515)
!10522 = !DILocation(line: 2428, column: 16, scope: !10515)
!10523 = !DILocation(line: 2428, column: 11, scope: !10515)
!10524 = !DILocation(line: 2428, column: 14, scope: !10515)
!10525 = !DILocation(line: 2429, column: 1, scope: !10515)
!10526 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !10189, file: !10189, line: 1792, type: !10190, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1351, retainedNodes: !10527)
!10527 = !{!10528}
!10528 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10526, file: !10189, line: 1792, type: !1436)
!10529 = !DILocation(line: 0, scope: !10526)
!10530 = !DILocation(line: 1794, column: 11, scope: !10526)
!10531 = !DILocation(line: 1794, column: 47, scope: !10526)
!10532 = !DILocation(line: 1794, column: 3, scope: !10526)
!10533 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !10189, file: !10189, line: 2403, type: !10534, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1351, retainedNodes: !10536)
!10534 = !DISubroutineType(types: !10535)
!10535 = !{!178, !1436}
!10536 = !{!10537}
!10537 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10533, file: !10189, line: 2403, type: !1436)
!10538 = !DILocation(line: 0, scope: !10533)
!10539 = !DILocation(line: 2405, column: 20, scope: !10533)
!10540 = !DILocation(line: 2405, column: 10, scope: !10533)
!10541 = !DILocation(line: 2405, column: 3, scope: !10533)
!10542 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1490, file: !1490, line: 1583, type: !1416, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1351, retainedNodes: !10543)
!10543 = !{!10544, !10545, !10546, !10547, !10548, !10549}
!10544 = !DILocalVariable(name: "dev", arg: 1, scope: !10542, file: !1490, line: 1583, type: !1395)
!10545 = !DILocalVariable(name: "config", scope: !10542, file: !1490, line: 1585, type: !9880)
!10546 = !DILocalVariable(name: "data", scope: !10542, file: !1490, line: 1586, type: !10003)
!10547 = !DILocalVariable(name: "ll_parity", scope: !10542, file: !1490, line: 1587, type: !110)
!10548 = !DILocalVariable(name: "ll_datawidth", scope: !10542, file: !1490, line: 1588, type: !110)
!10549 = !DILocalVariable(name: "err", scope: !10542, file: !1490, line: 1589, type: !109)
!10550 = !DILocation(line: 0, scope: !10542)
!10551 = !DILocation(line: 1585, column: 48, scope: !10542)
!10552 = !DILocation(line: 1586, column: 38, scope: !10542)
!10553 = !DILocation(line: 1591, column: 2, scope: !10542)
!10554 = !DILocation(line: 1593, column: 29, scope: !10555)
!10555 = distinct !DILexicalBlock(scope: !10542, file: !1490, line: 1593, column: 6)
!10556 = !DILocation(line: 1593, column: 7, scope: !10555)
!10557 = !DILocation(line: 1593, column: 6, scope: !10542)
!10558 = !DILocation(line: 1594, column: 3, scope: !10559)
!10559 = distinct !DILexicalBlock(scope: !10560, file: !1490, line: 1594, column: 3)
!10560 = distinct !DILexicalBlock(scope: !10561, file: !1490, line: 1594, column: 3)
!10561 = distinct !DILexicalBlock(scope: !10562, file: !1490, line: 1594, column: 3)
!10562 = distinct !DILexicalBlock(scope: !10563, file: !1490, line: 1594, column: 3)
!10563 = distinct !DILexicalBlock(scope: !10555, file: !1490, line: 1593, column: 37)
!10564 = !DILocation(line: 1595, column: 3, scope: !10563)
!10565 = !DILocation(line: 1599, column: 31, scope: !10542)
!10566 = !DILocation(line: 1599, column: 71, scope: !10542)
!10567 = !DILocation(line: 1599, column: 8, scope: !10542)
!10568 = !DILocation(line: 1600, column: 10, scope: !10569)
!10569 = distinct !DILexicalBlock(scope: !10542, file: !1490, line: 1600, column: 6)
!10570 = !DILocation(line: 1600, column: 6, scope: !10542)
!10571 = !DILocation(line: 1601, column: 3, scope: !10572)
!10572 = distinct !DILexicalBlock(scope: !10573, file: !1490, line: 1601, column: 3)
!10573 = distinct !DILexicalBlock(scope: !10574, file: !1490, line: 1601, column: 3)
!10574 = distinct !DILexicalBlock(scope: !10575, file: !1490, line: 1601, column: 3)
!10575 = distinct !DILexicalBlock(scope: !10576, file: !1490, line: 1601, column: 3)
!10576 = distinct !DILexicalBlock(scope: !10569, file: !1490, line: 1600, column: 16)
!10577 = !DILocation(line: 1602, column: 3, scope: !10576)
!10578 = !DILocation(line: 1616, column: 36, scope: !10542)
!10579 = !DILocation(line: 1616, column: 8, scope: !10542)
!10580 = !DILocation(line: 1617, column: 10, scope: !10581)
!10581 = distinct !DILexicalBlock(scope: !10542, file: !1490, line: 1617, column: 6)
!10582 = !DILocation(line: 1617, column: 6, scope: !10542)
!10583 = !DILocation(line: 1621, column: 27, scope: !10542)
!10584 = !DILocation(line: 1621, column: 2, scope: !10542)
!10585 = !DILocation(line: 1624, column: 40, scope: !10542)
!10586 = !DILocation(line: 1624, column: 2, scope: !10542)
!10587 = !DILocation(line: 1630, column: 14, scope: !10588)
!10588 = distinct !DILexicalBlock(scope: !10542, file: !1490, line: 1630, column: 6)
!10589 = !DILocation(line: 1630, column: 6, scope: !10542)
!10590 = !DILocation(line: 1640, column: 4, scope: !10591)
!10591 = distinct !DILexicalBlock(scope: !10592, file: !1490, line: 1640, column: 4)
!10592 = distinct !DILexicalBlock(scope: !10593, file: !1490, line: 1640, column: 4)
!10593 = distinct !DILexicalBlock(scope: !10594, file: !1490, line: 1640, column: 4)
!10594 = distinct !DILexicalBlock(scope: !10595, file: !1490, line: 1640, column: 4)
!10595 = distinct !DILexicalBlock(scope: !10596, file: !1490, line: 1639, column: 28)
!10596 = distinct !DILexicalBlock(scope: !10597, file: !1490, line: 1639, column: 7)
!10597 = distinct !DILexicalBlock(scope: !10598, file: !1490, line: 1638, column: 9)
!10598 = distinct !DILexicalBlock(scope: !10588, file: !1490, line: 1634, column: 13)
!10599 = !DILocation(line: 0, scope: !10588)
!10600 = !DILocation(line: 1649, column: 35, scope: !10542)
!10601 = !DILocation(line: 1649, column: 2, scope: !10542)
!10602 = !DILocation(line: 1654, column: 14, scope: !10603)
!10603 = distinct !DILexicalBlock(scope: !10542, file: !1490, line: 1654, column: 6)
!10604 = !DILocation(line: 1654, column: 6, scope: !10542)
!10605 = !DILocation(line: 1655, column: 3, scope: !10606)
!10606 = distinct !DILexicalBlock(scope: !10603, file: !1490, line: 1654, column: 31)
!10607 = !DILocation(line: 1656, column: 2, scope: !10606)
!10608 = !DILocation(line: 1659, column: 37, scope: !10542)
!10609 = !DILocation(line: 1659, column: 2, scope: !10542)
!10610 = !DILocation(line: 1662, column: 14, scope: !10611)
!10611 = distinct !DILexicalBlock(scope: !10542, file: !1490, line: 1662, column: 6)
!10612 = !DILocation(line: 1662, column: 6, scope: !10542)
!10613 = !DILocation(line: 1663, column: 37, scope: !10614)
!10614 = distinct !DILexicalBlock(scope: !10611, file: !1490, line: 1662, column: 27)
!10615 = !DILocation(line: 1663, column: 3, scope: !10614)
!10616 = !DILocation(line: 1664, column: 2, scope: !10614)
!10617 = !DILocation(line: 1684, column: 26, scope: !10542)
!10618 = !DILocation(line: 1684, column: 2, scope: !10542)
!10619 = !DILocation(line: 1722, column: 2, scope: !10542)
!10620 = !DILocation(line: 1724, column: 1, scope: !10542)
!10621 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1490, file: !1490, line: 651, type: !10622, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1351, retainedNodes: !10624)
!10622 = !DISubroutineType(types: !10623)
!10623 = !{null, !1395}
!10624 = !{!10625, !10626, !10627}
!10625 = !DILocalVariable(name: "dev", arg: 1, scope: !10621, file: !1490, line: 651, type: !1395)
!10626 = !DILocalVariable(name: "data", scope: !10621, file: !1490, line: 653, type: !10003)
!10627 = !DILocalVariable(name: "clk", scope: !10621, file: !1490, line: 654, type: !10628)
!10628 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1395)
!10629 = !DILocation(line: 0, scope: !10621)
!10630 = !DILocation(line: 653, column: 38, scope: !10621)
!10631 = !DILocation(line: 656, column: 8, scope: !10621)
!10632 = !DILocation(line: 656, column: 14, scope: !10621)
!10633 = !DILocation(line: 657, column: 1, scope: !10621)
!10634 = distinct !DISubprogram(name: "device_is_ready", scope: !8999, file: !8999, line: 47, type: !10635, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1351, retainedNodes: !10637)
!10635 = !DISubroutineType(types: !10636)
!10636 = !{!347, !1395}
!10637 = !{!10638}
!10638 = !DILocalVariable(name: "dev", arg: 1, scope: !10634, file: !8999, line: 47, type: !1395)
!10639 = !DILocation(line: 0, scope: !10634)
!10640 = !DILocation(line: 55, column: 2, scope: !10641)
!10641 = distinct !DILexicalBlock(scope: !10634, file: !8999, line: 55, column: 2)
!10642 = !{i64 2155380237}
!10643 = !DILocation(line: 56, column: 9, scope: !10634)
!10644 = !DILocation(line: 56, column: 2, scope: !10634)
!10645 = distinct !DISubprogram(name: "clock_control_on", scope: !850, file: !850, line: 123, type: !1454, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1351, retainedNodes: !10646)
!10646 = !{!10647, !10648, !10649}
!10647 = !DILocalVariable(name: "dev", arg: 1, scope: !10645, file: !850, line: 123, type: !1395)
!10648 = !DILocalVariable(name: "sys", arg: 2, scope: !10645, file: !850, line: 124, type: !946)
!10649 = !DILocalVariable(name: "api", scope: !10645, file: !850, line: 126, type: !1447)
!10650 = !DILocation(line: 0, scope: !10645)
!10651 = !DILocation(line: 127, column: 49, scope: !10645)
!10652 = !DILocation(line: 129, column: 14, scope: !10645)
!10653 = !DILocation(line: 129, column: 9, scope: !10645)
!10654 = !DILocation(line: 129, column: 2, scope: !10645)
!10655 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1554, file: !1554, line: 342, type: !10656, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1351, retainedNodes: !10658)
!10656 = !DISubroutineType(types: !10657)
!10657 = !{!109, !1551, !178}
!10658 = !{!10659, !10660, !10661, !10662}
!10659 = !DILocalVariable(name: "config", arg: 1, scope: !10655, file: !1554, line: 342, type: !1551)
!10660 = !DILocalVariable(name: "id", arg: 2, scope: !10655, file: !1554, line: 343, type: !178)
!10661 = !DILocalVariable(name: "ret", scope: !10655, file: !1554, line: 345, type: !109)
!10662 = !DILocalVariable(name: "state", scope: !10655, file: !1554, line: 346, type: !1557)
!10663 = !DILocation(line: 0, scope: !10655)
!10664 = !DILocation(line: 346, column: 2, scope: !10655)
!10665 = !DILocation(line: 348, column: 8, scope: !10655)
!10666 = !DILocation(line: 349, column: 10, scope: !10667)
!10667 = distinct !DILexicalBlock(scope: !10655, file: !1554, line: 349, column: 6)
!10668 = !DILocation(line: 349, column: 6, scope: !10655)
!10669 = !DILocation(line: 353, column: 44, scope: !10655)
!10670 = !DILocation(line: 353, column: 9, scope: !10655)
!10671 = !DILocation(line: 353, column: 2, scope: !10655)
!10672 = !DILocation(line: 354, column: 1, scope: !10655)
!10673 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !10189, file: !10189, line: 497, type: !10367, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1351, retainedNodes: !10674)
!10674 = !{!10675, !10676, !10677}
!10675 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10673, file: !10189, line: 497, type: !1436)
!10676 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !10673, file: !10189, line: 497, type: !110)
!10677 = !DILocalVariable(name: "val", scope: !10678, file: !10189, line: 499, type: !110)
!10678 = distinct !DILexicalBlock(scope: !10673, file: !10189, line: 499, column: 3)
!10679 = !DILocation(line: 0, scope: !10673)
!10680 = !DILocation(line: 499, column: 3, scope: !10678)
!10681 = !DILocalVariable(name: "addr", arg: 1, scope: !10682, file: !6486, line: 476, type: !1486)
!10682 = distinct !DISubprogram(name: "__LDREXW", scope: !6486, file: !6486, line: 476, type: !10683, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1351, retainedNodes: !10685)
!10683 = !DISubroutineType(types: !10684)
!10684 = !{!110, !1486}
!10685 = !{!10681, !10686}
!10686 = !DILocalVariable(name: "result", scope: !10682, file: !6486, line: 478, type: !110)
!10687 = !DILocation(line: 0, scope: !10682, inlinedAt: !10688)
!10688 = distinct !DILocation(line: 499, column: 3, scope: !10689)
!10689 = distinct !DILexicalBlock(scope: !10678, file: !10189, line: 499, column: 3)
!10690 = !DILocation(line: 480, column: 4, scope: !10682, inlinedAt: !10688)
!10691 = !{i64 3761975}
!10692 = !DILocation(line: 499, column: 3, scope: !10689)
!10693 = !DILocation(line: 0, scope: !10678)
!10694 = !DILocalVariable(name: "value", arg: 1, scope: !10695, file: !6486, line: 527, type: !110)
!10695 = distinct !DISubprogram(name: "__STREXW", scope: !6486, file: !6486, line: 527, type: !10696, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1351, retainedNodes: !10698)
!10696 = !DISubroutineType(types: !10697)
!10697 = !{!110, !110, !1486}
!10698 = !{!10694, !10699, !10700}
!10699 = !DILocalVariable(name: "addr", arg: 2, scope: !10695, file: !6486, line: 527, type: !1486)
!10700 = !DILocalVariable(name: "result", scope: !10695, file: !6486, line: 529, type: !110)
!10701 = !DILocation(line: 0, scope: !10695, inlinedAt: !10702)
!10702 = distinct !DILocation(line: 499, column: 3, scope: !10678)
!10703 = !DILocation(line: 531, column: 4, scope: !10695, inlinedAt: !10702)
!10704 = !{i64 3763411}
!10705 = distinct !{!10705, !10680, !10680}
!10706 = !DILocation(line: 500, column: 1, scope: !10673)
!10707 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !10189, file: !10189, line: 850, type: !10376, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1351, retainedNodes: !10708)
!10708 = !{!10709, !10710, !10711, !10712}
!10709 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10707, file: !10189, line: 850, type: !1436)
!10710 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10707, file: !10189, line: 850, type: !110)
!10711 = !DILocalVariable(name: "Parity", arg: 3, scope: !10707, file: !10189, line: 850, type: !110)
!10712 = !DILocalVariable(name: "StopBits", arg: 4, scope: !10707, file: !10189, line: 851, type: !110)
!10713 = !DILocation(line: 0, scope: !10707)
!10714 = !DILocation(line: 853, column: 3, scope: !10707)
!10715 = !DILocation(line: 854, column: 3, scope: !10707)
!10716 = !DILocation(line: 855, column: 1, scope: !10707)
!10717 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !10189, file: !10189, line: 1337, type: !10252, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1351, retainedNodes: !10718)
!10718 = !{!10719}
!10719 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10717, file: !10189, line: 1337, type: !1436)
!10720 = !DILocation(line: 0, scope: !10717)
!10721 = !DILocation(line: 1339, column: 3, scope: !10717)
!10722 = !DILocation(line: 1340, column: 1, scope: !10717)
!10723 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1554, file: !1554, line: 316, type: !10724, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1351, retainedNodes: !10726)
!10724 = !DISubroutineType(types: !10725)
!10725 = !{!109, !1551, !1557}
!10726 = !{!10727, !10728, !10729}
!10727 = !DILocalVariable(name: "config", arg: 1, scope: !10723, file: !1554, line: 317, type: !1551)
!10728 = !DILocalVariable(name: "state", arg: 2, scope: !10723, file: !1554, line: 318, type: !1557)
!10729 = !DILocalVariable(name: "reg", scope: !10723, file: !1554, line: 320, type: !22)
!10730 = !DILocation(line: 0, scope: !10723)
!10731 = !DILocation(line: 329, column: 39, scope: !10723)
!10732 = !DILocation(line: 329, column: 52, scope: !10723)
!10733 = !DILocation(line: 329, column: 9, scope: !10723)
!10734 = !DILocation(line: 329, column: 2, scope: !10723)
!10735 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !336, file: !336, line: 730, type: !10635, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1351, retainedNodes: !10736)
!10736 = !{!10737}
!10737 = !DILocalVariable(name: "dev", arg: 1, scope: !10735, file: !336, line: 730, type: !1395)
!10738 = !DILocation(line: 0, scope: !10735)
!10739 = !DILocation(line: 732, column: 9, scope: !10735)
!10740 = !DILocation(line: 732, column: 2, scope: !10735)
!10741 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1713, file: !1713, line: 270, type: !1719, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !10742)
!10742 = !{!10743}
!10743 = !DILocalVariable(name: "dev", arg: 1, scope: !10741, file: !1713, line: 270, type: !1721)
!10744 = !DILocation(line: 0, scope: !10741)
!10745 = !DILocation(line: 274, column: 2, scope: !10741)
!10746 = !DILocation(line: 275, column: 12, scope: !10741)
!10747 = !DILocation(line: 276, column: 15, scope: !10741)
!10748 = !DILocation(line: 277, column: 16, scope: !10741)
!10749 = !DILocation(line: 278, column: 15, scope: !10741)
!10750 = !DILocation(line: 279, column: 16, scope: !10741)
!10751 = !DILocation(line: 282, column: 2, scope: !10741)
!10752 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !535, file: !535, line: 1814, type: !6526, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !10753)
!10753 = !{!10754, !10755}
!10754 = !DILocalVariable(name: "IRQn", arg: 1, scope: !10752, file: !535, line: 1814, type: !800)
!10755 = !DILocalVariable(name: "priority", arg: 2, scope: !10752, file: !535, line: 1814, type: !110)
!10756 = !DILocation(line: 0, scope: !10752)
!10757 = !DILocation(line: 1822, column: 46, scope: !10758)
!10758 = distinct !DILexicalBlock(scope: !10759, file: !535, line: 1821, column: 3)
!10759 = distinct !DILexicalBlock(scope: !10752, file: !535, line: 1816, column: 7)
!10760 = !DILocation(line: 1824, column: 1, scope: !10752)
!10761 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1713, file: !1713, line: 118, type: !6423, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !10762)
!10762 = !{!10763, !10764}
!10763 = !DILocalVariable(name: "arg", arg: 1, scope: !10761, file: !1713, line: 118, type: !107)
!10764 = !DILocalVariable(name: "dticks", scope: !10761, file: !1713, line: 121, type: !110)
!10765 = !DILocation(line: 0, scope: !10761)
!10766 = !DILocation(line: 124, column: 2, scope: !10761)
!10767 = !DILocation(line: 129, column: 17, scope: !10761)
!10768 = !DILocation(line: 129, column: 14, scope: !10761)
!10769 = !DILocation(line: 130, column: 15, scope: !10761)
!10770 = !DILocation(line: 145, column: 27, scope: !10771)
!10771 = distinct !DILexicalBlock(scope: !10772, file: !1713, line: 132, column: 16)
!10772 = distinct !DILexicalBlock(scope: !10761, file: !1713, line: 132, column: 6)
!10773 = !DILocation(line: 145, column: 25, scope: !10771)
!10774 = !DILocation(line: 145, column: 45, scope: !10771)
!10775 = !DILocation(line: 146, column: 30, scope: !10771)
!10776 = !DILocation(line: 146, column: 20, scope: !10771)
!10777 = !DILocation(line: 147, column: 3, scope: !10771)
!10778 = !DILocation(line: 151, column: 2, scope: !10761)
!10779 = !DILocation(line: 152, column: 1, scope: !10761)
!10780 = distinct !DISubprogram(name: "elapsed", scope: !1713, file: !1713, line: 85, type: !6573, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !10781)
!10781 = !{!10782, !10783, !10784}
!10782 = !DILocalVariable(name: "val1", scope: !10780, file: !1713, line: 87, type: !110)
!10783 = !DILocalVariable(name: "ctrl", scope: !10780, file: !1713, line: 88, type: !110)
!10784 = !DILocalVariable(name: "val2", scope: !10780, file: !1713, line: 89, type: !110)
!10785 = !DILocation(line: 87, column: 27, scope: !10780)
!10786 = !DILocation(line: 0, scope: !10780)
!10787 = !DILocation(line: 88, column: 27, scope: !10780)
!10788 = !DILocation(line: 89, column: 27, scope: !10780)
!10789 = !DILocation(line: 105, column: 12, scope: !10790)
!10790 = distinct !DILexicalBlock(scope: !10780, file: !1713, line: 105, column: 6)
!10791 = !DILocation(line: 106, column: 6, scope: !10790)
!10792 = !DILocation(line: 107, column: 16, scope: !10793)
!10793 = distinct !DILexicalBlock(scope: !10790, file: !1713, line: 106, column: 24)
!10794 = !DILocation(line: 111, column: 18, scope: !10793)
!10795 = !DILocation(line: 112, column: 2, scope: !10793)
!10796 = !DILocation(line: 114, column: 20, scope: !10780)
!10797 = !DILocation(line: 114, column: 30, scope: !10780)
!10798 = !DILocation(line: 114, column: 28, scope: !10780)
!10799 = !DILocation(line: 114, column: 2, scope: !10780)
!10800 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1713, file: !1713, line: 154, type: !10801, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !10803)
!10801 = !DISubroutineType(types: !10802)
!10802 = !{null, !774, !347}
!10803 = !{!10804, !10805, !10806, !10807, !10808, !10809, !10810, !10815, !10816}
!10804 = !DILocalVariable(name: "ticks", arg: 1, scope: !10800, file: !1713, line: 154, type: !774)
!10805 = !DILocalVariable(name: "idle", arg: 2, scope: !10800, file: !1713, line: 154, type: !347)
!10806 = !DILocalVariable(name: "delay", scope: !10800, file: !1713, line: 169, type: !110)
!10807 = !DILocalVariable(name: "val1", scope: !10800, file: !1713, line: 170, type: !110)
!10808 = !DILocalVariable(name: "val2", scope: !10800, file: !1713, line: 170, type: !110)
!10809 = !DILocalVariable(name: "last_load_", scope: !10800, file: !1713, line: 171, type: !110)
!10810 = !DILocalVariable(name: "key", scope: !10800, file: !1713, line: 176, type: !10811)
!10811 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !251, line: 106, baseType: !10812)
!10812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !251, line: 32, size: 32, elements: !10813)
!10813 = !{!10814}
!10814 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !10812, file: !251, line: 33, baseType: !109, size: 32)
!10815 = !DILocalVariable(name: "pending", scope: !10800, file: !1713, line: 178, type: !110)
!10816 = !DILocalVariable(name: "unannounced", scope: !10800, file: !1713, line: 185, type: !110)
!10817 = !DILocation(line: 0, scope: !10800)
!10818 = !DILocation(line: 162, column: 49, scope: !10819)
!10819 = distinct !DILexicalBlock(scope: !10800, file: !1713, line: 162, column: 6)
!10820 = !DILocation(line: 163, column: 17, scope: !10821)
!10821 = distinct !DILexicalBlock(scope: !10819, file: !1713, line: 162, column: 78)
!10822 = !DILocation(line: 164, column: 13, scope: !10821)
!10823 = !DILocation(line: 165, column: 3, scope: !10821)
!10824 = !DILocation(line: 171, column: 24, scope: !10800)
!10825 = !DILocation(line: 173, column: 10, scope: !10800)
!10826 = !DILocation(line: 174, column: 10, scope: !10800)
!10827 = !DILocalVariable(name: "l", arg: 1, scope: !10828, file: !251, line: 136, type: !10831)
!10828 = distinct !DISubprogram(name: "k_spin_lock", scope: !251, file: !251, line: 136, type: !10829, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !10832)
!10829 = !DISubroutineType(types: !10830)
!10830 = !{!10811, !10831}
!10831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1739, size: 32)
!10832 = !{!10827, !10833}
!10833 = !DILocalVariable(name: "k", scope: !10828, file: !251, line: 139, type: !10811)
!10834 = !DILocation(line: 0, scope: !10828, inlinedAt: !10835)
!10835 = distinct !DILocation(line: 176, column: 25, scope: !10800)
!10836 = !DILocation(line: 55, column: 2, scope: !10837, inlinedAt: !10841)
!10837 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6165, file: !6165, line: 42, type: !6166, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !10838)
!10838 = !{!10839, !10840}
!10839 = !DILocalVariable(name: "key", scope: !10837, file: !6165, line: 44, type: !32)
!10840 = !DILocalVariable(name: "tmp", scope: !10837, file: !6165, line: 53, type: !32)
!10841 = distinct !DILocation(line: 145, column: 10, scope: !10828, inlinedAt: !10835)
!10842 = !{i64 2283573}
!10843 = !DILocation(line: 0, scope: !10837, inlinedAt: !10841)
!10844 = !DILocation(line: 148, column: 2, scope: !10845, inlinedAt: !10835)
!10845 = distinct !DILexicalBlock(scope: !10846, file: !251, line: 148, column: 2)
!10846 = distinct !DILexicalBlock(scope: !10828, file: !251, line: 148, column: 2)
!10847 = !DILocation(line: 148, column: 2, scope: !10846, inlinedAt: !10835)
!10848 = !DILocation(line: 148, column: 2, scope: !10849, inlinedAt: !10835)
!10849 = distinct !DILexicalBlock(scope: !10845, file: !251, line: 148, column: 2)
!10850 = !DILocation(line: 160, column: 2, scope: !10828, inlinedAt: !10835)
!10851 = !DILocation(line: 178, column: 21, scope: !10800)
!10852 = !DILocation(line: 180, column: 18, scope: !10800)
!10853 = !DILocation(line: 182, column: 14, scope: !10800)
!10854 = !DILocation(line: 183, column: 15, scope: !10800)
!10855 = !DILocation(line: 185, column: 39, scope: !10800)
!10856 = !DILocation(line: 185, column: 37, scope: !10800)
!10857 = !DILocation(line: 187, column: 27, scope: !10858)
!10858 = distinct !DILexicalBlock(scope: !10800, file: !1713, line: 187, column: 6)
!10859 = !DILocation(line: 187, column: 6, scope: !10800)
!10860 = !DILocation(line: 202, column: 27, scope: !10861)
!10861 = distinct !DILexicalBlock(scope: !10858, file: !1713, line: 195, column: 9)
!10862 = !DILocation(line: 202, column: 48, scope: !10861)
!10863 = !DILocation(line: 203, column: 9, scope: !10861)
!10864 = !DILocation(line: 204, column: 11, scope: !10861)
!10865 = !DILocation(line: 205, column: 13, scope: !10866)
!10866 = distinct !DILexicalBlock(scope: !10861, file: !1713, line: 205, column: 7)
!10867 = !DILocation(line: 205, column: 7, scope: !10861)
!10868 = !DILocation(line: 0, scope: !10858)
!10869 = !DILocation(line: 212, column: 18, scope: !10800)
!10870 = !DILocation(line: 214, column: 28, scope: !10800)
!10871 = !DILocation(line: 214, column: 16, scope: !10800)
!10872 = !DILocation(line: 215, column: 15, scope: !10800)
!10873 = !DILocation(line: 227, column: 11, scope: !10874)
!10874 = distinct !DILexicalBlock(scope: !10800, file: !1713, line: 227, column: 6)
!10875 = !DILocation(line: 227, column: 6, scope: !10800)
!10876 = !DILocation(line: 228, column: 15, scope: !10877)
!10877 = distinct !DILexicalBlock(scope: !10874, file: !1713, line: 227, column: 19)
!10878 = !DILocation(line: 228, column: 38, scope: !10877)
!10879 = !DILocation(line: 228, column: 24, scope: !10877)
!10880 = !DILocation(line: 229, column: 2, scope: !10877)
!10881 = !DILocation(line: 230, column: 24, scope: !10882)
!10882 = distinct !DILexicalBlock(scope: !10874, file: !1713, line: 229, column: 9)
!10883 = !DILocation(line: 230, column: 15, scope: !10882)
!10884 = !DILocation(line: 0, scope: !10874)
!10885 = !DILocalVariable(name: "key", arg: 2, scope: !10886, file: !251, line: 190, type: !10811)
!10886 = distinct !DISubprogram(name: "k_spin_unlock", scope: !251, file: !251, line: 189, type: !10887, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !10889)
!10887 = !DISubroutineType(types: !10888)
!10888 = !{null, !10831, !10811}
!10889 = !{!10890, !10885}
!10890 = !DILocalVariable(name: "l", arg: 1, scope: !10886, file: !251, line: 189, type: !10831)
!10891 = !DILocation(line: 0, scope: !10886, inlinedAt: !10892)
!10892 = distinct !DILocation(line: 232, column: 2, scope: !10800)
!10893 = !DILocation(line: 194, column: 2, scope: !10894, inlinedAt: !10892)
!10894 = distinct !DILexicalBlock(scope: !10895, file: !251, line: 194, column: 2)
!10895 = distinct !DILexicalBlock(scope: !10886, file: !251, line: 194, column: 2)
!10896 = !DILocation(line: 194, column: 2, scope: !10895, inlinedAt: !10892)
!10897 = !DILocation(line: 194, column: 2, scope: !10898, inlinedAt: !10892)
!10898 = distinct !DILexicalBlock(scope: !10894, file: !251, line: 194, column: 2)
!10899 = !DILocalVariable(name: "key", arg: 1, scope: !10900, file: !6165, line: 84, type: !32)
!10900 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6165, file: !6165, line: 84, type: !6176, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !10901)
!10901 = !{!10899}
!10902 = !DILocation(line: 0, scope: !10900, inlinedAt: !10903)
!10903 = distinct !DILocation(line: 215, column: 2, scope: !10886, inlinedAt: !10892)
!10904 = !DILocation(line: 95, column: 2, scope: !10900, inlinedAt: !10903)
!10905 = !{i64 2284390}
!10906 = !DILocation(line: 234, column: 1, scope: !10800)
!10907 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1713, file: !1713, line: 236, type: !6573, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !10908)
!10908 = !{!10909, !10910}
!10909 = !DILocalVariable(name: "key", scope: !10907, file: !1713, line: 242, type: !10811)
!10910 = !DILocalVariable(name: "cyc", scope: !10907, file: !1713, line: 243, type: !110)
!10911 = !DILocation(line: 0, scope: !10828, inlinedAt: !10912)
!10912 = distinct !DILocation(line: 242, column: 25, scope: !10907)
!10913 = !DILocation(line: 55, column: 2, scope: !10837, inlinedAt: !10914)
!10914 = distinct !DILocation(line: 145, column: 10, scope: !10828, inlinedAt: !10912)
!10915 = !DILocation(line: 0, scope: !10837, inlinedAt: !10914)
!10916 = !DILocation(line: 148, column: 2, scope: !10845, inlinedAt: !10912)
!10917 = !DILocation(line: 148, column: 2, scope: !10846, inlinedAt: !10912)
!10918 = !DILocation(line: 148, column: 2, scope: !10849, inlinedAt: !10912)
!10919 = !DILocation(line: 160, column: 2, scope: !10828, inlinedAt: !10912)
!10920 = !DILocation(line: 0, scope: !10907)
!10921 = !DILocation(line: 243, column: 17, scope: !10907)
!10922 = !DILocation(line: 243, column: 29, scope: !10907)
!10923 = !DILocation(line: 243, column: 43, scope: !10907)
!10924 = !DILocation(line: 0, scope: !10886, inlinedAt: !10925)
!10925 = distinct !DILocation(line: 245, column: 2, scope: !10907)
!10926 = !DILocation(line: 194, column: 2, scope: !10894, inlinedAt: !10925)
!10927 = !DILocation(line: 194, column: 2, scope: !10895, inlinedAt: !10925)
!10928 = !DILocation(line: 194, column: 2, scope: !10898, inlinedAt: !10925)
!10929 = !DILocation(line: 243, column: 27, scope: !10907)
!10930 = !DILocation(line: 243, column: 41, scope: !10907)
!10931 = !DILocation(line: 0, scope: !10900, inlinedAt: !10932)
!10932 = distinct !DILocation(line: 215, column: 2, scope: !10886, inlinedAt: !10925)
!10933 = !DILocation(line: 95, column: 2, scope: !10900, inlinedAt: !10932)
!10934 = !DILocation(line: 246, column: 13, scope: !10907)
!10935 = !DILocation(line: 246, column: 2, scope: !10907)
!10936 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1713, file: !1713, line: 249, type: !6573, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !10937)
!10937 = !{!10938, !10939}
!10938 = !DILocalVariable(name: "key", scope: !10936, file: !1713, line: 251, type: !10811)
!10939 = !DILocalVariable(name: "ret", scope: !10936, file: !1713, line: 252, type: !110)
!10940 = !DILocation(line: 0, scope: !10828, inlinedAt: !10941)
!10941 = distinct !DILocation(line: 251, column: 25, scope: !10936)
!10942 = !DILocation(line: 55, column: 2, scope: !10837, inlinedAt: !10943)
!10943 = distinct !DILocation(line: 145, column: 10, scope: !10828, inlinedAt: !10941)
!10944 = !DILocation(line: 0, scope: !10837, inlinedAt: !10943)
!10945 = !DILocation(line: 148, column: 2, scope: !10845, inlinedAt: !10941)
!10946 = !DILocation(line: 148, column: 2, scope: !10846, inlinedAt: !10941)
!10947 = !DILocation(line: 148, column: 2, scope: !10849, inlinedAt: !10941)
!10948 = !DILocation(line: 160, column: 2, scope: !10828, inlinedAt: !10941)
!10949 = !DILocation(line: 0, scope: !10936)
!10950 = !DILocation(line: 252, column: 17, scope: !10936)
!10951 = !DILocation(line: 252, column: 29, scope: !10936)
!10952 = !DILocation(line: 0, scope: !10886, inlinedAt: !10953)
!10953 = distinct !DILocation(line: 254, column: 2, scope: !10936)
!10954 = !DILocation(line: 194, column: 2, scope: !10894, inlinedAt: !10953)
!10955 = !DILocation(line: 194, column: 2, scope: !10895, inlinedAt: !10953)
!10956 = !DILocation(line: 194, column: 2, scope: !10898, inlinedAt: !10953)
!10957 = !DILocation(line: 252, column: 27, scope: !10936)
!10958 = !DILocation(line: 0, scope: !10900, inlinedAt: !10959)
!10959 = distinct !DILocation(line: 215, column: 2, scope: !10886, inlinedAt: !10953)
!10960 = !DILocation(line: 95, column: 2, scope: !10900, inlinedAt: !10959)
!10961 = !DILocation(line: 255, column: 2, scope: !10936)
!10962 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1713, file: !1713, line: 258, type: !3155, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !2106)
!10963 = !DILocation(line: 260, column: 6, scope: !10964)
!10964 = distinct !DILexicalBlock(scope: !10962, file: !1713, line: 260, column: 6)
!10965 = !DILocation(line: 260, column: 16, scope: !10964)
!10966 = !DILocation(line: 260, column: 6, scope: !10962)
!10967 = !DILocation(line: 261, column: 17, scope: !10968)
!10968 = distinct !DILexicalBlock(scope: !10964, file: !1713, line: 260, column: 34)
!10969 = !DILocation(line: 262, column: 2, scope: !10968)
!10970 = !DILocation(line: 263, column: 1, scope: !10962)
!10971 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1713, file: !1713, line: 265, type: !3155, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !2106)
!10972 = !DILocation(line: 267, column: 16, scope: !10971)
!10973 = !DILocation(line: 268, column: 1, scope: !10971)
!10974 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !10975, file: !10975, line: 9, type: !10976, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2983, retainedNodes: !10999)
!10975 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10976 = !DISubroutineType(types: !10977)
!10977 = !{!109, !10978, !178, !10998}
!10978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10979, size: 32)
!10979 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10980)
!10980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1554, line: 60, size: 64, elements: !10981)
!10981 = !{!10982, !10997}
!10982 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !10980, file: !1554, line: 69, baseType: !10983, size: 32)
!10983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10984, size: 32)
!10984 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10985)
!10985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1554, line: 50, size: 64, elements: !10986)
!10986 = !{!10987, !10995, !10996}
!10987 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !10985, file: !1554, line: 52, baseType: !10988, size: 32)
!10988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10989, size: 32)
!10989 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10990)
!10990 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1565, line: 37, baseType: !10991)
!10991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1565, line: 32, size: 64, elements: !10992)
!10992 = !{!10993, !10994}
!10993 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10991, file: !1565, line: 34, baseType: !110, size: 32)
!10994 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10991, file: !1565, line: 36, baseType: !110, size: 32, offset: 32)
!10995 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !10985, file: !1554, line: 54, baseType: !178, size: 8, offset: 32)
!10996 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10985, file: !1554, line: 56, baseType: !178, size: 8, offset: 40)
!10997 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !10980, file: !1554, line: 71, baseType: !178, size: 8, offset: 32)
!10998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10983, size: 32)
!10999 = !{!11000, !11001, !11002}
!11000 = !DILocalVariable(name: "config", arg: 1, scope: !10974, file: !10975, line: 9, type: !10978)
!11001 = !DILocalVariable(name: "id", arg: 2, scope: !10974, file: !10975, line: 9, type: !178)
!11002 = !DILocalVariable(name: "state", arg: 3, scope: !10974, file: !10975, line: 10, type: !10998)
!11003 = !DILocation(line: 0, scope: !10974)
!11004 = !DILocation(line: 12, column: 20, scope: !10974)
!11005 = !DILocation(line: 13, column: 27, scope: !10974)
!11006 = !DILocation(line: 13, column: 42, scope: !10974)
!11007 = !DILocation(line: 13, column: 19, scope: !10974)
!11008 = !DILocation(line: 13, column: 16, scope: !10974)
!11009 = !DILocation(line: 13, column: 2, scope: !10974)
!11010 = distinct !{!11010, !11009, !11011}
!11011 = !DILocation(line: 19, column: 2, scope: !10974)
!11012 = !DILocation(line: 14, column: 23, scope: !11013)
!11013 = distinct !DILexicalBlock(scope: !11014, file: !10975, line: 14, column: 7)
!11014 = distinct !DILexicalBlock(scope: !10974, file: !10975, line: 13, column: 54)
!11015 = !DILocation(line: 14, column: 10, scope: !11013)
!11016 = !DILocation(line: 18, column: 11, scope: !11014)
!11017 = !DILocation(line: 14, column: 7, scope: !11014)
!11018 = !DILocation(line: 22, column: 1, scope: !10974)
!11019 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1832, file: !1832, line: 193, type: !11020, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1750, retainedNodes: !11029)
!11020 = !DISubroutineType(types: !11021)
!11021 = !{!109, !11022, !178, !22}
!11022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11023, size: 32)
!11023 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11024)
!11024 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1565, line: 37, baseType: !11025)
!11025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1565, line: 32, size: 64, elements: !11026)
!11026 = !{!11027, !11028}
!11027 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11025, file: !1565, line: 34, baseType: !110, size: 32)
!11028 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !11025, file: !1565, line: 36, baseType: !110, size: 32, offset: 32)
!11029 = !{!11030, !11031, !11032, !11033, !11034, !11035, !11036, !11037, !11039}
!11030 = !DILocalVariable(name: "pins", arg: 1, scope: !11019, file: !1832, line: 193, type: !11022)
!11031 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !11019, file: !1832, line: 193, type: !178)
!11032 = !DILocalVariable(name: "reg", arg: 3, scope: !11019, file: !1832, line: 194, type: !22)
!11033 = !DILocalVariable(name: "pin", scope: !11019, file: !1832, line: 196, type: !110)
!11034 = !DILocalVariable(name: "mux", scope: !11019, file: !1832, line: 196, type: !110)
!11035 = !DILocalVariable(name: "pin_cgf", scope: !11019, file: !1832, line: 197, type: !110)
!11036 = !DILocalVariable(name: "ret", scope: !11019, file: !1832, line: 198, type: !109)
!11037 = !DILocalVariable(name: "i", scope: !11038, file: !1832, line: 209, type: !178)
!11038 = distinct !DILexicalBlock(scope: !11019, file: !1832, line: 209, column: 2)
!11039 = !DILocalVariable(name: "gpio_out", scope: !11040, file: !1832, line: 239, type: !110)
!11040 = distinct !DILexicalBlock(scope: !11041, file: !1832, line: 238, column: 55)
!11041 = distinct !DILexicalBlock(scope: !11042, file: !1832, line: 238, column: 14)
!11042 = distinct !DILexicalBlock(scope: !11043, file: !1832, line: 236, column: 14)
!11043 = distinct !DILexicalBlock(scope: !11044, file: !1832, line: 234, column: 7)
!11044 = distinct !DILexicalBlock(scope: !11045, file: !1832, line: 209, column: 41)
!11045 = distinct !DILexicalBlock(scope: !11038, file: !1832, line: 209, column: 2)
!11046 = !DILocation(line: 0, scope: !11019)
!11047 = !DILocation(line: 0, scope: !11038)
!11048 = !DILocation(line: 209, column: 25, scope: !11045)
!11049 = !DILocation(line: 209, column: 2, scope: !11038)
!11050 = distinct !{!11050, !11049, !11051}
!11051 = !DILocation(line: 259, column: 2, scope: !11038)
!11052 = !DILocation(line: 210, column: 17, scope: !11044)
!11053 = !DILocation(line: 234, column: 7, scope: !11043)
!11054 = !DILocation(line: 234, column: 33, scope: !11043)
!11055 = !DILocation(line: 234, column: 7, scope: !11044)
!11056 = !DILocation(line: 235, column: 22, scope: !11057)
!11057 = distinct !DILexicalBlock(scope: !11043, file: !1832, line: 234, column: 49)
!11058 = !DILocation(line: 235, column: 29, scope: !11057)
!11059 = !DILocation(line: 236, column: 3, scope: !11057)
!11060 = !DILocation(line: 236, column: 14, scope: !11043)
!11061 = !DILocation(line: 239, column: 32, scope: !11040)
!11062 = !DILocation(line: 0, scope: !11040)
!11063 = !DILocation(line: 241, column: 8, scope: !11040)
!11064 = !DILocation(line: 246, column: 3, scope: !11040)
!11065 = !DILocation(line: 252, column: 9, scope: !11044)
!11066 = !DILocation(line: 255, column: 9, scope: !11044)
!11067 = !DILocation(line: 256, column: 11, scope: !11068)
!11068 = distinct !DILexicalBlock(scope: !11044, file: !1832, line: 256, column: 7)
!11069 = !DILocation(line: 209, column: 37, scope: !11045)
!11070 = !DILocation(line: 256, column: 7, scope: !11044)
!11071 = !DILocation(line: 262, column: 1, scope: !11019)
!11072 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1832, file: !1832, line: 176, type: !11073, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1750, retainedNodes: !11075)
!11073 = !DISubroutineType(types: !11074)
!11074 = !{!109, !110, !110, !110}
!11075 = !{!11076, !11077, !11078, !11079}
!11076 = !DILocalVariable(name: "pin", arg: 1, scope: !11072, file: !1832, line: 176, type: !110)
!11077 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !11072, file: !1832, line: 176, type: !110)
!11078 = !DILocalVariable(name: "pin_func", arg: 3, scope: !11072, file: !1832, line: 176, type: !110)
!11079 = !DILocalVariable(name: "port_device", scope: !11072, file: !1832, line: 178, type: !1762)
!11080 = !DILocation(line: 0, scope: !11072)
!11081 = !DILocation(line: 180, column: 22, scope: !11082)
!11082 = distinct !DILexicalBlock(scope: !11072, file: !1832, line: 180, column: 6)
!11083 = !DILocation(line: 180, column: 6, scope: !11072)
!11084 = !DILocation(line: 180, column: 6, scope: !11082)
!11085 = !DILocation(line: 184, column: 16, scope: !11072)
!11086 = !DILocation(line: 186, column: 19, scope: !11087)
!11087 = distinct !DILexicalBlock(scope: !11072, file: !1832, line: 186, column: 6)
!11088 = !DILocation(line: 186, column: 28, scope: !11087)
!11089 = !DILocation(line: 186, column: 33, scope: !11087)
!11090 = !DILocation(line: 186, column: 6, scope: !11072)
!11091 = !DILocation(line: 190, column: 43, scope: !11072)
!11092 = !DILocation(line: 190, column: 9, scope: !11072)
!11093 = !DILocation(line: 190, column: 2, scope: !11072)
!11094 = !DILocation(line: 191, column: 1, scope: !11072)
!11095 = distinct !DISubprogram(name: "device_is_ready", scope: !8999, file: !8999, line: 47, type: !11096, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1750, retainedNodes: !11098)
!11096 = !DISubroutineType(types: !11097)
!11097 = !{!347, !1762}
!11098 = !{!11099}
!11099 = !DILocalVariable(name: "dev", arg: 1, scope: !11095, file: !8999, line: 47, type: !1762)
!11100 = !DILocation(line: 0, scope: !11095)
!11101 = !DILocation(line: 55, column: 2, scope: !11102)
!11102 = distinct !DILexicalBlock(scope: !11095, file: !8999, line: 55, column: 2)
!11103 = !{i64 2149517582}
!11104 = !DILocation(line: 56, column: 9, scope: !11095)
!11105 = !DILocation(line: 56, column: 2, scope: !11095)
!11106 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !336, file: !336, line: 730, type: !11096, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1750, retainedNodes: !11107)
!11107 = !{!11108}
!11108 = !DILocalVariable(name: "dev", arg: 1, scope: !11106, file: !336, line: 730, type: !1762)
!11109 = !DILocation(line: 0, scope: !11106)
!11110 = !DILocation(line: 732, column: 9, scope: !11106)
!11111 = !DILocation(line: 732, column: 2, scope: !11106)
!11112 = distinct !DISubprogram(name: "SystemInit", scope: !1884, file: !1884, line: 167, type: !3155, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1840, retainedNodes: !2106)
!11113 = !DILocation(line: 182, column: 1, scope: !11112)
!11114 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1884, file: !1884, line: 220, type: !3155, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1840, retainedNodes: !11115)
!11115 = !{!11116, !11117, !11118, !11119, !11120}
!11116 = !DILocalVariable(name: "tmp", scope: !11114, file: !1884, line: 222, type: !110)
!11117 = !DILocalVariable(name: "pllvco", scope: !11114, file: !1884, line: 222, type: !110)
!11118 = !DILocalVariable(name: "pllp", scope: !11114, file: !1884, line: 222, type: !110)
!11119 = !DILocalVariable(name: "pllsource", scope: !11114, file: !1884, line: 222, type: !110)
!11120 = !DILocalVariable(name: "pllm", scope: !11114, file: !1884, line: 222, type: !110)
!11121 = !DILocation(line: 0, scope: !11114)
!11122 = !DILocation(line: 225, column: 14, scope: !11114)
!11123 = !DILocation(line: 225, column: 19, scope: !11114)
!11124 = !DILocation(line: 227, column: 3, scope: !11114)
!11125 = !DILocation(line: 240, column: 25, scope: !11126)
!11126 = distinct !DILexicalBlock(scope: !11114, file: !1884, line: 228, column: 3)
!11127 = !DILocation(line: 241, column: 19, scope: !11126)
!11128 = !DILocation(line: 241, column: 27, scope: !11126)
!11129 = !DILocation(line: 0, scope: !11130)
!11130 = distinct !DILexicalBlock(scope: !11126, file: !1884, line: 243, column: 11)
!11131 = !DILocation(line: 254, column: 22, scope: !11126)
!11132 = !DILocation(line: 254, column: 62, scope: !11126)
!11133 = !DILocation(line: 255, column: 31, scope: !11126)
!11134 = !DILocation(line: 256, column: 7, scope: !11126)
!11135 = !DILocation(line: 0, scope: !11126)
!11136 = !DILocation(line: 263, column: 30, scope: !11114)
!11137 = !DILocation(line: 263, column: 52, scope: !11114)
!11138 = !DILocation(line: 263, column: 9, scope: !11114)
!11139 = !DILocation(line: 265, column: 19, scope: !11114)
!11140 = !DILocation(line: 266, column: 1, scope: !11114)
!11141 = distinct !DISubprogram(name: "HAL_RCCEx_PeriphCLKConfig", scope: !11142, file: !11142, line: 87, type: !11143, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2985, retainedNodes: !11182)
!11142 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc_ex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11143 = !DISubroutineType(types: !11144)
!11144 = !{!11145, !11146}
!11145 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2989, line: 44, baseType: !2988)
!11146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11147, size: 32)
!11147 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PeriphCLKInitTypeDef", file: !11148, line: 172, baseType: !11149)
!11148 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11149 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11148, line: 121, size: 736, elements: !11150)
!11150 = !{!11151, !11152, !11161, !11169, !11170, !11171, !11172, !11173, !11174, !11175, !11176, !11177, !11178, !11179, !11180, !11181}
!11151 = !DIDerivedType(tag: DW_TAG_member, name: "PeriphClockSelection", scope: !11149, file: !11148, line: 123, baseType: !110, size: 32)
!11152 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2S", scope: !11149, file: !11148, line: 126, baseType: !11153, size: 160, offset: 32)
!11153 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLI2SInitTypeDef", file: !11148, line: 97, baseType: !11154)
!11154 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11148, line: 79, size: 160, elements: !11155)
!11155 = !{!11156, !11157, !11158, !11159, !11160}
!11156 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SM", scope: !11154, file: !11148, line: 81, baseType: !110, size: 32)
!11157 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SN", scope: !11154, file: !11148, line: 84, baseType: !110, size: 32, offset: 32)
!11158 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SP", scope: !11154, file: !11148, line: 87, baseType: !110, size: 32, offset: 64)
!11159 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SQ", scope: !11154, file: !11148, line: 90, baseType: !110, size: 32, offset: 96)
!11160 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SR", scope: !11154, file: !11148, line: 94, baseType: !110, size: 32, offset: 128)
!11161 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAI", scope: !11149, file: !11148, line: 129, baseType: !11162, size: 128, offset: 192)
!11162 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLSAIInitTypeDef", file: !11148, line: 116, baseType: !11163)
!11163 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11148, line: 102, size: 128, elements: !11164)
!11164 = !{!11165, !11166, !11167, !11168}
!11165 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIM", scope: !11163, file: !11148, line: 104, baseType: !110, size: 32)
!11166 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIN", scope: !11163, file: !11148, line: 107, baseType: !110, size: 32, offset: 32)
!11167 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIP", scope: !11163, file: !11148, line: 110, baseType: !110, size: 32, offset: 64)
!11168 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIQ", scope: !11163, file: !11148, line: 113, baseType: !110, size: 32, offset: 96)
!11169 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SDivQ", scope: !11149, file: !11148, line: 132, baseType: !110, size: 32, offset: 320)
!11170 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIDivQ", scope: !11149, file: !11148, line: 136, baseType: !110, size: 32, offset: 352)
!11171 = !DIDerivedType(tag: DW_TAG_member, name: "Sai1ClockSelection", scope: !11149, file: !11148, line: 140, baseType: !110, size: 32, offset: 384)
!11172 = !DIDerivedType(tag: DW_TAG_member, name: "Sai2ClockSelection", scope: !11149, file: !11148, line: 143, baseType: !110, size: 32, offset: 416)
!11173 = !DIDerivedType(tag: DW_TAG_member, name: "I2sApb1ClockSelection", scope: !11149, file: !11148, line: 146, baseType: !110, size: 32, offset: 448)
!11174 = !DIDerivedType(tag: DW_TAG_member, name: "I2sApb2ClockSelection", scope: !11149, file: !11148, line: 149, baseType: !110, size: 32, offset: 480)
!11175 = !DIDerivedType(tag: DW_TAG_member, name: "RTCClockSelection", scope: !11149, file: !11148, line: 152, baseType: !110, size: 32, offset: 512)
!11176 = !DIDerivedType(tag: DW_TAG_member, name: "SdioClockSelection", scope: !11149, file: !11148, line: 155, baseType: !110, size: 32, offset: 544)
!11177 = !DIDerivedType(tag: DW_TAG_member, name: "CecClockSelection", scope: !11149, file: !11148, line: 158, baseType: !110, size: 32, offset: 576)
!11178 = !DIDerivedType(tag: DW_TAG_member, name: "Fmpi2c1ClockSelection", scope: !11149, file: !11148, line: 161, baseType: !110, size: 32, offset: 608)
!11179 = !DIDerivedType(tag: DW_TAG_member, name: "SpdifClockSelection", scope: !11149, file: !11148, line: 164, baseType: !110, size: 32, offset: 640)
!11180 = !DIDerivedType(tag: DW_TAG_member, name: "Clk48ClockSelection", scope: !11149, file: !11148, line: 167, baseType: !110, size: 32, offset: 672)
!11181 = !DIDerivedType(tag: DW_TAG_member, name: "TIMPresSelection", scope: !11149, file: !11148, line: 170, baseType: !178, size: 8, offset: 704)
!11182 = !{!11183, !11184, !11185, !11186, !11187, !11188, !11189, !11190, !11191, !11192, !11193}
!11183 = !DILocalVariable(name: "PeriphClkInit", arg: 1, scope: !11141, file: !11142, line: 87, type: !11146)
!11184 = !DILocalVariable(name: "tickstart", scope: !11141, file: !11142, line: 89, type: !110)
!11185 = !DILocalVariable(name: "tmpreg1", scope: !11141, file: !11142, line: 90, type: !110)
!11186 = !DILocalVariable(name: "plli2sp", scope: !11141, file: !11142, line: 91, type: !110)
!11187 = !DILocalVariable(name: "plli2sq", scope: !11141, file: !11142, line: 92, type: !110)
!11188 = !DILocalVariable(name: "plli2sr", scope: !11141, file: !11142, line: 93, type: !110)
!11189 = !DILocalVariable(name: "pllsaip", scope: !11141, file: !11142, line: 94, type: !110)
!11190 = !DILocalVariable(name: "pllsaiq", scope: !11141, file: !11142, line: 95, type: !110)
!11191 = !DILocalVariable(name: "plli2sused", scope: !11141, file: !11142, line: 96, type: !110)
!11192 = !DILocalVariable(name: "pllsaiused", scope: !11141, file: !11142, line: 97, type: !110)
!11193 = !DILocalVariable(name: "tmpreg", scope: !11194, file: !11142, line: 184, type: !316)
!11194 = distinct !DILexicalBlock(scope: !11195, file: !11142, line: 184, column: 5)
!11195 = distinct !DILexicalBlock(scope: !11196, file: !11142, line: 179, column: 3)
!11196 = distinct !DILexicalBlock(scope: !11141, file: !11142, line: 178, column: 6)
!11197 = !DILocation(line: 0, scope: !11141)
!11198 = !DILocation(line: 103, column: 23, scope: !11199)
!11199 = distinct !DILexicalBlock(scope: !11141, file: !11142, line: 103, column: 6)
!11200 = !DILocation(line: 103, column: 45, scope: !11199)
!11201 = !DILocation(line: 103, column: 71, scope: !11199)
!11202 = !DILocation(line: 103, column: 6, scope: !11141)
!11203 = !DILocation(line: 109, column: 5, scope: !11204)
!11204 = distinct !DILexicalBlock(scope: !11199, file: !11142, line: 104, column: 3)
!11205 = !DILocation(line: 111, column: 23, scope: !11206)
!11206 = distinct !DILexicalBlock(scope: !11204, file: !11142, line: 111, column: 8)
!11207 = !DILocation(line: 111, column: 45, scope: !11206)
!11208 = !DILocation(line: 111, column: 8, scope: !11204)
!11209 = !DILocation(line: 119, column: 23, scope: !11210)
!11210 = distinct !DILexicalBlock(scope: !11141, file: !11142, line: 119, column: 6)
!11211 = !DILocation(line: 119, column: 45, scope: !11210)
!11212 = !DILocation(line: 119, column: 71, scope: !11210)
!11213 = !DILocation(line: 119, column: 6, scope: !11141)
!11214 = !DILocation(line: 125, column: 5, scope: !11215)
!11215 = distinct !DILexicalBlock(scope: !11210, file: !11142, line: 120, column: 3)
!11216 = !DILocation(line: 127, column: 23, scope: !11217)
!11217 = distinct !DILexicalBlock(scope: !11215, file: !11142, line: 127, column: 8)
!11218 = !DILocation(line: 127, column: 45, scope: !11217)
!11219 = !DILocation(line: 127, column: 8, scope: !11215)
!11220 = !DILocation(line: 135, column: 23, scope: !11221)
!11221 = distinct !DILexicalBlock(scope: !11141, file: !11142, line: 135, column: 6)
!11222 = !DILocation(line: 135, column: 45, scope: !11221)
!11223 = !DILocation(line: 135, column: 67, scope: !11221)
!11224 = !DILocation(line: 135, column: 6, scope: !11141)
!11225 = !DILocation(line: 141, column: 5, scope: !11226)
!11226 = distinct !DILexicalBlock(scope: !11221, file: !11142, line: 136, column: 3)
!11227 = !DILocation(line: 143, column: 23, scope: !11228)
!11228 = distinct !DILexicalBlock(scope: !11226, file: !11142, line: 143, column: 8)
!11229 = !DILocation(line: 143, column: 42, scope: !11228)
!11230 = !DILocation(line: 143, column: 8, scope: !11226)
!11231 = !DILocation(line: 148, column: 42, scope: !11232)
!11232 = distinct !DILexicalBlock(scope: !11226, file: !11142, line: 148, column: 8)
!11233 = !DILocation(line: 148, column: 8, scope: !11226)
!11234 = !DILocation(line: 156, column: 23, scope: !11235)
!11235 = distinct !DILexicalBlock(scope: !11141, file: !11142, line: 156, column: 6)
!11236 = !DILocation(line: 156, column: 45, scope: !11235)
!11237 = !DILocation(line: 156, column: 67, scope: !11235)
!11238 = !DILocation(line: 156, column: 6, scope: !11141)
!11239 = !DILocation(line: 162, column: 5, scope: !11240)
!11240 = distinct !DILexicalBlock(scope: !11235, file: !11142, line: 157, column: 3)
!11241 = !DILocation(line: 165, column: 23, scope: !11242)
!11242 = distinct !DILexicalBlock(scope: !11240, file: !11142, line: 165, column: 8)
!11243 = !DILocation(line: 165, column: 42, scope: !11242)
!11244 = !DILocation(line: 165, column: 8, scope: !11240)
!11245 = !DILocation(line: 170, column: 42, scope: !11246)
!11246 = distinct !DILexicalBlock(scope: !11240, file: !11142, line: 170, column: 8)
!11247 = !DILocation(line: 170, column: 8, scope: !11240)
!11248 = !DILocation(line: 178, column: 23, scope: !11196)
!11249 = !DILocation(line: 178, column: 45, scope: !11196)
!11250 = !DILocation(line: 178, column: 66, scope: !11196)
!11251 = !DILocation(line: 178, column: 6, scope: !11141)
!11252 = !DILocation(line: 184, column: 5, scope: !11194)
!11253 = !DILocation(line: 184, column: 5, scope: !11195)
!11254 = !DILocation(line: 187, column: 13, scope: !11195)
!11255 = !DILocation(line: 190, column: 17, scope: !11195)
!11256 = !DILocation(line: 192, column: 5, scope: !11195)
!11257 = !DILocation(line: 192, column: 17, scope: !11195)
!11258 = !DILocation(line: 192, column: 20, scope: !11195)
!11259 = !DILocation(line: 192, column: 34, scope: !11195)
!11260 = !DILocation(line: 194, column: 11, scope: !11261)
!11261 = distinct !DILexicalBlock(scope: !11262, file: !11142, line: 194, column: 10)
!11262 = distinct !DILexicalBlock(scope: !11195, file: !11142, line: 193, column: 5)
!11263 = !DILocation(line: 194, column: 25, scope: !11261)
!11264 = !DILocation(line: 194, column: 39, scope: !11261)
!11265 = !DILocation(line: 194, column: 10, scope: !11262)
!11266 = distinct !{!11266, !11256, !11267}
!11267 = !DILocation(line: 198, column: 5, scope: !11195)
!11268 = !DILocation(line: 200, column: 21, scope: !11195)
!11269 = !DILocation(line: 200, column: 26, scope: !11195)
!11270 = !DILocation(line: 201, column: 17, scope: !11271)
!11271 = distinct !DILexicalBlock(scope: !11195, file: !11142, line: 201, column: 8)
!11272 = !DILocation(line: 201, column: 33, scope: !11271)
!11273 = !DILocation(line: 201, column: 66, scope: !11271)
!11274 = !DILocation(line: 201, column: 84, scope: !11271)
!11275 = !DILocation(line: 201, column: 47, scope: !11271)
!11276 = !DILocation(line: 201, column: 8, scope: !11195)
!11277 = !DILocation(line: 204, column: 23, scope: !11278)
!11278 = distinct !DILexicalBlock(scope: !11271, file: !11142, line: 202, column: 5)
!11279 = !DILocation(line: 204, column: 28, scope: !11278)
!11280 = !DILocation(line: 206, column: 7, scope: !11278)
!11281 = !DILocation(line: 207, column: 7, scope: !11278)
!11282 = !DILocation(line: 209, column: 17, scope: !11278)
!11283 = !DILocation(line: 212, column: 10, scope: !11284)
!11284 = distinct !DILexicalBlock(scope: !11278, file: !11142, line: 212, column: 10)
!11285 = !DILocation(line: 212, column: 10, scope: !11278)
!11286 = !DILocation(line: 215, column: 21, scope: !11287)
!11287 = distinct !DILexicalBlock(scope: !11284, file: !11142, line: 213, column: 7)
!11288 = !DILocation(line: 218, column: 9, scope: !11287)
!11289 = !DILocation(line: 218, column: 15, scope: !11287)
!11290 = !DILocation(line: 218, column: 51, scope: !11287)
!11291 = !DILocation(line: 220, column: 15, scope: !11292)
!11292 = distinct !DILexicalBlock(scope: !11293, file: !11142, line: 220, column: 14)
!11293 = distinct !DILexicalBlock(scope: !11287, file: !11142, line: 219, column: 9)
!11294 = !DILocation(line: 220, column: 29, scope: !11292)
!11295 = !DILocation(line: 220, column: 43, scope: !11292)
!11296 = !DILocation(line: 220, column: 14, scope: !11293)
!11297 = distinct !{!11297, !11288, !11298}
!11298 = !DILocation(line: 224, column: 9, scope: !11287)
!11299 = !DILocation(line: 227, column: 5, scope: !11300)
!11300 = distinct !DILexicalBlock(scope: !11195, file: !11142, line: 227, column: 5)
!11301 = !DILocation(line: 232, column: 23, scope: !11302)
!11302 = distinct !DILexicalBlock(scope: !11141, file: !11142, line: 232, column: 6)
!11303 = !DILocation(line: 228, column: 3, scope: !11195)
!11304 = !DILocation(line: 232, column: 45, scope: !11302)
!11305 = !DILocation(line: 232, column: 66, scope: !11302)
!11306 = !DILocation(line: 232, column: 6, scope: !11141)
!11307 = !DILocation(line: 235, column: 5, scope: !11308)
!11308 = distinct !DILexicalBlock(scope: !11302, file: !11142, line: 233, column: 3)
!11309 = !DILocation(line: 240, column: 23, scope: !11310)
!11310 = distinct !DILexicalBlock(scope: !11141, file: !11142, line: 240, column: 6)
!11311 = !DILocation(line: 236, column: 3, scope: !11308)
!11312 = !DILocation(line: 240, column: 45, scope: !11310)
!11313 = !DILocation(line: 240, column: 70, scope: !11310)
!11314 = !DILocation(line: 240, column: 6, scope: !11141)
!11315 = !DILocation(line: 246, column: 5, scope: !11316)
!11316 = distinct !DILexicalBlock(scope: !11310, file: !11142, line: 241, column: 3)
!11317 = !DILocation(line: 251, column: 23, scope: !11318)
!11318 = distinct !DILexicalBlock(scope: !11141, file: !11142, line: 251, column: 6)
!11319 = !DILocation(line: 247, column: 3, scope: !11316)
!11320 = !DILocation(line: 251, column: 45, scope: !11318)
!11321 = !DILocation(line: 251, column: 66, scope: !11318)
!11322 = !DILocation(line: 251, column: 6, scope: !11141)
!11323 = !DILocation(line: 257, column: 5, scope: !11324)
!11324 = distinct !DILexicalBlock(scope: !11318, file: !11142, line: 252, column: 3)
!11325 = !DILocation(line: 262, column: 23, scope: !11326)
!11326 = distinct !DILexicalBlock(scope: !11141, file: !11142, line: 262, column: 6)
!11327 = !DILocation(line: 258, column: 3, scope: !11324)
!11328 = !DILocation(line: 262, column: 45, scope: !11326)
!11329 = !DILocation(line: 262, column: 68, scope: !11326)
!11330 = !DILocation(line: 262, column: 6, scope: !11141)
!11331 = !DILocation(line: 268, column: 5, scope: !11332)
!11332 = distinct !DILexicalBlock(scope: !11326, file: !11142, line: 263, column: 3)
!11333 = !DILocation(line: 271, column: 23, scope: !11334)
!11334 = distinct !DILexicalBlock(scope: !11332, file: !11142, line: 271, column: 8)
!11335 = !DILocation(line: 271, column: 43, scope: !11334)
!11336 = !DILocation(line: 271, column: 8, scope: !11332)
!11337 = !DILocation(line: 279, column: 23, scope: !11338)
!11338 = distinct !DILexicalBlock(scope: !11141, file: !11142, line: 279, column: 6)
!11339 = !DILocation(line: 279, column: 45, scope: !11338)
!11340 = !DILocation(line: 279, column: 67, scope: !11338)
!11341 = !DILocation(line: 279, column: 6, scope: !11141)
!11342 = !DILocation(line: 285, column: 5, scope: !11343)
!11343 = distinct !DILexicalBlock(scope: !11338, file: !11142, line: 280, column: 3)
!11344 = !DILocation(line: 290, column: 23, scope: !11345)
!11345 = distinct !DILexicalBlock(scope: !11141, file: !11142, line: 290, column: 6)
!11346 = !DILocation(line: 286, column: 3, scope: !11343)
!11347 = !DILocation(line: 290, column: 45, scope: !11345)
!11348 = !DILocation(line: 290, column: 70, scope: !11345)
!11349 = !DILocation(line: 290, column: 6, scope: !11141)
!11350 = !DILocation(line: 296, column: 5, scope: !11351)
!11351 = distinct !DILexicalBlock(scope: !11345, file: !11142, line: 291, column: 3)
!11352 = !DILocation(line: 298, column: 23, scope: !11353)
!11353 = distinct !DILexicalBlock(scope: !11351, file: !11142, line: 298, column: 8)
!11354 = !DILocation(line: 298, column: 43, scope: !11353)
!11355 = !DILocation(line: 298, column: 8, scope: !11351)
!11356 = !DILocation(line: 308, column: 44, scope: !11357)
!11357 = distinct !DILexicalBlock(scope: !11141, file: !11142, line: 308, column: 6)
!11358 = !DILocation(line: 308, column: 18, scope: !11357)
!11359 = !DILocation(line: 308, column: 25, scope: !11357)
!11360 = !DILocation(line: 308, column: 65, scope: !11357)
!11361 = !DILocation(line: 308, column: 6, scope: !11141)
!11362 = !DILocation(line: 311, column: 5, scope: !11363)
!11363 = distinct !DILexicalBlock(scope: !11357, file: !11142, line: 309, column: 3)
!11364 = !DILocation(line: 313, column: 17, scope: !11363)
!11365 = !DILocation(line: 315, column: 5, scope: !11363)
!11366 = !DILocation(line: 315, column: 11, scope: !11363)
!11367 = !DILocation(line: 317, column: 11, scope: !11368)
!11368 = distinct !DILexicalBlock(scope: !11369, file: !11142, line: 317, column: 10)
!11369 = distinct !DILexicalBlock(scope: !11363, file: !11142, line: 316, column: 5)
!11370 = !DILocation(line: 317, column: 25, scope: !11368)
!11371 = !DILocation(line: 317, column: 39, scope: !11368)
!11372 = !DILocation(line: 317, column: 10, scope: !11369)
!11373 = distinct !{!11373, !11365, !11374}
!11374 = !DILocation(line: 322, column: 5, scope: !11363)
!11375 = !DILocation(line: 329, column: 27, scope: !11376)
!11376 = distinct !DILexicalBlock(scope: !11363, file: !11142, line: 329, column: 8)
!11377 = !DILocation(line: 329, column: 49, scope: !11376)
!11378 = !DILocation(line: 329, column: 75, scope: !11376)
!11379 = !DILocation(line: 329, column: 102, scope: !11376)
!11380 = !DILocation(line: 329, column: 121, scope: !11376)
!11381 = !DILocation(line: 329, column: 143, scope: !11376)
!11382 = !DILocation(line: 329, column: 176, scope: !11376)
!11383 = !DILocation(line: 330, column: 49, scope: !11376)
!11384 = !DILocation(line: 330, column: 75, scope: !11376)
!11385 = !DILocation(line: 330, column: 102, scope: !11376)
!11386 = !DILocation(line: 330, column: 121, scope: !11376)
!11387 = !DILocation(line: 330, column: 143, scope: !11376)
!11388 = !DILocation(line: 329, column: 8, scope: !11363)
!11389 = !DILocation(line: 336, column: 26, scope: !11390)
!11390 = distinct !DILexicalBlock(scope: !11376, file: !11142, line: 331, column: 5)
!11391 = !DILocation(line: 336, column: 100, scope: !11390)
!11392 = !DILocation(line: 337, column: 24, scope: !11390)
!11393 = !DILocation(line: 337, column: 61, scope: !11390)
!11394 = !DILocation(line: 341, column: 7, scope: !11390)
!11395 = !DILocation(line: 345, column: 27, scope: !11396)
!11396 = distinct !DILexicalBlock(scope: !11363, file: !11142, line: 345, column: 8)
!11397 = !DILocation(line: 342, column: 5, scope: !11390)
!11398 = !DILocation(line: 345, column: 49, scope: !11396)
!11399 = !DILocation(line: 345, column: 71, scope: !11396)
!11400 = !DILocation(line: 345, column: 94, scope: !11396)
!11401 = !DILocation(line: 345, column: 113, scope: !11396)
!11402 = !DILocation(line: 345, column: 132, scope: !11396)
!11403 = !DILocation(line: 345, column: 162, scope: !11396)
!11404 = !DILocation(line: 346, column: 49, scope: !11396)
!11405 = !DILocation(line: 346, column: 71, scope: !11396)
!11406 = !DILocation(line: 346, column: 94, scope: !11396)
!11407 = !DILocation(line: 346, column: 113, scope: !11396)
!11408 = !DILocation(line: 346, column: 132, scope: !11396)
!11409 = !DILocation(line: 345, column: 8, scope: !11363)
!11410 = !DILocation(line: 354, column: 26, scope: !11411)
!11411 = distinct !DILexicalBlock(scope: !11396, file: !11142, line: 347, column: 5)
!11412 = !DILocation(line: 354, column: 100, scope: !11411)
!11413 = !DILocation(line: 355, column: 24, scope: !11411)
!11414 = !DILocation(line: 355, column: 61, scope: !11411)
!11415 = !DILocation(line: 360, column: 7, scope: !11411)
!11416 = !DILocation(line: 363, column: 7, scope: !11411)
!11417 = !DILocation(line: 367, column: 26, scope: !11418)
!11418 = distinct !DILexicalBlock(scope: !11363, file: !11142, line: 367, column: 8)
!11419 = !DILocation(line: 364, column: 5, scope: !11411)
!11420 = !DILocation(line: 367, column: 48, scope: !11418)
!11421 = !DILocation(line: 367, column: 73, scope: !11418)
!11422 = !DILocation(line: 367, column: 99, scope: !11418)
!11423 = !DILocation(line: 367, column: 118, scope: !11418)
!11424 = !DILocation(line: 367, column: 138, scope: !11418)
!11425 = !DILocation(line: 367, column: 8, scope: !11363)
!11426 = !DILocation(line: 372, column: 26, scope: !11427)
!11427 = distinct !DILexicalBlock(scope: !11418, file: !11142, line: 368, column: 5)
!11428 = !DILocation(line: 373, column: 24, scope: !11427)
!11429 = !DILocation(line: 373, column: 61, scope: !11427)
!11430 = !DILocation(line: 377, column: 7, scope: !11427)
!11431 = !DILocation(line: 381, column: 24, scope: !11432)
!11432 = distinct !DILexicalBlock(scope: !11363, file: !11142, line: 381, column: 8)
!11433 = !DILocation(line: 378, column: 5, scope: !11427)
!11434 = !DILocation(line: 381, column: 45, scope: !11432)
!11435 = !DILocation(line: 381, column: 69, scope: !11432)
!11436 = !DILocation(line: 381, column: 8, scope: !11363)
!11437 = !DILocation(line: 390, column: 7, scope: !11438)
!11438 = distinct !DILexicalBlock(scope: !11432, file: !11142, line: 382, column: 5)
!11439 = !DILocation(line: 391, column: 5, scope: !11438)
!11440 = !DILocation(line: 394, column: 5, scope: !11363)
!11441 = !DILocation(line: 396, column: 17, scope: !11363)
!11442 = !DILocation(line: 398, column: 5, scope: !11363)
!11443 = !DILocation(line: 398, column: 11, scope: !11363)
!11444 = !DILocation(line: 398, column: 51, scope: !11363)
!11445 = !DILocation(line: 400, column: 11, scope: !11446)
!11446 = distinct !DILexicalBlock(scope: !11447, file: !11142, line: 400, column: 10)
!11447 = distinct !DILexicalBlock(scope: !11363, file: !11142, line: 399, column: 5)
!11448 = !DILocation(line: 400, column: 25, scope: !11446)
!11449 = !DILocation(line: 400, column: 39, scope: !11446)
!11450 = !DILocation(line: 400, column: 10, scope: !11447)
!11451 = distinct !{!11451, !11442, !11452}
!11452 = !DILocation(line: 405, column: 5, scope: !11363)
!11453 = !DILocation(line: 411, column: 17, scope: !11454)
!11454 = distinct !DILexicalBlock(scope: !11141, file: !11142, line: 411, column: 6)
!11455 = !DILocation(line: 411, column: 6, scope: !11141)
!11456 = !DILocation(line: 414, column: 5, scope: !11457)
!11457 = distinct !DILexicalBlock(scope: !11454, file: !11142, line: 412, column: 3)
!11458 = !DILocation(line: 416, column: 17, scope: !11457)
!11459 = !DILocation(line: 418, column: 5, scope: !11457)
!11460 = !DILocation(line: 418, column: 11, scope: !11457)
!11461 = !DILocation(line: 420, column: 11, scope: !11462)
!11462 = distinct !DILexicalBlock(scope: !11463, file: !11142, line: 420, column: 10)
!11463 = distinct !DILexicalBlock(scope: !11457, file: !11142, line: 419, column: 5)
!11464 = !DILocation(line: 420, column: 25, scope: !11462)
!11465 = !DILocation(line: 420, column: 39, scope: !11462)
!11466 = !DILocation(line: 420, column: 10, scope: !11463)
!11467 = distinct !{!11467, !11459, !11468}
!11468 = !DILocation(line: 425, column: 5, scope: !11457)
!11469 = !DILocation(line: 432, column: 27, scope: !11470)
!11470 = distinct !DILexicalBlock(scope: !11457, file: !11142, line: 432, column: 8)
!11471 = !DILocation(line: 432, column: 49, scope: !11470)
!11472 = !DILocation(line: 432, column: 71, scope: !11470)
!11473 = !DILocation(line: 432, column: 94, scope: !11470)
!11474 = !DILocation(line: 432, column: 113, scope: !11470)
!11475 = !DILocation(line: 432, column: 132, scope: !11470)
!11476 = !DILocation(line: 432, column: 162, scope: !11470)
!11477 = !DILocation(line: 433, column: 49, scope: !11470)
!11478 = !DILocation(line: 433, column: 71, scope: !11470)
!11479 = !DILocation(line: 433, column: 94, scope: !11470)
!11480 = !DILocation(line: 433, column: 113, scope: !11470)
!11481 = !DILocation(line: 433, column: 132, scope: !11470)
!11482 = !DILocation(line: 432, column: 8, scope: !11457)
!11483 = !DILocation(line: 441, column: 26, scope: !11484)
!11484 = distinct !DILexicalBlock(scope: !11470, file: !11142, line: 434, column: 5)
!11485 = !DILocation(line: 441, column: 100, scope: !11484)
!11486 = !DILocation(line: 445, column: 7, scope: !11484)
!11487 = !DILocation(line: 448, column: 7, scope: !11484)
!11488 = !DILocation(line: 453, column: 26, scope: !11489)
!11489 = distinct !DILexicalBlock(scope: !11457, file: !11142, line: 453, column: 8)
!11490 = !DILocation(line: 449, column: 5, scope: !11484)
!11491 = !DILocation(line: 453, column: 48, scope: !11489)
!11492 = !DILocation(line: 453, column: 71, scope: !11489)
!11493 = !DILocation(line: 453, column: 95, scope: !11489)
!11494 = !DILocation(line: 453, column: 114, scope: !11489)
!11495 = !DILocation(line: 453, column: 134, scope: !11489)
!11496 = !DILocation(line: 453, column: 8, scope: !11457)
!11497 = !DILocation(line: 458, column: 24, scope: !11498)
!11498 = distinct !DILexicalBlock(scope: !11489, file: !11142, line: 454, column: 5)
!11499 = !DILocation(line: 458, column: 61, scope: !11498)
!11500 = !DILocation(line: 462, column: 7, scope: !11498)
!11501 = !DILocation(line: 463, column: 5, scope: !11498)
!11502 = !DILocation(line: 466, column: 5, scope: !11457)
!11503 = !DILocation(line: 468, column: 17, scope: !11457)
!11504 = !DILocation(line: 470, column: 5, scope: !11457)
!11505 = !DILocation(line: 470, column: 11, scope: !11457)
!11506 = !DILocation(line: 470, column: 39, scope: !11457)
!11507 = !DILocation(line: 472, column: 11, scope: !11508)
!11508 = distinct !DILexicalBlock(scope: !11509, file: !11142, line: 472, column: 10)
!11509 = distinct !DILexicalBlock(scope: !11457, file: !11142, line: 471, column: 5)
!11510 = !DILocation(line: 472, column: 25, scope: !11508)
!11511 = !DILocation(line: 472, column: 39, scope: !11508)
!11512 = !DILocation(line: 472, column: 10, scope: !11509)
!11513 = distinct !{!11513, !11504, !11514}
!11514 = !DILocation(line: 477, column: 5, scope: !11457)
!11515 = !DILocation(line: 480, column: 1, scope: !11141)
!11516 = !DISubprogram(name: "HAL_GetTick", scope: !11517, file: !11517, line: 234, type: !6573, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2106)
!11517 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11518 = distinct !DISubprogram(name: "HAL_RCCEx_GetPeriphCLKConfig", scope: !11142, file: !11142, line: 489, type: !11519, scopeLine: 490, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2985, retainedNodes: !11521)
!11519 = !DISubroutineType(types: !11520)
!11520 = !{null, !11146}
!11521 = !{!11522, !11523}
!11522 = !DILocalVariable(name: "PeriphClkInit", arg: 1, scope: !11518, file: !11142, line: 489, type: !11146)
!11523 = !DILocalVariable(name: "tempreg", scope: !11518, file: !11142, line: 491, type: !110)
!11524 = !DILocation(line: 0, scope: !11518)
!11525 = !DILocation(line: 494, column: 18, scope: !11518)
!11526 = !DILocation(line: 494, column: 39, scope: !11518)
!11527 = !DILocation(line: 502, column: 52, scope: !11518)
!11528 = !DILocation(line: 502, column: 63, scope: !11518)
!11529 = !DILocation(line: 502, column: 25, scope: !11518)
!11530 = !DILocation(line: 502, column: 33, scope: !11518)
!11531 = !DILocation(line: 503, column: 52, scope: !11518)
!11532 = !DILocation(line: 503, column: 89, scope: !11518)
!11533 = !DILocation(line: 503, column: 25, scope: !11518)
!11534 = !DILocation(line: 503, column: 33, scope: !11518)
!11535 = !DILocation(line: 504, column: 54, scope: !11518)
!11536 = !DILocation(line: 504, column: 128, scope: !11518)
!11537 = !DILocation(line: 504, column: 25, scope: !11518)
!11538 = !DILocation(line: 504, column: 33, scope: !11518)
!11539 = !DILocation(line: 505, column: 52, scope: !11518)
!11540 = !DILocation(line: 505, column: 89, scope: !11518)
!11541 = !DILocation(line: 505, column: 25, scope: !11518)
!11542 = !DILocation(line: 505, column: 33, scope: !11518)
!11543 = !DILocation(line: 506, column: 52, scope: !11518)
!11544 = !DILocation(line: 506, column: 89, scope: !11518)
!11545 = !DILocation(line: 506, column: 25, scope: !11518)
!11546 = !DILocation(line: 506, column: 33, scope: !11518)
!11547 = !DILocation(line: 508, column: 52, scope: !11518)
!11548 = !DILocation(line: 508, column: 63, scope: !11518)
!11549 = !DILocation(line: 508, column: 25, scope: !11518)
!11550 = !DILocation(line: 508, column: 33, scope: !11518)
!11551 = !DILocation(line: 509, column: 52, scope: !11518)
!11552 = !DILocation(line: 509, column: 89, scope: !11518)
!11553 = !DILocation(line: 509, column: 25, scope: !11518)
!11554 = !DILocation(line: 509, column: 33, scope: !11518)
!11555 = !DILocation(line: 510, column: 54, scope: !11518)
!11556 = !DILocation(line: 510, column: 128, scope: !11518)
!11557 = !DILocation(line: 510, column: 25, scope: !11518)
!11558 = !DILocation(line: 510, column: 33, scope: !11518)
!11559 = !DILocation(line: 511, column: 52, scope: !11518)
!11560 = !DILocation(line: 511, column: 89, scope: !11518)
!11561 = !DILocation(line: 511, column: 25, scope: !11518)
!11562 = !DILocation(line: 511, column: 33, scope: !11518)
!11563 = !DILocation(line: 513, column: 48, scope: !11518)
!11564 = !DILocation(line: 513, column: 56, scope: !11518)
!11565 = !DILocation(line: 513, column: 18, scope: !11518)
!11566 = !DILocation(line: 513, column: 29, scope: !11518)
!11567 = !DILocation(line: 514, column: 48, scope: !11518)
!11568 = !DILocation(line: 514, column: 82, scope: !11518)
!11569 = !DILocation(line: 514, column: 18, scope: !11518)
!11570 = !DILocation(line: 514, column: 29, scope: !11518)
!11571 = !DILocation(line: 517, column: 39, scope: !11518)
!11572 = !DILocation(line: 517, column: 18, scope: !11518)
!11573 = !DILocation(line: 517, column: 37, scope: !11518)
!11574 = !DILocation(line: 520, column: 39, scope: !11518)
!11575 = !DILocation(line: 520, column: 18, scope: !11518)
!11576 = !DILocation(line: 520, column: 37, scope: !11518)
!11577 = !DILocation(line: 523, column: 42, scope: !11518)
!11578 = !DILocation(line: 523, column: 18, scope: !11518)
!11579 = !DILocation(line: 523, column: 40, scope: !11518)
!11580 = !DILocation(line: 526, column: 42, scope: !11518)
!11581 = !DILocation(line: 526, column: 18, scope: !11518)
!11582 = !DILocation(line: 526, column: 40, scope: !11518)
!11583 = !DILocation(line: 529, column: 19, scope: !11518)
!11584 = !DILocation(line: 529, column: 24, scope: !11518)
!11585 = !DILocation(line: 530, column: 67, scope: !11518)
!11586 = !DILocation(line: 530, column: 72, scope: !11518)
!11587 = !DILocation(line: 530, column: 59, scope: !11518)
!11588 = !DILocation(line: 530, column: 18, scope: !11518)
!11589 = !DILocation(line: 530, column: 36, scope: !11518)
!11590 = !DILocation(line: 533, column: 38, scope: !11518)
!11591 = !DILocation(line: 533, column: 18, scope: !11518)
!11592 = !DILocation(line: 533, column: 36, scope: !11518)
!11593 = !DILocation(line: 536, column: 42, scope: !11518)
!11594 = !DILocation(line: 536, column: 18, scope: !11518)
!11595 = !DILocation(line: 536, column: 40, scope: !11518)
!11596 = !DILocation(line: 539, column: 40, scope: !11518)
!11597 = !DILocation(line: 539, column: 18, scope: !11518)
!11598 = !DILocation(line: 539, column: 38, scope: !11518)
!11599 = !DILocation(line: 542, column: 39, scope: !11518)
!11600 = !DILocation(line: 542, column: 18, scope: !11518)
!11601 = !DILocation(line: 542, column: 37, scope: !11518)
!11602 = !DILocation(line: 545, column: 40, scope: !11518)
!11603 = !DILocation(line: 545, column: 18, scope: !11518)
!11604 = !DILocation(line: 545, column: 38, scope: !11518)
!11605 = !DILocation(line: 548, column: 13, scope: !11606)
!11606 = distinct !DILexicalBlock(scope: !11518, file: !11142, line: 548, column: 7)
!11607 = !DILocation(line: 548, column: 7, scope: !11518)
!11608 = !DILocation(line: 550, column: 20, scope: !11609)
!11609 = distinct !DILexicalBlock(scope: !11606, file: !11142, line: 549, column: 3)
!11610 = !DILocation(line: 550, column: 37, scope: !11609)
!11611 = !DILocation(line: 556, column: 1, scope: !11518)
!11612 = distinct !DISubprogram(name: "HAL_RCCEx_GetPeriphCLKFreq", scope: !11142, file: !11142, line: 569, type: !7773, scopeLine: 570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2985, retainedNodes: !11613)
!11613 = !{!11614, !11615, !11616, !11617, !11618, !11619, !11620}
!11614 = !DILocalVariable(name: "PeriphClk", arg: 1, scope: !11612, file: !11142, line: 569, type: !110)
!11615 = !DILocalVariable(name: "tmpreg1", scope: !11612, file: !11142, line: 571, type: !110)
!11616 = !DILocalVariable(name: "frequency", scope: !11612, file: !11142, line: 573, type: !110)
!11617 = !DILocalVariable(name: "vcoinput", scope: !11612, file: !11142, line: 575, type: !110)
!11618 = !DILocalVariable(name: "saiclocksource", scope: !11612, file: !11142, line: 577, type: !110)
!11619 = !DILocalVariable(name: "srcclk", scope: !11612, file: !11142, line: 578, type: !110)
!11620 = !DILocalVariable(name: "vcooutput", scope: !11612, file: !11142, line: 580, type: !110)
!11621 = !DILocation(line: 0, scope: !11612)
!11622 = !DILocation(line: 581, column: 3, scope: !11612)
!11623 = !DILocation(line: 586, column: 29, scope: !11624)
!11624 = distinct !DILexicalBlock(scope: !11625, file: !11142, line: 585, column: 5)
!11625 = distinct !DILexicalBlock(scope: !11612, file: !11142, line: 582, column: 3)
!11626 = !DILocation(line: 588, column: 7, scope: !11624)
!11627 = !DILocation(line: 594, column: 20, scope: !11628)
!11628 = distinct !DILexicalBlock(scope: !11629, file: !11142, line: 594, column: 14)
!11629 = distinct !DILexicalBlock(scope: !11630, file: !11142, line: 591, column: 9)
!11630 = distinct !DILexicalBlock(scope: !11624, file: !11142, line: 589, column: 7)
!11631 = !DILocation(line: 0, scope: !11628)
!11632 = !DILocation(line: 606, column: 27, scope: !11629)
!11633 = !DILocation(line: 606, column: 64, scope: !11629)
!11634 = !DILocation(line: 607, column: 42, scope: !11629)
!11635 = !DILocation(line: 607, column: 79, scope: !11629)
!11636 = !DILocation(line: 607, column: 33, scope: !11629)
!11637 = !DILocation(line: 607, column: 86, scope: !11629)
!11638 = !DILocation(line: 610, column: 29, scope: !11629)
!11639 = !DILocation(line: 610, column: 63, scope: !11629)
!11640 = !DILocation(line: 610, column: 70, scope: !11629)
!11641 = !DILocation(line: 611, column: 32, scope: !11629)
!11642 = !DILocation(line: 612, column: 11, scope: !11629)
!11643 = !DILocation(line: 619, column: 20, scope: !11644)
!11644 = distinct !DILexicalBlock(scope: !11645, file: !11142, line: 619, column: 14)
!11645 = distinct !DILexicalBlock(scope: !11630, file: !11142, line: 616, column: 9)
!11646 = !DILocation(line: 0, scope: !11644)
!11647 = !DILocation(line: 632, column: 27, scope: !11645)
!11648 = !DILocation(line: 632, column: 64, scope: !11645)
!11649 = !DILocation(line: 633, column: 42, scope: !11645)
!11650 = !DILocation(line: 633, column: 79, scope: !11645)
!11651 = !DILocation(line: 633, column: 33, scope: !11645)
!11652 = !DILocation(line: 633, column: 86, scope: !11645)
!11653 = !DILocation(line: 636, column: 28, scope: !11645)
!11654 = !DILocation(line: 636, column: 36, scope: !11645)
!11655 = !DILocation(line: 636, column: 62, scope: !11645)
!11656 = !DILocation(line: 637, column: 32, scope: !11645)
!11657 = !DILocation(line: 638, column: 11, scope: !11645)
!11658 = !DILocation(line: 645, column: 20, scope: !11659)
!11659 = distinct !DILexicalBlock(scope: !11660, file: !11142, line: 645, column: 14)
!11660 = distinct !DILexicalBlock(scope: !11630, file: !11142, line: 642, column: 9)
!11661 = !DILocation(line: 0, scope: !11659)
!11662 = !DILocation(line: 658, column: 27, scope: !11660)
!11663 = !DILocation(line: 658, column: 55, scope: !11660)
!11664 = !DILocation(line: 659, column: 42, scope: !11660)
!11665 = !DILocation(line: 659, column: 70, scope: !11660)
!11666 = !DILocation(line: 659, column: 33, scope: !11660)
!11667 = !DILocation(line: 659, column: 77, scope: !11660)
!11668 = !DILocation(line: 660, column: 11, scope: !11660)
!11669 = !DILocation(line: 665, column: 11, scope: !11670)
!11670 = distinct !DILexicalBlock(scope: !11630, file: !11142, line: 663, column: 9)
!11671 = !DILocation(line: 669, column: 20, scope: !11672)
!11672 = distinct !DILexicalBlock(scope: !11673, file: !11142, line: 669, column: 14)
!11673 = distinct !DILexicalBlock(scope: !11630, file: !11142, line: 668, column: 9)
!11674 = !DILocation(line: 691, column: 16, scope: !11675)
!11675 = distinct !DILexicalBlock(scope: !11625, file: !11142, line: 689, column: 5)
!11676 = !DILocation(line: 692, column: 7, scope: !11675)
!11677 = !DILocation(line: 706, column: 20, scope: !11678)
!11678 = distinct !DILexicalBlock(scope: !11679, file: !11142, line: 706, column: 14)
!11679 = distinct !DILexicalBlock(scope: !11680, file: !11142, line: 703, column: 9)
!11680 = distinct !DILexicalBlock(scope: !11675, file: !11142, line: 693, column: 7)
!11681 = !DILocation(line: 0, scope: !11678)
!11682 = !DILocation(line: 718, column: 53, scope: !11679)
!11683 = !DILocation(line: 718, column: 90, scope: !11679)
!11684 = !DILocation(line: 718, column: 43, scope: !11679)
!11685 = !DILocation(line: 720, column: 53, scope: !11679)
!11686 = !DILocation(line: 720, column: 90, scope: !11679)
!11687 = !DILocation(line: 720, column: 44, scope: !11679)
!11688 = !DILocation(line: 721, column: 11, scope: !11679)
!11689 = !DILocation(line: 728, column: 20, scope: !11690)
!11690 = distinct !DILexicalBlock(scope: !11691, file: !11142, line: 728, column: 14)
!11691 = distinct !DILexicalBlock(scope: !11680, file: !11142, line: 725, column: 9)
!11692 = !DILocation(line: 0, scope: !11690)
!11693 = !DILocation(line: 740, column: 53, scope: !11691)
!11694 = !DILocation(line: 740, column: 81, scope: !11691)
!11695 = !DILocation(line: 740, column: 43, scope: !11691)
!11696 = !DILocation(line: 742, column: 53, scope: !11691)
!11697 = !DILocation(line: 742, column: 81, scope: !11691)
!11698 = !DILocation(line: 742, column: 44, scope: !11691)
!11699 = !DILocation(line: 743, column: 11, scope: !11691)
!11700 = !DILocation(line: 748, column: 20, scope: !11701)
!11701 = distinct !DILexicalBlock(scope: !11702, file: !11142, line: 748, column: 14)
!11702 = distinct !DILexicalBlock(scope: !11680, file: !11142, line: 747, column: 9)
!11703 = !DILocation(line: 770, column: 16, scope: !11704)
!11704 = distinct !DILexicalBlock(scope: !11625, file: !11142, line: 768, column: 5)
!11705 = !DILocation(line: 771, column: 7, scope: !11704)
!11706 = !DILocation(line: 785, column: 20, scope: !11707)
!11707 = distinct !DILexicalBlock(scope: !11708, file: !11142, line: 785, column: 14)
!11708 = distinct !DILexicalBlock(scope: !11709, file: !11142, line: 782, column: 9)
!11709 = distinct !DILexicalBlock(scope: !11704, file: !11142, line: 772, column: 7)
!11710 = !DILocation(line: 0, scope: !11707)
!11711 = !DILocation(line: 797, column: 53, scope: !11708)
!11712 = !DILocation(line: 797, column: 90, scope: !11708)
!11713 = !DILocation(line: 797, column: 43, scope: !11708)
!11714 = !DILocation(line: 799, column: 53, scope: !11708)
!11715 = !DILocation(line: 799, column: 90, scope: !11708)
!11716 = !DILocation(line: 799, column: 44, scope: !11708)
!11717 = !DILocation(line: 800, column: 11, scope: !11708)
!11718 = !DILocation(line: 807, column: 20, scope: !11719)
!11719 = distinct !DILexicalBlock(scope: !11720, file: !11142, line: 807, column: 14)
!11720 = distinct !DILexicalBlock(scope: !11709, file: !11142, line: 804, column: 9)
!11721 = !DILocation(line: 0, scope: !11719)
!11722 = !DILocation(line: 819, column: 53, scope: !11720)
!11723 = !DILocation(line: 819, column: 81, scope: !11720)
!11724 = !DILocation(line: 819, column: 43, scope: !11720)
!11725 = !DILocation(line: 821, column: 53, scope: !11720)
!11726 = !DILocation(line: 821, column: 81, scope: !11720)
!11727 = !DILocation(line: 821, column: 44, scope: !11720)
!11728 = !DILocation(line: 822, column: 11, scope: !11720)
!11729 = !DILocation(line: 827, column: 20, scope: !11730)
!11730 = distinct !DILexicalBlock(scope: !11731, file: !11142, line: 827, column: 14)
!11731 = distinct !DILexicalBlock(scope: !11709, file: !11142, line: 826, column: 9)
!11732 = !DILocation(line: 847, column: 3, scope: !11612)
!11733 = distinct !DISubprogram(name: "HAL_RCCEx_SelectLSEMode", scope: !11142, file: !11142, line: 2766, type: !11734, scopeLine: 2767, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2985, retainedNodes: !11736)
!11734 = !DISubroutineType(types: !11735)
!11735 = !{null, !178}
!11736 = !{!11737}
!11737 = !DILocalVariable(name: "Mode", arg: 1, scope: !11733, file: !11142, line: 2766, type: !178)
!11738 = !DILocation(line: 0, scope: !11733)
!11739 = !DILocation(line: 2770, column: 11, scope: !11740)
!11740 = distinct !DILexicalBlock(scope: !11733, file: !11142, line: 2770, column: 6)
!11741 = !DILocation(line: 0, scope: !11740)
!11742 = !DILocation(line: 2770, column: 6, scope: !11733)
!11743 = !DILocation(line: 2778, column: 1, scope: !11733)
!11744 = distinct !DISubprogram(name: "HAL_RCCEx_EnablePLLI2S", scope: !11142, file: !11142, line: 2803, type: !11745, scopeLine: 2804, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2985, retainedNodes: !11748)
!11745 = !DISubroutineType(types: !11746)
!11746 = !{!11145, !11747}
!11747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11153, size: 32)
!11748 = !{!11749, !11750}
!11749 = !DILocalVariable(name: "PLLI2SInit", arg: 1, scope: !11744, file: !11142, line: 2803, type: !11747)
!11750 = !DILocalVariable(name: "tickstart", scope: !11744, file: !11142, line: 2805, type: !110)
!11751 = !DILocation(line: 0, scope: !11744)
!11752 = !DILocation(line: 2821, column: 3, scope: !11744)
!11753 = !DILocation(line: 2824, column: 15, scope: !11744)
!11754 = !DILocation(line: 2825, column: 3, scope: !11744)
!11755 = !DILocation(line: 2825, column: 9, scope: !11744)
!11756 = !DILocation(line: 2827, column: 9, scope: !11757)
!11757 = distinct !DILexicalBlock(scope: !11758, file: !11142, line: 2827, column: 8)
!11758 = distinct !DILexicalBlock(scope: !11744, file: !11142, line: 2826, column: 3)
!11759 = !DILocation(line: 2827, column: 23, scope: !11757)
!11760 = !DILocation(line: 2827, column: 37, scope: !11757)
!11761 = !DILocation(line: 2827, column: 8, scope: !11758)
!11762 = distinct !{!11762, !11754, !11763}
!11763 = !DILocation(line: 2832, column: 3, scope: !11744)
!11764 = !DILocation(line: 2840, column: 3, scope: !11744)
!11765 = !DILocation(line: 2866, column: 3, scope: !11744)
!11766 = !DILocation(line: 2869, column: 15, scope: !11744)
!11767 = !DILocation(line: 2870, column: 3, scope: !11744)
!11768 = !DILocation(line: 2870, column: 9, scope: !11744)
!11769 = !DILocation(line: 2870, column: 48, scope: !11744)
!11770 = !DILocation(line: 2872, column: 9, scope: !11771)
!11771 = distinct !DILexicalBlock(scope: !11772, file: !11142, line: 2872, column: 8)
!11772 = distinct !DILexicalBlock(scope: !11744, file: !11142, line: 2871, column: 3)
!11773 = !DILocation(line: 2872, column: 23, scope: !11771)
!11774 = !DILocation(line: 2872, column: 37, scope: !11771)
!11775 = !DILocation(line: 2872, column: 8, scope: !11772)
!11776 = distinct !{!11776, !11767, !11777}
!11777 = !DILocation(line: 2877, column: 3, scope: !11744)
!11778 = !DILocation(line: 2880, column: 1, scope: !11744)
!11779 = distinct !DISubprogram(name: "HAL_RCCEx_DisablePLLI2S", scope: !11142, file: !11142, line: 2886, type: !11780, scopeLine: 2887, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2985, retainedNodes: !11782)
!11780 = !DISubroutineType(types: !11781)
!11781 = !{!11145}
!11782 = !{!11783}
!11783 = !DILocalVariable(name: "tickstart", scope: !11779, file: !11142, line: 2888, type: !110)
!11784 = !DILocation(line: 2891, column: 3, scope: !11779)
!11785 = !DILocation(line: 2894, column: 15, scope: !11779)
!11786 = !DILocation(line: 0, scope: !11779)
!11787 = !DILocation(line: 2895, column: 3, scope: !11779)
!11788 = !DILocation(line: 2895, column: 9, scope: !11779)
!11789 = !DILocation(line: 2895, column: 45, scope: !11779)
!11790 = !DILocation(line: 2897, column: 9, scope: !11791)
!11791 = distinct !DILexicalBlock(scope: !11792, file: !11142, line: 2897, column: 8)
!11792 = distinct !DILexicalBlock(scope: !11779, file: !11142, line: 2896, column: 3)
!11793 = !DILocation(line: 2897, column: 23, scope: !11791)
!11794 = !DILocation(line: 2897, column: 36, scope: !11791)
!11795 = !DILocation(line: 2897, column: 8, scope: !11792)
!11796 = distinct !{!11796, !11787, !11797}
!11797 = !DILocation(line: 2902, column: 3, scope: !11779)
!11798 = !DILocation(line: 2905, column: 1, scope: !11779)
!11799 = distinct !DISubprogram(name: "HAL_RCCEx_EnablePLLSAI", scope: !11142, file: !11142, line: 2916, type: !11800, scopeLine: 2917, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2985, retainedNodes: !11803)
!11800 = !DISubroutineType(types: !11801)
!11801 = !{!11145, !11802}
!11802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11162, size: 32)
!11803 = !{!11804, !11805}
!11804 = !DILocalVariable(name: "PLLSAIInit", arg: 1, scope: !11799, file: !11142, line: 2916, type: !11802)
!11805 = !DILocalVariable(name: "tickstart", scope: !11799, file: !11142, line: 2918, type: !110)
!11806 = !DILocation(line: 0, scope: !11799)
!11807 = !DILocation(line: 2934, column: 3, scope: !11799)
!11808 = !DILocation(line: 2937, column: 15, scope: !11799)
!11809 = !DILocation(line: 2938, column: 3, scope: !11799)
!11810 = !DILocation(line: 2938, column: 9, scope: !11799)
!11811 = !DILocation(line: 2940, column: 9, scope: !11812)
!11812 = distinct !DILexicalBlock(scope: !11813, file: !11142, line: 2940, column: 8)
!11813 = distinct !DILexicalBlock(scope: !11799, file: !11142, line: 2939, column: 3)
!11814 = !DILocation(line: 2940, column: 23, scope: !11812)
!11815 = !DILocation(line: 2940, column: 37, scope: !11812)
!11816 = !DILocation(line: 2940, column: 8, scope: !11813)
!11817 = distinct !{!11817, !11809, !11818}
!11818 = !DILocation(line: 2945, column: 3, scope: !11799)
!11819 = !DILocation(line: 2953, column: 3, scope: !11799)
!11820 = !DILocation(line: 2970, column: 3, scope: !11799)
!11821 = !DILocation(line: 2973, column: 15, scope: !11799)
!11822 = !DILocation(line: 2974, column: 3, scope: !11799)
!11823 = !DILocation(line: 2974, column: 9, scope: !11799)
!11824 = !DILocation(line: 2974, column: 37, scope: !11799)
!11825 = !DILocation(line: 2976, column: 9, scope: !11826)
!11826 = distinct !DILexicalBlock(scope: !11827, file: !11142, line: 2976, column: 8)
!11827 = distinct !DILexicalBlock(scope: !11799, file: !11142, line: 2975, column: 3)
!11828 = !DILocation(line: 2976, column: 23, scope: !11826)
!11829 = !DILocation(line: 2976, column: 37, scope: !11826)
!11830 = !DILocation(line: 2976, column: 8, scope: !11827)
!11831 = distinct !{!11831, !11822, !11832}
!11832 = !DILocation(line: 2981, column: 3, scope: !11799)
!11833 = !DILocation(line: 2984, column: 1, scope: !11799)
!11834 = distinct !DISubprogram(name: "HAL_RCCEx_DisablePLLSAI", scope: !11142, file: !11142, line: 2990, type: !11780, scopeLine: 2991, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2985, retainedNodes: !11835)
!11835 = !{!11836}
!11836 = !DILocalVariable(name: "tickstart", scope: !11834, file: !11142, line: 2992, type: !110)
!11837 = !DILocation(line: 2995, column: 3, scope: !11834)
!11838 = !DILocation(line: 2998, column: 15, scope: !11834)
!11839 = !DILocation(line: 0, scope: !11834)
!11840 = !DILocation(line: 2999, column: 3, scope: !11834)
!11841 = !DILocation(line: 2999, column: 9, scope: !11834)
!11842 = !DILocation(line: 3001, column: 9, scope: !11843)
!11843 = distinct !DILexicalBlock(scope: !11844, file: !11142, line: 3001, column: 8)
!11844 = distinct !DILexicalBlock(scope: !11834, file: !11142, line: 3000, column: 3)
!11845 = !DILocation(line: 3001, column: 23, scope: !11843)
!11846 = !DILocation(line: 3001, column: 36, scope: !11843)
!11847 = !DILocation(line: 3001, column: 8, scope: !11844)
!11848 = distinct !{!11848, !11840, !11849}
!11849 = !DILocation(line: 3006, column: 3, scope: !11834)
!11850 = !DILocation(line: 3009, column: 1, scope: !11834)
!11851 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !11142, file: !11142, line: 3051, type: !6573, scopeLine: 3052, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2985, retainedNodes: !11852)
!11852 = !{!11853, !11854, !11855, !11856, !11857}
!11853 = !DILocalVariable(name: "pllm", scope: !11851, file: !11142, line: 3053, type: !110)
!11854 = !DILocalVariable(name: "pllvco", scope: !11851, file: !11142, line: 3054, type: !110)
!11855 = !DILocalVariable(name: "pllp", scope: !11851, file: !11142, line: 3055, type: !110)
!11856 = !DILocalVariable(name: "pllr", scope: !11851, file: !11142, line: 3056, type: !110)
!11857 = !DILocalVariable(name: "sysclockfreq", scope: !11851, file: !11142, line: 3057, type: !110)
!11858 = !DILocation(line: 0, scope: !11851)
!11859 = !DILocation(line: 3060, column: 16, scope: !11851)
!11860 = !DILocation(line: 3060, column: 3, scope: !11851)
!11861 = !DILocation(line: 3076, column: 19, scope: !11862)
!11862 = distinct !DILexicalBlock(scope: !11863, file: !11142, line: 3073, column: 5)
!11863 = distinct !DILexicalBlock(scope: !11851, file: !11142, line: 3061, column: 3)
!11864 = !DILocation(line: 3076, column: 27, scope: !11862)
!11865 = !DILocation(line: 3077, column: 10, scope: !11866)
!11866 = distinct !DILexicalBlock(scope: !11862, file: !11142, line: 3077, column: 10)
!11867 = !DILocation(line: 0, scope: !11866)
!11868 = !DILocation(line: 3087, column: 23, scope: !11862)
!11869 = !DILocation(line: 3087, column: 82, scope: !11862)
!11870 = !DILocation(line: 3089, column: 28, scope: !11862)
!11871 = !DILocation(line: 3090, column: 7, scope: !11862)
!11872 = !DILocation(line: 3096, column: 19, scope: !11873)
!11873 = distinct !DILexicalBlock(scope: !11863, file: !11142, line: 3093, column: 5)
!11874 = !DILocation(line: 3096, column: 27, scope: !11873)
!11875 = !DILocation(line: 3097, column: 10, scope: !11876)
!11876 = distinct !DILexicalBlock(scope: !11873, file: !11142, line: 3097, column: 10)
!11877 = !DILocation(line: 0, scope: !11876)
!11878 = !DILocation(line: 3107, column: 21, scope: !11873)
!11879 = !DILocation(line: 3107, column: 49, scope: !11873)
!11880 = !DILocation(line: 3109, column: 28, scope: !11873)
!11881 = !DILocation(line: 3110, column: 7, scope: !11873)
!11882 = !DILocation(line: 0, scope: !11863)
!11883 = !DILocation(line: 3118, column: 3, scope: !11851)
!11884 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !11142, file: !11142, line: 3143, type: !11780, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2985, retainedNodes: !11885)
!11885 = !{!11886}
!11886 = !DILocalVariable(name: "tickstart", scope: !11884, file: !11142, line: 3145, type: !110)
!11887 = !DILocation(line: 3148, column: 15, scope: !11884)
!11888 = !DILocation(line: 0, scope: !11884)
!11889 = !DILocation(line: 3151, column: 3, scope: !11884)
!11890 = !DILocation(line: 3154, column: 3, scope: !11884)
!11891 = !DILocation(line: 3154, column: 10, scope: !11884)
!11892 = !DILocation(line: 3154, column: 43, scope: !11884)
!11893 = !DILocation(line: 3156, column: 10, scope: !11894)
!11894 = distinct !DILexicalBlock(scope: !11895, file: !11142, line: 3156, column: 9)
!11895 = distinct !DILexicalBlock(scope: !11884, file: !11142, line: 3155, column: 3)
!11896 = !DILocation(line: 3156, column: 24, scope: !11894)
!11897 = !DILocation(line: 3156, column: 37, scope: !11894)
!11898 = !DILocation(line: 3156, column: 9, scope: !11895)
!11899 = distinct !{!11899, !11890, !11900}
!11900 = !DILocation(line: 3160, column: 3, scope: !11884)
!11901 = !DILocation(line: 3163, column: 3, scope: !11884)
!11902 = !DILocation(line: 3166, column: 15, scope: !11884)
!11903 = !DILocation(line: 3169, column: 3, scope: !11884)
!11904 = !DILocation(line: 3172, column: 3, scope: !11884)
!11905 = !DILocation(line: 3172, column: 10, scope: !11884)
!11906 = !DILocation(line: 3172, column: 44, scope: !11884)
!11907 = !DILocation(line: 3174, column: 24, scope: !11908)
!11908 = distinct !DILexicalBlock(scope: !11909, file: !11142, line: 3174, column: 9)
!11909 = distinct !DILexicalBlock(scope: !11884, file: !11142, line: 3173, column: 3)
!11910 = !DILocation(line: 3174, column: 37, scope: !11908)
!11911 = !DILocation(line: 3174, column: 9, scope: !11909)
!11912 = distinct !{!11912, !11904, !11913}
!11913 = !DILocation(line: 3178, column: 3, scope: !11884)
!11914 = !DILocation(line: 3184, column: 3, scope: !11884)
!11915 = !DILocation(line: 3187, column: 3, scope: !11884)
!11916 = !DILocation(line: 3187, column: 10, scope: !11884)
!11917 = !DILocation(line: 3187, column: 43, scope: !11884)
!11918 = !DILocation(line: 3189, column: 24, scope: !11919)
!11919 = distinct !DILexicalBlock(scope: !11920, file: !11142, line: 3189, column: 9)
!11920 = distinct !DILexicalBlock(scope: !11884, file: !11142, line: 3188, column: 3)
!11921 = !DILocation(line: 3189, column: 37, scope: !11919)
!11922 = !DILocation(line: 3189, column: 9, scope: !11920)
!11923 = distinct !{!11923, !11915, !11924}
!11924 = !DILocation(line: 3193, column: 3, scope: !11884)
!11925 = !DILocation(line: 3199, column: 3, scope: !11884)
!11926 = !DILocation(line: 3202, column: 3, scope: !11884)
!11927 = !DILocation(line: 3202, column: 10, scope: !11884)
!11928 = !DILocation(line: 3202, column: 43, scope: !11884)
!11929 = !DILocation(line: 3204, column: 24, scope: !11930)
!11930 = distinct !DILexicalBlock(scope: !11931, file: !11142, line: 3204, column: 9)
!11931 = distinct !DILexicalBlock(scope: !11884, file: !11142, line: 3203, column: 3)
!11932 = !DILocation(line: 3204, column: 37, scope: !11930)
!11933 = !DILocation(line: 3204, column: 9, scope: !11931)
!11934 = distinct !{!11934, !11926, !11935}
!11935 = !DILocation(line: 3208, column: 3, scope: !11884)
!11936 = !DILocation(line: 3215, column: 3, scope: !11884)
!11937 = !DILocation(line: 3218, column: 3, scope: !11884)
!11938 = !DILocation(line: 3218, column: 10, scope: !11884)
!11939 = !DILocation(line: 3218, column: 46, scope: !11884)
!11940 = !DILocation(line: 3220, column: 24, scope: !11941)
!11941 = distinct !DILexicalBlock(scope: !11942, file: !11142, line: 3220, column: 9)
!11942 = distinct !DILexicalBlock(scope: !11884, file: !11142, line: 3219, column: 3)
!11943 = !DILocation(line: 3220, column: 37, scope: !11941)
!11944 = !DILocation(line: 3220, column: 9, scope: !11942)
!11945 = distinct !{!11945, !11937, !11946}
!11946 = !DILocation(line: 3224, column: 3, scope: !11884)
!11947 = !DILocation(line: 3232, column: 3, scope: !11884)
!11948 = !DILocation(line: 3235, column: 3, scope: !11884)
!11949 = !DILocation(line: 3235, column: 10, scope: !11884)
!11950 = !DILocation(line: 3235, column: 46, scope: !11884)
!11951 = !DILocation(line: 3237, column: 10, scope: !11952)
!11952 = distinct !DILexicalBlock(scope: !11953, file: !11142, line: 3237, column: 9)
!11953 = distinct !DILexicalBlock(scope: !11884, file: !11142, line: 3236, column: 3)
!11954 = !DILocation(line: 3237, column: 24, scope: !11952)
!11955 = !DILocation(line: 3237, column: 37, scope: !11952)
!11956 = !DILocation(line: 3237, column: 9, scope: !11953)
!11957 = distinct !{!11957, !11948, !11958}
!11958 = !DILocation(line: 3241, column: 3, scope: !11884)
!11959 = !DILocation(line: 3247, column: 16, scope: !11884)
!11960 = !DILocation(line: 3257, column: 19, scope: !11884)
!11961 = !DILocation(line: 3270, column: 19, scope: !11884)
!11962 = !DILocation(line: 3274, column: 3, scope: !11884)
!11963 = !DILocation(line: 3277, column: 3, scope: !11884)
!11964 = !DILocation(line: 3281, column: 3, scope: !11884)
!11965 = !DILocation(line: 3285, column: 3, scope: !11884)
!11966 = !DILocation(line: 3288, column: 3, scope: !11884)
!11967 = !DILocation(line: 3292, column: 3, scope: !11884)
!11968 = !DILocation(line: 3296, column: 3, scope: !11884)
!11969 = !DILocation(line: 3299, column: 3, scope: !11884)
!11970 = !DILocation(line: 3302, column: 19, scope: !11884)
!11971 = !DILocation(line: 3305, column: 19, scope: !11972)
!11972 = distinct !DILexicalBlock(scope: !11884, file: !11142, line: 3305, column: 6)
!11973 = !DILocation(line: 3305, column: 6, scope: !11972)
!11974 = !DILocation(line: 3305, column: 31, scope: !11972)
!11975 = !DILocation(line: 0, scope: !11972)
!11976 = !DILocation(line: 3313, column: 1, scope: !11884)
!11977 = !DISubprogram(name: "HAL_InitTick", scope: !11517, file: !11517, line: 223, type: !11978, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2106)
!11978 = !DISubroutineType(types: !11979)
!11979 = !{!11145, !110}
!11980 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !11142, file: !11142, line: 3333, type: !11981, scopeLine: 3334, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2985, retainedNodes: !12005)
!11981 = !DISubroutineType(types: !11982)
!11982 = !{!11145, !11983}
!11983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11984, size: 32)
!11984 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !11985, line: 70, baseType: !11986)
!11985 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11986 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11985, line: 49, size: 416, elements: !11987)
!11987 = !{!11988, !11989, !11990, !11991, !11992, !11993, !11994}
!11988 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !11986, file: !11985, line: 51, baseType: !110, size: 32)
!11989 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !11986, file: !11985, line: 54, baseType: !110, size: 32, offset: 32)
!11990 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !11986, file: !11985, line: 57, baseType: !110, size: 32, offset: 64)
!11991 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !11986, file: !11985, line: 60, baseType: !110, size: 32, offset: 96)
!11992 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !11986, file: !11985, line: 63, baseType: !110, size: 32, offset: 128)
!11993 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !11986, file: !11985, line: 66, baseType: !110, size: 32, offset: 160)
!11994 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !11986, file: !11985, line: 69, baseType: !11995, size: 224, offset: 192)
!11995 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !11148, line: 73, baseType: !11996)
!11996 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11148, line: 45, size: 224, elements: !11997)
!11997 = !{!11998, !11999, !12000, !12001, !12002, !12003, !12004}
!11998 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !11996, file: !11148, line: 47, baseType: !110, size: 32)
!11999 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !11996, file: !11148, line: 50, baseType: !110, size: 32, offset: 32)
!12000 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !11996, file: !11148, line: 53, baseType: !110, size: 32, offset: 64)
!12001 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !11996, file: !11148, line: 56, baseType: !110, size: 32, offset: 96)
!12002 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !11996, file: !11148, line: 60, baseType: !110, size: 32, offset: 128)
!12003 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !11996, file: !11148, line: 63, baseType: !110, size: 32, offset: 160)
!12004 = !DIDerivedType(tag: DW_TAG_member, name: "PLLR", scope: !11996, file: !11148, line: 68, baseType: !110, size: 32, offset: 192)
!12005 = !{!12006, !12007, !12008, !12009, !12013}
!12006 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11980, file: !11142, line: 3333, type: !11983)
!12007 = !DILocalVariable(name: "tickstart", scope: !11980, file: !11142, line: 3335, type: !110)
!12008 = !DILocalVariable(name: "pll_config", scope: !11980, file: !11142, line: 3335, type: !110)
!12009 = !DILocalVariable(name: "pwrclkchanged", scope: !12010, file: !11142, line: 3517, type: !12012)
!12010 = distinct !DILexicalBlock(scope: !12011, file: !11142, line: 3516, column: 3)
!12011 = distinct !DILexicalBlock(scope: !11980, file: !11142, line: 3515, column: 6)
!12012 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !845, line: 188, baseType: !2995)
!12013 = !DILocalVariable(name: "tmpreg", scope: !12014, file: !11142, line: 3526, type: !316)
!12014 = distinct !DILexicalBlock(scope: !12015, file: !11142, line: 3526, column: 7)
!12015 = distinct !DILexicalBlock(scope: !12016, file: !11142, line: 3525, column: 5)
!12016 = distinct !DILexicalBlock(scope: !12010, file: !11142, line: 3524, column: 8)
!12017 = !DILocation(line: 0, scope: !11980)
!12018 = !DILocation(line: 3338, column: 24, scope: !12019)
!12019 = distinct !DILexicalBlock(scope: !11980, file: !11142, line: 3338, column: 6)
!12020 = !DILocation(line: 3338, column: 6, scope: !11980)
!12021 = !DILocation(line: 3346, column: 27, scope: !12022)
!12022 = distinct !DILexicalBlock(scope: !11980, file: !11142, line: 3346, column: 6)
!12023 = !DILocation(line: 3346, column: 43, scope: !12022)
!12024 = !DILocation(line: 3346, column: 69, scope: !12022)
!12025 = !DILocation(line: 3346, column: 6, scope: !11980)
!12026 = !DILocation(line: 3352, column: 9, scope: !12027)
!12027 = distinct !DILexicalBlock(scope: !12028, file: !11142, line: 3352, column: 8)
!12028 = distinct !DILexicalBlock(scope: !12022, file: !11142, line: 3347, column: 3)
!12029 = !DILocation(line: 3352, column: 39, scope: !12027)
!12030 = !DILocation(line: 3352, column: 128, scope: !12027)
!12031 = !DILocation(line: 3353, column: 9, scope: !12027)
!12032 = !DILocation(line: 3353, column: 39, scope: !12027)
!12033 = !DILocation(line: 3353, column: 60, scope: !12027)
!12034 = !DILocation(line: 3353, column: 70, scope: !12027)
!12035 = !DILocation(line: 3353, column: 78, scope: !12027)
!12036 = !DILocation(line: 3353, column: 100, scope: !12027)
!12037 = !DILocation(line: 3353, column: 128, scope: !12027)
!12038 = !DILocation(line: 3354, column: 9, scope: !12027)
!12039 = !DILocation(line: 3354, column: 39, scope: !12027)
!12040 = !DILocation(line: 3354, column: 61, scope: !12027)
!12041 = !DILocation(line: 3354, column: 71, scope: !12027)
!12042 = !DILocation(line: 3354, column: 79, scope: !12027)
!12043 = !DILocation(line: 3354, column: 101, scope: !12027)
!12044 = !DILocation(line: 3352, column: 8, scope: !12028)
!12045 = !DILocation(line: 3360, column: 11, scope: !12046)
!12046 = distinct !DILexicalBlock(scope: !12047, file: !11142, line: 3360, column: 10)
!12047 = distinct !DILexicalBlock(scope: !12027, file: !11142, line: 3359, column: 5)
!12048 = !DILocation(line: 3360, column: 57, scope: !12046)
!12049 = !DILocation(line: 3360, column: 80, scope: !12046)
!12050 = !DILocation(line: 3360, column: 89, scope: !12046)
!12051 = !DILocation(line: 3360, column: 10, scope: !12047)
!12052 = !DILocation(line: 3368, column: 7, scope: !12053)
!12053 = distinct !DILexicalBlock(scope: !12054, file: !11142, line: 3368, column: 7)
!12054 = distinct !DILexicalBlock(scope: !12055, file: !11142, line: 3368, column: 7)
!12055 = distinct !DILexicalBlock(scope: !12027, file: !11142, line: 3366, column: 5)
!12056 = !DILocation(line: 3368, column: 7, scope: !12054)
!12057 = !DILocation(line: 3368, column: 7, scope: !12058)
!12058 = distinct !DILexicalBlock(scope: !12053, file: !11142, line: 3368, column: 7)
!12059 = !DILocation(line: 3368, column: 7, scope: !12060)
!12060 = distinct !DILexicalBlock(scope: !12061, file: !11142, line: 3368, column: 7)
!12061 = distinct !DILexicalBlock(scope: !12053, file: !11142, line: 3368, column: 7)
!12062 = !DILocation(line: 3368, column: 7, scope: !12063)
!12063 = distinct !DILexicalBlock(scope: !12061, file: !11142, line: 3368, column: 7)
!12064 = !DILocation(line: 0, scope: !12053)
!12065 = !DILocation(line: 3371, column: 30, scope: !12066)
!12066 = distinct !DILexicalBlock(scope: !12055, file: !11142, line: 3371, column: 10)
!12067 = !DILocation(line: 3371, column: 40, scope: !12066)
!12068 = !DILocation(line: 0, scope: !12066)
!12069 = !DILocation(line: 3371, column: 10, scope: !12055)
!12070 = !DILocation(line: 3377, column: 15, scope: !12071)
!12071 = distinct !DILexicalBlock(scope: !12066, file: !11142, line: 3372, column: 7)
!12072 = !DILocation(line: 3377, column: 51, scope: !12071)
!12073 = !DILocation(line: 3377, column: 9, scope: !12071)
!12074 = !DILocation(line: 3379, column: 15, scope: !12075)
!12075 = distinct !DILexicalBlock(scope: !12076, file: !11142, line: 3379, column: 14)
!12076 = distinct !DILexicalBlock(scope: !12071, file: !11142, line: 3378, column: 9)
!12077 = !DILocation(line: 3379, column: 29, scope: !12075)
!12078 = !DILocation(line: 3379, column: 43, scope: !12075)
!12079 = !DILocation(line: 3379, column: 14, scope: !12076)
!12080 = distinct !{!12080, !12073, !12081}
!12081 = !DILocation(line: 3383, column: 9, scope: !12071)
!12082 = !DILocation(line: 3391, column: 15, scope: !12083)
!12083 = distinct !DILexicalBlock(scope: !12066, file: !11142, line: 3386, column: 7)
!12084 = !DILocation(line: 3391, column: 9, scope: !12083)
!12085 = !DILocation(line: 3393, column: 15, scope: !12086)
!12086 = distinct !DILexicalBlock(scope: !12087, file: !11142, line: 3393, column: 14)
!12087 = distinct !DILexicalBlock(scope: !12083, file: !11142, line: 3392, column: 9)
!12088 = !DILocation(line: 3393, column: 29, scope: !12086)
!12089 = !DILocation(line: 3393, column: 43, scope: !12086)
!12090 = !DILocation(line: 3393, column: 14, scope: !12087)
!12091 = distinct !{!12091, !12084, !12092}
!12092 = !DILocation(line: 3397, column: 9, scope: !12083)
!12093 = !DILocation(line: 3402, column: 27, scope: !12094)
!12094 = distinct !DILexicalBlock(scope: !11980, file: !11142, line: 3402, column: 6)
!12095 = !DILocation(line: 3402, column: 43, scope: !12094)
!12096 = !DILocation(line: 3402, column: 69, scope: !12094)
!12097 = !DILocation(line: 3402, column: 6, scope: !11980)
!12098 = !DILocation(line: 3410, column: 9, scope: !12099)
!12099 = distinct !DILexicalBlock(scope: !12100, file: !11142, line: 3410, column: 8)
!12100 = distinct !DILexicalBlock(scope: !12094, file: !11142, line: 3403, column: 3)
!12101 = !DILocation(line: 3410, column: 39, scope: !12099)
!12102 = !DILocation(line: 3410, column: 128, scope: !12099)
!12103 = !DILocation(line: 3411, column: 9, scope: !12099)
!12104 = !DILocation(line: 3411, column: 39, scope: !12099)
!12105 = !DILocation(line: 3411, column: 60, scope: !12099)
!12106 = !DILocation(line: 3411, column: 70, scope: !12099)
!12107 = !DILocation(line: 3411, column: 78, scope: !12099)
!12108 = !DILocation(line: 3411, column: 100, scope: !12099)
!12109 = !DILocation(line: 3411, column: 128, scope: !12099)
!12110 = !DILocation(line: 3412, column: 9, scope: !12099)
!12111 = !DILocation(line: 3412, column: 39, scope: !12099)
!12112 = !DILocation(line: 3412, column: 61, scope: !12099)
!12113 = !DILocation(line: 3412, column: 71, scope: !12099)
!12114 = !DILocation(line: 3412, column: 79, scope: !12099)
!12115 = !DILocation(line: 3412, column: 101, scope: !12099)
!12116 = !DILocation(line: 3410, column: 8, scope: !12100)
!12117 = !DILocation(line: 3419, column: 11, scope: !12118)
!12118 = distinct !DILexicalBlock(scope: !12119, file: !11142, line: 3419, column: 10)
!12119 = distinct !DILexicalBlock(scope: !12099, file: !11142, line: 3417, column: 5)
!12120 = !DILocation(line: 3419, column: 57, scope: !12118)
!12121 = !DILocation(line: 3419, column: 80, scope: !12118)
!12122 = !DILocation(line: 3419, column: 89, scope: !12118)
!12123 = !DILocation(line: 3419, column: 10, scope: !12119)
!12124 = !DILocation(line: 3433, column: 30, scope: !12125)
!12125 = distinct !DILexicalBlock(scope: !12126, file: !11142, line: 3433, column: 10)
!12126 = distinct !DILexicalBlock(scope: !12099, file: !11142, line: 3431, column: 5)
!12127 = !DILocation(line: 3433, column: 39, scope: !12125)
!12128 = !DILocation(line: 3433, column: 10, scope: !12126)
!12129 = !DILocation(line: 3436, column: 9, scope: !12130)
!12130 = distinct !DILexicalBlock(scope: !12125, file: !11142, line: 3434, column: 7)
!12131 = !DILocation(line: 3439, column: 21, scope: !12130)
!12132 = !DILocation(line: 3442, column: 9, scope: !12130)
!12133 = !DILocation(line: 3442, column: 15, scope: !12130)
!12134 = !DILocation(line: 3442, column: 51, scope: !12130)
!12135 = !DILocation(line: 3444, column: 15, scope: !12136)
!12136 = distinct !DILexicalBlock(scope: !12137, file: !11142, line: 3444, column: 14)
!12137 = distinct !DILexicalBlock(scope: !12130, file: !11142, line: 3443, column: 9)
!12138 = !DILocation(line: 3444, column: 29, scope: !12136)
!12139 = !DILocation(line: 3444, column: 43, scope: !12136)
!12140 = !DILocation(line: 3444, column: 14, scope: !12137)
!12141 = distinct !{!12141, !12132, !12142}
!12142 = !DILocation(line: 3448, column: 9, scope: !12130)
!12143 = !DILocation(line: 3456, column: 9, scope: !12144)
!12144 = distinct !DILexicalBlock(scope: !12125, file: !11142, line: 3454, column: 7)
!12145 = !DILocation(line: 3459, column: 21, scope: !12144)
!12146 = !DILocation(line: 3462, column: 9, scope: !12144)
!12147 = !DILocation(line: 3462, column: 15, scope: !12144)
!12148 = !DILocation(line: 3464, column: 15, scope: !12149)
!12149 = distinct !DILexicalBlock(scope: !12150, file: !11142, line: 3464, column: 14)
!12150 = distinct !DILexicalBlock(scope: !12144, file: !11142, line: 3463, column: 9)
!12151 = !DILocation(line: 3464, column: 29, scope: !12149)
!12152 = !DILocation(line: 3464, column: 43, scope: !12149)
!12153 = !DILocation(line: 3464, column: 14, scope: !12150)
!12154 = distinct !{!12154, !12146, !12155}
!12155 = !DILocation(line: 3468, column: 9, scope: !12144)
!12156 = !DILocation(line: 0, scope: !12099)
!12157 = !DILocation(line: 3473, column: 27, scope: !12158)
!12158 = distinct !DILexicalBlock(scope: !11980, file: !11142, line: 3473, column: 6)
!12159 = !DILocation(line: 3473, column: 43, scope: !12158)
!12160 = !DILocation(line: 3473, column: 69, scope: !12158)
!12161 = !DILocation(line: 3473, column: 6, scope: !11980)
!12162 = !DILocation(line: 3479, column: 28, scope: !12163)
!12163 = distinct !DILexicalBlock(scope: !12164, file: !11142, line: 3479, column: 8)
!12164 = distinct !DILexicalBlock(scope: !12158, file: !11142, line: 3474, column: 3)
!12165 = !DILocation(line: 3479, column: 37, scope: !12163)
!12166 = !DILocation(line: 3479, column: 8, scope: !12164)
!12167 = !DILocation(line: 3482, column: 7, scope: !12168)
!12168 = distinct !DILexicalBlock(scope: !12163, file: !11142, line: 3480, column: 5)
!12169 = !DILocation(line: 3485, column: 19, scope: !12168)
!12170 = !DILocation(line: 3488, column: 7, scope: !12168)
!12171 = !DILocation(line: 3488, column: 13, scope: !12168)
!12172 = !DILocation(line: 3488, column: 49, scope: !12168)
!12173 = !DILocation(line: 3490, column: 13, scope: !12174)
!12174 = distinct !DILexicalBlock(scope: !12175, file: !11142, line: 3490, column: 12)
!12175 = distinct !DILexicalBlock(scope: !12168, file: !11142, line: 3489, column: 7)
!12176 = !DILocation(line: 3490, column: 27, scope: !12174)
!12177 = !DILocation(line: 3490, column: 41, scope: !12174)
!12178 = !DILocation(line: 3490, column: 12, scope: !12175)
!12179 = distinct !{!12179, !12170, !12180}
!12180 = !DILocation(line: 3494, column: 7, scope: !12168)
!12181 = !DILocation(line: 3499, column: 7, scope: !12182)
!12182 = distinct !DILexicalBlock(scope: !12163, file: !11142, line: 3497, column: 5)
!12183 = !DILocation(line: 3502, column: 19, scope: !12182)
!12184 = !DILocation(line: 3505, column: 7, scope: !12182)
!12185 = !DILocation(line: 3505, column: 13, scope: !12182)
!12186 = !DILocation(line: 3507, column: 13, scope: !12187)
!12187 = distinct !DILexicalBlock(scope: !12188, file: !11142, line: 3507, column: 12)
!12188 = distinct !DILexicalBlock(scope: !12182, file: !11142, line: 3506, column: 7)
!12189 = !DILocation(line: 3507, column: 27, scope: !12187)
!12190 = !DILocation(line: 3507, column: 41, scope: !12187)
!12191 = !DILocation(line: 3507, column: 12, scope: !12188)
!12192 = distinct !{!12192, !12184, !12193}
!12193 = !DILocation(line: 3511, column: 7, scope: !12182)
!12194 = !DILocation(line: 3515, column: 27, scope: !12011)
!12195 = !DILocation(line: 3515, column: 43, scope: !12011)
!12196 = !DILocation(line: 3515, column: 69, scope: !12011)
!12197 = !DILocation(line: 3515, column: 6, scope: !11980)
!12198 = !DILocation(line: 0, scope: !12010)
!12199 = !DILocation(line: 3524, column: 8, scope: !12016)
!12200 = !DILocation(line: 3524, column: 8, scope: !12010)
!12201 = !DILocation(line: 3526, column: 7, scope: !12014)
!12202 = !DILocation(line: 3526, column: 7, scope: !12015)
!12203 = !DILocation(line: 3528, column: 5, scope: !12015)
!12204 = !DILocation(line: 3530, column: 8, scope: !12205)
!12205 = distinct !DILexicalBlock(scope: !12010, file: !11142, line: 3530, column: 8)
!12206 = !DILocation(line: 3530, column: 8, scope: !12010)
!12207 = !DILocation(line: 3533, column: 7, scope: !12208)
!12208 = distinct !DILexicalBlock(scope: !12205, file: !11142, line: 3531, column: 5)
!12209 = !DILocation(line: 3536, column: 19, scope: !12208)
!12210 = !DILocation(line: 3538, column: 7, scope: !12208)
!12211 = !DILocation(line: 3538, column: 13, scope: !12208)
!12212 = !DILocation(line: 3540, column: 13, scope: !12213)
!12213 = distinct !DILexicalBlock(scope: !12214, file: !11142, line: 3540, column: 12)
!12214 = distinct !DILexicalBlock(scope: !12208, file: !11142, line: 3539, column: 7)
!12215 = !DILocation(line: 3540, column: 27, scope: !12213)
!12216 = !DILocation(line: 3540, column: 40, scope: !12213)
!12217 = !DILocation(line: 3540, column: 12, scope: !12214)
!12218 = distinct !{!12218, !12210, !12219}
!12219 = !DILocation(line: 3544, column: 7, scope: !12208)
!12220 = !DILocation(line: 3548, column: 5, scope: !12221)
!12221 = distinct !DILexicalBlock(scope: !12222, file: !11142, line: 3548, column: 5)
!12222 = distinct !DILexicalBlock(scope: !12010, file: !11142, line: 3548, column: 5)
!12223 = !DILocation(line: 3548, column: 5, scope: !12222)
!12224 = !DILocation(line: 3548, column: 5, scope: !12225)
!12225 = distinct !DILexicalBlock(scope: !12221, file: !11142, line: 3548, column: 5)
!12226 = !DILocation(line: 3548, column: 5, scope: !12227)
!12227 = distinct !DILexicalBlock(scope: !12228, file: !11142, line: 3548, column: 5)
!12228 = distinct !DILexicalBlock(scope: !12221, file: !11142, line: 3548, column: 5)
!12229 = !DILocation(line: 3548, column: 5, scope: !12230)
!12230 = distinct !DILexicalBlock(scope: !12228, file: !11142, line: 3548, column: 5)
!12231 = !DILocation(line: 0, scope: !12221)
!12232 = !DILocation(line: 3550, column: 28, scope: !12233)
!12233 = distinct !DILexicalBlock(scope: !12010, file: !11142, line: 3550, column: 8)
!12234 = !DILocation(line: 3550, column: 38, scope: !12233)
!12235 = !DILocation(line: 0, scope: !12233)
!12236 = !DILocation(line: 3550, column: 8, scope: !12010)
!12237 = !DILocation(line: 3556, column: 13, scope: !12238)
!12238 = distinct !DILexicalBlock(scope: !12233, file: !11142, line: 3551, column: 5)
!12239 = !DILocation(line: 3556, column: 49, scope: !12238)
!12240 = !DILocation(line: 3556, column: 7, scope: !12238)
!12241 = !DILocation(line: 3558, column: 13, scope: !12242)
!12242 = distinct !DILexicalBlock(scope: !12243, file: !11142, line: 3558, column: 12)
!12243 = distinct !DILexicalBlock(scope: !12238, file: !11142, line: 3557, column: 7)
!12244 = !DILocation(line: 3558, column: 27, scope: !12242)
!12245 = !DILocation(line: 3558, column: 41, scope: !12242)
!12246 = !DILocation(line: 3558, column: 12, scope: !12243)
!12247 = distinct !{!12247, !12240, !12248}
!12248 = !DILocation(line: 3562, column: 7, scope: !12238)
!12249 = !DILocation(line: 3570, column: 13, scope: !12250)
!12250 = distinct !DILexicalBlock(scope: !12233, file: !11142, line: 3565, column: 5)
!12251 = !DILocation(line: 3570, column: 7, scope: !12250)
!12252 = !DILocation(line: 3572, column: 13, scope: !12253)
!12253 = distinct !DILexicalBlock(scope: !12254, file: !11142, line: 3572, column: 12)
!12254 = distinct !DILexicalBlock(scope: !12250, file: !11142, line: 3571, column: 7)
!12255 = !DILocation(line: 3572, column: 27, scope: !12253)
!12256 = !DILocation(line: 3572, column: 41, scope: !12253)
!12257 = !DILocation(line: 3572, column: 12, scope: !12254)
!12258 = distinct !{!12258, !12251, !12259}
!12259 = !DILocation(line: 3576, column: 7, scope: !12250)
!12260 = !DILocation(line: 3580, column: 8, scope: !12010)
!12261 = !DILocation(line: 3582, column: 7, scope: !12262)
!12262 = distinct !DILexicalBlock(scope: !12263, file: !11142, line: 3581, column: 5)
!12263 = distinct !DILexicalBlock(scope: !12010, file: !11142, line: 3580, column: 8)
!12264 = !DILocation(line: 3583, column: 5, scope: !12262)
!12265 = !DILocation(line: 3588, column: 31, scope: !12266)
!12266 = distinct !DILexicalBlock(scope: !11980, file: !11142, line: 3588, column: 7)
!12267 = !DILocation(line: 3588, column: 41, scope: !12266)
!12268 = !DILocation(line: 3588, column: 7, scope: !11980)
!12269 = !DILocation(line: 3591, column: 8, scope: !12270)
!12270 = distinct !DILexicalBlock(scope: !12271, file: !11142, line: 3591, column: 8)
!12271 = distinct !DILexicalBlock(scope: !12266, file: !11142, line: 3589, column: 3)
!12272 = !DILocation(line: 3591, column: 38, scope: !12270)
!12273 = !DILocation(line: 3591, column: 8, scope: !12271)
!12274 = !DILocation(line: 3593, column: 44, scope: !12275)
!12275 = distinct !DILexicalBlock(scope: !12276, file: !11142, line: 3593, column: 10)
!12276 = distinct !DILexicalBlock(scope: !12270, file: !11142, line: 3592, column: 5)
!12277 = !DILocation(line: 0, scope: !12275)
!12278 = !DILocation(line: 3593, column: 10, scope: !12276)
!12279 = !DILocation(line: 3610, column: 15, scope: !12280)
!12280 = distinct !DILexicalBlock(scope: !12275, file: !11142, line: 3594, column: 7)
!12281 = !DILocation(line: 3610, column: 9, scope: !12280)
!12282 = !DILocation(line: 3612, column: 15, scope: !12283)
!12283 = distinct !DILexicalBlock(scope: !12284, file: !11142, line: 3612, column: 14)
!12284 = distinct !DILexicalBlock(scope: !12280, file: !11142, line: 3611, column: 9)
!12285 = !DILocation(line: 3612, column: 29, scope: !12283)
!12286 = !DILocation(line: 3612, column: 43, scope: !12283)
!12287 = !DILocation(line: 3612, column: 14, scope: !12284)
!12288 = distinct !{!12288, !12281, !12289}
!12289 = !DILocation(line: 3616, column: 9, scope: !12280)
!12290 = !DILocation(line: 3619, column: 9, scope: !12280)
!12291 = !DILocation(line: 3626, column: 9, scope: !12280)
!12292 = !DILocation(line: 3629, column: 21, scope: !12280)
!12293 = !DILocation(line: 3632, column: 9, scope: !12280)
!12294 = !DILocation(line: 3632, column: 15, scope: !12280)
!12295 = !DILocation(line: 3632, column: 51, scope: !12280)
!12296 = !DILocation(line: 3634, column: 15, scope: !12297)
!12297 = distinct !DILexicalBlock(scope: !12298, file: !11142, line: 3634, column: 14)
!12298 = distinct !DILexicalBlock(scope: !12280, file: !11142, line: 3633, column: 9)
!12299 = !DILocation(line: 3634, column: 29, scope: !12297)
!12300 = !DILocation(line: 3634, column: 43, scope: !12297)
!12301 = !DILocation(line: 3634, column: 14, scope: !12298)
!12302 = distinct !{!12302, !12293, !12303}
!12303 = !DILocation(line: 3638, column: 9, scope: !12280)
!12304 = !DILocation(line: 3649, column: 15, scope: !12305)
!12305 = distinct !DILexicalBlock(scope: !12275, file: !11142, line: 3641, column: 7)
!12306 = !DILocation(line: 3649, column: 9, scope: !12305)
!12307 = !DILocation(line: 3651, column: 15, scope: !12308)
!12308 = distinct !DILexicalBlock(scope: !12309, file: !11142, line: 3651, column: 14)
!12309 = distinct !DILexicalBlock(scope: !12305, file: !11142, line: 3650, column: 9)
!12310 = !DILocation(line: 3651, column: 29, scope: !12308)
!12311 = !DILocation(line: 3651, column: 43, scope: !12308)
!12312 = !DILocation(line: 3651, column: 14, scope: !12309)
!12313 = distinct !{!12313, !12306, !12314}
!12314 = !DILocation(line: 3655, column: 9, scope: !12305)
!12315 = !DILocation(line: 3661, column: 44, scope: !12316)
!12316 = distinct !DILexicalBlock(scope: !12317, file: !11142, line: 3661, column: 10)
!12317 = distinct !DILexicalBlock(scope: !12270, file: !11142, line: 3659, column: 5)
!12318 = !DILocation(line: 3661, column: 10, scope: !12317)
!12319 = !DILocation(line: 3668, column: 27, scope: !12320)
!12320 = distinct !DILexicalBlock(scope: !12316, file: !11142, line: 3666, column: 7)
!12321 = !DILocation(line: 3671, column: 14, scope: !12322)
!12322 = distinct !DILexicalBlock(scope: !12320, file: !11142, line: 3670, column: 13)
!12323 = !DILocation(line: 3671, column: 81, scope: !12322)
!12324 = !DILocation(line: 3671, column: 55, scope: !12322)
!12325 = !DILocation(line: 3671, column: 92, scope: !12322)
!12326 = !DILocation(line: 3672, column: 14, scope: !12322)
!12327 = !DILocation(line: 3672, column: 80, scope: !12322)
!12328 = !DILocation(line: 3672, column: 53, scope: !12322)
!12329 = !DILocation(line: 3672, column: 111, scope: !12322)
!12330 = !DILocation(line: 3673, column: 14, scope: !12322)
!12331 = !DILocation(line: 3673, column: 80, scope: !12322)
!12332 = !DILocation(line: 3673, column: 86, scope: !12322)
!12333 = !DILocation(line: 3673, column: 53, scope: !12322)
!12334 = !DILocation(line: 3673, column: 111, scope: !12322)
!12335 = !DILocation(line: 3674, column: 14, scope: !12322)
!12336 = !DILocation(line: 3674, column: 82, scope: !12322)
!12337 = !DILocation(line: 3674, column: 101, scope: !12322)
!12338 = !DILocation(line: 3674, column: 53, scope: !12322)
!12339 = !DILocation(line: 3674, column: 126, scope: !12322)
!12340 = !DILocation(line: 3675, column: 14, scope: !12322)
!12341 = !DILocation(line: 3675, column: 80, scope: !12322)
!12342 = !DILocation(line: 3675, column: 85, scope: !12322)
!12343 = !DILocation(line: 3675, column: 53, scope: !12322)
!12344 = !DILocation(line: 3675, column: 111, scope: !12322)
!12345 = !DILocation(line: 3676, column: 14, scope: !12322)
!12346 = !DILocation(line: 3676, column: 80, scope: !12322)
!12347 = !DILocation(line: 3676, column: 85, scope: !12322)
!12348 = !DILocation(line: 3676, column: 53, scope: !12322)
!12349 = !DILocation(line: 3670, column: 13, scope: !12320)
!12350 = !DILocation(line: 3691, column: 3, scope: !11980)
!12351 = !DILocation(line: 3692, column: 1, scope: !11980)
!12352 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !11142, file: !11142, line: 3703, type: !12353, scopeLine: 3704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2985, retainedNodes: !12355)
!12353 = !DISubroutineType(types: !12354)
!12354 = !{null, !11983}
!12355 = !{!12356}
!12356 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12352, file: !11142, line: 3703, type: !11983)
!12357 = !DILocation(line: 0, scope: !12352)
!12358 = !DILocation(line: 3706, column: 22, scope: !12352)
!12359 = !DILocation(line: 3706, column: 37, scope: !12352)
!12360 = !DILocation(line: 3709, column: 12, scope: !12361)
!12361 = distinct !DILexicalBlock(scope: !12352, file: !11142, line: 3709, column: 6)
!12362 = !DILocation(line: 3709, column: 15, scope: !12361)
!12363 = !DILocation(line: 3709, column: 31, scope: !12361)
!12364 = !DILocation(line: 3709, column: 6, scope: !12352)
!12365 = !DILocation(line: 3711, column: 24, scope: !12366)
!12366 = distinct !DILexicalBlock(scope: !12361, file: !11142, line: 3710, column: 3)
!12367 = !DILocation(line: 3711, column: 33, scope: !12366)
!12368 = !DILocation(line: 3712, column: 3, scope: !12366)
!12369 = !DILocation(line: 3713, column: 17, scope: !12370)
!12370 = distinct !DILexicalBlock(scope: !12361, file: !11142, line: 3713, column: 11)
!12371 = !DILocation(line: 3713, column: 20, scope: !12370)
!12372 = !DILocation(line: 3713, column: 35, scope: !12370)
!12373 = !DILocation(line: 0, scope: !12370)
!12374 = !DILocation(line: 3713, column: 11, scope: !12361)
!12375 = !DILocation(line: 3715, column: 33, scope: !12376)
!12376 = distinct !DILexicalBlock(scope: !12370, file: !11142, line: 3714, column: 3)
!12377 = !DILocation(line: 3716, column: 3, scope: !12376)
!12378 = !DILocation(line: 3719, column: 33, scope: !12379)
!12379 = distinct !DILexicalBlock(scope: !12370, file: !11142, line: 3718, column: 3)
!12380 = !DILocation(line: 3723, column: 12, scope: !12381)
!12381 = distinct !DILexicalBlock(scope: !12352, file: !11142, line: 3723, column: 6)
!12382 = !DILocation(line: 3723, column: 15, scope: !12381)
!12383 = !DILocation(line: 3729, column: 24, scope: !12384)
!12384 = distinct !DILexicalBlock(scope: !12381, file: !11142, line: 3728, column: 3)
!12385 = !DILocation(line: 3729, column: 33, scope: !12384)
!12386 = !DILocation(line: 3732, column: 61, scope: !12352)
!12387 = !DILocation(line: 3732, column: 81, scope: !12352)
!12388 = !DILocation(line: 3732, column: 22, scope: !12352)
!12389 = !DILocation(line: 3732, column: 42, scope: !12352)
!12390 = !DILocation(line: 3735, column: 12, scope: !12391)
!12391 = distinct !DILexicalBlock(scope: !12352, file: !11142, line: 3735, column: 6)
!12392 = !DILocation(line: 3735, column: 17, scope: !12391)
!12393 = !DILocation(line: 3735, column: 35, scope: !12391)
!12394 = !DILocation(line: 3735, column: 6, scope: !12352)
!12395 = !DILocation(line: 3737, column: 24, scope: !12396)
!12396 = distinct !DILexicalBlock(scope: !12391, file: !11142, line: 3736, column: 3)
!12397 = !DILocation(line: 3737, column: 33, scope: !12396)
!12398 = !DILocation(line: 3738, column: 3, scope: !12396)
!12399 = !DILocation(line: 3739, column: 17, scope: !12400)
!12400 = distinct !DILexicalBlock(scope: !12391, file: !11142, line: 3739, column: 11)
!12401 = !DILocation(line: 3739, column: 22, scope: !12400)
!12402 = !DILocation(line: 3739, column: 39, scope: !12400)
!12403 = !DILocation(line: 0, scope: !12400)
!12404 = !DILocation(line: 3739, column: 11, scope: !12391)
!12405 = !DILocation(line: 3741, column: 33, scope: !12406)
!12406 = distinct !DILexicalBlock(scope: !12400, file: !11142, line: 3740, column: 3)
!12407 = !DILocation(line: 3742, column: 3, scope: !12406)
!12408 = !DILocation(line: 3745, column: 33, scope: !12409)
!12409 = distinct !DILexicalBlock(scope: !12400, file: !11142, line: 3744, column: 3)
!12410 = !DILocation(line: 3749, column: 12, scope: !12411)
!12411 = distinct !DILexicalBlock(scope: !12352, file: !11142, line: 3749, column: 6)
!12412 = !DILocation(line: 3749, column: 16, scope: !12411)
!12413 = !DILocation(line: 3755, column: 24, scope: !12414)
!12414 = distinct !DILexicalBlock(scope: !12411, file: !11142, line: 3754, column: 3)
!12415 = !DILocation(line: 3755, column: 33, scope: !12414)
!12416 = !DILocation(line: 3759, column: 12, scope: !12417)
!12417 = distinct !DILexicalBlock(scope: !12352, file: !11142, line: 3759, column: 6)
!12418 = !DILocation(line: 3759, column: 15, scope: !12417)
!12419 = !DILocation(line: 3759, column: 30, scope: !12417)
!12420 = !DILocation(line: 3759, column: 6, scope: !12352)
!12421 = !DILocation(line: 3765, column: 28, scope: !12422)
!12422 = distinct !DILexicalBlock(scope: !12417, file: !11142, line: 3764, column: 3)
!12423 = !DILocation(line: 3765, column: 37, scope: !12422)
!12424 = !DILocation(line: 3767, column: 54, scope: !12352)
!12425 = !DILocation(line: 3767, column: 62, scope: !12352)
!12426 = !DILocation(line: 3767, column: 26, scope: !12352)
!12427 = !DILocation(line: 3767, column: 36, scope: !12352)
!12428 = !DILocation(line: 3768, column: 49, scope: !12352)
!12429 = !DILocation(line: 3768, column: 57, scope: !12352)
!12430 = !DILocation(line: 3768, column: 26, scope: !12352)
!12431 = !DILocation(line: 3768, column: 31, scope: !12352)
!12432 = !DILocation(line: 3769, column: 50, scope: !12352)
!12433 = !DILocation(line: 3769, column: 78, scope: !12352)
!12434 = !DILocation(line: 3769, column: 26, scope: !12352)
!12435 = !DILocation(line: 3769, column: 31, scope: !12352)
!12436 = !DILocation(line: 3770, column: 52, scope: !12352)
!12437 = !DILocation(line: 3770, column: 102, scope: !12352)
!12438 = !DILocation(line: 3770, column: 109, scope: !12352)
!12439 = !DILocation(line: 3770, column: 26, scope: !12352)
!12440 = !DILocation(line: 3770, column: 31, scope: !12352)
!12441 = !DILocation(line: 3771, column: 50, scope: !12352)
!12442 = !DILocation(line: 3771, column: 78, scope: !12352)
!12443 = !DILocation(line: 3771, column: 26, scope: !12352)
!12444 = !DILocation(line: 3771, column: 31, scope: !12352)
!12445 = !DILocation(line: 3772, column: 50, scope: !12352)
!12446 = !DILocation(line: 3772, column: 78, scope: !12352)
!12447 = !DILocation(line: 3772, column: 26, scope: !12352)
!12448 = !DILocation(line: 3772, column: 31, scope: !12352)
!12449 = !DILocation(line: 3773, column: 1, scope: !12352)
!12450 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !12451, file: !12451, line: 257, type: !6583, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !12452)
!12451 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12452 = !{!12453}
!12453 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12450, file: !12451, line: 257, type: !110)
!12454 = !DILocation(line: 0, scope: !12450)
!12455 = !DILocation(line: 260, column: 3, scope: !12450)
!12456 = !DILocation(line: 261, column: 1, scope: !12450)
!12457 = distinct !DISubprogram(name: "LL_InitTick", scope: !12458, file: !12458, line: 260, type: !9501, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !12459)
!12458 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12459 = !{!12460, !12461}
!12460 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12457, file: !12458, line: 260, type: !110)
!12461 = !DILocalVariable(name: "Ticks", arg: 2, scope: !12457, file: !12458, line: 260, type: !110)
!12462 = !DILocation(line: 0, scope: !12457)
!12463 = !DILocation(line: 263, column: 46, scope: !12457)
!12464 = !DILocation(line: 263, column: 55, scope: !12457)
!12465 = !DILocation(line: 263, column: 18, scope: !12457)
!12466 = !DILocation(line: 264, column: 18, scope: !12457)
!12467 = !DILocation(line: 265, column: 18, scope: !12457)
!12468 = !DILocation(line: 267, column: 1, scope: !12457)
!12469 = distinct !DISubprogram(name: "LL_mDelay", scope: !12451, file: !12451, line: 273, type: !6583, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !12470)
!12470 = !{!12471, !12472}
!12471 = !DILocalVariable(name: "Delay", arg: 1, scope: !12469, file: !12451, line: 273, type: !110)
!12472 = !DILocalVariable(name: "tmp", scope: !12469, file: !12451, line: 275, type: !316)
!12473 = !DILocation(line: 0, scope: !12469)
!12474 = !DILocation(line: 275, column: 3, scope: !12469)
!12475 = !DILocation(line: 275, column: 18, scope: !12469)
!12476 = !DILocation(line: 275, column: 33, scope: !12469)
!12477 = !DILocation(line: 277, column: 10, scope: !12469)
!12478 = !DILocation(line: 280, column: 12, scope: !12479)
!12479 = distinct !DILexicalBlock(scope: !12469, file: !12451, line: 280, column: 6)
!12480 = !DILocation(line: 285, column: 3, scope: !12469)
!12481 = !DILocation(line: 287, column: 18, scope: !12482)
!12482 = distinct !DILexicalBlock(scope: !12483, file: !12451, line: 287, column: 8)
!12483 = distinct !DILexicalBlock(scope: !12469, file: !12451, line: 286, column: 3)
!12484 = !DILocation(line: 292, column: 1, scope: !12469)
!12485 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !12451, file: !12451, line: 323, type: !6583, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !12486)
!12486 = !{!12487}
!12487 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12485, file: !12451, line: 323, type: !110)
!12488 = !DILocation(line: 0, scope: !12485)
!12489 = !DILocation(line: 326, column: 19, scope: !12485)
!12490 = !DILocation(line: 327, column: 1, scope: !12485)
!12491 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !12451, file: !12451, line: 338, type: !12492, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !12495)
!12492 = !DISubroutineType(types: !12493)
!12493 = !{!12494, !110}
!12494 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !845, line: 201, baseType: !844)
!12495 = !{!12496, !12497, !12498, !12499, !12500}
!12496 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !12491, file: !12451, line: 338, type: !110)
!12497 = !DILocalVariable(name: "timeout", scope: !12491, file: !12451, line: 340, type: !110)
!12498 = !DILocalVariable(name: "getlatency", scope: !12491, file: !12451, line: 341, type: !110)
!12499 = !DILocalVariable(name: "latency", scope: !12491, file: !12451, line: 342, type: !110)
!12500 = !DILocalVariable(name: "status", scope: !12491, file: !12451, line: 343, type: !12494)
!12501 = !DILocation(line: 0, scope: !12491)
!12502 = !DILocation(line: 347, column: 21, scope: !12503)
!12503 = distinct !DILexicalBlock(scope: !12491, file: !12451, line: 347, column: 6)
!12504 = !DILocation(line: 347, column: 6, scope: !12491)
!12505 = !DILocation(line: 353, column: 8, scope: !12506)
!12506 = distinct !DILexicalBlock(scope: !12507, file: !12451, line: 353, column: 8)
!12507 = distinct !DILexicalBlock(scope: !12503, file: !12451, line: 352, column: 3)
!12508 = !DILocation(line: 353, column: 40, scope: !12506)
!12509 = !DILocation(line: 353, column: 8, scope: !12507)
!12510 = !DILocation(line: 356, column: 26, scope: !12511)
!12511 = distinct !DILexicalBlock(scope: !12512, file: !12451, line: 356, column: 10)
!12512 = distinct !DILexicalBlock(scope: !12506, file: !12451, line: 354, column: 5)
!12513 = !DILocation(line: 356, column: 55, scope: !12511)
!12514 = !DILocation(line: 362, column: 55, scope: !12515)
!12515 = distinct !DILexicalBlock(scope: !12512, file: !12451, line: 362, column: 10)
!12516 = !DILocation(line: 368, column: 55, scope: !12517)
!12517 = distinct !DILexicalBlock(scope: !12512, file: !12451, line: 368, column: 10)
!12518 = !DILocation(line: 374, column: 26, scope: !12519)
!12519 = distinct !DILexicalBlock(scope: !12512, file: !12451, line: 374, column: 10)
!12520 = !DILocation(line: 374, column: 55, scope: !12519)
!12521 = !DILocation(line: 380, column: 28, scope: !12522)
!12522 = distinct !DILexicalBlock(scope: !12523, file: !12451, line: 380, column: 12)
!12523 = distinct !DILexicalBlock(scope: !12519, file: !12451, line: 379, column: 7)
!12524 = !DILocation(line: 380, column: 57, scope: !12522)
!12525 = !DILocation(line: 387, column: 8, scope: !12526)
!12526 = distinct !DILexicalBlock(scope: !12507, file: !12451, line: 387, column: 8)
!12527 = !DILocation(line: 387, column: 40, scope: !12526)
!12528 = !DILocation(line: 387, column: 8, scope: !12507)
!12529 = !DILocation(line: 390, column: 26, scope: !12530)
!12530 = distinct !DILexicalBlock(scope: !12531, file: !12451, line: 390, column: 10)
!12531 = distinct !DILexicalBlock(scope: !12526, file: !12451, line: 388, column: 5)
!12532 = !DILocation(line: 390, column: 55, scope: !12530)
!12533 = !DILocation(line: 396, column: 26, scope: !12534)
!12534 = distinct !DILexicalBlock(scope: !12531, file: !12451, line: 396, column: 10)
!12535 = !DILocation(line: 396, column: 55, scope: !12534)
!12536 = !DILocation(line: 402, column: 26, scope: !12537)
!12537 = distinct !DILexicalBlock(scope: !12531, file: !12451, line: 402, column: 10)
!12538 = !DILocation(line: 402, column: 55, scope: !12537)
!12539 = !DILocation(line: 407, column: 26, scope: !12540)
!12540 = distinct !DILexicalBlock(scope: !12531, file: !12451, line: 407, column: 10)
!12541 = !DILocation(line: 407, column: 55, scope: !12540)
!12542 = !DILocation(line: 413, column: 28, scope: !12543)
!12543 = distinct !DILexicalBlock(scope: !12544, file: !12451, line: 413, column: 12)
!12544 = distinct !DILexicalBlock(scope: !12540, file: !12451, line: 412, column: 7)
!12545 = !DILocation(line: 413, column: 57, scope: !12543)
!12546 = !DILocation(line: 0, scope: !12507)
!12547 = !DILocation(line: 420, column: 8, scope: !12548)
!12548 = distinct !DILexicalBlock(scope: !12507, file: !12451, line: 420, column: 8)
!12549 = !DILocation(line: 420, column: 40, scope: !12548)
!12550 = !DILocation(line: 420, column: 8, scope: !12507)
!12551 = !DILocation(line: 423, column: 26, scope: !12552)
!12552 = distinct !DILexicalBlock(scope: !12553, file: !12451, line: 423, column: 10)
!12553 = distinct !DILexicalBlock(scope: !12548, file: !12451, line: 421, column: 5)
!12554 = !DILocation(line: 423, column: 55, scope: !12552)
!12555 = !DILocation(line: 429, column: 26, scope: !12556)
!12556 = distinct !DILexicalBlock(scope: !12553, file: !12451, line: 429, column: 10)
!12557 = !DILocation(line: 429, column: 55, scope: !12556)
!12558 = !DILocation(line: 435, column: 28, scope: !12559)
!12559 = distinct !DILexicalBlock(scope: !12560, file: !12451, line: 435, column: 12)
!12560 = distinct !DILexicalBlock(scope: !12556, file: !12451, line: 434, column: 7)
!12561 = !DILocation(line: 435, column: 57, scope: !12559)
!12562 = !DILocation(line: 444, column: 5, scope: !12507)
!12563 = !DILocation(line: 448, column: 5, scope: !12507)
!12564 = !DILocation(line: 451, column: 18, scope: !12565)
!12565 = distinct !DILexicalBlock(scope: !12507, file: !12451, line: 449, column: 5)
!12566 = !DILocation(line: 452, column: 12, scope: !12565)
!12567 = !DILocation(line: 453, column: 26, scope: !12507)
!12568 = !DILocation(line: 453, column: 38, scope: !12507)
!12569 = !DILocation(line: 453, column: 5, scope: !12565)
!12570 = distinct !{!12570, !12563, !12571}
!12571 = !DILocation(line: 453, column: 54, scope: !12507)
!12572 = !DILocation(line: 0, scope: !12503)
!12573 = !DILocation(line: 464, column: 3, scope: !12491)
!12574 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !12575, file: !12575, line: 519, type: !6573, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !2106)
!12575 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12576 = !DILocation(line: 521, column: 21, scope: !12574)
!12577 = !DILocation(line: 521, column: 3, scope: !12574)
!12578 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !6186, file: !6186, line: 1543, type: !6583, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !12579)
!12579 = !{!12580}
!12580 = !DILocalVariable(name: "Latency", arg: 1, scope: !12578, file: !6186, line: 1543, type: !110)
!12581 = !DILocation(line: 0, scope: !12578)
!12582 = !DILocation(line: 1545, column: 3, scope: !12578)
!12583 = !DILocation(line: 1546, column: 1, scope: !12578)
!12584 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !6186, file: !6186, line: 1569, type: !6573, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !2106)
!12585 = !DILocation(line: 1571, column: 21, scope: !12584)
!12586 = !DILocation(line: 1571, column: 3, scope: !12584)
!12587 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !12451, file: !12451, line: 483, type: !12588, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !12604)
!12588 = !DISubroutineType(types: !12589)
!12589 = !{!12494, !12590, !12597}
!12590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12591, size: 32)
!12591 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !12458, line: 114, baseType: !12592)
!12592 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12458, line: 94, size: 96, elements: !12593)
!12593 = !{!12594, !12595, !12596}
!12594 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !12592, file: !12458, line: 96, baseType: !110, size: 32)
!12595 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !12592, file: !12458, line: 102, baseType: !110, size: 32, offset: 32)
!12596 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !12592, file: !12458, line: 109, baseType: !110, size: 32, offset: 64)
!12597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12598, size: 32)
!12598 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !12458, line: 139, baseType: !12599)
!12599 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12458, line: 119, size: 96, elements: !12600)
!12600 = !{!12601, !12602, !12603}
!12601 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12599, file: !12458, line: 121, baseType: !110, size: 32)
!12602 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12599, file: !12458, line: 127, baseType: !110, size: 32, offset: 32)
!12603 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12599, file: !12458, line: 133, baseType: !110, size: 32, offset: 64)
!12604 = !{!12605, !12606, !12607, !12608}
!12605 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !12587, file: !12451, line: 483, type: !12590)
!12606 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12587, file: !12451, line: 484, type: !12597)
!12607 = !DILocalVariable(name: "status", scope: !12587, file: !12451, line: 486, type: !12494)
!12608 = !DILocalVariable(name: "pllfreq", scope: !12587, file: !12451, line: 487, type: !110)
!12609 = !DILocation(line: 0, scope: !12587)
!12610 = !DILocation(line: 490, column: 6, scope: !12611)
!12611 = distinct !DILexicalBlock(scope: !12587, file: !12451, line: 490, column: 6)
!12612 = !DILocation(line: 490, column: 25, scope: !12611)
!12613 = !DILocation(line: 490, column: 6, scope: !12587)
!12614 = !DILocation(line: 493, column: 15, scope: !12615)
!12615 = distinct !DILexicalBlock(scope: !12611, file: !12451, line: 491, column: 3)
!12616 = !DILocation(line: 496, column: 8, scope: !12617)
!12617 = distinct !DILexicalBlock(scope: !12615, file: !12451, line: 496, column: 8)
!12618 = !DILocation(line: 496, column: 29, scope: !12617)
!12619 = !DILocation(line: 496, column: 8, scope: !12615)
!12620 = !DILocation(line: 498, column: 7, scope: !12621)
!12621 = distinct !DILexicalBlock(scope: !12617, file: !12451, line: 497, column: 5)
!12622 = !DILocation(line: 499, column: 7, scope: !12621)
!12623 = !DILocation(line: 499, column: 14, scope: !12621)
!12624 = !DILocation(line: 499, column: 35, scope: !12621)
!12625 = distinct !{!12625, !12622, !12626}
!12626 = !DILocation(line: 502, column: 7, scope: !12621)
!12627 = !DILocation(line: 506, column: 76, scope: !12615)
!12628 = !DILocation(line: 506, column: 103, scope: !12615)
!12629 = !DILocation(line: 507, column: 54, scope: !12615)
!12630 = !DILocation(line: 506, column: 5, scope: !12615)
!12631 = !DILocation(line: 510, column: 14, scope: !12615)
!12632 = !DILocation(line: 511, column: 3, scope: !12615)
!12633 = !DILocation(line: 0, scope: !12611)
!12634 = !DILocation(line: 518, column: 3, scope: !12587)
!12635 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !12451, file: !12451, line: 642, type: !12636, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !12638)
!12636 = !DISubroutineType(types: !12637)
!12637 = !{!12494}
!12638 = !{!12639}
!12639 = !DILocalVariable(name: "status", scope: !12635, file: !12451, line: 644, type: !12494)
!12640 = !DILocation(line: 0, scope: !12635)
!12641 = !DILocation(line: 647, column: 6, scope: !12642)
!12642 = distinct !DILexicalBlock(scope: !12635, file: !12451, line: 647, column: 6)
!12643 = !DILocation(line: 647, column: 27, scope: !12642)
!12644 = !DILocation(line: 655, column: 6, scope: !12645)
!12645 = distinct !DILexicalBlock(scope: !12635, file: !12451, line: 655, column: 6)
!12646 = !DILocation(line: 655, column: 30, scope: !12645)
!12647 = !DILocation(line: 663, column: 6, scope: !12648)
!12648 = distinct !DILexicalBlock(scope: !12635, file: !12451, line: 663, column: 6)
!12649 = !DILocation(line: 663, column: 30, scope: !12648)
!12650 = !DILocation(line: 663, column: 6, scope: !12635)
!12651 = !DILocation(line: 669, column: 3, scope: !12635)
!12652 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !12451, file: !12451, line: 611, type: !12653, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !12655)
!12653 = !DISubroutineType(types: !12654)
!12654 = !{!110, !110, !12590}
!12655 = !{!12656, !12657, !12658}
!12656 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !12652, file: !12451, line: 611, type: !110)
!12657 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !12652, file: !12451, line: 611, type: !12590)
!12658 = !DILocalVariable(name: "pllfreq", scope: !12652, file: !12451, line: 613, type: !110)
!12659 = !DILocation(line: 0, scope: !12652)
!12660 = !DILocation(line: 622, column: 56, scope: !12652)
!12661 = !DILocation(line: 622, column: 61, scope: !12652)
!12662 = !DILocation(line: 622, column: 32, scope: !12652)
!12663 = !DILocation(line: 626, column: 45, scope: !12652)
!12664 = !DILocation(line: 626, column: 50, scope: !12652)
!12665 = !DILocation(line: 626, column: 21, scope: !12652)
!12666 = !DILocation(line: 630, column: 47, scope: !12652)
!12667 = !DILocation(line: 630, column: 82, scope: !12652)
!12668 = !DILocation(line: 630, column: 21, scope: !12652)
!12669 = !DILocation(line: 633, column: 3, scope: !12652)
!12670 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8826, file: !8826, line: 3007, type: !6573, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !2106)
!12671 = !DILocation(line: 3009, column: 11, scope: !12670)
!12672 = !DILocation(line: 3009, column: 44, scope: !12670)
!12673 = !DILocation(line: 3009, column: 3, scope: !12670)
!12674 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8826, file: !8826, line: 2987, type: !3155, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !2106)
!12675 = !DILocation(line: 2989, column: 3, scope: !12674)
!12676 = !DILocation(line: 2990, column: 1, scope: !12674)
!12677 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8826, file: !8826, line: 4304, type: !8960, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !12678)
!12678 = !{!12679, !12680, !12681, !12682}
!12679 = !DILocalVariable(name: "Source", arg: 1, scope: !12677, file: !8826, line: 4304, type: !110)
!12680 = !DILocalVariable(name: "PLLM", arg: 2, scope: !12677, file: !8826, line: 4304, type: !110)
!12681 = !DILocalVariable(name: "PLLN", arg: 3, scope: !12677, file: !8826, line: 4304, type: !110)
!12682 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !12677, file: !8826, line: 4304, type: !110)
!12683 = !DILocation(line: 0, scope: !12677)
!12684 = !DILocation(line: 4306, column: 3, scope: !12677)
!12685 = !DILocation(line: 4308, column: 3, scope: !12677)
!12686 = !DILocation(line: 4310, column: 3, scope: !12677)
!12687 = !DILocation(line: 4312, column: 1, scope: !12677)
!12688 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !12451, file: !12451, line: 681, type: !12689, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !12691)
!12689 = !DISubroutineType(types: !12690)
!12690 = !{!12494, !110, !12597}
!12691 = !{!12692, !12693, !12694, !12695}
!12692 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !12688, file: !12451, line: 681, type: !110)
!12693 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12688, file: !12451, line: 681, type: !12597)
!12694 = !DILocalVariable(name: "status", scope: !12688, file: !12451, line: 683, type: !12494)
!12695 = !DILocalVariable(name: "hclk_frequency", scope: !12688, file: !12451, line: 684, type: !110)
!12696 = !DILocation(line: 0, scope: !12688)
!12697 = !DILocation(line: 691, column: 20, scope: !12688)
!12698 = !DILocation(line: 694, column: 6, scope: !12699)
!12699 = distinct !DILexicalBlock(scope: !12688, file: !12451, line: 694, column: 6)
!12700 = !DILocation(line: 694, column: 22, scope: !12699)
!12701 = !DILocation(line: 694, column: 6, scope: !12688)
!12702 = !DILocation(line: 697, column: 14, scope: !12703)
!12703 = distinct !DILexicalBlock(scope: !12699, file: !12451, line: 695, column: 3)
!12704 = !DILocation(line: 701, column: 13, scope: !12705)
!12705 = distinct !DILexicalBlock(scope: !12688, file: !12451, line: 701, column: 6)
!12706 = !DILocation(line: 701, column: 6, scope: !12688)
!12707 = !DILocation(line: 704, column: 5, scope: !12708)
!12708 = distinct !DILexicalBlock(scope: !12705, file: !12451, line: 702, column: 3)
!12709 = !DILocation(line: 705, column: 5, scope: !12708)
!12710 = !DILocation(line: 705, column: 12, scope: !12708)
!12711 = !DILocation(line: 705, column: 33, scope: !12708)
!12712 = distinct !{!12712, !12709, !12713}
!12713 = !DILocation(line: 708, column: 5, scope: !12708)
!12714 = !DILocation(line: 711, column: 49, scope: !12708)
!12715 = !DILocation(line: 711, column: 5, scope: !12708)
!12716 = !DILocation(line: 712, column: 5, scope: !12708)
!12717 = !DILocation(line: 713, column: 5, scope: !12708)
!12718 = !DILocation(line: 713, column: 12, scope: !12708)
!12719 = !DILocation(line: 713, column: 37, scope: !12708)
!12720 = distinct !{!12720, !12717, !12721}
!12721 = !DILocation(line: 716, column: 5, scope: !12708)
!12722 = !DILocation(line: 719, column: 50, scope: !12708)
!12723 = !DILocation(line: 719, column: 5, scope: !12708)
!12724 = !DILocation(line: 720, column: 50, scope: !12708)
!12725 = !DILocation(line: 720, column: 5, scope: !12708)
!12726 = !DILocation(line: 721, column: 3, scope: !12708)
!12727 = !DILocation(line: 724, column: 6, scope: !12728)
!12728 = distinct !DILexicalBlock(scope: !12688, file: !12451, line: 724, column: 6)
!12729 = !DILocation(line: 724, column: 22, scope: !12728)
!12730 = !DILocation(line: 724, column: 6, scope: !12688)
!12731 = !DILocation(line: 727, column: 14, scope: !12732)
!12732 = distinct !DILexicalBlock(scope: !12728, file: !12451, line: 725, column: 3)
!12733 = !DILocation(line: 728, column: 3, scope: !12732)
!12734 = !DILocation(line: 731, column: 13, scope: !12735)
!12735 = distinct !DILexicalBlock(scope: !12688, file: !12451, line: 731, column: 6)
!12736 = !DILocation(line: 731, column: 6, scope: !12688)
!12737 = !DILocation(line: 733, column: 5, scope: !12738)
!12738 = distinct !DILexicalBlock(scope: !12735, file: !12451, line: 732, column: 3)
!12739 = !DILocation(line: 734, column: 3, scope: !12738)
!12740 = !DILocation(line: 736, column: 3, scope: !12688)
!12741 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8826, file: !8826, line: 4184, type: !3155, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !2106)
!12742 = !DILocation(line: 4186, column: 3, scope: !12741)
!12743 = !DILocation(line: 4187, column: 1, scope: !12741)
!12744 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8826, file: !8826, line: 4205, type: !6573, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !2106)
!12745 = !DILocation(line: 4207, column: 11, scope: !12744)
!12746 = !DILocation(line: 4207, column: 44, scope: !12744)
!12747 = !DILocation(line: 4207, column: 3, scope: !12744)
!12748 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8826, file: !8826, line: 3224, type: !6583, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !12749)
!12749 = !{!12750}
!12750 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12748, file: !8826, line: 3224, type: !110)
!12751 = !DILocation(line: 0, scope: !12748)
!12752 = !DILocation(line: 3226, column: 3, scope: !12748)
!12753 = !DILocation(line: 3227, column: 1, scope: !12748)
!12754 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8826, file: !8826, line: 3188, type: !6583, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !12755)
!12755 = !{!12756}
!12756 = !DILocalVariable(name: "Source", arg: 1, scope: !12754, file: !8826, line: 3188, type: !110)
!12757 = !DILocation(line: 0, scope: !12754)
!12758 = !DILocation(line: 3190, column: 3, scope: !12754)
!12759 = !DILocation(line: 3191, column: 1, scope: !12754)
!12760 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8826, file: !8826, line: 3204, type: !6573, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !2106)
!12761 = !DILocation(line: 3206, column: 21, scope: !12760)
!12762 = !DILocation(line: 3206, column: 3, scope: !12760)
!12763 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8826, file: !8826, line: 3240, type: !6583, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !12764)
!12764 = !{!12765}
!12765 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12763, file: !8826, line: 3240, type: !110)
!12766 = !DILocation(line: 0, scope: !12763)
!12767 = !DILocation(line: 3242, column: 3, scope: !12763)
!12768 = !DILocation(line: 3243, column: 1, scope: !12763)
!12769 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8826, file: !8826, line: 3256, type: !6583, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !12770)
!12770 = !{!12771}
!12771 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12769, file: !8826, line: 3256, type: !110)
!12772 = !DILocation(line: 0, scope: !12769)
!12773 = !DILocation(line: 3258, column: 3, scope: !12769)
!12774 = !DILocation(line: 3259, column: 1, scope: !12769)
!12775 = distinct !DISubprogram(name: "LL_RCC_PLLSAI_IsReady", scope: !8826, file: !8826, line: 5969, type: !6573, scopeLine: 5970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !2106)
!12776 = !DILocation(line: 5971, column: 11, scope: !12775)
!12777 = !DILocation(line: 5971, column: 47, scope: !12775)
!12778 = !DILocation(line: 5971, column: 3, scope: !12775)
!12779 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !8826, file: !8826, line: 5153, type: !6573, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !2106)
!12780 = !DILocation(line: 5155, column: 11, scope: !12779)
!12781 = !DILocation(line: 5155, column: 47, scope: !12779)
!12782 = !DILocation(line: 5155, column: 3, scope: !12779)
!12783 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !12451, file: !12451, line: 540, type: !12784, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !12786)
!12784 = !DISubroutineType(types: !12785)
!12785 = !{!12494, !110, !110, !12590, !12597}
!12786 = !{!12787, !12788, !12789, !12790, !12791, !12792}
!12787 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !12783, file: !12451, line: 540, type: !110)
!12788 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !12783, file: !12451, line: 540, type: !110)
!12789 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !12783, file: !12451, line: 541, type: !12590)
!12790 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !12783, file: !12451, line: 541, type: !12597)
!12791 = !DILocalVariable(name: "status", scope: !12783, file: !12451, line: 543, type: !12494)
!12792 = !DILocalVariable(name: "pllfreq", scope: !12783, file: !12451, line: 544, type: !110)
!12793 = !DILocation(line: 0, scope: !12783)
!12794 = !DILocation(line: 551, column: 6, scope: !12795)
!12795 = distinct !DILexicalBlock(scope: !12783, file: !12451, line: 551, column: 6)
!12796 = !DILocation(line: 551, column: 25, scope: !12795)
!12797 = !DILocation(line: 551, column: 6, scope: !12783)
!12798 = !DILocation(line: 554, column: 15, scope: !12799)
!12799 = distinct !DILexicalBlock(scope: !12795, file: !12451, line: 552, column: 3)
!12800 = !DILocation(line: 557, column: 8, scope: !12801)
!12801 = distinct !DILexicalBlock(scope: !12799, file: !12451, line: 557, column: 8)
!12802 = !DILocation(line: 557, column: 29, scope: !12801)
!12803 = !DILocation(line: 557, column: 8, scope: !12799)
!12804 = !DILocation(line: 560, column: 20, scope: !12805)
!12805 = distinct !DILexicalBlock(scope: !12806, file: !12451, line: 560, column: 10)
!12806 = distinct !DILexicalBlock(scope: !12801, file: !12451, line: 558, column: 5)
!12807 = !DILocation(line: 560, column: 10, scope: !12806)
!12808 = !DILocation(line: 562, column: 9, scope: !12809)
!12809 = distinct !DILexicalBlock(scope: !12805, file: !12451, line: 561, column: 7)
!12810 = !DILocation(line: 563, column: 7, scope: !12809)
!12811 = !DILocation(line: 566, column: 9, scope: !12812)
!12812 = distinct !DILexicalBlock(scope: !12805, file: !12451, line: 565, column: 7)
!12813 = !DILocation(line: 570, column: 7, scope: !12806)
!12814 = !DILocation(line: 571, column: 7, scope: !12806)
!12815 = !DILocation(line: 571, column: 14, scope: !12806)
!12816 = !DILocation(line: 571, column: 35, scope: !12806)
!12817 = distinct !{!12817, !12814, !12818}
!12818 = !DILocation(line: 574, column: 7, scope: !12806)
!12819 = !DILocation(line: 578, column: 76, scope: !12799)
!12820 = !DILocation(line: 578, column: 103, scope: !12799)
!12821 = !DILocation(line: 579, column: 54, scope: !12799)
!12822 = !DILocation(line: 578, column: 5, scope: !12799)
!12823 = !DILocation(line: 582, column: 14, scope: !12799)
!12824 = !DILocation(line: 583, column: 3, scope: !12799)
!12825 = !DILocation(line: 0, scope: !12795)
!12826 = !DILocation(line: 590, column: 3, scope: !12783)
!12827 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8826, file: !8826, line: 2969, type: !6573, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !2106)
!12828 = !DILocation(line: 2971, column: 11, scope: !12827)
!12829 = !DILocation(line: 2971, column: 44, scope: !12827)
!12830 = !DILocation(line: 2971, column: 3, scope: !12827)
!12831 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !8826, file: !8826, line: 2929, type: !3155, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !2106)
!12832 = !DILocation(line: 2931, column: 3, scope: !12831)
!12833 = !DILocation(line: 2932, column: 1, scope: !12831)
!12834 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8826, file: !8826, line: 2939, type: !3155, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !2106)
!12835 = !DILocation(line: 2941, column: 3, scope: !12834)
!12836 = !DILocation(line: 2942, column: 1, scope: !12834)
!12837 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8826, file: !8826, line: 2949, type: !3155, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3048, retainedNodes: !2106)
!12838 = !DILocation(line: 2951, column: 3, scope: !12837)
!12839 = !DILocation(line: 2952, column: 1, scope: !12837)
!12840 = distinct !DISubprogram(name: "z_device_state_init", scope: !12841, file: !12841, line: 23, type: !3155, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !12842)
!12841 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12842 = !{!12843}
!12843 = !DILocalVariable(name: "dev", scope: !12840, file: !12841, line: 25, type: !12844)
!12844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12845, size: 32)
!12845 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12846)
!12846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !12847)
!12847 = !{!12848, !12849, !12850, !12851, !12857, !12858}
!12848 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12846, file: !336, line: 380, baseType: !279, size: 32)
!12849 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !12846, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!12850 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !12846, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!12851 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !12846, file: !336, line: 386, baseType: !12852, size: 32, offset: 96)
!12852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12853, size: 32)
!12853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !12854)
!12854 = !{!12855, !12856}
!12855 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !12853, file: !336, line: 359, baseType: !178, size: 8)
!12856 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !12853, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!12857 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12846, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!12858 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !12846, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!12859 = !DILocation(line: 0, scope: !12840)
!12860 = !DILocation(line: 31, column: 1, scope: !12840)
!12861 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !12841, file: !12841, line: 33, type: !12862, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !12864)
!12862 = !DISubroutineType(types: !12863)
!12863 = !{!12844, !279}
!12864 = !{!12865, !12866}
!12865 = !DILocalVariable(name: "name", arg: 1, scope: !12861, file: !12841, line: 33, type: !279)
!12866 = !DILocalVariable(name: "dev", scope: !12861, file: !12841, line: 35, type: !12844)
!12867 = !DILocation(line: 0, scope: !12861)
!12868 = !DILocation(line: 40, column: 12, scope: !12869)
!12869 = distinct !DILexicalBlock(scope: !12861, file: !12841, line: 40, column: 6)
!12870 = !DILocation(line: 40, column: 21, scope: !12869)
!12871 = !DILocation(line: 40, column: 25, scope: !12869)
!12872 = !DILocation(line: 40, column: 33, scope: !12869)
!12873 = !DILocation(line: 40, column: 6, scope: !12861)
!12874 = !DILocation(line: 55, column: 2, scope: !12875)
!12875 = distinct !DILexicalBlock(scope: !12861, file: !12841, line: 55, column: 2)
!12876 = !DILocation(line: 50, column: 7, scope: !12877)
!12877 = distinct !DILexicalBlock(scope: !12878, file: !12841, line: 50, column: 7)
!12878 = distinct !DILexicalBlock(scope: !12879, file: !12841, line: 49, column: 57)
!12879 = distinct !DILexicalBlock(scope: !12880, file: !12841, line: 49, column: 2)
!12880 = distinct !DILexicalBlock(scope: !12861, file: !12841, line: 49, column: 2)
!12881 = !DILocation(line: 50, column: 30, scope: !12877)
!12882 = !DILocation(line: 50, column: 39, scope: !12877)
!12883 = !DILocation(line: 50, column: 44, scope: !12877)
!12884 = !DILocation(line: 50, column: 7, scope: !12878)
!12885 = !DILocation(line: 49, column: 53, scope: !12879)
!12886 = !DILocation(line: 49, column: 33, scope: !12879)
!12887 = !DILocation(line: 49, column: 2, scope: !12880)
!12888 = distinct !{!12888, !12887, !12889}
!12889 = !DILocation(line: 53, column: 2, scope: !12880)
!12890 = !DILocation(line: 56, column: 7, scope: !12891)
!12891 = distinct !DILexicalBlock(scope: !12892, file: !12841, line: 56, column: 7)
!12892 = distinct !DILexicalBlock(scope: !12893, file: !12841, line: 55, column: 57)
!12893 = distinct !DILexicalBlock(scope: !12875, file: !12841, line: 55, column: 2)
!12894 = !DILocation(line: 56, column: 30, scope: !12891)
!12895 = !DILocation(line: 56, column: 52, scope: !12891)
!12896 = !DILocation(line: 56, column: 34, scope: !12891)
!12897 = !DILocation(line: 56, column: 58, scope: !12891)
!12898 = !DILocation(line: 56, column: 7, scope: !12892)
!12899 = !DILocation(line: 55, column: 53, scope: !12893)
!12900 = !DILocation(line: 55, column: 33, scope: !12893)
!12901 = distinct !{!12901, !12874, !12902}
!12902 = !DILocation(line: 59, column: 2, scope: !12875)
!12903 = !DILocation(line: 62, column: 1, scope: !12861)
!12904 = distinct !DISubprogram(name: "z_device_is_ready", scope: !12841, file: !12841, line: 93, type: !12905, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !12907)
!12905 = !DISubroutineType(types: !12906)
!12906 = !{!347, !12844}
!12907 = !{!12908}
!12908 = !DILocalVariable(name: "dev", arg: 1, scope: !12904, file: !12841, line: 93, type: !12844)
!12909 = !DILocation(line: 0, scope: !12904)
!12910 = !DILocation(line: 99, column: 10, scope: !12911)
!12911 = distinct !DILexicalBlock(scope: !12904, file: !12841, line: 99, column: 6)
!12912 = !DILocation(line: 99, column: 6, scope: !12904)
!12913 = !DILocation(line: 103, column: 14, scope: !12904)
!12914 = !DILocation(line: 103, column: 21, scope: !12904)
!12915 = !DILocation(line: 103, column: 33, scope: !12904)
!12916 = !DILocation(line: 103, column: 49, scope: !12904)
!12917 = !DILocation(line: 103, column: 58, scope: !12904)
!12918 = !DILocation(line: 104, column: 1, scope: !12904)
!12919 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !12841, file: !12841, line: 87, type: !12920, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !12923)
!12920 = !DISubroutineType(types: !12921)
!12921 = !{!232, !12922}
!12922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12844, size: 32)
!12923 = !{!12924}
!12924 = !DILocalVariable(name: "devices", arg: 1, scope: !12919, file: !12841, line: 87, type: !12922)
!12925 = !DILocation(line: 0, scope: !12919)
!12926 = !DILocation(line: 89, column: 11, scope: !12919)
!12927 = !DILocation(line: 90, column: 2, scope: !12919)
!12928 = distinct !DISubprogram(name: "device_required_foreach", scope: !12841, file: !12841, line: 125, type: !12929, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !12935)
!12929 = !DISubroutineType(types: !12930)
!12930 = !{!109, !12844, !12931, !107}
!12931 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !336, line: 471, baseType: !12932)
!12932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12933, size: 32)
!12933 = !DISubroutineType(types: !12934)
!12934 = !{!109, !12844, !107}
!12935 = !{!12936, !12937, !12938, !12939, !12940}
!12936 = !DILocalVariable(name: "dev", arg: 1, scope: !12928, file: !12841, line: 125, type: !12844)
!12937 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12928, file: !12841, line: 126, type: !12931)
!12938 = !DILocalVariable(name: "context", arg: 3, scope: !12928, file: !12841, line: 127, type: !107)
!12939 = !DILocalVariable(name: "handle_count", scope: !12928, file: !12841, line: 129, type: !232)
!12940 = !DILocalVariable(name: "handles", scope: !12928, file: !12841, line: 130, type: !350)
!12941 = !DILocation(line: 0, scope: !12928)
!12942 = !DILocation(line: 129, column: 2, scope: !12928)
!12943 = !DILocation(line: 129, column: 9, scope: !12928)
!12944 = !DILocation(line: 130, column: 35, scope: !12928)
!12945 = !DILocation(line: 132, column: 33, scope: !12928)
!12946 = !DILocation(line: 132, column: 9, scope: !12928)
!12947 = !DILocation(line: 133, column: 1, scope: !12928)
!12948 = !DILocation(line: 132, column: 2, scope: !12928)
!12949 = distinct !DISubprogram(name: "device_required_handles_get", scope: !336, file: !336, line: 493, type: !12950, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !12952)
!12950 = !DISubroutineType(types: !12951)
!12951 = !{!350, !12844, !2624}
!12952 = !{!12953, !12954, !12955, !12956}
!12953 = !DILocalVariable(name: "dev", arg: 1, scope: !12949, file: !336, line: 493, type: !12844)
!12954 = !DILocalVariable(name: "count", arg: 2, scope: !12949, file: !336, line: 493, type: !2624)
!12955 = !DILocalVariable(name: "rv", scope: !12949, file: !336, line: 495, type: !350)
!12956 = !DILocalVariable(name: "i", scope: !12957, file: !336, line: 498, type: !232)
!12957 = distinct !DILexicalBlock(scope: !12958, file: !336, line: 497, column: 18)
!12958 = distinct !DILexicalBlock(scope: !12949, file: !336, line: 497, column: 6)
!12959 = !DILocation(line: 0, scope: !12949)
!12960 = !DILocation(line: 495, column: 35, scope: !12949)
!12961 = !DILocation(line: 497, column: 9, scope: !12958)
!12962 = !DILocation(line: 497, column: 6, scope: !12949)
!12963 = !DILocation(line: 0, scope: !12957)
!12964 = !DILocation(line: 500, column: 11, scope: !12957)
!12965 = !DILocation(line: 500, column: 40, scope: !12957)
!12966 = !DILocation(line: 502, column: 4, scope: !12967)
!12967 = distinct !DILexicalBlock(scope: !12957, file: !336, line: 501, column: 40)
!12968 = distinct !{!12968, !12969, !12970}
!12969 = !DILocation(line: 500, column: 3, scope: !12957)
!12970 = !DILocation(line: 503, column: 3, scope: !12957)
!12971 = !DILocation(line: 504, column: 10, scope: !12957)
!12972 = !DILocation(line: 505, column: 2, scope: !12957)
!12973 = !DILocation(line: 507, column: 2, scope: !12949)
!12974 = distinct !DISubprogram(name: "device_visitor", scope: !12841, file: !12841, line: 106, type: !12975, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !12977)
!12975 = !DISubroutineType(types: !12976)
!12976 = !{!109, !350, !232, !12931, !107}
!12977 = !{!12978, !12979, !12980, !12981, !12982, !12984, !12987, !12988}
!12978 = !DILocalVariable(name: "handles", arg: 1, scope: !12974, file: !12841, line: 106, type: !350)
!12979 = !DILocalVariable(name: "handle_count", arg: 2, scope: !12974, file: !12841, line: 107, type: !232)
!12980 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !12974, file: !12841, line: 108, type: !12931)
!12981 = !DILocalVariable(name: "context", arg: 4, scope: !12974, file: !12841, line: 109, type: !107)
!12982 = !DILocalVariable(name: "i", scope: !12983, file: !12841, line: 112, type: !232)
!12983 = distinct !DILexicalBlock(scope: !12974, file: !12841, line: 112, column: 2)
!12984 = !DILocalVariable(name: "dh", scope: !12985, file: !12841, line: 113, type: !352)
!12985 = distinct !DILexicalBlock(scope: !12986, file: !12841, line: 112, column: 44)
!12986 = distinct !DILexicalBlock(scope: !12983, file: !12841, line: 112, column: 2)
!12987 = !DILocalVariable(name: "rdev", scope: !12985, file: !12841, line: 114, type: !12844)
!12988 = !DILocalVariable(name: "rc", scope: !12985, file: !12841, line: 115, type: !109)
!12989 = !DILocation(line: 0, scope: !12974)
!12990 = !DILocation(line: 0, scope: !12983)
!12991 = !DILocation(line: 112, column: 23, scope: !12986)
!12992 = !DILocation(line: 112, column: 2, scope: !12983)
!12993 = distinct !{!12993, !12992, !12994}
!12994 = !DILocation(line: 120, column: 2, scope: !12983)
!12995 = !DILocation(line: 113, column: 24, scope: !12985)
!12996 = !DILocation(line: 0, scope: !12985)
!12997 = !DILocation(line: 114, column: 31, scope: !12985)
!12998 = !DILocation(line: 115, column: 12, scope: !12985)
!12999 = !DILocation(line: 117, column: 10, scope: !13000)
!13000 = distinct !DILexicalBlock(scope: !12985, file: !12841, line: 117, column: 7)
!13001 = !DILocation(line: 112, column: 39, scope: !12986)
!13002 = !DILocation(line: 123, column: 1, scope: !12974)
!13003 = distinct !DISubprogram(name: "device_from_handle", scope: !336, file: !336, line: 439, type: !13004, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !13006)
!13004 = !DISubroutineType(types: !13005)
!13005 = !{!12844, !352}
!13006 = !{!13007, !13008, !13009}
!13007 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !13003, file: !336, line: 439, type: !352)
!13008 = !DILocalVariable(name: "dev", scope: !13003, file: !336, line: 443, type: !12844)
!13009 = !DILocalVariable(name: "numdev", scope: !13003, file: !336, line: 444, type: !232)
!13010 = !DILocation(line: 0, scope: !13003)
!13011 = !DILocation(line: 446, column: 7, scope: !13012)
!13012 = distinct !DILexicalBlock(scope: !13003, file: !336, line: 446, column: 6)
!13013 = !DILocation(line: 446, column: 18, scope: !13012)
!13014 = !DILocation(line: 446, column: 23, scope: !13012)
!13015 = !DILocation(line: 450, column: 2, scope: !13003)
!13016 = distinct !DISubprogram(name: "device_supported_foreach", scope: !12841, file: !12841, line: 135, type: !12929, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !13017)
!13017 = !{!13018, !13019, !13020, !13021, !13022}
!13018 = !DILocalVariable(name: "dev", arg: 1, scope: !13016, file: !12841, line: 135, type: !12844)
!13019 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13016, file: !12841, line: 136, type: !12931)
!13020 = !DILocalVariable(name: "context", arg: 3, scope: !13016, file: !12841, line: 137, type: !107)
!13021 = !DILocalVariable(name: "handle_count", scope: !13016, file: !12841, line: 139, type: !232)
!13022 = !DILocalVariable(name: "handles", scope: !13016, file: !12841, line: 140, type: !350)
!13023 = !DILocation(line: 0, scope: !13016)
!13024 = !DILocation(line: 139, column: 2, scope: !13016)
!13025 = !DILocation(line: 139, column: 9, scope: !13016)
!13026 = !DILocation(line: 140, column: 35, scope: !13016)
!13027 = !DILocation(line: 142, column: 33, scope: !13016)
!13028 = !DILocation(line: 142, column: 9, scope: !13016)
!13029 = !DILocation(line: 143, column: 1, scope: !13016)
!13030 = !DILocation(line: 142, column: 2, scope: !13016)
!13031 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !336, file: !336, line: 573, type: !12950, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !13032)
!13032 = !{!13033, !13034, !13035, !13036, !13037}
!13033 = !DILocalVariable(name: "dev", arg: 1, scope: !13031, file: !336, line: 573, type: !12844)
!13034 = !DILocalVariable(name: "count", arg: 2, scope: !13031, file: !336, line: 573, type: !2624)
!13035 = !DILocalVariable(name: "rv", scope: !13031, file: !336, line: 575, type: !350)
!13036 = !DILocalVariable(name: "region", scope: !13031, file: !336, line: 576, type: !232)
!13037 = !DILocalVariable(name: "i", scope: !13031, file: !336, line: 577, type: !232)
!13038 = !DILocation(line: 0, scope: !13031)
!13039 = !DILocation(line: 575, column: 35, scope: !13031)
!13040 = !DILocation(line: 579, column: 9, scope: !13041)
!13041 = distinct !DILexicalBlock(scope: !13031, file: !336, line: 579, column: 6)
!13042 = !DILocation(line: 579, column: 6, scope: !13031)
!13043 = !DILocation(line: 582, column: 8, scope: !13044)
!13044 = distinct !DILexicalBlock(scope: !13045, file: !336, line: 582, column: 8)
!13045 = distinct !DILexicalBlock(scope: !13046, file: !336, line: 581, column: 23)
!13046 = distinct !DILexicalBlock(scope: !13041, file: !336, line: 579, column: 18)
!13047 = !DILocation(line: 582, column: 12, scope: !13044)
!13048 = !DILocation(line: 585, column: 6, scope: !13045)
!13049 = !DILocation(line: 0, scope: !13046)
!13050 = !DILocation(line: 581, column: 17, scope: !13046)
!13051 = !DILocation(line: 581, column: 3, scope: !13046)
!13052 = !DILocation(line: 588, column: 10, scope: !13046)
!13053 = !DILocation(line: 588, column: 16, scope: !13046)
!13054 = !DILocation(line: 589, column: 4, scope: !13055)
!13055 = distinct !DILexicalBlock(scope: !13046, file: !336, line: 588, column: 39)
!13056 = !DILocation(line: 588, column: 3, scope: !13046)
!13057 = distinct !{!13057, !13056, !13058}
!13058 = !DILocation(line: 590, column: 3, scope: !13046)
!13059 = !DILocation(line: 591, column: 10, scope: !13046)
!13060 = !DILocation(line: 592, column: 2, scope: !13046)
!13061 = !DILocation(line: 575, column: 25, scope: !13031)
!13062 = !DILocation(line: 594, column: 2, scope: !13031)
!13063 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1897, file: !1897, line: 49, type: !13064, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1894, retainedNodes: !2106)
!13064 = !DISubroutineType(types: !13065)
!13065 = !{!281}
!13066 = !DILocation(line: 51, column: 10, scope: !13063)
!13067 = !DILocation(line: 51, column: 20, scope: !13063)
!13068 = !DILocation(line: 51, column: 2, scope: !13063)
!13069 = distinct !DISubprogram(name: "coredump", scope: !3122, file: !3122, line: 209, type: !13070, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3118, retainedNodes: !13219)
!13070 = !DISubroutineType(types: !13071)
!13071 = !{null, !32, !13072, !13116}
!13072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13073, size: 32)
!13073 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13074)
!13074 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2754, line: 141, baseType: !13075)
!13075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2754, line: 97, size: 256, elements: !13076)
!13076 = !{!13077}
!13077 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !13075, file: !2754, line: 107, baseType: !13078, size: 256)
!13078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2754, line: 98, size: 256, elements: !13079)
!13079 = !{!13080, !13085, !13090, !13095, !13100, !13105, !13110, !13115}
!13080 = !DIDerivedType(tag: DW_TAG_member, scope: !13078, file: !2754, line: 99, baseType: !13081, size: 32)
!13081 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13078, file: !2754, line: 99, size: 32, elements: !13082)
!13082 = !{!13083, !13084}
!13083 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !13081, file: !2754, line: 99, baseType: !110, size: 32)
!13084 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !13081, file: !2754, line: 99, baseType: !110, size: 32)
!13085 = !DIDerivedType(tag: DW_TAG_member, scope: !13078, file: !2754, line: 100, baseType: !13086, size: 32, offset: 32)
!13086 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13078, file: !2754, line: 100, size: 32, elements: !13087)
!13087 = !{!13088, !13089}
!13088 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !13086, file: !2754, line: 100, baseType: !110, size: 32)
!13089 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !13086, file: !2754, line: 100, baseType: !110, size: 32)
!13090 = !DIDerivedType(tag: DW_TAG_member, scope: !13078, file: !2754, line: 101, baseType: !13091, size: 32, offset: 64)
!13091 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13078, file: !2754, line: 101, size: 32, elements: !13092)
!13092 = !{!13093, !13094}
!13093 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !13091, file: !2754, line: 101, baseType: !110, size: 32)
!13094 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !13091, file: !2754, line: 101, baseType: !110, size: 32)
!13095 = !DIDerivedType(tag: DW_TAG_member, scope: !13078, file: !2754, line: 102, baseType: !13096, size: 32, offset: 96)
!13096 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13078, file: !2754, line: 102, size: 32, elements: !13097)
!13097 = !{!13098, !13099}
!13098 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !13096, file: !2754, line: 102, baseType: !110, size: 32)
!13099 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !13096, file: !2754, line: 102, baseType: !110, size: 32)
!13100 = !DIDerivedType(tag: DW_TAG_member, scope: !13078, file: !2754, line: 103, baseType: !13101, size: 32, offset: 128)
!13101 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13078, file: !2754, line: 103, size: 32, elements: !13102)
!13102 = !{!13103, !13104}
!13103 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !13101, file: !2754, line: 103, baseType: !110, size: 32)
!13104 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !13101, file: !2754, line: 103, baseType: !110, size: 32)
!13105 = !DIDerivedType(tag: DW_TAG_member, scope: !13078, file: !2754, line: 104, baseType: !13106, size: 32, offset: 160)
!13106 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13078, file: !2754, line: 104, size: 32, elements: !13107)
!13107 = !{!13108, !13109}
!13108 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !13106, file: !2754, line: 104, baseType: !110, size: 32)
!13109 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !13106, file: !2754, line: 104, baseType: !110, size: 32)
!13110 = !DIDerivedType(tag: DW_TAG_member, scope: !13078, file: !2754, line: 105, baseType: !13111, size: 32, offset: 192)
!13111 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13078, file: !2754, line: 105, size: 32, elements: !13112)
!13112 = !{!13113, !13114}
!13113 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !13111, file: !2754, line: 105, baseType: !110, size: 32)
!13114 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !13111, file: !2754, line: 105, baseType: !110, size: 32)
!13115 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !13078, file: !2754, line: 106, baseType: !110, size: 32, offset: 224)
!13116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13117, size: 32)
!13117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1280, elements: !13118)
!13118 = !{!13119, !13177, !13189, !13190, !13191, !13192, !13193, !13199, !13214}
!13119 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !13117, file: !156, line: 247, baseType: !13120, size: 384)
!13120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 384, elements: !13121)
!13121 = !{!13122, !13146, !13153, !13154, !13155, !13164, !13165, !13166}
!13122 = !DIDerivedType(tag: DW_TAG_member, scope: !13120, file: !156, line: 60, baseType: !13123, size: 64)
!13123 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13120, file: !156, line: 60, size: 64, elements: !13124)
!13124 = !{!13125, !13140}
!13125 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !13123, file: !156, line: 61, baseType: !13126, size: 64)
!13126 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !13127)
!13127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !13128)
!13128 = !{!13129, !13135}
!13129 = !DIDerivedType(tag: DW_TAG_member, scope: !13127, file: !127, line: 38, baseType: !13130, size: 32)
!13130 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13127, file: !127, line: 38, size: 32, elements: !13131)
!13131 = !{!13132, !13134}
!13132 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !13130, file: !127, line: 39, baseType: !13133, size: 32)
!13133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13127, size: 32)
!13134 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13130, file: !127, line: 40, baseType: !13133, size: 32)
!13135 = !DIDerivedType(tag: DW_TAG_member, scope: !13127, file: !127, line: 42, baseType: !13136, size: 32, offset: 32)
!13136 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13127, file: !127, line: 42, size: 32, elements: !13137)
!13137 = !{!13138, !13139}
!13138 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !13136, file: !127, line: 43, baseType: !13133, size: 32)
!13139 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13136, file: !127, line: 44, baseType: !13133, size: 32)
!13140 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !13123, file: !156, line: 62, baseType: !13141, size: 64)
!13141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !13142)
!13142 = !{!13143}
!13143 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !13141, file: !168, line: 50, baseType: !13144, size: 64)
!13144 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13145, size: 64, elements: !173)
!13145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13141, size: 32)
!13146 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !13120, file: !156, line: 68, baseType: !13147, size: 32, offset: 64)
!13147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13148, size: 32)
!13148 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !13149)
!13149 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !13150)
!13150 = !{!13151}
!13151 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !13149, file: !122, line: 232, baseType: !13152, size: 64)
!13152 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !13127)
!13153 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !13120, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!13154 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !13120, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!13155 = !DIDerivedType(tag: DW_TAG_member, scope: !13120, file: !156, line: 90, baseType: !13156, size: 16, offset: 112)
!13156 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13120, file: !156, line: 90, size: 16, elements: !13157)
!13157 = !{!13158, !13163}
!13158 = !DIDerivedType(tag: DW_TAG_member, scope: !13156, file: !156, line: 91, baseType: !13159, size: 16)
!13159 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13156, file: !156, line: 91, size: 16, elements: !13160)
!13160 = !{!13161, !13162}
!13161 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !13159, file: !156, line: 96, baseType: !188, size: 8)
!13162 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !13159, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!13163 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !13156, file: !156, line: 100, baseType: !192, size: 16)
!13164 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !13120, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!13165 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !13120, file: !156, line: 127, baseType: !107, size: 32, offset: 160)
!13166 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !13120, file: !156, line: 131, baseType: !13167, size: 192, offset: 192)
!13167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !13168)
!13168 = !{!13169, !13170, !13176}
!13169 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !13167, file: !122, line: 245, baseType: !13126, size: 64)
!13170 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !13167, file: !122, line: 246, baseType: !13171, size: 32, offset: 64)
!13171 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !13172)
!13172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13173, size: 32)
!13173 = !DISubroutineType(types: !13174)
!13174 = !{null, !13175}
!13175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13167, size: 32)
!13176 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !13167, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!13177 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !13117, file: !156, line: 250, baseType: !13178, size: 288, offset: 384)
!13178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !13179)
!13179 = !{!13180, !13181, !13182, !13183, !13184, !13185, !13186, !13187, !13188}
!13180 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !13178, file: !209, line: 26, baseType: !110, size: 32)
!13181 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !13178, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!13182 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !13178, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!13183 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !13178, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!13184 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !13178, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!13185 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !13178, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!13186 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !13178, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!13187 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !13178, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!13188 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !13178, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!13189 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !13117, file: !156, line: 253, baseType: !107, size: 32, offset: 672)
!13190 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !13117, file: !156, line: 256, baseType: !13148, size: 64, offset: 704)
!13191 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !13117, file: !156, line: 279, baseType: !223, size: 256, offset: 768)
!13192 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !13117, file: !156, line: 294, baseType: !109, size: 32, offset: 1024)
!13193 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !13117, file: !156, line: 300, baseType: !13194, size: 96, offset: 1056)
!13194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !13195)
!13195 = !{!13196, !13197, !13198}
!13196 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !13194, file: !156, line: 153, baseType: !22, size: 32)
!13197 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13194, file: !156, line: 162, baseType: !232, size: 32, offset: 32)
!13198 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !13194, file: !156, line: 168, baseType: !232, size: 32, offset: 64)
!13199 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !13117, file: !156, line: 325, baseType: !13200, size: 32, offset: 1152)
!13200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13201, size: 32)
!13201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !13202)
!13202 = !{!13203, !13209, !13210}
!13203 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13201, file: !118, line: 5074, baseType: !13204, size: 96)
!13204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !241, line: 56, size: 96, elements: !13205)
!13205 = !{!13206, !13207, !13208}
!13206 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13204, file: !241, line: 57, baseType: !244, size: 32)
!13207 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !13204, file: !241, line: 58, baseType: !107, size: 32, offset: 32)
!13208 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !13204, file: !241, line: 59, baseType: !232, size: 32, offset: 64)
!13209 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13201, file: !118, line: 5075, baseType: !13148, size: 64, offset: 96)
!13210 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13201, file: !118, line: 5076, baseType: !13211, size: 32, offset: 160)
!13211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !13212)
!13212 = !{!13213}
!13213 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !13211, file: !251, line: 52, baseType: !22, size: 32)
!13214 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !13117, file: !156, line: 343, baseType: !13215, size: 64, offset: 1184)
!13215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !209, line: 60, size: 64, elements: !13216)
!13216 = !{!13217, !13218}
!13217 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !13215, file: !209, line: 63, baseType: !110, size: 32)
!13218 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !13215, file: !209, line: 66, baseType: !110, size: 32, offset: 32)
!13219 = !{!13220, !13221, !13222}
!13220 = !DILocalVariable(name: "reason", arg: 1, scope: !13069, file: !3122, line: 209, type: !32)
!13221 = !DILocalVariable(name: "esf", arg: 2, scope: !13069, file: !3122, line: 209, type: !13072)
!13222 = !DILocalVariable(name: "thread", arg: 3, scope: !13069, file: !3122, line: 210, type: !13116)
!13223 = !DILocation(line: 0, scope: !13069)
!13224 = !DILocation(line: 212, column: 1, scope: !13069)
!13225 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3122, file: !3122, line: 214, type: !13226, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3118, retainedNodes: !13228)
!13226 = !DISubroutineType(types: !13227)
!13227 = !{null, !22, !22}
!13228 = !{!13229, !13230}
!13229 = !DILocalVariable(name: "start_addr", arg: 1, scope: !13225, file: !3122, line: 214, type: !22)
!13230 = !DILocalVariable(name: "end_addr", arg: 2, scope: !13225, file: !3122, line: 214, type: !22)
!13231 = !DILocation(line: 0, scope: !13225)
!13232 = !DILocation(line: 216, column: 1, scope: !13225)
!13233 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3122, file: !3122, line: 218, type: !13234, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3118, retainedNodes: !13236)
!13234 = !DISubroutineType(types: !13235)
!13235 = !{null, !286, !232}
!13236 = !{!13237, !13238}
!13237 = !DILocalVariable(name: "buf", arg: 1, scope: !13233, file: !3122, line: 218, type: !286)
!13238 = !DILocalVariable(name: "buflen", arg: 2, scope: !13233, file: !3122, line: 218, type: !232)
!13239 = !DILocation(line: 0, scope: !13233)
!13240 = !DILocation(line: 220, column: 1, scope: !13233)
!13241 = distinct !DISubprogram(name: "coredump_query", scope: !3122, file: !3122, line: 222, type: !13242, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3118, retainedNodes: !13244)
!13242 = !DISubroutineType(types: !13243)
!13243 = !{!109, !3121, !107}
!13244 = !{!13245, !13246}
!13245 = !DILocalVariable(name: "query_id", arg: 1, scope: !13241, file: !3122, line: 222, type: !3121)
!13246 = !DILocalVariable(name: "arg", arg: 2, scope: !13241, file: !3122, line: 222, type: !107)
!13247 = !DILocation(line: 0, scope: !13241)
!13248 = !DILocation(line: 224, column: 2, scope: !13241)
!13249 = distinct !DISubprogram(name: "coredump_cmd", scope: !3122, file: !3122, line: 227, type: !13250, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3118, retainedNodes: !13252)
!13250 = !DISubroutineType(types: !13251)
!13251 = !{!109, !3128, !107}
!13252 = !{!13253, !13254}
!13253 = !DILocalVariable(name: "query_id", arg: 1, scope: !13249, file: !3122, line: 227, type: !3128)
!13254 = !DILocalVariable(name: "arg", arg: 2, scope: !13249, file: !3122, line: 227, type: !107)
!13255 = !DILocation(line: 0, scope: !13249)
!13256 = !DILocation(line: 229, column: 2, scope: !13249)
!13257 = distinct !DISubprogram(name: "arch_system_halt", scope: !13258, file: !13258, line: 23, type: !6176, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3118, retainedNodes: !13259)
!13258 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13259 = !{!13260}
!13260 = !DILocalVariable(name: "reason", arg: 1, scope: !13257, file: !13258, line: 23, type: !32)
!13261 = !DILocation(line: 0, scope: !13257)
!13262 = !DILocation(line: 55, column: 2, scope: !13263, inlinedAt: !13267)
!13263 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6165, file: !6165, line: 42, type: !6166, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3118, retainedNodes: !13264)
!13264 = !{!13265, !13266}
!13265 = !DILocalVariable(name: "key", scope: !13263, file: !6165, line: 44, type: !32)
!13266 = !DILocalVariable(name: "tmp", scope: !13263, file: !6165, line: 53, type: !32)
!13267 = distinct !DILocation(line: 31, column: 8, scope: !13257)
!13268 = !{i64 2283778}
!13269 = !DILocation(line: 0, scope: !13263, inlinedAt: !13267)
!13270 = !DILocation(line: 32, column: 2, scope: !13257)
!13271 = !DILocation(line: 32, column: 2, scope: !13272)
!13272 = distinct !DILexicalBlock(scope: !13273, file: !13258, line: 32, column: 2)
!13273 = distinct !DILexicalBlock(scope: !13257, file: !13258, line: 32, column: 2)
!13274 = distinct !{!13274, !13275, !13276}
!13275 = !DILocation(line: 32, column: 2, scope: !13273)
!13276 = !DILocation(line: 34, column: 2, scope: !13273)
!13277 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !13258, file: !13258, line: 39, type: !13278, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3118, retainedNodes: !13280)
!13278 = !DISubroutineType(types: !13279)
!13279 = !{null, !32, !13072}
!13280 = !{!13281, !13282}
!13281 = !DILocalVariable(name: "reason", arg: 1, scope: !13277, file: !13258, line: 39, type: !32)
!13282 = !DILocalVariable(name: "esf", arg: 2, scope: !13277, file: !13258, line: 40, type: !13072)
!13283 = !DILocation(line: 0, scope: !13277)
!13284 = !DILocation(line: 45, column: 2, scope: !13285)
!13285 = distinct !DILexicalBlock(scope: !13286, file: !13258, line: 45, column: 2)
!13286 = distinct !DILexicalBlock(scope: !13287, file: !13258, line: 45, column: 2)
!13287 = distinct !DILexicalBlock(scope: !13288, file: !13258, line: 45, column: 2)
!13288 = distinct !DILexicalBlock(scope: !13277, file: !13258, line: 45, column: 2)
!13289 = !DILocation(line: 46, column: 2, scope: !13277)
!13290 = distinct !DISubprogram(name: "k_fatal_halt", scope: !13258, file: !13258, line: 81, type: !6176, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3118, retainedNodes: !13291)
!13291 = !{!13292}
!13292 = !DILocalVariable(name: "reason", arg: 1, scope: !13290, file: !13258, line: 81, type: !32)
!13293 = !DILocation(line: 0, scope: !13290)
!13294 = !DILocation(line: 83, column: 2, scope: !13290)
!13295 = distinct !DISubprogram(name: "z_fatal_error", scope: !13258, file: !13258, line: 96, type: !13278, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3118, retainedNodes: !13296)
!13296 = !{!13297, !13298, !13299, !13300}
!13297 = !DILocalVariable(name: "reason", arg: 1, scope: !13295, file: !13258, line: 96, type: !32)
!13298 = !DILocalVariable(name: "esf", arg: 2, scope: !13295, file: !13258, line: 96, type: !13072)
!13299 = !DILocalVariable(name: "key", scope: !13295, file: !13258, line: 102, type: !32)
!13300 = !DILocalVariable(name: "thread", scope: !13295, file: !13258, line: 103, type: !13116)
!13301 = !DILocation(line: 0, scope: !13295)
!13302 = !DILocation(line: 55, column: 2, scope: !13263, inlinedAt: !13303)
!13303 = distinct !DILocation(line: 102, column: 21, scope: !13295)
!13304 = !DILocation(line: 0, scope: !13263, inlinedAt: !13303)
!13305 = !DILocation(line: 104, column: 4, scope: !13295)
!13306 = !DILocation(line: 109, column: 2, scope: !13307)
!13307 = distinct !DILexicalBlock(scope: !13308, file: !13258, line: 109, column: 2)
!13308 = distinct !DILexicalBlock(scope: !13309, file: !13258, line: 109, column: 2)
!13309 = distinct !DILexicalBlock(scope: !13310, file: !13258, line: 109, column: 2)
!13310 = distinct !DILexicalBlock(scope: !13295, file: !13258, line: 109, column: 2)
!13311 = !DILocation(line: 119, column: 11, scope: !13312)
!13312 = distinct !DILexicalBlock(scope: !13295, file: !13258, line: 119, column: 6)
!13313 = !DILocation(line: 119, column: 20, scope: !13312)
!13314 = !DILocalVariable(name: "esf", arg: 1, scope: !13315, file: !7538, line: 71, type: !13072)
!13315 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !7538, file: !7538, line: 71, type: !13316, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3118, retainedNodes: !13318)
!13316 = !DISubroutineType(types: !13317)
!13317 = !{!347, !13072}
!13318 = !{!13314}
!13319 = !DILocation(line: 0, scope: !13315, inlinedAt: !13320)
!13320 = distinct !DILocation(line: 119, column: 23, scope: !13312)
!13321 = !DILocation(line: 73, column: 21, scope: !13315, inlinedAt: !13320)
!13322 = !DILocation(line: 73, column: 26, scope: !13315, inlinedAt: !13320)
!13323 = !DILocation(line: 73, column: 9, scope: !13315, inlinedAt: !13320)
!13324 = !DILocation(line: 119, column: 6, scope: !13295)
!13325 = !DILocation(line: 120, column: 3, scope: !13326)
!13326 = distinct !DILexicalBlock(scope: !13327, file: !13258, line: 120, column: 3)
!13327 = distinct !DILexicalBlock(scope: !13328, file: !13258, line: 120, column: 3)
!13328 = distinct !DILexicalBlock(scope: !13329, file: !13258, line: 120, column: 3)
!13329 = distinct !DILexicalBlock(scope: !13330, file: !13258, line: 120, column: 3)
!13330 = distinct !DILexicalBlock(scope: !13312, file: !13258, line: 119, column: 57)
!13331 = !DILocation(line: 121, column: 2, scope: !13330)
!13332 = !DILocation(line: 124, column: 2, scope: !13333)
!13333 = distinct !DILexicalBlock(scope: !13334, file: !13258, line: 124, column: 2)
!13334 = distinct !DILexicalBlock(scope: !13335, file: !13258, line: 124, column: 2)
!13335 = distinct !DILexicalBlock(scope: !13336, file: !13258, line: 124, column: 2)
!13336 = distinct !DILexicalBlock(scope: !13295, file: !13258, line: 124, column: 2)
!13337 = !DILocation(line: 131, column: 2, scope: !13295)
!13338 = !DILocation(line: 0, scope: !13315, inlinedAt: !13339)
!13339 = distinct !DILocation(line: 163, column: 24, scope: !13340)
!13340 = distinct !DILexicalBlock(scope: !13341, file: !13258, line: 163, column: 7)
!13341 = distinct !DILexicalBlock(scope: !13342, file: !13258, line: 160, column: 9)
!13342 = distinct !DILexicalBlock(scope: !13295, file: !13258, line: 146, column: 6)
!13343 = !DILocation(line: 73, column: 21, scope: !13315, inlinedAt: !13339)
!13344 = !DILocation(line: 73, column: 26, scope: !13315, inlinedAt: !13339)
!13345 = !DILocation(line: 73, column: 9, scope: !13315, inlinedAt: !13339)
!13346 = !DILocation(line: 163, column: 7, scope: !13341)
!13347 = !DILocalVariable(name: "key", arg: 1, scope: !13348, file: !6165, line: 84, type: !32)
!13348 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6165, file: !6165, line: 84, type: !6176, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3118, retainedNodes: !13349)
!13349 = !{!13347}
!13350 = !DILocation(line: 0, scope: !13348, inlinedAt: !13351)
!13351 = distinct !DILocation(line: 171, column: 4, scope: !13352)
!13352 = distinct !DILexicalBlock(scope: !13340, file: !13258, line: 163, column: 58)
!13353 = !DILocation(line: 95, column: 2, scope: !13348, inlinedAt: !13351)
!13354 = !{i64 2284595}
!13355 = !DILocation(line: 172, column: 4, scope: !13352)
!13356 = !DILocation(line: 163, column: 21, scope: !13340)
!13357 = !DILocation(line: 178, column: 15, scope: !13358)
!13358 = distinct !DILexicalBlock(scope: !13359, file: !13258, line: 178, column: 8)
!13359 = distinct !DILexicalBlock(scope: !13340, file: !13258, line: 174, column: 10)
!13360 = !DILocation(line: 0, scope: !13348, inlinedAt: !13361)
!13361 = distinct !DILocation(line: 179, column: 5, scope: !13362)
!13362 = distinct !DILexicalBlock(scope: !13358, file: !13258, line: 178, column: 38)
!13363 = !DILocation(line: 0, scope: !13348, inlinedAt: !13364)
!13364 = distinct !DILocation(line: 186, column: 2, scope: !13295)
!13365 = !DILocation(line: 178, column: 8, scope: !13359)
!13366 = !DILocation(line: 189, column: 3, scope: !13367)
!13367 = distinct !DILexicalBlock(scope: !13368, file: !13258, line: 188, column: 41)
!13368 = distinct !DILexicalBlock(scope: !13295, file: !13258, line: 188, column: 6)
!13369 = !DILocation(line: 191, column: 1, scope: !13295)
!13370 = distinct !DISubprogram(name: "k_current_get", scope: !118, file: !118, line: 530, type: !13371, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3118, retainedNodes: !2106)
!13371 = !DISubroutineType(types: !13372)
!13372 = !{!13373}
!13373 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !156, line: 347, baseType: !13116)
!13374 = !DILocation(line: 535, column: 9, scope: !13370)
!13375 = !DILocation(line: 535, column: 2, scope: !13370)
!13376 = distinct !DISubprogram(name: "reason_to_str", scope: !13258, file: !13258, line: 62, type: !13377, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3118, retainedNodes: !13379)
!13377 = !DISubroutineType(types: !13378)
!13378 = !{!279, !32}
!13379 = !{!13380}
!13380 = !DILocalVariable(name: "reason", arg: 1, scope: !13376, file: !13258, line: 62, type: !32)
!13381 = !DILocation(line: 0, scope: !13376)
!13382 = !DILocation(line: 64, column: 2, scope: !13376)
!13383 = !DILocation(line: 0, scope: !13384)
!13384 = distinct !DILexicalBlock(scope: !13376, file: !13258, line: 64, column: 18)
!13385 = !DILocation(line: 78, column: 1, scope: !13376)
!13386 = distinct !DISubprogram(name: "thread_name_get", scope: !13258, file: !13258, line: 51, type: !13387, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3118, retainedNodes: !13389)
!13387 = !DISubroutineType(types: !13388)
!13388 = !{!279, !13116}
!13389 = !{!13390, !13391}
!13390 = !DILocalVariable(name: "thread", arg: 1, scope: !13386, file: !13258, line: 51, type: !13116)
!13391 = !DILocalVariable(name: "thread_name", scope: !13386, file: !13258, line: 53, type: !279)
!13392 = !DILocation(line: 0, scope: !13386)
!13393 = !DILocation(line: 53, column: 36, scope: !13386)
!13394 = !DILocation(line: 53, column: 28, scope: !13386)
!13395 = !DILocation(line: 53, column: 47, scope: !13386)
!13396 = !DILocation(line: 55, column: 19, scope: !13397)
!13397 = distinct !DILexicalBlock(scope: !13386, file: !13258, line: 55, column: 6)
!13398 = !DILocation(line: 55, column: 28, scope: !13397)
!13399 = !DILocation(line: 55, column: 32, scope: !13397)
!13400 = !DILocation(line: 55, column: 47, scope: !13397)
!13401 = !DILocation(line: 55, column: 6, scope: !13386)
!13402 = !DILocation(line: 57, column: 2, scope: !13403)
!13403 = distinct !DILexicalBlock(scope: !13397, file: !13258, line: 55, column: 57)
!13404 = !DILocation(line: 59, column: 2, scope: !13386)
!13405 = distinct !DISubprogram(name: "k_thread_abort", scope: !3297, file: !3297, line: 188, type: !13406, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3118, retainedNodes: !13408)
!13406 = !DISubroutineType(types: !13407)
!13407 = !{null, !13373}
!13408 = !{!13409}
!13409 = !DILocalVariable(name: "thread", arg: 1, scope: !13405, file: !3297, line: 188, type: !13373)
!13410 = !DILocation(line: 0, scope: !13405)
!13411 = !DILocation(line: 197, column: 2, scope: !13412)
!13412 = distinct !DILexicalBlock(scope: !13405, file: !3297, line: 197, column: 2)
!13413 = !{i64 2155069942}
!13414 = !DILocation(line: 198, column: 2, scope: !13405)
!13415 = !DILocation(line: 199, column: 1, scope: !13405)
!13416 = distinct !DISubprogram(name: "z_current_get", scope: !3297, file: !3297, line: 173, type: !13371, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3118, retainedNodes: !2106)
!13417 = !DILocation(line: 180, column: 2, scope: !13418)
!13418 = distinct !DILexicalBlock(scope: !13416, file: !3297, line: 180, column: 2)
!13419 = !{i64 2155069874}
!13420 = !DILocation(line: 181, column: 9, scope: !13416)
!13421 = !DILocation(line: 181, column: 2, scope: !13416)
!13422 = distinct !DISubprogram(name: "z_early_memset", scope: !1905, file: !1905, line: 108, type: !13423, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1901, retainedNodes: !13425)
!13423 = !DISubroutineType(types: !13424)
!13424 = !{null, !107, !109, !232}
!13425 = !{!13426, !13427, !13428}
!13426 = !DILocalVariable(name: "dst", arg: 1, scope: !13422, file: !1905, line: 108, type: !107)
!13427 = !DILocalVariable(name: "c", arg: 2, scope: !13422, file: !1905, line: 108, type: !109)
!13428 = !DILocalVariable(name: "n", arg: 3, scope: !13422, file: !1905, line: 108, type: !232)
!13429 = !DILocation(line: 0, scope: !13422)
!13430 = !DILocation(line: 110, column: 9, scope: !13422)
!13431 = !DILocation(line: 111, column: 1, scope: !13422)
!13432 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1905, file: !1905, line: 121, type: !13433, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1901, retainedNodes: !13435)
!13433 = !DISubroutineType(types: !13434)
!13434 = !{null, !107, !13, !232}
!13435 = !{!13436, !13437, !13438}
!13436 = !DILocalVariable(name: "dst", arg: 1, scope: !13432, file: !1905, line: 121, type: !107)
!13437 = !DILocalVariable(name: "src", arg: 2, scope: !13432, file: !1905, line: 121, type: !13)
!13438 = !DILocalVariable(name: "n", arg: 3, scope: !13432, file: !1905, line: 121, type: !232)
!13439 = !DILocation(line: 0, scope: !13432)
!13440 = !DILocation(line: 123, column: 9, scope: !13432)
!13441 = !DILocation(line: 124, column: 1, scope: !13432)
!13442 = distinct !DISubprogram(name: "z_bss_zero", scope: !1905, file: !1905, line: 132, type: !3155, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1901, retainedNodes: !2106)
!13443 = !DILocation(line: 143, column: 2, scope: !13442)
!13444 = !DILocation(line: 168, column: 1, scope: !13442)
!13445 = distinct !DISubprogram(name: "z_init_cpu", scope: !1905, file: !1905, line: 372, type: !8426, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1901, retainedNodes: !13446)
!13446 = !{!13447}
!13447 = !DILocalVariable(name: "id", arg: 1, scope: !13445, file: !1905, line: 372, type: !109)
!13448 = !DILocation(line: 0, scope: !13445)
!13449 = !DILocation(line: 374, column: 2, scope: !13445)
!13450 = !DILocation(line: 375, column: 34, scope: !13445)
!13451 = !DILocation(line: 375, column: 19, scope: !13445)
!13452 = !DILocation(line: 375, column: 31, scope: !13445)
!13453 = !DILocation(line: 376, column: 24, scope: !13445)
!13454 = !DILocation(line: 376, column: 19, scope: !13445)
!13455 = !DILocation(line: 376, column: 22, scope: !13445)
!13456 = !DILocation(line: 378, column: 26, scope: !13445)
!13457 = !DILocation(line: 378, column: 4, scope: !13445)
!13458 = !DILocation(line: 378, column: 50, scope: !13445)
!13459 = !DILocation(line: 377, column: 19, scope: !13445)
!13460 = !DILocation(line: 377, column: 29, scope: !13445)
!13461 = !DILocation(line: 384, column: 1, scope: !13445)
!13462 = distinct !DISubprogram(name: "init_idle_thread", scope: !1905, file: !1905, line: 343, type: !8426, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1901, retainedNodes: !13463)
!13463 = !{!13464, !13465, !13466, !13469}
!13464 = !DILocalVariable(name: "i", arg: 1, scope: !13462, file: !1905, line: 343, type: !109)
!13465 = !DILocalVariable(name: "thread", scope: !13462, file: !1905, line: 345, type: !1997)
!13466 = !DILocalVariable(name: "stack", scope: !13462, file: !1905, line: 346, type: !13467)
!13467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13468, size: 32)
!13468 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3422, line: 44, baseType: !2115)
!13469 = !DILocalVariable(name: "tname", scope: !13462, file: !1905, line: 354, type: !285)
!13470 = !DILocation(line: 0, scope: !13462)
!13471 = !DILocation(line: 345, column: 29, scope: !13462)
!13472 = !DILocation(line: 346, column: 28, scope: !13462)
!13473 = !DILocation(line: 362, column: 37, scope: !13462)
!13474 = !DILocation(line: 362, column: 36, scope: !13462)
!13475 = !DILocation(line: 361, column: 2, scope: !13462)
!13476 = !DILocation(line: 365, column: 2, scope: !13462)
!13477 = !DILocation(line: 370, column: 1, scope: !13462)
!13478 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !145, file: !145, line: 331, type: !13479, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1901, retainedNodes: !13481)
!13479 = !DISubroutineType(types: !13480)
!13480 = !{!285, !13467}
!13481 = !{!13482}
!13482 = !DILocalVariable(name: "sym", arg: 1, scope: !13478, file: !145, line: 331, type: !13467)
!13483 = !DILocation(line: 0, scope: !13478)
!13484 = !DILocation(line: 333, column: 21, scope: !13478)
!13485 = !DILocation(line: 333, column: 2, scope: !13478)
!13486 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13487, file: !13487, line: 155, type: !13488, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1901, retainedNodes: !13490)
!13487 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13488 = !DISubroutineType(types: !13489)
!13489 = !{null, !1997}
!13490 = !{!13491}
!13491 = !DILocalVariable(name: "thread", arg: 1, scope: !13486, file: !13487, line: 155, type: !1997)
!13492 = !DILocation(line: 0, scope: !13486)
!13493 = !DILocation(line: 157, column: 15, scope: !13486)
!13494 = !DILocation(line: 157, column: 28, scope: !13486)
!13495 = !DILocation(line: 158, column: 1, scope: !13486)
!13496 = distinct !DISubprogram(name: "z_cstart", scope: !1905, file: !1905, line: 501, type: !3155, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1901, retainedNodes: !13497)
!13497 = !{!13498}
!13498 = !DILocalVariable(name: "dummy_thread", scope: !13496, file: !1905, line: 518, type: !1998)
!13499 = !DILocation(line: 507, column: 2, scope: !13496)
!13500 = !DILocation(line: 43, column: 14, scope: !13501, inlinedAt: !13505)
!13501 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !13502, file: !13502, line: 40, type: !3155, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1901, retainedNodes: !13503)
!13502 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13503 = !{!13504}
!13504 = !DILocalVariable(name: "msp", scope: !13501, file: !13502, line: 42, type: !110)
!13505 = distinct !DILocation(line: 44, column: 2, scope: !13506, inlinedAt: !13508)
!13506 = distinct !DISubprogram(name: "arch_kernel_init", scope: !13507, file: !13507, line: 42, type: !3155, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1901, retainedNodes: !2106)
!13507 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13508 = distinct !DILocation(line: 510, column: 2, scope: !13496)
!13509 = !DILocation(line: 43, column: 3, scope: !13501, inlinedAt: !13505)
!13510 = !DILocation(line: 43, column: 60, scope: !13501, inlinedAt: !13505)
!13511 = !DILocation(line: 0, scope: !13501, inlinedAt: !13505)
!13512 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !13513, file: !6486, line: 1153, type: !110)
!13513 = distinct !DISubprogram(name: "__set_MSP", scope: !6486, file: !6486, line: 1153, type: !6583, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1901, retainedNodes: !13514)
!13514 = !{!13512}
!13515 = !DILocation(line: 0, scope: !13513, inlinedAt: !13516)
!13516 = distinct !DILocation(line: 46, column: 2, scope: !13501, inlinedAt: !13505)
!13517 = !DILocation(line: 1155, column: 3, scope: !13513, inlinedAt: !13516)
!13518 = !{i64 3749717}
!13519 = !DILocation(line: 62, column: 11, scope: !13501, inlinedAt: !13505)
!13520 = !DILocation(line: 102, column: 2, scope: !13521, inlinedAt: !13522)
!13521 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !7538, file: !7538, line: 97, type: !3155, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1901, retainedNodes: !2106)
!13522 = distinct !DILocation(line: 45, column: 2, scope: !13506, inlinedAt: !13508)
!13523 = !DILocation(line: 108, column: 2, scope: !13521, inlinedAt: !13522)
!13524 = !DILocation(line: 112, column: 2, scope: !13521, inlinedAt: !13522)
!13525 = !DILocation(line: 113, column: 2, scope: !13521, inlinedAt: !13522)
!13526 = !DILocation(line: 114, column: 2, scope: !13521, inlinedAt: !13522)
!13527 = !DILocation(line: 116, column: 2, scope: !13521, inlinedAt: !13522)
!13528 = !DILocation(line: 123, column: 13, scope: !13521, inlinedAt: !13522)
!13529 = !DILocation(line: 46, column: 2, scope: !13506, inlinedAt: !13508)
!13530 = !DILocation(line: 47, column: 2, scope: !13506, inlinedAt: !13508)
!13531 = !DILocation(line: 174, column: 12, scope: !13532, inlinedAt: !13533)
!13532 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !7538, file: !7538, line: 169, type: !3155, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1901, retainedNodes: !2106)
!13533 = distinct !DILocation(line: 48, column: 2, scope: !13506, inlinedAt: !13508)
!13534 = !DILocation(line: 179, column: 12, scope: !13532, inlinedAt: !13533)
!13535 = !DILocation(line: 50, column: 2, scope: !13506, inlinedAt: !13508)
!13536 = !DILocation(line: 57, column: 2, scope: !13506, inlinedAt: !13508)
!13537 = !DILocation(line: 518, column: 2, scope: !13496)
!13538 = !DILocation(line: 518, column: 18, scope: !13496)
!13539 = !DILocation(line: 520, column: 2, scope: !13496)
!13540 = !DILocation(line: 523, column: 2, scope: !13496)
!13541 = !DILocation(line: 526, column: 2, scope: !13496)
!13542 = !DILocation(line: 527, column: 2, scope: !13496)
!13543 = !DILocation(line: 543, column: 24, scope: !13496)
!13544 = !DILocation(line: 543, column: 2, scope: !13496)
!13545 = !DILocation(line: 0, scope: !2138)
!13546 = !DILocation(line: 246, column: 15, scope: !2156)
!13547 = !DILocation(line: 246, column: 36, scope: !2155)
!13548 = !DILocation(line: 246, column: 2, scope: !2156)
!13549 = !DILocation(line: 247, column: 37, scope: !2154)
!13550 = !DILocation(line: 0, scope: !2154)
!13551 = !DILocation(line: 248, column: 19, scope: !2154)
!13552 = !DILocation(line: 248, column: 12, scope: !2154)
!13553 = !DILocation(line: 250, column: 11, scope: !13554)
!13554 = distinct !DILexicalBlock(scope: !2154, file: !1905, line: 250, column: 7)
!13555 = !DILocation(line: 250, column: 7, scope: !2154)
!13556 = !DILocation(line: 254, column: 11, scope: !13557)
!13557 = distinct !DILexicalBlock(scope: !13558, file: !1905, line: 254, column: 8)
!13558 = distinct !DILexicalBlock(scope: !13554, file: !1905, line: 250, column: 20)
!13559 = !DILocation(line: 254, column: 8, scope: !13558)
!13560 = !DILocation(line: 255, column: 9, scope: !13561)
!13561 = distinct !DILexicalBlock(scope: !13557, file: !1905, line: 254, column: 17)
!13562 = !DILocation(line: 258, column: 9, scope: !13561)
!13563 = !DILocation(line: 261, column: 28, scope: !13561)
!13564 = !DILocation(line: 261, column: 10, scope: !13561)
!13565 = !DILocation(line: 261, column: 17, scope: !13561)
!13566 = !DILocation(line: 261, column: 26, scope: !13561)
!13567 = !DILocation(line: 262, column: 4, scope: !13561)
!13568 = !DILocation(line: 263, column: 9, scope: !13558)
!13569 = !DILocation(line: 263, column: 16, scope: !13558)
!13570 = !DILocation(line: 263, column: 28, scope: !13558)
!13571 = !DILocation(line: 264, column: 3, scope: !13558)
!13572 = !DILocation(line: 246, column: 60, scope: !2155)
!13573 = distinct !{!13573, !13548, !13574}
!13574 = !DILocation(line: 265, column: 2, scope: !2156)
!13575 = !DILocation(line: 266, column: 1, scope: !2138)
!13576 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !535, file: !535, line: 1814, type: !6526, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1901, retainedNodes: !13577)
!13577 = !{!13578, !13579}
!13578 = !DILocalVariable(name: "IRQn", arg: 1, scope: !13576, file: !535, line: 1814, type: !800)
!13579 = !DILocalVariable(name: "priority", arg: 2, scope: !13576, file: !535, line: 1814, type: !110)
!13580 = !DILocation(line: 0, scope: !13576)
!13581 = !DILocation(line: 1822, column: 48, scope: !13582)
!13582 = distinct !DILexicalBlock(scope: !13583, file: !535, line: 1821, column: 3)
!13583 = distinct !DILexicalBlock(scope: !13576, file: !535, line: 1816, column: 7)
!13584 = !DILocation(line: 1822, column: 32, scope: !13582)
!13585 = !DILocation(line: 1822, column: 40, scope: !13582)
!13586 = !DILocation(line: 1822, column: 5, scope: !13582)
!13587 = !DILocation(line: 1822, column: 46, scope: !13582)
!13588 = !DILocation(line: 1824, column: 1, scope: !13576)
!13589 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !13507, file: !13507, line: 32, type: !3155, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2106)
!13590 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !13591, file: !13591, line: 215, type: !13488, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1901, retainedNodes: !13592)
!13591 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13592 = !{!13593}
!13593 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !13590, file: !13591, line: 215, type: !1997)
!13594 = !DILocation(line: 0, scope: !13590)
!13595 = !DILocation(line: 217, column: 21, scope: !13590)
!13596 = !DILocation(line: 217, column: 34, scope: !13590)
!13597 = !DILocation(line: 221, column: 21, scope: !13590)
!13598 = !DILocation(line: 221, column: 34, scope: !13590)
!13599 = !DILocation(line: 223, column: 27, scope: !13590)
!13600 = !DILocation(line: 223, column: 33, scope: !13590)
!13601 = !DILocation(line: 224, column: 27, scope: !13590)
!13602 = !DILocation(line: 224, column: 32, scope: !13590)
!13603 = !DILocation(line: 232, column: 16, scope: !13590)
!13604 = !DILocation(line: 232, column: 30, scope: !13590)
!13605 = !DILocation(line: 239, column: 24, scope: !13590)
!13606 = !DILocation(line: 240, column: 1, scope: !13590)
!13607 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1905, file: !1905, line: 399, type: !13608, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1901, retainedNodes: !13610)
!13608 = !DISubroutineType(types: !13609)
!13609 = !{!285}
!13610 = !{!13611}
!13611 = !DILocalVariable(name: "stack_ptr", scope: !13607, file: !1905, line: 401, type: !285)
!13612 = !DILocation(line: 404, column: 2, scope: !13607)
!13613 = !DILocation(line: 416, column: 24, scope: !13607)
!13614 = !DILocation(line: 418, column: 14, scope: !13607)
!13615 = !DILocation(line: 0, scope: !13607)
!13616 = !DILocation(line: 423, column: 2, scope: !13607)
!13617 = !DILocation(line: 424, column: 2, scope: !13607)
!13618 = !DILocation(line: 426, column: 2, scope: !13607)
!13619 = !DILocation(line: 428, column: 2, scope: !13607)
!13620 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1905, file: !1905, line: 432, type: !13621, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1901, retainedNodes: !13623)
!13621 = !DISubroutineType(types: !13622)
!13622 = !{null, !285}
!13623 = !{!13624}
!13624 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !13620, file: !1905, line: 432, type: !285)
!13625 = !DILocation(line: 0, scope: !13620)
!13626 = !DILocation(line: 435, column: 2, scope: !13620)
!13627 = !DILocation(line: 445, column: 2, scope: !13620)
!13628 = distinct !DISubprogram(name: "bg_thread_main", scope: !1905, file: !1905, line: 277, type: !3267, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1901, retainedNodes: !13629)
!13629 = !{!13630, !13631, !13632}
!13630 = !DILocalVariable(name: "unused1", arg: 1, scope: !13628, file: !1905, line: 277, type: !107)
!13631 = !DILocalVariable(name: "unused2", arg: 2, scope: !13628, file: !1905, line: 277, type: !107)
!13632 = !DILocalVariable(name: "unused3", arg: 3, scope: !13628, file: !1905, line: 277, type: !107)
!13633 = !DILocation(line: 0, scope: !13628)
!13634 = !DILocation(line: 291, column: 20, scope: !13628)
!13635 = !DILocation(line: 293, column: 2, scope: !13628)
!13636 = !DILocation(line: 297, column: 2, scope: !13628)
!13637 = !DILocation(line: 305, column: 2, scope: !13628)
!13638 = !DILocation(line: 307, column: 2, scope: !13628)
!13639 = !DILocation(line: 330, column: 8, scope: !13628)
!13640 = !DILocation(line: 333, column: 34, scope: !13628)
!13641 = !DILocation(line: 339, column: 1, scope: !13628)
!13642 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2169, file: !2169, line: 45, type: !13643, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2276, retainedNodes: !13651)
!13643 = !DISubroutineType(types: !13644)
!13644 = !{null, !13645, !107}
!13645 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !118, line: 103, baseType: !13646)
!13646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13647, size: 32)
!13647 = !DISubroutineType(types: !13648)
!13648 = !{null, !13649, !107}
!13649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13650, size: 32)
!13650 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2174)
!13651 = !{!13652, !13653}
!13652 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13642, file: !2169, line: 45, type: !13645)
!13653 = !DILocalVariable(name: "user_data", arg: 2, scope: !13642, file: !2169, line: 45, type: !107)
!13654 = !DILocation(line: 0, scope: !13642)
!13655 = !DILocation(line: 71, column: 1, scope: !13642)
!13656 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2169, file: !2169, line: 73, type: !13643, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2276, retainedNodes: !13657)
!13657 = !{!13658, !13659}
!13658 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13656, file: !2169, line: 73, type: !13645)
!13659 = !DILocalVariable(name: "user_data", arg: 2, scope: !13656, file: !2169, line: 73, type: !107)
!13660 = !DILocation(line: 0, scope: !13656)
!13661 = !DILocation(line: 95, column: 1, scope: !13656)
!13662 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2169, file: !2169, line: 97, type: !7539, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2276, retainedNodes: !2106)
!13663 = !DILocation(line: 1031, column: 3, scope: !13664, inlinedAt: !13667)
!13664 = distinct !DISubprogram(name: "__get_IPSR", scope: !6486, file: !6486, line: 1027, type: !6573, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2276, retainedNodes: !13665)
!13665 = !{!13666}
!13666 = !DILocalVariable(name: "result", scope: !13664, file: !6486, line: 1029, type: !110)
!13667 = distinct !DILocation(line: 48, column: 10, scope: !13668, inlinedAt: !13669)
!13668 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7538, file: !7538, line: 46, type: !7539, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2276, retainedNodes: !2106)
!13669 = distinct !DILocation(line: 99, column: 9, scope: !13662)
!13670 = !{i64 3755368}
!13671 = !DILocation(line: 0, scope: !13664, inlinedAt: !13667)
!13672 = !DILocation(line: 48, column: 9, scope: !13668, inlinedAt: !13669)
!13673 = !DILocation(line: 99, column: 2, scope: !13662)
!13674 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2169, file: !2169, line: 106, type: !3155, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2276, retainedNodes: !2106)
!13675 = !DILocation(line: 108, column: 2, scope: !13674)
!13676 = !DILocation(line: 108, column: 17, scope: !13674)
!13677 = !DILocation(line: 108, column: 30, scope: !13674)
!13678 = !DILocation(line: 109, column: 1, scope: !13674)
!13679 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2169, file: !2169, line: 116, type: !3155, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2276, retainedNodes: !2106)
!13680 = !DILocation(line: 118, column: 2, scope: !13679)
!13681 = !DILocation(line: 118, column: 17, scope: !13679)
!13682 = !DILocation(line: 118, column: 30, scope: !13679)
!13683 = !DILocation(line: 119, column: 1, scope: !13679)
!13684 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2169, file: !2169, line: 126, type: !7539, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2276, retainedNodes: !2106)
!13685 = !DILocation(line: 128, column: 10, scope: !13684)
!13686 = !DILocation(line: 128, column: 25, scope: !13684)
!13687 = !DILocation(line: 128, column: 38, scope: !13684)
!13688 = !DILocation(line: 128, column: 53, scope: !13684)
!13689 = !DILocation(line: 128, column: 2, scope: !13684)
!13690 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2169, file: !2169, line: 187, type: !13691, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2276, retainedNodes: !13693)
!13691 = !DISubroutineType(types: !13692)
!13692 = !{!109, !2173, !279}
!13693 = !{!13694, !13695}
!13694 = !DILocalVariable(name: "thread", arg: 1, scope: !13690, file: !2169, line: 187, type: !2173)
!13695 = !DILocalVariable(name: "value", arg: 2, scope: !13690, file: !2169, line: 187, type: !279)
!13696 = !DILocation(line: 0, scope: !13690)
!13697 = !DILocation(line: 190, column: 13, scope: !13698)
!13698 = distinct !DILexicalBlock(scope: !13690, file: !2169, line: 190, column: 6)
!13699 = !DILocation(line: 190, column: 6, scope: !13690)
!13700 = !DILocation(line: 194, column: 10, scope: !13690)
!13701 = !DILocation(line: 194, column: 2, scope: !13690)
!13702 = !DILocation(line: 195, column: 2, scope: !13690)
!13703 = !DILocation(line: 195, column: 47, scope: !13690)
!13704 = !DILocation(line: 199, column: 2, scope: !13690)
!13705 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2169, file: !2169, line: 238, type: !13706, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2276, retainedNodes: !13708)
!13706 = !DISubroutineType(types: !13707)
!13707 = !{!279, !2173}
!13708 = !{!13709}
!13709 = !DILocalVariable(name: "thread", arg: 1, scope: !13705, file: !2169, line: 238, type: !2173)
!13710 = !DILocation(line: 0, scope: !13705)
!13711 = !DILocation(line: 241, column: 23, scope: !13705)
!13712 = !DILocation(line: 241, column: 2, scope: !13705)
!13713 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2169, file: !2169, line: 248, type: !13714, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2276, retainedNodes: !13716)
!13714 = !DISubroutineType(types: !13715)
!13715 = !{!109, !2172, !285, !232}
!13716 = !{!13717, !13718, !13719}
!13717 = !DILocalVariable(name: "thread", arg: 1, scope: !13713, file: !2169, line: 248, type: !2172)
!13718 = !DILocalVariable(name: "buf", arg: 2, scope: !13713, file: !2169, line: 248, type: !285)
!13719 = !DILocalVariable(name: "size", arg: 3, scope: !13713, file: !2169, line: 248, type: !232)
!13720 = !DILocation(line: 0, scope: !13713)
!13721 = !DILocation(line: 251, column: 15, scope: !13713)
!13722 = !DILocation(line: 251, column: 2, scope: !13713)
!13723 = !DILocation(line: 252, column: 2, scope: !13713)
!13724 = !DILocation(line: 0, scope: !2168)
!13725 = !DILocation(line: 281, column: 11, scope: !13726)
!13726 = distinct !DILexicalBlock(scope: !2168, file: !2169, line: 281, column: 6)
!13727 = !DILocation(line: 281, column: 20, scope: !13726)
!13728 = !DILocation(line: 275, column: 45, scope: !2168)
!13729 = !DILocation(line: 285, column: 10, scope: !2168)
!13730 = !DILocation(line: 0, scope: !2292)
!13731 = !DILocation(line: 293, column: 39, scope: !13732)
!13732 = distinct !DILexicalBlock(scope: !2292, file: !2169, line: 293, column: 2)
!13733 = !DILocation(line: 293, column: 2, scope: !2292)
!13734 = !DILocation(line: 273, column: 14, scope: !2168)
!13735 = !DILocation(line: 309, column: 2, scope: !2168)
!13736 = !DILocation(line: 309, column: 11, scope: !2168)
!13737 = !DILocation(line: 311, column: 2, scope: !2168)
!13738 = !DILocation(line: 293, column: 26, scope: !13732)
!13739 = !DILocation(line: 294, column: 9, scope: !13740)
!13740 = distinct !DILexicalBlock(scope: !13732, file: !2169, line: 293, column: 54)
!13741 = !DILocation(line: 295, column: 21, scope: !13742)
!13742 = distinct !DILexicalBlock(scope: !13740, file: !2169, line: 295, column: 7)
!13743 = !DILocation(line: 295, column: 28, scope: !13742)
!13744 = !DILocation(line: 295, column: 7, scope: !13740)
!13745 = !DILocation(line: 299, column: 25, scope: !13740)
!13746 = !DILocation(line: 299, column: 41, scope: !13740)
!13747 = !DILocation(line: 300, column: 7, scope: !13740)
!13748 = !DILocation(line: 300, column: 26, scope: !13740)
!13749 = !DILocation(line: 299, column: 10, scope: !13740)
!13750 = !DILocation(line: 299, column: 7, scope: !13740)
!13751 = !DILocation(line: 302, column: 16, scope: !13740)
!13752 = !DILocation(line: 304, column: 20, scope: !13753)
!13753 = distinct !DILexicalBlock(scope: !13740, file: !2169, line: 304, column: 7)
!13754 = !DILocation(line: 304, column: 7, scope: !13740)
!13755 = !DILocation(line: 305, column: 26, scope: !13756)
!13756 = distinct !DILexicalBlock(scope: !13753, file: !2169, line: 304, column: 26)
!13757 = !DILocation(line: 305, column: 42, scope: !13756)
!13758 = !DILocation(line: 305, column: 11, scope: !13756)
!13759 = !DILocation(line: 305, column: 8, scope: !13756)
!13760 = !DILocation(line: 306, column: 3, scope: !13756)
!13761 = !DILocation(line: 293, column: 50, scope: !13732)
!13762 = !DILocation(line: 312, column: 1, scope: !2168)
!13763 = distinct !DISubprogram(name: "copy_bytes", scope: !2169, file: !2169, line: 261, type: !13764, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2276, retainedNodes: !13766)
!13764 = !DISubroutineType(types: !13765)
!13765 = !{!232, !285, !232, !279, !232}
!13766 = !{!13767, !13768, !13769, !13770, !13771}
!13767 = !DILocalVariable(name: "dest", arg: 1, scope: !13763, file: !2169, line: 261, type: !285)
!13768 = !DILocalVariable(name: "dest_size", arg: 2, scope: !13763, file: !2169, line: 261, type: !232)
!13769 = !DILocalVariable(name: "src", arg: 3, scope: !13763, file: !2169, line: 261, type: !279)
!13770 = !DILocalVariable(name: "src_size", arg: 4, scope: !13763, file: !2169, line: 261, type: !232)
!13771 = !DILocalVariable(name: "bytes_to_copy", scope: !13763, file: !2169, line: 263, type: !232)
!13772 = !DILocation(line: 0, scope: !13763)
!13773 = !DILocation(line: 265, column: 18, scope: !13763)
!13774 = !DILocation(line: 266, column: 2, scope: !13763)
!13775 = !DILocation(line: 268, column: 2, scope: !13763)
!13776 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2169, file: !2169, line: 383, type: !13777, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2276, retainedNodes: !13779)
!13777 = !DISubroutineType(types: !13778)
!13778 = !{null, !2173}
!13779 = !{!13780}
!13780 = !DILocalVariable(name: "thread", arg: 1, scope: !13776, file: !2169, line: 383, type: !2173)
!13781 = !DILocation(line: 0, scope: !13776)
!13782 = !DILocation(line: 387, column: 2, scope: !13776)
!13783 = !DILocation(line: 388, column: 1, scope: !13776)
!13784 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2169, file: !2169, line: 528, type: !13785, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2276, retainedNodes: !13792)
!13785 = !DISubroutineType(types: !13786)
!13786 = !{!285, !2173, !13787, !232, !3423, !107, !107, !107, !109, !110, !279}
!13787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13788, size: 32)
!13788 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3422, line: 44, baseType: !13789)
!13789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !145, line: 47, size: 8, elements: !13790)
!13790 = !{!13791}
!13791 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13789, file: !145, line: 48, baseType: !148, size: 8)
!13792 = !{!13793, !13794, !13795, !13796, !13797, !13798, !13799, !13800, !13801, !13802, !13803}
!13793 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13784, file: !2169, line: 528, type: !2173)
!13794 = !DILocalVariable(name: "stack", arg: 2, scope: !13784, file: !2169, line: 529, type: !13787)
!13795 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13784, file: !2169, line: 529, type: !232)
!13796 = !DILocalVariable(name: "entry", arg: 4, scope: !13784, file: !2169, line: 530, type: !3423)
!13797 = !DILocalVariable(name: "p1", arg: 5, scope: !13784, file: !2169, line: 531, type: !107)
!13798 = !DILocalVariable(name: "p2", arg: 6, scope: !13784, file: !2169, line: 531, type: !107)
!13799 = !DILocalVariable(name: "p3", arg: 7, scope: !13784, file: !2169, line: 531, type: !107)
!13800 = !DILocalVariable(name: "prio", arg: 8, scope: !13784, file: !2169, line: 532, type: !109)
!13801 = !DILocalVariable(name: "options", arg: 9, scope: !13784, file: !2169, line: 532, type: !110)
!13802 = !DILocalVariable(name: "name", arg: 10, scope: !13784, file: !2169, line: 532, type: !279)
!13803 = !DILocalVariable(name: "stack_ptr", scope: !13784, file: !2169, line: 534, type: !285)
!13804 = !DILocation(line: 0, scope: !13784)
!13805 = !DILocation(line: 536, column: 2, scope: !13806)
!13806 = distinct !DILexicalBlock(scope: !13807, file: !2169, line: 536, column: 2)
!13807 = distinct !DILexicalBlock(scope: !13808, file: !2169, line: 536, column: 2)
!13808 = distinct !DILexicalBlock(scope: !13784, file: !2169, line: 536, column: 2)
!13809 = !DILocation(line: 536, column: 2, scope: !13810)
!13810 = distinct !DILexicalBlock(scope: !13806, file: !2169, line: 536, column: 2)
!13811 = !DILocation(line: 550, column: 28, scope: !13784)
!13812 = !DILocation(line: 550, column: 2, scope: !13784)
!13813 = !DILocation(line: 553, column: 34, scope: !13784)
!13814 = !DILocation(line: 553, column: 2, scope: !13784)
!13815 = !DILocation(line: 554, column: 14, scope: !13784)
!13816 = !DILocation(line: 564, column: 2, scope: !13784)
!13817 = !DILocation(line: 567, column: 14, scope: !13784)
!13818 = !DILocation(line: 567, column: 24, scope: !13784)
!13819 = !DILocation(line: 594, column: 11, scope: !13820)
!13820 = distinct !DILexicalBlock(scope: !13784, file: !2169, line: 594, column: 6)
!13821 = !DILocation(line: 0, scope: !13820)
!13822 = !DILocation(line: 594, column: 6, scope: !13784)
!13823 = !DILocation(line: 595, column: 3, scope: !13824)
!13824 = distinct !DILexicalBlock(scope: !13820, file: !2169, line: 594, column: 20)
!13825 = !DILocation(line: 598, column: 3, scope: !13824)
!13826 = !DILocation(line: 598, column: 52, scope: !13824)
!13827 = !DILocation(line: 599, column: 2, scope: !13824)
!13828 = !DILocation(line: 600, column: 23, scope: !13829)
!13829 = distinct !DILexicalBlock(scope: !13820, file: !2169, line: 599, column: 9)
!13830 = !DILocation(line: 612, column: 7, scope: !13831)
!13831 = distinct !DILexicalBlock(scope: !13784, file: !2169, line: 612, column: 6)
!13832 = !DILocation(line: 612, column: 6, scope: !13784)
!13833 = !DILocation(line: 627, column: 40, scope: !13784)
!13834 = !DILocation(line: 637, column: 2, scope: !13784)
!13835 = !DILocation(line: 613, column: 15, scope: !13836)
!13836 = distinct !DILexicalBlock(scope: !13831, file: !2169, line: 612, column: 17)
!13837 = !DILocation(line: 613, column: 29, scope: !13836)
!13838 = !DILocation(line: 638, column: 1, scope: !13784)
!13839 = distinct !DISubprogram(name: "z_is_idle_thread_entry", scope: !13487, file: !13487, line: 78, type: !13840, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2276, retainedNodes: !13842)
!13840 = !DISubroutineType(types: !13841)
!13841 = !{!347, !107}
!13842 = !{!13843}
!13843 = !DILocalVariable(name: "entry_point", arg: 1, scope: !13839, file: !13487, line: 78, type: !107)
!13844 = !DILocation(line: 0, scope: !13839)
!13845 = !DILocation(line: 80, column: 21, scope: !13839)
!13846 = !DILocation(line: 80, column: 2, scope: !13839)
!13847 = distinct !DISubprogram(name: "z_waitq_init", scope: !13848, file: !13848, line: 47, type: !13849, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2276, retainedNodes: !13851)
!13848 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13849 = !DISubroutineType(types: !13850)
!13850 = !{null, !2204}
!13851 = !{!13852}
!13852 = !DILocalVariable(name: "w", arg: 1, scope: !13847, file: !13848, line: 47, type: !2204)
!13853 = !DILocation(line: 0, scope: !13847)
!13854 = !DILocation(line: 49, column: 21, scope: !13847)
!13855 = !DILocation(line: 49, column: 2, scope: !13847)
!13856 = !DILocation(line: 50, column: 1, scope: !13847)
!13857 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2169, file: !2169, line: 791, type: !13858, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2276, retainedNodes: !13861)
!13858 = !DISubroutineType(types: !13859)
!13859 = !{null, !13860, !109, !110, !32}
!13860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2177, size: 32)
!13861 = !{!13862, !13863, !13864, !13865}
!13862 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13857, file: !2169, line: 791, type: !13860)
!13863 = !DILocalVariable(name: "priority", arg: 2, scope: !13857, file: !2169, line: 791, type: !109)
!13864 = !DILocalVariable(name: "initial_state", arg: 3, scope: !13857, file: !2169, line: 792, type: !110)
!13865 = !DILocalVariable(name: "options", arg: 4, scope: !13857, file: !2169, line: 792, type: !32)
!13866 = !DILocation(line: 0, scope: !13857)
!13867 = !DILocation(line: 795, column: 15, scope: !13857)
!13868 = !DILocation(line: 795, column: 25, scope: !13857)
!13869 = !DILocation(line: 796, column: 30, scope: !13857)
!13870 = !DILocation(line: 796, column: 15, scope: !13857)
!13871 = !DILocation(line: 796, column: 28, scope: !13857)
!13872 = !DILocation(line: 797, column: 30, scope: !13857)
!13873 = !DILocation(line: 797, column: 15, scope: !13857)
!13874 = !DILocation(line: 797, column: 28, scope: !13857)
!13875 = !DILocation(line: 799, column: 22, scope: !13857)
!13876 = !DILocation(line: 799, column: 15, scope: !13857)
!13877 = !DILocation(line: 799, column: 20, scope: !13857)
!13878 = !DILocation(line: 801, column: 15, scope: !13857)
!13879 = !DILocation(line: 801, column: 28, scope: !13857)
!13880 = !DILocation(line: 814, column: 2, scope: !13857)
!13881 = !DILocation(line: 815, column: 1, scope: !13857)
!13882 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2169, file: !2169, line: 449, type: !13883, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2276, retainedNodes: !13885)
!13883 = !DISubroutineType(types: !13884)
!13884 = !{!285, !2173, !13787, !232}
!13885 = !{!13886, !13887, !13888, !13889, !13890, !13891, !13892, !13893}
!13886 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13882, file: !2169, line: 449, type: !2173)
!13887 = !DILocalVariable(name: "stack", arg: 2, scope: !13882, file: !2169, line: 450, type: !13787)
!13888 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13882, file: !2169, line: 450, type: !232)
!13889 = !DILocalVariable(name: "stack_obj_size", scope: !13882, file: !2169, line: 452, type: !232)
!13890 = !DILocalVariable(name: "stack_buf_size", scope: !13882, file: !2169, line: 452, type: !232)
!13891 = !DILocalVariable(name: "stack_ptr", scope: !13882, file: !2169, line: 453, type: !285)
!13892 = !DILocalVariable(name: "stack_buf_start", scope: !13882, file: !2169, line: 453, type: !285)
!13893 = !DILocalVariable(name: "delta", scope: !13882, file: !2169, line: 454, type: !232)
!13894 = !DILocation(line: 0, scope: !13882)
!13895 = !DILocation(line: 465, column: 20, scope: !13896)
!13896 = distinct !DILexicalBlock(scope: !13882, file: !2169, line: 463, column: 2)
!13897 = !DILocation(line: 466, column: 21, scope: !13896)
!13898 = !DILocation(line: 473, column: 28, scope: !13882)
!13899 = !DILocation(line: 514, column: 33, scope: !13882)
!13900 = !DILocation(line: 514, column: 25, scope: !13882)
!13901 = !DILocation(line: 514, column: 31, scope: !13882)
!13902 = !DILocation(line: 515, column: 25, scope: !13882)
!13903 = !DILocation(line: 515, column: 30, scope: !13882)
!13904 = !DILocation(line: 516, column: 25, scope: !13882)
!13905 = !DILocation(line: 516, column: 31, scope: !13882)
!13906 = !DILocation(line: 520, column: 2, scope: !13882)
!13907 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !145, file: !145, line: 331, type: !13908, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2276, retainedNodes: !13910)
!13908 = !DISubroutineType(types: !13909)
!13909 = !{!285, !13787}
!13910 = !{!13911}
!13911 = !DILocalVariable(name: "sym", arg: 1, scope: !13907, file: !145, line: 331, type: !13787)
!13912 = !DILocation(line: 0, scope: !13907)
!13913 = !DILocation(line: 333, column: 21, scope: !13907)
!13914 = !DILocation(line: 333, column: 2, scope: !13907)
!13915 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !13916, file: !13916, line: 40, type: !13917, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2276, retainedNodes: !13919)
!13916 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13917 = !DISubroutineType(types: !13918)
!13918 = !{null, !13860}
!13919 = !{!13920}
!13920 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13915, file: !13916, line: 40, type: !13860)
!13921 = !DILocation(line: 0, scope: !13915)
!13922 = !DILocation(line: 42, column: 31, scope: !13915)
!13923 = !DILocation(line: 42, column: 2, scope: !13915)
!13924 = !DILocation(line: 43, column: 1, scope: !13915)
!13925 = distinct !DISubprogram(name: "z_init_timeout", scope: !13916, file: !13916, line: 25, type: !2230, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2276, retainedNodes: !13926)
!13926 = !{!13927}
!13927 = !DILocalVariable(name: "to", arg: 1, scope: !13925, file: !13916, line: 25, type: !2232)
!13928 = !DILocation(line: 0, scope: !13925)
!13929 = !DILocation(line: 27, column: 22, scope: !13925)
!13930 = !DILocation(line: 27, column: 2, scope: !13925)
!13931 = !DILocation(line: 28, column: 1, scope: !13925)
!13932 = distinct !DISubprogram(name: "sys_dnode_init", scope: !127, file: !127, line: 211, type: !13933, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2276, retainedNodes: !13935)
!13933 = !DISubroutineType(types: !13934)
!13934 = !{null, !2279}
!13935 = !{!13936}
!13936 = !DILocalVariable(name: "node", arg: 1, scope: !13932, file: !127, line: 211, type: !2279)
!13937 = !DILocation(line: 0, scope: !13932)
!13938 = !DILocation(line: 213, column: 8, scope: !13932)
!13939 = !DILocation(line: 213, column: 13, scope: !13932)
!13940 = !DILocation(line: 214, column: 8, scope: !13932)
!13941 = !DILocation(line: 214, column: 13, scope: !13932)
!13942 = !DILocation(line: 215, column: 1, scope: !13932)
!13943 = distinct !DISubprogram(name: "sys_dlist_init", scope: !127, file: !127, line: 197, type: !13944, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2276, retainedNodes: !13947)
!13944 = !DISubroutineType(types: !13945)
!13945 = !{null, !13946}
!13946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2209, size: 32)
!13947 = !{!13948}
!13948 = !DILocalVariable(name: "list", arg: 1, scope: !13943, file: !127, line: 197, type: !13946)
!13949 = !DILocation(line: 0, scope: !13943)
!13950 = !DILocation(line: 199, column: 8, scope: !13943)
!13951 = !DILocation(line: 199, column: 13, scope: !13943)
!13952 = !DILocation(line: 200, column: 8, scope: !13943)
!13953 = !DILocation(line: 200, column: 13, scope: !13943)
!13954 = !DILocation(line: 201, column: 1, scope: !13943)
!13955 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2169, file: !2169, line: 641, type: !13956, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2276, retainedNodes: !13962)
!13956 = !DISubroutineType(types: !13957)
!13957 = !{!2172, !2173, !13787, !232, !3423, !107, !107, !107, !109, !110, !13958}
!13958 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !13959)
!13959 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !13960)
!13960 = !{!13961}
!13961 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13959, file: !104, line: 66, baseType: !103, size: 64)
!13962 = !{!13963, !13964, !13965, !13966, !13967, !13968, !13969, !13970, !13971, !13972}
!13963 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13955, file: !2169, line: 641, type: !2173)
!13964 = !DILocalVariable(name: "stack", arg: 2, scope: !13955, file: !2169, line: 642, type: !13787)
!13965 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13955, file: !2169, line: 643, type: !232)
!13966 = !DILocalVariable(name: "entry", arg: 4, scope: !13955, file: !2169, line: 643, type: !3423)
!13967 = !DILocalVariable(name: "p1", arg: 5, scope: !13955, file: !2169, line: 644, type: !107)
!13968 = !DILocalVariable(name: "p2", arg: 6, scope: !13955, file: !2169, line: 644, type: !107)
!13969 = !DILocalVariable(name: "p3", arg: 7, scope: !13955, file: !2169, line: 644, type: !107)
!13970 = !DILocalVariable(name: "prio", arg: 8, scope: !13955, file: !2169, line: 645, type: !109)
!13971 = !DILocalVariable(name: "options", arg: 9, scope: !13955, file: !2169, line: 645, type: !110)
!13972 = !DILocalVariable(name: "delay", arg: 10, scope: !13955, file: !2169, line: 645, type: !13958)
!13973 = !DILocation(line: 0, scope: !13955)
!13974 = !DILocation(line: 1031, column: 3, scope: !13664, inlinedAt: !13975)
!13975 = distinct !DILocation(line: 48, column: 10, scope: !13668, inlinedAt: !13976)
!13976 = distinct !DILocation(line: 647, column: 2, scope: !13977)
!13977 = distinct !DILexicalBlock(scope: !13978, file: !2169, line: 647, column: 2)
!13978 = distinct !DILexicalBlock(scope: !13955, file: !2169, line: 647, column: 2)
!13979 = !DILocation(line: 0, scope: !13664, inlinedAt: !13975)
!13980 = !DILocation(line: 48, column: 9, scope: !13668, inlinedAt: !13976)
!13981 = !DILocation(line: 647, column: 2, scope: !13978)
!13982 = !DILocation(line: 647, column: 2, scope: !13983)
!13983 = distinct !DILexicalBlock(scope: !13977, file: !2169, line: 647, column: 2)
!13984 = !DILocation(line: 649, column: 2, scope: !13955)
!13985 = !DILocation(line: 652, column: 7, scope: !13986)
!13986 = distinct !DILexicalBlock(scope: !13955, file: !2169, line: 652, column: 6)
!13987 = !DILocation(line: 652, column: 6, scope: !13955)
!13988 = !DILocation(line: 653, column: 3, scope: !13989)
!13989 = distinct !DILexicalBlock(scope: !13986, file: !2169, line: 652, column: 39)
!13990 = !DILocation(line: 654, column: 2, scope: !13989)
!13991 = !DILocation(line: 656, column: 2, scope: !13955)
!13992 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2169, file: !2169, line: 401, type: !13993, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2276, retainedNodes: !13995)
!13993 = !DISubroutineType(types: !13994)
!13994 = !{null, !2173, !13958}
!13995 = !{!13996, !13997}
!13996 = !DILocalVariable(name: "thread", arg: 1, scope: !13992, file: !2169, line: 401, type: !2173)
!13997 = !DILocalVariable(name: "delay", arg: 2, scope: !13992, file: !2169, line: 401, type: !13958)
!13998 = !DILocation(line: 0, scope: !13992)
!13999 = !DILocation(line: 404, column: 6, scope: !14000)
!14000 = distinct !DILexicalBlock(scope: !13992, file: !2169, line: 404, column: 6)
!14001 = !DILocation(line: 404, column: 6, scope: !13992)
!14002 = !DILocation(line: 405, column: 3, scope: !14003)
!14003 = distinct !DILexicalBlock(scope: !14000, file: !2169, line: 404, column: 38)
!14004 = !DILocation(line: 406, column: 2, scope: !14003)
!14005 = !DILocation(line: 407, column: 3, scope: !14006)
!14006 = distinct !DILexicalBlock(scope: !14000, file: !2169, line: 406, column: 9)
!14007 = !DILocation(line: 413, column: 1, scope: !13992)
!14008 = distinct !DISubprogram(name: "k_thread_start", scope: !3297, file: !3297, line: 205, type: !14009, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2276, retainedNodes: !14011)
!14009 = !DISubroutineType(types: !14010)
!14010 = !{null, !2172}
!14011 = !{!14012}
!14012 = !DILocalVariable(name: "thread", arg: 1, scope: !14008, file: !3297, line: 205, type: !2172)
!14013 = !DILocation(line: 0, scope: !14008)
!14014 = !DILocation(line: 214, column: 2, scope: !14015)
!14015 = distinct !DILexicalBlock(scope: !14008, file: !3297, line: 214, column: 2)
!14016 = !{i64 2155095166}
!14017 = !DILocation(line: 215, column: 2, scope: !14008)
!14018 = !DILocation(line: 216, column: 1, scope: !14008)
!14019 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13916, file: !13916, line: 47, type: !13993, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2276, retainedNodes: !14020)
!14020 = !{!14021, !14022}
!14021 = !DILocalVariable(name: "thread", arg: 1, scope: !14019, file: !13916, line: 47, type: !2173)
!14022 = !DILocalVariable(name: "ticks", arg: 2, scope: !14019, file: !13916, line: 47, type: !13958)
!14023 = !DILocation(line: 0, scope: !14019)
!14024 = !DILocation(line: 49, column: 30, scope: !14019)
!14025 = !DILocation(line: 49, column: 2, scope: !14019)
!14026 = !DILocation(line: 50, column: 1, scope: !14019)
!14027 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2169, file: !2169, line: 748, type: !3155, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2276, retainedNodes: !14028)
!14028 = !{!14029, !14047}
!14029 = !DILocalVariable(name: "thread_data", scope: !14030, file: !2169, line: 750, type: !14031)
!14030 = distinct !DILexicalBlock(scope: !14027, file: !2169, line: 750, column: 2)
!14031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14032, size: 32)
!14032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !118, line: 620, size: 384, elements: !14033)
!14033 = !{!14034, !14035, !14036, !14037, !14038, !14039, !14040, !14041, !14042, !14043, !14044, !14046}
!14034 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !14032, file: !118, line: 621, baseType: !2173, size: 32)
!14035 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !14032, file: !118, line: 622, baseType: !13787, size: 32, offset: 32)
!14036 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !14032, file: !118, line: 623, baseType: !32, size: 32, offset: 64)
!14037 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !14032, file: !118, line: 624, baseType: !3423, size: 32, offset: 96)
!14038 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !14032, file: !118, line: 625, baseType: !107, size: 32, offset: 128)
!14039 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !14032, file: !118, line: 626, baseType: !107, size: 32, offset: 160)
!14040 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !14032, file: !118, line: 627, baseType: !107, size: 32, offset: 192)
!14041 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !14032, file: !118, line: 628, baseType: !109, size: 32, offset: 224)
!14042 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !14032, file: !118, line: 629, baseType: !110, size: 32, offset: 256)
!14043 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !14032, file: !118, line: 630, baseType: !774, size: 32, offset: 288)
!14044 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !14032, file: !118, line: 631, baseType: !14045, size: 32, offset: 320)
!14045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3155, size: 32)
!14046 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !14032, file: !118, line: 632, baseType: !279, size: 32, offset: 352)
!14047 = !DILocalVariable(name: "thread_data", scope: !14048, file: !2169, line: 781, type: !14031)
!14048 = distinct !DILexicalBlock(scope: !14027, file: !2169, line: 781, column: 2)
!14049 = !DILocation(line: 0, scope: !14030)
!14050 = !DILocation(line: 750, column: 2, scope: !14051)
!14051 = distinct !DILexicalBlock(scope: !14052, file: !2169, line: 750, column: 2)
!14052 = distinct !DILexicalBlock(scope: !14053, file: !2169, line: 750, column: 2)
!14053 = distinct !DILexicalBlock(scope: !14030, file: !2169, line: 750, column: 2)
!14054 = !DILocation(line: 750, column: 2, scope: !14055)
!14055 = distinct !DILexicalBlock(scope: !14056, file: !2169, line: 750, column: 2)
!14056 = distinct !DILexicalBlock(scope: !14051, file: !2169, line: 750, column: 2)
!14057 = !DILocation(line: 750, column: 2, scope: !14052)
!14058 = !DILocation(line: 750, column: 2, scope: !14030)
!14059 = !DILocation(line: 780, column: 2, scope: !14027)
!14060 = !DILocation(line: 0, scope: !14048)
!14061 = !DILocation(line: 781, column: 2, scope: !14062)
!14062 = distinct !DILexicalBlock(scope: !14063, file: !2169, line: 781, column: 2)
!14063 = distinct !DILexicalBlock(scope: !14064, file: !2169, line: 781, column: 2)
!14064 = distinct !DILexicalBlock(scope: !14048, file: !2169, line: 781, column: 2)
!14065 = !DILocation(line: 752, column: 17, scope: !14066)
!14066 = distinct !DILexicalBlock(scope: !14053, file: !2169, line: 750, column: 38)
!14067 = !DILocation(line: 753, column: 17, scope: !14066)
!14068 = !DILocation(line: 754, column: 17, scope: !14066)
!14069 = !DILocation(line: 755, column: 17, scope: !14066)
!14070 = !DILocation(line: 756, column: 17, scope: !14066)
!14071 = !DILocation(line: 757, column: 17, scope: !14066)
!14072 = !DILocation(line: 758, column: 17, scope: !14066)
!14073 = !DILocation(line: 759, column: 17, scope: !14066)
!14074 = !DILocation(line: 760, column: 17, scope: !14066)
!14075 = !DILocation(line: 761, column: 17, scope: !14066)
!14076 = !DILocation(line: 751, column: 3, scope: !14066)
!14077 = !DILocation(line: 763, column: 16, scope: !14066)
!14078 = !DILocation(line: 763, column: 29, scope: !14066)
!14079 = !DILocation(line: 763, column: 39, scope: !14066)
!14080 = !DILocation(line: 750, column: 2, scope: !14053)
!14081 = !DILocation(line: 750, column: 2, scope: !14056)
!14082 = distinct !{!14082, !14058, !14083}
!14083 = !DILocation(line: 764, column: 2, scope: !14030)
!14084 = !DILocation(line: 781, column: 2, scope: !14085)
!14085 = distinct !DILexicalBlock(scope: !14086, file: !2169, line: 781, column: 2)
!14086 = distinct !DILexicalBlock(scope: !14062, file: !2169, line: 781, column: 2)
!14087 = !DILocation(line: 781, column: 2, scope: !14063)
!14088 = !DILocation(line: 781, column: 2, scope: !14048)
!14089 = !DILocation(line: 787, column: 2, scope: !14027)
!14090 = !DILocation(line: 788, column: 1, scope: !14027)
!14091 = !DILocation(line: 782, column: 20, scope: !14092)
!14092 = distinct !DILexicalBlock(scope: !14093, file: !2169, line: 782, column: 7)
!14093 = distinct !DILexicalBlock(scope: !14064, file: !2169, line: 781, column: 38)
!14094 = !DILocation(line: 782, column: 31, scope: !14092)
!14095 = !DILocation(line: 782, column: 7, scope: !14093)
!14096 = !DILocation(line: 783, column: 37, scope: !14097)
!14097 = distinct !DILexicalBlock(scope: !14092, file: !2169, line: 782, column: 51)
!14098 = !DILocation(line: 784, column: 10, scope: !14097)
!14099 = !DILocation(line: 783, column: 4, scope: !14097)
!14100 = !DILocation(line: 785, column: 3, scope: !14097)
!14101 = !DILocation(line: 781, column: 2, scope: !14064)
!14102 = !DILocation(line: 781, column: 2, scope: !14086)
!14103 = distinct !{!14103, !14088, !14104}
!14104 = !DILocation(line: 786, column: 2, scope: !14048)
!14105 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3338, file: !3338, line: 403, type: !3339, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2276, retainedNodes: !14106)
!14106 = !{!14107}
!14107 = !DILocalVariable(name: "t", arg: 1, scope: !14105, file: !3338, line: 403, type: !111)
!14108 = !DILocation(line: 0, scope: !14105)
!14109 = !DILocalVariable(name: "t", arg: 1, scope: !14110, file: !3338, line: 102, type: !111)
!14110 = distinct !DISubprogram(name: "z_tmcvt", scope: !3338, file: !3338, line: 102, type: !3346, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2276, retainedNodes: !14111)
!14111 = !{!14109, !14112, !14113, !14114, !14115, !14116, !14117, !14118, !14119, !14120, !14121}
!14112 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14110, file: !3338, line: 102, type: !110)
!14113 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14110, file: !3338, line: 103, type: !110)
!14114 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14110, file: !3338, line: 103, type: !347)
!14115 = !DILocalVariable(name: "result32", arg: 5, scope: !14110, file: !3338, line: 104, type: !347)
!14116 = !DILocalVariable(name: "round_up", arg: 6, scope: !14110, file: !3338, line: 104, type: !347)
!14117 = !DILocalVariable(name: "round_off", arg: 7, scope: !14110, file: !3338, line: 105, type: !347)
!14118 = !DILocalVariable(name: "mul_ratio", scope: !14110, file: !3338, line: 107, type: !347)
!14119 = !DILocalVariable(name: "div_ratio", scope: !14110, file: !3338, line: 109, type: !347)
!14120 = !DILocalVariable(name: "off", scope: !14110, file: !3338, line: 116, type: !111)
!14121 = !DILocalVariable(name: "rdivisor", scope: !14122, file: !3338, line: 119, type: !110)
!14122 = distinct !DILexicalBlock(scope: !14123, file: !3338, line: 118, column: 18)
!14123 = distinct !DILexicalBlock(scope: !14110, file: !3338, line: 118, column: 6)
!14124 = !DILocation(line: 0, scope: !14110, inlinedAt: !14125)
!14125 = distinct !DILocation(line: 406, column: 9, scope: !14105)
!14126 = !DILocation(line: 145, column: 13, scope: !14127, inlinedAt: !14125)
!14127 = distinct !DILexicalBlock(scope: !14128, file: !3338, line: 144, column: 10)
!14128 = distinct !DILexicalBlock(scope: !14129, file: !3338, line: 142, column: 7)
!14129 = distinct !DILexicalBlock(scope: !14130, file: !3338, line: 141, column: 24)
!14130 = distinct !DILexicalBlock(scope: !14131, file: !3338, line: 141, column: 13)
!14131 = distinct !DILexicalBlock(scope: !14110, file: !3338, line: 134, column: 6)
!14132 = !DILocation(line: 406, column: 2, scope: !14105)
!14133 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2169, file: !2169, line: 817, type: !4549, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2276, retainedNodes: !14134)
!14134 = !{!14135, !14136, !14137, !14138}
!14135 = !DILocalVariable(name: "entry", arg: 1, scope: !14133, file: !2169, line: 817, type: !3423)
!14136 = !DILocalVariable(name: "p1", arg: 2, scope: !14133, file: !2169, line: 818, type: !107)
!14137 = !DILocalVariable(name: "p2", arg: 3, scope: !14133, file: !2169, line: 818, type: !107)
!14138 = !DILocalVariable(name: "p3", arg: 4, scope: !14133, file: !2169, line: 818, type: !107)
!14139 = !DILocation(line: 0, scope: !14133)
!14140 = !DILocation(line: 822, column: 2, scope: !14133)
!14141 = !DILocation(line: 822, column: 17, scope: !14133)
!14142 = !DILocation(line: 822, column: 30, scope: !14133)
!14143 = !DILocation(line: 823, column: 2, scope: !14133)
!14144 = !DILocation(line: 845, column: 2, scope: !14133)
!14145 = distinct !DISubprogram(name: "z_spin_lock_valid", scope: !2169, file: !2169, line: 853, type: !14146, scopeLine: 854, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2276, retainedNodes: !14149)
!14146 = !DISubroutineType(types: !14147)
!14147 = !{!347, !14148}
!14148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2268, size: 32)
!14149 = !{!14150, !14151}
!14150 = !DILocalVariable(name: "l", arg: 1, scope: !14145, file: !2169, line: 853, type: !14148)
!14151 = !DILocalVariable(name: "thread_cpu", scope: !14145, file: !2169, line: 855, type: !22)
!14152 = !DILocation(line: 0, scope: !14145)
!14153 = !DILocation(line: 855, column: 28, scope: !14145)
!14154 = !DILocation(line: 857, column: 17, scope: !14155)
!14155 = distinct !DILexicalBlock(scope: !14145, file: !2169, line: 857, column: 6)
!14156 = !DILocation(line: 857, column: 6, scope: !14145)
!14157 = !DILocation(line: 858, column: 19, scope: !14158)
!14158 = distinct !DILexicalBlock(scope: !14159, file: !2169, line: 858, column: 7)
!14159 = distinct !DILexicalBlock(scope: !14155, file: !2169, line: 857, column: 24)
!14160 = !DILocation(line: 858, column: 42, scope: !14158)
!14161 = !DILocation(line: 858, column: 28, scope: !14158)
!14162 = !DILocation(line: 858, column: 25, scope: !14158)
!14163 = !DILocation(line: 858, column: 7, scope: !14159)
!14164 = !DILocation(line: 862, column: 2, scope: !14145)
!14165 = !DILocation(line: 863, column: 1, scope: !14145)
!14166 = distinct !DISubprogram(name: "z_spin_unlock_valid", scope: !2169, file: !2169, line: 865, type: !14146, scopeLine: 866, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2276, retainedNodes: !14167)
!14167 = !{!14168}
!14168 = !DILocalVariable(name: "l", arg: 1, scope: !14166, file: !2169, line: 865, type: !14148)
!14169 = !DILocation(line: 0, scope: !14166)
!14170 = !DILocation(line: 867, column: 9, scope: !14171)
!14171 = distinct !DILexicalBlock(scope: !14166, file: !2169, line: 867, column: 6)
!14172 = !DILocation(line: 867, column: 38, scope: !14171)
!14173 = !DILocation(line: 867, column: 24, scope: !14171)
!14174 = !DILocation(line: 867, column: 54, scope: !14171)
!14175 = !DILocation(line: 867, column: 43, scope: !14171)
!14176 = !DILocation(line: 867, column: 41, scope: !14171)
!14177 = !DILocation(line: 867, column: 20, scope: !14171)
!14178 = !DILocation(line: 867, column: 6, scope: !14166)
!14179 = !DILocation(line: 870, column: 16, scope: !14166)
!14180 = !DILocation(line: 871, column: 2, scope: !14166)
!14181 = !DILocation(line: 872, column: 1, scope: !14166)
!14182 = distinct !DISubprogram(name: "z_spin_lock_set_owner", scope: !2169, file: !2169, line: 874, type: !14183, scopeLine: 875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2276, retainedNodes: !14185)
!14183 = !DISubroutineType(types: !14184)
!14184 = !{null, !14148}
!14185 = !{!14186}
!14186 = !DILocalVariable(name: "l", arg: 1, scope: !14182, file: !2169, line: 874, type: !14148)
!14187 = !DILocation(line: 0, scope: !14182)
!14188 = !DILocation(line: 876, column: 32, scope: !14182)
!14189 = !DILocation(line: 876, column: 18, scope: !14182)
!14190 = !DILocation(line: 876, column: 48, scope: !14182)
!14191 = !DILocation(line: 876, column: 37, scope: !14182)
!14192 = !DILocation(line: 876, column: 35, scope: !14182)
!14193 = !DILocation(line: 876, column: 5, scope: !14182)
!14194 = !DILocation(line: 876, column: 16, scope: !14182)
!14195 = !DILocation(line: 877, column: 1, scope: !14182)
!14196 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2169, file: !2169, line: 888, type: !14197, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2276, retainedNodes: !14199)
!14197 = !DISubroutineType(types: !14198)
!14198 = !{!109, !2173}
!14199 = !{!14200}
!14200 = !DILocalVariable(name: "thread", arg: 1, scope: !14196, file: !2169, line: 888, type: !2173)
!14201 = !DILocation(line: 0, scope: !14196)
!14202 = !DILocation(line: 893, column: 2, scope: !14196)
!14203 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2169, file: !2169, line: 897, type: !14204, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2276, retainedNodes: !14206)
!14204 = !DISubroutineType(types: !14205)
!14205 = !{!109, !2173, !32}
!14206 = !{!14207, !14208}
!14207 = !DILocalVariable(name: "thread", arg: 1, scope: !14203, file: !2169, line: 897, type: !2173)
!14208 = !DILocalVariable(name: "options", arg: 2, scope: !14203, file: !2169, line: 897, type: !32)
!14209 = !DILocation(line: 0, scope: !14203)
!14210 = !DILocation(line: 902, column: 2, scope: !14203)
!14211 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2169, file: !2169, line: 1072, type: !14212, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2276, retainedNodes: !14217)
!14212 = !DISubroutineType(types: !14213)
!14213 = !{!109, !2172, !14214}
!14214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14215, size: 32)
!14215 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !156, line: 234, baseType: !14216)
!14216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !156, line: 192, elements: !2106)
!14217 = !{!14218, !14219}
!14218 = !DILocalVariable(name: "thread", arg: 1, scope: !14211, file: !2169, line: 1072, type: !2172)
!14219 = !DILocalVariable(name: "stats", arg: 2, scope: !14211, file: !2169, line: 1073, type: !14214)
!14220 = !DILocation(line: 0, scope: !14211)
!14221 = !DILocation(line: 1075, column: 14, scope: !14222)
!14222 = distinct !DILexicalBlock(scope: !14211, file: !2169, line: 1075, column: 6)
!14223 = !DILocation(line: 1075, column: 23, scope: !14222)
!14224 = !DILocation(line: 1086, column: 1, scope: !14211)
!14225 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2169, file: !2169, line: 1088, type: !14226, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2276, retainedNodes: !14228)
!14226 = !DISubroutineType(types: !14227)
!14227 = !{!109, !14214}
!14228 = !{!14229}
!14229 = !DILocalVariable(name: "stats", arg: 1, scope: !14225, file: !2169, line: 1088, type: !14214)
!14230 = !DILocation(line: 0, scope: !14225)
!14231 = !DILocation(line: 1094, column: 12, scope: !14232)
!14232 = distinct !DILexicalBlock(scope: !14225, file: !2169, line: 1094, column: 6)
!14233 = !DILocation(line: 1120, column: 1, scope: !14225)
!14234 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !14235, file: !14235, line: 20, type: !3155, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3136, retainedNodes: !2106)
!14235 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14236 = !DILocation(line: 30, column: 2, scope: !14234)
!14237 = !DILocation(line: 31, column: 1, scope: !14234)
!14238 = distinct !DISubprogram(name: "idle", scope: !14235, file: !14235, line: 33, type: !3267, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3136, retainedNodes: !14239)
!14239 = !{!14240, !14241, !14242}
!14240 = !DILocalVariable(name: "unused1", arg: 1, scope: !14238, file: !14235, line: 33, type: !107)
!14241 = !DILocalVariable(name: "unused2", arg: 2, scope: !14238, file: !14235, line: 33, type: !107)
!14242 = !DILocalVariable(name: "unused3", arg: 3, scope: !14238, file: !14235, line: 33, type: !107)
!14243 = !DILocation(line: 0, scope: !14238)
!14244 = !DILocation(line: 39, column: 2, scope: !14245)
!14245 = distinct !DILexicalBlock(scope: !14246, file: !14235, line: 39, column: 2)
!14246 = distinct !DILexicalBlock(scope: !14238, file: !14235, line: 39, column: 2)
!14247 = !DILocation(line: 39, column: 2, scope: !14246)
!14248 = !DILocation(line: 39, column: 2, scope: !14249)
!14249 = distinct !DILexicalBlock(scope: !14245, file: !14235, line: 39, column: 2)
!14250 = !DILocation(line: 55, column: 2, scope: !14251, inlinedAt: !14255)
!14251 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6165, file: !6165, line: 42, type: !6166, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3136, retainedNodes: !14252)
!14252 = !{!14253, !14254}
!14253 = !DILocalVariable(name: "key", scope: !14251, file: !6165, line: 44, type: !32)
!14254 = !DILocalVariable(name: "tmp", scope: !14251, file: !6165, line: 53, type: !32)
!14255 = distinct !DILocation(line: 62, column: 10, scope: !14256)
!14256 = distinct !DILexicalBlock(scope: !14238, file: !14235, line: 41, column: 15)
!14257 = !{i64 2282120}
!14258 = !DILocation(line: 0, scope: !14251, inlinedAt: !14255)
!14259 = !DILocation(line: 86, column: 3, scope: !14256)
!14260 = !DILocation(line: 41, column: 2, scope: !14238)
!14261 = distinct !{!14261, !14260, !14262}
!14262 = !DILocation(line: 105, column: 2, scope: !14238)
!14263 = distinct !DISubprogram(name: "k_cpu_idle", scope: !118, file: !118, line: 5627, type: !3155, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3136, retainedNodes: !2106)
!14264 = !DILocation(line: 5629, column: 2, scope: !14263)
!14265 = !DILocation(line: 5630, column: 1, scope: !14263)
!14266 = !DISubprogram(name: "arch_cpu_idle", scope: !3422, file: !3422, line: 167, type: !3155, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2106)
!14267 = distinct !DISubprogram(name: "z_impl_k_mutex_init", scope: !2404, file: !2404, line: 49, type: !14268, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2296, retainedNodes: !14277)
!14268 = !DISubroutineType(types: !14269)
!14269 = !{!109, !14270}
!14270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14271, size: 32)
!14271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !118, line: 2720, size: 160, elements: !14272)
!14272 = !{!14273, !14274, !14275, !14276}
!14273 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !14271, file: !118, line: 2722, baseType: !2332, size: 64)
!14274 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !14271, file: !118, line: 2724, baseType: !2314, size: 32, offset: 64)
!14275 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !14271, file: !118, line: 2727, baseType: !110, size: 32, offset: 96)
!14276 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !14271, file: !118, line: 2730, baseType: !109, size: 32, offset: 128)
!14277 = !{!14278}
!14278 = !DILocalVariable(name: "mutex", arg: 1, scope: !14267, file: !2404, line: 49, type: !14270)
!14279 = !DILocation(line: 0, scope: !14267)
!14280 = !DILocation(line: 51, column: 9, scope: !14267)
!14281 = !DILocation(line: 51, column: 15, scope: !14267)
!14282 = !DILocation(line: 52, column: 9, scope: !14267)
!14283 = !DILocation(line: 52, column: 20, scope: !14267)
!14284 = !DILocation(line: 54, column: 23, scope: !14267)
!14285 = !DILocation(line: 54, column: 2, scope: !14267)
!14286 = !DILocation(line: 60, column: 2, scope: !14267)
!14287 = distinct !DISubprogram(name: "z_waitq_init", scope: !13848, file: !13848, line: 47, type: !14288, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2296, retainedNodes: !14290)
!14288 = !DISubroutineType(types: !14289)
!14289 = !{null, !2331}
!14290 = !{!14291}
!14291 = !DILocalVariable(name: "w", arg: 1, scope: !14287, file: !13848, line: 47, type: !2331)
!14292 = !DILocation(line: 0, scope: !14287)
!14293 = !DILocation(line: 49, column: 21, scope: !14287)
!14294 = !DILocation(line: 49, column: 2, scope: !14287)
!14295 = !DILocation(line: 50, column: 1, scope: !14287)
!14296 = distinct !DISubprogram(name: "sys_dlist_init", scope: !127, file: !127, line: 197, type: !14297, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2296, retainedNodes: !14300)
!14297 = !DISubroutineType(types: !14298)
!14298 = !{null, !14299}
!14299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2336, size: 32)
!14300 = !{!14301}
!14301 = !DILocalVariable(name: "list", arg: 1, scope: !14296, file: !127, line: 197, type: !14299)
!14302 = !DILocation(line: 0, scope: !14296)
!14303 = !DILocation(line: 199, column: 8, scope: !14296)
!14304 = !DILocation(line: 199, column: 13, scope: !14296)
!14305 = !DILocation(line: 200, column: 8, scope: !14296)
!14306 = !DILocation(line: 200, column: 13, scope: !14296)
!14307 = !DILocation(line: 201, column: 1, scope: !14296)
!14308 = distinct !DISubprogram(name: "z_impl_k_mutex_lock", scope: !2404, file: !2404, line: 95, type: !14309, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2296, retainedNodes: !14315)
!14309 = !DISubroutineType(types: !14310)
!14310 = !{!109, !14270, !14311}
!14311 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !14312)
!14312 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !14313)
!14313 = !{!14314}
!14314 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14312, file: !104, line: 66, baseType: !103, size: 64)
!14315 = !{!14316, !14317, !14318, !14319, !14324, !14325, !14326}
!14316 = !DILocalVariable(name: "mutex", arg: 1, scope: !14308, file: !2404, line: 95, type: !14270)
!14317 = !DILocalVariable(name: "timeout", arg: 2, scope: !14308, file: !2404, line: 95, type: !14311)
!14318 = !DILocalVariable(name: "new_prio", scope: !14308, file: !2404, line: 97, type: !109)
!14319 = !DILocalVariable(name: "key", scope: !14308, file: !2404, line: 98, type: !14320)
!14320 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !251, line: 106, baseType: !14321)
!14321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !251, line: 32, size: 32, elements: !14322)
!14322 = !{!14323}
!14323 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14321, file: !251, line: 33, baseType: !109, size: 32)
!14324 = !DILocalVariable(name: "resched", scope: !14308, file: !2404, line: 99, type: !347)
!14325 = !DILocalVariable(name: "got_mutex", scope: !14308, file: !2404, line: 146, type: !109)
!14326 = !DILocalVariable(name: "waiter", scope: !14327, file: !2404, line: 169, type: !2314)
!14327 = distinct !DILexicalBlock(scope: !14328, file: !2404, line: 168, column: 36)
!14328 = distinct !DILexicalBlock(scope: !14308, file: !2404, line: 168, column: 6)
!14329 = !DILocation(line: 0, scope: !14308)
!14330 = !DILocation(line: 1031, column: 3, scope: !14331, inlinedAt: !14334)
!14331 = distinct !DISubprogram(name: "__get_IPSR", scope: !6486, file: !6486, line: 1027, type: !6573, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2296, retainedNodes: !14332)
!14332 = !{!14333}
!14333 = !DILocalVariable(name: "result", scope: !14331, file: !6486, line: 1029, type: !110)
!14334 = distinct !DILocation(line: 48, column: 10, scope: !14335, inlinedAt: !14336)
!14335 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7538, file: !7538, line: 46, type: !7539, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2296, retainedNodes: !2106)
!14336 = distinct !DILocation(line: 101, column: 2, scope: !14337)
!14337 = distinct !DILexicalBlock(scope: !14338, file: !2404, line: 101, column: 2)
!14338 = distinct !DILexicalBlock(scope: !14308, file: !2404, line: 101, column: 2)
!14339 = !{i64 3732962}
!14340 = !DILocation(line: 0, scope: !14331, inlinedAt: !14334)
!14341 = !DILocation(line: 48, column: 9, scope: !14335, inlinedAt: !14336)
!14342 = !DILocation(line: 101, column: 2, scope: !14338)
!14343 = !DILocation(line: 101, column: 2, scope: !14344)
!14344 = distinct !DILexicalBlock(scope: !14337, file: !2404, line: 101, column: 2)
!14345 = !DILocalVariable(name: "l", arg: 1, scope: !14346, file: !251, line: 136, type: !14349)
!14346 = distinct !DISubprogram(name: "k_spin_lock", scope: !251, file: !251, line: 136, type: !14347, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2296, retainedNodes: !14350)
!14347 = !DISubroutineType(types: !14348)
!14348 = !{!14320, !14349}
!14349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2395, size: 32)
!14350 = !{!14345, !14351}
!14351 = !DILocalVariable(name: "k", scope: !14346, file: !251, line: 139, type: !14320)
!14352 = !DILocation(line: 0, scope: !14346, inlinedAt: !14353)
!14353 = distinct !DILocation(line: 105, column: 8, scope: !14308)
!14354 = !DILocation(line: 55, column: 2, scope: !14355, inlinedAt: !14359)
!14355 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6165, file: !6165, line: 42, type: !6166, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2296, retainedNodes: !14356)
!14356 = !{!14357, !14358}
!14357 = !DILocalVariable(name: "key", scope: !14355, file: !6165, line: 44, type: !32)
!14358 = !DILocalVariable(name: "tmp", scope: !14355, file: !6165, line: 53, type: !32)
!14359 = distinct !DILocation(line: 145, column: 10, scope: !14346, inlinedAt: !14353)
!14360 = !{i64 2286528}
!14361 = !DILocation(line: 0, scope: !14355, inlinedAt: !14359)
!14362 = !DILocation(line: 148, column: 2, scope: !14363, inlinedAt: !14353)
!14363 = distinct !DILexicalBlock(scope: !14364, file: !251, line: 148, column: 2)
!14364 = distinct !DILexicalBlock(scope: !14346, file: !251, line: 148, column: 2)
!14365 = !DILocation(line: 148, column: 2, scope: !14364, inlinedAt: !14353)
!14366 = !DILocation(line: 148, column: 2, scope: !14367, inlinedAt: !14353)
!14367 = distinct !DILexicalBlock(scope: !14363, file: !251, line: 148, column: 2)
!14368 = !DILocation(line: 160, column: 2, scope: !14346, inlinedAt: !14353)
!14369 = !DILocation(line: 107, column: 6, scope: !14370)
!14370 = distinct !DILexicalBlock(scope: !14308, file: !2404, line: 107, column: 6)
!14371 = !DILocation(line: 107, column: 6, scope: !14308)
!14372 = !{!"branch_weights", i32 2000, i32 1}
!14373 = !DILocation(line: 110, column: 6, scope: !14374)
!14374 = distinct !DILexicalBlock(scope: !14370, file: !2404, line: 107, column: 71)
!14375 = !DILocation(line: 110, column: 21, scope: !14374)
!14376 = !DILocation(line: 109, column: 28, scope: !14374)
!14377 = !DILocation(line: 111, column: 13, scope: !14374)
!14378 = !DILocation(line: 114, column: 18, scope: !14374)
!14379 = !DILocation(line: 109, column: 10, scope: !14374)
!14380 = !DILocation(line: 109, column: 26, scope: !14374)
!14381 = !DILocation(line: 113, column: 20, scope: !14374)
!14382 = !DILocation(line: 114, column: 10, scope: !14374)
!14383 = !DILocation(line: 114, column: 16, scope: !14374)
!14384 = !DILocalVariable(name: "key", arg: 2, scope: !14385, file: !251, line: 190, type: !14320)
!14385 = distinct !DISubprogram(name: "k_spin_unlock", scope: !251, file: !251, line: 189, type: !14386, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2296, retainedNodes: !14388)
!14386 = !DISubroutineType(types: !14387)
!14387 = !{null, !14349, !14320}
!14388 = !{!14389, !14384}
!14389 = !DILocalVariable(name: "l", arg: 1, scope: !14385, file: !251, line: 189, type: !14349)
!14390 = !DILocation(line: 0, scope: !14385, inlinedAt: !14391)
!14391 = distinct !DILocation(line: 120, column: 3, scope: !14374)
!14392 = !DILocation(line: 194, column: 2, scope: !14393, inlinedAt: !14391)
!14393 = distinct !DILexicalBlock(scope: !14394, file: !251, line: 194, column: 2)
!14394 = distinct !DILexicalBlock(scope: !14385, file: !251, line: 194, column: 2)
!14395 = !DILocation(line: 194, column: 2, scope: !14394, inlinedAt: !14391)
!14396 = !DILocation(line: 194, column: 2, scope: !14397, inlinedAt: !14391)
!14397 = distinct !DILexicalBlock(scope: !14393, file: !251, line: 194, column: 2)
!14398 = !DILocalVariable(name: "key", arg: 1, scope: !14399, file: !6165, line: 84, type: !32)
!14399 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6165, file: !6165, line: 84, type: !6176, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2296, retainedNodes: !14400)
!14400 = !{!14398}
!14401 = !DILocation(line: 0, scope: !14399, inlinedAt: !14402)
!14402 = distinct !DILocation(line: 215, column: 2, scope: !14385, inlinedAt: !14391)
!14403 = !DILocation(line: 95, column: 2, scope: !14399, inlinedAt: !14402)
!14404 = !{i64 2287345}
!14405 = !DILocation(line: 124, column: 3, scope: !14374)
!14406 = !DILocation(line: 127, column: 6, scope: !14407)
!14407 = distinct !DILexicalBlock(scope: !14308, file: !2404, line: 127, column: 6)
!14408 = !DILocation(line: 127, column: 6, scope: !14308)
!14409 = !{!"branch_weights", i32 1, i32 2000}
!14410 = !DILocation(line: 0, scope: !14385, inlinedAt: !14411)
!14411 = distinct !DILocation(line: 128, column: 3, scope: !14412)
!14412 = distinct !DILexicalBlock(scope: !14407, file: !2404, line: 127, column: 50)
!14413 = !DILocation(line: 194, column: 2, scope: !14393, inlinedAt: !14411)
!14414 = !DILocation(line: 194, column: 2, scope: !14394, inlinedAt: !14411)
!14415 = !DILocation(line: 194, column: 2, scope: !14397, inlinedAt: !14411)
!14416 = !DILocation(line: 0, scope: !14399, inlinedAt: !14417)
!14417 = distinct !DILocation(line: 215, column: 2, scope: !14385, inlinedAt: !14411)
!14418 = !DILocation(line: 95, column: 2, scope: !14399, inlinedAt: !14417)
!14419 = !DILocation(line: 132, column: 3, scope: !14412)
!14420 = !DILocation(line: 137, column: 53, scope: !14308)
!14421 = !DILocation(line: 137, column: 38, scope: !14308)
!14422 = !DILocation(line: 138, column: 29, scope: !14308)
!14423 = !DILocation(line: 138, column: 10, scope: !14308)
!14424 = !DILocation(line: 137, column: 13, scope: !14308)
!14425 = !DILocation(line: 142, column: 6, scope: !14426)
!14426 = distinct !DILexicalBlock(scope: !14308, file: !2404, line: 142, column: 6)
!14427 = !DILocation(line: 142, column: 6, scope: !14308)
!14428 = !DILocation(line: 143, column: 13, scope: !14429)
!14429 = distinct !DILexicalBlock(scope: !14426, file: !2404, line: 142, column: 59)
!14430 = !DILocation(line: 144, column: 2, scope: !14429)
!14431 = !DILocation(line: 146, column: 50, scope: !14308)
!14432 = !DILocation(line: 146, column: 18, scope: !14308)
!14433 = !DILocation(line: 153, column: 16, scope: !14434)
!14434 = distinct !DILexicalBlock(scope: !14308, file: !2404, line: 153, column: 6)
!14435 = !DILocation(line: 153, column: 6, scope: !14308)
!14436 = !DILocation(line: 0, scope: !14346, inlinedAt: !14437)
!14437 = distinct !DILocation(line: 162, column: 8, scope: !14308)
!14438 = !DILocation(line: 55, column: 2, scope: !14355, inlinedAt: !14439)
!14439 = distinct !DILocation(line: 145, column: 10, scope: !14346, inlinedAt: !14437)
!14440 = !DILocation(line: 0, scope: !14355, inlinedAt: !14439)
!14441 = !DILocation(line: 148, column: 2, scope: !14363, inlinedAt: !14437)
!14442 = !DILocation(line: 148, column: 2, scope: !14364, inlinedAt: !14437)
!14443 = !DILocation(line: 148, column: 2, scope: !14367, inlinedAt: !14437)
!14444 = !DILocation(line: 160, column: 2, scope: !14346, inlinedAt: !14437)
!14445 = !DILocation(line: 168, column: 6, scope: !14328)
!14446 = !DILocation(line: 168, column: 6, scope: !14308)
!14447 = !DILocation(line: 169, column: 29, scope: !14327)
!14448 = !DILocation(line: 0, scope: !14327)
!14449 = !DILocation(line: 171, column: 22, scope: !14327)
!14450 = !DILocation(line: 171, column: 14, scope: !14327)
!14451 = !DILocation(line: 172, column: 42, scope: !14327)
!14452 = !DILocation(line: 172, column: 29, scope: !14327)
!14453 = !DILocation(line: 172, column: 55, scope: !14327)
!14454 = !DILocation(line: 172, column: 4, scope: !14327)
!14455 = !DILocation(line: 173, column: 11, scope: !14327)
!14456 = !DILocation(line: 177, column: 13, scope: !14327)
!14457 = !DILocation(line: 177, column: 48, scope: !14327)
!14458 = !DILocation(line: 180, column: 6, scope: !14308)
!14459 = !DILocation(line: 181, column: 3, scope: !14460)
!14460 = distinct !DILexicalBlock(scope: !14461, file: !2404, line: 180, column: 15)
!14461 = distinct !DILexicalBlock(scope: !14308, file: !2404, line: 180, column: 6)
!14462 = !DILocation(line: 182, column: 2, scope: !14460)
!14463 = !DILocation(line: 0, scope: !14385, inlinedAt: !14464)
!14464 = distinct !DILocation(line: 183, column: 3, scope: !14465)
!14465 = distinct !DILexicalBlock(scope: !14461, file: !2404, line: 182, column: 9)
!14466 = !DILocation(line: 194, column: 2, scope: !14393, inlinedAt: !14464)
!14467 = !DILocation(line: 194, column: 2, scope: !14394, inlinedAt: !14464)
!14468 = !DILocation(line: 194, column: 2, scope: !14397, inlinedAt: !14464)
!14469 = !DILocation(line: 0, scope: !14399, inlinedAt: !14470)
!14470 = distinct !DILocation(line: 215, column: 2, scope: !14385, inlinedAt: !14464)
!14471 = !DILocation(line: 95, column: 2, scope: !14399, inlinedAt: !14470)
!14472 = !DILocation(line: 189, column: 1, scope: !14308)
!14473 = distinct !DISubprogram(name: "new_prio_for_inheritance", scope: !2404, file: !2404, line: 72, type: !14474, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2296, retainedNodes: !14476)
!14474 = !DISubroutineType(types: !14475)
!14475 = !{!774, !774, !774}
!14476 = !{!14477, !14478, !14479}
!14477 = !DILocalVariable(name: "target", arg: 1, scope: !14473, file: !2404, line: 72, type: !774)
!14478 = !DILocalVariable(name: "limit", arg: 2, scope: !14473, file: !2404, line: 72, type: !774)
!14479 = !DILocalVariable(name: "new_prio", scope: !14473, file: !2404, line: 74, type: !109)
!14480 = !DILocation(line: 0, scope: !14473)
!14481 = !DILocation(line: 74, column: 17, scope: !14473)
!14482 = !DILocation(line: 76, column: 13, scope: !14473)
!14483 = !DILocation(line: 78, column: 2, scope: !14473)
!14484 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !13487, file: !13487, line: 211, type: !14485, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2296, retainedNodes: !14487)
!14485 = !DISubroutineType(types: !14486)
!14486 = !{!347, !109, !109}
!14487 = !{!14488, !14489}
!14488 = !DILocalVariable(name: "prio", arg: 1, scope: !14484, file: !13487, line: 211, type: !109)
!14489 = !DILocalVariable(name: "test_prio", arg: 2, scope: !14484, file: !13487, line: 211, type: !109)
!14490 = !DILocation(line: 0, scope: !14484)
!14491 = !DILocation(line: 213, column: 9, scope: !14484)
!14492 = !DILocation(line: 213, column: 2, scope: !14484)
!14493 = distinct !DISubprogram(name: "adjust_owner_prio", scope: !2404, file: !2404, line: 81, type: !14494, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2296, retainedNodes: !14496)
!14494 = !DISubroutineType(types: !14495)
!14495 = !{!347, !14270, !774}
!14496 = !{!14497, !14498}
!14497 = !DILocalVariable(name: "mutex", arg: 1, scope: !14493, file: !2404, line: 81, type: !14270)
!14498 = !DILocalVariable(name: "new_prio", arg: 2, scope: !14493, file: !2404, line: 81, type: !774)
!14499 = !DILocation(line: 0, scope: !14493)
!14500 = !DILocation(line: 83, column: 13, scope: !14501)
!14501 = distinct !DILexicalBlock(scope: !14493, file: !2404, line: 83, column: 6)
!14502 = !DILocation(line: 83, column: 25, scope: !14501)
!14503 = !DILocation(line: 83, column: 6, scope: !14501)
!14504 = !DILocation(line: 83, column: 30, scope: !14501)
!14505 = !DILocation(line: 83, column: 6, scope: !14493)
!14506 = !DILocation(line: 90, column: 10, scope: !14507)
!14507 = distinct !DILexicalBlock(scope: !14501, file: !2404, line: 83, column: 43)
!14508 = !DILocation(line: 90, column: 3, scope: !14507)
!14509 = !DILocation(line: 93, column: 1, scope: !14493)
!14510 = distinct !DISubprogram(name: "z_waitq_head", scope: !13848, file: !13848, line: 52, type: !14511, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2296, retainedNodes: !14513)
!14511 = !DISubroutineType(types: !14512)
!14512 = !{!2314, !2331}
!14513 = !{!14514}
!14514 = !DILocalVariable(name: "w", arg: 1, scope: !14510, file: !13848, line: 52, type: !2331)
!14515 = !DILocation(line: 0, scope: !14510)
!14516 = !DILocation(line: 54, column: 52, scope: !14510)
!14517 = !DILocation(line: 54, column: 28, scope: !14510)
!14518 = !DILocation(line: 54, column: 9, scope: !14510)
!14519 = !DILocation(line: 54, column: 2, scope: !14510)
!14520 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !127, file: !127, line: 294, type: !14521, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2296, retainedNodes: !14523)
!14521 = !DISubroutineType(types: !14522)
!14522 = !{!2299, !14299}
!14523 = !{!14524}
!14524 = !DILocalVariable(name: "list", arg: 1, scope: !14520, file: !127, line: 294, type: !14299)
!14525 = !DILocation(line: 0, scope: !14520)
!14526 = !DILocation(line: 296, column: 9, scope: !14520)
!14527 = !DILocation(line: 296, column: 49, scope: !14520)
!14528 = !DILocation(line: 296, column: 2, scope: !14520)
!14529 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !127, file: !127, line: 266, type: !14530, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2296, retainedNodes: !14532)
!14530 = !DISubroutineType(types: !14531)
!14531 = !{!347, !14299}
!14532 = !{!14533}
!14533 = !DILocalVariable(name: "list", arg: 1, scope: !14529, file: !127, line: 266, type: !14299)
!14534 = !DILocation(line: 0, scope: !14529)
!14535 = !DILocation(line: 268, column: 15, scope: !14529)
!14536 = !DILocation(line: 268, column: 20, scope: !14529)
!14537 = !DILocation(line: 268, column: 2, scope: !14529)
!14538 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !13487, file: !13487, line: 206, type: !14485, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2296, retainedNodes: !14539)
!14539 = !{!14540, !14541}
!14540 = !DILocalVariable(name: "prio1", arg: 1, scope: !14538, file: !13487, line: 206, type: !109)
!14541 = !DILocalVariable(name: "prio2", arg: 2, scope: !14538, file: !13487, line: 206, type: !109)
!14542 = !DILocation(line: 0, scope: !14538)
!14543 = !DILocation(line: 208, column: 15, scope: !14538)
!14544 = !DILocation(line: 208, column: 2, scope: !14538)
!14545 = distinct !DISubprogram(name: "z_get_new_prio_with_ceiling", scope: !13487, file: !13487, line: 186, type: !303, scopeLine: 187, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2296, retainedNodes: !14546)
!14546 = !{!14547}
!14547 = !DILocalVariable(name: "prio", arg: 1, scope: !14545, file: !13487, line: 186, type: !109)
!14548 = !DILocation(line: 0, scope: !14545)
!14549 = !DILocation(line: 188, column: 9, scope: !14545)
!14550 = !DILocation(line: 188, column: 2, scope: !14545)
!14551 = distinct !DISubprogram(name: "z_is_under_prio_ceiling", scope: !13487, file: !13487, line: 181, type: !14552, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2296, retainedNodes: !14554)
!14552 = !DISubroutineType(types: !14553)
!14553 = !{!347, !109}
!14554 = !{!14555}
!14555 = !DILocalVariable(name: "prio", arg: 1, scope: !14551, file: !13487, line: 181, type: !109)
!14556 = !DILocation(line: 0, scope: !14551)
!14557 = !DILocation(line: 183, column: 14, scope: !14551)
!14558 = !DILocation(line: 183, column: 2, scope: !14551)
!14559 = distinct !DISubprogram(name: "z_impl_k_mutex_unlock", scope: !2404, file: !2404, line: 201, type: !14268, scopeLine: 202, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2296, retainedNodes: !14560)
!14560 = !{!14561, !14562, !14563, !14564}
!14561 = !DILocalVariable(name: "mutex", arg: 1, scope: !14559, file: !2404, line: 201, type: !14270)
!14562 = !DILocalVariable(name: "new_owner", scope: !14559, file: !2404, line: 203, type: !2314)
!14563 = !DILocalVariable(name: "key", scope: !14559, file: !2404, line: 242, type: !14320)
!14564 = !DILabel(scope: !14559, name: "k_mutex_unlock_return", file: !2404, line: 270)
!14565 = !DILocation(line: 0, scope: !14559)
!14566 = !DILocation(line: 1031, column: 3, scope: !14331, inlinedAt: !14567)
!14567 = distinct !DILocation(line: 48, column: 10, scope: !14335, inlinedAt: !14568)
!14568 = distinct !DILocation(line: 205, column: 2, scope: !14569)
!14569 = distinct !DILexicalBlock(scope: !14570, file: !2404, line: 205, column: 2)
!14570 = distinct !DILexicalBlock(scope: !14559, file: !2404, line: 205, column: 2)
!14571 = !DILocation(line: 0, scope: !14331, inlinedAt: !14567)
!14572 = !DILocation(line: 48, column: 9, scope: !14335, inlinedAt: !14568)
!14573 = !DILocation(line: 205, column: 2, scope: !14570)
!14574 = !DILocation(line: 205, column: 2, scope: !14575)
!14575 = distinct !DILexicalBlock(scope: !14569, file: !2404, line: 205, column: 2)
!14576 = !DILocation(line: 209, column: 2, scope: !14577)
!14577 = distinct !DILexicalBlock(scope: !14559, file: !2404, line: 209, column: 2)
!14578 = !DILocation(line: 209, column: 2, scope: !14559)
!14579 = !DILocation(line: 217, column: 2, scope: !14580)
!14580 = distinct !DILexicalBlock(scope: !14559, file: !2404, line: 217, column: 2)
!14581 = !DILocation(line: 217, column: 2, scope: !14559)
!14582 = !DILocation(line: 229, column: 2, scope: !14583)
!14583 = distinct !DILexicalBlock(scope: !14584, file: !2404, line: 229, column: 2)
!14584 = distinct !DILexicalBlock(scope: !14559, file: !2404, line: 229, column: 2)
!14585 = !DILocation(line: 229, column: 2, scope: !14584)
!14586 = !DILocation(line: 229, column: 2, scope: !14587)
!14587 = distinct !DILexicalBlock(scope: !14583, file: !2404, line: 229, column: 2)
!14588 = !DILocation(line: 238, column: 20, scope: !14589)
!14589 = distinct !DILexicalBlock(scope: !14590, file: !2404, line: 237, column: 30)
!14590 = distinct !DILexicalBlock(scope: !14559, file: !2404, line: 237, column: 6)
!14591 = !DILocation(line: 239, column: 3, scope: !14589)
!14592 = !DILocation(line: 0, scope: !14346, inlinedAt: !14593)
!14593 = distinct !DILocation(line: 242, column: 25, scope: !14559)
!14594 = !DILocation(line: 55, column: 2, scope: !14355, inlinedAt: !14595)
!14595 = distinct !DILocation(line: 145, column: 10, scope: !14346, inlinedAt: !14593)
!14596 = !DILocation(line: 0, scope: !14355, inlinedAt: !14595)
!14597 = !DILocation(line: 148, column: 2, scope: !14363, inlinedAt: !14593)
!14598 = !DILocation(line: 148, column: 2, scope: !14364, inlinedAt: !14593)
!14599 = !DILocation(line: 148, column: 2, scope: !14367, inlinedAt: !14593)
!14600 = !DILocation(line: 160, column: 2, scope: !14346, inlinedAt: !14593)
!14601 = !DILocation(line: 244, column: 34, scope: !14559)
!14602 = !DILocation(line: 244, column: 2, scope: !14559)
!14603 = !DILocation(line: 247, column: 44, scope: !14559)
!14604 = !DILocation(line: 247, column: 14, scope: !14559)
!14605 = !DILocation(line: 249, column: 15, scope: !14559)
!14606 = !DILocation(line: 254, column: 16, scope: !14607)
!14607 = distinct !DILexicalBlock(scope: !14559, file: !2404, line: 254, column: 6)
!14608 = !DILocation(line: 254, column: 6, scope: !14559)
!14609 = !DILocation(line: 260, column: 44, scope: !14610)
!14610 = distinct !DILexicalBlock(scope: !14607, file: !2404, line: 254, column: 25)
!14611 = !DILocation(line: 260, column: 28, scope: !14610)
!14612 = !DILocation(line: 260, column: 26, scope: !14610)
!14613 = !DILocalVariable(name: "thread", arg: 1, scope: !14614, file: !13507, line: 65, type: !2314)
!14614 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13507, file: !13507, line: 65, type: !14615, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2296, retainedNodes: !14617)
!14615 = !DISubroutineType(types: !14616)
!14616 = !{null, !2314, !32}
!14617 = !{!14613, !14618}
!14618 = !DILocalVariable(name: "value", arg: 2, scope: !14614, file: !13507, line: 65, type: !32)
!14619 = !DILocation(line: 0, scope: !14614, inlinedAt: !14620)
!14620 = distinct !DILocation(line: 261, column: 3, scope: !14610)
!14621 = !DILocation(line: 67, column: 15, scope: !14614, inlinedAt: !14620)
!14622 = !DILocation(line: 67, column: 33, scope: !14614, inlinedAt: !14620)
!14623 = !DILocation(line: 262, column: 3, scope: !14610)
!14624 = !DILocation(line: 263, column: 3, scope: !14610)
!14625 = !DILocation(line: 264, column: 2, scope: !14610)
!14626 = !DILocation(line: 265, column: 21, scope: !14627)
!14627 = distinct !DILexicalBlock(scope: !14607, file: !2404, line: 264, column: 9)
!14628 = !DILocation(line: 0, scope: !14385, inlinedAt: !14629)
!14629 = distinct !DILocation(line: 266, column: 3, scope: !14627)
!14630 = !DILocation(line: 194, column: 2, scope: !14393, inlinedAt: !14629)
!14631 = !DILocation(line: 194, column: 2, scope: !14394, inlinedAt: !14629)
!14632 = !DILocation(line: 194, column: 2, scope: !14397, inlinedAt: !14629)
!14633 = !DILocation(line: 0, scope: !14399, inlinedAt: !14634)
!14634 = distinct !DILocation(line: 215, column: 2, scope: !14385, inlinedAt: !14629)
!14635 = !DILocation(line: 95, column: 2, scope: !14399, inlinedAt: !14634)
!14636 = !DILocation(line: 274, column: 1, scope: !14559)
!14637 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2518, file: !2518, line: 93, type: !14638, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !14640)
!14638 = !DISubroutineType(types: !14639)
!14639 = !{!774, !2410, !2410}
!14640 = !{!14641, !14642, !14643, !14644}
!14641 = !DILocalVariable(name: "thread_1", arg: 1, scope: !14637, file: !2518, line: 93, type: !2410)
!14642 = !DILocalVariable(name: "thread_2", arg: 2, scope: !14637, file: !2518, line: 94, type: !2410)
!14643 = !DILocalVariable(name: "b1", scope: !14637, file: !2518, line: 97, type: !774)
!14644 = !DILocalVariable(name: "b2", scope: !14637, file: !2518, line: 98, type: !774)
!14645 = !DILocation(line: 0, scope: !14637)
!14646 = !DILocation(line: 97, column: 30, scope: !14637)
!14647 = !DILocation(line: 98, column: 30, scope: !14637)
!14648 = !DILocation(line: 100, column: 9, scope: !14649)
!14649 = distinct !DILexicalBlock(scope: !14637, file: !2518, line: 100, column: 6)
!14650 = !DILocation(line: 100, column: 6, scope: !14637)
!14651 = !DILocation(line: 125, column: 1, scope: !14637)
!14652 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2518, file: !2518, line: 428, type: !14653, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !14655)
!14653 = !DISubroutineType(types: !14654)
!14654 = !{null, !2410}
!14655 = !{!14656}
!14656 = !DILocalVariable(name: "curr", arg: 1, scope: !14652, file: !2518, line: 428, type: !2410)
!14657 = !DILocation(line: 0, scope: !14652)
!14658 = !DILocation(line: 434, column: 6, scope: !14659)
!14659 = distinct !DILexicalBlock(scope: !14652, file: !2518, line: 434, column: 6)
!14660 = !DILocation(line: 434, column: 23, scope: !14659)
!14661 = !DILocation(line: 434, column: 6, scope: !14652)
!14662 = !DILocation(line: 435, column: 50, scope: !14663)
!14663 = distinct !DILexicalBlock(scope: !14659, file: !2518, line: 434, column: 29)
!14664 = !DILocation(line: 435, column: 48, scope: !14663)
!14665 = !DILocation(line: 435, column: 29, scope: !14663)
!14666 = !DILocation(line: 436, column: 24, scope: !14663)
!14667 = !DILocation(line: 436, column: 3, scope: !14663)
!14668 = !DILocation(line: 437, column: 2, scope: !14663)
!14669 = !DILocation(line: 438, column: 1, scope: !14652)
!14670 = distinct !DISubprogram(name: "slice_time", scope: !2518, file: !2518, line: 407, type: !14671, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !14673)
!14671 = !DISubroutineType(types: !14672)
!14672 = !{!109, !2410}
!14673 = !{!14674, !14675}
!14674 = !DILocalVariable(name: "curr", arg: 1, scope: !14670, file: !2518, line: 407, type: !2410)
!14675 = !DILocalVariable(name: "ret", scope: !14670, file: !2518, line: 409, type: !109)
!14676 = !DILocation(line: 0, scope: !14670)
!14677 = !DILocation(line: 409, column: 12, scope: !14670)
!14678 = !DILocation(line: 416, column: 2, scope: !14670)
!14679 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2518, file: !2518, line: 440, type: !14680, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !14682)
!14680 = !DISubroutineType(types: !14681)
!14681 = !{null, !774, !109}
!14682 = !{!14683, !14684, !14685, !14691}
!14683 = !DILocalVariable(name: "slice", arg: 1, scope: !14679, file: !2518, line: 440, type: !774)
!14684 = !DILocalVariable(name: "prio", arg: 2, scope: !14679, file: !2518, line: 440, type: !109)
!14685 = !DILocalVariable(name: "__i", scope: !14686, file: !2518, line: 442, type: !14687)
!14686 = distinct !DILexicalBlock(scope: !14679, file: !2518, line: 442, column: 2)
!14687 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !251, line: 106, baseType: !14688)
!14688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !251, line: 32, size: 32, elements: !14689)
!14689 = !{!14690}
!14690 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14688, file: !251, line: 33, baseType: !109, size: 32)
!14691 = !DILocalVariable(name: "__key", scope: !14686, file: !2518, line: 442, type: !14687)
!14692 = !DILocation(line: 0, scope: !14679)
!14693 = !DILocation(line: 0, scope: !14686)
!14694 = !DILocalVariable(name: "l", arg: 1, scope: !14695, file: !251, line: 136, type: !14698)
!14695 = distinct !DISubprogram(name: "k_spin_lock", scope: !251, file: !251, line: 136, type: !14696, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !14699)
!14696 = !DISubroutineType(types: !14697)
!14697 = !{!14687, !14698}
!14698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2505, size: 32)
!14699 = !{!14694, !14700}
!14700 = !DILocalVariable(name: "k", scope: !14695, file: !251, line: 139, type: !14687)
!14701 = !DILocation(line: 0, scope: !14695, inlinedAt: !14702)
!14702 = distinct !DILocation(line: 442, column: 2, scope: !14686)
!14703 = !DILocation(line: 55, column: 2, scope: !14704, inlinedAt: !14708)
!14704 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6165, file: !6165, line: 42, type: !6166, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !14705)
!14705 = !{!14706, !14707}
!14706 = !DILocalVariable(name: "key", scope: !14704, file: !6165, line: 44, type: !32)
!14707 = !DILocalVariable(name: "tmp", scope: !14704, file: !6165, line: 53, type: !32)
!14708 = distinct !DILocation(line: 145, column: 10, scope: !14695, inlinedAt: !14702)
!14709 = !{i64 2326091}
!14710 = !DILocation(line: 0, scope: !14704, inlinedAt: !14708)
!14711 = !DILocation(line: 148, column: 2, scope: !14712, inlinedAt: !14702)
!14712 = distinct !DILexicalBlock(scope: !14713, file: !251, line: 148, column: 2)
!14713 = distinct !DILexicalBlock(scope: !14695, file: !251, line: 148, column: 2)
!14714 = !DILocation(line: 148, column: 2, scope: !14713, inlinedAt: !14702)
!14715 = !DILocation(line: 148, column: 2, scope: !14716, inlinedAt: !14702)
!14716 = distinct !DILexicalBlock(scope: !14712, file: !251, line: 148, column: 2)
!14717 = !DILocation(line: 160, column: 2, scope: !14695, inlinedAt: !14702)
!14718 = !DILocation(line: 443, column: 29, scope: !14719)
!14719 = distinct !DILexicalBlock(scope: !14720, file: !2518, line: 442, column: 26)
!14720 = distinct !DILexicalBlock(scope: !14686, file: !2518, line: 442, column: 2)
!14721 = !DILocation(line: 444, column: 17, scope: !14719)
!14722 = !DILocation(line: 445, column: 51, scope: !14723)
!14723 = distinct !DILexicalBlock(scope: !14719, file: !2518, line: 445, column: 7)
!14724 = !DILocation(line: 445, column: 7, scope: !14719)
!14725 = !DILocation(line: 0, scope: !14719)
!14726 = !DILocation(line: 451, column: 18, scope: !14719)
!14727 = !DILocation(line: 452, column: 3, scope: !14719)
!14728 = !DILocalVariable(name: "key", arg: 2, scope: !14729, file: !251, line: 190, type: !14687)
!14729 = distinct !DISubprogram(name: "k_spin_unlock", scope: !251, file: !251, line: 189, type: !14730, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !14732)
!14730 = !DISubroutineType(types: !14731)
!14731 = !{null, !14698, !14687}
!14732 = !{!14733, !14728}
!14733 = !DILocalVariable(name: "l", arg: 1, scope: !14729, file: !251, line: 189, type: !14698)
!14734 = !DILocation(line: 0, scope: !14729, inlinedAt: !14735)
!14735 = distinct !DILocation(line: 442, column: 2, scope: !14720)
!14736 = !DILocation(line: 194, column: 2, scope: !14737, inlinedAt: !14735)
!14737 = distinct !DILexicalBlock(scope: !14738, file: !251, line: 194, column: 2)
!14738 = distinct !DILexicalBlock(scope: !14729, file: !251, line: 194, column: 2)
!14739 = !DILocation(line: 194, column: 2, scope: !14738, inlinedAt: !14735)
!14740 = !DILocation(line: 194, column: 2, scope: !14741, inlinedAt: !14735)
!14741 = distinct !DILexicalBlock(scope: !14737, file: !251, line: 194, column: 2)
!14742 = !DILocalVariable(name: "key", arg: 1, scope: !14743, file: !6165, line: 84, type: !32)
!14743 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6165, file: !6165, line: 84, type: !6176, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !14744)
!14744 = !{!14742}
!14745 = !DILocation(line: 0, scope: !14743, inlinedAt: !14746)
!14746 = distinct !DILocation(line: 215, column: 2, scope: !14729, inlinedAt: !14735)
!14747 = !DILocation(line: 95, column: 2, scope: !14743, inlinedAt: !14746)
!14748 = !{i64 2326908}
!14749 = !DILocation(line: 454, column: 1, scope: !14679)
!14750 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !3338, file: !3338, line: 389, type: !7773, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !14751)
!14751 = !{!14752}
!14752 = !DILocalVariable(name: "t", arg: 1, scope: !14750, file: !3338, line: 389, type: !110)
!14753 = !DILocation(line: 0, scope: !14750)
!14754 = !DILocalVariable(name: "t", arg: 1, scope: !14755, file: !3338, line: 102, type: !111)
!14755 = distinct !DISubprogram(name: "z_tmcvt", scope: !3338, file: !3338, line: 102, type: !3346, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !14756)
!14756 = !{!14754, !14757, !14758, !14759, !14760, !14761, !14762, !14763, !14764, !14765, !14766}
!14757 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14755, file: !3338, line: 102, type: !110)
!14758 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14755, file: !3338, line: 103, type: !110)
!14759 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14755, file: !3338, line: 103, type: !347)
!14760 = !DILocalVariable(name: "result32", arg: 5, scope: !14755, file: !3338, line: 104, type: !347)
!14761 = !DILocalVariable(name: "round_up", arg: 6, scope: !14755, file: !3338, line: 104, type: !347)
!14762 = !DILocalVariable(name: "round_off", arg: 7, scope: !14755, file: !3338, line: 105, type: !347)
!14763 = !DILocalVariable(name: "mul_ratio", scope: !14755, file: !3338, line: 107, type: !347)
!14764 = !DILocalVariable(name: "div_ratio", scope: !14755, file: !3338, line: 109, type: !347)
!14765 = !DILocalVariable(name: "off", scope: !14755, file: !3338, line: 116, type: !111)
!14766 = !DILocalVariable(name: "rdivisor", scope: !14767, file: !3338, line: 119, type: !110)
!14767 = distinct !DILexicalBlock(scope: !14768, file: !3338, line: 118, column: 18)
!14768 = distinct !DILexicalBlock(scope: !14755, file: !3338, line: 118, column: 6)
!14769 = !DILocation(line: 0, scope: !14755, inlinedAt: !14770)
!14770 = distinct !DILocation(line: 392, column: 9, scope: !14750)
!14771 = !DILocation(line: 143, column: 25, scope: !14772, inlinedAt: !14770)
!14772 = distinct !DILexicalBlock(scope: !14773, file: !3338, line: 142, column: 17)
!14773 = distinct !DILexicalBlock(scope: !14774, file: !3338, line: 142, column: 7)
!14774 = distinct !DILexicalBlock(scope: !14775, file: !3338, line: 141, column: 24)
!14775 = distinct !DILexicalBlock(scope: !14776, file: !3338, line: 141, column: 13)
!14776 = distinct !DILexicalBlock(scope: !14755, file: !3338, line: 134, column: 6)
!14777 = !DILocation(line: 392, column: 2, scope: !14750)
!14778 = distinct !DISubprogram(name: "z_time_slice", scope: !2518, file: !2518, line: 502, type: !8426, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !14779)
!14779 = !{!14780, !14781}
!14780 = !DILocalVariable(name: "ticks", arg: 1, scope: !14778, file: !2518, line: 502, type: !109)
!14781 = !DILocalVariable(name: "key", scope: !14778, file: !2518, line: 511, type: !14687)
!14782 = !DILocation(line: 0, scope: !14778)
!14783 = !DILocation(line: 0, scope: !14695, inlinedAt: !14784)
!14784 = distinct !DILocation(line: 511, column: 25, scope: !14778)
!14785 = !DILocation(line: 55, column: 2, scope: !14704, inlinedAt: !14786)
!14786 = distinct !DILocation(line: 145, column: 10, scope: !14695, inlinedAt: !14784)
!14787 = !DILocation(line: 0, scope: !14704, inlinedAt: !14786)
!14788 = !DILocation(line: 148, column: 2, scope: !14712, inlinedAt: !14784)
!14789 = !DILocation(line: 148, column: 2, scope: !14713, inlinedAt: !14784)
!14790 = !DILocation(line: 148, column: 2, scope: !14716, inlinedAt: !14784)
!14791 = !DILocation(line: 160, column: 2, scope: !14695, inlinedAt: !14784)
!14792 = !DILocation(line: 514, column: 6, scope: !14793)
!14793 = distinct !DILexicalBlock(scope: !14778, file: !2518, line: 514, column: 6)
!14794 = !DILocation(line: 514, column: 25, scope: !14793)
!14795 = !DILocation(line: 514, column: 22, scope: !14793)
!14796 = !DILocation(line: 514, column: 6, scope: !14778)
!14797 = !DILocation(line: 515, column: 3, scope: !14798)
!14798 = distinct !DILexicalBlock(scope: !14793, file: !2518, line: 514, column: 35)
!14799 = !DILocation(line: 0, scope: !14729, inlinedAt: !14800)
!14800 = distinct !DILocation(line: 516, column: 3, scope: !14798)
!14801 = !DILocation(line: 194, column: 2, scope: !14737, inlinedAt: !14800)
!14802 = !DILocation(line: 194, column: 2, scope: !14738, inlinedAt: !14800)
!14803 = !DILocation(line: 194, column: 2, scope: !14741, inlinedAt: !14800)
!14804 = !DILocation(line: 0, scope: !14743, inlinedAt: !14805)
!14805 = distinct !DILocation(line: 215, column: 2, scope: !14729, inlinedAt: !14800)
!14806 = !DILocation(line: 95, column: 2, scope: !14743, inlinedAt: !14805)
!14807 = !DILocation(line: 517, column: 3, scope: !14798)
!14808 = !DILocation(line: 519, column: 18, scope: !14778)
!14809 = !DILocation(line: 522, column: 6, scope: !14810)
!14810 = distinct !DILexicalBlock(scope: !14778, file: !2518, line: 522, column: 6)
!14811 = !DILocation(line: 522, column: 27, scope: !14810)
!14812 = !DILocation(line: 522, column: 30, scope: !14810)
!14813 = !DILocation(line: 522, column: 6, scope: !14778)
!14814 = !DILocation(line: 523, column: 30, scope: !14815)
!14815 = distinct !DILexicalBlock(scope: !14816, file: !2518, line: 523, column: 7)
!14816 = distinct !DILexicalBlock(scope: !14810, file: !2518, line: 522, column: 51)
!14817 = !DILocation(line: 523, column: 13, scope: !14815)
!14818 = !DILocation(line: 523, column: 7, scope: !14816)
!14819 = !DILocation(line: 530, column: 10, scope: !14820)
!14820 = distinct !DILexicalBlock(scope: !14815, file: !2518, line: 523, column: 43)
!14821 = !DILocation(line: 531, column: 3, scope: !14820)
!14822 = !DILocation(line: 532, column: 30, scope: !14823)
!14823 = distinct !DILexicalBlock(scope: !14815, file: !2518, line: 531, column: 10)
!14824 = !DILocation(line: 535, column: 29, scope: !14825)
!14825 = distinct !DILexicalBlock(scope: !14810, file: !2518, line: 534, column: 9)
!14826 = !DILocation(line: 0, scope: !14729, inlinedAt: !14827)
!14827 = distinct !DILocation(line: 537, column: 2, scope: !14778)
!14828 = !DILocation(line: 194, column: 2, scope: !14737, inlinedAt: !14827)
!14829 = !DILocation(line: 194, column: 2, scope: !14738, inlinedAt: !14827)
!14830 = !DILocation(line: 194, column: 2, scope: !14741, inlinedAt: !14827)
!14831 = !DILocation(line: 0, scope: !14743, inlinedAt: !14832)
!14832 = distinct !DILocation(line: 215, column: 2, scope: !14729, inlinedAt: !14827)
!14833 = !DILocation(line: 95, column: 2, scope: !14743, inlinedAt: !14832)
!14834 = !DILocation(line: 538, column: 1, scope: !14778)
!14835 = distinct !DISubprogram(name: "sliceable", scope: !2518, file: !2518, line: 468, type: !14836, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !14838)
!14836 = !DISubroutineType(types: !14837)
!14837 = !{!347, !2410}
!14838 = !{!14839, !14840}
!14839 = !DILocalVariable(name: "thread", arg: 1, scope: !14835, file: !2518, line: 468, type: !2410)
!14840 = !DILocalVariable(name: "ret", scope: !14835, file: !2518, line: 470, type: !347)
!14841 = !DILocation(line: 0, scope: !14835)
!14842 = !DILocation(line: 470, column: 13, scope: !14835)
!14843 = !DILocation(line: 471, column: 3, scope: !14835)
!14844 = !DILocation(line: 471, column: 7, scope: !14835)
!14845 = !DILocation(line: 472, column: 3, scope: !14835)
!14846 = !DILocation(line: 472, column: 37, scope: !14835)
!14847 = !DILocation(line: 472, column: 24, scope: !14835)
!14848 = !DILocation(line: 472, column: 43, scope: !14835)
!14849 = !DILocation(line: 472, column: 7, scope: !14835)
!14850 = !DILocation(line: 473, column: 3, scope: !14835)
!14851 = !DILocation(line: 473, column: 7, scope: !14835)
!14852 = !DILocation(line: 473, column: 6, scope: !14835)
!14853 = !DILocation(line: 479, column: 2, scope: !14835)
!14854 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2518, file: !2518, line: 482, type: !14855, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !14857)
!14855 = !DISubroutineType(types: !14856)
!14856 = !{!14687, !14687}
!14857 = !{!14858, !14859}
!14858 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !14854, file: !2518, line: 482, type: !14687)
!14859 = !DILocalVariable(name: "curr", scope: !14854, file: !2518, line: 484, type: !2410)
!14860 = !DILocation(line: 0, scope: !14854)
!14861 = !DILocation(line: 484, column: 26, scope: !14854)
!14862 = !DILocation(line: 493, column: 7, scope: !14863)
!14863 = distinct !DILexicalBlock(scope: !14854, file: !2518, line: 493, column: 6)
!14864 = !DILocation(line: 493, column: 6, scope: !14854)
!14865 = !DILocation(line: 494, column: 3, scope: !14866)
!14866 = distinct !DILexicalBlock(scope: !14863, file: !2518, line: 493, column: 49)
!14867 = !DILocation(line: 495, column: 2, scope: !14866)
!14868 = !DILocation(line: 496, column: 2, scope: !14854)
!14869 = !DILocation(line: 499, column: 1, scope: !14854)
!14870 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !13487, file: !13487, line: 106, type: !14836, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !14871)
!14871 = !{!14872, !14873}
!14872 = !DILocalVariable(name: "thread", arg: 1, scope: !14870, file: !13487, line: 106, type: !2410)
!14873 = !DILocalVariable(name: "state", scope: !14870, file: !13487, line: 108, type: !178)
!14874 = !DILocation(line: 0, scope: !14870)
!14875 = !DILocation(line: 108, column: 31, scope: !14870)
!14876 = !DILocation(line: 110, column: 16, scope: !14870)
!14877 = !DILocation(line: 111, column: 41, scope: !14870)
!14878 = !DILocation(line: 110, column: 2, scope: !14870)
!14879 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2518, file: !2518, line: 393, type: !14653, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !14880)
!14880 = !{!14881}
!14881 = !DILocalVariable(name: "thread", arg: 1, scope: !14879, file: !2518, line: 393, type: !2410)
!14882 = !DILocation(line: 0, scope: !14879)
!14883 = !DILocation(line: 395, column: 6, scope: !14884)
!14884 = distinct !DILexicalBlock(scope: !14879, file: !2518, line: 395, column: 6)
!14885 = !DILocation(line: 395, column: 6, scope: !14879)
!14886 = !DILocalVariable(name: "thread", arg: 1, scope: !14887, file: !2518, line: 264, type: !2410)
!14887 = distinct !DISubprogram(name: "dequeue_thread", scope: !2518, file: !2518, line: 264, type: !14653, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !14888)
!14888 = !{!14886}
!14889 = !DILocation(line: 0, scope: !14887, inlinedAt: !14890)
!14890 = distinct !DILocation(line: 396, column: 3, scope: !14891)
!14891 = distinct !DILexicalBlock(scope: !14884, file: !2518, line: 395, column: 34)
!14892 = !DILocation(line: 266, column: 15, scope: !14887, inlinedAt: !14890)
!14893 = !DILocation(line: 266, column: 28, scope: !14887, inlinedAt: !14890)
!14894 = !DILocalVariable(name: "thread", arg: 1, scope: !14895, file: !2518, line: 232, type: !2410)
!14895 = distinct !DISubprogram(name: "runq_remove", scope: !2518, file: !2518, line: 232, type: !14653, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !14896)
!14896 = !{!14894}
!14897 = !DILocation(line: 0, scope: !14895, inlinedAt: !14898)
!14898 = distinct !DILocation(line: 268, column: 3, scope: !14899, inlinedAt: !14890)
!14899 = distinct !DILexicalBlock(scope: !14900, file: !2518, line: 267, column: 35)
!14900 = distinct !DILexicalBlock(scope: !14887, file: !2518, line: 267, column: 6)
!14901 = !DILocation(line: 234, column: 2, scope: !14895, inlinedAt: !14898)
!14902 = !DILocation(line: 397, column: 2, scope: !14891)
!14903 = !DILocalVariable(name: "thread", arg: 1, scope: !14904, file: !2518, line: 250, type: !2410)
!14904 = distinct !DISubprogram(name: "queue_thread", scope: !2518, file: !2518, line: 250, type: !14653, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !14905)
!14905 = !{!14903}
!14906 = !DILocation(line: 0, scope: !14904, inlinedAt: !14907)
!14907 = distinct !DILocation(line: 398, column: 2, scope: !14879)
!14908 = !DILocation(line: 252, column: 15, scope: !14904, inlinedAt: !14907)
!14909 = !DILocation(line: 252, column: 28, scope: !14904, inlinedAt: !14907)
!14910 = !DILocalVariable(name: "thread", arg: 1, scope: !14911, file: !2518, line: 227, type: !2410)
!14911 = distinct !DISubprogram(name: "runq_add", scope: !2518, file: !2518, line: 227, type: !14653, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !14912)
!14912 = !{!14910}
!14913 = !DILocation(line: 0, scope: !14911, inlinedAt: !14914)
!14914 = distinct !DILocation(line: 254, column: 3, scope: !14915, inlinedAt: !14907)
!14915 = distinct !DILexicalBlock(scope: !14916, file: !2518, line: 253, column: 35)
!14916 = distinct !DILexicalBlock(scope: !14904, file: !2518, line: 253, column: 6)
!14917 = !DILocalVariable(name: "pq", arg: 1, scope: !14918, file: !2518, line: 181, type: !14921)
!14918 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2518, file: !2518, line: 181, type: !14919, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !14922)
!14919 = !DISubroutineType(types: !14920)
!14920 = !{null, !14921, !2410}
!14921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2446, size: 32)
!14922 = !{!14917, !14923, !14924}
!14923 = !DILocalVariable(name: "thread", arg: 2, scope: !14918, file: !2518, line: 182, type: !2410)
!14924 = !DILocalVariable(name: "t", scope: !14918, file: !2518, line: 184, type: !2410)
!14925 = !DILocation(line: 0, scope: !14918, inlinedAt: !14926)
!14926 = distinct !DILocation(line: 229, column: 2, scope: !14911, inlinedAt: !14914)
!14927 = !DILocation(line: 186, column: 2, scope: !14928, inlinedAt: !14926)
!14928 = distinct !DILexicalBlock(scope: !14929, file: !2518, line: 186, column: 2)
!14929 = distinct !DILexicalBlock(scope: !14918, file: !2518, line: 186, column: 2)
!14930 = !DILocation(line: 186, column: 2, scope: !14929, inlinedAt: !14926)
!14931 = !DILocation(line: 186, column: 2, scope: !14932, inlinedAt: !14926)
!14932 = distinct !DILexicalBlock(scope: !14928, file: !2518, line: 186, column: 2)
!14933 = !DILocation(line: 188, column: 2, scope: !14934, inlinedAt: !14926)
!14934 = distinct !DILexicalBlock(scope: !14918, file: !2518, line: 188, column: 2)
!14935 = !DILocation(line: 188, column: 2, scope: !14936, inlinedAt: !14926)
!14936 = distinct !DILexicalBlock(scope: !14934, file: !2518, line: 188, column: 2)
!14937 = !DILocation(line: 0, scope: !14934, inlinedAt: !14926)
!14938 = !DILocation(line: 189, column: 7, scope: !14939, inlinedAt: !14926)
!14939 = distinct !DILexicalBlock(scope: !14940, file: !2518, line: 189, column: 7)
!14940 = distinct !DILexicalBlock(scope: !14936, file: !2518, line: 188, column: 56)
!14941 = !DILocation(line: 189, column: 35, scope: !14939, inlinedAt: !14926)
!14942 = !DILocation(line: 189, column: 7, scope: !14940, inlinedAt: !14926)
!14943 = !DILocation(line: 191, column: 21, scope: !14944, inlinedAt: !14926)
!14944 = distinct !DILexicalBlock(scope: !14939, file: !2518, line: 189, column: 40)
!14945 = !DILocation(line: 190, column: 4, scope: !14944, inlinedAt: !14926)
!14946 = !DILocation(line: 192, column: 4, scope: !14944, inlinedAt: !14926)
!14947 = distinct !{!14947, !14933, !14948}
!14948 = !DILocation(line: 194, column: 2, scope: !14934, inlinedAt: !14926)
!14949 = !DILocation(line: 196, column: 37, scope: !14918, inlinedAt: !14926)
!14950 = !DILocation(line: 196, column: 2, scope: !14918, inlinedAt: !14926)
!14951 = !DILocation(line: 197, column: 1, scope: !14918, inlinedAt: !14926)
!14952 = !DILocation(line: 399, column: 25, scope: !14879)
!14953 = !DILocation(line: 399, column: 22, scope: !14879)
!14954 = !DILocation(line: 399, column: 2, scope: !14879)
!14955 = !DILocation(line: 400, column: 1, scope: !14879)
!14956 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !13487, file: !13487, line: 136, type: !14836, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !14957)
!14957 = !{!14958}
!14958 = !DILocalVariable(name: "thread", arg: 1, scope: !14956, file: !13487, line: 136, type: !2410)
!14959 = !DILocation(line: 0, scope: !14956)
!14960 = !DILocation(line: 138, column: 9, scope: !14956)
!14961 = !DILocation(line: 138, column: 2, scope: !14956)
!14962 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2518, file: !2518, line: 1137, type: !14919, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !14963)
!14963 = !{!14964, !14965}
!14964 = !DILocalVariable(name: "pq", arg: 1, scope: !14962, file: !2518, line: 1137, type: !14921)
!14965 = !DILocalVariable(name: "thread", arg: 2, scope: !14962, file: !2518, line: 1137, type: !2410)
!14966 = !DILocation(line: 0, scope: !14962)
!14967 = !DILocation(line: 1139, column: 2, scope: !14968)
!14968 = distinct !DILexicalBlock(scope: !14969, file: !2518, line: 1139, column: 2)
!14969 = distinct !DILexicalBlock(scope: !14962, file: !2518, line: 1139, column: 2)
!14970 = !DILocation(line: 1139, column: 2, scope: !14969)
!14971 = !DILocation(line: 1139, column: 2, scope: !14972)
!14972 = distinct !DILexicalBlock(scope: !14968, file: !2518, line: 1139, column: 2)
!14973 = !DILocation(line: 1141, column: 33, scope: !14962)
!14974 = !DILocation(line: 1141, column: 2, scope: !14962)
!14975 = !DILocation(line: 1142, column: 1, scope: !14962)
!14976 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !13487, file: !13487, line: 83, type: !14836, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !14977)
!14977 = !{!14978}
!14978 = !DILocalVariable(name: "thread", arg: 1, scope: !14976, file: !13487, line: 83, type: !2410)
!14979 = !DILocation(line: 0, scope: !14976)
!14980 = !DILocation(line: 89, column: 16, scope: !14976)
!14981 = !DILocation(line: 89, column: 2, scope: !14976)
!14982 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !127, file: !127, line: 294, type: !14983, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !14985)
!14983 = !DISubroutineType(types: !14984)
!14984 = !{!2514, !14921}
!14985 = !{!14986}
!14986 = !DILocalVariable(name: "list", arg: 1, scope: !14982, file: !127, line: 294, type: !14921)
!14987 = !DILocation(line: 0, scope: !14982)
!14988 = !DILocation(line: 296, column: 9, scope: !14982)
!14989 = !DILocation(line: 296, column: 49, scope: !14982)
!14990 = !DILocation(line: 296, column: 2, scope: !14982)
!14991 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !127, file: !127, line: 443, type: !14992, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !14994)
!14992 = !DISubroutineType(types: !14993)
!14993 = !{null, !2514, !2514}
!14994 = !{!14995, !14996, !14997}
!14995 = !DILocalVariable(name: "successor", arg: 1, scope: !14991, file: !127, line: 443, type: !2514)
!14996 = !DILocalVariable(name: "node", arg: 2, scope: !14991, file: !127, line: 443, type: !2514)
!14997 = !DILocalVariable(name: "prev", scope: !14991, file: !127, line: 445, type: !14998)
!14998 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2514)
!14999 = !DILocation(line: 0, scope: !14991)
!15000 = !DILocation(line: 445, column: 39, scope: !14991)
!15001 = !DILocation(line: 447, column: 8, scope: !14991)
!15002 = !DILocation(line: 447, column: 13, scope: !14991)
!15003 = !DILocation(line: 448, column: 8, scope: !14991)
!15004 = !DILocation(line: 448, column: 13, scope: !14991)
!15005 = !DILocation(line: 449, column: 8, scope: !14991)
!15006 = !DILocation(line: 449, column: 13, scope: !14991)
!15007 = !DILocation(line: 450, column: 18, scope: !14991)
!15008 = !DILocation(line: 451, column: 1, scope: !14991)
!15009 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !127, file: !127, line: 341, type: !15010, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !15012)
!15010 = !DISubroutineType(types: !15011)
!15011 = !{!2514, !14921, !2514}
!15012 = !{!15013, !15014}
!15013 = !DILocalVariable(name: "list", arg: 1, scope: !15009, file: !127, line: 341, type: !14921)
!15014 = !DILocalVariable(name: "node", arg: 2, scope: !15009, file: !127, line: 342, type: !2514)
!15015 = !DILocation(line: 0, scope: !15009)
!15016 = !DILocation(line: 344, column: 15, scope: !15009)
!15017 = !DILocation(line: 344, column: 9, scope: !15009)
!15018 = !DILocation(line: 344, column: 26, scope: !15009)
!15019 = !DILocation(line: 344, column: 2, scope: !15009)
!15020 = distinct !DISubprogram(name: "sys_dlist_append", scope: !127, file: !127, line: 404, type: !15021, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !15023)
!15021 = !DISubroutineType(types: !15022)
!15022 = !{null, !14921, !2514}
!15023 = !{!15024, !15025, !15026}
!15024 = !DILocalVariable(name: "list", arg: 1, scope: !15020, file: !127, line: 404, type: !14921)
!15025 = !DILocalVariable(name: "node", arg: 2, scope: !15020, file: !127, line: 404, type: !2514)
!15026 = !DILocalVariable(name: "tail", scope: !15020, file: !127, line: 406, type: !14998)
!15027 = !DILocation(line: 0, scope: !15020)
!15028 = !DILocation(line: 406, column: 34, scope: !15020)
!15029 = !DILocation(line: 408, column: 8, scope: !15020)
!15030 = !DILocation(line: 408, column: 13, scope: !15020)
!15031 = !DILocation(line: 409, column: 8, scope: !15020)
!15032 = !DILocation(line: 409, column: 13, scope: !15020)
!15033 = !DILocation(line: 411, column: 8, scope: !15020)
!15034 = !DILocation(line: 411, column: 13, scope: !15020)
!15035 = !DILocation(line: 412, column: 13, scope: !15020)
!15036 = !DILocation(line: 413, column: 1, scope: !15020)
!15037 = distinct !DISubprogram(name: "update_cache", scope: !2518, file: !2518, line: 559, type: !8426, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !15038)
!15038 = !{!15039, !15040}
!15039 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !15037, file: !2518, line: 559, type: !109)
!15040 = !DILocalVariable(name: "thread", scope: !15037, file: !2518, line: 562, type: !2410)
!15041 = !DILocation(line: 0, scope: !15037)
!15042 = !DILocation(line: 239, column: 9, scope: !15043, inlinedAt: !15046)
!15043 = distinct !DISubprogram(name: "runq_best", scope: !2518, file: !2518, line: 237, type: !15044, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !2106)
!15044 = !DISubroutineType(types: !15045)
!15045 = !{!2410}
!15046 = distinct !DILocation(line: 314, column: 28, scope: !15047, inlinedAt: !15050)
!15047 = distinct !DISubprogram(name: "next_up", scope: !2518, file: !2518, line: 312, type: !15044, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !15048)
!15048 = !{!15049}
!15049 = !DILocalVariable(name: "thread", scope: !15047, file: !2518, line: 314, type: !2410)
!15050 = distinct !DILocation(line: 562, column: 28, scope: !15037)
!15051 = !DILocation(line: 0, scope: !15047, inlinedAt: !15050)
!15052 = !DILocation(line: 340, column: 17, scope: !15047, inlinedAt: !15050)
!15053 = !DILocation(line: 340, column: 9, scope: !15047, inlinedAt: !15050)
!15054 = !DILocalVariable(name: "thread", arg: 1, scope: !15055, file: !2518, line: 127, type: !2410)
!15055 = distinct !DISubprogram(name: "should_preempt", scope: !2518, file: !2518, line: 127, type: !15056, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !15058)
!15056 = !DISubroutineType(types: !15057)
!15057 = !{!347, !2410, !109}
!15058 = !{!15054, !15059}
!15059 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !15055, file: !2518, line: 128, type: !109)
!15060 = !DILocation(line: 0, scope: !15055, inlinedAt: !15061)
!15061 = distinct !DILocation(line: 564, column: 6, scope: !15062)
!15062 = distinct !DILexicalBlock(scope: !15037, file: !2518, line: 564, column: 6)
!15063 = !DILocation(line: 133, column: 17, scope: !15064, inlinedAt: !15061)
!15064 = distinct !DILexicalBlock(scope: !15055, file: !2518, line: 133, column: 6)
!15065 = !DILocation(line: 0, scope: !15062)
!15066 = !DILocation(line: 133, column: 6, scope: !15055, inlinedAt: !15061)
!15067 = !DILocation(line: 137, column: 2, scope: !15068, inlinedAt: !15061)
!15068 = distinct !DILexicalBlock(scope: !15069, file: !2518, line: 137, column: 2)
!15069 = distinct !DILexicalBlock(scope: !15055, file: !2518, line: 137, column: 2)
!15070 = !DILocation(line: 137, column: 2, scope: !15069, inlinedAt: !15061)
!15071 = !DILocation(line: 137, column: 2, scope: !15072, inlinedAt: !15061)
!15072 = distinct !DILexicalBlock(scope: !15068, file: !2518, line: 137, column: 2)
!15073 = !DILocation(line: 140, column: 6, scope: !15074, inlinedAt: !15061)
!15074 = distinct !DILexicalBlock(scope: !15055, file: !2518, line: 140, column: 6)
!15075 = !DILocation(line: 140, column: 6, scope: !15055, inlinedAt: !15061)
!15076 = !DILocation(line: 150, column: 9, scope: !15077, inlinedAt: !15061)
!15077 = distinct !DILexicalBlock(scope: !15055, file: !2518, line: 149, column: 6)
!15078 = !DILocation(line: 149, column: 6, scope: !15055, inlinedAt: !15061)
!15079 = !DILocation(line: 157, column: 6, scope: !15080, inlinedAt: !15061)
!15080 = distinct !DILexicalBlock(scope: !15055, file: !2518, line: 157, column: 6)
!15081 = !DILocation(line: 564, column: 6, scope: !15037)
!15082 = !DILocation(line: 566, column: 14, scope: !15083)
!15083 = distinct !DILexicalBlock(scope: !15084, file: !2518, line: 566, column: 7)
!15084 = distinct !DILexicalBlock(scope: !15062, file: !2518, line: 564, column: 42)
!15085 = !DILocation(line: 566, column: 7, scope: !15084)
!15086 = !DILocation(line: 567, column: 4, scope: !15087)
!15087 = distinct !DILexicalBlock(scope: !15083, file: !2518, line: 566, column: 27)
!15088 = !DILocation(line: 568, column: 3, scope: !15087)
!15089 = !DILocation(line: 585, column: 1, scope: !15037)
!15090 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2518, file: !2518, line: 1144, type: !15091, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !15093)
!15091 = !DISubroutineType(types: !15092)
!15092 = !{!2410, !14921}
!15093 = !{!15094, !15095, !15096}
!15094 = !DILocalVariable(name: "pq", arg: 1, scope: !15090, file: !2518, line: 1144, type: !14921)
!15095 = !DILocalVariable(name: "thread", scope: !15090, file: !2518, line: 1146, type: !2410)
!15096 = !DILocalVariable(name: "n", scope: !15090, file: !2518, line: 1147, type: !2514)
!15097 = !DILocation(line: 0, scope: !15090)
!15098 = !DILocation(line: 1147, column: 19, scope: !15090)
!15099 = !DILocation(line: 1152, column: 2, scope: !15090)
!15100 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !13487, file: !13487, line: 115, type: !14836, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !15101)
!15101 = !{!15102}
!15102 = !DILocalVariable(name: "thread", arg: 1, scope: !15100, file: !13487, line: 115, type: !2410)
!15103 = !DILocation(line: 0, scope: !15100)
!15104 = !DILocation(line: 117, column: 46, scope: !15100)
!15105 = !DILocation(line: 117, column: 10, scope: !15100)
!15106 = !DILocation(line: 117, column: 9, scope: !15100)
!15107 = !DILocation(line: 117, column: 2, scope: !15100)
!15108 = distinct !DISubprogram(name: "is_preempt", scope: !2518, file: !2518, line: 62, type: !14671, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !15109)
!15109 = !{!15110}
!15110 = !DILocalVariable(name: "thread", arg: 1, scope: !15108, file: !2518, line: 62, type: !2410)
!15111 = !DILocation(line: 0, scope: !15108)
!15112 = !DILocation(line: 65, column: 22, scope: !15108)
!15113 = !DILocation(line: 65, column: 30, scope: !15108)
!15114 = !DILocation(line: 65, column: 2, scope: !15108)
!15115 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13916, file: !13916, line: 35, type: !15116, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !15120)
!15116 = !DISubroutineType(types: !15117)
!15117 = !{!347, !15118}
!15118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15119, size: 32)
!15119 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2461)
!15120 = !{!15121}
!15121 = !DILocalVariable(name: "to", arg: 1, scope: !15115, file: !13916, line: 35, type: !15118)
!15122 = !DILocation(line: 0, scope: !15115)
!15123 = !DILocation(line: 37, column: 35, scope: !15115)
!15124 = !DILocation(line: 37, column: 10, scope: !15115)
!15125 = !DILocation(line: 37, column: 9, scope: !15115)
!15126 = !DILocation(line: 37, column: 2, scope: !15115)
!15127 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !127, file: !127, line: 225, type: !15128, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !15132)
!15128 = !DISubroutineType(types: !15129)
!15129 = !{!347, !15130}
!15130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15131, size: 32)
!15131 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2420)
!15132 = !{!15133}
!15133 = !DILocalVariable(name: "node", arg: 1, scope: !15127, file: !127, line: 225, type: !15130)
!15134 = !DILocation(line: 0, scope: !15127)
!15135 = !DILocation(line: 227, column: 15, scope: !15127)
!15136 = !DILocation(line: 227, column: 20, scope: !15127)
!15137 = !DILocation(line: 227, column: 2, scope: !15127)
!15138 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !127, file: !127, line: 325, type: !15010, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !15139)
!15139 = !{!15140, !15141}
!15140 = !DILocalVariable(name: "list", arg: 1, scope: !15138, file: !127, line: 325, type: !14921)
!15141 = !DILocalVariable(name: "node", arg: 2, scope: !15138, file: !127, line: 326, type: !2514)
!15142 = !DILocation(line: 0, scope: !15138)
!15143 = !DILocation(line: 328, column: 24, scope: !15138)
!15144 = !DILocation(line: 328, column: 15, scope: !15138)
!15145 = !DILocation(line: 328, column: 9, scope: !15138)
!15146 = !DILocation(line: 328, column: 45, scope: !15138)
!15147 = !DILocation(line: 328, column: 2, scope: !15138)
!15148 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !127, file: !127, line: 266, type: !15149, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !15151)
!15149 = !DISubroutineType(types: !15150)
!15150 = !{!347, !14921}
!15151 = !{!15152}
!15152 = !DILocalVariable(name: "list", arg: 1, scope: !15148, file: !127, line: 266, type: !14921)
!15153 = !DILocation(line: 0, scope: !15148)
!15154 = !DILocation(line: 268, column: 15, scope: !15148)
!15155 = !DILocation(line: 268, column: 20, scope: !15148)
!15156 = !DILocation(line: 268, column: 2, scope: !15148)
!15157 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !127, file: !127, line: 496, type: !15158, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !15160)
!15158 = !DISubroutineType(types: !15159)
!15159 = !{null, !2514}
!15160 = !{!15161, !15162, !15163}
!15161 = !DILocalVariable(name: "node", arg: 1, scope: !15157, file: !127, line: 496, type: !2514)
!15162 = !DILocalVariable(name: "prev", scope: !15157, file: !127, line: 498, type: !14998)
!15163 = !DILocalVariable(name: "next", scope: !15157, file: !127, line: 499, type: !14998)
!15164 = !DILocation(line: 0, scope: !15157)
!15165 = !DILocation(line: 498, column: 34, scope: !15157)
!15166 = !DILocation(line: 499, column: 34, scope: !15157)
!15167 = !DILocation(line: 501, column: 8, scope: !15157)
!15168 = !DILocation(line: 501, column: 13, scope: !15157)
!15169 = !DILocation(line: 502, column: 8, scope: !15157)
!15170 = !DILocation(line: 502, column: 13, scope: !15157)
!15171 = !DILocation(line: 503, column: 2, scope: !15157)
!15172 = !DILocation(line: 504, column: 1, scope: !15157)
!15173 = distinct !DISubprogram(name: "sys_dnode_init", scope: !127, file: !127, line: 211, type: !15158, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !15174)
!15174 = !{!15175}
!15175 = !DILocalVariable(name: "node", arg: 1, scope: !15173, file: !127, line: 211, type: !2514)
!15176 = !DILocation(line: 0, scope: !15173)
!15177 = !DILocation(line: 213, column: 8, scope: !15173)
!15178 = !DILocation(line: 213, column: 13, scope: !15173)
!15179 = !DILocation(line: 214, column: 8, scope: !15173)
!15180 = !DILocation(line: 214, column: 13, scope: !15173)
!15181 = !DILocation(line: 215, column: 1, scope: !15173)
!15182 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !13487, file: !13487, line: 131, type: !15183, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !15185)
!15183 = !DISubroutineType(types: !15184)
!15184 = !{!347, !2410, !110}
!15185 = !{!15186, !15187}
!15186 = !DILocalVariable(name: "thread", arg: 1, scope: !15182, file: !13487, line: 131, type: !2410)
!15187 = !DILocalVariable(name: "state", arg: 2, scope: !15182, file: !13487, line: 131, type: !110)
!15188 = !DILocation(line: 0, scope: !15182)
!15189 = !DILocation(line: 133, column: 23, scope: !15182)
!15190 = !DILocation(line: 133, column: 10, scope: !15182)
!15191 = !DILocation(line: 133, column: 36, scope: !15182)
!15192 = !DILocation(line: 133, column: 45, scope: !15182)
!15193 = !DILocation(line: 133, column: 2, scope: !15182)
!15194 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !13487, file: !13487, line: 211, type: !14485, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !15195)
!15195 = !{!15196, !15197}
!15196 = !DILocalVariable(name: "prio", arg: 1, scope: !15194, file: !13487, line: 211, type: !109)
!15197 = !DILocalVariable(name: "test_prio", arg: 2, scope: !15194, file: !13487, line: 211, type: !109)
!15198 = !DILocation(line: 0, scope: !15194)
!15199 = !DILocation(line: 213, column: 9, scope: !15194)
!15200 = !DILocation(line: 213, column: 2, scope: !15194)
!15201 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !13487, file: !13487, line: 206, type: !14485, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !15202)
!15202 = !{!15203, !15204}
!15203 = !DILocalVariable(name: "prio1", arg: 1, scope: !15201, file: !13487, line: 206, type: !109)
!15204 = !DILocalVariable(name: "prio2", arg: 2, scope: !15201, file: !13487, line: 206, type: !109)
!15205 = !DILocation(line: 0, scope: !15201)
!15206 = !DILocation(line: 208, column: 15, scope: !15201)
!15207 = !DILocation(line: 208, column: 2, scope: !15201)
!15208 = distinct !DISubprogram(name: "z_ready_thread", scope: !2518, file: !2518, line: 635, type: !14653, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !15209)
!15209 = !{!15210, !15211, !15213}
!15210 = !DILocalVariable(name: "thread", arg: 1, scope: !15208, file: !2518, line: 635, type: !2410)
!15211 = !DILocalVariable(name: "__i", scope: !15212, file: !2518, line: 637, type: !14687)
!15212 = distinct !DILexicalBlock(scope: !15208, file: !2518, line: 637, column: 2)
!15213 = !DILocalVariable(name: "__key", scope: !15212, file: !2518, line: 637, type: !14687)
!15214 = !DILocation(line: 0, scope: !15208)
!15215 = !DILocation(line: 0, scope: !15212)
!15216 = !DILocation(line: 0, scope: !14695, inlinedAt: !15217)
!15217 = distinct !DILocation(line: 637, column: 2, scope: !15212)
!15218 = !DILocation(line: 55, column: 2, scope: !14704, inlinedAt: !15219)
!15219 = distinct !DILocation(line: 145, column: 10, scope: !14695, inlinedAt: !15217)
!15220 = !DILocation(line: 0, scope: !14704, inlinedAt: !15219)
!15221 = !DILocation(line: 148, column: 2, scope: !14712, inlinedAt: !15217)
!15222 = !DILocation(line: 148, column: 2, scope: !14713, inlinedAt: !15217)
!15223 = !DILocation(line: 148, column: 2, scope: !14716, inlinedAt: !15217)
!15224 = !DILocation(line: 160, column: 2, scope: !14695, inlinedAt: !15217)
!15225 = !DILocation(line: 639, column: 4, scope: !15226)
!15226 = distinct !DILexicalBlock(scope: !15227, file: !2518, line: 638, column: 41)
!15227 = distinct !DILexicalBlock(scope: !15228, file: !2518, line: 638, column: 7)
!15228 = distinct !DILexicalBlock(scope: !15229, file: !2518, line: 637, column: 26)
!15229 = distinct !DILexicalBlock(scope: !15212, file: !2518, line: 637, column: 2)
!15230 = !DILocation(line: 0, scope: !14729, inlinedAt: !15231)
!15231 = distinct !DILocation(line: 637, column: 2, scope: !15229)
!15232 = !DILocation(line: 194, column: 2, scope: !14737, inlinedAt: !15231)
!15233 = !DILocation(line: 194, column: 2, scope: !14738, inlinedAt: !15231)
!15234 = !DILocation(line: 194, column: 2, scope: !14741, inlinedAt: !15231)
!15235 = !DILocation(line: 0, scope: !14743, inlinedAt: !15236)
!15236 = distinct !DILocation(line: 215, column: 2, scope: !14729, inlinedAt: !15231)
!15237 = !DILocation(line: 95, column: 2, scope: !14743, inlinedAt: !15236)
!15238 = !DILocation(line: 642, column: 1, scope: !15208)
!15239 = distinct !DISubprogram(name: "ready_thread", scope: !2518, file: !2518, line: 617, type: !14653, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !15240)
!15240 = !{!15241}
!15241 = !DILocalVariable(name: "thread", arg: 1, scope: !15239, file: !2518, line: 617, type: !2410)
!15242 = !DILocation(line: 0, scope: !15239)
!15243 = !DILocation(line: 626, column: 7, scope: !15244)
!15244 = distinct !DILexicalBlock(scope: !15239, file: !2518, line: 626, column: 6)
!15245 = !DILocation(line: 626, column: 34, scope: !15244)
!15246 = !DILocation(line: 626, column: 37, scope: !15244)
!15247 = !DILocation(line: 626, column: 6, scope: !15239)
!15248 = !DILocation(line: 0, scope: !14904, inlinedAt: !15249)
!15249 = distinct !DILocation(line: 629, column: 3, scope: !15250)
!15250 = distinct !DILexicalBlock(scope: !15244, file: !2518, line: 626, column: 64)
!15251 = !DILocation(line: 252, column: 15, scope: !14904, inlinedAt: !15249)
!15252 = !DILocation(line: 252, column: 28, scope: !14904, inlinedAt: !15249)
!15253 = !DILocation(line: 0, scope: !14911, inlinedAt: !15254)
!15254 = distinct !DILocation(line: 254, column: 3, scope: !14915, inlinedAt: !15249)
!15255 = !DILocation(line: 0, scope: !14918, inlinedAt: !15256)
!15256 = distinct !DILocation(line: 229, column: 2, scope: !14911, inlinedAt: !15254)
!15257 = !DILocation(line: 186, column: 2, scope: !14928, inlinedAt: !15256)
!15258 = !DILocation(line: 186, column: 2, scope: !14929, inlinedAt: !15256)
!15259 = !DILocation(line: 186, column: 2, scope: !14932, inlinedAt: !15256)
!15260 = !DILocation(line: 188, column: 2, scope: !14934, inlinedAt: !15256)
!15261 = !DILocation(line: 188, column: 2, scope: !14936, inlinedAt: !15256)
!15262 = !DILocation(line: 0, scope: !14934, inlinedAt: !15256)
!15263 = !DILocation(line: 189, column: 7, scope: !14939, inlinedAt: !15256)
!15264 = !DILocation(line: 189, column: 35, scope: !14939, inlinedAt: !15256)
!15265 = !DILocation(line: 189, column: 7, scope: !14940, inlinedAt: !15256)
!15266 = !DILocation(line: 191, column: 21, scope: !14944, inlinedAt: !15256)
!15267 = !DILocation(line: 190, column: 4, scope: !14944, inlinedAt: !15256)
!15268 = !DILocation(line: 192, column: 4, scope: !14944, inlinedAt: !15256)
!15269 = distinct !{!15269, !15260, !15270}
!15270 = !DILocation(line: 194, column: 2, scope: !14934, inlinedAt: !15256)
!15271 = !DILocation(line: 196, column: 37, scope: !14918, inlinedAt: !15256)
!15272 = !DILocation(line: 196, column: 2, scope: !14918, inlinedAt: !15256)
!15273 = !DILocation(line: 197, column: 1, scope: !14918, inlinedAt: !15256)
!15274 = !DILocation(line: 630, column: 3, scope: !15250)
!15275 = !DILocation(line: 632, column: 2, scope: !15250)
!15276 = !DILocation(line: 633, column: 1, scope: !15239)
!15277 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !13487, file: !13487, line: 120, type: !14836, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !15278)
!15278 = !{!15279}
!15279 = !DILocalVariable(name: "thread", arg: 1, scope: !15277, file: !13487, line: 120, type: !2410)
!15280 = !DILocation(line: 0, scope: !15277)
!15281 = !DILocation(line: 122, column: 12, scope: !15277)
!15282 = !DILocation(line: 122, column: 62, scope: !15277)
!15283 = !DILocation(line: 123, column: 4, scope: !15277)
!15284 = !DILocation(line: 122, column: 2, scope: !15277)
!15285 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2518, file: !2518, line: 644, type: !14653, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !15286)
!15286 = !{!15287, !15288, !15290}
!15287 = !DILocalVariable(name: "thread", arg: 1, scope: !15285, file: !2518, line: 644, type: !2410)
!15288 = !DILocalVariable(name: "__i", scope: !15289, file: !2518, line: 646, type: !14687)
!15289 = distinct !DILexicalBlock(scope: !15285, file: !2518, line: 646, column: 2)
!15290 = !DILocalVariable(name: "__key", scope: !15289, file: !2518, line: 646, type: !14687)
!15291 = !DILocation(line: 0, scope: !15285)
!15292 = !DILocation(line: 0, scope: !15289)
!15293 = !DILocation(line: 0, scope: !14695, inlinedAt: !15294)
!15294 = distinct !DILocation(line: 646, column: 2, scope: !15289)
!15295 = !DILocation(line: 55, column: 2, scope: !14704, inlinedAt: !15296)
!15296 = distinct !DILocation(line: 145, column: 10, scope: !14695, inlinedAt: !15294)
!15297 = !DILocation(line: 0, scope: !14704, inlinedAt: !15296)
!15298 = !DILocation(line: 148, column: 2, scope: !14712, inlinedAt: !15294)
!15299 = !DILocation(line: 148, column: 2, scope: !14713, inlinedAt: !15294)
!15300 = !DILocation(line: 148, column: 2, scope: !14716, inlinedAt: !15294)
!15301 = !DILocation(line: 160, column: 2, scope: !14695, inlinedAt: !15294)
!15302 = !DILocation(line: 647, column: 3, scope: !15303)
!15303 = distinct !DILexicalBlock(scope: !15304, file: !2518, line: 646, column: 26)
!15304 = distinct !DILexicalBlock(scope: !15289, file: !2518, line: 646, column: 2)
!15305 = !DILocation(line: 0, scope: !14729, inlinedAt: !15306)
!15306 = distinct !DILocation(line: 646, column: 2, scope: !15304)
!15307 = !DILocation(line: 194, column: 2, scope: !14737, inlinedAt: !15306)
!15308 = !DILocation(line: 194, column: 2, scope: !14738, inlinedAt: !15306)
!15309 = !DILocation(line: 194, column: 2, scope: !14741, inlinedAt: !15306)
!15310 = !DILocation(line: 0, scope: !14743, inlinedAt: !15311)
!15311 = distinct !DILocation(line: 215, column: 2, scope: !14729, inlinedAt: !15306)
!15312 = !DILocation(line: 95, column: 2, scope: !14743, inlinedAt: !15311)
!15313 = !DILocation(line: 649, column: 1, scope: !15285)
!15314 = distinct !DISubprogram(name: "z_sched_start", scope: !2518, file: !2518, line: 651, type: !14653, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !15315)
!15315 = !{!15316, !15317}
!15316 = !DILocalVariable(name: "thread", arg: 1, scope: !15314, file: !2518, line: 651, type: !2410)
!15317 = !DILocalVariable(name: "key", scope: !15314, file: !2518, line: 653, type: !14687)
!15318 = !DILocation(line: 0, scope: !15314)
!15319 = !DILocation(line: 0, scope: !14695, inlinedAt: !15320)
!15320 = distinct !DILocation(line: 653, column: 25, scope: !15314)
!15321 = !DILocation(line: 55, column: 2, scope: !14704, inlinedAt: !15322)
!15322 = distinct !DILocation(line: 145, column: 10, scope: !14695, inlinedAt: !15320)
!15323 = !DILocation(line: 0, scope: !14704, inlinedAt: !15322)
!15324 = !DILocation(line: 148, column: 2, scope: !14712, inlinedAt: !15320)
!15325 = !DILocation(line: 148, column: 2, scope: !14713, inlinedAt: !15320)
!15326 = !DILocation(line: 148, column: 2, scope: !14716, inlinedAt: !15320)
!15327 = !DILocation(line: 160, column: 2, scope: !14695, inlinedAt: !15320)
!15328 = !DILocation(line: 655, column: 6, scope: !15329)
!15329 = distinct !DILexicalBlock(scope: !15314, file: !2518, line: 655, column: 6)
!15330 = !DILocation(line: 655, column: 6, scope: !15314)
!15331 = !DILocation(line: 0, scope: !14729, inlinedAt: !15332)
!15332 = distinct !DILocation(line: 656, column: 3, scope: !15333)
!15333 = distinct !DILexicalBlock(scope: !15329, file: !2518, line: 655, column: 36)
!15334 = !DILocation(line: 194, column: 2, scope: !14737, inlinedAt: !15332)
!15335 = !DILocation(line: 194, column: 2, scope: !14738, inlinedAt: !15332)
!15336 = !DILocation(line: 194, column: 2, scope: !14741, inlinedAt: !15332)
!15337 = !DILocation(line: 0, scope: !14743, inlinedAt: !15338)
!15338 = distinct !DILocation(line: 215, column: 2, scope: !14729, inlinedAt: !15332)
!15339 = !DILocation(line: 95, column: 2, scope: !14743, inlinedAt: !15338)
!15340 = !DILocation(line: 657, column: 3, scope: !15333)
!15341 = !DILocation(line: 660, column: 2, scope: !15314)
!15342 = !DILocation(line: 661, column: 2, scope: !15314)
!15343 = !DILocation(line: 662, column: 2, scope: !15314)
!15344 = !DILocation(line: 663, column: 1, scope: !15314)
!15345 = distinct !DISubprogram(name: "z_has_thread_started", scope: !13487, file: !13487, line: 126, type: !14836, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !15346)
!15346 = !{!15347}
!15347 = !DILocalVariable(name: "thread", arg: 1, scope: !15345, file: !13487, line: 126, type: !2410)
!15348 = !DILocation(line: 0, scope: !15345)
!15349 = !DILocation(line: 128, column: 23, scope: !15345)
!15350 = !DILocation(line: 128, column: 36, scope: !15345)
!15351 = !DILocation(line: 128, column: 56, scope: !15345)
!15352 = !DILocation(line: 128, column: 2, scope: !15345)
!15353 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13487, file: !13487, line: 155, type: !14653, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !15354)
!15354 = !{!15355}
!15355 = !DILocalVariable(name: "thread", arg: 1, scope: !15353, file: !13487, line: 155, type: !2410)
!15356 = !DILocation(line: 0, scope: !15353)
!15357 = !DILocation(line: 157, column: 15, scope: !15353)
!15358 = !DILocation(line: 157, column: 28, scope: !15353)
!15359 = !DILocation(line: 158, column: 1, scope: !15353)
!15360 = distinct !DISubprogram(name: "z_reschedule", scope: !2518, file: !2518, line: 967, type: !14730, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !15361)
!15361 = !{!15362, !15363}
!15362 = !DILocalVariable(name: "lock", arg: 1, scope: !15360, file: !2518, line: 967, type: !14698)
!15363 = !DILocalVariable(name: "key", arg: 2, scope: !15360, file: !2518, line: 967, type: !14687)
!15364 = !DILocation(line: 0, scope: !15360)
!15365 = !DILocation(line: 969, column: 6, scope: !15366)
!15366 = distinct !DILexicalBlock(scope: !15360, file: !2518, line: 969, column: 6)
!15367 = !DILocation(line: 969, column: 23, scope: !15366)
!15368 = !DILocation(line: 969, column: 26, scope: !15366)
!15369 = !DILocation(line: 969, column: 6, scope: !15360)
!15370 = !DILocalVariable(name: "key", arg: 2, scope: !15371, file: !13591, line: 193, type: !14687)
!15371 = distinct !DISubprogram(name: "z_swap", scope: !13591, file: !13591, line: 193, type: !15372, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !15374)
!15372 = !DISubroutineType(types: !15373)
!15373 = !{!109, !14698, !14687}
!15374 = !{!15375, !15370}
!15375 = !DILocalVariable(name: "lock", arg: 1, scope: !15371, file: !13591, line: 193, type: !14698)
!15376 = !DILocation(line: 0, scope: !15371, inlinedAt: !15377)
!15377 = distinct !DILocation(line: 970, column: 3, scope: !15378)
!15378 = distinct !DILexicalBlock(scope: !15366, file: !2518, line: 969, column: 39)
!15379 = !DILocalVariable(name: "l", arg: 1, scope: !15380, file: !251, line: 221, type: !14698)
!15380 = distinct !DISubprogram(name: "k_spin_release", scope: !251, file: !251, line: 221, type: !15381, scopeLine: 222, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !15383)
!15381 = !DISubroutineType(types: !15382)
!15382 = !{null, !14698}
!15383 = !{!15379}
!15384 = !DILocation(line: 0, scope: !15380, inlinedAt: !15385)
!15385 = distinct !DILocation(line: 195, column: 2, scope: !15371, inlinedAt: !15377)
!15386 = !DILocation(line: 225, column: 2, scope: !15387, inlinedAt: !15385)
!15387 = distinct !DILexicalBlock(scope: !15388, file: !251, line: 225, column: 2)
!15388 = distinct !DILexicalBlock(scope: !15380, file: !251, line: 225, column: 2)
!15389 = !DILocation(line: 225, column: 2, scope: !15388, inlinedAt: !15385)
!15390 = !DILocation(line: 225, column: 2, scope: !15391, inlinedAt: !15385)
!15391 = distinct !DILexicalBlock(scope: !15387, file: !251, line: 225, column: 2)
!15392 = !DILocation(line: 196, column: 9, scope: !15371, inlinedAt: !15377)
!15393 = !DILocation(line: 971, column: 2, scope: !15378)
!15394 = !DILocation(line: 0, scope: !14729, inlinedAt: !15395)
!15395 = distinct !DILocation(line: 972, column: 3, scope: !15396)
!15396 = distinct !DILexicalBlock(scope: !15366, file: !2518, line: 971, column: 9)
!15397 = !DILocation(line: 194, column: 2, scope: !14737, inlinedAt: !15395)
!15398 = !DILocation(line: 194, column: 2, scope: !14738, inlinedAt: !15395)
!15399 = !DILocation(line: 194, column: 2, scope: !14741, inlinedAt: !15395)
!15400 = !DILocation(line: 0, scope: !14743, inlinedAt: !15401)
!15401 = distinct !DILocation(line: 215, column: 2, scope: !14729, inlinedAt: !15395)
!15402 = !DILocation(line: 95, column: 2, scope: !14743, inlinedAt: !15401)
!15403 = !DILocation(line: 975, column: 1, scope: !15360)
!15404 = distinct !DISubprogram(name: "resched", scope: !2518, file: !2518, line: 940, type: !15405, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !15407)
!15405 = !DISubroutineType(types: !15406)
!15406 = !{!347, !110}
!15407 = !{!15408}
!15408 = !DILocalVariable(name: "key", arg: 1, scope: !15404, file: !2518, line: 940, type: !110)
!15409 = !DILocation(line: 0, scope: !15404)
!15410 = !DILocalVariable(name: "key", arg: 1, scope: !15411, file: !6165, line: 112, type: !32)
!15411 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !6165, file: !6165, line: 112, type: !15412, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !15414)
!15412 = !DISubroutineType(types: !15413)
!15413 = !{!347, !32}
!15414 = !{!15410}
!15415 = !DILocation(line: 0, scope: !15411, inlinedAt: !15416)
!15416 = distinct !DILocation(line: 946, column: 9, scope: !15404)
!15417 = !DILocation(line: 115, column: 13, scope: !15411, inlinedAt: !15416)
!15418 = !DILocation(line: 946, column: 32, scope: !15404)
!15419 = !DILocation(line: 1031, column: 3, scope: !15420, inlinedAt: !15423)
!15420 = distinct !DISubprogram(name: "__get_IPSR", scope: !6486, file: !6486, line: 1027, type: !6573, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !15421)
!15421 = !{!15422}
!15422 = !DILocalVariable(name: "result", scope: !15420, file: !6486, line: 1029, type: !110)
!15423 = distinct !DILocation(line: 48, column: 10, scope: !15424, inlinedAt: !15425)
!15424 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7538, file: !7538, line: 46, type: !7539, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !2106)
!15425 = distinct !DILocation(line: 946, column: 36, scope: !15404)
!15426 = !{i64 3772525}
!15427 = !DILocation(line: 0, scope: !15420, inlinedAt: !15423)
!15428 = !DILocation(line: 48, column: 9, scope: !15424, inlinedAt: !15425)
!15429 = !DILocation(line: 946, column: 2, scope: !15404)
!15430 = distinct !DISubprogram(name: "need_swap", scope: !2518, file: !2518, line: 953, type: !7539, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !15431)
!15431 = !{!15432}
!15432 = !DILocalVariable(name: "new_thread", scope: !15430, file: !2518, line: 959, type: !2410)
!15433 = !DILocation(line: 962, column: 31, scope: !15430)
!15434 = !DILocation(line: 0, scope: !15430)
!15435 = !DILocation(line: 963, column: 23, scope: !15430)
!15436 = !DILocation(line: 963, column: 20, scope: !15430)
!15437 = !DILocation(line: 963, column: 2, scope: !15430)
!15438 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !13591, file: !13591, line: 181, type: !6496, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !15439)
!15439 = !{!15440, !15441}
!15440 = !DILocalVariable(name: "key", arg: 1, scope: !15438, file: !13591, line: 181, type: !32)
!15441 = !DILocalVariable(name: "ret", scope: !15438, file: !13591, line: 183, type: !109)
!15442 = !DILocation(line: 0, scope: !15438)
!15443 = !DILocation(line: 185, column: 8, scope: !15438)
!15444 = !DILocation(line: 186, column: 2, scope: !15438)
!15445 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2518, file: !2518, line: 665, type: !14653, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !15446)
!15446 = !{!15447, !15448, !15450}
!15447 = !DILocalVariable(name: "thread", arg: 1, scope: !15445, file: !2518, line: 665, type: !2410)
!15448 = !DILocalVariable(name: "__i", scope: !15449, file: !2518, line: 671, type: !14687)
!15449 = distinct !DILexicalBlock(scope: !15445, file: !2518, line: 671, column: 2)
!15450 = !DILocalVariable(name: "__key", scope: !15449, file: !2518, line: 671, type: !14687)
!15451 = !DILocation(line: 0, scope: !15445)
!15452 = !DILocation(line: 669, column: 8, scope: !15445)
!15453 = !DILocation(line: 0, scope: !15449)
!15454 = !DILocation(line: 0, scope: !14695, inlinedAt: !15455)
!15455 = distinct !DILocation(line: 671, column: 2, scope: !15449)
!15456 = !DILocation(line: 55, column: 2, scope: !14704, inlinedAt: !15457)
!15457 = distinct !DILocation(line: 145, column: 10, scope: !14695, inlinedAt: !15455)
!15458 = !DILocation(line: 0, scope: !14704, inlinedAt: !15457)
!15459 = !DILocation(line: 148, column: 2, scope: !14712, inlinedAt: !15455)
!15460 = !DILocation(line: 148, column: 2, scope: !14713, inlinedAt: !15455)
!15461 = !DILocation(line: 148, column: 2, scope: !14716, inlinedAt: !15455)
!15462 = !DILocation(line: 160, column: 2, scope: !14695, inlinedAt: !15455)
!15463 = !DILocation(line: 672, column: 7, scope: !15464)
!15464 = distinct !DILexicalBlock(scope: !15465, file: !2518, line: 672, column: 7)
!15465 = distinct !DILexicalBlock(scope: !15466, file: !2518, line: 671, column: 26)
!15466 = distinct !DILexicalBlock(scope: !15449, file: !2518, line: 671, column: 2)
!15467 = !DILocation(line: 672, column: 7, scope: !15465)
!15468 = !DILocation(line: 0, scope: !14887, inlinedAt: !15469)
!15469 = distinct !DILocation(line: 673, column: 4, scope: !15470)
!15470 = distinct !DILexicalBlock(scope: !15464, file: !2518, line: 672, column: 35)
!15471 = !DILocation(line: 266, column: 15, scope: !14887, inlinedAt: !15469)
!15472 = !DILocation(line: 266, column: 28, scope: !14887, inlinedAt: !15469)
!15473 = !DILocation(line: 0, scope: !14895, inlinedAt: !15474)
!15474 = distinct !DILocation(line: 268, column: 3, scope: !14899, inlinedAt: !15469)
!15475 = !DILocation(line: 234, column: 2, scope: !14895, inlinedAt: !15474)
!15476 = !DILocation(line: 674, column: 3, scope: !15470)
!15477 = !DILocation(line: 675, column: 3, scope: !15465)
!15478 = !DILocation(line: 676, column: 26, scope: !15465)
!15479 = !DILocation(line: 676, column: 23, scope: !15465)
!15480 = !DILocation(line: 676, column: 3, scope: !15465)
!15481 = !DILocation(line: 0, scope: !14729, inlinedAt: !15482)
!15482 = distinct !DILocation(line: 671, column: 2, scope: !15466)
!15483 = !DILocation(line: 194, column: 2, scope: !14737, inlinedAt: !15482)
!15484 = !DILocation(line: 194, column: 2, scope: !14738, inlinedAt: !15482)
!15485 = !DILocation(line: 194, column: 2, scope: !14741, inlinedAt: !15482)
!15486 = !DILocation(line: 0, scope: !14743, inlinedAt: !15487)
!15487 = distinct !DILocation(line: 215, column: 2, scope: !14729, inlinedAt: !15482)
!15488 = !DILocation(line: 95, column: 2, scope: !14743, inlinedAt: !15487)
!15489 = !DILocation(line: 679, column: 16, scope: !15490)
!15490 = distinct !DILexicalBlock(scope: !15445, file: !2518, line: 679, column: 6)
!15491 = !DILocation(line: 679, column: 13, scope: !15490)
!15492 = !DILocation(line: 679, column: 6, scope: !15445)
!15493 = !DILocation(line: 680, column: 3, scope: !15494)
!15494 = distinct !DILexicalBlock(scope: !15490, file: !2518, line: 679, column: 26)
!15495 = !DILocation(line: 681, column: 2, scope: !15494)
!15496 = !DILocation(line: 684, column: 1, scope: !15445)
!15497 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !13916, file: !13916, line: 52, type: !14671, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !15498)
!15498 = !{!15499}
!15499 = !DILocalVariable(name: "thread", arg: 1, scope: !15497, file: !13916, line: 52, type: !2410)
!15500 = !DILocation(line: 0, scope: !15497)
!15501 = !DILocation(line: 54, column: 39, scope: !15497)
!15502 = !DILocation(line: 54, column: 9, scope: !15497)
!15503 = !DILocation(line: 54, column: 2, scope: !15497)
!15504 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !13487, file: !13487, line: 141, type: !14653, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !15505)
!15505 = !{!15506}
!15506 = !DILocalVariable(name: "thread", arg: 1, scope: !15504, file: !13487, line: 141, type: !2410)
!15507 = !DILocation(line: 0, scope: !15504)
!15508 = !DILocation(line: 143, column: 15, scope: !15504)
!15509 = !DILocation(line: 143, column: 28, scope: !15504)
!15510 = !DILocation(line: 146, column: 1, scope: !15504)
!15511 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !13487, file: !13487, line: 73, type: !3155, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !2106)
!15512 = !DILocation(line: 55, column: 2, scope: !14704, inlinedAt: !15513)
!15513 = distinct !DILocation(line: 75, column: 30, scope: !15511)
!15514 = !DILocation(line: 0, scope: !14704, inlinedAt: !15513)
!15515 = !DILocation(line: 75, column: 9, scope: !15511)
!15516 = !DILocation(line: 76, column: 1, scope: !15511)
!15517 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2518, file: !2518, line: 977, type: !6583, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !15518)
!15518 = !{!15519}
!15519 = !DILocalVariable(name: "key", arg: 1, scope: !15517, file: !2518, line: 977, type: !110)
!15520 = !DILocation(line: 0, scope: !15517)
!15521 = !DILocation(line: 979, column: 6, scope: !15522)
!15522 = distinct !DILexicalBlock(scope: !15517, file: !2518, line: 979, column: 6)
!15523 = !DILocation(line: 979, column: 6, scope: !15517)
!15524 = !DILocation(line: 980, column: 3, scope: !15525)
!15525 = distinct !DILexicalBlock(scope: !15522, file: !2518, line: 979, column: 20)
!15526 = !DILocation(line: 981, column: 2, scope: !15525)
!15527 = !DILocation(line: 0, scope: !14743, inlinedAt: !15528)
!15528 = distinct !DILocation(line: 982, column: 3, scope: !15529)
!15529 = distinct !DILexicalBlock(scope: !15522, file: !2518, line: 981, column: 9)
!15530 = !DILocation(line: 95, column: 2, scope: !14743, inlinedAt: !15528)
!15531 = !DILocation(line: 985, column: 1, scope: !15517)
!15532 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2518, file: !2518, line: 695, type: !14653, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !15533)
!15533 = !{!15534, !15535}
!15534 = !DILocalVariable(name: "thread", arg: 1, scope: !15532, file: !2518, line: 695, type: !2410)
!15535 = !DILocalVariable(name: "key", scope: !15532, file: !2518, line: 699, type: !14687)
!15536 = !DILocation(line: 0, scope: !15532)
!15537 = !DILocation(line: 0, scope: !14695, inlinedAt: !15538)
!15538 = distinct !DILocation(line: 699, column: 25, scope: !15532)
!15539 = !DILocation(line: 55, column: 2, scope: !14704, inlinedAt: !15540)
!15540 = distinct !DILocation(line: 145, column: 10, scope: !14695, inlinedAt: !15538)
!15541 = !DILocation(line: 0, scope: !14704, inlinedAt: !15540)
!15542 = !DILocation(line: 148, column: 2, scope: !14712, inlinedAt: !15538)
!15543 = !DILocation(line: 148, column: 2, scope: !14713, inlinedAt: !15538)
!15544 = !DILocation(line: 148, column: 2, scope: !14716, inlinedAt: !15538)
!15545 = !DILocation(line: 160, column: 2, scope: !14695, inlinedAt: !15538)
!15546 = !DILocation(line: 702, column: 7, scope: !15547)
!15547 = distinct !DILexicalBlock(scope: !15532, file: !2518, line: 702, column: 6)
!15548 = !DILocation(line: 702, column: 6, scope: !15532)
!15549 = !DILocation(line: 0, scope: !14729, inlinedAt: !15550)
!15550 = distinct !DILocation(line: 703, column: 3, scope: !15551)
!15551 = distinct !DILexicalBlock(scope: !15547, file: !2518, line: 702, column: 38)
!15552 = !DILocation(line: 194, column: 2, scope: !14737, inlinedAt: !15550)
!15553 = !DILocation(line: 194, column: 2, scope: !14738, inlinedAt: !15550)
!15554 = !DILocation(line: 194, column: 2, scope: !14741, inlinedAt: !15550)
!15555 = !DILocation(line: 0, scope: !14743, inlinedAt: !15556)
!15556 = distinct !DILocation(line: 215, column: 2, scope: !14729, inlinedAt: !15550)
!15557 = !DILocation(line: 95, column: 2, scope: !14743, inlinedAt: !15556)
!15558 = !DILocation(line: 704, column: 3, scope: !15551)
!15559 = !DILocation(line: 707, column: 2, scope: !15532)
!15560 = !DILocation(line: 708, column: 2, scope: !15532)
!15561 = !DILocation(line: 710, column: 2, scope: !15532)
!15562 = !DILocation(line: 713, column: 1, scope: !15532)
!15563 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !13487, file: !13487, line: 96, type: !14836, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !15564)
!15564 = !{!15565}
!15565 = !DILocalVariable(name: "thread", arg: 1, scope: !15563, file: !13487, line: 96, type: !2410)
!15566 = !DILocation(line: 0, scope: !15563)
!15567 = !DILocation(line: 98, column: 23, scope: !15563)
!15568 = !DILocation(line: 98, column: 36, scope: !15563)
!15569 = !DILocation(line: 98, column: 57, scope: !15563)
!15570 = !DILocation(line: 98, column: 2, scope: !15563)
!15571 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !13487, file: !13487, line: 148, type: !14653, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !15572)
!15572 = !{!15573}
!15573 = !DILocalVariable(name: "thread", arg: 1, scope: !15571, file: !13487, line: 148, type: !2410)
!15574 = !DILocation(line: 0, scope: !15571)
!15575 = !DILocation(line: 150, column: 15, scope: !15571)
!15576 = !DILocation(line: 150, column: 28, scope: !15571)
!15577 = !DILocation(line: 153, column: 1, scope: !15571)
!15578 = distinct !DISubprogram(name: "z_pend_thread", scope: !2518, file: !2518, line: 770, type: !15579, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !15585)
!15579 = !DISubroutineType(types: !15580)
!15580 = !{null, !2410, !2441, !15581}
!15581 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !15582)
!15582 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !15583)
!15583 = !{!15584}
!15584 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15582, file: !104, line: 66, baseType: !103, size: 64)
!15585 = !{!15586, !15587, !15588, !15589, !15591}
!15586 = !DILocalVariable(name: "thread", arg: 1, scope: !15578, file: !2518, line: 770, type: !2410)
!15587 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15578, file: !2518, line: 770, type: !2441)
!15588 = !DILocalVariable(name: "timeout", arg: 3, scope: !15578, file: !2518, line: 771, type: !15581)
!15589 = !DILocalVariable(name: "__i", scope: !15590, file: !2518, line: 774, type: !14687)
!15590 = distinct !DILexicalBlock(scope: !15578, file: !2518, line: 774, column: 2)
!15591 = !DILocalVariable(name: "__key", scope: !15590, file: !2518, line: 774, type: !14687)
!15592 = !DILocation(line: 0, scope: !15578)
!15593 = !DILocation(line: 773, column: 2, scope: !15594)
!15594 = distinct !DILexicalBlock(scope: !15595, file: !2518, line: 773, column: 2)
!15595 = distinct !DILexicalBlock(scope: !15578, file: !2518, line: 773, column: 2)
!15596 = !DILocation(line: 773, column: 2, scope: !15595)
!15597 = !DILocation(line: 773, column: 2, scope: !15598)
!15598 = distinct !DILexicalBlock(scope: !15594, file: !2518, line: 773, column: 2)
!15599 = !DILocation(line: 0, scope: !15590)
!15600 = !DILocation(line: 0, scope: !14695, inlinedAt: !15601)
!15601 = distinct !DILocation(line: 774, column: 2, scope: !15590)
!15602 = !DILocation(line: 55, column: 2, scope: !14704, inlinedAt: !15603)
!15603 = distinct !DILocation(line: 145, column: 10, scope: !14695, inlinedAt: !15601)
!15604 = !DILocation(line: 0, scope: !14704, inlinedAt: !15603)
!15605 = !DILocation(line: 148, column: 2, scope: !14712, inlinedAt: !15601)
!15606 = !DILocation(line: 148, column: 2, scope: !14713, inlinedAt: !15601)
!15607 = !DILocation(line: 148, column: 2, scope: !14716, inlinedAt: !15601)
!15608 = !DILocation(line: 160, column: 2, scope: !14695, inlinedAt: !15601)
!15609 = !DILocation(line: 775, column: 3, scope: !15610)
!15610 = distinct !DILexicalBlock(scope: !15611, file: !2518, line: 774, column: 26)
!15611 = distinct !DILexicalBlock(scope: !15590, file: !2518, line: 774, column: 2)
!15612 = !DILocation(line: 0, scope: !14729, inlinedAt: !15613)
!15613 = distinct !DILocation(line: 774, column: 2, scope: !15611)
!15614 = !DILocation(line: 194, column: 2, scope: !14737, inlinedAt: !15613)
!15615 = !DILocation(line: 194, column: 2, scope: !14738, inlinedAt: !15613)
!15616 = !DILocation(line: 194, column: 2, scope: !14741, inlinedAt: !15613)
!15617 = !DILocation(line: 0, scope: !14743, inlinedAt: !15618)
!15618 = distinct !DILocation(line: 215, column: 2, scope: !14729, inlinedAt: !15613)
!15619 = !DILocation(line: 95, column: 2, scope: !14743, inlinedAt: !15618)
!15620 = !DILocation(line: 777, column: 1, scope: !15578)
!15621 = distinct !DISubprogram(name: "is_thread_dummy", scope: !2518, file: !2518, line: 79, type: !14836, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !15622)
!15622 = !{!15623}
!15623 = !DILocalVariable(name: "thread", arg: 1, scope: !15621, file: !2518, line: 79, type: !2410)
!15624 = !DILocation(line: 0, scope: !15621)
!15625 = !DILocation(line: 81, column: 23, scope: !15621)
!15626 = !DILocation(line: 81, column: 36, scope: !15621)
!15627 = !DILocation(line: 81, column: 53, scope: !15621)
!15628 = !DILocation(line: 81, column: 2, scope: !15621)
!15629 = distinct !DISubprogram(name: "pend_locked", scope: !2518, file: !2518, line: 760, type: !15579, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !15630)
!15630 = !{!15631, !15632, !15633}
!15631 = !DILocalVariable(name: "thread", arg: 1, scope: !15629, file: !2518, line: 760, type: !2410)
!15632 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15629, file: !2518, line: 760, type: !2441)
!15633 = !DILocalVariable(name: "timeout", arg: 3, scope: !15629, file: !2518, line: 761, type: !15581)
!15634 = !DILocation(line: 0, scope: !15629)
!15635 = !DILocation(line: 766, column: 2, scope: !15629)
!15636 = !DILocation(line: 767, column: 2, scope: !15629)
!15637 = !DILocation(line: 768, column: 1, scope: !15629)
!15638 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2518, file: !2518, line: 740, type: !15639, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !15641)
!15639 = !DISubroutineType(types: !15640)
!15640 = !{null, !2410, !2441}
!15641 = !{!15642, !15643}
!15642 = !DILocalVariable(name: "thread", arg: 1, scope: !15638, file: !2518, line: 740, type: !2410)
!15643 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15638, file: !2518, line: 740, type: !2441)
!15644 = !DILocation(line: 0, scope: !15638)
!15645 = !DILocation(line: 742, column: 2, scope: !15638)
!15646 = !DILocation(line: 743, column: 2, scope: !15638)
!15647 = !DILocation(line: 747, column: 13, scope: !15648)
!15648 = distinct !DILexicalBlock(scope: !15638, file: !2518, line: 747, column: 6)
!15649 = !DILocation(line: 747, column: 6, scope: !15638)
!15650 = !DILocation(line: 748, column: 16, scope: !15651)
!15651 = distinct !DILexicalBlock(scope: !15648, file: !2518, line: 747, column: 22)
!15652 = !DILocation(line: 748, column: 26, scope: !15651)
!15653 = !DILocation(line: 749, column: 28, scope: !15651)
!15654 = !DILocation(line: 0, scope: !14918, inlinedAt: !15655)
!15655 = distinct !DILocation(line: 749, column: 3, scope: !15651)
!15656 = !DILocation(line: 186, column: 2, scope: !14928, inlinedAt: !15655)
!15657 = !DILocation(line: 186, column: 2, scope: !14929, inlinedAt: !15655)
!15658 = !DILocation(line: 186, column: 2, scope: !14932, inlinedAt: !15655)
!15659 = !DILocation(line: 188, column: 2, scope: !14934, inlinedAt: !15655)
!15660 = !DILocation(line: 188, column: 2, scope: !14936, inlinedAt: !15655)
!15661 = !DILocation(line: 0, scope: !14934, inlinedAt: !15655)
!15662 = !DILocation(line: 189, column: 7, scope: !14939, inlinedAt: !15655)
!15663 = !DILocation(line: 189, column: 35, scope: !14939, inlinedAt: !15655)
!15664 = !DILocation(line: 189, column: 7, scope: !14940, inlinedAt: !15655)
!15665 = !DILocation(line: 191, column: 21, scope: !14944, inlinedAt: !15655)
!15666 = !DILocation(line: 190, column: 4, scope: !14944, inlinedAt: !15655)
!15667 = !DILocation(line: 192, column: 4, scope: !14944, inlinedAt: !15655)
!15668 = distinct !{!15668, !15659, !15669}
!15669 = !DILocation(line: 194, column: 2, scope: !14934, inlinedAt: !15655)
!15670 = !DILocation(line: 196, column: 37, scope: !14918, inlinedAt: !15655)
!15671 = !DILocation(line: 196, column: 2, scope: !14918, inlinedAt: !15655)
!15672 = !DILocation(line: 197, column: 1, scope: !14918, inlinedAt: !15655)
!15673 = !DILocation(line: 751, column: 1, scope: !15638)
!15674 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2518, file: !2518, line: 753, type: !15675, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !15677)
!15675 = !DISubroutineType(types: !15676)
!15676 = !{null, !2410, !15581}
!15677 = !{!15678, !15679}
!15678 = !DILocalVariable(name: "thread", arg: 1, scope: !15674, file: !2518, line: 753, type: !2410)
!15679 = !DILocalVariable(name: "timeout", arg: 2, scope: !15674, file: !2518, line: 753, type: !15581)
!15680 = !DILocation(line: 0, scope: !15674)
!15681 = !DILocation(line: 755, column: 7, scope: !15682)
!15682 = distinct !DILexicalBlock(scope: !15674, file: !2518, line: 755, column: 6)
!15683 = !DILocation(line: 755, column: 6, scope: !15674)
!15684 = !DILocation(line: 756, column: 3, scope: !15685)
!15685 = distinct !DILexicalBlock(scope: !15682, file: !2518, line: 755, column: 41)
!15686 = !DILocation(line: 757, column: 2, scope: !15685)
!15687 = !DILocation(line: 758, column: 1, scope: !15674)
!15688 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13916, file: !13916, line: 47, type: !15675, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !15689)
!15689 = !{!15690, !15691}
!15690 = !DILocalVariable(name: "thread", arg: 1, scope: !15688, file: !13916, line: 47, type: !2410)
!15691 = !DILocalVariable(name: "ticks", arg: 2, scope: !15688, file: !13916, line: 47, type: !15581)
!15692 = !DILocation(line: 0, scope: !15688)
!15693 = !DILocation(line: 49, column: 30, scope: !15688)
!15694 = !DILocation(line: 49, column: 2, scope: !15688)
!15695 = !DILocation(line: 50, column: 1, scope: !15688)
!15696 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2518, file: !2518, line: 795, type: !2467, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !15697)
!15697 = !{!15698, !15699, !15700, !15702, !15703}
!15698 = !DILocalVariable(name: "timeout", arg: 1, scope: !15696, file: !2518, line: 795, type: !2469)
!15699 = !DILocalVariable(name: "thread", scope: !15696, file: !2518, line: 797, type: !2410)
!15700 = !DILocalVariable(name: "__i", scope: !15701, file: !2518, line: 800, type: !14687)
!15701 = distinct !DILexicalBlock(scope: !15696, file: !2518, line: 800, column: 2)
!15702 = !DILocalVariable(name: "__key", scope: !15701, file: !2518, line: 800, type: !14687)
!15703 = !DILocalVariable(name: "killed", scope: !15704, file: !2518, line: 801, type: !347)
!15704 = distinct !DILexicalBlock(scope: !15705, file: !2518, line: 800, column: 26)
!15705 = distinct !DILexicalBlock(scope: !15701, file: !2518, line: 800, column: 2)
!15706 = !DILocation(line: 0, scope: !15696)
!15707 = !DILocation(line: 797, column: 28, scope: !15696)
!15708 = !DILocation(line: 0, scope: !15701)
!15709 = !DILocation(line: 0, scope: !14695, inlinedAt: !15710)
!15710 = distinct !DILocation(line: 800, column: 2, scope: !15701)
!15711 = !DILocation(line: 55, column: 2, scope: !14704, inlinedAt: !15712)
!15712 = distinct !DILocation(line: 145, column: 10, scope: !14695, inlinedAt: !15710)
!15713 = !DILocation(line: 0, scope: !14704, inlinedAt: !15712)
!15714 = !DILocation(line: 148, column: 2, scope: !14712, inlinedAt: !15710)
!15715 = !DILocation(line: 148, column: 2, scope: !14713, inlinedAt: !15710)
!15716 = !DILocation(line: 148, column: 2, scope: !14716, inlinedAt: !15710)
!15717 = !DILocation(line: 160, column: 2, scope: !14695, inlinedAt: !15710)
!15718 = !DILocation(line: 801, column: 27, scope: !15704)
!15719 = !DILocation(line: 801, column: 32, scope: !15704)
!15720 = !DILocation(line: 801, column: 61, scope: !15704)
!15721 = !DILocation(line: 0, scope: !15704)
!15722 = !DILocation(line: 804, column: 7, scope: !15704)
!15723 = !DILocation(line: 805, column: 21, scope: !15724)
!15724 = distinct !DILexicalBlock(scope: !15725, file: !2518, line: 805, column: 8)
!15725 = distinct !DILexicalBlock(scope: !15726, file: !2518, line: 804, column: 16)
!15726 = distinct !DILexicalBlock(scope: !15704, file: !2518, line: 804, column: 7)
!15727 = !DILocation(line: 805, column: 31, scope: !15724)
!15728 = !DILocation(line: 805, column: 8, scope: !15725)
!15729 = !DILocation(line: 806, column: 5, scope: !15730)
!15730 = distinct !DILexicalBlock(scope: !15724, file: !2518, line: 805, column: 40)
!15731 = !DILocation(line: 807, column: 4, scope: !15730)
!15732 = !DILocation(line: 808, column: 4, scope: !15725)
!15733 = !DILocation(line: 809, column: 4, scope: !15725)
!15734 = !DILocation(line: 810, column: 4, scope: !15725)
!15735 = !DILocation(line: 811, column: 3, scope: !15725)
!15736 = !DILocation(line: 0, scope: !14729, inlinedAt: !15737)
!15737 = distinct !DILocation(line: 800, column: 2, scope: !15705)
!15738 = !DILocation(line: 194, column: 2, scope: !14737, inlinedAt: !15737)
!15739 = !DILocation(line: 194, column: 2, scope: !14738, inlinedAt: !15737)
!15740 = !DILocation(line: 194, column: 2, scope: !14741, inlinedAt: !15737)
!15741 = !DILocation(line: 0, scope: !14743, inlinedAt: !15742)
!15742 = distinct !DILocation(line: 215, column: 2, scope: !14729, inlinedAt: !15737)
!15743 = !DILocation(line: 95, column: 2, scope: !14743, inlinedAt: !15742)
!15744 = !DILocation(line: 813, column: 1, scope: !15696)
!15745 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2518, file: !2518, line: 779, type: !14653, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !15746)
!15746 = !{!15747}
!15747 = !DILocalVariable(name: "thread", arg: 1, scope: !15745, file: !2518, line: 779, type: !2410)
!15748 = !DILocation(line: 0, scope: !15745)
!15749 = !DILocation(line: 781, column: 21, scope: !15745)
!15750 = !DILocation(line: 781, column: 2, scope: !15745)
!15751 = !DILocation(line: 782, column: 2, scope: !15745)
!15752 = !DILocation(line: 783, column: 15, scope: !15745)
!15753 = !DILocation(line: 783, column: 25, scope: !15745)
!15754 = !DILocation(line: 784, column: 1, scope: !15745)
!15755 = distinct !DISubprogram(name: "pended_on_thread", scope: !2518, file: !2518, line: 724, type: !15756, scopeLine: 725, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !15758)
!15756 = !DISubroutineType(types: !15757)
!15757 = !{!2441, !2410}
!15758 = !{!15759}
!15759 = !DILocalVariable(name: "thread", arg: 1, scope: !15755, file: !2518, line: 724, type: !2410)
!15760 = !DILocation(line: 0, scope: !15755)
!15761 = !DILocation(line: 726, column: 2, scope: !15762)
!15762 = distinct !DILexicalBlock(scope: !15763, file: !2518, line: 726, column: 2)
!15763 = distinct !DILexicalBlock(scope: !15755, file: !2518, line: 726, column: 2)
!15764 = !DILocation(line: 726, column: 2, scope: !15763)
!15765 = !DILocation(line: 726, column: 2, scope: !15766)
!15766 = distinct !DILexicalBlock(scope: !15762, file: !2518, line: 726, column: 2)
!15767 = !DILocation(line: 728, column: 2, scope: !15755)
!15768 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !13487, file: !13487, line: 165, type: !14653, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !15769)
!15769 = !{!15770}
!15770 = !DILocalVariable(name: "thread", arg: 1, scope: !15768, file: !13487, line: 165, type: !2410)
!15771 = !DILocation(line: 0, scope: !15768)
!15772 = !DILocation(line: 167, column: 15, scope: !15768)
!15773 = !DILocation(line: 167, column: 28, scope: !15768)
!15774 = !DILocation(line: 168, column: 1, scope: !15768)
!15775 = distinct !DISubprogram(name: "unready_thread", scope: !2518, file: !2518, line: 731, type: !14653, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !15776)
!15776 = !{!15777}
!15777 = !DILocalVariable(name: "thread", arg: 1, scope: !15775, file: !2518, line: 731, type: !2410)
!15778 = !DILocation(line: 0, scope: !15775)
!15779 = !DILocation(line: 733, column: 6, scope: !15780)
!15780 = distinct !DILexicalBlock(scope: !15775, file: !2518, line: 733, column: 6)
!15781 = !DILocation(line: 733, column: 6, scope: !15775)
!15782 = !DILocation(line: 0, scope: !14887, inlinedAt: !15783)
!15783 = distinct !DILocation(line: 734, column: 3, scope: !15784)
!15784 = distinct !DILexicalBlock(scope: !15780, file: !2518, line: 733, column: 34)
!15785 = !DILocation(line: 266, column: 15, scope: !14887, inlinedAt: !15783)
!15786 = !DILocation(line: 266, column: 28, scope: !14887, inlinedAt: !15783)
!15787 = !DILocation(line: 0, scope: !14895, inlinedAt: !15788)
!15788 = distinct !DILocation(line: 268, column: 3, scope: !14899, inlinedAt: !15783)
!15789 = !DILocation(line: 234, column: 2, scope: !14895, inlinedAt: !15788)
!15790 = !DILocation(line: 735, column: 2, scope: !15784)
!15791 = !DILocation(line: 736, column: 25, scope: !15775)
!15792 = !DILocation(line: 736, column: 22, scope: !15775)
!15793 = !DILocation(line: 736, column: 2, scope: !15775)
!15794 = !DILocation(line: 737, column: 1, scope: !15775)
!15795 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !13487, file: !13487, line: 160, type: !14653, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !15796)
!15796 = !{!15797}
!15797 = !DILocalVariable(name: "thread", arg: 1, scope: !15795, file: !13487, line: 160, type: !2410)
!15798 = !DILocation(line: 0, scope: !15795)
!15799 = !DILocation(line: 162, column: 15, scope: !15795)
!15800 = !DILocation(line: 162, column: 28, scope: !15795)
!15801 = !DILocation(line: 163, column: 1, scope: !15795)
!15802 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2518, file: !2518, line: 786, type: !14653, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !15803)
!15803 = !{!15804, !15805, !15807}
!15804 = !DILocalVariable(name: "thread", arg: 1, scope: !15802, file: !2518, line: 786, type: !2410)
!15805 = !DILocalVariable(name: "__i", scope: !15806, file: !2518, line: 788, type: !14687)
!15806 = distinct !DILexicalBlock(scope: !15802, file: !2518, line: 788, column: 2)
!15807 = !DILocalVariable(name: "__key", scope: !15806, file: !2518, line: 788, type: !14687)
!15808 = !DILocation(line: 0, scope: !15802)
!15809 = !DILocation(line: 0, scope: !15806)
!15810 = !DILocation(line: 0, scope: !14695, inlinedAt: !15811)
!15811 = distinct !DILocation(line: 788, column: 2, scope: !15806)
!15812 = !DILocation(line: 55, column: 2, scope: !14704, inlinedAt: !15813)
!15813 = distinct !DILocation(line: 145, column: 10, scope: !14695, inlinedAt: !15811)
!15814 = !DILocation(line: 0, scope: !14704, inlinedAt: !15813)
!15815 = !DILocation(line: 148, column: 2, scope: !14712, inlinedAt: !15811)
!15816 = !DILocation(line: 148, column: 2, scope: !14713, inlinedAt: !15811)
!15817 = !DILocation(line: 148, column: 2, scope: !14716, inlinedAt: !15811)
!15818 = !DILocation(line: 160, column: 2, scope: !14695, inlinedAt: !15811)
!15819 = !DILocation(line: 789, column: 3, scope: !15820)
!15820 = distinct !DILexicalBlock(scope: !15821, file: !2518, line: 788, column: 26)
!15821 = distinct !DILexicalBlock(scope: !15806, file: !2518, line: 788, column: 2)
!15822 = !DILocation(line: 0, scope: !14729, inlinedAt: !15823)
!15823 = distinct !DILocation(line: 788, column: 2, scope: !15821)
!15824 = !DILocation(line: 194, column: 2, scope: !14737, inlinedAt: !15823)
!15825 = !DILocation(line: 194, column: 2, scope: !14738, inlinedAt: !15823)
!15826 = !DILocation(line: 194, column: 2, scope: !14741, inlinedAt: !15823)
!15827 = !DILocation(line: 0, scope: !14743, inlinedAt: !15828)
!15828 = distinct !DILocation(line: 215, column: 2, scope: !14729, inlinedAt: !15823)
!15829 = !DILocation(line: 95, column: 2, scope: !14743, inlinedAt: !15828)
!15830 = !DILocation(line: 791, column: 1, scope: !15802)
!15831 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2518, file: !2518, line: 816, type: !15832, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !15834)
!15832 = !DISubroutineType(types: !15833)
!15833 = !{!109, !110, !2441, !15581}
!15834 = !{!15835, !15836, !15837, !15838, !15839, !15841}
!15835 = !DILocalVariable(name: "key", arg: 1, scope: !15831, file: !2518, line: 816, type: !110)
!15836 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15831, file: !2518, line: 816, type: !2441)
!15837 = !DILocalVariable(name: "timeout", arg: 3, scope: !15831, file: !2518, line: 816, type: !15581)
!15838 = !DILocalVariable(name: "ret", scope: !15831, file: !2518, line: 828, type: !109)
!15839 = !DILocalVariable(name: "__i", scope: !15840, file: !2518, line: 829, type: !14687)
!15840 = distinct !DILexicalBlock(scope: !15831, file: !2518, line: 829, column: 2)
!15841 = !DILocalVariable(name: "__key", scope: !15840, file: !2518, line: 829, type: !14687)
!15842 = !DILocation(line: 0, scope: !15831)
!15843 = !DILocation(line: 823, column: 14, scope: !15831)
!15844 = !DILocation(line: 823, column: 2, scope: !15831)
!15845 = !DILocation(line: 826, column: 20, scope: !15831)
!15846 = !DILocation(line: 826, column: 18, scope: !15831)
!15847 = !DILocation(line: 828, column: 12, scope: !15831)
!15848 = !DILocation(line: 0, scope: !15840)
!15849 = !DILocation(line: 0, scope: !14695, inlinedAt: !15850)
!15850 = distinct !DILocation(line: 829, column: 2, scope: !15840)
!15851 = !DILocation(line: 55, column: 2, scope: !14704, inlinedAt: !15852)
!15852 = distinct !DILocation(line: 145, column: 10, scope: !14695, inlinedAt: !15850)
!15853 = !DILocation(line: 0, scope: !14704, inlinedAt: !15852)
!15854 = !DILocation(line: 148, column: 2, scope: !14712, inlinedAt: !15850)
!15855 = !DILocation(line: 148, column: 2, scope: !14713, inlinedAt: !15850)
!15856 = !DILocation(line: 148, column: 2, scope: !14716, inlinedAt: !15850)
!15857 = !DILocation(line: 160, column: 2, scope: !14695, inlinedAt: !15850)
!15858 = !DILocation(line: 830, column: 7, scope: !15859)
!15859 = distinct !DILexicalBlock(scope: !15860, file: !2518, line: 830, column: 7)
!15860 = distinct !DILexicalBlock(scope: !15861, file: !2518, line: 829, column: 26)
!15861 = distinct !DILexicalBlock(scope: !15840, file: !2518, line: 829, column: 2)
!15862 = !DILocation(line: 830, column: 26, scope: !15859)
!15863 = !DILocation(line: 830, column: 23, scope: !15859)
!15864 = !DILocation(line: 830, column: 7, scope: !15860)
!15865 = !DILocation(line: 831, column: 20, scope: !15866)
!15866 = distinct !DILexicalBlock(scope: !15859, file: !2518, line: 830, column: 36)
!15867 = !DILocation(line: 832, column: 3, scope: !15866)
!15868 = !DILocation(line: 0, scope: !14729, inlinedAt: !15869)
!15869 = distinct !DILocation(line: 829, column: 2, scope: !15861)
!15870 = !DILocation(line: 194, column: 2, scope: !14737, inlinedAt: !15869)
!15871 = !DILocation(line: 194, column: 2, scope: !14738, inlinedAt: !15869)
!15872 = !DILocation(line: 194, column: 2, scope: !14741, inlinedAt: !15869)
!15873 = !DILocation(line: 0, scope: !14743, inlinedAt: !15874)
!15874 = distinct !DILocation(line: 215, column: 2, scope: !14729, inlinedAt: !15869)
!15875 = !DILocation(line: 95, column: 2, scope: !14743, inlinedAt: !15874)
!15876 = !DILocation(line: 834, column: 2, scope: !15831)
!15877 = distinct !DISubprogram(name: "z_pend_curr", scope: !2518, file: !2518, line: 840, type: !15878, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !15880)
!15878 = !DISubroutineType(types: !15879)
!15879 = !{!109, !14698, !14687, !2441, !15581}
!15880 = !{!15881, !15882, !15883, !15884}
!15881 = !DILocalVariable(name: "lock", arg: 1, scope: !15877, file: !2518, line: 840, type: !14698)
!15882 = !DILocalVariable(name: "key", arg: 2, scope: !15877, file: !2518, line: 840, type: !14687)
!15883 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15877, file: !2518, line: 841, type: !2441)
!15884 = !DILocalVariable(name: "timeout", arg: 4, scope: !15877, file: !2518, line: 841, type: !15581)
!15885 = !DILocation(line: 0, scope: !15877)
!15886 = !DILocation(line: 844, column: 20, scope: !15877)
!15887 = !DILocation(line: 844, column: 18, scope: !15877)
!15888 = !DILocation(line: 846, column: 2, scope: !15889)
!15889 = distinct !DILexicalBlock(scope: !15890, file: !2518, line: 846, column: 2)
!15890 = distinct !DILexicalBlock(scope: !15877, file: !2518, line: 846, column: 2)
!15891 = !DILocation(line: 846, column: 2, scope: !15890)
!15892 = !DILocation(line: 846, column: 2, scope: !15893)
!15893 = distinct !DILexicalBlock(scope: !15889, file: !2518, line: 846, column: 2)
!15894 = !DILocation(line: 0, scope: !14695, inlinedAt: !15895)
!15895 = distinct !DILocation(line: 856, column: 9, scope: !15877)
!15896 = !DILocation(line: 55, column: 2, scope: !14704, inlinedAt: !15897)
!15897 = distinct !DILocation(line: 145, column: 10, scope: !14695, inlinedAt: !15895)
!15898 = !DILocation(line: 0, scope: !14704, inlinedAt: !15897)
!15899 = !DILocation(line: 148, column: 2, scope: !14712, inlinedAt: !15895)
!15900 = !DILocation(line: 148, column: 2, scope: !14713, inlinedAt: !15895)
!15901 = !DILocation(line: 148, column: 2, scope: !14716, inlinedAt: !15895)
!15902 = !DILocation(line: 160, column: 2, scope: !14695, inlinedAt: !15895)
!15903 = !DILocation(line: 857, column: 14, scope: !15877)
!15904 = !DILocation(line: 857, column: 2, scope: !15877)
!15905 = !DILocation(line: 0, scope: !15380, inlinedAt: !15906)
!15906 = distinct !DILocation(line: 858, column: 2, scope: !15877)
!15907 = !DILocation(line: 225, column: 2, scope: !15387, inlinedAt: !15906)
!15908 = !DILocation(line: 225, column: 2, scope: !15388, inlinedAt: !15906)
!15909 = !DILocation(line: 225, column: 2, scope: !15391, inlinedAt: !15906)
!15910 = !DILocation(line: 0, scope: !15371, inlinedAt: !15911)
!15911 = distinct !DILocation(line: 859, column: 9, scope: !15877)
!15912 = !DILocation(line: 0, scope: !15380, inlinedAt: !15913)
!15913 = distinct !DILocation(line: 195, column: 2, scope: !15371, inlinedAt: !15911)
!15914 = !DILocation(line: 225, column: 2, scope: !15387, inlinedAt: !15913)
!15915 = !DILocation(line: 225, column: 2, scope: !15388, inlinedAt: !15913)
!15916 = !DILocation(line: 225, column: 2, scope: !15391, inlinedAt: !15913)
!15917 = !DILocation(line: 196, column: 9, scope: !15371, inlinedAt: !15911)
!15918 = !DILocation(line: 859, column: 2, scope: !15877)
!15919 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2518, file: !2518, line: 862, type: !15920, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !15922)
!15920 = !DISubroutineType(types: !15921)
!15921 = !{!2410, !2441}
!15922 = !{!15923, !15924, !15925, !15927}
!15923 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15919, file: !2518, line: 862, type: !2441)
!15924 = !DILocalVariable(name: "thread", scope: !15919, file: !2518, line: 864, type: !2410)
!15925 = !DILocalVariable(name: "__i", scope: !15926, file: !2518, line: 866, type: !14687)
!15926 = distinct !DILexicalBlock(scope: !15919, file: !2518, line: 866, column: 2)
!15927 = !DILocalVariable(name: "__key", scope: !15926, file: !2518, line: 866, type: !14687)
!15928 = !DILocation(line: 0, scope: !15919)
!15929 = !DILocation(line: 0, scope: !15926)
!15930 = !DILocation(line: 0, scope: !14695, inlinedAt: !15931)
!15931 = distinct !DILocation(line: 866, column: 2, scope: !15926)
!15932 = !DILocation(line: 55, column: 2, scope: !14704, inlinedAt: !15933)
!15933 = distinct !DILocation(line: 145, column: 10, scope: !14695, inlinedAt: !15931)
!15934 = !DILocation(line: 0, scope: !14704, inlinedAt: !15933)
!15935 = !DILocation(line: 148, column: 2, scope: !14712, inlinedAt: !15931)
!15936 = !DILocation(line: 148, column: 2, scope: !14713, inlinedAt: !15931)
!15937 = !DILocation(line: 148, column: 2, scope: !14716, inlinedAt: !15931)
!15938 = !DILocation(line: 160, column: 2, scope: !14695, inlinedAt: !15931)
!15939 = !DILocation(line: 867, column: 12, scope: !15940)
!15940 = distinct !DILexicalBlock(scope: !15941, file: !2518, line: 866, column: 26)
!15941 = distinct !DILexicalBlock(scope: !15926, file: !2518, line: 866, column: 2)
!15942 = !DILocation(line: 869, column: 14, scope: !15943)
!15943 = distinct !DILexicalBlock(scope: !15940, file: !2518, line: 869, column: 7)
!15944 = !DILocation(line: 869, column: 7, scope: !15940)
!15945 = !DILocation(line: 870, column: 4, scope: !15946)
!15946 = distinct !DILexicalBlock(scope: !15943, file: !2518, line: 869, column: 23)
!15947 = !DILocation(line: 871, column: 3, scope: !15946)
!15948 = !DILocation(line: 0, scope: !14729, inlinedAt: !15949)
!15949 = distinct !DILocation(line: 866, column: 2, scope: !15941)
!15950 = !DILocation(line: 194, column: 2, scope: !14737, inlinedAt: !15949)
!15951 = !DILocation(line: 194, column: 2, scope: !14738, inlinedAt: !15949)
!15952 = !DILocation(line: 194, column: 2, scope: !14741, inlinedAt: !15949)
!15953 = !DILocation(line: 0, scope: !14743, inlinedAt: !15954)
!15954 = distinct !DILocation(line: 215, column: 2, scope: !14729, inlinedAt: !15949)
!15955 = !DILocation(line: 95, column: 2, scope: !14743, inlinedAt: !15954)
!15956 = !DILocation(line: 874, column: 2, scope: !15919)
!15957 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2518, file: !2518, line: 877, type: !15920, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !15958)
!15958 = !{!15959, !15960, !15961, !15963}
!15959 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15957, file: !2518, line: 877, type: !2441)
!15960 = !DILocalVariable(name: "thread", scope: !15957, file: !2518, line: 879, type: !2410)
!15961 = !DILocalVariable(name: "__i", scope: !15962, file: !2518, line: 881, type: !14687)
!15962 = distinct !DILexicalBlock(scope: !15957, file: !2518, line: 881, column: 2)
!15963 = !DILocalVariable(name: "__key", scope: !15962, file: !2518, line: 881, type: !14687)
!15964 = !DILocation(line: 0, scope: !15957)
!15965 = !DILocation(line: 0, scope: !15962)
!15966 = !DILocation(line: 0, scope: !14695, inlinedAt: !15967)
!15967 = distinct !DILocation(line: 881, column: 2, scope: !15962)
!15968 = !DILocation(line: 55, column: 2, scope: !14704, inlinedAt: !15969)
!15969 = distinct !DILocation(line: 145, column: 10, scope: !14695, inlinedAt: !15967)
!15970 = !DILocation(line: 0, scope: !14704, inlinedAt: !15969)
!15971 = !DILocation(line: 148, column: 2, scope: !14712, inlinedAt: !15967)
!15972 = !DILocation(line: 148, column: 2, scope: !14713, inlinedAt: !15967)
!15973 = !DILocation(line: 148, column: 2, scope: !14716, inlinedAt: !15967)
!15974 = !DILocation(line: 160, column: 2, scope: !14695, inlinedAt: !15967)
!15975 = !DILocation(line: 882, column: 12, scope: !15976)
!15976 = distinct !DILexicalBlock(scope: !15977, file: !2518, line: 881, column: 26)
!15977 = distinct !DILexicalBlock(scope: !15962, file: !2518, line: 881, column: 2)
!15978 = !DILocation(line: 884, column: 14, scope: !15979)
!15979 = distinct !DILexicalBlock(scope: !15976, file: !2518, line: 884, column: 7)
!15980 = !DILocation(line: 884, column: 7, scope: !15976)
!15981 = !DILocation(line: 885, column: 4, scope: !15982)
!15982 = distinct !DILexicalBlock(scope: !15979, file: !2518, line: 884, column: 23)
!15983 = !DILocation(line: 886, column: 10, scope: !15982)
!15984 = !DILocation(line: 887, column: 3, scope: !15982)
!15985 = !DILocation(line: 0, scope: !14729, inlinedAt: !15986)
!15986 = distinct !DILocation(line: 881, column: 2, scope: !15977)
!15987 = !DILocation(line: 194, column: 2, scope: !14737, inlinedAt: !15986)
!15988 = !DILocation(line: 194, column: 2, scope: !14738, inlinedAt: !15986)
!15989 = !DILocation(line: 194, column: 2, scope: !14741, inlinedAt: !15986)
!15990 = !DILocation(line: 0, scope: !14743, inlinedAt: !15991)
!15991 = distinct !DILocation(line: 215, column: 2, scope: !14729, inlinedAt: !15986)
!15992 = !DILocation(line: 95, column: 2, scope: !14743, inlinedAt: !15991)
!15993 = !DILocation(line: 890, column: 2, scope: !15957)
!15994 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2518, file: !2518, line: 893, type: !14653, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !15995)
!15995 = !{!15996}
!15996 = !DILocalVariable(name: "thread", arg: 1, scope: !15994, file: !2518, line: 893, type: !2410)
!15997 = !DILocation(line: 0, scope: !15994)
!15998 = !DILocation(line: 0, scope: !15802, inlinedAt: !15999)
!15999 = distinct !DILocation(line: 895, column: 2, scope: !15994)
!16000 = !DILocation(line: 0, scope: !15806, inlinedAt: !15999)
!16001 = !DILocation(line: 0, scope: !14695, inlinedAt: !16002)
!16002 = distinct !DILocation(line: 788, column: 2, scope: !15806, inlinedAt: !15999)
!16003 = !DILocation(line: 55, column: 2, scope: !14704, inlinedAt: !16004)
!16004 = distinct !DILocation(line: 145, column: 10, scope: !14695, inlinedAt: !16002)
!16005 = !DILocation(line: 0, scope: !14704, inlinedAt: !16004)
!16006 = !DILocation(line: 148, column: 2, scope: !14712, inlinedAt: !16002)
!16007 = !DILocation(line: 148, column: 2, scope: !14713, inlinedAt: !16002)
!16008 = !DILocation(line: 148, column: 2, scope: !14716, inlinedAt: !16002)
!16009 = !DILocation(line: 160, column: 2, scope: !14695, inlinedAt: !16002)
!16010 = !DILocation(line: 789, column: 3, scope: !15820, inlinedAt: !15999)
!16011 = !DILocation(line: 0, scope: !14729, inlinedAt: !16012)
!16012 = distinct !DILocation(line: 788, column: 2, scope: !15821, inlinedAt: !15999)
!16013 = !DILocation(line: 194, column: 2, scope: !14737, inlinedAt: !16012)
!16014 = !DILocation(line: 194, column: 2, scope: !14738, inlinedAt: !16012)
!16015 = !DILocation(line: 194, column: 2, scope: !14741, inlinedAt: !16012)
!16016 = !DILocation(line: 0, scope: !14743, inlinedAt: !16017)
!16017 = distinct !DILocation(line: 215, column: 2, scope: !14729, inlinedAt: !16012)
!16018 = !DILocation(line: 95, column: 2, scope: !14743, inlinedAt: !16017)
!16019 = !DILocation(line: 896, column: 8, scope: !15994)
!16020 = !DILocation(line: 897, column: 1, scope: !15994)
!16021 = distinct !DISubprogram(name: "z_set_prio", scope: !2518, file: !2518, line: 902, type: !15056, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !16022)
!16022 = !{!16023, !16024, !16025, !16026, !16028}
!16023 = !DILocalVariable(name: "thread", arg: 1, scope: !16021, file: !2518, line: 902, type: !2410)
!16024 = !DILocalVariable(name: "prio", arg: 2, scope: !16021, file: !2518, line: 902, type: !109)
!16025 = !DILocalVariable(name: "need_sched", scope: !16021, file: !2518, line: 904, type: !347)
!16026 = !DILocalVariable(name: "__i", scope: !16027, file: !2518, line: 906, type: !14687)
!16027 = distinct !DILexicalBlock(scope: !16021, file: !2518, line: 906, column: 2)
!16028 = !DILocalVariable(name: "__key", scope: !16027, file: !2518, line: 906, type: !14687)
!16029 = !DILocation(line: 0, scope: !16021)
!16030 = !DILocation(line: 0, scope: !16027)
!16031 = !DILocation(line: 0, scope: !14695, inlinedAt: !16032)
!16032 = distinct !DILocation(line: 906, column: 2, scope: !16027)
!16033 = !DILocation(line: 55, column: 2, scope: !14704, inlinedAt: !16034)
!16034 = distinct !DILocation(line: 145, column: 10, scope: !14695, inlinedAt: !16032)
!16035 = !DILocation(line: 0, scope: !14704, inlinedAt: !16034)
!16036 = !DILocation(line: 148, column: 2, scope: !14712, inlinedAt: !16032)
!16037 = !DILocation(line: 148, column: 2, scope: !14713, inlinedAt: !16032)
!16038 = !DILocation(line: 148, column: 2, scope: !14716, inlinedAt: !16032)
!16039 = !DILocation(line: 160, column: 2, scope: !14695, inlinedAt: !16032)
!16040 = !DILocation(line: 907, column: 16, scope: !16041)
!16041 = distinct !DILexicalBlock(scope: !16042, file: !2518, line: 906, column: 26)
!16042 = distinct !DILexicalBlock(scope: !16027, file: !2518, line: 906, column: 2)
!16043 = !DILocation(line: 909, column: 7, scope: !16041)
!16044 = !DILocation(line: 0, scope: !14887, inlinedAt: !16045)
!16045 = distinct !DILocation(line: 912, column: 5, scope: !16046)
!16046 = distinct !DILexicalBlock(scope: !16047, file: !2518, line: 911, column: 63)
!16047 = distinct !DILexicalBlock(scope: !16048, file: !2518, line: 911, column: 8)
!16048 = distinct !DILexicalBlock(scope: !16049, file: !2518, line: 909, column: 19)
!16049 = distinct !DILexicalBlock(scope: !16041, file: !2518, line: 909, column: 7)
!16050 = !DILocation(line: 266, column: 28, scope: !14887, inlinedAt: !16045)
!16051 = !DILocation(line: 0, scope: !14895, inlinedAt: !16052)
!16052 = distinct !DILocation(line: 268, column: 3, scope: !14899, inlinedAt: !16045)
!16053 = !DILocation(line: 234, column: 2, scope: !14895, inlinedAt: !16052)
!16054 = !DILocation(line: 913, column: 23, scope: !16046)
!16055 = !DILocation(line: 0, scope: !14904, inlinedAt: !16056)
!16056 = distinct !DILocation(line: 914, column: 5, scope: !16046)
!16057 = !DILocation(line: 252, column: 28, scope: !14904, inlinedAt: !16056)
!16058 = !DILocation(line: 0, scope: !14911, inlinedAt: !16059)
!16059 = distinct !DILocation(line: 254, column: 3, scope: !14915, inlinedAt: !16056)
!16060 = !DILocation(line: 0, scope: !14918, inlinedAt: !16061)
!16061 = distinct !DILocation(line: 229, column: 2, scope: !14911, inlinedAt: !16059)
!16062 = !DILocation(line: 186, column: 2, scope: !14928, inlinedAt: !16061)
!16063 = !DILocation(line: 186, column: 2, scope: !14929, inlinedAt: !16061)
!16064 = !DILocation(line: 186, column: 2, scope: !14932, inlinedAt: !16061)
!16065 = !DILocation(line: 188, column: 2, scope: !14934, inlinedAt: !16061)
!16066 = !DILocation(line: 188, column: 2, scope: !14936, inlinedAt: !16061)
!16067 = !DILocation(line: 0, scope: !14934, inlinedAt: !16061)
!16068 = !DILocation(line: 189, column: 7, scope: !14939, inlinedAt: !16061)
!16069 = !DILocation(line: 189, column: 35, scope: !14939, inlinedAt: !16061)
!16070 = !DILocation(line: 189, column: 7, scope: !14940, inlinedAt: !16061)
!16071 = !DILocation(line: 190, column: 4, scope: !14944, inlinedAt: !16061)
!16072 = !DILocation(line: 192, column: 4, scope: !14944, inlinedAt: !16061)
!16073 = distinct !{!16073, !16065, !16074}
!16074 = !DILocation(line: 194, column: 2, scope: !14934, inlinedAt: !16061)
!16075 = !DILocation(line: 196, column: 2, scope: !14918, inlinedAt: !16061)
!16076 = !DILocation(line: 197, column: 1, scope: !14918, inlinedAt: !16061)
!16077 = !DILocation(line: 918, column: 4, scope: !16048)
!16078 = !DILocation(line: 919, column: 3, scope: !16048)
!16079 = !DILocation(line: 920, column: 22, scope: !16080)
!16080 = distinct !DILexicalBlock(scope: !16049, file: !2518, line: 919, column: 10)
!16081 = !DILocation(line: 0, scope: !14729, inlinedAt: !16082)
!16082 = distinct !DILocation(line: 906, column: 2, scope: !16042)
!16083 = !DILocation(line: 194, column: 2, scope: !14737, inlinedAt: !16082)
!16084 = !DILocation(line: 194, column: 2, scope: !14738, inlinedAt: !16082)
!16085 = !DILocation(line: 194, column: 2, scope: !14741, inlinedAt: !16082)
!16086 = !DILocation(line: 0, scope: !14743, inlinedAt: !16087)
!16087 = distinct !DILocation(line: 215, column: 2, scope: !14729, inlinedAt: !16082)
!16088 = !DILocation(line: 95, column: 2, scope: !14743, inlinedAt: !16087)
!16089 = !DILocation(line: 926, column: 2, scope: !16021)
!16090 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2518, file: !2518, line: 929, type: !16091, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !16093)
!16091 = !DISubroutineType(types: !16092)
!16092 = !{null, !2410, !109}
!16093 = !{!16094, !16095, !16096}
!16094 = !DILocalVariable(name: "thread", arg: 1, scope: !16090, file: !2518, line: 929, type: !2410)
!16095 = !DILocalVariable(name: "prio", arg: 2, scope: !16090, file: !2518, line: 929, type: !109)
!16096 = !DILocalVariable(name: "need_sched", scope: !16090, file: !2518, line: 931, type: !347)
!16097 = !DILocation(line: 0, scope: !16090)
!16098 = !DILocation(line: 931, column: 20, scope: !16090)
!16099 = !DILocation(line: 935, column: 17, scope: !16100)
!16100 = distinct !DILexicalBlock(scope: !16090, file: !2518, line: 935, column: 6)
!16101 = !DILocation(line: 935, column: 20, scope: !16100)
!16102 = !DILocation(line: 935, column: 35, scope: !16100)
!16103 = !DILocation(line: 935, column: 48, scope: !16100)
!16104 = !DILocation(line: 935, column: 6, scope: !16090)
!16105 = !DILocation(line: 936, column: 3, scope: !16106)
!16106 = distinct !DILexicalBlock(scope: !16100, file: !2518, line: 935, column: 55)
!16107 = !DILocation(line: 937, column: 2, scope: !16106)
!16108 = !DILocation(line: 938, column: 1, scope: !16090)
!16109 = distinct !DISubprogram(name: "k_sched_lock", scope: !2518, file: !2518, line: 987, type: !3155, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !16110)
!16110 = !{!16111, !16113}
!16111 = !DILocalVariable(name: "__i", scope: !16112, file: !2518, line: 989, type: !14687)
!16112 = distinct !DILexicalBlock(scope: !16109, file: !2518, line: 989, column: 2)
!16113 = !DILocalVariable(name: "__key", scope: !16112, file: !2518, line: 989, type: !14687)
!16114 = !DILocation(line: 0, scope: !16112)
!16115 = !DILocation(line: 0, scope: !14695, inlinedAt: !16116)
!16116 = distinct !DILocation(line: 989, column: 2, scope: !16112)
!16117 = !DILocation(line: 55, column: 2, scope: !14704, inlinedAt: !16118)
!16118 = distinct !DILocation(line: 145, column: 10, scope: !14695, inlinedAt: !16116)
!16119 = !DILocation(line: 0, scope: !14704, inlinedAt: !16118)
!16120 = !DILocation(line: 148, column: 2, scope: !14712, inlinedAt: !16116)
!16121 = !DILocation(line: 148, column: 2, scope: !14713, inlinedAt: !16116)
!16122 = !DILocation(line: 148, column: 2, scope: !14716, inlinedAt: !16116)
!16123 = !DILocation(line: 160, column: 2, scope: !14695, inlinedAt: !16116)
!16124 = !DILocation(line: 992, column: 3, scope: !16125)
!16125 = distinct !DILexicalBlock(scope: !16126, file: !2518, line: 989, column: 26)
!16126 = distinct !DILexicalBlock(scope: !16112, file: !2518, line: 989, column: 2)
!16127 = !DILocation(line: 0, scope: !14729, inlinedAt: !16128)
!16128 = distinct !DILocation(line: 989, column: 2, scope: !16126)
!16129 = !DILocation(line: 194, column: 2, scope: !14737, inlinedAt: !16128)
!16130 = !DILocation(line: 194, column: 2, scope: !14738, inlinedAt: !16128)
!16131 = !DILocation(line: 194, column: 2, scope: !14741, inlinedAt: !16128)
!16132 = !DILocation(line: 0, scope: !14743, inlinedAt: !16133)
!16133 = distinct !DILocation(line: 215, column: 2, scope: !14729, inlinedAt: !16128)
!16134 = !DILocation(line: 95, column: 2, scope: !14743, inlinedAt: !16133)
!16135 = !DILocation(line: 994, column: 1, scope: !16109)
!16136 = distinct !DISubprogram(name: "z_sched_lock", scope: !13487, file: !13487, line: 251, type: !3155, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !2106)
!16137 = !DILocation(line: 1031, column: 3, scope: !15420, inlinedAt: !16138)
!16138 = distinct !DILocation(line: 48, column: 10, scope: !15424, inlinedAt: !16139)
!16139 = distinct !DILocation(line: 253, column: 2, scope: !16140)
!16140 = distinct !DILexicalBlock(scope: !16141, file: !13487, line: 253, column: 2)
!16141 = distinct !DILexicalBlock(scope: !16136, file: !13487, line: 253, column: 2)
!16142 = !DILocation(line: 0, scope: !15420, inlinedAt: !16138)
!16143 = !DILocation(line: 48, column: 9, scope: !15424, inlinedAt: !16139)
!16144 = !DILocation(line: 253, column: 2, scope: !16141)
!16145 = !DILocation(line: 253, column: 2, scope: !16146)
!16146 = distinct !DILexicalBlock(scope: !16140, file: !13487, line: 253, column: 2)
!16147 = !DILocation(line: 254, column: 2, scope: !16148)
!16148 = distinct !DILexicalBlock(scope: !16149, file: !13487, line: 254, column: 2)
!16149 = distinct !DILexicalBlock(scope: !16136, file: !13487, line: 254, column: 2)
!16150 = !DILocation(line: 254, column: 2, scope: !16149)
!16151 = !DILocation(line: 254, column: 2, scope: !16152)
!16152 = distinct !DILexicalBlock(scope: !16148, file: !13487, line: 254, column: 2)
!16153 = !DILocation(line: 256, column: 2, scope: !16136)
!16154 = !DILocation(line: 258, column: 2, scope: !16155)
!16155 = distinct !DILexicalBlock(scope: !16136, file: !13487, line: 258, column: 2)
!16156 = !{i64 2155196573}
!16157 = !DILocation(line: 259, column: 1, scope: !16136)
!16158 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2518, file: !2518, line: 996, type: !3155, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !16159)
!16159 = !{!16160, !16162}
!16160 = !DILocalVariable(name: "__i", scope: !16161, file: !2518, line: 998, type: !14687)
!16161 = distinct !DILexicalBlock(scope: !16158, file: !2518, line: 998, column: 2)
!16162 = !DILocalVariable(name: "__key", scope: !16161, file: !2518, line: 998, type: !14687)
!16163 = !DILocation(line: 0, scope: !16161)
!16164 = !DILocation(line: 0, scope: !14695, inlinedAt: !16165)
!16165 = distinct !DILocation(line: 998, column: 2, scope: !16161)
!16166 = !DILocation(line: 55, column: 2, scope: !14704, inlinedAt: !16167)
!16167 = distinct !DILocation(line: 145, column: 10, scope: !14695, inlinedAt: !16165)
!16168 = !DILocation(line: 0, scope: !14704, inlinedAt: !16167)
!16169 = !DILocation(line: 148, column: 2, scope: !14712, inlinedAt: !16165)
!16170 = !DILocation(line: 148, column: 2, scope: !14713, inlinedAt: !16165)
!16171 = !DILocation(line: 148, column: 2, scope: !14716, inlinedAt: !16165)
!16172 = !DILocation(line: 160, column: 2, scope: !14695, inlinedAt: !16165)
!16173 = !DILocation(line: 999, column: 3, scope: !16174)
!16174 = distinct !DILexicalBlock(scope: !16175, file: !2518, line: 999, column: 3)
!16175 = distinct !DILexicalBlock(scope: !16176, file: !2518, line: 999, column: 3)
!16176 = distinct !DILexicalBlock(scope: !16177, file: !2518, line: 998, column: 26)
!16177 = distinct !DILexicalBlock(scope: !16161, file: !2518, line: 998, column: 2)
!16178 = !DILocation(line: 999, column: 3, scope: !16175)
!16179 = !DILocation(line: 999, column: 3, scope: !16180)
!16180 = distinct !DILexicalBlock(scope: !16174, file: !2518, line: 999, column: 3)
!16181 = !DILocation(line: 1031, column: 3, scope: !15420, inlinedAt: !16182)
!16182 = distinct !DILocation(line: 48, column: 10, scope: !15424, inlinedAt: !16183)
!16183 = distinct !DILocation(line: 1000, column: 3, scope: !16184)
!16184 = distinct !DILexicalBlock(scope: !16185, file: !2518, line: 1000, column: 3)
!16185 = distinct !DILexicalBlock(scope: !16176, file: !2518, line: 1000, column: 3)
!16186 = !DILocation(line: 0, scope: !15420, inlinedAt: !16182)
!16187 = !DILocation(line: 48, column: 9, scope: !15424, inlinedAt: !16183)
!16188 = !DILocation(line: 1000, column: 3, scope: !16185)
!16189 = !DILocation(line: 1000, column: 3, scope: !16190)
!16190 = distinct !DILexicalBlock(scope: !16184, file: !2518, line: 1000, column: 3)
!16191 = !DILocation(line: 1002, column: 5, scope: !16176)
!16192 = !DILocation(line: 1002, column: 20, scope: !16176)
!16193 = !DILocation(line: 1002, column: 3, scope: !16176)
!16194 = !DILocation(line: 1003, column: 3, scope: !16176)
!16195 = !DILocation(line: 0, scope: !14729, inlinedAt: !16196)
!16196 = distinct !DILocation(line: 998, column: 2, scope: !16177)
!16197 = !DILocation(line: 194, column: 2, scope: !14737, inlinedAt: !16196)
!16198 = !DILocation(line: 194, column: 2, scope: !14738, inlinedAt: !16196)
!16199 = !DILocation(line: 194, column: 2, scope: !14741, inlinedAt: !16196)
!16200 = !DILocation(line: 0, scope: !14743, inlinedAt: !16201)
!16201 = distinct !DILocation(line: 215, column: 2, scope: !14729, inlinedAt: !16196)
!16202 = !DILocation(line: 95, column: 2, scope: !14743, inlinedAt: !16201)
!16203 = !DILocation(line: 1011, column: 2, scope: !16158)
!16204 = !DILocation(line: 1012, column: 1, scope: !16158)
!16205 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2518, file: !2518, line: 1014, type: !15044, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !2106)
!16206 = !DILocation(line: 1028, column: 25, scope: !16205)
!16207 = !DILocation(line: 1028, column: 2, scope: !16205)
!16208 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2518, file: !2518, line: 1155, type: !16209, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !16211)
!16209 = !DISubroutineType(types: !16210)
!16210 = !{!347, !2439, !2439}
!16211 = !{!16212, !16213, !16214, !16215, !16216}
!16212 = !DILocalVariable(name: "a", arg: 1, scope: !16208, file: !2518, line: 1155, type: !2439)
!16213 = !DILocalVariable(name: "b", arg: 2, scope: !16208, file: !2518, line: 1155, type: !2439)
!16214 = !DILocalVariable(name: "thread_a", scope: !16208, file: !2518, line: 1157, type: !2410)
!16215 = !DILocalVariable(name: "thread_b", scope: !16208, file: !2518, line: 1157, type: !2410)
!16216 = !DILocalVariable(name: "cmp", scope: !16208, file: !2518, line: 1158, type: !774)
!16217 = !DILocation(line: 0, scope: !16208)
!16218 = !DILocation(line: 1160, column: 13, scope: !16208)
!16219 = !DILocation(line: 1161, column: 13, scope: !16208)
!16220 = !DILocation(line: 1163, column: 8, scope: !16208)
!16221 = !DILocation(line: 1165, column: 10, scope: !16222)
!16222 = distinct !DILexicalBlock(scope: !16208, file: !2518, line: 1165, column: 6)
!16223 = !DILocation(line: 1165, column: 6, scope: !16208)
!16224 = !DILocation(line: 1167, column: 17, scope: !16225)
!16225 = distinct !DILexicalBlock(scope: !16222, file: !2518, line: 1167, column: 13)
!16226 = !DILocation(line: 1167, column: 13, scope: !16222)
!16227 = !DILocation(line: 1170, column: 25, scope: !16228)
!16228 = distinct !DILexicalBlock(scope: !16225, file: !2518, line: 1169, column: 9)
!16229 = !DILocation(line: 1170, column: 52, scope: !16228)
!16230 = !DILocation(line: 1170, column: 35, scope: !16228)
!16231 = !DILocation(line: 1170, column: 3, scope: !16228)
!16232 = !DILocation(line: 0, scope: !16222)
!16233 = !DILocation(line: 1173, column: 1, scope: !16208)
!16234 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2518, file: !2518, line: 1175, type: !16235, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !16250)
!16235 = !DISubroutineType(types: !16236)
!16236 = !{null, !16237, !2410}
!16237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16238, size: 32)
!16238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !16239, line: 37, size: 128, elements: !16240)
!16239 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16240 = !{!16241, !16249}
!16241 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !16238, file: !16239, line: 38, baseType: !16242, size: 96)
!16242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !168, line: 83, size: 96, elements: !16243)
!16243 = !{!16244, !16245, !16248}
!16244 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !16242, file: !168, line: 84, baseType: !2439, size: 32)
!16245 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !16242, file: !168, line: 85, baseType: !16246, size: 32, offset: 32)
!16246 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !168, line: 81, baseType: !16247)
!16247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16209, size: 32)
!16248 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !16242, file: !168, line: 86, baseType: !109, size: 32, offset: 64)
!16249 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !16238, file: !16239, line: 39, baseType: !109, size: 32, offset: 96)
!16250 = !{!16251, !16252, !16253, !16254, !16263}
!16251 = !DILocalVariable(name: "pq", arg: 1, scope: !16234, file: !2518, line: 1175, type: !16237)
!16252 = !DILocalVariable(name: "thread", arg: 2, scope: !16234, file: !2518, line: 1175, type: !2410)
!16253 = !DILocalVariable(name: "t", scope: !16234, file: !2518, line: 1177, type: !2410)
!16254 = !DILocalVariable(name: "__f", scope: !16255, file: !2518, line: 1190, type: !16258)
!16255 = distinct !DILexicalBlock(scope: !16256, file: !2518, line: 1190, column: 3)
!16256 = distinct !DILexicalBlock(scope: !16257, file: !2518, line: 1189, column: 27)
!16257 = distinct !DILexicalBlock(scope: !16234, file: !2518, line: 1189, column: 6)
!16258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !168, line: 155, size: 96, elements: !16259)
!16259 = !{!16260, !16261, !16262}
!16260 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !16258, file: !168, line: 156, baseType: !2513, size: 32)
!16261 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !16258, file: !168, line: 157, baseType: !286, size: 32, offset: 32)
!16262 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !16258, file: !168, line: 158, baseType: !774, size: 32, offset: 64)
!16263 = !DILocalVariable(name: "n", scope: !16264, file: !2518, line: 1190, type: !2439)
!16264 = distinct !DILexicalBlock(scope: !16265, file: !2518, line: 1190, column: 3)
!16265 = distinct !DILexicalBlock(scope: !16255, file: !2518, line: 1190, column: 3)
!16266 = !DILocation(line: 0, scope: !16234)
!16267 = !DILocation(line: 1179, column: 2, scope: !16268)
!16268 = distinct !DILexicalBlock(scope: !16269, file: !2518, line: 1179, column: 2)
!16269 = distinct !DILexicalBlock(scope: !16234, file: !2518, line: 1179, column: 2)
!16270 = !DILocation(line: 1179, column: 2, scope: !16269)
!16271 = !DILocation(line: 1179, column: 2, scope: !16272)
!16272 = distinct !DILexicalBlock(scope: !16268, file: !2518, line: 1179, column: 2)
!16273 = !DILocation(line: 1181, column: 31, scope: !16234)
!16274 = !DILocation(line: 1181, column: 45, scope: !16234)
!16275 = !DILocation(line: 1181, column: 15, scope: !16234)
!16276 = !DILocation(line: 1181, column: 25, scope: !16234)
!16277 = !DILocation(line: 1189, column: 11, scope: !16257)
!16278 = !DILocation(line: 1189, column: 7, scope: !16257)
!16279 = !DILocation(line: 1189, column: 6, scope: !16234)
!16280 = !DILocation(line: 1190, column: 3, scope: !16255)
!16281 = !DILocation(line: 1190, column: 3, scope: !16264)
!16282 = !DILocation(line: 0, scope: !16264)
!16283 = !DILocation(line: 1190, column: 3, scope: !16265)
!16284 = !DILocation(line: 1193, column: 2, scope: !16256)
!16285 = !DILocation(line: 1191, column: 42, scope: !16286)
!16286 = distinct !DILexicalBlock(scope: !16265, file: !2518, line: 1190, column: 54)
!16287 = !DILocation(line: 1191, column: 12, scope: !16286)
!16288 = !DILocation(line: 1191, column: 22, scope: !16286)
!16289 = distinct !{!16289, !16280, !16290}
!16290 = !DILocation(line: 1192, column: 3, scope: !16255)
!16291 = !DILocation(line: 1195, column: 17, scope: !16234)
!16292 = !DILocation(line: 1195, column: 37, scope: !16234)
!16293 = !DILocation(line: 1195, column: 2, scope: !16234)
!16294 = !DILocation(line: 1196, column: 1, scope: !16234)
!16295 = !DISubprogram(name: "z_rb_foreach_next", scope: !168, file: !168, line: 176, type: !16296, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2106)
!16296 = !DISubroutineType(types: !16297)
!16297 = !{!2439, !16298, !16299}
!16298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16242, size: 32)
!16299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16258, size: 32)
!16300 = !DISubprogram(name: "rb_insert", scope: !168, file: !168, line: 105, type: !16301, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2106)
!16301 = !DISubroutineType(types: !16302)
!16302 = !{null, !16298, !2439}
!16303 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2518, file: !2518, line: 1198, type: !16235, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !16304)
!16304 = !{!16305, !16306}
!16305 = !DILocalVariable(name: "pq", arg: 1, scope: !16303, file: !2518, line: 1198, type: !16237)
!16306 = !DILocalVariable(name: "thread", arg: 2, scope: !16303, file: !2518, line: 1198, type: !2410)
!16307 = !DILocation(line: 0, scope: !16303)
!16308 = !DILocation(line: 1200, column: 2, scope: !16309)
!16309 = distinct !DILexicalBlock(scope: !16310, file: !2518, line: 1200, column: 2)
!16310 = distinct !DILexicalBlock(scope: !16303, file: !2518, line: 1200, column: 2)
!16311 = !DILocation(line: 1200, column: 2, scope: !16310)
!16312 = !DILocation(line: 1200, column: 2, scope: !16313)
!16313 = distinct !DILexicalBlock(scope: !16309, file: !2518, line: 1200, column: 2)
!16314 = !DILocation(line: 1202, column: 17, scope: !16303)
!16315 = !DILocation(line: 1202, column: 37, scope: !16303)
!16316 = !DILocation(line: 1202, column: 2, scope: !16303)
!16317 = !DILocation(line: 1204, column: 16, scope: !16318)
!16318 = distinct !DILexicalBlock(scope: !16303, file: !2518, line: 1204, column: 6)
!16319 = !DILocation(line: 1204, column: 7, scope: !16318)
!16320 = !DILocation(line: 1204, column: 6, scope: !16303)
!16321 = !DILocation(line: 1205, column: 7, scope: !16322)
!16322 = distinct !DILexicalBlock(scope: !16318, file: !2518, line: 1204, column: 22)
!16323 = !DILocation(line: 1205, column: 22, scope: !16322)
!16324 = !DILocation(line: 1206, column: 2, scope: !16322)
!16325 = !DILocation(line: 1207, column: 1, scope: !16303)
!16326 = !DISubprogram(name: "rb_remove", scope: !168, file: !168, line: 110, type: !16301, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2106)
!16327 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2518, file: !2518, line: 1209, type: !16328, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !16330)
!16328 = !DISubroutineType(types: !16329)
!16329 = !{!2410, !16237}
!16330 = !{!16331, !16332, !16333}
!16331 = !DILocalVariable(name: "pq", arg: 1, scope: !16327, file: !2518, line: 1209, type: !16237)
!16332 = !DILocalVariable(name: "thread", scope: !16327, file: !2518, line: 1211, type: !2410)
!16333 = !DILocalVariable(name: "n", scope: !16327, file: !2518, line: 1212, type: !2439)
!16334 = !DILocation(line: 0, scope: !16327)
!16335 = !DILocation(line: 1212, column: 37, scope: !16327)
!16336 = !DILocation(line: 1212, column: 21, scope: !16327)
!16337 = !DILocation(line: 1217, column: 2, scope: !16327)
!16338 = distinct !DISubprogram(name: "rb_get_min", scope: !168, file: !168, line: 115, type: !16339, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !16341)
!16339 = !DISubroutineType(types: !16340)
!16340 = !{!2439, !16298}
!16341 = !{!16342}
!16342 = !DILocalVariable(name: "tree", arg: 1, scope: !16338, file: !168, line: 115, type: !16298)
!16343 = !DILocation(line: 0, scope: !16338)
!16344 = !DILocation(line: 117, column: 9, scope: !16338)
!16345 = !DILocation(line: 117, column: 2, scope: !16338)
!16346 = !DISubprogram(name: "z_rb_get_minmax", scope: !168, file: !168, line: 100, type: !16347, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2106)
!16347 = !DISubroutineType(types: !16348)
!16348 = !{!2439, !16298, !178}
!16349 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2518, file: !2518, line: 1246, type: !16350, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !16358)
!16350 = !DISubroutineType(types: !16351)
!16351 = !{!2410, !16352}
!16352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16353, size: 32)
!16353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !16239, line: 53, size: 2080, elements: !16354)
!16354 = !{!16355, !16357}
!16355 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !16353, file: !16239, line: 54, baseType: !16356, size: 2048)
!16356 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2446, size: 2048, elements: !224)
!16357 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !16353, file: !16239, line: 55, baseType: !32, size: 32, offset: 2048)
!16358 = !{!16359, !16360, !16361, !16362}
!16359 = !DILocalVariable(name: "pq", arg: 1, scope: !16349, file: !2518, line: 1246, type: !16352)
!16360 = !DILocalVariable(name: "thread", scope: !16349, file: !2518, line: 1252, type: !2410)
!16361 = !DILocalVariable(name: "l", scope: !16349, file: !2518, line: 1253, type: !14921)
!16362 = !DILocalVariable(name: "n", scope: !16349, file: !2518, line: 1254, type: !2514)
!16363 = !DILocation(line: 0, scope: !16349)
!16364 = !DILocation(line: 1248, column: 11, scope: !16365)
!16365 = distinct !DILexicalBlock(scope: !16349, file: !2518, line: 1248, column: 6)
!16366 = !DILocation(line: 1248, column: 7, scope: !16365)
!16367 = !DILocation(line: 1248, column: 6, scope: !16349)
!16368 = !DILocation(line: 1253, column: 31, scope: !16349)
!16369 = !DILocation(line: 1253, column: 20, scope: !16349)
!16370 = !DILocation(line: 1254, column: 19, scope: !16349)
!16371 = !DILocation(line: 1260, column: 1, scope: !16349)
!16372 = distinct !DISubprogram(name: "z_unpend_all", scope: !2518, file: !2518, line: 1262, type: !16373, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !16375)
!16373 = !DISubroutineType(types: !16374)
!16374 = !{!109, !2441}
!16375 = !{!16376, !16377, !16378}
!16376 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16372, file: !2518, line: 1262, type: !2441)
!16377 = !DILocalVariable(name: "need_sched", scope: !16372, file: !2518, line: 1264, type: !109)
!16378 = !DILocalVariable(name: "thread", scope: !16372, file: !2518, line: 1265, type: !2410)
!16379 = !DILocation(line: 0, scope: !16372)
!16380 = !DILocation(line: 1267, column: 19, scope: !16372)
!16381 = !DILocation(line: 1267, column: 41, scope: !16372)
!16382 = !DILocation(line: 1267, column: 2, scope: !16372)
!16383 = !DILocation(line: 1268, column: 3, scope: !16384)
!16384 = distinct !DILexicalBlock(scope: !16372, file: !2518, line: 1267, column: 50)
!16385 = !DILocation(line: 1269, column: 3, scope: !16384)
!16386 = distinct !{!16386, !16382, !16387}
!16387 = !DILocation(line: 1271, column: 2, scope: !16372)
!16388 = !DILocation(line: 1273, column: 2, scope: !16372)
!16389 = distinct !DISubprogram(name: "z_waitq_head", scope: !13848, file: !13848, line: 52, type: !15920, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !16390)
!16390 = !{!16391}
!16391 = !DILocalVariable(name: "w", arg: 1, scope: !16389, file: !13848, line: 52, type: !2441)
!16392 = !DILocation(line: 0, scope: !16389)
!16393 = !DILocation(line: 54, column: 52, scope: !16389)
!16394 = !DILocation(line: 54, column: 28, scope: !16389)
!16395 = !DILocation(line: 54, column: 9, scope: !16389)
!16396 = !DILocation(line: 54, column: 2, scope: !16389)
!16397 = distinct !DISubprogram(name: "init_ready_q", scope: !2518, file: !2518, line: 1276, type: !16398, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !16405)
!16398 = !DISubroutineType(types: !16399)
!16399 = !{null, !16400}
!16400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16401, size: 32)
!16401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !122, line: 83, size: 96, elements: !16402)
!16402 = !{!16403, !16404}
!16403 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !16401, file: !122, line: 86, baseType: !2410, size: 32)
!16404 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !16401, file: !122, line: 90, baseType: !2446, size: 64, offset: 32)
!16405 = !{!16406}
!16406 = !DILocalVariable(name: "rq", arg: 1, scope: !16397, file: !2518, line: 1276, type: !16400)
!16407 = !DILocation(line: 0, scope: !16397)
!16408 = !DILocation(line: 1289, column: 22, scope: !16397)
!16409 = !DILocation(line: 1289, column: 2, scope: !16397)
!16410 = !DILocation(line: 1291, column: 1, scope: !16397)
!16411 = distinct !DISubprogram(name: "sys_dlist_init", scope: !127, file: !127, line: 197, type: !16412, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !16414)
!16412 = !DISubroutineType(types: !16413)
!16413 = !{null, !14921}
!16414 = !{!16415}
!16415 = !DILocalVariable(name: "list", arg: 1, scope: !16411, file: !127, line: 197, type: !14921)
!16416 = !DILocation(line: 0, scope: !16411)
!16417 = !DILocation(line: 199, column: 8, scope: !16411)
!16418 = !DILocation(line: 199, column: 13, scope: !16411)
!16419 = !DILocation(line: 200, column: 8, scope: !16411)
!16420 = !DILocation(line: 200, column: 13, scope: !16411)
!16421 = !DILocation(line: 201, column: 1, scope: !16411)
!16422 = distinct !DISubprogram(name: "z_sched_init", scope: !2518, file: !2518, line: 1293, type: !3155, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !2106)
!16423 = !DILocation(line: 1302, column: 2, scope: !16422)
!16424 = !DILocation(line: 1306, column: 2, scope: !16422)
!16425 = !DILocation(line: 1309, column: 1, scope: !16422)
!16426 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2518, file: !2518, line: 1311, type: !16427, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !16430)
!16427 = !DISubroutineType(types: !16428)
!16428 = !{!109, !16429}
!16429 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !156, line: 347, baseType: !2410)
!16430 = !{!16431}
!16431 = !DILocalVariable(name: "thread", arg: 1, scope: !16426, file: !2518, line: 1311, type: !16429)
!16432 = !DILocation(line: 0, scope: !16426)
!16433 = !DILocation(line: 1313, column: 22, scope: !16426)
!16434 = !DILocation(line: 1313, column: 9, scope: !16426)
!16435 = !DILocation(line: 1313, column: 2, scope: !16426)
!16436 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2518, file: !2518, line: 1325, type: !16437, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !16439)
!16437 = !DISubroutineType(types: !16438)
!16438 = !{null, !16429, !109}
!16439 = !{!16440, !16441, !16442}
!16440 = !DILocalVariable(name: "thread", arg: 1, scope: !16436, file: !2518, line: 1325, type: !16429)
!16441 = !DILocalVariable(name: "prio", arg: 2, scope: !16436, file: !2518, line: 1325, type: !109)
!16442 = !DILocalVariable(name: "th", scope: !16436, file: !2518, line: 1334, type: !2410)
!16443 = !DILocation(line: 0, scope: !16436)
!16444 = !DILocation(line: 1331, column: 2, scope: !16445)
!16445 = distinct !DILexicalBlock(scope: !16446, file: !2518, line: 1331, column: 2)
!16446 = distinct !DILexicalBlock(scope: !16447, file: !2518, line: 1331, column: 2)
!16447 = distinct !DILexicalBlock(scope: !16436, file: !2518, line: 1331, column: 2)
!16448 = !DILocation(line: 1331, column: 2, scope: !16449)
!16449 = distinct !DILexicalBlock(scope: !16445, file: !2518, line: 1331, column: 2)
!16450 = !DILocation(line: 1031, column: 3, scope: !15420, inlinedAt: !16451)
!16451 = distinct !DILocation(line: 48, column: 10, scope: !15424, inlinedAt: !16452)
!16452 = distinct !DILocation(line: 1332, column: 2, scope: !16453)
!16453 = distinct !DILexicalBlock(scope: !16454, file: !2518, line: 1332, column: 2)
!16454 = distinct !DILexicalBlock(scope: !16436, file: !2518, line: 1332, column: 2)
!16455 = !DILocation(line: 0, scope: !15420, inlinedAt: !16451)
!16456 = !DILocation(line: 48, column: 9, scope: !15424, inlinedAt: !16452)
!16457 = !DILocation(line: 1332, column: 2, scope: !16454)
!16458 = !DILocation(line: 1332, column: 2, scope: !16459)
!16459 = distinct !DILexicalBlock(scope: !16453, file: !2518, line: 1332, column: 2)
!16460 = !DILocation(line: 1336, column: 2, scope: !16436)
!16461 = !DILocation(line: 1337, column: 1, scope: !16436)
!16462 = distinct !DISubprogram(name: "k_can_yield", scope: !2518, file: !2518, line: 1384, type: !7539, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !2106)
!16463 = !DILocation(line: 1386, column: 11, scope: !16462)
!16464 = !DILocation(line: 1386, column: 29, scope: !16462)
!16465 = !DILocation(line: 1386, column: 32, scope: !16462)
!16466 = !DILocation(line: 1386, column: 46, scope: !16462)
!16467 = !DILocation(line: 1387, column: 28, scope: !16462)
!16468 = !DILocation(line: 1387, column: 4, scope: !16462)
!16469 = !DILocation(line: 1386, column: 2, scope: !16462)
!16470 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !118, file: !118, line: 989, type: !7539, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !2106)
!16471 = !DILocation(line: 993, column: 10, scope: !16470)
!16472 = !DILocation(line: 993, column: 2, scope: !16470)
!16473 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2518, file: !2518, line: 1390, type: !3155, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !16474)
!16474 = !{!16475}
!16475 = !DILocalVariable(name: "key", scope: !16473, file: !2518, line: 1396, type: !14687)
!16476 = !DILocation(line: 1031, column: 3, scope: !15420, inlinedAt: !16477)
!16477 = distinct !DILocation(line: 48, column: 10, scope: !15424, inlinedAt: !16478)
!16478 = distinct !DILocation(line: 1392, column: 2, scope: !16479)
!16479 = distinct !DILexicalBlock(scope: !16480, file: !2518, line: 1392, column: 2)
!16480 = distinct !DILexicalBlock(scope: !16473, file: !2518, line: 1392, column: 2)
!16481 = !DILocation(line: 0, scope: !15420, inlinedAt: !16477)
!16482 = !DILocation(line: 48, column: 9, scope: !15424, inlinedAt: !16478)
!16483 = !DILocation(line: 1392, column: 2, scope: !16480)
!16484 = !DILocation(line: 1392, column: 2, scope: !16485)
!16485 = distinct !DILexicalBlock(scope: !16479, file: !2518, line: 1392, column: 2)
!16486 = !DILocation(line: 0, scope: !14695, inlinedAt: !16487)
!16487 = distinct !DILocation(line: 1396, column: 25, scope: !16473)
!16488 = !DILocation(line: 55, column: 2, scope: !14704, inlinedAt: !16489)
!16489 = distinct !DILocation(line: 145, column: 10, scope: !14695, inlinedAt: !16487)
!16490 = !DILocation(line: 0, scope: !14704, inlinedAt: !16489)
!16491 = !DILocation(line: 148, column: 2, scope: !14712, inlinedAt: !16487)
!16492 = !DILocation(line: 148, column: 2, scope: !14713, inlinedAt: !16487)
!16493 = !DILocation(line: 148, column: 2, scope: !14716, inlinedAt: !16487)
!16494 = !DILocation(line: 160, column: 2, scope: !14695, inlinedAt: !16487)
!16495 = !DILocation(line: 0, scope: !16473)
!16496 = !DILocation(line: 1400, column: 18, scope: !16497)
!16497 = distinct !DILexicalBlock(scope: !16498, file: !2518, line: 1399, column: 36)
!16498 = distinct !DILexicalBlock(scope: !16473, file: !2518, line: 1398, column: 6)
!16499 = !DILocation(line: 0, scope: !14887, inlinedAt: !16500)
!16500 = distinct !DILocation(line: 1400, column: 3, scope: !16497)
!16501 = !DILocation(line: 266, column: 15, scope: !14887, inlinedAt: !16500)
!16502 = !DILocation(line: 266, column: 28, scope: !14887, inlinedAt: !16500)
!16503 = !DILocation(line: 0, scope: !14895, inlinedAt: !16504)
!16504 = distinct !DILocation(line: 268, column: 3, scope: !14899, inlinedAt: !16500)
!16505 = !DILocation(line: 234, column: 2, scope: !14895, inlinedAt: !16504)
!16506 = !DILocation(line: 1402, column: 15, scope: !16473)
!16507 = !DILocation(line: 0, scope: !14904, inlinedAt: !16508)
!16508 = distinct !DILocation(line: 1402, column: 2, scope: !16473)
!16509 = !DILocation(line: 252, column: 15, scope: !14904, inlinedAt: !16508)
!16510 = !DILocation(line: 252, column: 28, scope: !14904, inlinedAt: !16508)
!16511 = !DILocation(line: 0, scope: !14911, inlinedAt: !16512)
!16512 = distinct !DILocation(line: 254, column: 3, scope: !14915, inlinedAt: !16508)
!16513 = !DILocation(line: 0, scope: !14918, inlinedAt: !16514)
!16514 = distinct !DILocation(line: 229, column: 2, scope: !14911, inlinedAt: !16512)
!16515 = !DILocation(line: 186, column: 2, scope: !14928, inlinedAt: !16514)
!16516 = !DILocation(line: 186, column: 2, scope: !14929, inlinedAt: !16514)
!16517 = !DILocation(line: 186, column: 2, scope: !14932, inlinedAt: !16514)
!16518 = !DILocation(line: 188, column: 2, scope: !14934, inlinedAt: !16514)
!16519 = !DILocation(line: 188, column: 2, scope: !14936, inlinedAt: !16514)
!16520 = !DILocation(line: 0, scope: !14934, inlinedAt: !16514)
!16521 = !DILocation(line: 189, column: 7, scope: !14939, inlinedAt: !16514)
!16522 = !DILocation(line: 189, column: 35, scope: !14939, inlinedAt: !16514)
!16523 = !DILocation(line: 189, column: 7, scope: !14940, inlinedAt: !16514)
!16524 = !DILocation(line: 191, column: 21, scope: !14944, inlinedAt: !16514)
!16525 = !DILocation(line: 190, column: 4, scope: !14944, inlinedAt: !16514)
!16526 = !DILocation(line: 192, column: 4, scope: !14944, inlinedAt: !16514)
!16527 = distinct !{!16527, !16518, !16528}
!16528 = !DILocation(line: 194, column: 2, scope: !14934, inlinedAt: !16514)
!16529 = !DILocation(line: 196, column: 37, scope: !14918, inlinedAt: !16514)
!16530 = !DILocation(line: 196, column: 2, scope: !14918, inlinedAt: !16514)
!16531 = !DILocation(line: 197, column: 1, scope: !14918, inlinedAt: !16514)
!16532 = !DILocation(line: 1403, column: 2, scope: !16473)
!16533 = !DILocation(line: 0, scope: !15371, inlinedAt: !16534)
!16534 = distinct !DILocation(line: 1404, column: 2, scope: !16473)
!16535 = !DILocation(line: 0, scope: !15380, inlinedAt: !16536)
!16536 = distinct !DILocation(line: 195, column: 2, scope: !15371, inlinedAt: !16534)
!16537 = !DILocation(line: 225, column: 2, scope: !15387, inlinedAt: !16536)
!16538 = !DILocation(line: 225, column: 2, scope: !15388, inlinedAt: !16536)
!16539 = !DILocation(line: 225, column: 2, scope: !15391, inlinedAt: !16536)
!16540 = !DILocation(line: 196, column: 9, scope: !15371, inlinedAt: !16534)
!16541 = !DILocation(line: 1405, column: 1, scope: !16473)
!16542 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2518, file: !2518, line: 1459, type: !16543, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !16545)
!16543 = !DISubroutineType(types: !16544)
!16544 = !{!774, !15581}
!16545 = !{!16546, !16547, !16548}
!16546 = !DILocalVariable(name: "timeout", arg: 1, scope: !16542, file: !2518, line: 1459, type: !15581)
!16547 = !DILocalVariable(name: "ticks", scope: !16542, file: !2518, line: 1461, type: !103)
!16548 = !DILocalVariable(name: "ret", scope: !16542, file: !2518, line: 1480, type: !774)
!16549 = !DILocation(line: 0, scope: !16542)
!16550 = !DILocation(line: 1031, column: 3, scope: !15420, inlinedAt: !16551)
!16551 = distinct !DILocation(line: 48, column: 10, scope: !15424, inlinedAt: !16552)
!16552 = distinct !DILocation(line: 1463, column: 2, scope: !16553)
!16553 = distinct !DILexicalBlock(scope: !16554, file: !2518, line: 1463, column: 2)
!16554 = distinct !DILexicalBlock(scope: !16542, file: !2518, line: 1463, column: 2)
!16555 = !DILocation(line: 0, scope: !15420, inlinedAt: !16551)
!16556 = !DILocation(line: 48, column: 9, scope: !15424, inlinedAt: !16552)
!16557 = !DILocation(line: 1463, column: 2, scope: !16554)
!16558 = !DILocation(line: 1463, column: 2, scope: !16559)
!16559 = distinct !DILexicalBlock(scope: !16553, file: !2518, line: 1463, column: 2)
!16560 = !DILocation(line: 1468, column: 6, scope: !16561)
!16561 = distinct !DILexicalBlock(scope: !16542, file: !2518, line: 1468, column: 6)
!16562 = !DILocation(line: 1468, column: 6, scope: !16542)
!16563 = !DILocation(line: 1469, column: 20, scope: !16564)
!16564 = distinct !DILexicalBlock(scope: !16561, file: !2518, line: 1468, column: 40)
!16565 = !DILocation(line: 1469, column: 3, scope: !16564)
!16566 = !DILocation(line: 1473, column: 3, scope: !16564)
!16567 = !DILocation(line: 1478, column: 10, scope: !16542)
!16568 = !DILocation(line: 1480, column: 16, scope: !16542)
!16569 = !DILocation(line: 1485, column: 1, scope: !16542)
!16570 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3297, file: !3297, line: 310, type: !16571, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !16573)
!16571 = !DISubroutineType(types: !16572)
!16572 = !{null, !16429}
!16573 = !{!16574}
!16574 = !DILocalVariable(name: "thread", arg: 1, scope: !16570, file: !3297, line: 310, type: !16429)
!16575 = !DILocation(line: 0, scope: !16570)
!16576 = !DILocation(line: 319, column: 2, scope: !16577)
!16577 = distinct !DILexicalBlock(scope: !16570, file: !3297, line: 319, column: 2)
!16578 = !{i64 2155112731}
!16579 = !DILocation(line: 320, column: 2, scope: !16570)
!16580 = !DILocation(line: 321, column: 1, scope: !16570)
!16581 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2518, file: !2518, line: 1415, type: !16582, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !16584)
!16582 = !DISubroutineType(types: !16583)
!16583 = !{!774, !103}
!16584 = !{!16585, !16586, !16587, !16588}
!16585 = !DILocalVariable(name: "ticks", arg: 1, scope: !16581, file: !2518, line: 1415, type: !103)
!16586 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !16581, file: !2518, line: 1418, type: !110)
!16587 = !DILocalVariable(name: "timeout", scope: !16581, file: !2518, line: 1430, type: !15581)
!16588 = !DILocalVariable(name: "key", scope: !16581, file: !2518, line: 1437, type: !14687)
!16589 = !DILocation(line: 0, scope: !16581)
!16590 = !DILocation(line: 1031, column: 3, scope: !15420, inlinedAt: !16591)
!16591 = distinct !DILocation(line: 48, column: 10, scope: !15424, inlinedAt: !16592)
!16592 = distinct !DILocation(line: 1420, column: 2, scope: !16593)
!16593 = distinct !DILexicalBlock(scope: !16594, file: !2518, line: 1420, column: 2)
!16594 = distinct !DILexicalBlock(scope: !16581, file: !2518, line: 1420, column: 2)
!16595 = !DILocation(line: 0, scope: !15420, inlinedAt: !16591)
!16596 = !DILocation(line: 48, column: 9, scope: !15424, inlinedAt: !16592)
!16597 = !DILocation(line: 1420, column: 2, scope: !16594)
!16598 = !DILocation(line: 1420, column: 2, scope: !16599)
!16599 = distinct !DILexicalBlock(scope: !16593, file: !2518, line: 1420, column: 2)
!16600 = !DILocation(line: 1425, column: 12, scope: !16601)
!16601 = distinct !DILexicalBlock(scope: !16581, file: !2518, line: 1425, column: 6)
!16602 = !DILocation(line: 1425, column: 6, scope: !16581)
!16603 = !DILocation(line: 1426, column: 3, scope: !16604)
!16604 = distinct !DILexicalBlock(scope: !16601, file: !2518, line: 1425, column: 18)
!16605 = !DILocation(line: 1427, column: 3, scope: !16604)
!16606 = !DILocation(line: 1431, column: 24, scope: !16607)
!16607 = distinct !DILexicalBlock(scope: !16581, file: !2518, line: 1431, column: 6)
!16608 = !DILocation(line: 1431, column: 6, scope: !16581)
!16609 = !DILocation(line: 1432, column: 35, scope: !16610)
!16610 = distinct !DILexicalBlock(scope: !16607, file: !2518, line: 1431, column: 30)
!16611 = !DILocation(line: 1432, column: 27, scope: !16610)
!16612 = !DILocation(line: 1433, column: 2, scope: !16610)
!16613 = !DILocation(line: 1434, column: 27, scope: !16614)
!16614 = distinct !DILexicalBlock(scope: !16607, file: !2518, line: 1433, column: 9)
!16615 = !DILocation(line: 0, scope: !16607)
!16616 = !DILocation(line: 0, scope: !14695, inlinedAt: !16617)
!16617 = distinct !DILocation(line: 1437, column: 25, scope: !16581)
!16618 = !DILocation(line: 55, column: 2, scope: !14704, inlinedAt: !16619)
!16619 = distinct !DILocation(line: 145, column: 10, scope: !14695, inlinedAt: !16617)
!16620 = !DILocation(line: 0, scope: !14704, inlinedAt: !16619)
!16621 = !DILocation(line: 148, column: 2, scope: !14712, inlinedAt: !16617)
!16622 = !DILocation(line: 148, column: 2, scope: !14713, inlinedAt: !16617)
!16623 = !DILocation(line: 148, column: 2, scope: !14716, inlinedAt: !16617)
!16624 = !DILocation(line: 160, column: 2, scope: !14695, inlinedAt: !16617)
!16625 = !DILocation(line: 1440, column: 20, scope: !16581)
!16626 = !DILocation(line: 1440, column: 18, scope: !16581)
!16627 = !DILocation(line: 1442, column: 2, scope: !16581)
!16628 = !DILocation(line: 1443, column: 23, scope: !16581)
!16629 = !DILocation(line: 1443, column: 2, scope: !16581)
!16630 = !DILocation(line: 1444, column: 29, scope: !16581)
!16631 = !DILocation(line: 1444, column: 2, scope: !16581)
!16632 = !DILocation(line: 0, scope: !15371, inlinedAt: !16633)
!16633 = distinct !DILocation(line: 1446, column: 8, scope: !16581)
!16634 = !DILocation(line: 0, scope: !15380, inlinedAt: !16635)
!16635 = distinct !DILocation(line: 195, column: 2, scope: !15371, inlinedAt: !16633)
!16636 = !DILocation(line: 225, column: 2, scope: !15387, inlinedAt: !16635)
!16637 = !DILocation(line: 225, column: 2, scope: !15388, inlinedAt: !16635)
!16638 = !DILocation(line: 225, column: 2, scope: !15391, inlinedAt: !16635)
!16639 = !DILocation(line: 196, column: 9, scope: !15371, inlinedAt: !16633)
!16640 = !DILocation(line: 1448, column: 2, scope: !16641)
!16641 = distinct !DILexicalBlock(scope: !16642, file: !2518, line: 1448, column: 2)
!16642 = distinct !DILexicalBlock(scope: !16581, file: !2518, line: 1448, column: 2)
!16643 = !DILocation(line: 1448, column: 2, scope: !16642)
!16644 = !DILocation(line: 1448, column: 2, scope: !16645)
!16645 = distinct !DILexicalBlock(scope: !16641, file: !2518, line: 1448, column: 2)
!16646 = !DILocation(line: 1450, column: 10, scope: !16581)
!16647 = !DILocation(line: 1450, column: 45, scope: !16581)
!16648 = !DILocation(line: 1450, column: 43, scope: !16581)
!16649 = !DILocation(line: 1451, column: 6, scope: !16581)
!16650 = !DILocation(line: 1457, column: 1, scope: !16581)
!16651 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !3338, file: !3338, line: 1103, type: !3339, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !16652)
!16652 = !{!16653}
!16653 = !DILocalVariable(name: "t", arg: 1, scope: !16651, file: !3338, line: 1103, type: !111)
!16654 = !DILocation(line: 0, scope: !16651)
!16655 = !DILocation(line: 0, scope: !14755, inlinedAt: !16656)
!16656 = distinct !DILocation(line: 1106, column: 9, scope: !16651)
!16657 = !DILocation(line: 139, column: 13, scope: !16658, inlinedAt: !16656)
!16658 = distinct !DILexicalBlock(scope: !16659, file: !3338, line: 138, column: 10)
!16659 = distinct !DILexicalBlock(scope: !16660, file: !3338, line: 136, column: 7)
!16660 = distinct !DILexicalBlock(scope: !14776, file: !3338, line: 134, column: 17)
!16661 = !DILocation(line: 1106, column: 2, scope: !16651)
!16662 = distinct !DISubprogram(name: "k_yield", scope: !3297, file: !3297, line: 140, type: !3155, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !2106)
!16663 = !DILocation(line: 148, column: 2, scope: !16664)
!16664 = distinct !DILexicalBlock(scope: !16662, file: !3297, line: 148, column: 2)
!16665 = !{i64 2155112051}
!16666 = !DILocation(line: 149, column: 2, scope: !16662)
!16667 = !DILocation(line: 150, column: 1, scope: !16662)
!16668 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2518, file: !2518, line: 1495, type: !16669, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !16671)
!16669 = !DISubroutineType(types: !16670)
!16670 = !{!774, !109}
!16671 = !{!16672, !16673}
!16672 = !DILocalVariable(name: "us", arg: 1, scope: !16668, file: !2518, line: 1495, type: !109)
!16673 = !DILocalVariable(name: "ticks", scope: !16668, file: !2518, line: 1497, type: !774)
!16674 = !DILocation(line: 0, scope: !16668)
!16675 = !DILocation(line: 1501, column: 31, scope: !16668)
!16676 = !DILocation(line: 1501, column: 10, scope: !16668)
!16677 = !DILocation(line: 1502, column: 23, scope: !16668)
!16678 = !DILocation(line: 1502, column: 10, scope: !16668)
!16679 = !DILocation(line: 1506, column: 31, scope: !16668)
!16680 = !DILocation(line: 1506, column: 9, scope: !16668)
!16681 = !DILocation(line: 1506, column: 2, scope: !16668)
!16682 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !3338, file: !3338, line: 571, type: !3339, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !16683)
!16683 = !{!16684}
!16684 = !DILocalVariable(name: "t", arg: 1, scope: !16682, file: !3338, line: 571, type: !111)
!16685 = !DILocation(line: 0, scope: !16682)
!16686 = !DILocation(line: 0, scope: !14755, inlinedAt: !16687)
!16687 = distinct !DILocation(line: 574, column: 9, scope: !16682)
!16688 = !DILocation(line: 135, column: 5, scope: !16660, inlinedAt: !16687)
!16689 = !DILocation(line: 139, column: 13, scope: !16658, inlinedAt: !16687)
!16690 = !DILocation(line: 574, column: 2, scope: !16682)
!16691 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !3338, file: !3338, line: 1187, type: !3339, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !16692)
!16692 = !{!16693}
!16693 = !DILocalVariable(name: "t", arg: 1, scope: !16691, file: !3338, line: 1187, type: !111)
!16694 = !DILocation(line: 0, scope: !16691)
!16695 = !DILocation(line: 0, scope: !14755, inlinedAt: !16696)
!16696 = distinct !DILocation(line: 1190, column: 9, scope: !16691)
!16697 = !DILocation(line: 145, column: 13, scope: !16698, inlinedAt: !16696)
!16698 = distinct !DILexicalBlock(scope: !14773, file: !3338, line: 144, column: 10)
!16699 = !DILocation(line: 1190, column: 2, scope: !16691)
!16700 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2518, file: !2518, line: 1517, type: !16571, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !16701)
!16701 = !{!16702}
!16702 = !DILocalVariable(name: "thread", arg: 1, scope: !16700, file: !2518, line: 1517, type: !16429)
!16703 = !DILocation(line: 0, scope: !16700)
!16704 = !DILocation(line: 1521, column: 6, scope: !16705)
!16705 = distinct !DILexicalBlock(scope: !16700, file: !2518, line: 1521, column: 6)
!16706 = !DILocation(line: 1521, column: 6, scope: !16700)
!16707 = !DILocation(line: 1525, column: 6, scope: !16708)
!16708 = distinct !DILexicalBlock(scope: !16700, file: !2518, line: 1525, column: 6)
!16709 = !DILocation(line: 1525, column: 37, scope: !16708)
!16710 = !DILocation(line: 1525, column: 6, scope: !16700)
!16711 = !DILocation(line: 1527, column: 20, scope: !16712)
!16712 = distinct !DILexicalBlock(scope: !16713, file: !2518, line: 1527, column: 7)
!16713 = distinct !DILexicalBlock(scope: !16708, file: !2518, line: 1525, column: 42)
!16714 = !DILocation(line: 1527, column: 33, scope: !16712)
!16715 = !DILocation(line: 1527, column: 7, scope: !16713)
!16716 = !DILocation(line: 1532, column: 2, scope: !16700)
!16717 = !DILocation(line: 1533, column: 2, scope: !16700)
!16718 = !DILocation(line: 1031, column: 3, scope: !15420, inlinedAt: !16719)
!16719 = distinct !DILocation(line: 48, column: 10, scope: !15424, inlinedAt: !16720)
!16720 = distinct !DILocation(line: 1537, column: 7, scope: !16721)
!16721 = distinct !DILexicalBlock(scope: !16700, file: !2518, line: 1537, column: 6)
!16722 = !DILocation(line: 0, scope: !15420, inlinedAt: !16719)
!16723 = !DILocation(line: 48, column: 9, scope: !15424, inlinedAt: !16720)
!16724 = !DILocation(line: 1537, column: 6, scope: !16700)
!16725 = !DILocation(line: 1538, column: 3, scope: !16726)
!16726 = distinct !DILexicalBlock(scope: !16721, file: !2518, line: 1537, column: 25)
!16727 = !DILocation(line: 1539, column: 2, scope: !16726)
!16728 = !DILocation(line: 1540, column: 1, scope: !16700)
!16729 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !13487, file: !13487, line: 101, type: !14836, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !16730)
!16730 = !{!16731}
!16731 = !DILocalVariable(name: "thread", arg: 1, scope: !16729, file: !13487, line: 101, type: !2410)
!16732 = !DILocation(line: 0, scope: !16729)
!16733 = !DILocation(line: 103, column: 23, scope: !16729)
!16734 = !DILocation(line: 103, column: 36, scope: !16729)
!16735 = !DILocation(line: 103, column: 55, scope: !16729)
!16736 = !DILocation(line: 103, column: 2, scope: !16729)
!16737 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2518, file: !2518, line: 1567, type: !16738, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !16740)
!16738 = !DISubroutineType(types: !16739)
!16739 = !{!16429}
!16740 = !{!16741}
!16741 = !DILocalVariable(name: "ret", scope: !16737, file: !2518, line: 1577, type: !16429)
!16742 = !DILocation(line: 1577, column: 30, scope: !16737)
!16743 = !DILocation(line: 0, scope: !16737)
!16744 = !DILocation(line: 1582, column: 2, scope: !16737)
!16745 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2518, file: !2518, line: 1593, type: !7842, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !2106)
!16746 = !DILocation(line: 1031, column: 3, scope: !15420, inlinedAt: !16747)
!16747 = distinct !DILocation(line: 48, column: 10, scope: !15424, inlinedAt: !16748)
!16748 = distinct !DILocation(line: 1595, column: 10, scope: !16745)
!16749 = !DILocation(line: 0, scope: !15420, inlinedAt: !16747)
!16750 = !DILocation(line: 48, column: 9, scope: !15424, inlinedAt: !16748)
!16751 = !DILocation(line: 1595, column: 27, scope: !16745)
!16752 = !DILocation(line: 1595, column: 41, scope: !16745)
!16753 = !DILocation(line: 1595, column: 30, scope: !16745)
!16754 = !DILocation(line: 1595, column: 2, scope: !16745)
!16755 = distinct !DISubprogram(name: "z_thread_abort", scope: !2518, file: !2518, line: 1725, type: !14653, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !16756)
!16756 = !{!16757, !16758}
!16757 = !DILocalVariable(name: "thread", arg: 1, scope: !16755, file: !2518, line: 1725, type: !2410)
!16758 = !DILocalVariable(name: "key", scope: !16755, file: !2518, line: 1727, type: !14687)
!16759 = !DILocation(line: 0, scope: !16755)
!16760 = !DILocation(line: 0, scope: !14695, inlinedAt: !16761)
!16761 = distinct !DILocation(line: 1727, column: 25, scope: !16755)
!16762 = !DILocation(line: 55, column: 2, scope: !14704, inlinedAt: !16763)
!16763 = distinct !DILocation(line: 145, column: 10, scope: !14695, inlinedAt: !16761)
!16764 = !DILocation(line: 0, scope: !14704, inlinedAt: !16763)
!16765 = !DILocation(line: 148, column: 2, scope: !14712, inlinedAt: !16761)
!16766 = !DILocation(line: 148, column: 2, scope: !14713, inlinedAt: !16761)
!16767 = !DILocation(line: 148, column: 2, scope: !14716, inlinedAt: !16761)
!16768 = !DILocation(line: 160, column: 2, scope: !14695, inlinedAt: !16761)
!16769 = !DILocation(line: 1729, column: 20, scope: !16770)
!16770 = distinct !DILexicalBlock(scope: !16755, file: !2518, line: 1729, column: 6)
!16771 = !DILocation(line: 1729, column: 33, scope: !16770)
!16772 = !DILocation(line: 1729, column: 48, scope: !16770)
!16773 = !DILocation(line: 1729, column: 6, scope: !16755)
!16774 = !DILocation(line: 0, scope: !14729, inlinedAt: !16775)
!16775 = distinct !DILocation(line: 1730, column: 3, scope: !16776)
!16776 = distinct !DILexicalBlock(scope: !16770, file: !2518, line: 1729, column: 54)
!16777 = !DILocation(line: 194, column: 2, scope: !14737, inlinedAt: !16775)
!16778 = !DILocation(line: 194, column: 2, scope: !14738, inlinedAt: !16775)
!16779 = !DILocation(line: 194, column: 2, scope: !14741, inlinedAt: !16775)
!16780 = !DILocation(line: 0, scope: !14743, inlinedAt: !16781)
!16781 = distinct !DILocation(line: 215, column: 2, scope: !14729, inlinedAt: !16775)
!16782 = !DILocation(line: 95, column: 2, scope: !14743, inlinedAt: !16781)
!16783 = !DILocation(line: 1731, column: 3, scope: !16784)
!16784 = distinct !DILexicalBlock(scope: !16785, file: !2518, line: 1731, column: 3)
!16785 = distinct !DILexicalBlock(scope: !16786, file: !2518, line: 1731, column: 3)
!16786 = distinct !DILexicalBlock(scope: !16776, file: !2518, line: 1731, column: 3)
!16787 = !DILocation(line: 1736, column: 20, scope: !16788)
!16788 = distinct !DILexicalBlock(scope: !16755, file: !2518, line: 1736, column: 6)
!16789 = !DILocation(line: 1736, column: 33, scope: !16788)
!16790 = !DILocation(line: 1736, column: 49, scope: !16788)
!16791 = !DILocation(line: 1736, column: 6, scope: !16755)
!16792 = !DILocation(line: 0, scope: !14729, inlinedAt: !16793)
!16793 = distinct !DILocation(line: 1737, column: 3, scope: !16794)
!16794 = distinct !DILexicalBlock(scope: !16788, file: !2518, line: 1736, column: 56)
!16795 = !DILocation(line: 194, column: 2, scope: !14737, inlinedAt: !16793)
!16796 = !DILocation(line: 194, column: 2, scope: !14738, inlinedAt: !16793)
!16797 = !DILocation(line: 194, column: 2, scope: !14741, inlinedAt: !16793)
!16798 = !DILocation(line: 0, scope: !14743, inlinedAt: !16799)
!16799 = distinct !DILocation(line: 215, column: 2, scope: !14729, inlinedAt: !16793)
!16800 = !DILocation(line: 95, column: 2, scope: !14743, inlinedAt: !16799)
!16801 = !DILocation(line: 1738, column: 3, scope: !16794)
!16802 = !DILocation(line: 1775, column: 2, scope: !16755)
!16803 = !DILocation(line: 1776, column: 16, scope: !16804)
!16804 = distinct !DILexicalBlock(scope: !16755, file: !2518, line: 1776, column: 6)
!16805 = !DILocation(line: 1776, column: 13, scope: !16804)
!16806 = !DILocation(line: 1776, column: 25, scope: !16804)
!16807 = !DILocation(line: 1031, column: 3, scope: !15420, inlinedAt: !16808)
!16808 = distinct !DILocation(line: 48, column: 10, scope: !15424, inlinedAt: !16809)
!16809 = distinct !DILocation(line: 1776, column: 29, scope: !16804)
!16810 = !DILocation(line: 0, scope: !15420, inlinedAt: !16808)
!16811 = !DILocation(line: 48, column: 9, scope: !15424, inlinedAt: !16809)
!16812 = !DILocation(line: 1776, column: 6, scope: !16755)
!16813 = !DILocation(line: 0, scope: !15371, inlinedAt: !16814)
!16814 = distinct !DILocation(line: 1777, column: 3, scope: !16815)
!16815 = distinct !DILexicalBlock(scope: !16804, file: !2518, line: 1776, column: 47)
!16816 = !DILocation(line: 0, scope: !15380, inlinedAt: !16817)
!16817 = distinct !DILocation(line: 195, column: 2, scope: !15371, inlinedAt: !16814)
!16818 = !DILocation(line: 225, column: 2, scope: !15387, inlinedAt: !16817)
!16819 = !DILocation(line: 225, column: 2, scope: !15388, inlinedAt: !16817)
!16820 = !DILocation(line: 225, column: 2, scope: !15391, inlinedAt: !16817)
!16821 = !DILocation(line: 196, column: 9, scope: !15371, inlinedAt: !16814)
!16822 = !DILocation(line: 1778, column: 3, scope: !16823)
!16823 = distinct !DILexicalBlock(scope: !16824, file: !2518, line: 1778, column: 3)
!16824 = distinct !DILexicalBlock(scope: !16825, file: !2518, line: 1778, column: 3)
!16825 = distinct !DILexicalBlock(scope: !16815, file: !2518, line: 1778, column: 3)
!16826 = !DILocation(line: 0, scope: !14729, inlinedAt: !16827)
!16827 = distinct !DILocation(line: 1780, column: 2, scope: !16755)
!16828 = !DILocation(line: 194, column: 2, scope: !14737, inlinedAt: !16827)
!16829 = !DILocation(line: 194, column: 2, scope: !14738, inlinedAt: !16827)
!16830 = !DILocation(line: 194, column: 2, scope: !14741, inlinedAt: !16827)
!16831 = !DILocation(line: 0, scope: !14743, inlinedAt: !16832)
!16832 = distinct !DILocation(line: 215, column: 2, scope: !14729, inlinedAt: !16827)
!16833 = !DILocation(line: 95, column: 2, scope: !14743, inlinedAt: !16832)
!16834 = !DILocation(line: 1781, column: 1, scope: !16755)
!16835 = distinct !DISubprogram(name: "end_thread", scope: !2518, file: !2518, line: 1690, type: !14653, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !16836)
!16836 = !{!16837}
!16837 = !DILocalVariable(name: "thread", arg: 1, scope: !16835, file: !2518, line: 1690, type: !2410)
!16838 = !DILocation(line: 0, scope: !16835)
!16839 = !DILocation(line: 1695, column: 20, scope: !16840)
!16840 = distinct !DILexicalBlock(scope: !16835, file: !2518, line: 1695, column: 6)
!16841 = !DILocation(line: 1695, column: 33, scope: !16840)
!16842 = !DILocation(line: 1695, column: 49, scope: !16840)
!16843 = !DILocation(line: 1695, column: 6, scope: !16835)
!16844 = !DILocation(line: 1697, column: 29, scope: !16845)
!16845 = distinct !DILexicalBlock(scope: !16840, file: !2518, line: 1695, column: 56)
!16846 = !DILocation(line: 1698, column: 7, scope: !16847)
!16847 = distinct !DILexicalBlock(scope: !16845, file: !2518, line: 1698, column: 7)
!16848 = !DILocation(line: 1698, column: 7, scope: !16845)
!16849 = !DILocation(line: 0, scope: !14887, inlinedAt: !16850)
!16850 = distinct !DILocation(line: 1699, column: 4, scope: !16851)
!16851 = distinct !DILexicalBlock(scope: !16847, file: !2518, line: 1698, column: 35)
!16852 = !DILocation(line: 266, column: 28, scope: !14887, inlinedAt: !16850)
!16853 = !DILocation(line: 0, scope: !14895, inlinedAt: !16854)
!16854 = distinct !DILocation(line: 268, column: 3, scope: !14899, inlinedAt: !16850)
!16855 = !DILocation(line: 234, column: 2, scope: !14895, inlinedAt: !16854)
!16856 = !DILocation(line: 1700, column: 3, scope: !16851)
!16857 = !DILocation(line: 1701, column: 20, scope: !16858)
!16858 = distinct !DILexicalBlock(scope: !16845, file: !2518, line: 1701, column: 7)
!16859 = !DILocation(line: 1701, column: 30, scope: !16858)
!16860 = !DILocation(line: 1701, column: 7, scope: !16845)
!16861 = !DILocation(line: 1702, column: 4, scope: !16862)
!16862 = distinct !DILexicalBlock(scope: !16858, file: !2518, line: 1701, column: 39)
!16863 = !DILocation(line: 1703, column: 3, scope: !16862)
!16864 = !DILocation(line: 1704, column: 9, scope: !16845)
!16865 = !DILocation(line: 1705, column: 23, scope: !16845)
!16866 = !DILocation(line: 1705, column: 3, scope: !16845)
!16867 = !DILocation(line: 1706, column: 3, scope: !16845)
!16868 = !DILocation(line: 1722, column: 2, scope: !16845)
!16869 = !DILocation(line: 1723, column: 1, scope: !16835)
!16870 = distinct !DISubprogram(name: "unpend_all", scope: !2518, file: !2518, line: 1674, type: !16871, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !16873)
!16871 = !DISubroutineType(types: !16872)
!16872 = !{null, !2441}
!16873 = !{!16874, !16875}
!16874 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16870, file: !2518, line: 1674, type: !2441)
!16875 = !DILocalVariable(name: "thread", scope: !16870, file: !2518, line: 1676, type: !2410)
!16876 = !DILocation(line: 0, scope: !16870)
!16877 = !DILocation(line: 1678, column: 19, scope: !16870)
!16878 = !DILocation(line: 1678, column: 41, scope: !16870)
!16879 = !DILocation(line: 1678, column: 2, scope: !16870)
!16880 = !DILocation(line: 1679, column: 3, scope: !16881)
!16881 = distinct !DILexicalBlock(scope: !16870, file: !2518, line: 1678, column: 50)
!16882 = !DILocation(line: 1680, column: 9, scope: !16881)
!16883 = !DILocalVariable(name: "thread", arg: 1, scope: !16884, file: !13507, line: 65, type: !2410)
!16884 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13507, file: !13507, line: 65, type: !16885, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !16887)
!16885 = !DISubroutineType(types: !16886)
!16886 = !{null, !2410, !32}
!16887 = !{!16883, !16888}
!16888 = !DILocalVariable(name: "value", arg: 2, scope: !16884, file: !13507, line: 65, type: !32)
!16889 = !DILocation(line: 0, scope: !16884, inlinedAt: !16890)
!16890 = distinct !DILocation(line: 1681, column: 3, scope: !16881)
!16891 = !DILocation(line: 67, column: 15, scope: !16884, inlinedAt: !16890)
!16892 = !DILocation(line: 67, column: 33, scope: !16884, inlinedAt: !16890)
!16893 = !DILocation(line: 1682, column: 3, scope: !16881)
!16894 = distinct !{!16894, !16879, !16895}
!16895 = !DILocation(line: 1683, column: 2, scope: !16870)
!16896 = !DILocation(line: 1684, column: 1, scope: !16870)
!16897 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2518, file: !2518, line: 1794, type: !16898, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !16900)
!16898 = !DISubroutineType(types: !16899)
!16899 = !{!109, !2410, !15581}
!16900 = !{!16901, !16902, !16903, !16904}
!16901 = !DILocalVariable(name: "thread", arg: 1, scope: !16897, file: !2518, line: 1794, type: !2410)
!16902 = !DILocalVariable(name: "timeout", arg: 2, scope: !16897, file: !2518, line: 1794, type: !15581)
!16903 = !DILocalVariable(name: "key", scope: !16897, file: !2518, line: 1796, type: !14687)
!16904 = !DILocalVariable(name: "ret", scope: !16897, file: !2518, line: 1797, type: !109)
!16905 = !DILocation(line: 0, scope: !16897)
!16906 = !DILocation(line: 0, scope: !14695, inlinedAt: !16907)
!16907 = distinct !DILocation(line: 1796, column: 25, scope: !16897)
!16908 = !DILocation(line: 55, column: 2, scope: !14704, inlinedAt: !16909)
!16909 = distinct !DILocation(line: 145, column: 10, scope: !14695, inlinedAt: !16907)
!16910 = !DILocation(line: 0, scope: !14704, inlinedAt: !16909)
!16911 = !DILocation(line: 148, column: 2, scope: !14712, inlinedAt: !16907)
!16912 = !DILocation(line: 148, column: 2, scope: !14713, inlinedAt: !16907)
!16913 = !DILocation(line: 148, column: 2, scope: !14716, inlinedAt: !16907)
!16914 = !DILocation(line: 160, column: 2, scope: !14695, inlinedAt: !16907)
!16915 = !DILocation(line: 1801, column: 20, scope: !16916)
!16916 = distinct !DILexicalBlock(scope: !16897, file: !2518, line: 1801, column: 6)
!16917 = !DILocation(line: 1801, column: 33, scope: !16916)
!16918 = !DILocation(line: 1801, column: 49, scope: !16916)
!16919 = !DILocation(line: 1801, column: 6, scope: !16897)
!16920 = !DILocation(line: 1803, column: 13, scope: !16921)
!16921 = distinct !DILexicalBlock(scope: !16916, file: !2518, line: 1803, column: 13)
!16922 = !DILocation(line: 1803, column: 13, scope: !16916)
!16923 = !DILocation(line: 1805, column: 24, scope: !16924)
!16924 = distinct !DILexicalBlock(scope: !16921, file: !2518, line: 1805, column: 13)
!16925 = !DILocation(line: 1805, column: 21, scope: !16924)
!16926 = !DILocation(line: 1805, column: 34, scope: !16924)
!16927 = !DILocation(line: 1806, column: 20, scope: !16924)
!16928 = !DILocation(line: 1806, column: 44, scope: !16924)
!16929 = !DILocation(line: 1806, column: 30, scope: !16924)
!16930 = !DILocation(line: 1805, column: 13, scope: !16921)
!16931 = !DILocation(line: 1031, column: 3, scope: !15420, inlinedAt: !16932)
!16932 = distinct !DILocation(line: 48, column: 10, scope: !15424, inlinedAt: !16933)
!16933 = distinct !DILocation(line: 1809, column: 3, scope: !16934)
!16934 = distinct !DILexicalBlock(scope: !16935, file: !2518, line: 1809, column: 3)
!16935 = distinct !DILexicalBlock(scope: !16936, file: !2518, line: 1809, column: 3)
!16936 = distinct !DILexicalBlock(scope: !16924, file: !2518, line: 1808, column: 9)
!16937 = !DILocation(line: 0, scope: !15420, inlinedAt: !16932)
!16938 = !DILocation(line: 48, column: 9, scope: !15424, inlinedAt: !16933)
!16939 = !DILocation(line: 1809, column: 3, scope: !16935)
!16940 = !DILocation(line: 1809, column: 3, scope: !16941)
!16941 = distinct !DILexicalBlock(scope: !16934, file: !2518, line: 1809, column: 3)
!16942 = !DILocation(line: 1810, column: 23, scope: !16936)
!16943 = !DILocation(line: 1810, column: 42, scope: !16936)
!16944 = !DILocation(line: 1810, column: 3, scope: !16936)
!16945 = !DILocation(line: 1811, column: 22, scope: !16936)
!16946 = !DILocation(line: 1811, column: 3, scope: !16936)
!16947 = !DILocation(line: 0, scope: !15371, inlinedAt: !16948)
!16948 = distinct !DILocation(line: 1814, column: 9, scope: !16936)
!16949 = !DILocation(line: 0, scope: !15380, inlinedAt: !16950)
!16950 = distinct !DILocation(line: 195, column: 2, scope: !15371, inlinedAt: !16948)
!16951 = !DILocation(line: 225, column: 2, scope: !15387, inlinedAt: !16950)
!16952 = !DILocation(line: 225, column: 2, scope: !15388, inlinedAt: !16950)
!16953 = !DILocation(line: 225, column: 2, scope: !15391, inlinedAt: !16950)
!16954 = !DILocation(line: 196, column: 9, scope: !15371, inlinedAt: !16948)
!16955 = !DILocation(line: 1817, column: 3, scope: !16936)
!16956 = !DILocation(line: 0, scope: !16916)
!16957 = !DILocation(line: 0, scope: !14729, inlinedAt: !16958)
!16958 = distinct !DILocation(line: 1822, column: 2, scope: !16897)
!16959 = !DILocation(line: 194, column: 2, scope: !14737, inlinedAt: !16958)
!16960 = !DILocation(line: 194, column: 2, scope: !14738, inlinedAt: !16958)
!16961 = !DILocation(line: 194, column: 2, scope: !14741, inlinedAt: !16958)
!16962 = !DILocation(line: 0, scope: !14743, inlinedAt: !16963)
!16963 = distinct !DILocation(line: 215, column: 2, scope: !14729, inlinedAt: !16958)
!16964 = !DILocation(line: 95, column: 2, scope: !14743, inlinedAt: !16963)
!16965 = !DILocation(line: 1823, column: 2, scope: !16897)
!16966 = !DILocation(line: 1824, column: 1, scope: !16897)
!16967 = distinct !DISubprogram(name: "z_sched_wake", scope: !2518, file: !2518, line: 1882, type: !16968, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !16970)
!16968 = !DISubroutineType(types: !16969)
!16969 = !{!347, !2441, !109, !107}
!16970 = !{!16971, !16972, !16973, !16974, !16975, !16976, !16978}
!16971 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16967, file: !2518, line: 1882, type: !2441)
!16972 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !16967, file: !2518, line: 1882, type: !109)
!16973 = !DILocalVariable(name: "swap_data", arg: 3, scope: !16967, file: !2518, line: 1882, type: !107)
!16974 = !DILocalVariable(name: "thread", scope: !16967, file: !2518, line: 1884, type: !2410)
!16975 = !DILocalVariable(name: "ret", scope: !16967, file: !2518, line: 1885, type: !347)
!16976 = !DILocalVariable(name: "__i", scope: !16977, file: !2518, line: 1887, type: !14687)
!16977 = distinct !DILexicalBlock(scope: !16967, file: !2518, line: 1887, column: 2)
!16978 = !DILocalVariable(name: "__key", scope: !16977, file: !2518, line: 1887, type: !14687)
!16979 = !DILocation(line: 0, scope: !16967)
!16980 = !DILocation(line: 0, scope: !16977)
!16981 = !DILocation(line: 0, scope: !14695, inlinedAt: !16982)
!16982 = distinct !DILocation(line: 1887, column: 2, scope: !16977)
!16983 = !DILocation(line: 55, column: 2, scope: !14704, inlinedAt: !16984)
!16984 = distinct !DILocation(line: 145, column: 10, scope: !14695, inlinedAt: !16982)
!16985 = !DILocation(line: 0, scope: !14704, inlinedAt: !16984)
!16986 = !DILocation(line: 148, column: 2, scope: !14712, inlinedAt: !16982)
!16987 = !DILocation(line: 148, column: 2, scope: !14713, inlinedAt: !16982)
!16988 = !DILocation(line: 148, column: 2, scope: !14716, inlinedAt: !16982)
!16989 = !DILocation(line: 160, column: 2, scope: !14695, inlinedAt: !16982)
!16990 = !DILocation(line: 1888, column: 12, scope: !16991)
!16991 = distinct !DILexicalBlock(scope: !16992, file: !2518, line: 1887, column: 26)
!16992 = distinct !DILexicalBlock(scope: !16977, file: !2518, line: 1887, column: 2)
!16993 = !DILocation(line: 1890, column: 14, scope: !16994)
!16994 = distinct !DILexicalBlock(scope: !16991, file: !2518, line: 1890, column: 7)
!16995 = !DILocation(line: 1890, column: 7, scope: !16991)
!16996 = !DILocalVariable(name: "thread", arg: 1, scope: !16997, file: !16998, line: 134, type: !2410)
!16997 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !16998, file: !16998, line: 134, type: !16999, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !17001)
!16998 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16999 = !DISubroutineType(types: !17000)
!17000 = !{null, !2410, !32, !107}
!17001 = !{!16996, !17002, !17003}
!17002 = !DILocalVariable(name: "value", arg: 2, scope: !16997, file: !16998, line: 135, type: !32)
!17003 = !DILocalVariable(name: "data", arg: 3, scope: !16997, file: !16998, line: 136, type: !107)
!17004 = !DILocation(line: 0, scope: !16997, inlinedAt: !17005)
!17005 = distinct !DILocation(line: 1891, column: 4, scope: !17006)
!17006 = distinct !DILexicalBlock(scope: !16994, file: !2518, line: 1890, column: 23)
!17007 = !DILocation(line: 0, scope: !16884, inlinedAt: !17008)
!17008 = distinct !DILocation(line: 138, column: 2, scope: !16997, inlinedAt: !17005)
!17009 = !DILocation(line: 67, column: 15, scope: !16884, inlinedAt: !17008)
!17010 = !DILocation(line: 67, column: 33, scope: !16884, inlinedAt: !17008)
!17011 = !DILocation(line: 139, column: 15, scope: !16997, inlinedAt: !17005)
!17012 = !DILocation(line: 139, column: 25, scope: !16997, inlinedAt: !17005)
!17013 = !DILocation(line: 1894, column: 4, scope: !17006)
!17014 = !DILocation(line: 1895, column: 10, scope: !17006)
!17015 = !DILocation(line: 1896, column: 4, scope: !17006)
!17016 = !DILocation(line: 1898, column: 3, scope: !17006)
!17017 = !DILocation(line: 0, scope: !14729, inlinedAt: !17018)
!17018 = distinct !DILocation(line: 1887, column: 2, scope: !16992)
!17019 = !DILocation(line: 194, column: 2, scope: !14737, inlinedAt: !17018)
!17020 = !DILocation(line: 194, column: 2, scope: !14738, inlinedAt: !17018)
!17021 = !DILocation(line: 194, column: 2, scope: !14741, inlinedAt: !17018)
!17022 = !DILocation(line: 0, scope: !14743, inlinedAt: !17023)
!17023 = distinct !DILocation(line: 215, column: 2, scope: !14729, inlinedAt: !17018)
!17024 = !DILocation(line: 95, column: 2, scope: !14743, inlinedAt: !17023)
!17025 = !DILocation(line: 1901, column: 2, scope: !16967)
!17026 = distinct !DISubprogram(name: "z_sched_wait", scope: !2518, file: !2518, line: 1904, type: !17027, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2407, retainedNodes: !17030)
!17027 = !DISubroutineType(types: !17028)
!17028 = !{!109, !14698, !14687, !2441, !15581, !17029}
!17029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!17030 = !{!17031, !17032, !17033, !17034, !17035, !17036}
!17031 = !DILocalVariable(name: "lock", arg: 1, scope: !17026, file: !2518, line: 1904, type: !14698)
!17032 = !DILocalVariable(name: "key", arg: 2, scope: !17026, file: !2518, line: 1904, type: !14687)
!17033 = !DILocalVariable(name: "wait_q", arg: 3, scope: !17026, file: !2518, line: 1905, type: !2441)
!17034 = !DILocalVariable(name: "timeout", arg: 4, scope: !17026, file: !2518, line: 1905, type: !15581)
!17035 = !DILocalVariable(name: "data", arg: 5, scope: !17026, file: !2518, line: 1905, type: !17029)
!17036 = !DILocalVariable(name: "ret", scope: !17026, file: !2518, line: 1907, type: !109)
!17037 = !DILocation(line: 0, scope: !17026)
!17038 = !DILocation(line: 1907, column: 12, scope: !17026)
!17039 = !DILocation(line: 1909, column: 11, scope: !17040)
!17040 = distinct !DILexicalBlock(scope: !17026, file: !2518, line: 1909, column: 6)
!17041 = !DILocation(line: 1909, column: 6, scope: !17026)
!17042 = !DILocation(line: 1910, column: 11, scope: !17043)
!17043 = distinct !DILexicalBlock(scope: !17040, file: !2518, line: 1909, column: 20)
!17044 = !DILocation(line: 1910, column: 26, scope: !17043)
!17045 = !DILocation(line: 1910, column: 9, scope: !17043)
!17046 = !DILocation(line: 1911, column: 2, scope: !17043)
!17047 = !DILocation(line: 1912, column: 2, scope: !17026)
!17048 = distinct !DISubprogram(name: "z_impl_k_condvar_init", scope: !2544, file: !2544, line: 16, type: !17049, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2525, retainedNodes: !17060)
!17049 = !DISubroutineType(types: !17050)
!17050 = !{!109, !17051}
!17051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17052, size: 32)
!17052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_condvar", file: !118, line: 2828, size: 64, elements: !17053)
!17053 = !{!17054}
!17054 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !17052, file: !118, line: 2829, baseType: !17055, size: 64)
!17055 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !17056)
!17056 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !17057)
!17057 = !{!17058}
!17058 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !17056, file: !122, line: 232, baseType: !17059, size: 64)
!17059 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !2530)
!17060 = !{!17061}
!17061 = !DILocalVariable(name: "condvar", arg: 1, scope: !17048, file: !2544, line: 16, type: !17051)
!17062 = !DILocation(line: 0, scope: !17048)
!17063 = !DILocation(line: 18, column: 25, scope: !17048)
!17064 = !DILocation(line: 18, column: 2, scope: !17048)
!17065 = !DILocation(line: 23, column: 2, scope: !17048)
!17066 = distinct !DISubprogram(name: "z_waitq_init", scope: !13848, file: !13848, line: 47, type: !17067, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2525, retainedNodes: !17070)
!17067 = !DISubroutineType(types: !17068)
!17068 = !{null, !17069}
!17069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17055, size: 32)
!17070 = !{!17071}
!17071 = !DILocalVariable(name: "w", arg: 1, scope: !17066, file: !13848, line: 47, type: !17069)
!17072 = !DILocation(line: 0, scope: !17066)
!17073 = !DILocation(line: 49, column: 21, scope: !17066)
!17074 = !DILocation(line: 49, column: 2, scope: !17066)
!17075 = !DILocation(line: 50, column: 1, scope: !17066)
!17076 = distinct !DISubprogram(name: "sys_dlist_init", scope: !127, file: !127, line: 197, type: !17077, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2525, retainedNodes: !17080)
!17077 = !DISubroutineType(types: !17078)
!17078 = !{null, !17079}
!17079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17059, size: 32)
!17080 = !{!17081}
!17081 = !DILocalVariable(name: "list", arg: 1, scope: !17076, file: !127, line: 197, type: !17079)
!17082 = !DILocation(line: 0, scope: !17076)
!17083 = !DILocation(line: 199, column: 8, scope: !17076)
!17084 = !DILocation(line: 199, column: 13, scope: !17076)
!17085 = !DILocation(line: 200, column: 8, scope: !17076)
!17086 = !DILocation(line: 200, column: 13, scope: !17076)
!17087 = !DILocation(line: 201, column: 1, scope: !17076)
!17088 = distinct !DISubprogram(name: "z_impl_k_condvar_signal", scope: !2544, file: !2544, line: 35, type: !17049, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2525, retainedNodes: !17089)
!17089 = !{!17090, !17091, !17096}
!17090 = !DILocalVariable(name: "condvar", arg: 1, scope: !17088, file: !2544, line: 35, type: !17051)
!17091 = !DILocalVariable(name: "key", scope: !17088, file: !2544, line: 37, type: !17092)
!17092 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !251, line: 106, baseType: !17093)
!17093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !251, line: 32, size: 32, elements: !17094)
!17094 = !{!17095}
!17095 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !17093, file: !251, line: 33, baseType: !109, size: 32)
!17096 = !DILocalVariable(name: "thread", scope: !17088, file: !2544, line: 41, type: !17097)
!17097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17098, size: 32)
!17098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1280, elements: !17099)
!17099 = !{!17100, !17138, !17150, !17151, !17152, !17153, !17154, !17160, !17172}
!17100 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !17098, file: !156, line: 247, baseType: !17101, size: 384)
!17101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 384, elements: !17102)
!17102 = !{!17103, !17113, !17114, !17115, !17116, !17125, !17126, !17127}
!17103 = !DIDerivedType(tag: DW_TAG_member, scope: !17101, file: !156, line: 60, baseType: !17104, size: 64)
!17104 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !17101, file: !156, line: 60, size: 64, elements: !17105)
!17105 = !{!17106, !17107}
!17106 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !17104, file: !156, line: 61, baseType: !2529, size: 64)
!17107 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !17104, file: !156, line: 62, baseType: !17108, size: 64)
!17108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !17109)
!17109 = !{!17110}
!17110 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !17108, file: !168, line: 50, baseType: !17111, size: 64)
!17111 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17112, size: 64, elements: !173)
!17112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17108, size: 32)
!17113 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !17101, file: !156, line: 68, baseType: !17069, size: 32, offset: 64)
!17114 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !17101, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!17115 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !17101, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!17116 = !DIDerivedType(tag: DW_TAG_member, scope: !17101, file: !156, line: 90, baseType: !17117, size: 16, offset: 112)
!17117 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !17101, file: !156, line: 90, size: 16, elements: !17118)
!17118 = !{!17119, !17124}
!17119 = !DIDerivedType(tag: DW_TAG_member, scope: !17117, file: !156, line: 91, baseType: !17120, size: 16)
!17120 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !17117, file: !156, line: 91, size: 16, elements: !17121)
!17121 = !{!17122, !17123}
!17122 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !17120, file: !156, line: 96, baseType: !188, size: 8)
!17123 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !17120, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!17124 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !17117, file: !156, line: 100, baseType: !192, size: 16)
!17125 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !17101, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!17126 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !17101, file: !156, line: 127, baseType: !107, size: 32, offset: 160)
!17127 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !17101, file: !156, line: 131, baseType: !17128, size: 192, offset: 192)
!17128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !17129)
!17129 = !{!17130, !17131, !17137}
!17130 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !17128, file: !122, line: 245, baseType: !2529, size: 64)
!17131 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !17128, file: !122, line: 246, baseType: !17132, size: 32, offset: 64)
!17132 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !17133)
!17133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17134, size: 32)
!17134 = !DISubroutineType(types: !17135)
!17135 = !{null, !17136}
!17136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17128, size: 32)
!17137 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !17128, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!17138 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !17098, file: !156, line: 250, baseType: !17139, size: 288, offset: 384)
!17139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !17140)
!17140 = !{!17141, !17142, !17143, !17144, !17145, !17146, !17147, !17148, !17149}
!17141 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !17139, file: !209, line: 26, baseType: !110, size: 32)
!17142 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !17139, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!17143 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !17139, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!17144 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !17139, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!17145 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !17139, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!17146 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !17139, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!17147 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !17139, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!17148 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !17139, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!17149 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !17139, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!17150 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !17098, file: !156, line: 253, baseType: !107, size: 32, offset: 672)
!17151 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !17098, file: !156, line: 256, baseType: !17055, size: 64, offset: 704)
!17152 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !17098, file: !156, line: 279, baseType: !223, size: 256, offset: 768)
!17153 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !17098, file: !156, line: 294, baseType: !109, size: 32, offset: 1024)
!17154 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !17098, file: !156, line: 300, baseType: !17155, size: 96, offset: 1056)
!17155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !17156)
!17156 = !{!17157, !17158, !17159}
!17157 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !17155, file: !156, line: 153, baseType: !22, size: 32)
!17158 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !17155, file: !156, line: 162, baseType: !232, size: 32, offset: 32)
!17159 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !17155, file: !156, line: 168, baseType: !232, size: 32, offset: 64)
!17160 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !17098, file: !156, line: 325, baseType: !17161, size: 32, offset: 1152)
!17161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17162, size: 32)
!17162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !17163)
!17163 = !{!17164, !17170, !17171}
!17164 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !17162, file: !118, line: 5074, baseType: !17165, size: 96)
!17165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !241, line: 56, size: 96, elements: !17166)
!17166 = !{!17167, !17168, !17169}
!17167 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !17165, file: !241, line: 57, baseType: !244, size: 32)
!17168 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !17165, file: !241, line: 58, baseType: !107, size: 32, offset: 32)
!17169 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !17165, file: !241, line: 59, baseType: !232, size: 32, offset: 64)
!17170 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !17162, file: !118, line: 5075, baseType: !17055, size: 64, offset: 96)
!17171 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !17162, file: !118, line: 5076, baseType: !2545, size: 32, offset: 160)
!17172 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !17098, file: !156, line: 343, baseType: !17173, size: 64, offset: 1184)
!17173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !209, line: 60, size: 64, elements: !17174)
!17174 = !{!17175, !17176}
!17175 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !17173, file: !209, line: 63, baseType: !110, size: 32)
!17176 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !17173, file: !209, line: 66, baseType: !110, size: 32, offset: 32)
!17177 = !DILocation(line: 0, scope: !17088)
!17178 = !DILocalVariable(name: "l", arg: 1, scope: !17179, file: !251, line: 136, type: !17182)
!17179 = distinct !DISubprogram(name: "k_spin_lock", scope: !251, file: !251, line: 136, type: !17180, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2525, retainedNodes: !17183)
!17180 = !DISubroutineType(types: !17181)
!17181 = !{!17092, !17182}
!17182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2545, size: 32)
!17183 = !{!17178, !17184}
!17184 = !DILocalVariable(name: "k", scope: !17179, file: !251, line: 139, type: !17092)
!17185 = !DILocation(line: 0, scope: !17179, inlinedAt: !17186)
!17186 = distinct !DILocation(line: 37, column: 25, scope: !17088)
!17187 = !DILocation(line: 55, column: 2, scope: !17188, inlinedAt: !17192)
!17188 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6165, file: !6165, line: 42, type: !6166, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2525, retainedNodes: !17189)
!17189 = !{!17190, !17191}
!17190 = !DILocalVariable(name: "key", scope: !17188, file: !6165, line: 44, type: !32)
!17191 = !DILocalVariable(name: "tmp", scope: !17188, file: !6165, line: 53, type: !32)
!17192 = distinct !DILocation(line: 145, column: 10, scope: !17179, inlinedAt: !17186)
!17193 = !{i64 2282027}
!17194 = !DILocation(line: 0, scope: !17188, inlinedAt: !17192)
!17195 = !DILocation(line: 148, column: 2, scope: !17196, inlinedAt: !17186)
!17196 = distinct !DILexicalBlock(scope: !17197, file: !251, line: 148, column: 2)
!17197 = distinct !DILexicalBlock(scope: !17179, file: !251, line: 148, column: 2)
!17198 = !DILocation(line: 148, column: 2, scope: !17197, inlinedAt: !17186)
!17199 = !DILocation(line: 148, column: 2, scope: !17200, inlinedAt: !17186)
!17200 = distinct !DILexicalBlock(scope: !17196, file: !251, line: 148, column: 2)
!17201 = !DILocation(line: 160, column: 2, scope: !17179, inlinedAt: !17186)
!17202 = !DILocation(line: 41, column: 60, scope: !17088)
!17203 = !DILocation(line: 41, column: 28, scope: !17088)
!17204 = !DILocation(line: 43, column: 13, scope: !17205)
!17205 = distinct !DILexicalBlock(scope: !17088, file: !2544, line: 43, column: 6)
!17206 = !DILocation(line: 43, column: 6, scope: !17088)
!17207 = !DILocalVariable(name: "thread", arg: 1, scope: !17208, file: !13507, line: 65, type: !17097)
!17208 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13507, file: !13507, line: 65, type: !17209, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2525, retainedNodes: !17211)
!17209 = !DISubroutineType(types: !17210)
!17210 = !{null, !17097, !32}
!17211 = !{!17207, !17212}
!17212 = !DILocalVariable(name: "value", arg: 2, scope: !17208, file: !13507, line: 65, type: !32)
!17213 = !DILocation(line: 0, scope: !17208, inlinedAt: !17214)
!17214 = distinct !DILocation(line: 46, column: 3, scope: !17215)
!17215 = distinct !DILexicalBlock(scope: !17205, file: !2544, line: 43, column: 22)
!17216 = !DILocation(line: 67, column: 15, scope: !17208, inlinedAt: !17214)
!17217 = !DILocation(line: 67, column: 33, scope: !17208, inlinedAt: !17214)
!17218 = !DILocation(line: 47, column: 3, scope: !17215)
!17219 = !DILocation(line: 48, column: 3, scope: !17215)
!17220 = !DILocation(line: 49, column: 2, scope: !17215)
!17221 = !DILocalVariable(name: "key", arg: 2, scope: !17222, file: !251, line: 190, type: !17092)
!17222 = distinct !DISubprogram(name: "k_spin_unlock", scope: !251, file: !251, line: 189, type: !17223, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2525, retainedNodes: !17225)
!17223 = !DISubroutineType(types: !17224)
!17224 = !{null, !17182, !17092}
!17225 = !{!17226, !17221}
!17226 = !DILocalVariable(name: "l", arg: 1, scope: !17222, file: !251, line: 189, type: !17182)
!17227 = !DILocation(line: 0, scope: !17222, inlinedAt: !17228)
!17228 = distinct !DILocation(line: 50, column: 3, scope: !17229)
!17229 = distinct !DILexicalBlock(scope: !17205, file: !2544, line: 49, column: 9)
!17230 = !DILocation(line: 194, column: 2, scope: !17231, inlinedAt: !17228)
!17231 = distinct !DILexicalBlock(scope: !17232, file: !251, line: 194, column: 2)
!17232 = distinct !DILexicalBlock(scope: !17222, file: !251, line: 194, column: 2)
!17233 = !DILocation(line: 194, column: 2, scope: !17232, inlinedAt: !17228)
!17234 = !DILocation(line: 194, column: 2, scope: !17235, inlinedAt: !17228)
!17235 = distinct !DILexicalBlock(scope: !17231, file: !251, line: 194, column: 2)
!17236 = !DILocalVariable(name: "key", arg: 1, scope: !17237, file: !6165, line: 84, type: !32)
!17237 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6165, file: !6165, line: 84, type: !6176, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2525, retainedNodes: !17238)
!17238 = !{!17236}
!17239 = !DILocation(line: 0, scope: !17237, inlinedAt: !17240)
!17240 = distinct !DILocation(line: 215, column: 2, scope: !17222, inlinedAt: !17228)
!17241 = !DILocation(line: 95, column: 2, scope: !17237, inlinedAt: !17240)
!17242 = !{i64 2282844}
!17243 = !DILocation(line: 55, column: 2, scope: !17088)
!17244 = distinct !DISubprogram(name: "z_impl_k_condvar_broadcast", scope: !2544, file: !2544, line: 67, type: !17049, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2525, retainedNodes: !17245)
!17245 = !{!17246, !17247, !17248, !17249}
!17246 = !DILocalVariable(name: "condvar", arg: 1, scope: !17244, file: !2544, line: 67, type: !17051)
!17247 = !DILocalVariable(name: "pending_thread", scope: !17244, file: !2544, line: 69, type: !17097)
!17248 = !DILocalVariable(name: "key", scope: !17244, file: !2544, line: 70, type: !17092)
!17249 = !DILocalVariable(name: "woken", scope: !17244, file: !2544, line: 71, type: !109)
!17250 = !DILocation(line: 0, scope: !17244)
!17251 = !DILocation(line: 0, scope: !17179, inlinedAt: !17252)
!17252 = distinct !DILocation(line: 73, column: 8, scope: !17244)
!17253 = !DILocation(line: 55, column: 2, scope: !17188, inlinedAt: !17254)
!17254 = distinct !DILocation(line: 145, column: 10, scope: !17179, inlinedAt: !17252)
!17255 = !DILocation(line: 0, scope: !17188, inlinedAt: !17254)
!17256 = !DILocation(line: 148, column: 2, scope: !17196, inlinedAt: !17252)
!17257 = !DILocation(line: 148, column: 2, scope: !17197, inlinedAt: !17252)
!17258 = !DILocation(line: 148, column: 2, scope: !17200, inlinedAt: !17252)
!17259 = !DILocation(line: 160, column: 2, scope: !17179, inlinedAt: !17252)
!17260 = !DILocation(line: 78, column: 27, scope: !17244)
!17261 = !DILocation(line: 78, column: 68, scope: !17244)
!17262 = !DILocation(line: 78, column: 2, scope: !17244)
!17263 = !DILocation(line: 80, column: 8, scope: !17264)
!17264 = distinct !DILexicalBlock(scope: !17244, file: !2544, line: 79, column: 15)
!17265 = !DILocation(line: 0, scope: !17208, inlinedAt: !17266)
!17266 = distinct !DILocation(line: 81, column: 3, scope: !17264)
!17267 = !DILocation(line: 67, column: 15, scope: !17208, inlinedAt: !17266)
!17268 = !DILocation(line: 67, column: 33, scope: !17208, inlinedAt: !17266)
!17269 = !DILocation(line: 82, column: 3, scope: !17264)
!17270 = distinct !{!17270, !17262, !17271}
!17271 = !DILocation(line: 83, column: 2, scope: !17244)
!17272 = !DILocation(line: 87, column: 2, scope: !17244)
!17273 = !DILocation(line: 89, column: 2, scope: !17244)
!17274 = distinct !DISubprogram(name: "z_impl_k_condvar_wait", scope: !2544, file: !2544, line: 100, type: !17275, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2525, retainedNodes: !17288)
!17275 = !DISubroutineType(types: !17276)
!17276 = !{!109, !17051, !17277, !17284}
!17277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17278, size: 32)
!17278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !118, line: 2720, size: 160, elements: !17279)
!17279 = !{!17280, !17281, !17282, !17283}
!17280 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !17278, file: !118, line: 2722, baseType: !17055, size: 64)
!17281 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !17278, file: !118, line: 2724, baseType: !17097, size: 32, offset: 64)
!17282 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !17278, file: !118, line: 2727, baseType: !110, size: 32, offset: 96)
!17283 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !17278, file: !118, line: 2730, baseType: !109, size: 32, offset: 128)
!17284 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !17285)
!17285 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !17286)
!17286 = !{!17287}
!17287 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !17285, file: !104, line: 66, baseType: !103, size: 64)
!17288 = !{!17289, !17290, !17291, !17292, !17293}
!17289 = !DILocalVariable(name: "condvar", arg: 1, scope: !17274, file: !2544, line: 100, type: !17051)
!17290 = !DILocalVariable(name: "mutex", arg: 2, scope: !17274, file: !2544, line: 100, type: !17277)
!17291 = !DILocalVariable(name: "timeout", arg: 3, scope: !17274, file: !2544, line: 101, type: !17284)
!17292 = !DILocalVariable(name: "key", scope: !17274, file: !2544, line: 103, type: !17092)
!17293 = !DILocalVariable(name: "ret", scope: !17274, file: !2544, line: 104, type: !109)
!17294 = !DILocation(line: 0, scope: !17274)
!17295 = !DILocation(line: 0, scope: !17179, inlinedAt: !17296)
!17296 = distinct !DILocation(line: 108, column: 8, scope: !17274)
!17297 = !DILocation(line: 55, column: 2, scope: !17188, inlinedAt: !17298)
!17298 = distinct !DILocation(line: 145, column: 10, scope: !17179, inlinedAt: !17296)
!17299 = !DILocation(line: 0, scope: !17188, inlinedAt: !17298)
!17300 = !DILocation(line: 148, column: 2, scope: !17196, inlinedAt: !17296)
!17301 = !DILocation(line: 148, column: 2, scope: !17197, inlinedAt: !17296)
!17302 = !DILocation(line: 148, column: 2, scope: !17200, inlinedAt: !17296)
!17303 = !DILocation(line: 160, column: 2, scope: !17179, inlinedAt: !17296)
!17304 = !DILocation(line: 109, column: 2, scope: !17274)
!17305 = !DILocation(line: 111, column: 42, scope: !17274)
!17306 = !DILocation(line: 111, column: 8, scope: !17274)
!17307 = !DILocation(line: 112, column: 2, scope: !17274)
!17308 = !DILocation(line: 116, column: 2, scope: !17274)
!17309 = distinct !DISubprogram(name: "k_mutex_unlock", scope: !3297, file: !3297, line: 944, type: !17310, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2525, retainedNodes: !17312)
!17310 = !DISubroutineType(types: !17311)
!17311 = !{!109, !17277}
!17312 = !{!17313}
!17313 = !DILocalVariable(name: "mutex", arg: 1, scope: !17309, file: !3297, line: 944, type: !17277)
!17314 = !DILocation(line: 0, scope: !17309)
!17315 = !DILocation(line: 952, column: 2, scope: !17316)
!17316 = distinct !DILexicalBlock(scope: !17309, file: !3297, line: 952, column: 2)
!17317 = !{i64 2155071219}
!17318 = !DILocation(line: 953, column: 9, scope: !17309)
!17319 = !DILocation(line: 953, column: 2, scope: !17309)
!17320 = distinct !DISubprogram(name: "k_mutex_lock", scope: !3297, file: !3297, line: 927, type: !17321, scopeLine: 928, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2525, retainedNodes: !17323)
!17321 = !DISubroutineType(types: !17322)
!17322 = !{!109, !17277, !17284}
!17323 = !{!17324, !17325}
!17324 = !DILocalVariable(name: "mutex", arg: 1, scope: !17320, file: !3297, line: 927, type: !17277)
!17325 = !DILocalVariable(name: "timeout", arg: 2, scope: !17320, file: !3297, line: 927, type: !17284)
!17326 = !DILocation(line: 0, scope: !17320)
!17327 = !DILocation(line: 936, column: 2, scope: !17328)
!17328 = distinct !DILexicalBlock(scope: !17320, file: !3297, line: 936, column: 2)
!17329 = !{i64 2155071151}
!17330 = !DILocation(line: 937, column: 9, scope: !17320)
!17331 = !DILocation(line: 937, column: 2, scope: !17320)
!17332 = distinct !DISubprogram(name: "z_data_copy", scope: !17333, file: !17333, line: 22, type: !3155, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3138, retainedNodes: !2106)
!17333 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17334 = !DILocation(line: 24, column: 2, scope: !17332)
!17335 = !DILocation(line: 27, column: 2, scope: !17332)
!17336 = !DILocation(line: 71, column: 1, scope: !17332)
!17337 = distinct !DISubprogram(name: "z_add_timeout", scope: !2580, file: !2580, line: 88, type: !17338, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !17344)
!17338 = !DISubroutineType(types: !17339)
!17339 = !{null, !2553, !2572, !17340}
!17340 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !17341)
!17341 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !17342)
!17342 = !{!17343}
!17343 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !17341, file: !104, line: 66, baseType: !103, size: 64)
!17344 = !{!17345, !17346, !17347, !17348, !17354, !17355, !17358, !17361}
!17345 = !DILocalVariable(name: "to", arg: 1, scope: !17337, file: !2580, line: 88, type: !2553)
!17346 = !DILocalVariable(name: "fn", arg: 2, scope: !17337, file: !2580, line: 88, type: !2572)
!17347 = !DILocalVariable(name: "timeout", arg: 3, scope: !17337, file: !2580, line: 89, type: !17340)
!17348 = !DILocalVariable(name: "__i", scope: !17349, file: !2580, line: 102, type: !17350)
!17349 = distinct !DILexicalBlock(scope: !17337, file: !2580, line: 102, column: 2)
!17350 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !251, line: 106, baseType: !17351)
!17351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !251, line: 32, size: 32, elements: !17352)
!17352 = !{!17353}
!17353 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !17351, file: !251, line: 33, baseType: !109, size: 32)
!17354 = !DILocalVariable(name: "__key", scope: !17349, file: !2580, line: 102, type: !17350)
!17355 = !DILocalVariable(name: "t", scope: !17356, file: !2580, line: 103, type: !2553)
!17356 = distinct !DILexicalBlock(scope: !17357, file: !2580, line: 102, column: 24)
!17357 = distinct !DILexicalBlock(scope: !17349, file: !2580, line: 102, column: 2)
!17358 = !DILocalVariable(name: "ticks", scope: !17359, file: !2580, line: 107, type: !103)
!17359 = distinct !DILexicalBlock(scope: !17360, file: !2580, line: 106, column: 39)
!17360 = distinct !DILexicalBlock(scope: !17356, file: !2580, line: 105, column: 7)
!17361 = !DILocalVariable(name: "next_time", scope: !17362, file: !2580, line: 137, type: !774)
!17362 = distinct !DILexicalBlock(scope: !17363, file: !2580, line: 127, column: 22)
!17363 = distinct !DILexicalBlock(scope: !17356, file: !2580, line: 127, column: 7)
!17364 = !DILocation(line: 0, scope: !17337)
!17365 = !DILocation(line: 91, column: 6, scope: !17366)
!17366 = distinct !DILexicalBlock(scope: !17337, file: !2580, line: 91, column: 6)
!17367 = !DILocation(line: 91, column: 6, scope: !17337)
!17368 = !DILocation(line: 99, column: 2, scope: !17369)
!17369 = distinct !DILexicalBlock(scope: !17370, file: !2580, line: 99, column: 2)
!17370 = distinct !DILexicalBlock(scope: !17337, file: !2580, line: 99, column: 2)
!17371 = !DILocation(line: 99, column: 2, scope: !17370)
!17372 = !DILocation(line: 99, column: 2, scope: !17373)
!17373 = distinct !DILexicalBlock(scope: !17369, file: !2580, line: 99, column: 2)
!17374 = !DILocation(line: 100, column: 6, scope: !17337)
!17375 = !DILocation(line: 100, column: 9, scope: !17337)
!17376 = !DILocation(line: 0, scope: !17349)
!17377 = !DILocalVariable(name: "l", arg: 1, scope: !17378, file: !251, line: 136, type: !17381)
!17378 = distinct !DISubprogram(name: "k_spin_lock", scope: !251, file: !251, line: 136, type: !17379, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !17382)
!17379 = !DISubroutineType(types: !17380)
!17380 = !{!17350, !17381}
!17381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2586, size: 32)
!17382 = !{!17377, !17383}
!17383 = !DILocalVariable(name: "k", scope: !17378, file: !251, line: 139, type: !17350)
!17384 = !DILocation(line: 0, scope: !17378, inlinedAt: !17385)
!17385 = distinct !DILocation(line: 102, column: 2, scope: !17349)
!17386 = !DILocation(line: 55, column: 2, scope: !17387, inlinedAt: !17391)
!17387 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6165, file: !6165, line: 42, type: !6166, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !17388)
!17388 = !{!17389, !17390}
!17389 = !DILocalVariable(name: "key", scope: !17387, file: !6165, line: 44, type: !32)
!17390 = !DILocalVariable(name: "tmp", scope: !17387, file: !6165, line: 53, type: !32)
!17391 = distinct !DILocation(line: 145, column: 10, scope: !17378, inlinedAt: !17385)
!17392 = !{i64 2287633}
!17393 = !DILocation(line: 0, scope: !17387, inlinedAt: !17391)
!17394 = !DILocation(line: 148, column: 2, scope: !17395, inlinedAt: !17385)
!17395 = distinct !DILexicalBlock(scope: !17396, file: !251, line: 148, column: 2)
!17396 = distinct !DILexicalBlock(scope: !17378, file: !251, line: 148, column: 2)
!17397 = !DILocation(line: 148, column: 2, scope: !17396, inlinedAt: !17385)
!17398 = !DILocation(line: 148, column: 2, scope: !17399, inlinedAt: !17385)
!17399 = distinct !DILexicalBlock(scope: !17395, file: !251, line: 148, column: 2)
!17400 = !DILocation(line: 160, column: 2, scope: !17378, inlinedAt: !17385)
!17401 = !DILocation(line: 106, column: 33, scope: !17360)
!17402 = !DILocation(line: 105, column: 7, scope: !17356)
!17403 = !DILocation(line: 107, column: 50, scope: !17359)
!17404 = !DILocation(line: 107, column: 48, scope: !17359)
!17405 = !DILocation(line: 0, scope: !17359)
!17406 = !DILocation(line: 109, column: 17, scope: !17359)
!17407 = !DILocation(line: 110, column: 3, scope: !17359)
!17408 = !DILocation(line: 111, column: 31, scope: !17409)
!17409 = distinct !DILexicalBlock(scope: !17360, file: !2580, line: 110, column: 10)
!17410 = !DILocation(line: 111, column: 37, scope: !17409)
!17411 = !DILocation(line: 111, column: 35, scope: !17409)
!17412 = !DILocation(line: 0, scope: !17360)
!17413 = !DILocation(line: 109, column: 8, scope: !17359)
!17414 = !DILocation(line: 109, column: 15, scope: !17359)
!17415 = !DILocation(line: 114, column: 12, scope: !17416)
!17416 = distinct !DILexicalBlock(scope: !17356, file: !2580, line: 114, column: 3)
!17417 = !DILocation(line: 0, scope: !17356)
!17418 = !DILocation(line: 114, column: 3, scope: !17416)
!17419 = !DILocation(line: 115, column: 24, scope: !17420)
!17420 = distinct !DILexicalBlock(scope: !17421, file: !2580, line: 115, column: 8)
!17421 = distinct !DILexicalBlock(scope: !17422, file: !2580, line: 114, column: 45)
!17422 = distinct !DILexicalBlock(scope: !17416, file: !2580, line: 114, column: 3)
!17423 = !DILocation(line: 115, column: 11, scope: !17420)
!17424 = !DILocation(line: 115, column: 18, scope: !17420)
!17425 = !DILocation(line: 115, column: 8, scope: !17421)
!17426 = !DILocation(line: 116, column: 15, scope: !17427)
!17427 = distinct !DILexicalBlock(scope: !17420, file: !2580, line: 115, column: 32)
!17428 = !DILocation(line: 117, column: 26, scope: !17427)
!17429 = !DILocation(line: 117, column: 5, scope: !17427)
!17430 = !DILocation(line: 123, column: 7, scope: !17356)
!17431 = !DILocation(line: 120, column: 15, scope: !17421)
!17432 = !DILocation(line: 114, column: 36, scope: !17422)
!17433 = distinct !{!17433, !17418, !17434}
!17434 = !DILocation(line: 121, column: 3, scope: !17416)
!17435 = !DILocation(line: 124, column: 4, scope: !17436)
!17436 = distinct !DILexicalBlock(scope: !17437, file: !2580, line: 123, column: 18)
!17437 = distinct !DILexicalBlock(scope: !17356, file: !2580, line: 123, column: 7)
!17438 = !DILocation(line: 125, column: 3, scope: !17436)
!17439 = !DILocation(line: 127, column: 13, scope: !17363)
!17440 = !DILocation(line: 127, column: 10, scope: !17363)
!17441 = !DILocation(line: 127, column: 7, scope: !17356)
!17442 = !DILocation(line: 137, column: 24, scope: !17362)
!17443 = !DILocation(line: 0, scope: !17362)
!17444 = !DILocation(line: 139, column: 18, scope: !17445)
!17445 = distinct !DILexicalBlock(scope: !17362, file: !2580, line: 139, column: 8)
!17446 = !DILocation(line: 139, column: 23, scope: !17445)
!17447 = !DILocation(line: 141, column: 5, scope: !17448)
!17448 = distinct !DILexicalBlock(scope: !17445, file: !2580, line: 140, column: 48)
!17449 = !DILocation(line: 142, column: 4, scope: !17448)
!17450 = !DILocalVariable(name: "key", arg: 2, scope: !17451, file: !251, line: 190, type: !17350)
!17451 = distinct !DISubprogram(name: "k_spin_unlock", scope: !251, file: !251, line: 189, type: !17452, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !17454)
!17452 = !DISubroutineType(types: !17453)
!17453 = !{null, !17381, !17350}
!17454 = !{!17455, !17450}
!17455 = !DILocalVariable(name: "l", arg: 1, scope: !17451, file: !251, line: 189, type: !17381)
!17456 = !DILocation(line: 0, scope: !17451, inlinedAt: !17457)
!17457 = distinct !DILocation(line: 102, column: 2, scope: !17357)
!17458 = !DILocation(line: 194, column: 2, scope: !17459, inlinedAt: !17457)
!17459 = distinct !DILexicalBlock(scope: !17460, file: !251, line: 194, column: 2)
!17460 = distinct !DILexicalBlock(scope: !17451, file: !251, line: 194, column: 2)
!17461 = !DILocation(line: 194, column: 2, scope: !17460, inlinedAt: !17457)
!17462 = !DILocation(line: 194, column: 2, scope: !17463, inlinedAt: !17457)
!17463 = distinct !DILexicalBlock(scope: !17459, file: !251, line: 194, column: 2)
!17464 = !DILocalVariable(name: "key", arg: 1, scope: !17465, file: !6165, line: 84, type: !32)
!17465 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6165, file: !6165, line: 84, type: !6176, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !17466)
!17466 = !{!17464}
!17467 = !DILocation(line: 0, scope: !17465, inlinedAt: !17468)
!17468 = distinct !DILocation(line: 215, column: 2, scope: !17451, inlinedAt: !17457)
!17469 = !DILocation(line: 95, column: 2, scope: !17465, inlinedAt: !17468)
!17470 = !{i64 2288450}
!17471 = !DILocation(line: 148, column: 1, scope: !17337)
!17472 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !127, file: !127, line: 225, type: !17473, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !17477)
!17473 = !DISubroutineType(types: !17474)
!17474 = !{!347, !17475}
!17475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17476, size: 32)
!17476 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2557)
!17477 = !{!17478}
!17478 = !DILocalVariable(name: "node", arg: 1, scope: !17472, file: !127, line: 225, type: !17475)
!17479 = !DILocation(line: 0, scope: !17472)
!17480 = !DILocation(line: 227, column: 15, scope: !17472)
!17481 = !DILocation(line: 227, column: 20, scope: !17472)
!17482 = !DILocation(line: 227, column: 2, scope: !17472)
!17483 = distinct !DISubprogram(name: "elapsed", scope: !2580, file: !2580, line: 62, type: !17484, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !2106)
!17484 = !DISubroutineType(types: !17485)
!17485 = !{!774}
!17486 = !DILocation(line: 64, column: 9, scope: !17483)
!17487 = !DILocation(line: 64, column: 28, scope: !17483)
!17488 = !DILocation(line: 64, column: 35, scope: !17483)
!17489 = !DILocation(line: 64, column: 2, scope: !17483)
!17490 = distinct !DISubprogram(name: "first", scope: !2580, file: !2580, line: 39, type: !17491, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !17493)
!17491 = !DISubroutineType(types: !17492)
!17492 = !{!2553}
!17493 = !{!17494}
!17494 = !DILocalVariable(name: "t", scope: !17490, file: !2580, line: 41, type: !17495)
!17495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2557, size: 32)
!17496 = !DILocation(line: 41, column: 19, scope: !17490)
!17497 = !DILocation(line: 0, scope: !17490)
!17498 = !DILocation(line: 43, column: 9, scope: !17490)
!17499 = !DILocation(line: 43, column: 2, scope: !17490)
!17500 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !127, file: !127, line: 443, type: !17501, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !17503)
!17501 = !DISubroutineType(types: !17502)
!17502 = !{null, !17495, !17495}
!17503 = !{!17504, !17505, !17506}
!17504 = !DILocalVariable(name: "successor", arg: 1, scope: !17500, file: !127, line: 443, type: !17495)
!17505 = !DILocalVariable(name: "node", arg: 2, scope: !17500, file: !127, line: 443, type: !17495)
!17506 = !DILocalVariable(name: "prev", scope: !17500, file: !127, line: 445, type: !17507)
!17507 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !17495)
!17508 = !DILocation(line: 0, scope: !17500)
!17509 = !DILocation(line: 445, column: 39, scope: !17500)
!17510 = !DILocation(line: 447, column: 8, scope: !17500)
!17511 = !DILocation(line: 447, column: 13, scope: !17500)
!17512 = !DILocation(line: 448, column: 8, scope: !17500)
!17513 = !DILocation(line: 448, column: 13, scope: !17500)
!17514 = !DILocation(line: 449, column: 8, scope: !17500)
!17515 = !DILocation(line: 449, column: 13, scope: !17500)
!17516 = !DILocation(line: 450, column: 18, scope: !17500)
!17517 = !DILocation(line: 451, column: 1, scope: !17500)
!17518 = distinct !DISubprogram(name: "next", scope: !2580, file: !2580, line: 46, type: !17519, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !17521)
!17519 = !DISubroutineType(types: !17520)
!17520 = !{!2553, !2553}
!17521 = !{!17522, !17523}
!17522 = !DILocalVariable(name: "t", arg: 1, scope: !17518, file: !2580, line: 46, type: !2553)
!17523 = !DILocalVariable(name: "n", scope: !17518, file: !2580, line: 48, type: !17495)
!17524 = !DILocation(line: 0, scope: !17518)
!17525 = !DILocation(line: 48, column: 58, scope: !17518)
!17526 = !DILocation(line: 48, column: 19, scope: !17518)
!17527 = !DILocation(line: 50, column: 9, scope: !17518)
!17528 = !DILocation(line: 50, column: 2, scope: !17518)
!17529 = distinct !DISubprogram(name: "sys_dlist_append", scope: !127, file: !127, line: 404, type: !17530, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !17533)
!17530 = !DISubroutineType(types: !17531)
!17531 = !{null, !17532, !17495}
!17532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2585, size: 32)
!17533 = !{!17534, !17535, !17536}
!17534 = !DILocalVariable(name: "list", arg: 1, scope: !17529, file: !127, line: 404, type: !17532)
!17535 = !DILocalVariable(name: "node", arg: 2, scope: !17529, file: !127, line: 404, type: !17495)
!17536 = !DILocalVariable(name: "tail", scope: !17529, file: !127, line: 406, type: !17507)
!17537 = !DILocation(line: 0, scope: !17529)
!17538 = !DILocation(line: 406, column: 34, scope: !17529)
!17539 = !DILocation(line: 408, column: 8, scope: !17529)
!17540 = !DILocation(line: 408, column: 13, scope: !17529)
!17541 = !DILocation(line: 409, column: 8, scope: !17529)
!17542 = !DILocation(line: 409, column: 13, scope: !17529)
!17543 = !DILocation(line: 411, column: 8, scope: !17529)
!17544 = !DILocation(line: 411, column: 13, scope: !17529)
!17545 = !DILocation(line: 412, column: 13, scope: !17529)
!17546 = !DILocation(line: 413, column: 1, scope: !17529)
!17547 = distinct !DISubprogram(name: "next_timeout", scope: !2580, file: !2580, line: 67, type: !17484, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !17548)
!17548 = !{!17549, !17550, !17551}
!17549 = !DILocalVariable(name: "to", scope: !17547, file: !2580, line: 69, type: !2553)
!17550 = !DILocalVariable(name: "ticks_elapsed", scope: !17547, file: !2580, line: 70, type: !774)
!17551 = !DILocalVariable(name: "ret", scope: !17547, file: !2580, line: 71, type: !774)
!17552 = !DILocation(line: 69, column: 24, scope: !17547)
!17553 = !DILocation(line: 0, scope: !17547)
!17554 = !DILocation(line: 70, column: 26, scope: !17547)
!17555 = !DILocation(line: 73, column: 10, scope: !17556)
!17556 = distinct !DILexicalBlock(scope: !17547, file: !2580, line: 73, column: 6)
!17557 = !DILocation(line: 73, column: 19, scope: !17556)
!17558 = !DILocation(line: 74, column: 21, scope: !17556)
!17559 = !DILocation(line: 74, column: 30, scope: !17556)
!17560 = !DILocation(line: 74, column: 28, scope: !17556)
!17561 = !DILocation(line: 74, column: 45, scope: !17556)
!17562 = !DILocation(line: 73, column: 6, scope: !17547)
!17563 = !DILocation(line: 77, column: 9, scope: !17564)
!17564 = distinct !DILexicalBlock(scope: !17556, file: !2580, line: 76, column: 9)
!17565 = !DILocation(line: 0, scope: !17556)
!17566 = !DILocation(line: 81, column: 20, scope: !17567)
!17567 = distinct !DILexicalBlock(scope: !17547, file: !2580, line: 81, column: 6)
!17568 = !DILocation(line: 81, column: 6, scope: !17567)
!17569 = !DILocation(line: 81, column: 32, scope: !17567)
!17570 = !DILocation(line: 85, column: 2, scope: !17547)
!17571 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !127, file: !127, line: 341, type: !17572, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !17574)
!17572 = !DISubroutineType(types: !17573)
!17573 = !{!17495, !17532, !17495}
!17574 = !{!17575, !17576}
!17575 = !DILocalVariable(name: "list", arg: 1, scope: !17571, file: !127, line: 341, type: !17532)
!17576 = !DILocalVariable(name: "node", arg: 2, scope: !17571, file: !127, line: 342, type: !17495)
!17577 = !DILocation(line: 0, scope: !17571)
!17578 = !DILocation(line: 344, column: 15, scope: !17571)
!17579 = !DILocation(line: 344, column: 9, scope: !17571)
!17580 = !DILocation(line: 344, column: 26, scope: !17571)
!17581 = !DILocation(line: 344, column: 2, scope: !17571)
!17582 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !127, file: !127, line: 325, type: !17572, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !17583)
!17583 = !{!17584, !17585}
!17584 = !DILocalVariable(name: "list", arg: 1, scope: !17582, file: !127, line: 325, type: !17532)
!17585 = !DILocalVariable(name: "node", arg: 2, scope: !17582, file: !127, line: 326, type: !17495)
!17586 = !DILocation(line: 0, scope: !17582)
!17587 = !DILocation(line: 328, column: 24, scope: !17582)
!17588 = !DILocation(line: 328, column: 15, scope: !17582)
!17589 = !DILocation(line: 328, column: 9, scope: !17582)
!17590 = !DILocation(line: 328, column: 45, scope: !17582)
!17591 = !DILocation(line: 328, column: 2, scope: !17582)
!17592 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !127, file: !127, line: 294, type: !17593, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !17595)
!17593 = !DISubroutineType(types: !17594)
!17594 = !{!17495, !17532}
!17595 = !{!17596}
!17596 = !DILocalVariable(name: "list", arg: 1, scope: !17592, file: !127, line: 294, type: !17532)
!17597 = !DILocation(line: 0, scope: !17592)
!17598 = !DILocation(line: 296, column: 9, scope: !17592)
!17599 = !DILocation(line: 296, column: 2, scope: !17592)
!17600 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !127, file: !127, line: 266, type: !17601, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !17603)
!17601 = !DISubroutineType(types: !17602)
!17602 = !{!347, !17532}
!17603 = !{!17604}
!17604 = !DILocalVariable(name: "list", arg: 1, scope: !17600, file: !127, line: 266, type: !17532)
!17605 = !DILocation(line: 0, scope: !17600)
!17606 = !DILocation(line: 268, column: 15, scope: !17600)
!17607 = !DILocation(line: 268, column: 20, scope: !17600)
!17608 = !DILocation(line: 268, column: 2, scope: !17600)
!17609 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2580, file: !2580, line: 150, type: !17610, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !17612)
!17610 = !DISubroutineType(types: !17611)
!17611 = !{!109, !2553}
!17612 = !{!17613, !17614, !17615, !17617}
!17613 = !DILocalVariable(name: "to", arg: 1, scope: !17609, file: !2580, line: 150, type: !2553)
!17614 = !DILocalVariable(name: "ret", scope: !17609, file: !2580, line: 152, type: !109)
!17615 = !DILocalVariable(name: "__i", scope: !17616, file: !2580, line: 154, type: !17350)
!17616 = distinct !DILexicalBlock(scope: !17609, file: !2580, line: 154, column: 2)
!17617 = !DILocalVariable(name: "__key", scope: !17616, file: !2580, line: 154, type: !17350)
!17618 = !DILocation(line: 0, scope: !17609)
!17619 = !DILocation(line: 0, scope: !17616)
!17620 = !DILocation(line: 0, scope: !17378, inlinedAt: !17621)
!17621 = distinct !DILocation(line: 154, column: 2, scope: !17616)
!17622 = !DILocation(line: 55, column: 2, scope: !17387, inlinedAt: !17623)
!17623 = distinct !DILocation(line: 145, column: 10, scope: !17378, inlinedAt: !17621)
!17624 = !DILocation(line: 0, scope: !17387, inlinedAt: !17623)
!17625 = !DILocation(line: 148, column: 2, scope: !17395, inlinedAt: !17621)
!17626 = !DILocation(line: 148, column: 2, scope: !17396, inlinedAt: !17621)
!17627 = !DILocation(line: 148, column: 2, scope: !17399, inlinedAt: !17621)
!17628 = !DILocation(line: 160, column: 2, scope: !17378, inlinedAt: !17621)
!17629 = !DILocation(line: 155, column: 7, scope: !17630)
!17630 = distinct !DILexicalBlock(scope: !17631, file: !2580, line: 155, column: 7)
!17631 = distinct !DILexicalBlock(scope: !17632, file: !2580, line: 154, column: 24)
!17632 = distinct !DILexicalBlock(scope: !17616, file: !2580, line: 154, column: 2)
!17633 = !DILocation(line: 155, column: 7, scope: !17631)
!17634 = !DILocation(line: 156, column: 4, scope: !17635)
!17635 = distinct !DILexicalBlock(scope: !17630, file: !2580, line: 155, column: 39)
!17636 = !DILocation(line: 158, column: 3, scope: !17635)
!17637 = !DILocation(line: 0, scope: !17451, inlinedAt: !17638)
!17638 = distinct !DILocation(line: 154, column: 2, scope: !17632)
!17639 = !DILocation(line: 194, column: 2, scope: !17459, inlinedAt: !17638)
!17640 = !DILocation(line: 194, column: 2, scope: !17460, inlinedAt: !17638)
!17641 = !DILocation(line: 194, column: 2, scope: !17463, inlinedAt: !17638)
!17642 = !DILocation(line: 0, scope: !17465, inlinedAt: !17643)
!17643 = distinct !DILocation(line: 215, column: 2, scope: !17451, inlinedAt: !17638)
!17644 = !DILocation(line: 95, column: 2, scope: !17465, inlinedAt: !17643)
!17645 = !DILocation(line: 161, column: 2, scope: !17609)
!17646 = distinct !DISubprogram(name: "remove_timeout", scope: !2580, file: !2580, line: 53, type: !2574, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !17647)
!17647 = !{!17648}
!17648 = !DILocalVariable(name: "t", arg: 1, scope: !17646, file: !2580, line: 53, type: !2553)
!17649 = !DILocation(line: 0, scope: !17646)
!17650 = !DILocation(line: 55, column: 6, scope: !17651)
!17651 = distinct !DILexicalBlock(scope: !17646, file: !2580, line: 55, column: 6)
!17652 = !DILocation(line: 55, column: 14, scope: !17651)
!17653 = !DILocation(line: 55, column: 6, scope: !17646)
!17654 = !DILocation(line: 56, column: 25, scope: !17655)
!17655 = distinct !DILexicalBlock(scope: !17651, file: !2580, line: 55, column: 23)
!17656 = !DILocation(line: 56, column: 12, scope: !17655)
!17657 = !DILocation(line: 56, column: 19, scope: !17655)
!17658 = !DILocation(line: 57, column: 2, scope: !17655)
!17659 = !DILocation(line: 59, column: 23, scope: !17646)
!17660 = !DILocation(line: 59, column: 2, scope: !17646)
!17661 = !DILocation(line: 60, column: 1, scope: !17646)
!17662 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !127, file: !127, line: 496, type: !17663, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !17665)
!17663 = !DISubroutineType(types: !17664)
!17664 = !{null, !17495}
!17665 = !{!17666, !17667, !17668}
!17666 = !DILocalVariable(name: "node", arg: 1, scope: !17662, file: !127, line: 496, type: !17495)
!17667 = !DILocalVariable(name: "prev", scope: !17662, file: !127, line: 498, type: !17507)
!17668 = !DILocalVariable(name: "next", scope: !17662, file: !127, line: 499, type: !17507)
!17669 = !DILocation(line: 0, scope: !17662)
!17670 = !DILocation(line: 498, column: 34, scope: !17662)
!17671 = !DILocation(line: 499, column: 34, scope: !17662)
!17672 = !DILocation(line: 501, column: 8, scope: !17662)
!17673 = !DILocation(line: 501, column: 13, scope: !17662)
!17674 = !DILocation(line: 502, column: 8, scope: !17662)
!17675 = !DILocation(line: 502, column: 13, scope: !17662)
!17676 = !DILocation(line: 503, column: 2, scope: !17662)
!17677 = !DILocation(line: 504, column: 1, scope: !17662)
!17678 = distinct !DISubprogram(name: "sys_dnode_init", scope: !127, file: !127, line: 211, type: !17663, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !17679)
!17679 = !{!17680}
!17680 = !DILocalVariable(name: "node", arg: 1, scope: !17678, file: !127, line: 211, type: !17495)
!17681 = !DILocation(line: 0, scope: !17678)
!17682 = !DILocation(line: 213, column: 8, scope: !17678)
!17683 = !DILocation(line: 213, column: 13, scope: !17678)
!17684 = !DILocation(line: 214, column: 8, scope: !17678)
!17685 = !DILocation(line: 214, column: 13, scope: !17678)
!17686 = !DILocation(line: 215, column: 1, scope: !17678)
!17687 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2580, file: !2580, line: 183, type: !17688, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !17692)
!17688 = !DISubroutineType(types: !17689)
!17689 = !{!103, !17690}
!17690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17691, size: 32)
!17691 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2554)
!17692 = !{!17693, !17694, !17695, !17697}
!17693 = !DILocalVariable(name: "timeout", arg: 1, scope: !17687, file: !2580, line: 183, type: !17690)
!17694 = !DILocalVariable(name: "ticks", scope: !17687, file: !2580, line: 185, type: !103)
!17695 = !DILocalVariable(name: "__i", scope: !17696, file: !2580, line: 187, type: !17350)
!17696 = distinct !DILexicalBlock(scope: !17687, file: !2580, line: 187, column: 2)
!17697 = !DILocalVariable(name: "__key", scope: !17696, file: !2580, line: 187, type: !17350)
!17698 = !DILocation(line: 0, scope: !17687)
!17699 = !DILocation(line: 0, scope: !17696)
!17700 = !DILocation(line: 0, scope: !17378, inlinedAt: !17701)
!17701 = distinct !DILocation(line: 187, column: 2, scope: !17696)
!17702 = !DILocation(line: 55, column: 2, scope: !17387, inlinedAt: !17703)
!17703 = distinct !DILocation(line: 145, column: 10, scope: !17378, inlinedAt: !17701)
!17704 = !DILocation(line: 0, scope: !17387, inlinedAt: !17703)
!17705 = !DILocation(line: 148, column: 2, scope: !17395, inlinedAt: !17701)
!17706 = !DILocation(line: 148, column: 2, scope: !17396, inlinedAt: !17701)
!17707 = !DILocation(line: 148, column: 2, scope: !17399, inlinedAt: !17701)
!17708 = !DILocation(line: 160, column: 2, scope: !17378, inlinedAt: !17701)
!17709 = !DILocation(line: 188, column: 11, scope: !17710)
!17710 = distinct !DILexicalBlock(scope: !17711, file: !2580, line: 187, column: 24)
!17711 = distinct !DILexicalBlock(scope: !17696, file: !2580, line: 187, column: 2)
!17712 = !DILocation(line: 0, scope: !17451, inlinedAt: !17713)
!17713 = distinct !DILocation(line: 187, column: 2, scope: !17711)
!17714 = !DILocation(line: 194, column: 2, scope: !17459, inlinedAt: !17713)
!17715 = !DILocation(line: 194, column: 2, scope: !17460, inlinedAt: !17713)
!17716 = !DILocation(line: 194, column: 2, scope: !17463, inlinedAt: !17713)
!17717 = !DILocation(line: 0, scope: !17465, inlinedAt: !17718)
!17718 = distinct !DILocation(line: 215, column: 2, scope: !17451, inlinedAt: !17713)
!17719 = !DILocation(line: 95, column: 2, scope: !17465, inlinedAt: !17718)
!17720 = !DILocation(line: 191, column: 2, scope: !17687)
!17721 = distinct !DISubprogram(name: "timeout_rem", scope: !2580, file: !2580, line: 165, type: !17688, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !17722)
!17722 = !{!17723, !17724, !17725}
!17723 = !DILocalVariable(name: "timeout", arg: 1, scope: !17721, file: !2580, line: 165, type: !17690)
!17724 = !DILocalVariable(name: "ticks", scope: !17721, file: !2580, line: 167, type: !103)
!17725 = !DILocalVariable(name: "t", scope: !17726, file: !2580, line: 173, type: !2553)
!17726 = distinct !DILexicalBlock(scope: !17721, file: !2580, line: 173, column: 2)
!17727 = !DILocation(line: 0, scope: !17721)
!17728 = !DILocation(line: 169, column: 6, scope: !17729)
!17729 = distinct !DILexicalBlock(scope: !17721, file: !2580, line: 169, column: 6)
!17730 = !DILocation(line: 169, column: 6, scope: !17721)
!17731 = !DILocation(line: 173, column: 28, scope: !17726)
!17732 = !DILocation(line: 0, scope: !17726)
!17733 = !DILocation(line: 173, column: 39, scope: !17734)
!17734 = distinct !DILexicalBlock(scope: !17726, file: !2580, line: 173, column: 2)
!17735 = !DILocation(line: 173, column: 2, scope: !17726)
!17736 = !DILocation(line: 174, column: 15, scope: !17737)
!17737 = distinct !DILexicalBlock(scope: !17734, file: !2580, line: 173, column: 61)
!17738 = !DILocation(line: 174, column: 9, scope: !17737)
!17739 = !DILocation(line: 175, column: 15, scope: !17740)
!17740 = distinct !DILexicalBlock(scope: !17737, file: !2580, line: 175, column: 7)
!17741 = !DILocation(line: 175, column: 7, scope: !17737)
!17742 = !DILocation(line: 173, column: 52, scope: !17734)
!17743 = distinct !{!17743, !17735, !17744}
!17744 = !DILocation(line: 178, column: 2, scope: !17726)
!17745 = !DILocation(line: 180, column: 17, scope: !17721)
!17746 = !DILocation(line: 180, column: 15, scope: !17721)
!17747 = !DILocation(line: 180, column: 2, scope: !17721)
!17748 = !DILocation(line: 181, column: 1, scope: !17721)
!17749 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13916, file: !13916, line: 35, type: !17750, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !17752)
!17750 = !DISubroutineType(types: !17751)
!17751 = !{!347, !17690}
!17752 = !{!17753}
!17753 = !DILocalVariable(name: "to", arg: 1, scope: !17749, file: !13916, line: 35, type: !17690)
!17754 = !DILocation(line: 0, scope: !17749)
!17755 = !DILocation(line: 37, column: 35, scope: !17749)
!17756 = !DILocation(line: 37, column: 10, scope: !17749)
!17757 = !DILocation(line: 37, column: 9, scope: !17749)
!17758 = !DILocation(line: 37, column: 2, scope: !17749)
!17759 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2580, file: !2580, line: 194, type: !17688, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !17760)
!17760 = !{!17761, !17762, !17763, !17765}
!17761 = !DILocalVariable(name: "timeout", arg: 1, scope: !17759, file: !2580, line: 194, type: !17690)
!17762 = !DILocalVariable(name: "ticks", scope: !17759, file: !2580, line: 196, type: !103)
!17763 = !DILocalVariable(name: "__i", scope: !17764, file: !2580, line: 198, type: !17350)
!17764 = distinct !DILexicalBlock(scope: !17759, file: !2580, line: 198, column: 2)
!17765 = !DILocalVariable(name: "__key", scope: !17764, file: !2580, line: 198, type: !17350)
!17766 = !DILocation(line: 0, scope: !17759)
!17767 = !DILocation(line: 0, scope: !17764)
!17768 = !DILocation(line: 0, scope: !17378, inlinedAt: !17769)
!17769 = distinct !DILocation(line: 198, column: 2, scope: !17764)
!17770 = !DILocation(line: 55, column: 2, scope: !17387, inlinedAt: !17771)
!17771 = distinct !DILocation(line: 145, column: 10, scope: !17378, inlinedAt: !17769)
!17772 = !DILocation(line: 0, scope: !17387, inlinedAt: !17771)
!17773 = !DILocation(line: 148, column: 2, scope: !17395, inlinedAt: !17769)
!17774 = !DILocation(line: 148, column: 2, scope: !17396, inlinedAt: !17769)
!17775 = !DILocation(line: 148, column: 2, scope: !17399, inlinedAt: !17769)
!17776 = !DILocation(line: 160, column: 2, scope: !17378, inlinedAt: !17769)
!17777 = !DILocation(line: 199, column: 11, scope: !17778)
!17778 = distinct !DILexicalBlock(scope: !17779, file: !2580, line: 198, column: 24)
!17779 = distinct !DILexicalBlock(scope: !17764, file: !2580, line: 198, column: 2)
!17780 = !DILocation(line: 199, column: 23, scope: !17778)
!17781 = !DILocation(line: 0, scope: !17451, inlinedAt: !17782)
!17782 = distinct !DILocation(line: 198, column: 2, scope: !17779)
!17783 = !DILocation(line: 194, column: 2, scope: !17459, inlinedAt: !17782)
!17784 = !DILocation(line: 194, column: 2, scope: !17460, inlinedAt: !17782)
!17785 = !DILocation(line: 194, column: 2, scope: !17463, inlinedAt: !17782)
!17786 = !DILocation(line: 0, scope: !17465, inlinedAt: !17787)
!17787 = distinct !DILocation(line: 215, column: 2, scope: !17451, inlinedAt: !17782)
!17788 = !DILocation(line: 95, column: 2, scope: !17465, inlinedAt: !17787)
!17789 = !DILocation(line: 199, column: 21, scope: !17778)
!17790 = !DILocation(line: 202, column: 2, scope: !17759)
!17791 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2580, file: !2580, line: 205, type: !17484, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !17792)
!17792 = !{!17793, !17794, !17796}
!17793 = !DILocalVariable(name: "ret", scope: !17791, file: !2580, line: 207, type: !774)
!17794 = !DILocalVariable(name: "__i", scope: !17795, file: !2580, line: 209, type: !17350)
!17795 = distinct !DILexicalBlock(scope: !17791, file: !2580, line: 209, column: 2)
!17796 = !DILocalVariable(name: "__key", scope: !17795, file: !2580, line: 209, type: !17350)
!17797 = !DILocation(line: 0, scope: !17791)
!17798 = !DILocation(line: 0, scope: !17795)
!17799 = !DILocation(line: 0, scope: !17378, inlinedAt: !17800)
!17800 = distinct !DILocation(line: 209, column: 2, scope: !17795)
!17801 = !DILocation(line: 55, column: 2, scope: !17387, inlinedAt: !17802)
!17802 = distinct !DILocation(line: 145, column: 10, scope: !17378, inlinedAt: !17800)
!17803 = !DILocation(line: 0, scope: !17387, inlinedAt: !17802)
!17804 = !DILocation(line: 148, column: 2, scope: !17395, inlinedAt: !17800)
!17805 = !DILocation(line: 148, column: 2, scope: !17396, inlinedAt: !17800)
!17806 = !DILocation(line: 148, column: 2, scope: !17399, inlinedAt: !17800)
!17807 = !DILocation(line: 160, column: 2, scope: !17378, inlinedAt: !17800)
!17808 = !DILocation(line: 210, column: 9, scope: !17809)
!17809 = distinct !DILexicalBlock(scope: !17810, file: !2580, line: 209, column: 24)
!17810 = distinct !DILexicalBlock(scope: !17795, file: !2580, line: 209, column: 2)
!17811 = !DILocation(line: 0, scope: !17451, inlinedAt: !17812)
!17812 = distinct !DILocation(line: 209, column: 2, scope: !17810)
!17813 = !DILocation(line: 194, column: 2, scope: !17459, inlinedAt: !17812)
!17814 = !DILocation(line: 194, column: 2, scope: !17460, inlinedAt: !17812)
!17815 = !DILocation(line: 194, column: 2, scope: !17463, inlinedAt: !17812)
!17816 = !DILocation(line: 0, scope: !17465, inlinedAt: !17817)
!17817 = distinct !DILocation(line: 215, column: 2, scope: !17451, inlinedAt: !17812)
!17818 = !DILocation(line: 95, column: 2, scope: !17465, inlinedAt: !17817)
!17819 = !DILocation(line: 212, column: 2, scope: !17791)
!17820 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2580, file: !2580, line: 215, type: !10801, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !17821)
!17821 = !{!17822, !17823, !17824, !17826, !17827, !17830, !17831}
!17822 = !DILocalVariable(name: "ticks", arg: 1, scope: !17820, file: !2580, line: 215, type: !774)
!17823 = !DILocalVariable(name: "is_idle", arg: 2, scope: !17820, file: !2580, line: 215, type: !347)
!17824 = !DILocalVariable(name: "__i", scope: !17825, file: !2580, line: 217, type: !17350)
!17825 = distinct !DILexicalBlock(scope: !17820, file: !2580, line: 217, column: 2)
!17826 = !DILocalVariable(name: "__key", scope: !17825, file: !2580, line: 217, type: !17350)
!17827 = !DILocalVariable(name: "next_to", scope: !17828, file: !2580, line: 218, type: !109)
!17828 = distinct !DILexicalBlock(scope: !17829, file: !2580, line: 217, column: 24)
!17829 = distinct !DILexicalBlock(scope: !17825, file: !2580, line: 217, column: 2)
!17830 = !DILocalVariable(name: "sooner", scope: !17828, file: !2580, line: 219, type: !347)
!17831 = !DILocalVariable(name: "imminent", scope: !17828, file: !2580, line: 221, type: !347)
!17832 = !DILocation(line: 0, scope: !17820)
!17833 = !DILocation(line: 0, scope: !17825)
!17834 = !DILocation(line: 0, scope: !17378, inlinedAt: !17835)
!17835 = distinct !DILocation(line: 217, column: 2, scope: !17825)
!17836 = !DILocation(line: 55, column: 2, scope: !17387, inlinedAt: !17837)
!17837 = distinct !DILocation(line: 145, column: 10, scope: !17378, inlinedAt: !17835)
!17838 = !DILocation(line: 0, scope: !17387, inlinedAt: !17837)
!17839 = !DILocation(line: 148, column: 2, scope: !17395, inlinedAt: !17835)
!17840 = !DILocation(line: 148, column: 2, scope: !17396, inlinedAt: !17835)
!17841 = !DILocation(line: 148, column: 2, scope: !17399, inlinedAt: !17835)
!17842 = !DILocation(line: 160, column: 2, scope: !17378, inlinedAt: !17835)
!17843 = !DILocation(line: 218, column: 17, scope: !17828)
!17844 = !DILocation(line: 0, scope: !17828)
!17845 = !DILocation(line: 221, column: 27, scope: !17828)
!17846 = !DILocation(line: 233, column: 17, scope: !17847)
!17847 = distinct !DILexicalBlock(scope: !17828, file: !2580, line: 233, column: 7)
!17848 = !DILocation(line: 234, column: 26, scope: !17849)
!17849 = distinct !DILexicalBlock(scope: !17847, file: !2580, line: 233, column: 56)
!17850 = !DILocation(line: 234, column: 4, scope: !17849)
!17851 = !DILocation(line: 235, column: 3, scope: !17849)
!17852 = !DILocation(line: 0, scope: !17451, inlinedAt: !17853)
!17853 = distinct !DILocation(line: 217, column: 2, scope: !17829)
!17854 = !DILocation(line: 194, column: 2, scope: !17459, inlinedAt: !17853)
!17855 = !DILocation(line: 194, column: 2, scope: !17460, inlinedAt: !17853)
!17856 = !DILocation(line: 194, column: 2, scope: !17463, inlinedAt: !17853)
!17857 = !DILocation(line: 0, scope: !17465, inlinedAt: !17858)
!17858 = distinct !DILocation(line: 215, column: 2, scope: !17451, inlinedAt: !17853)
!17859 = !DILocation(line: 95, column: 2, scope: !17465, inlinedAt: !17858)
!17860 = !DILocation(line: 237, column: 1, scope: !17820)
!17861 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2580, file: !2580, line: 239, type: !17862, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !17864)
!17862 = !DISubroutineType(types: !17863)
!17863 = !{null, !774}
!17864 = !{!17865, !17866, !17867, !17869}
!17865 = !DILocalVariable(name: "ticks", arg: 1, scope: !17861, file: !2580, line: 239, type: !774)
!17866 = !DILocalVariable(name: "key", scope: !17861, file: !2580, line: 245, type: !17350)
!17867 = !DILocalVariable(name: "t", scope: !17868, file: !2580, line: 262, type: !2553)
!17868 = distinct !DILexicalBlock(scope: !17861, file: !2580, line: 261, column: 67)
!17869 = !DILocalVariable(name: "dt", scope: !17868, file: !2580, line: 263, type: !109)
!17870 = !DILocation(line: 0, scope: !17861)
!17871 = !DILocation(line: 242, column: 2, scope: !17861)
!17872 = !DILocation(line: 0, scope: !17378, inlinedAt: !17873)
!17873 = distinct !DILocation(line: 245, column: 25, scope: !17861)
!17874 = !DILocation(line: 55, column: 2, scope: !17387, inlinedAt: !17875)
!17875 = distinct !DILocation(line: 145, column: 10, scope: !17378, inlinedAt: !17873)
!17876 = !DILocation(line: 0, scope: !17387, inlinedAt: !17875)
!17877 = !DILocation(line: 148, column: 2, scope: !17395, inlinedAt: !17873)
!17878 = !DILocation(line: 148, column: 2, scope: !17396, inlinedAt: !17873)
!17879 = !DILocation(line: 148, column: 2, scope: !17399, inlinedAt: !17873)
!17880 = !DILocation(line: 160, column: 2, scope: !17378, inlinedAt: !17873)
!17881 = !DILocation(line: 261, column: 9, scope: !17861)
!17882 = !DILocation(line: 261, column: 17, scope: !17861)
!17883 = !DILocation(line: 261, column: 25, scope: !17861)
!17884 = !DILocation(line: 261, column: 37, scope: !17861)
!17885 = !DILocation(line: 261, column: 47, scope: !17861)
!17886 = !DILocation(line: 261, column: 44, scope: !17861)
!17887 = !DILocation(line: 261, column: 2, scope: !17861)
!17888 = !DILocation(line: 0, scope: !17868)
!17889 = !DILocation(line: 263, column: 12, scope: !17868)
!17890 = !DILocation(line: 265, column: 16, scope: !17868)
!17891 = !DILocation(line: 265, column: 13, scope: !17868)
!17892 = !DILocation(line: 266, column: 13, scope: !17868)
!17893 = !DILocation(line: 267, column: 3, scope: !17868)
!17894 = !DILocation(line: 0, scope: !17451, inlinedAt: !17895)
!17895 = distinct !DILocation(line: 269, column: 3, scope: !17868)
!17896 = !DILocation(line: 194, column: 2, scope: !17459, inlinedAt: !17895)
!17897 = !DILocation(line: 194, column: 2, scope: !17460, inlinedAt: !17895)
!17898 = !DILocation(line: 194, column: 2, scope: !17463, inlinedAt: !17895)
!17899 = !DILocation(line: 0, scope: !17465, inlinedAt: !17900)
!17900 = distinct !DILocation(line: 215, column: 2, scope: !17451, inlinedAt: !17895)
!17901 = !DILocation(line: 95, column: 2, scope: !17465, inlinedAt: !17900)
!17902 = !DILocation(line: 270, column: 6, scope: !17868)
!17903 = !DILocation(line: 270, column: 3, scope: !17868)
!17904 = !DILocation(line: 0, scope: !17378, inlinedAt: !17905)
!17905 = distinct !DILocation(line: 271, column: 9, scope: !17868)
!17906 = !DILocation(line: 55, column: 2, scope: !17387, inlinedAt: !17907)
!17907 = distinct !DILocation(line: 145, column: 10, scope: !17378, inlinedAt: !17905)
!17908 = !DILocation(line: 0, scope: !17387, inlinedAt: !17907)
!17909 = !DILocation(line: 148, column: 2, scope: !17395, inlinedAt: !17905)
!17910 = !DILocation(line: 148, column: 2, scope: !17396, inlinedAt: !17905)
!17911 = !DILocation(line: 148, column: 2, scope: !17399, inlinedAt: !17905)
!17912 = !DILocation(line: 160, column: 2, scope: !17378, inlinedAt: !17905)
!17913 = !DILocation(line: 272, column: 22, scope: !17868)
!17914 = distinct !{!17914, !17887, !17915}
!17915 = !DILocation(line: 273, column: 2, scope: !17861)
!17916 = !DILocation(line: 276, column: 19, scope: !17917)
!17917 = distinct !DILexicalBlock(scope: !17918, file: !2580, line: 275, column: 23)
!17918 = distinct !DILexicalBlock(scope: !17861, file: !2580, line: 275, column: 6)
!17919 = !DILocation(line: 277, column: 2, scope: !17917)
!17920 = !DILocation(line: 279, column: 15, scope: !17861)
!17921 = !DILocation(line: 279, column: 12, scope: !17861)
!17922 = !DILocation(line: 280, column: 21, scope: !17861)
!17923 = !DILocation(line: 282, column: 24, scope: !17861)
!17924 = !DILocation(line: 282, column: 2, scope: !17861)
!17925 = !DILocation(line: 0, scope: !17451, inlinedAt: !17926)
!17926 = distinct !DILocation(line: 284, column: 2, scope: !17861)
!17927 = !DILocation(line: 194, column: 2, scope: !17459, inlinedAt: !17926)
!17928 = !DILocation(line: 194, column: 2, scope: !17460, inlinedAt: !17926)
!17929 = !DILocation(line: 194, column: 2, scope: !17463, inlinedAt: !17926)
!17930 = !DILocation(line: 0, scope: !17465, inlinedAt: !17931)
!17931 = distinct !DILocation(line: 215, column: 2, scope: !17451, inlinedAt: !17926)
!17932 = !DILocation(line: 95, column: 2, scope: !17465, inlinedAt: !17931)
!17933 = !DILocation(line: 285, column: 1, scope: !17861)
!17934 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2580, file: !2580, line: 287, type: !17935, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !17937)
!17935 = !DISubroutineType(types: !17936)
!17936 = !{!105}
!17937 = !{!17938, !17939, !17941}
!17938 = !DILocalVariable(name: "t", scope: !17934, file: !2580, line: 289, type: !111)
!17939 = !DILocalVariable(name: "__i", scope: !17940, file: !2580, line: 291, type: !17350)
!17940 = distinct !DILexicalBlock(scope: !17934, file: !2580, line: 291, column: 2)
!17941 = !DILocalVariable(name: "__key", scope: !17940, file: !2580, line: 291, type: !17350)
!17942 = !DILocation(line: 0, scope: !17934)
!17943 = !DILocation(line: 0, scope: !17940)
!17944 = !DILocation(line: 0, scope: !17378, inlinedAt: !17945)
!17945 = distinct !DILocation(line: 291, column: 2, scope: !17940)
!17946 = !DILocation(line: 55, column: 2, scope: !17387, inlinedAt: !17947)
!17947 = distinct !DILocation(line: 145, column: 10, scope: !17378, inlinedAt: !17945)
!17948 = !DILocation(line: 0, scope: !17387, inlinedAt: !17947)
!17949 = !DILocation(line: 148, column: 2, scope: !17395, inlinedAt: !17945)
!17950 = !DILocation(line: 148, column: 2, scope: !17396, inlinedAt: !17945)
!17951 = !DILocation(line: 148, column: 2, scope: !17399, inlinedAt: !17945)
!17952 = !DILocation(line: 160, column: 2, scope: !17378, inlinedAt: !17945)
!17953 = !DILocation(line: 292, column: 7, scope: !17954)
!17954 = distinct !DILexicalBlock(scope: !17955, file: !2580, line: 291, column: 24)
!17955 = distinct !DILexicalBlock(scope: !17940, file: !2580, line: 291, column: 2)
!17956 = !DILocation(line: 292, column: 19, scope: !17954)
!17957 = !DILocation(line: 0, scope: !17451, inlinedAt: !17958)
!17958 = distinct !DILocation(line: 291, column: 2, scope: !17955)
!17959 = !DILocation(line: 194, column: 2, scope: !17459, inlinedAt: !17958)
!17960 = !DILocation(line: 194, column: 2, scope: !17460, inlinedAt: !17958)
!17961 = !DILocation(line: 194, column: 2, scope: !17463, inlinedAt: !17958)
!17962 = !DILocation(line: 0, scope: !17465, inlinedAt: !17963)
!17963 = distinct !DILocation(line: 215, column: 2, scope: !17451, inlinedAt: !17958)
!17964 = !DILocation(line: 95, column: 2, scope: !17465, inlinedAt: !17963)
!17965 = !DILocation(line: 292, column: 17, scope: !17954)
!17966 = !DILocation(line: 294, column: 2, scope: !17934)
!17967 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2580, file: !2580, line: 297, type: !6573, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !2106)
!17968 = !DILocation(line: 300, column: 19, scope: !17967)
!17969 = !DILocation(line: 300, column: 9, scope: !17967)
!17970 = !DILocation(line: 300, column: 2, scope: !17967)
!17971 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2580, file: !2580, line: 306, type: !17935, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !2106)
!17972 = !DILocation(line: 308, column: 9, scope: !17971)
!17973 = !DILocation(line: 308, column: 2, scope: !17971)
!17974 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2580, file: !2580, line: 319, type: !6583, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !17975)
!17975 = !{!17976, !17977, !17978, !17979}
!17976 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !17974, file: !2580, line: 319, type: !110)
!17977 = !DILocalVariable(name: "start_cycles", scope: !17974, file: !2580, line: 328, type: !110)
!17978 = !DILocalVariable(name: "cycles_to_wait", scope: !17974, file: !2580, line: 331, type: !110)
!17979 = !DILocalVariable(name: "current_cycles", scope: !17980, file: !2580, line: 338, type: !110)
!17980 = distinct !DILexicalBlock(scope: !17981, file: !2580, line: 337, column: 11)
!17981 = distinct !DILexicalBlock(scope: !17982, file: !2580, line: 337, column: 2)
!17982 = distinct !DILexicalBlock(scope: !17974, file: !2580, line: 337, column: 2)
!17983 = !DILocation(line: 0, scope: !17974)
!17984 = !DILocation(line: 322, column: 19, scope: !17985)
!17985 = distinct !DILexicalBlock(scope: !17974, file: !2580, line: 322, column: 6)
!17986 = !DILocation(line: 322, column: 6, scope: !17974)
!17987 = !DILocation(line: 328, column: 26, scope: !17974)
!17988 = !DILocation(line: 333, column: 43, scope: !17974)
!17989 = !DILocation(line: 337, column: 2, scope: !17974)
!17990 = !DILocation(line: 338, column: 29, scope: !17980)
!17991 = !DILocation(line: 0, scope: !17980)
!17992 = !DILocation(line: 341, column: 23, scope: !17993)
!17993 = distinct !DILexicalBlock(scope: !17980, file: !2580, line: 341, column: 7)
!17994 = !DILocation(line: 341, column: 39, scope: !17993)
!17995 = !DILocation(line: 349, column: 1, scope: !17974)
!17996 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !118, file: !118, line: 1675, type: !6573, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !2106)
!17997 = !DILocation(line: 1677, column: 9, scope: !17996)
!17998 = !DILocation(line: 1677, column: 2, scope: !17996)
!17999 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !18000, file: !18000, line: 24, type: !6573, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !2106)
!18000 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18001 = !DILocation(line: 26, column: 9, scope: !17999)
!18002 = !DILocation(line: 26, column: 2, scope: !17999)
!18003 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2580, file: !2580, line: 364, type: !18004, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !18006)
!18004 = !DISubroutineType(types: !18005)
!18005 = !{!111, !17340}
!18006 = !{!18007, !18008}
!18007 = !DILocalVariable(name: "timeout", arg: 1, scope: !18003, file: !2580, line: 364, type: !17340)
!18008 = !DILocalVariable(name: "dt", scope: !18003, file: !2580, line: 366, type: !103)
!18009 = !DILocation(line: 0, scope: !18003)
!18010 = !DILocation(line: 368, column: 6, scope: !18003)
!18011 = !DILocation(line: 371, column: 10, scope: !18012)
!18012 = distinct !DILexicalBlock(scope: !18013, file: !2580, line: 370, column: 47)
!18013 = distinct !DILexicalBlock(scope: !18014, file: !2580, line: 370, column: 13)
!18014 = distinct !DILexicalBlock(scope: !18003, file: !2580, line: 368, column: 6)
!18015 = !DILocation(line: 371, column: 3, scope: !18012)
!18016 = !DILocation(line: 376, column: 58, scope: !18017)
!18017 = distinct !DILexicalBlock(scope: !18018, file: !2580, line: 376, column: 7)
!18018 = distinct !DILexicalBlock(scope: !18013, file: !2580, line: 372, column: 9)
!18019 = !DILocation(line: 376, column: 7, scope: !18018)
!18020 = !DILocation(line: 376, column: 43, scope: !18017)
!18021 = !DILocation(line: 377, column: 4, scope: !18022)
!18022 = distinct !DILexicalBlock(scope: !18017, file: !2580, line: 376, column: 64)
!18023 = !DILocation(line: 379, column: 10, scope: !18018)
!18024 = !DILocation(line: 379, column: 33, scope: !18018)
!18025 = !DILocation(line: 379, column: 31, scope: !18018)
!18026 = !DILocation(line: 379, column: 3, scope: !18018)
!18027 = !DILocation(line: 0, scope: !18014)
!18028 = !DILocation(line: 381, column: 1, scope: !18003)
!18029 = distinct !DISubprogram(name: "boot_banner", scope: !18030, file: !18030, line: 26, type: !3155, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3141, retainedNodes: !2106)
!18030 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18031 = !DILocation(line: 34, column: 2, scope: !18029)
!18032 = !DILocation(line: 36, column: 1, scope: !18029)
