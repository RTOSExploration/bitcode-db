; ModuleID = 'build/96b_aerocore2/pi/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, [32 x i8], i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { %struct._dnode }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct.k_spinlock = type { i32 }
%struct._thread_arch = type { i32, i32 }
%struct.z_thread_stack_element = type { i8 }
%struct.log_source_const_data = type { i8*, i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.k_spinlock }
%struct.arm_mpu_region = type { i32, i8*, %struct.k_spinlock }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.k_spinlock, i32*, i32, %struct._thread_arch }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.k_spinlock, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct._cpu_arch }
%struct._cpu_arch = type {}
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.k_spinlock, %struct.k_spinlock }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, i32 }
%struct.emitter = type { i8*, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.k_spinlock*, %struct.k_spinlock* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32, i32, i32 }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [91 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [91 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236056 to i8*), void (i8*)* inttoptr (i32 134234675 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236056 to i8*), void (i8*)* inttoptr (i32 134234655 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236056 to i8*), void (i8*)* inttoptr (i32 134234645 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236056 to i8*), void (i8*)* inttoptr (i32 134234745 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236056 to i8*), void (i8*)* inttoptr (i32 134234735 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236056 to i8*), void (i8*)* inttoptr (i32 134234725 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236056 to i8*), void (i8*)* inttoptr (i32 134234715 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236056 to i8*), void (i8*)* inttoptr (i32 134234705 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236056 to i8*), void (i8*)* inttoptr (i32 134234695 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236056 to i8*), void (i8*)* inttoptr (i32 134234685 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236056 to i8*), void (i8*)* inttoptr (i32 134234665 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@.str = private unnamed_addr constant [5 x i8] c"%.4d\00", align 1
@.str.1 = private unnamed_addr constant [62 x i8] c"Calculate first %d digits of Pi independently by %d threads.\0A\00", align 1
@tthread = internal global [16 x %struct.k_thread] zeroinitializer, align 8, !dbg !25
@tstack = internal global [16 x [4480 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.0", align 64, !dbg !123
@counter = internal global i32 16, align 4, !dbg !139
@buffer = internal global [16 x [241 x i8]] zeroinitializer, align 1, !dbg !134
@.str.2 = private unnamed_addr constant [39 x i8] c"Pi value calculated by thread #%d: %s\0A\00", align 1
@.str.3 = private unnamed_addr constant [48 x i8] c"All %d threads executed by %d cores in %d msec\0A\00", align 1
@llvm.compiler.used = appending global [55 x i8*] [i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_42 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_100 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_101 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_102 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_103 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_104 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_105 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_106 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_24 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_97 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_98 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_99 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_100 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_101 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_102 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_103 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_104 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_105 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_106 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_24 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_97 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_98 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_99 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_49 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_52 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_57 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_60 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_63 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_49 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_52 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_57 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_60 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_63 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*)], section "llvm.metadata"
@.str.4 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !268
@.str.1.5 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.6 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.3.7 = private unnamed_addr constant [39 x i8] c"ZEPHYR_BASE/lib/os/cbprintf_packaged.c\00", align 1
@.str.4.8 = private unnamed_addr constant [33 x i8] c"\09String with too many arguments\0A\00", align 1
@.str.5 = private unnamed_addr constant [26 x i8] c"\09str_ptr_pos[] too small\0A\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"\09unexpected size %u\0A\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"\09too many format args\0A\00", align 1
@.str.8 = private unnamed_addr constant [27 x i8] c"in_packaged != ((void *)0)\00", align 1
@.str.9 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@.str.10 = private unnamed_addr constant [31 x i8] c"scpy_cnt < sizeof(cpy_str_pos)\00", align 1
@.str.11 = private unnamed_addr constant [32 x i8] c"keep_cnt < sizeof(keep_str_pos)\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@.str.12 = private unnamed_addr constant [24 x i8] c"packaged != ((void *)0)\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !293
@.str.13 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !303
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !354
@.str.22 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.24 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.25 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.23 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.27 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.28 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.26 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.29 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.30 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.31 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.32 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@.str.33 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.34 = private unnamed_addr constant [27 x i8] c"prio <= ((1UL << (4)) - 1)\00", align 1
@.str.2.35 = private unnamed_addr constant [47 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/irq_manage.c\00", align 1
@.str.3.36 = private unnamed_addr constant [64 x i8] c"\09invalid priority %d for %d irq! values must be less than %lu\0A\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.39 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.40 = private unnamed_addr constant [19 x i8] c"esf != ((void *)0)\00", align 1
@.str.2.41 = private unnamed_addr constant [51 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/cortex_m/fault.c\00", align 1
@.str.3.42 = private unnamed_addr constant [62 x i8] c"\09ESF could not be retrieved successfully. Shall never occur.\0A\00", align 1
@.str.4.55 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.5.47 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.6.48 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.7.49 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.8.50 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.9.51 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.10.52 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.53 = private unnamed_addr constant [36 x i8] c"\09Fault escalation without FSR info\0A\00", align 1
@.str.12.54 = private unnamed_addr constant [48 x i8] c"\09HardFault without HFSR info Shall never occur\0A\00", align 1
@.str.13.46 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.14 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.16 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.17 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.18 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.19 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.20 = private unnamed_addr constant [74 x i8] c"!(((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CFSR & (1UL << (0U + 4U)))\00", align 1
@.str.21 = private unnamed_addr constant [35 x i8] c"\09Stacking error not a stack fail\0A\0A\00", align 1
@.str.22.45 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.23 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.24 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.25 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.26 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.27 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.28 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.29.43 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.30 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.31 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.32 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.33.44 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.34 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.35 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.36 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.37 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.38 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.61 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.61, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !383
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.k_spinlock { i32 101384192 } }], align 4, !dbg !517
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !389
@.str.67 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.68 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.2.69 = private unnamed_addr constant [48 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/mpu/arm_mpu.c\00", align 1
@.str.3.70 = private unnamed_addr constant [44 x i8] c"\09Configuring %u static MPU regions failed\0A\0A\00", align 1
@.str.4.75 = private unnamed_addr constant [45 x i8] c"\09Configuring %u dynamic MPU regions failed\0A\0A\00", align 1
@.str.5.76 = private unnamed_addr constant [52 x i8] c"\09Request to configure: %u regions (supported: %u)\0A\0A\00", align 1
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !526
@.str.6.77 = private unnamed_addr constant [80 x i8] c"(((MPU_Type *) ((0xE000E000UL) + 0x0D90UL) )->TYPE & (0xFFUL << 8U)) >> 8U == 8\00", align 1
@.str.7.78 = private unnamed_addr constant [33 x i8] c"\09Invalid number of MPU regions\0A\0A\00", align 1
@.str.8.71 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.9.72 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !562
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.90, i32 0, i32 0), %struct.k_spinlock { i32 117571624 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.91, i32 0, i32 0), %struct.k_spinlock { i32 285933602 } }], align 4, !dbg !572
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !577
@.str.90 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.91 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@.str.94 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.95 = private unnamed_addr constant [5 x i8] c"line\00", align 1
@.str.2.96 = private unnamed_addr constant [59 x i8] c"ZEPHYR_BASE/drivers/interrupt_controller/intc_exti_stm32.c\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !597
@__devicehdl_dts_ord_42 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !801
@.str.4.92 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_42 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !762
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !745
@__device_dts_ord_42 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4.92, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_42, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_42, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !718
@__init___device_dts_ord_42 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_42 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !734
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !764
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !778
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !780
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !782
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !784
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !786
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !788
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !790
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !792
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !794
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !796
@__devicehdl_dts_ord_8 = dso_local constant [19 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 14, i16 15, i16 16, i16 17, i16 18, i16 32767], section ".__device_handles_pass2", align 2, !dbg !806
@.str.97 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !847
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !943
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !932
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 -134, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !984
@__devicehdl_dts_ord_97 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !832
@.str.106 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1050
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1356
@__devstate_dts_ord_97 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1314
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1300
@__init___device_dts_ord_97 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_97 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1227
@__devicehdl_dts_ord_98 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !830
@.str.1.114 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1358
@__devstate_dts_ord_98 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1318
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1316
@__init___device_dts_ord_98 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_98 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1241
@__devicehdl_dts_ord_99 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !828
@.str.2.115 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1371
@__devstate_dts_ord_99 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1322
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1320
@__init___device_dts_ord_99 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_99 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1247
@__devicehdl_dts_ord_100 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !826
@.str.3.116 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1373
@__devstate_dts_ord_100 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1326
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1324
@__init___device_dts_ord_100 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_100 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1253
@__devicehdl_dts_ord_24 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !824
@.str.4.117 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1375
@__devstate_dts_ord_24 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1330
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1328
@__init___device_dts_ord_24 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_24 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1262
@__devicehdl_dts_ord_101 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !822
@.str.5.118 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1377
@__devstate_dts_ord_101 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1334
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1332
@__init___device_dts_ord_101 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_101 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1268
@__devicehdl_dts_ord_102 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !820
@.str.6.119 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1379
@__devstate_dts_ord_102 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1338
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1336
@__init___device_dts_ord_102 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_102 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1274
@__devicehdl_dts_ord_103 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !818
@.str.7.120 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1381
@__devstate_dts_ord_103 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1342
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1340
@__init___device_dts_ord_103 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_103 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1280
@__devicehdl_dts_ord_104 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !816
@.str.8.121 = private unnamed_addr constant [14 x i8] c"gpio@40022000\00", align 1
@gpio_stm32_cfg_i = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073881088 to i32*), i32 8, %struct._thread_arch { i32 48, i32 256 } }, align 4, !dbg !1383
@__devstate_dts_ord_104 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1346
@gpio_stm32_data_i = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1344
@__init___device_dts_ord_104 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_104 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1286
@__devicehdl_dts_ord_105 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !814
@.str.9.122 = private unnamed_addr constant [14 x i8] c"gpio@40022400\00", align 1
@gpio_stm32_cfg_j = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073882112 to i32*), i32 9, %struct._thread_arch { i32 48, i32 512 } }, align 4, !dbg !1385
@__devstate_dts_ord_105 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1350
@gpio_stm32_data_j = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1348
@__init___device_dts_ord_105 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_105 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1292
@__devicehdl_dts_ord_106 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !812
@.str.10.123 = private unnamed_addr constant [14 x i8] c"gpio@40022800\00", align 1
@gpio_stm32_cfg_k = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073883136 to i32*), i32 10, %struct._thread_arch { i32 48, i32 1024 } }, align 4, !dbg !1387
@__devstate_dts_ord_106 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1354
@gpio_stm32_data_k = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1352
@__init___device_dts_ord_106 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_106 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1298
@.str.11.107 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.34.113 = private unnamed_addr constant [12 x i8] c"cb->handler\00", align 1
@.str.35.109 = private unnamed_addr constant [53 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio/gpio_utils.h\00", align 1
@.str.36.112 = private unnamed_addr constant [23 x i8] c"\09No callback handler!\0A\00", align 1
@.str.37.108 = private unnamed_addr constant [9 x i8] c"callback\00", align 1
@.str.38.110 = private unnamed_addr constant [15 x i8] c"\09No callback!\0A\00", align 1
@.str.39.111 = private unnamed_addr constant [18 x i8] c"callback->handler\00", align 1
@.str.127 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.127, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !1389
@__devicehdl_dts_ord_63 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !842
@.str.1.128 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_63 }, align 4, !dbg !1577
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1632
@__devstate_dts_ord_63 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1567
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1634
@__device_dts_ord_63 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.128, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_63, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_63, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1534
@__init___device_dts_ord_63 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_63 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1536
@__devicehdl_dts_ord_49 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !840
@.str.2.135 = private unnamed_addr constant [16 x i8] c"serial@40004400\00", align 1
@uart_stm32_cfg_1 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_1, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_49 }, align 4, !dbg !1640
@__devstate_dts_ord_49 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1569
@uart_stm32_data_1 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1650
@__device_dts_ord_49 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.135, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_1 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_49, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_1 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_49, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1545
@__init___device_dts_ord_49 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_49 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1547
@__devicehdl_dts_ord_52 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !838
@.str.3.136 = private unnamed_addr constant [16 x i8] c"serial@40004800\00", align 1
@uart_stm32_cfg_2 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073760256 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_2, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_52 }, align 4, !dbg !1652
@__devstate_dts_ord_52 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1571
@uart_stm32_data_2 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1662
@__device_dts_ord_52 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3.136, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_2 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_52, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_2 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_52, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1551
@__init___device_dts_ord_52 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_52 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1553
@__devicehdl_dts_ord_57 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !836
@.str.4.139 = private unnamed_addr constant [16 x i8] c"serial@40007800\00", align 1
@uart_stm32_cfg_3 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073772544 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_3, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_57 }, align 4, !dbg !1664
@__devstate_dts_ord_57 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1573
@uart_stm32_data_3 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1674
@__device_dts_ord_57 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4.139, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_3 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_57, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_3 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_57, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1557
@__init___device_dts_ord_57 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_57 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1559
@__devicehdl_dts_ord_60 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !834
@.str.5.140 = private unnamed_addr constant [16 x i8] c"serial@40007c00\00", align 1
@uart_stm32_cfg_4 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073773568 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_4, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_60 }, align 4, !dbg !1676
@__devstate_dts_ord_60 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1575
@uart_stm32_data_4 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1686
@__device_dts_ord_60 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5.140, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_4 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_60, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_4 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_60, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1563
@__init___device_dts_ord_60 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_60 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1565
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1621
@__pinctrl_dev_config__device_dts_ord_63 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_63, i32 0, i32 0), i8 1 }, align 4, !dbg !1624
@__pinctrl_states__device_dts_ord_63 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_63, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1626
@__pinctrl_state_pins_0__device_dts_ord_63 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 711, i32 512 }, %struct._thread_arch { i32 743, i32 0 }], align 4, !dbg !1629
@.str.6.130 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.7.131 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.8.132 = private unnamed_addr constant [28 x i8] c"((config->usart->BRR)) > 16\00", align 1
@.str.9.133 = private unnamed_addr constant [40 x i8] c"ZEPHYR_BASE/drivers/serial/uart_stm32.c\00", align 1
@.str.10.134 = private unnamed_addr constant [20 x i8] c"\09BaudRateReg >= 16\0A\00", align 1
@.str.11.143 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.12.145 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.13.146 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.97, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([19 x i16], [19 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !916
@pclken_1 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 131072 }], align 4, !dbg !1642
@__pinctrl_dev_config__device_dts_ord_49 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_49, i32 0, i32 0), i8 1 }, align 4, !dbg !1644
@__pinctrl_states__device_dts_ord_49 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_49, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1646
@__pinctrl_state_pins_0__device_dts_ord_49 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1703, i32 512 }, %struct._thread_arch { i32 1735, i32 0 }], align 4, !dbg !1648
@pclken_2 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 262144 }], align 4, !dbg !1654
@__pinctrl_dev_config__device_dts_ord_52 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_52, i32 0, i32 0), i8 1 }, align 4, !dbg !1656
@__pinctrl_states__device_dts_ord_52 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_52, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1658
@__pinctrl_state_pins_0__device_dts_ord_52 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1799, i32 512 }, %struct._thread_arch { i32 1831, i32 0 }], align 4, !dbg !1660
@pclken_3 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 1073741824 }], align 4, !dbg !1666
@__pinctrl_dev_config__device_dts_ord_57 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_57, i32 0, i32 0), i8 1 }, align 4, !dbg !1668
@__pinctrl_states__device_dts_ord_57 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_57, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1670
@__pinctrl_state_pins_0__device_dts_ord_57 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 2312, i32 512 }, %struct._thread_arch { i32 2280, i32 0 }], align 4, !dbg !1672
@pclken_4 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 -2147483648 }], align 4, !dbg !1678
@__pinctrl_dev_config__device_dts_ord_60 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_60, i32 0, i32 0), i8 1 }, align 4, !dbg !1680
@__pinctrl_states__device_dts_ord_60 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_60, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1682
@__pinctrl_state_pins_0__device_dts_ord_60 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 2088, i32 512 }, %struct._thread_arch { i32 2056, i32 0 }], align 4, !dbg !1684
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.14 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1693
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1804
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1806
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1802
@lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !1797
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1771
@.str.150 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.151 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.152 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.153 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.154 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.155 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_97, %struct.device* @__device_dts_ord_98, %struct.device* @__device_dts_ord_99, %struct.device* @__device_dts_ord_100, %struct.device* @__device_dts_ord_24, %struct.device* @__device_dts_ord_101, %struct.device* @__device_dts_ord_102, %struct.device* @__device_dts_ord_103, %struct.device* @__device_dts_ord_104, %struct.device* @__device_dts_ord_105, %struct.device* @__device_dts_ord_106], align 4, !dbg !1808
@__device_dts_ord_97 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.106, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_97, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_97, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1225
@__device_dts_ord_98 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.114, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_98, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_98, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1239
@__device_dts_ord_99 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.115, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_99, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_99, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1245
@__device_dts_ord_100 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.116, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_100, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_100, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1251
@__device_dts_ord_24 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.117, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_24, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_24, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1260
@__device_dts_ord_101 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.118, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_101, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_101, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1266
@__device_dts_ord_102 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.119, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_102, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_102, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1272
@__device_dts_ord_103 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.120, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_103, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_103, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1278
@__device_dts_ord_104 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8.121, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_i to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_104, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_i to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_104, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1284
@__device_dts_ord_105 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.122, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_j to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_105, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_j to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_105, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1290
@__device_dts_ord_106 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.10.123, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_k to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_106, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_k to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_106, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1296
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1898
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1940
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1943
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1948
@.str.189 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.193 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.194 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.195 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.199 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.5.200 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.6.201 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.7.202 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.8.203 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.9.198 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.10.197 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.199, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.200, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.201, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.202, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.203, i32 0, i32 0)], align 4
@.str.205 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.205, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !1955
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@__ccm_bss_start = external dso_local global [0 x i8], align 1
@__ccm_bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2181
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2168
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2176
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2188
@.str.5.211 = private unnamed_addr constant [5 x i8] c"idle\00", align 1
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2193
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.6.215 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.220, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.221, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.222, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.223, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.224, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.225, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.219, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.226, i32 0, i32 0)], align 4, !dbg !2223
@.str.220 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.221 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.222 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.223 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.224 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.225 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.219 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.226 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2338
@.str.8.218 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.9.229 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.10.230 = private unnamed_addr constant [128 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((entry))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.11.231 = private unnamed_addr constant [28 x i8] c"ZEPHYR_BASE/kernel/thread.c\00", align 1
@.str.12.232 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.13.236 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.14.237 = private unnamed_addr constant [37 x i8] c"\09Threads may not be created in ISRs\0A\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@.str.15.240 = private unnamed_addr constant [45 x i8] c"thread_data <= __static_thread_data_list_end\00", align 1
@.str.16.241 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.251 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.252 = private unnamed_addr constant [40 x i8] c"_kernel.cpus[0].current->base.prio >= 0\00", align 1
@.str.2.253 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/kernel/idle.c\00", align 1
@sched_spinlock = dso_local global %struct.k_spinlock zeroinitializer, align 4, !dbg !2351
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2462
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2465
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2467
@.str.254 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.270 = private unnamed_addr constant [61 x i8] c"thread == _kernel.cpus[0].current || is_thread_dummy(thread)\00", align 1
@.str.2.261 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/sched.c\00", align 1
@.str.3.275 = private unnamed_addr constant [55 x i8] c"sizeof(sched_spinlock) == 0 || lock != &sched_spinlock\00", align 1
@.str.4.283 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 0U\00", align 1
@.str.5.263 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.6.278 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.7.260 = private unnamed_addr constant [33 x i8] c"!z_is_idle_thread_object(thread)\00", align 1
@.str.8.287 = private unnamed_addr constant [134 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((((void *)0)))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.9.288 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.10.296 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.297 = private unnamed_addr constant [31 x i8] c"\09aborting essential thread %p\0A\00", align 1
@.str.12.298 = private unnamed_addr constant [34 x i8] c"\09aborted _current back from dead\0A\00", align 1
@.str.13.299 = private unnamed_addr constant [21 x i8] c"\09cannot join in ISR\0A\00", align 1
@.str.14.255 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.15.256 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.16.257 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.17.258 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.18.259 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.19.262 = private unnamed_addr constant [39 x i8] c"_kernel.cpus[0].current != ((void *)0)\00", align 1
@.str.20.274 = private unnamed_addr constant [23 x i8] c"thread->base.pended_on\00", align 1
@.str.21.279 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/kernel/include/ksched.h\00", align 1
@.str.22.280 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 1U\00", align 1
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2178
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2186
@.str.23.291 = private unnamed_addr constant [64 x i8] c"!z_is_thread_state_set(_kernel.cpus[0].current, ((1UL << (4))))\00", align 1
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@__ccm_data_start = external dso_local global [0 x i8], align 1
@__ccm_data_rom_start = external dso_local global [0 x i8], align 1
@__ccm_data_end = external dso_local global [0 x i8], align 1
@.str.305 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.306 = private unnamed_addr constant [32 x i8] c"!sys_dnode_is_linked(&to->node)\00", align 1
@.str.2.307 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/timeout.c\00", align 1
@.str.3.308 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@timeout_lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2469
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2499
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2504
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2042
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2502
@.str.4.309 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.310 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.311 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.315 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.316 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.336 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3096 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !3100, !srcloc !3101
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !3102, !srcloc !3103
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !3104, !srcloc !3105
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !3106, !srcloc !3107
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3108, !srcloc !3109
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !3110, !srcloc !3111
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !3112, !srcloc !3113
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !3114, !srcloc !3115
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #23, !dbg !3116, !srcloc !3117
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !3118, !srcloc !3119
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !3120, !srcloc !3121
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !3122, !srcloc !3123
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !3124, !srcloc !3125
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !3126, !srcloc !3127
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !3128, !srcloc !3129
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !3130, !srcloc !3131
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !3132, !srcloc !3133
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -149) #23, !dbg !3134, !srcloc !3135
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3136, !srcloc !3137
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #23, !dbg !3138, !srcloc !3139
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -133) #23, !dbg !3140, !srcloc !3141
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -161) #23, !dbg !3142, !srcloc !3143
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #23, !dbg !3144, !srcloc !3145
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3146, !srcloc !3147
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !3148, !srcloc !3149
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !3150, !srcloc !3151
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !3152, !srcloc !3153
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !3154, !srcloc !3157
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !3158, !srcloc !3159
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3160, !srcloc !3161
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3162, !srcloc !3163
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3164, !srcloc !3165
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3166, !srcloc !3167
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !3168, !srcloc !3169
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !3170, !srcloc !3171
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !3172, !srcloc !3173
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !3174, !srcloc !3175
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3176, !srcloc !3177
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3178, !srcloc !3179
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3180, !srcloc !3181
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3182, !srcloc !3183
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3184, !srcloc !3185
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3186, !srcloc !3187
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !3188, !srcloc !3189
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !3190, !srcloc !3191
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !3192, !srcloc !3193
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !3194, !srcloc !3195
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !3196, !srcloc !3197
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !3198, !srcloc !3199
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3200, !srcloc !3201
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #23, !dbg !3202, !srcloc !3203
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -161) #23, !dbg !3204, !srcloc !3205
  ret void, !dbg !3206
}

; Function Attrs: noinline nounwind optsize
define dso_local void @test_thread(i8* nocapture noundef %0, i8* noundef %1, i8* nocapture readnone %2) #1 !dbg !3209 {
  %4 = alloca [841 x i32], align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3211, metadata !DIExpression()), !dbg !3228
  call void @llvm.dbg.value(metadata i8* %1, metadata !3212, metadata !DIExpression()), !dbg !3228
  call void @llvm.dbg.value(metadata i8* undef, metadata !3213, metadata !DIExpression()), !dbg !3228
  call void @llvm.dbg.value(metadata i8* %0, metadata !3214, metadata !DIExpression()), !dbg !3228
  call void @llvm.dbg.value(metadata i8* %1, metadata !3215, metadata !DIExpression()), !dbg !3228
  %5 = bitcast [841 x i32]* %4 to i8*, !dbg !3229
  call void @llvm.lifetime.start.p0i8(i64 3364, i8* nonnull %5) #23, !dbg !3229
  call void @llvm.dbg.declare(metadata [841 x i32]* %4, metadata !3216, metadata !DIExpression()), !dbg !3230
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(3364) %5, i8 0, i32 3364, i1 false), !dbg !3230
  call void @llvm.dbg.value(metadata i32 0, metadata !3220, metadata !DIExpression()), !dbg !3228
  call void @llvm.dbg.value(metadata i32 0, metadata !3221, metadata !DIExpression()), !dbg !3228
  br label %6, !dbg !3231

6:                                                ; preds = %3, %6
  %7 = phi i32 [ 0, %3 ], [ %9, %6 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !3221, metadata !DIExpression()), !dbg !3228
  %8 = getelementptr inbounds [841 x i32], [841 x i32]* %4, i32 0, i32 %7, !dbg !3233
  store i32 2000, i32* %8, align 4, !dbg !3236
  %9 = add nuw nsw i32 %7, 1, !dbg !3237
  call void @llvm.dbg.value(metadata i32 %9, metadata !3221, metadata !DIExpression()), !dbg !3228
  %10 = icmp eq i32 %9, 840, !dbg !3238
  br i1 %10, label %11, label %6, !dbg !3231, !llvm.loop !3239

11:                                               ; preds = %6, %32
  %12 = phi i8* [ %38, %32 ], [ %1, %6 ]
  %13 = phi i32 [ %39, %32 ], [ 840, %6 ]
  %14 = phi i32 [ %36, %32 ], [ 0, %6 ]
  call void @llvm.dbg.value(metadata i8* %12, metadata !3215, metadata !DIExpression()), !dbg !3228
  call void @llvm.dbg.value(metadata i32 %13, metadata !3221, metadata !DIExpression()), !dbg !3228
  call void @llvm.dbg.value(metadata i32 %14, metadata !3220, metadata !DIExpression()), !dbg !3228
  call void @llvm.dbg.value(metadata i32 0, metadata !3223, metadata !DIExpression()), !dbg !3241
  call void @llvm.dbg.value(metadata i32 %13, metadata !3222, metadata !DIExpression()), !dbg !3228
  br label %15, !dbg !3242

15:                                               ; preds = %11, %15
  %16 = phi i32 [ %27, %15 ], [ 0, %11 ]
  %17 = phi i32 [ %30, %15 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !3223, metadata !DIExpression()), !dbg !3241
  call void @llvm.dbg.value(metadata i32 %17, metadata !3222, metadata !DIExpression()), !dbg !3228
  %18 = mul nsw i32 %16, %17, !dbg !3244
  %19 = getelementptr inbounds [841 x i32], [841 x i32]* %4, i32 0, i32 %17, !dbg !3247
  %20 = load i32, i32* %19, align 4, !dbg !3247
  %21 = mul nsw i32 %20, 10000, !dbg !3248
  %22 = add nsw i32 %21, %18, !dbg !3249
  call void @llvm.dbg.value(metadata i32 %22, metadata !3223, metadata !DIExpression()), !dbg !3241
  %23 = shl nuw nsw i32 %17, 1, !dbg !3250
  %24 = add nsw i32 %23, -1, !dbg !3251
  %25 = freeze i32 %22
  %26 = freeze i32 %24
  %27 = sdiv i32 %25, %26, !dbg !3252
  %28 = mul i32 %27, %26
  %29 = sub i32 %25, %28
  store i32 %29, i32* %19, align 4, !dbg !3253
  call void @llvm.dbg.value(metadata i32 %27, metadata !3223, metadata !DIExpression()), !dbg !3241
  %30 = add nsw i32 %17, -1, !dbg !3254
  call void @llvm.dbg.value(metadata i32 %30, metadata !3222, metadata !DIExpression()), !dbg !3228
  %31 = icmp sgt i32 %17, 1, !dbg !3255
  br i1 %31, label %15, label %32, !dbg !3242, !llvm.loop !3256

32:                                               ; preds = %15
  %33 = sdiv i32 %27, 10000, !dbg !3258
  %34 = add nsw i32 %33, %14, !dbg !3259
  call void @llvm.dbg.value(metadata i32 %34, metadata !3227, metadata !DIExpression()), !dbg !3241
  %35 = mul i32 %33, 10000
  %36 = sub i32 %27, %35
  call void @llvm.dbg.value(metadata i32 %36, metadata !3220, metadata !DIExpression()), !dbg !3228
  %37 = tail call i32 (i8*, i8*, ...) @sprintf(i8* noundef %12, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i32 noundef %34) #24, !dbg !3260
  %38 = getelementptr inbounds i8, i8* %12, i32 4, !dbg !3261
  call void @llvm.dbg.value(metadata i8* %38, metadata !3215, metadata !DIExpression()), !dbg !3228
  %39 = add nsw i32 %13, -14, !dbg !3262
  call void @llvm.dbg.value(metadata i32 %39, metadata !3221, metadata !DIExpression()), !dbg !3228
  %40 = icmp ugt i32 %13, 14, !dbg !3263
  br i1 %40, label %11, label %41, !dbg !3264, !llvm.loop !3265

41:                                               ; preds = %32
  %42 = bitcast i8* %0 to i32*, !dbg !3267
  call void @llvm.dbg.value(metadata i32* %42, metadata !3214, metadata !DIExpression()), !dbg !3228
  tail call fastcc void @atomic_dec(i32* noundef %42) #25, !dbg !3268
  call void @llvm.lifetime.end.p0i8(i64 3364, i8* nonnull %5) #23, !dbg !3269
  ret void, !dbg !3269
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #4

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_dec(i32* nocapture noundef %0) unnamed_addr #5 !dbg !3270 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3276, metadata !DIExpression()), !dbg !3277
  tail call fastcc void @atomic_sub(i32* noundef %0) #25, !dbg !3278
  ret void, !dbg !3279
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc void @atomic_sub(i32* nocapture noundef %0) unnamed_addr #5 !dbg !3280 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3284, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.value(metadata i32 1, metadata !3285, metadata !DIExpression()), !dbg !3286
  %2 = atomicrmw sub i32* %0, i32 1 seq_cst, align 4, !dbg !3287
  ret void, !dbg !3288
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !3289 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.1, i32 0, i32 0), i32 noundef 240, i32 noundef 16) #24, !dbg !3296
  %1 = tail call fastcc i32 @k_cycle_get_32() #25, !dbg !3297
  call void @llvm.dbg.value(metadata i32 %1, metadata !3291, metadata !DIExpression()), !dbg !3298
  call void @llvm.dbg.value(metadata i32 0, metadata !3295, metadata !DIExpression()), !dbg !3298
  br label %8, !dbg !3299

2:                                                ; preds = %8
  %3 = load i32, i32* @counter, align 4, !dbg !3301
  %4 = icmp eq i32 %3, 0, !dbg !3302
  br i1 %4, label %18, label %5, !dbg !3302

5:                                                ; preds = %2
  %6 = tail call fastcc i64 @k_ms_to_ticks_ceil64() #25, !dbg !3298
  %7 = insertvalue [1 x i64] poison, i64 %6, 0
  br label %15, !dbg !3302

8:                                                ; preds = %0, %8
  %9 = phi i32 [ 0, %0 ], [ %13, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !3295, metadata !DIExpression()), !dbg !3298
  %10 = getelementptr inbounds [16 x %struct.k_thread], [16 x %struct.k_thread]* @tthread, i32 0, i32 %9, !dbg !3303
  %11 = getelementptr inbounds [16 x [4480 x %struct.z_thread_stack_element]], [16 x [4480 x %struct.z_thread_stack_element]]* @tstack, i32 0, i32 %9, i32 0, !dbg !3306
  %12 = getelementptr inbounds [16 x [241 x i8]], [16 x [241 x i8]]* @buffer, i32 0, i32 %9, i32 0, !dbg !3307
  tail call fastcc void @k_thread_create(%struct.k_thread* noundef nonnull %10, %struct.z_thread_stack_element* noundef nonnull %11, i8* noundef nonnull %12) #25, !dbg !3308
  %13 = add nuw nsw i32 %9, 1, !dbg !3309
  call void @llvm.dbg.value(metadata i32 %13, metadata !3295, metadata !DIExpression()), !dbg !3298
  %14 = icmp eq i32 %13, 16, !dbg !3310
  br i1 %14, label %2, label %8, !dbg !3299, !llvm.loop !3311

15:                                               ; preds = %5, %15
  tail call fastcc void @k_sleep([1 x i64] %7) #25, !dbg !3313
  %16 = load i32, i32* @counter, align 4, !dbg !3301
  %17 = icmp eq i32 %16, 0, !dbg !3302
  br i1 %17, label %18, label %15, !dbg !3302, !llvm.loop !3315

18:                                               ; preds = %15, %2
  %19 = tail call fastcc i32 @k_cycle_get_32() #25, !dbg !3317
  call void @llvm.dbg.value(metadata i32 %19, metadata !3292, metadata !DIExpression()), !dbg !3298
  call void @llvm.dbg.value(metadata !DIArgList(i32 %19, i32 %1), metadata !3293, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3298
  call void @llvm.dbg.value(metadata i64 undef, metadata !3294, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3298
  call void @llvm.dbg.value(metadata i32 0, metadata !3295, metadata !DIExpression()), !dbg !3298
  br label %20, !dbg !3318

20:                                               ; preds = %18, %20
  %21 = phi i32 [ 0, %18 ], [ %23, %20 ]
  call void @llvm.dbg.value(metadata i32 %21, metadata !3295, metadata !DIExpression()), !dbg !3298
  %22 = getelementptr inbounds [16 x [241 x i8]], [16 x [241 x i8]]* @buffer, i32 0, i32 %21, i32 0, !dbg !3320
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.2, i32 0, i32 0), i32 noundef %21, i8* noundef nonnull %22) #24, !dbg !3323
  %23 = add nuw nsw i32 %21, 1, !dbg !3324
  call void @llvm.dbg.value(metadata i32 %23, metadata !3295, metadata !DIExpression()), !dbg !3298
  %24 = icmp eq i32 %23, 16, !dbg !3325
  br i1 %24, label %25, label %20, !dbg !3318, !llvm.loop !3326

25:                                               ; preds = %20
  %26 = sub i32 %19, %1, !dbg !3328
  call void @llvm.dbg.value(metadata i32 %26, metadata !3293, metadata !DIExpression()), !dbg !3298
  %27 = zext i32 %26 to i64, !dbg !3329
  %28 = tail call fastcc i64 @k_cyc_to_ns_floor64(i64 noundef %27) #25, !dbg !3330
  call void @llvm.dbg.value(metadata i64 %28, metadata !3294, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3298
  %29 = trunc i64 %28 to i32, !dbg !3331
  call void @llvm.dbg.value(metadata i32 %29, metadata !3294, metadata !DIExpression()), !dbg !3298
  %30 = udiv i32 %29, 1000000, !dbg !3332
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.3, i32 0, i32 0), i32 noundef 16, i32 noundef 1, i32 noundef %30) #24, !dbg !3333
  ret void, !dbg !3334
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !3335 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #25, !dbg !3338
  ret i32 %1, !dbg !3339
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64() unnamed_addr #6 !dbg !3340 {
  call void @llvm.dbg.value(metadata i64 1, metadata !3345, metadata !DIExpression()), !dbg !3346
  ret i64 10, !dbg !3347
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %2) unnamed_addr #1 !dbg !3348 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3370, metadata !DIExpression()), !dbg !3371
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3361, metadata !DIExpression()), !dbg !3371
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !3362, metadata !DIExpression()), !dbg !3371
  call void @llvm.dbg.value(metadata i32 4384, metadata !3363, metadata !DIExpression()), !dbg !3371
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* @test_thread, metadata !3364, metadata !DIExpression()), !dbg !3371
  call void @llvm.dbg.value(metadata i8* bitcast (i32* @counter to i8*), metadata !3365, metadata !DIExpression()), !dbg !3371
  call void @llvm.dbg.value(metadata i8* %2, metadata !3366, metadata !DIExpression()), !dbg !3371
  call void @llvm.dbg.value(metadata i8* null, metadata !3367, metadata !DIExpression()), !dbg !3371
  call void @llvm.dbg.value(metadata i32 -6, metadata !3368, metadata !DIExpression()), !dbg !3371
  call void @llvm.dbg.value(metadata i32 0, metadata !3369, metadata !DIExpression()), !dbg !3371
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3372, !srcloc !3374
  %4 = tail call %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef 4384, void (i8*, i8*, i8*)* noundef nonnull @test_thread, i8* noundef bitcast (i32* @counter to i8*), i8* noundef %2, i8* noundef null, i32 noundef -6, i32 noundef 0, [1 x i64] zeroinitializer) #24, !dbg !3375
  ret void, !dbg !3376
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !3377 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3381, metadata !DIExpression()), !dbg !3382
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3383, !srcloc !3385
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #24, !dbg !3386
  ret void, !dbg !3387
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_cyc_to_ns_floor64(i64 noundef %0) unnamed_addr #6 !dbg !3388 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3390, metadata !DIExpression()), !dbg !3391
  call void @llvm.dbg.value(metadata i64 %0, metadata !3392, metadata !DIExpression()), !dbg !3409
  call void @llvm.dbg.value(metadata i32 168000000, metadata !3397, metadata !DIExpression()), !dbg !3409
  call void @llvm.dbg.value(metadata i32 1000000000, metadata !3398, metadata !DIExpression()), !dbg !3409
  call void @llvm.dbg.value(metadata i8 1, metadata !3399, metadata !DIExpression()), !dbg !3409
  call void @llvm.dbg.value(metadata i8 0, metadata !3400, metadata !DIExpression()), !dbg !3409
  call void @llvm.dbg.value(metadata i1 false, metadata !3401, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3409
  call void @llvm.dbg.value(metadata i8 0, metadata !3402, metadata !DIExpression()), !dbg !3409
  call void @llvm.dbg.value(metadata i1 false, metadata !3403, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3409
  call void @llvm.dbg.value(metadata i1 false, metadata !3404, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3409
  call void @llvm.dbg.value(metadata i64 0, metadata !3405, metadata !DIExpression()), !dbg !3409
  call void @llvm.dbg.value(metadata i64 0, metadata !3405, metadata !DIExpression()), !dbg !3409
  %2 = udiv i64 %0, 168000000, !dbg !3411
  %3 = mul i64 %2, 1000000000, !dbg !3418
  %4 = mul i64 %2, 168000000
  %5 = sub i64 %0, %4
  %6 = mul nuw nsw i64 %5, 1000000000, !dbg !3419
  %7 = udiv i64 %6, 168000000, !dbg !3420
  %8 = add i64 %7, %3, !dbg !3421
  ret i64 %8, !dbg !3422
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !3423 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #24, !dbg !3425
  ret i32 %1, !dbg !3426
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !3427 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !3442, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i8* %0, metadata !3438, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i32 %1, metadata !3439, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i32 %2, metadata !3440, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i8* %3, metadata !3441, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i8* %0, metadata !3443, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i8* %0, metadata !3444, metadata !DIExpression()), !dbg !3505
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !3506
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #23, !dbg !3506
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !3447, metadata !DIExpression()), !dbg !3507
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !3508
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #23, !dbg !3508
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !3449, metadata !DIExpression()), !dbg !3509
  call void @llvm.dbg.value(metadata i32 0, metadata !3450, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i32 0, metadata !3451, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i32 0, metadata !3452, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i32 -1, metadata !3453, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i8 0, metadata !3456, metadata !DIExpression()), !dbg !3505
  %12 = and i32 %2, 4, !dbg !3510
  %13 = icmp eq i32 %12, 0, !dbg !3511
  call void @llvm.dbg.value(metadata i1 %13, metadata !3457, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3505
  %14 = lshr i32 %2, 3, !dbg !3512
  %15 = and i32 %14, 7, !dbg !3512
  %16 = add nuw nsw i32 %15, 1, !dbg !3513
  call void @llvm.dbg.value(metadata i32 %16, metadata !3458, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i8 0, metadata !3459, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i8* %0, metadata !3460, metadata !DIExpression()), !dbg !3505
  %17 = ptrtoint i8* %0 to i32, !dbg !3514
  %18 = and i32 %17, 3, !dbg !3516
  %19 = icmp eq i32 %18, 0, !dbg !3516
  br i1 %19, label %20, label %320, !dbg !3517

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3518
  call void @llvm.dbg.value(metadata i8* %21, metadata !3444, metadata !DIExpression()), !dbg !3505
  %22 = icmp eq i8* %0, null, !dbg !3519
  %23 = and i32 %1, 7, !dbg !3521
  %24 = sub nuw nsw i32 8, %23, !dbg !3521
  %25 = select i1 %22, i32 %23, i32 0, !dbg !3521
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !3521
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !3521
  call void @llvm.dbg.value(metadata i32 %27, metadata !3439, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i8* %26, metadata !3444, metadata !DIExpression()), !dbg !3505
  br i1 %22, label %33, label %28, !dbg !3522

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !3524
  %30 = sub i32 4, %17, !dbg !3524
  %31 = add i32 %30, %29, !dbg !3525
  %32 = icmp ugt i32 %31, %27, !dbg !3526
  br i1 %32, label %320, label %33, !dbg !3527

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !3528
  call void @llvm.dbg.value(metadata i8* %34, metadata !3441, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i8* %3, metadata !3455, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i32 4, metadata !3446, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i32 4, metadata !3445, metadata !DIExpression()), !dbg !3505
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !3529

38:                                               ; preds = %63, %219
  %39 = phi i8 [ %224, %219 ], [ %64, %63 ]
  %40 = phi i8* [ %223, %219 ], [ %65, %63 ]
  %41 = phi i8* [ %221, %219 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %219 ], [ %67, %63 ]
  %43 = phi i8* [ %222, %219 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %219 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %219 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %219 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !3442, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i8* %42, metadata !3441, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i8* %43, metadata !3444, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i32 %44, metadata !3445, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i32 %45, metadata !3446, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i32 %72, metadata !3453, metadata !DIExpression()), !dbg !3505
  br i1 %46, label %73, label %47, !dbg !3530

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !3531
  %49 = zext i1 %48 to i32, !dbg !3535
  %50 = add nsw i32 %72, %49, !dbg !3535
  %51 = select i1 %48, i32 4, i32 %45, !dbg !3535
  %52 = select i1 %48, i32 4, i32 %44, !dbg !3535
  call void @llvm.dbg.value(metadata i32 %52, metadata !3445, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i32 %51, metadata !3446, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i8 poison, metadata !3456, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i32 %50, metadata !3453, metadata !DIExpression()), !dbg !3505
  br label %53, !dbg !3536

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !3442, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i8* %40, metadata !3441, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i8* %58, metadata !3444, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i32 %57, metadata !3445, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i32 %56, metadata !3446, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i8 poison, metadata !3456, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i32 %54, metadata !3453, metadata !DIExpression()), !dbg !3505
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3537
  call void @llvm.dbg.value(metadata i8* %60, metadata !3441, metadata !DIExpression()), !dbg !3505
  %61 = load i8, i8* %60, align 1, !dbg !3539
  %62 = icmp eq i8 %61, 0, !dbg !3540
  br i1 %62, label %226, label %63, !dbg !3541, !llvm.loop !3542

63:                                               ; preds = %192, %53
  %64 = phi i8 [ %61, %53 ], [ %199, %192 ]
  %65 = phi i8* [ %60, %53 ], [ %198, %192 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %192 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %192 ]
  %68 = phi i8* [ %58, %53 ], [ %197, %192 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %192 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %192 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %192 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %192 ]
  br label %38, !dbg !3530

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !3545

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3456, metadata !DIExpression()), !dbg !3505
  %75 = add nsw i32 %72, -1, !dbg !3546
  call void @llvm.dbg.value(metadata i32 %75, metadata !3453, metadata !DIExpression()), !dbg !3505
  br label %53, !dbg !3547

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !3548

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3446, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i32 4, metadata !3445, metadata !DIExpression()), !dbg !3505
  br label %53, !dbg !3549

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3446, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i32 4, metadata !3445, metadata !DIExpression()), !dbg !3505
  br label %53, !dbg !3550

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !3551
  %81 = icmp eq i8 %80, 108, !dbg !3553
  br i1 %81, label %82, label %109, !dbg !3554

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !3555
  %84 = load i8, i8* %83, align 1, !dbg !3555
  %85 = icmp eq i8 %84, 108, !dbg !3558
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !3559
  %89 = add i32 %88, 7, !dbg !3559
  %90 = and i32 %89, -8, !dbg !3559
  %91 = inttoptr i32 %90 to i8*, !dbg !3559
  %92 = inttoptr i32 %90 to double*, !dbg !3559
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !3559
  %94 = load double, double* %92, align 8, !dbg !3559
  call void @llvm.dbg.value(metadata i8* %93, metadata !3442, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i32 8, metadata !3445, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i32 8, metadata !3446, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata double %94, metadata !3473, metadata !DIExpression()), !dbg !3561
  %95 = ptrtoint i8* %43 to i32, !dbg !3562
  %96 = add i32 %95, 7, !dbg !3562
  %97 = and i32 %96, -8, !dbg !3562
  %98 = inttoptr i32 %97 to i8*, !dbg !3563
  call void @llvm.dbg.value(metadata i8* %98, metadata !3444, metadata !DIExpression()), !dbg !3505
  br i1 %22, label %104, label %99, !dbg !3564

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !3565
  %101 = icmp ugt i32 %100, %196, !dbg !3569
  br i1 %101, label %320, label %102, !dbg !3570

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !3571
  store double %94, double* %103, align 8, !dbg !3571
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !3574
  call void @llvm.dbg.value(metadata i8* %105, metadata !3444, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i8 poison, metadata !3456, metadata !DIExpression()), !dbg !3505
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3456, metadata !DIExpression()), !dbg !3505
  br label %53, !dbg !3575

107:                                              ; preds = %73, %73
  br label %109, !dbg !3576

108:                                              ; preds = %73
  br label %109, !dbg !3576

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !3505
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !3505
  call void @llvm.dbg.value(metadata i32 %113, metadata !3445, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i32 %112, metadata !3446, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i8 poison, metadata !3459, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i8 poison, metadata !3456, metadata !DIExpression()), !dbg !3505
  %114 = ptrtoint i8* %43 to i32, !dbg !3576
  %115 = add i32 %114, -1, !dbg !3576
  %116 = add i32 %115, %112, !dbg !3576
  %117 = sub i32 0, %112, !dbg !3576
  %118 = and i32 %116, %117, !dbg !3576
  %119 = inttoptr i32 %118 to i8*, !dbg !3577
  call void @llvm.dbg.value(metadata i8* %119, metadata !3444, metadata !DIExpression()), !dbg !3505
  br i1 %22, label %124, label %120, !dbg !3578

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !3580
  %122 = add i32 %121, %118, !dbg !3581
  %123 = icmp ugt i32 %122, %196, !dbg !3582
  br i1 %123, label %320, label %124, !dbg !3583

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %201, !dbg !3584

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !3577
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3585
  call void @llvm.dbg.value(metadata i8* %127, metadata !3442, metadata !DIExpression()), !dbg !3505
  %128 = bitcast i8* %41 to i8**, !dbg !3585
  %129 = load i8*, i8** %128, align 4, !dbg !3585
  call void @llvm.dbg.value(metadata i8* %129, metadata !3455, metadata !DIExpression()), !dbg !3505
  br label %130, !dbg !3586

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !3505
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !3587
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !3505
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %194, %125 ], !dbg !3588
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !3505
  %137 = phi i32 [ 0, %33 ], [ %195, %125 ], !dbg !3505
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !3505
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !3505
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !3505
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !3505
  %142 = phi i32 [ %27, %33 ], [ %196, %125 ], !dbg !3589
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !3442, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i32 %142, metadata !3439, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i8* %141, metadata !3441, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i8* %140, metadata !3444, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i32 %139, metadata !3445, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i32 %138, metadata !3446, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i32 %137, metadata !3450, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i32 %136, metadata !3458, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i32 %135, metadata !3451, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i8 poison, metadata !3456, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i8* %133, metadata !3455, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i32 %132, metadata !3453, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i32 %131, metadata !3452, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.label(metadata !3504), !dbg !3591
  br i1 %22, label %146, label %144, !dbg !3592

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !3593
  store i8* %133, i8** %145, align 4, !dbg !3596
  br label %146, !dbg !3597

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !3598
  call void @llvm.dbg.value(metadata i32 %147, metadata !3458, metadata !DIExpression()), !dbg !3505
  %148 = icmp sgt i32 %136, 0, !dbg !3599
  br i1 %148, label %152, label %149, !dbg !3600

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #25, !dbg !3601
  %151 = zext i1 %150 to i32, !dbg !3601
  br label %152, !dbg !3600

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !3600
  %154 = icmp eq i32 %153, 0, !dbg !3600
  call void @llvm.dbg.value(metadata i1 %154, metadata !3482, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3602
  call void @llvm.dbg.value(metadata i1 %36, metadata !3485, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3602
  %155 = or i1 %36, %154, !dbg !3603
  br i1 %155, label %156, label %192, !dbg !3603

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !3604
  %158 = sub i32 %157, %17, !dbg !3604
  %159 = lshr i32 %158, 2, !dbg !3605
  call void @llvm.dbg.value(metadata i32 %159, metadata !3486, metadata !DIExpression()), !dbg !3606
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !3607
  br i1 %161, label %162, label %163, !dbg !3607

162:                                              ; preds = %156
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.6, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 635) #24, !dbg !3609
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4.8, i32 0, i32 0)) #24, !dbg !3609
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 635) #24, !dbg !3609
  unreachable, !dbg !3609

163:                                              ; preds = %156
  %164 = icmp ugt i32 %137, 15, !dbg !3614
  br i1 %164, label %165, label %166, !dbg !3616

165:                                              ; preds = %163
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.6, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 640) #24, !dbg !3617
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i32 0, i32 0)) #24, !dbg !3617
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 640) #24, !dbg !3617
  unreachable, !dbg !3617

166:                                              ; preds = %163
  br i1 %22, label %177, label %167, !dbg !3622

167:                                              ; preds = %166
  %168 = trunc i32 %159 to i8, !dbg !3623
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !3626
  store i8 %168, i8* %169, align 1, !dbg !3627
  %170 = trunc i32 %132 to i8, !dbg !3628
  %171 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !3629
  store i8 %170, i8* %171, align 1, !dbg !3630
  br i1 %154, label %175, label %172, !dbg !3631

172:                                              ; preds = %167
  %173 = or i8 %168, -128, !dbg !3632
  store i8 %173, i8* %169, align 1, !dbg !3632
  %174 = add i32 %131, 1, !dbg !3635
  call void @llvm.dbg.value(metadata i32 %174, metadata !3452, metadata !DIExpression()), !dbg !3505
  br label %187, !dbg !3636

175:                                              ; preds = %167
  %176 = add i32 %135, 1, !dbg !3637
  call void @llvm.dbg.value(metadata i32 %176, metadata !3451, metadata !DIExpression()), !dbg !3505
  br label %187

177:                                              ; preds = %166
  br i1 %154, label %180, label %178, !dbg !3639

178:                                              ; preds = %177
  %179 = add i32 %142, 1, !dbg !3640
  call void @llvm.dbg.value(metadata i32 %179, metadata !3439, metadata !DIExpression()), !dbg !3505
  br label %187, !dbg !3643

180:                                              ; preds = %177
  br i1 %13, label %183, label %181, !dbg !3644

181:                                              ; preds = %180
  %182 = add i32 %142, 2, !dbg !3645
  call void @llvm.dbg.value(metadata i32 %182, metadata !3439, metadata !DIExpression()), !dbg !3505
  br label %187, !dbg !3648

183:                                              ; preds = %180
  %184 = tail call i32 @strlen(i8* noundef %133) #24, !dbg !3649
  %185 = add i32 %142, 2, !dbg !3651
  %186 = add i32 %185, %184, !dbg !3652
  call void @llvm.dbg.value(metadata i32 %186, metadata !3439, metadata !DIExpression()), !dbg !3505
  br label %187

187:                                              ; preds = %178, %183, %181, %172, %175
  %188 = phi i32 [ %174, %172 ], [ %131, %175 ], [ %131, %178 ], [ %131, %181 ], [ %131, %183 ], !dbg !3505
  %189 = phi i32 [ %135, %172 ], [ %176, %175 ], [ %135, %178 ], [ %135, %181 ], [ %135, %183 ], !dbg !3505
  %190 = phi i32 [ %142, %172 ], [ %142, %175 ], [ %179, %178 ], [ %182, %181 ], [ %186, %183 ], !dbg !3505
  call void @llvm.dbg.value(metadata i32 %190, metadata !3439, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i32 %189, metadata !3451, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i32 %188, metadata !3452, metadata !DIExpression()), !dbg !3505
  %191 = add nuw nsw i32 %137, 1, !dbg !3653
  call void @llvm.dbg.value(metadata i32 %191, metadata !3450, metadata !DIExpression()), !dbg !3505
  br label %192

192:                                              ; preds = %152, %187
  %193 = phi i32 [ %188, %187 ], [ %131, %152 ], !dbg !3505
  %194 = phi i32 [ %189, %187 ], [ %135, %152 ], !dbg !3588
  %195 = phi i32 [ %191, %187 ], [ %137, %152 ], !dbg !3505
  %196 = phi i32 [ %190, %187 ], [ %142, %152 ], !dbg !3589
  call void @llvm.dbg.value(metadata i32 %196, metadata !3439, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i32 %195, metadata !3450, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i32 %194, metadata !3451, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i32 %193, metadata !3452, metadata !DIExpression()), !dbg !3505
  %197 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !3654
  call void @llvm.dbg.value(metadata i8* %197, metadata !3444, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i8* %143, metadata !3442, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i8* %141, metadata !3441, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i32 %139, metadata !3445, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i32 %138, metadata !3446, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i8 poison, metadata !3459, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i8 poison, metadata !3456, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i32 %132, metadata !3453, metadata !DIExpression()), !dbg !3505
  %198 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !3537
  call void @llvm.dbg.value(metadata i8* %198, metadata !3441, metadata !DIExpression()), !dbg !3505
  %199 = load i8, i8* %198, align 1, !dbg !3539
  %200 = icmp eq i8 %199, 0, !dbg !3540
  br i1 %200, label %226, label %63, !dbg !3541

201:                                              ; preds = %124
  switch i32 %113, label %218 [
    i32 4, label %202
    i32 8, label %208
  ], !dbg !3655

202:                                              ; preds = %201
  %203 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3656
  call void @llvm.dbg.value(metadata i8* %203, metadata !3442, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i32 undef, metadata !3489, metadata !DIExpression()), !dbg !3657
  br i1 %22, label %219, label %204, !dbg !3658

204:                                              ; preds = %202
  %205 = bitcast i8* %41 to i32*, !dbg !3656
  %206 = load i32, i32* %205, align 4, !dbg !3656
  call void @llvm.dbg.value(metadata i32 %206, metadata !3489, metadata !DIExpression()), !dbg !3657
  %207 = inttoptr i32 %118 to i32*, !dbg !3659
  store i32 %206, i32* %207, align 4, !dbg !3662
  br label %219, !dbg !3663

208:                                              ; preds = %201
  %209 = ptrtoint i8* %41 to i32, !dbg !3664
  %210 = add i32 %209, 7, !dbg !3664
  %211 = and i32 %210, -8, !dbg !3664
  %212 = inttoptr i32 %211 to i8*, !dbg !3664
  %213 = getelementptr inbounds i8, i8* %212, i32 8, !dbg !3664
  call void @llvm.dbg.value(metadata i8* %213, metadata !3442, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i64 undef, metadata !3495, metadata !DIExpression()), !dbg !3665
  br i1 %22, label %219, label %214, !dbg !3666

214:                                              ; preds = %208
  %215 = inttoptr i32 %211 to i64*, !dbg !3664
  %216 = load i64, i64* %215, align 8, !dbg !3664
  call void @llvm.dbg.value(metadata i64 %216, metadata !3495, metadata !DIExpression()), !dbg !3665
  %217 = inttoptr i32 %118 to i64*, !dbg !3667
  store i64 %216, i64* %217, align 8, !dbg !3672
  br label %219, !dbg !3673

218:                                              ; preds = %201
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.6, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 709) #24, !dbg !3674
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i32 0, i32 0), i32 noundef %113) #24, !dbg !3674
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 709) #24, !dbg !3674
  unreachable, !dbg !3674

219:                                              ; preds = %208, %214, %202, %204
  %220 = phi i32 [ 4, %204 ], [ 4, %202 ], [ 8, %214 ], [ 8, %208 ]
  %221 = phi i8* [ %203, %204 ], [ %203, %202 ], [ %213, %214 ], [ %213, %208 ], !dbg !3679
  %222 = getelementptr inbounds i8, i8* %119, i32 %220, !dbg !3679
  call void @llvm.dbg.value(metadata i8* %221, metadata !3442, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i8* %40, metadata !3441, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i8* %222, metadata !3444, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i32 %113, metadata !3445, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i32 %112, metadata !3446, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i8 poison, metadata !3459, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i8 poison, metadata !3456, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i32 %72, metadata !3453, metadata !DIExpression()), !dbg !3505
  %223 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3537
  call void @llvm.dbg.value(metadata i8* %223, metadata !3441, metadata !DIExpression()), !dbg !3505
  %224 = load i8, i8* %223, align 1, !dbg !3539
  %225 = icmp eq i8 %224, 0, !dbg !3540
  br i1 %225, label %226, label %38, !dbg !3541

226:                                              ; preds = %192, %219, %53
  %227 = phi i8* [ %222, %219 ], [ %58, %53 ], [ %197, %192 ], !dbg !3680
  %228 = ptrtoint i8* %227 to i32, !dbg !3681
  %229 = sub i32 %228, %17, !dbg !3681
  %230 = lshr i32 %229, 2, !dbg !3683
  %231 = icmp ugt i32 %229, 1023, !dbg !3684
  br i1 %231, label %232, label %233, !dbg !3685

232:                                              ; preds = %226
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.6, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 721) #24, !dbg !3686
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i32 0, i32 0)) #24, !dbg !3686
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 721) #24, !dbg !3686
  unreachable, !dbg !3686

233:                                              ; preds = %226
  br i1 %22, label %234, label %237, !dbg !3691

234:                                              ; preds = %233
  %235 = add i32 %196, -8, !dbg !3692
  %236 = add i32 %235, %229, !dbg !3695
  br label %320, !dbg !3696

237:                                              ; preds = %233
  %238 = trunc i32 %230 to i8, !dbg !3697
  store i8 %238, i8* %0, align 1, !dbg !3698
  %239 = trunc i32 %194 to i8, !dbg !3699
  %240 = select i1 %13, i8 %239, i8 0
  %241 = select i1 %13, i8 0, i8 %239
  %242 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !3701
  store i8 %240, i8* %242, align 1, !dbg !3703
  %243 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3704
  store i8 %241, i8* %243, align 1, !dbg !3705
  %244 = trunc i32 %193 to i8, !dbg !3706
  %245 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3707
  store i8 %244, i8* %245, align 1, !dbg !3708
  %246 = icmp eq i32 %193, 0, !dbg !3709
  %247 = xor i1 %246, true, !dbg !3710
  %248 = icmp ne i32 %195, 0
  %249 = select i1 %247, i1 %248, i1 false, !dbg !3710
  call void @llvm.dbg.value(metadata i8* %227, metadata !3444, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i32 0, metadata !3454, metadata !DIExpression()), !dbg !3505
  br i1 %249, label %250, label %269, !dbg !3710

250:                                              ; preds = %237
  %251 = sub i32 1, %17
  br label %252, !dbg !3711

252:                                              ; preds = %250, %265
  %253 = phi i8* [ %227, %250 ], [ %266, %265 ]
  %254 = phi i32 [ 0, %250 ], [ %267, %265 ]
  call void @llvm.dbg.value(metadata i8* %253, metadata !3444, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i32 %254, metadata !3454, metadata !DIExpression()), !dbg !3505
  %255 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %254, !dbg !3712
  %256 = load i8, i8* %255, align 1, !dbg !3712
  %257 = icmp sgt i8 %256, -1, !dbg !3714
  br i1 %257, label %265, label %258, !dbg !3715

258:                                              ; preds = %252
  call void @llvm.dbg.value(metadata i8 %256, metadata !3498, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3716
  %259 = ptrtoint i8* %253 to i32, !dbg !3717
  %260 = add i32 %251, %259, !dbg !3719
  %261 = icmp ugt i32 %260, %196, !dbg !3720
  br i1 %261, label %320, label %262, !dbg !3721

262:                                              ; preds = %258
  %263 = and i8 %256, 127, !dbg !3722
  call void @llvm.dbg.value(metadata i8 %263, metadata !3498, metadata !DIExpression()), !dbg !3716
  %264 = getelementptr inbounds i8, i8* %253, i32 1, !dbg !3723
  call void @llvm.dbg.value(metadata i8* %264, metadata !3444, metadata !DIExpression()), !dbg !3505
  store i8 %263, i8* %253, align 1, !dbg !3724
  br label %265

265:                                              ; preds = %262, %252
  %266 = phi i8* [ %264, %262 ], [ %253, %252 ], !dbg !3654
  call void @llvm.dbg.value(metadata i8* %266, metadata !3444, metadata !DIExpression()), !dbg !3505
  %267 = add nuw i32 %254, 1, !dbg !3725
  call void @llvm.dbg.value(metadata i32 %267, metadata !3454, metadata !DIExpression()), !dbg !3505
  %268 = icmp eq i32 %267, %195, !dbg !3726
  br i1 %268, label %269, label %252, !dbg !3711, !llvm.loop !3727

269:                                              ; preds = %265, %237
  %270 = phi i8* [ %227, %237 ], [ %266, %265 ], !dbg !3654
  call void @llvm.dbg.value(metadata i8* %270, metadata !3444, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i32 0, metadata !3454, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i8* %133, metadata !3455, metadata !DIExpression()), !dbg !3505
  %271 = icmp eq i32 %195, 0, !dbg !3729
  br i1 %271, label %316, label %272, !dbg !3732

272:                                              ; preds = %269
  %273 = sub i32 1, %17
  br label %274, !dbg !3732

274:                                              ; preds = %272, %311
  %275 = phi i8* [ %270, %272 ], [ %313, %311 ]
  %276 = phi i8* [ %133, %272 ], [ %312, %311 ]
  %277 = phi i32 [ 0, %272 ], [ %314, %311 ]
  call void @llvm.dbg.value(metadata i8* %275, metadata !3444, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i8* %276, metadata !3455, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i32 %277, metadata !3454, metadata !DIExpression()), !dbg !3505
  br i1 %246, label %282, label %278, !dbg !3733

278:                                              ; preds = %274
  %279 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3736
  %280 = load i8, i8* %279, align 1, !dbg !3736
  %281 = icmp sgt i8 %280, -1, !dbg !3737
  br i1 %281, label %282, label %311, !dbg !3738

282:                                              ; preds = %278, %274
  br i1 %13, label %287, label %283, !dbg !3739

283:                                              ; preds = %282
  call void @llvm.dbg.value(metadata i32 0, metadata !3445, metadata !DIExpression()), !dbg !3505
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %277, !dbg !3740
  %285 = load i8, i8* %284, align 1, !dbg !3740
  %286 = getelementptr inbounds i8, i8* %275, i32 1, !dbg !3743
  call void @llvm.dbg.value(metadata i8* %286, metadata !3444, metadata !DIExpression()), !dbg !3505
  store i8 %285, i8* %275, align 1, !dbg !3744
  br label %297, !dbg !3745

287:                                              ; preds = %282
  %288 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3746
  %289 = load i8, i8* %288, align 1, !dbg !3746
  %290 = zext i8 %289 to i32, !dbg !3746
  %291 = shl nuw nsw i32 %290, 2, !dbg !3748
  %292 = getelementptr inbounds i8, i8* %0, i32 %291, !dbg !3749
  %293 = bitcast i8* %292 to i8**, !dbg !3750
  %294 = load i8*, i8** %293, align 4, !dbg !3750
  call void @llvm.dbg.value(metadata i8* %294, metadata !3455, metadata !DIExpression()), !dbg !3505
  store i8* null, i8** %293, align 4, !dbg !3751
  %295 = tail call i32 @strlen(i8* noundef %294) #24, !dbg !3752
  %296 = add i32 %295, 1, !dbg !3753
  call void @llvm.dbg.value(metadata i32 %296, metadata !3445, metadata !DIExpression()), !dbg !3505
  br label %297

297:                                              ; preds = %287, %283
  %298 = phi i8* [ %276, %283 ], [ %294, %287 ], !dbg !3505
  %299 = phi i32 [ 0, %283 ], [ %296, %287 ], !dbg !3754
  %300 = phi i8* [ %286, %283 ], [ %275, %287 ], !dbg !3505
  call void @llvm.dbg.value(metadata i8* %300, metadata !3444, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i32 %299, metadata !3445, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i8* %298, metadata !3455, metadata !DIExpression()), !dbg !3505
  %301 = ptrtoint i8* %300 to i32, !dbg !3755
  %302 = add i32 %273, %299, !dbg !3757
  %303 = add i32 %302, %301, !dbg !3758
  %304 = icmp ugt i32 %303, %196, !dbg !3759
  br i1 %304, label %320, label %305, !dbg !3760

305:                                              ; preds = %297
  %306 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3761
  %307 = load i8, i8* %306, align 1, !dbg !3761
  %308 = getelementptr inbounds i8, i8* %300, i32 1, !dbg !3762
  call void @llvm.dbg.value(metadata i8* %308, metadata !3444, metadata !DIExpression()), !dbg !3505
  store i8 %307, i8* %300, align 1, !dbg !3763
  %309 = tail call i8* @memcpy(i8* noundef nonnull %308, i8* noundef %298, i32 noundef %299) #24, !dbg !3764
  %310 = getelementptr inbounds i8, i8* %308, i32 %299, !dbg !3765
  call void @llvm.dbg.value(metadata i8* %310, metadata !3444, metadata !DIExpression()), !dbg !3505
  br label %311, !dbg !3766

311:                                              ; preds = %278, %305
  %312 = phi i8* [ %276, %278 ], [ %298, %305 ], !dbg !3767
  %313 = phi i8* [ %275, %278 ], [ %310, %305 ], !dbg !3505
  call void @llvm.dbg.value(metadata i8* %313, metadata !3444, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i8* %312, metadata !3455, metadata !DIExpression()), !dbg !3505
  %314 = add nuw i32 %277, 1, !dbg !3768
  call void @llvm.dbg.value(metadata i32 %314, metadata !3454, metadata !DIExpression()), !dbg !3505
  %315 = icmp eq i32 %314, %195, !dbg !3729
  br i1 %315, label %316, label %274, !dbg !3732, !llvm.loop !3769

316:                                              ; preds = %311, %269
  %317 = phi i8* [ %270, %269 ], [ %313, %311 ], !dbg !3654
  %318 = ptrtoint i8* %317 to i32, !dbg !3771
  %319 = sub i32 %318, %17, !dbg !3771
  br label %320, !dbg !3772

320:                                              ; preds = %120, %99, %258, %297, %28, %5, %316, %234
  %321 = phi i32 [ %236, %234 ], [ %319, %316 ], [ -14, %5 ], [ -28, %28 ], [ -28, %297 ], [ -28, %258 ], [ -28, %99 ], [ -28, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #23, !dbg !3773
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #23, !dbg !3773
  ret i32 %321, !dbg !3773
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #6 !dbg !3774 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3778, metadata !DIExpression()), !dbg !3779
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #25, !dbg !3780
  ret i1 %2, !dbg !3781
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #6 !dbg !3782 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3787, metadata !DIExpression()), !dbg !3788
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !3789
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !3790
  %4 = and i1 %2, %3, !dbg !3790
  ret i1 %4, !dbg !3791
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !3792 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3796, metadata !DIExpression()), !dbg !3802
  call void @llvm.dbg.value(metadata i32 %1, metadata !3797, metadata !DIExpression()), !dbg !3802
  call void @llvm.dbg.value(metadata i32 %2, metadata !3798, metadata !DIExpression()), !dbg !3802
  call void @llvm.dbg.value(metadata i8* %3, metadata !3799, metadata !DIExpression()), !dbg !3802
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !3803
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #23, !dbg !3803
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !3800, metadata !DIExpression()), !dbg !3804
  call void @llvm.va_start(i8* nonnull %6), !dbg !3805
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !3806
  %8 = load i32, i32* %7, align 4, !dbg !3806
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !3806
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #25, !dbg !3806
  call void @llvm.dbg.value(metadata i32 %10, metadata !3801, metadata !DIExpression()), !dbg !3802
  call void @llvm.va_end(i8* nonnull %6), !dbg !3807
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #23, !dbg !3808
  ret i32 %10, !dbg !3809
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #7

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #7

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !3810 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3822, metadata !DIExpression()), !dbg !3841
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3823, metadata !DIExpression()), !dbg !3841
  call void @llvm.dbg.value(metadata i8* %2, metadata !3824, metadata !DIExpression()), !dbg !3841
  call void @llvm.dbg.value(metadata i8* %3, metadata !3825, metadata !DIExpression()), !dbg !3841
  call void @llvm.dbg.value(metadata i8* %3, metadata !3826, metadata !DIExpression()), !dbg !3841
  call void @llvm.dbg.value(metadata i8* %3, metadata !3827, metadata !DIExpression()), !dbg !3841
  %5 = icmp eq i8* %3, null, !dbg !3842
  br i1 %5, label %45, label %6, !dbg !3844

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !3836, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3841
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !3845
  %8 = load i8, i8* %7, align 1, !dbg !3845
  %9 = zext i8 %8 to i32, !dbg !3846
  call void @llvm.dbg.value(metadata i32 %9, metadata !3837, metadata !DIExpression()), !dbg !3841
  call void @llvm.dbg.value(metadata i8 undef, metadata !3838, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3841
  call void @llvm.dbg.value(metadata i8 undef, metadata !3839, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3841
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !3833, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3841
  call void @llvm.dbg.value(metadata i32 0, metadata !3835, metadata !DIExpression()), !dbg !3841
  %10 = icmp eq i8 %8, 0, !dbg !3847
  br i1 %10, label %39, label %11, !dbg !3850

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !3851
  call void @llvm.dbg.value(metadata i8 %12, metadata !3836, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3841
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !3833, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3841
  %13 = zext i8 %12 to i32, !dbg !3852
  call void @llvm.dbg.value(metadata i32 %13, metadata !3836, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3841
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !3833, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3841
  %14 = shl nuw nsw i32 %13, 2, !dbg !3853
  call void @llvm.dbg.value(metadata i32 %14, metadata !3836, metadata !DIExpression()), !dbg !3841
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !3833, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3841
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !3854
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !3833, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3841
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !3855
  %17 = load i8, i8* %16, align 1, !dbg !3855
  call void @llvm.dbg.value(metadata i8 %17, metadata !3838, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3841
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !3833, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3841
  %18 = zext i8 %17 to i32, !dbg !3856
  call void @llvm.dbg.value(metadata i32 %18, metadata !3838, metadata !DIExpression()), !dbg !3841
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !3833, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3841
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !3857
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !3833, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3841
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !3858
  %21 = load i8, i8* %20, align 1, !dbg !3858
  call void @llvm.dbg.value(metadata i8 %21, metadata !3839, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3841
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !3833, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3841
  %22 = zext i8 %21 to i32, !dbg !3859
  call void @llvm.dbg.value(metadata i32 %22, metadata !3839, metadata !DIExpression()), !dbg !3841
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !3833, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3841
  %23 = shl nuw nsw i32 %22, 1, !dbg !3860
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !3833, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3841
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !3861
  call void @llvm.dbg.value(metadata i8* %24, metadata !3833, metadata !DIExpression()), !dbg !3841
  br label %25, !dbg !3850

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !3833, metadata !DIExpression()), !dbg !3841
  call void @llvm.dbg.value(metadata i32 %27, metadata !3835, metadata !DIExpression()), !dbg !3841
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !3862
  call void @llvm.dbg.value(metadata i8* %28, metadata !3833, metadata !DIExpression()), !dbg !3841
  %29 = load i8, i8* %26, align 1, !dbg !3864
  %30 = zext i8 %29 to i32, !dbg !3864
  call void @llvm.dbg.value(metadata i32 %30, metadata !3840, metadata !DIExpression()), !dbg !3841
  %31 = shl nuw nsw i32 %30, 2, !dbg !3865
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !3866
  %33 = bitcast i8* %32 to i8**, !dbg !3867
  call void @llvm.dbg.value(metadata i8** %33, metadata !3834, metadata !DIExpression()), !dbg !3841
  store i8* %28, i8** %33, align 4, !dbg !3868
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #24, !dbg !3869
  %35 = add i32 %34, 1, !dbg !3870
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !3871
  call void @llvm.dbg.value(metadata i8* %36, metadata !3833, metadata !DIExpression()), !dbg !3841
  %37 = add nuw nsw i32 %27, 1, !dbg !3872
  call void @llvm.dbg.value(metadata i32 %37, metadata !3835, metadata !DIExpression()), !dbg !3841
  %38 = icmp eq i32 %37, %9, !dbg !3847
  br i1 %38, label %39, label %25, !dbg !3850, !llvm.loop !3873

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !3875
  call void @llvm.dbg.value(metadata i8* %40, metadata !3826, metadata !DIExpression()), !dbg !3841
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !3876
  %42 = bitcast i8* %41 to i8**, !dbg !3876
  %43 = load i8*, i8** %42, align 1, !dbg !3876
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #25, !dbg !3877
  br label %45, !dbg !3878

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !3841
  ret i32 %46, !dbg !3879
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !3880 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3884, metadata !DIExpression()), !dbg !3894
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3885, metadata !DIExpression()), !dbg !3894
  call void @llvm.dbg.value(metadata i8* %2, metadata !3886, metadata !DIExpression()), !dbg !3894
  call void @llvm.dbg.value(metadata i8* %3, metadata !3887, metadata !DIExpression()), !dbg !3894
  call void @llvm.dbg.value(metadata i8* %4, metadata !3888, metadata !DIExpression()), !dbg !3894
  call void @llvm.dbg.value(metadata i8* %4, metadata !3889, metadata !DIExpression()), !dbg !3894
  %6 = ptrtoint i8* %4 to i32, !dbg !3895
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !3895
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #24, !dbg !3895
  ret i32 %8, !dbg !3896
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !3897 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3901, metadata !DIExpression()), !dbg !3906
  call void @llvm.dbg.value(metadata i32 %1, metadata !3902, metadata !DIExpression()), !dbg !3906
  call void @llvm.dbg.value(metadata i8 0, metadata !3904, metadata !DIExpression()), !dbg !3906
  call void @llvm.dbg.value(metadata i32 0, metadata !3905, metadata !DIExpression()), !dbg !3906
  call void @llvm.dbg.value(metadata i8 poison, metadata !3904, metadata !DIExpression()), !dbg !3906
  call void @llvm.dbg.value(metadata i8* %0, metadata !3901, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3906
  %3 = load i8, i8* %0, align 1, !dbg !3907
  call void @llvm.dbg.value(metadata i8 %3, metadata !3903, metadata !DIExpression()), !dbg !3906
  %4 = icmp eq i8 %3, 0, !dbg !3908
  br i1 %4, label %29, label %5, !dbg !3909

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !3910
  call void @llvm.dbg.value(metadata i32 %8, metadata !3905, metadata !DIExpression()), !dbg !3906
  br i1 %9, label %11, label %22, !dbg !3911

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !3913
  br i1 %12, label %13, label %17, !dbg !3917

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !3918
  br i1 %14, label %29, label %15, !dbg !3921

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #25, !dbg !3922
  br i1 %16, label %29, label %22, !dbg !3924

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #25, !dbg !3925
  %19 = xor i1 %18, true, !dbg !3927
  %20 = zext i1 %18 to i32, !dbg !3927
  %21 = add nsw i32 %8, %20, !dbg !3927
  br label %22, !dbg !3927

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !3906
  call void @llvm.dbg.value(metadata i32 %24, metadata !3905, metadata !DIExpression()), !dbg !3906
  call void @llvm.dbg.value(metadata i8 poison, metadata !3904, metadata !DIExpression()), !dbg !3906
  %25 = icmp eq i8 %6, 37, !dbg !3928
  %26 = xor i1 %25, %23, !dbg !3930
  call void @llvm.dbg.value(metadata i8* %10, metadata !3901, metadata !DIExpression()), !dbg !3906
  call void @llvm.dbg.value(metadata i8* %10, metadata !3901, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3906
  %27 = load i8, i8* %10, align 1, !dbg !3907
  call void @llvm.dbg.value(metadata i8 %27, metadata !3903, metadata !DIExpression()), !dbg !3906
  %28 = icmp eq i8 %27, 0, !dbg !3908
  br i1 %28, label %29, label %5, !dbg !3909, !llvm.loop !3931

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !3906
  ret i1 %30, !dbg !3933
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #6 !dbg !3934 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !3938, metadata !DIExpression()), !dbg !3939
  %2 = add i8 %0, -64, !dbg !3940
  %3 = icmp ult i8 %2, 59, !dbg !3940
  ret i1 %3, !dbg !3941
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !3942 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3950, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i32 %1, metadata !3951, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !3952, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i8* %3, metadata !3953, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i32 %4, metadata !3954, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i16* %5, metadata !3955, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i32 %6, metadata !3956, metadata !DIExpression()), !dbg !4019
  %11 = icmp eq i8* %0, null, !dbg !4020
  br i1 %11, label %12, label %13, !dbg !4023

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 916) #24, !dbg !4024
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 916) #24, !dbg !4024
  unreachable, !dbg !4024

13:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i8* %0, metadata !3957, metadata !DIExpression()), !dbg !4019
  %14 = bitcast i8* %0 to i32*, !dbg !4026
  call void @llvm.dbg.value(metadata i32* %14, metadata !3958, metadata !DIExpression()), !dbg !4019
  %15 = and i32 %4, 8, !dbg !4027
  %16 = icmp eq i32 %15, 0, !dbg !4028
  call void @llvm.dbg.value(metadata i1 %16, metadata !3962, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4019
  call void @llvm.dbg.value(metadata i8* %0, metadata !3965, metadata !DIExpression()), !dbg !4019
  %17 = icmp eq i32 %1, 0, !dbg !4029
  br i1 %17, label %18, label %20, !dbg !4030

18:                                               ; preds = %13
  %19 = tail call fastcc i32 @get_package_len(i8* noundef nonnull %0) #25, !dbg !4031
  br label %20, !dbg !4030

20:                                               ; preds = %13, %18
  %21 = phi i32 [ %19, %18 ], [ %1, %13 ], !dbg !4030
  call void @llvm.dbg.value(metadata i32 %21, metadata !3951, metadata !DIExpression()), !dbg !4019
  %22 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4032
  %23 = load i8, i8* %22, align 1, !dbg !4032
  %24 = zext i8 %23 to i32, !dbg !4033
  call void @llvm.dbg.value(metadata i32 %24, metadata !3960, metadata !DIExpression()), !dbg !4019
  %25 = icmp ne i8 %23, 0, !dbg !4034
  %26 = and i32 %4, 1, !dbg !4035
  %27 = icmp ne i32 %26, 0, !dbg !4035
  %28 = and i1 %27, %25, !dbg !4035
  call void @llvm.dbg.value(metadata i1 %28, metadata !3964, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4019
  %29 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4036
  %30 = load i8, i8* %29, align 1, !dbg !4036
  %31 = zext i8 %30 to i32, !dbg !4037
  call void @llvm.dbg.value(metadata i32 %31, metadata !3961, metadata !DIExpression()), !dbg !4019
  %32 = icmp ne i8 %30, 0, !dbg !4038
  %33 = and i32 %4, 2, !dbg !4039
  %34 = icmp ne i32 %33, 0, !dbg !4039
  %35 = and i1 %34, %32, !dbg !4039
  call void @llvm.dbg.value(metadata i1 %35, metadata !3963, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4019
  %36 = select i1 %35, i1 true, i1 %28, !dbg !4040
  br i1 %36, label %41, label %37, !dbg !4040

37:                                               ; preds = %20
  %38 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4042
  br i1 %38, label %287, label %39, !dbg !4045

39:                                               ; preds = %37
  %40 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %21, i8* noundef %3) #24, !dbg !4046
  br label %287, !dbg !4048

41:                                               ; preds = %20
  %42 = load i8, i8* %0, align 1, !dbg !4049
  %43 = zext i8 %42 to i32, !dbg !4050
  %44 = shl nuw nsw i32 %43, 2, !dbg !4051
  call void @llvm.dbg.value(metadata i32 %44, metadata !3959, metadata !DIExpression()), !dbg !4019
  %45 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4052
  %46 = bitcast i8* %45 to i8**, !dbg !4053
  %47 = load i8*, i8** %46, align 4, !dbg !4053
  call void @llvm.dbg.value(metadata i8* %47, metadata !3968, metadata !DIExpression()), !dbg !4019
  %48 = getelementptr inbounds i8, i8* %0, i32 %44, !dbg !4054
  call void @llvm.dbg.value(metadata i8* %48, metadata !3969, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i32 0, metadata !3970, metadata !DIExpression()), !dbg !4019
  %49 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4055
  br i1 %49, label %50, label %135, !dbg !4056

50:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %21, metadata !3967, metadata !DIExpression()), !dbg !4019
  br i1 %28, label %51, label %76, !dbg !4057

51:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %21, metadata !3967, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i8* %48, metadata !3969, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i32 0, metadata !3970, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i32 0, metadata !3971, metadata !DIExpression()), !dbg !4058
  %52 = icmp ne i16* %5, null
  br label %53, !dbg !4059

53:                                               ; preds = %51, %70
  %54 = phi i32 [ %21, %51 ], [ %72, %70 ]
  %55 = phi i8* [ %48, %51 ], [ %73, %70 ]
  %56 = phi i32 [ 0, %51 ], [ %71, %70 ]
  %57 = phi i32 [ 0, %51 ], [ %74, %70 ]
  call void @llvm.dbg.value(metadata i32 %54, metadata !3967, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i8* %55, metadata !3969, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i32 %56, metadata !3970, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i32 %57, metadata !3971, metadata !DIExpression()), !dbg !4058
  %58 = load i8, i8* %55, align 1, !dbg !4060
  %59 = zext i8 %58 to i32, !dbg !4061
  %60 = getelementptr inbounds i32, i32* %14, i32 %59, !dbg !4061
  %61 = bitcast i32* %60 to i8**, !dbg !4062
  %62 = load i8*, i8** %61, align 4, !dbg !4062
  call void @llvm.dbg.value(metadata i8* %62, metadata !3977, metadata !DIExpression()), !dbg !4063
  %63 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %62, i16 noundef zeroext 0) #25, !dbg !4064
  call void @llvm.dbg.value(metadata i32 %63, metadata !3980, metadata !DIExpression()), !dbg !4063
  %64 = icmp ult i32 %56, %6
  %65 = select i1 %52, i1 %64, i1 false, !dbg !4065
  br i1 %65, label %66, label %70, !dbg !4065

66:                                               ; preds = %53
  %67 = trunc i32 %63 to i16, !dbg !4067
  %68 = add nuw i32 %56, 1, !dbg !4069
  call void @llvm.dbg.value(metadata i32 %68, metadata !3970, metadata !DIExpression()), !dbg !4019
  %69 = getelementptr inbounds i16, i16* %5, i32 %56, !dbg !4070
  store i16 %67, i16* %69, align 2, !dbg !4071
  br label %70, !dbg !4072

70:                                               ; preds = %66, %53
  %71 = phi i32 [ %68, %66 ], [ %56, %53 ], !dbg !4019
  call void @llvm.dbg.value(metadata i32 %71, metadata !3970, metadata !DIExpression()), !dbg !4019
  %72 = add nsw i32 %63, %54, !dbg !4073
  call void @llvm.dbg.value(metadata i32 %72, metadata !3967, metadata !DIExpression()), !dbg !4019
  %73 = getelementptr inbounds i8, i8* %55, i32 1, !dbg !4074
  call void @llvm.dbg.value(metadata i8* %73, metadata !3969, metadata !DIExpression()), !dbg !4019
  %74 = add nuw nsw i32 %57, 1, !dbg !4075
  call void @llvm.dbg.value(metadata i32 %74, metadata !3971, metadata !DIExpression()), !dbg !4058
  %75 = icmp eq i32 %74, %24, !dbg !4076
  br i1 %75, label %82, label %53, !dbg !4059, !llvm.loop !4077

76:                                               ; preds = %50
  %77 = and i32 %4, 4
  %78 = icmp ne i32 %77, 0
  %79 = and i1 %78, %25, !dbg !4079
  %80 = select i1 %79, i32 %24, i32 0, !dbg !4079
  %81 = getelementptr i8, i8* %48, i32 %80, !dbg !4079
  br label %82, !dbg !4079

82:                                               ; preds = %70, %76
  %83 = phi i32 [ 0, %76 ], [ %71, %70 ], !dbg !4082
  %84 = phi i8* [ %81, %76 ], [ %73, %70 ], !dbg !4019
  %85 = phi i32 [ %21, %76 ], [ %72, %70 ], !dbg !4083
  call void @llvm.dbg.value(metadata i1 undef, metadata !3981, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4084
  call void @llvm.dbg.value(metadata i32 0, metadata !3982, metadata !DIExpression()), !dbg !4085
  call void @llvm.dbg.value(metadata i32 %85, metadata !3967, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i8* %84, metadata !3969, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i32 %83, metadata !3970, metadata !DIExpression()), !dbg !4019
  %86 = icmp eq i8 %30, 0, !dbg !4086
  br i1 %86, label %287, label %87, !dbg !4087

87:                                               ; preds = %82
  %88 = and i32 %4, 5, !dbg !4088
  %89 = icmp eq i32 %88, 0, !dbg !4089
  call void @llvm.dbg.value(metadata i1 %89, metadata !3981, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4084
  %90 = icmp eq i32 %33, 0
  %91 = icmp eq i32 %26, 0
  %92 = icmp ne i16* %5, null
  %93 = select i1 %89, i32 -2, i32 -1
  br label %94, !dbg !4087

94:                                               ; preds = %87, %130
  %95 = phi i32 [ %85, %87 ], [ %132, %130 ]
  %96 = phi i8* [ %84, %87 ], [ %100, %130 ]
  %97 = phi i32 [ %83, %87 ], [ %131, %130 ]
  %98 = phi i32 [ 0, %87 ], [ %133, %130 ]
  call void @llvm.dbg.value(metadata i32 %95, metadata !3967, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i8* %96, metadata !3969, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i32 %97, metadata !3970, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i32 %98, metadata !3982, metadata !DIExpression()), !dbg !4085
  %99 = getelementptr inbounds i8, i8* %96, i32 1, !dbg !4090
  call void @llvm.dbg.value(metadata i8* %99, metadata !3969, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i8 undef, metadata !3984, metadata !DIExpression()), !dbg !4091
  %100 = getelementptr inbounds i8, i8* %96, i32 2, !dbg !4092
  call void @llvm.dbg.value(metadata i8* %100, metadata !3969, metadata !DIExpression()), !dbg !4019
  %101 = load i8, i8* %99, align 1, !dbg !4093
  call void @llvm.dbg.value(metadata i8 %101, metadata !3987, metadata !DIExpression()), !dbg !4091
  %102 = zext i8 %101 to i32, !dbg !4094
  %103 = getelementptr inbounds i32, i32* %14, i32 %102, !dbg !4094
  %104 = bitcast i32* %103 to i8**, !dbg !4095
  %105 = load i8*, i8** %104, align 4, !dbg !4095
  call void @llvm.dbg.value(metadata i8* %105, metadata !3988, metadata !DIExpression()), !dbg !4091
  %106 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %105) #25, !dbg !4096
  call void @llvm.dbg.value(metadata i1 %106, metadata !3989, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4091
  br i1 %16, label %113, label %107, !dbg !4097

107:                                              ; preds = %94
  %108 = load i8, i8* %96, align 1, !dbg !4099
  call void @llvm.dbg.value(metadata i8 %108, metadata !3984, metadata !DIExpression()), !dbg !4091
  %109 = zext i8 %108 to i32, !dbg !4100
  %110 = tail call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %109) #25, !dbg !4101
  br i1 %110, label %111, label %113, !dbg !4102

111:                                              ; preds = %107
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.9, i32 0, i32 0), i32 noundef 87, i8* noundef %47, i32 noundef %109) #24, !dbg !4103
  %112 = add nsw i32 %95, -2, !dbg !4109
  call void @llvm.dbg.value(metadata i32 %112, metadata !3967, metadata !DIExpression()), !dbg !4019
  br label %130, !dbg !4110

113:                                              ; preds = %107, %94
  br i1 %106, label %114, label %117, !dbg !4111

114:                                              ; preds = %113
  br i1 %91, label %115, label %118, !dbg !4112

115:                                              ; preds = %114
  %116 = add i32 %95, %93, !dbg !4114
  call void @llvm.dbg.value(metadata i32 %116, metadata !3967, metadata !DIExpression()), !dbg !4019
  br label %130, !dbg !4117

117:                                              ; preds = %113
  br i1 %90, label %130, label %118, !dbg !4118

118:                                              ; preds = %117, %114
  call void @llvm.dbg.label(metadata !4015), !dbg !4119
  %119 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %105, i16 noundef zeroext 0) #25, !dbg !4120
  call void @llvm.dbg.value(metadata i32 %119, metadata !3990, metadata !DIExpression()), !dbg !4091
  %120 = icmp ult i32 %97, %6
  %121 = select i1 %92, i1 %120, i1 false, !dbg !4121
  br i1 %121, label %122, label %126, !dbg !4121

122:                                              ; preds = %118
  %123 = trunc i32 %119 to i16, !dbg !4123
  %124 = add nuw i32 %97, 1, !dbg !4125
  call void @llvm.dbg.value(metadata i32 %124, metadata !3970, metadata !DIExpression()), !dbg !4019
  %125 = getelementptr inbounds i16, i16* %5, i32 %97, !dbg !4126
  store i16 %123, i16* %125, align 2, !dbg !4127
  br label %126, !dbg !4128

126:                                              ; preds = %122, %118
  %127 = phi i32 [ %124, %122 ], [ %97, %118 ], !dbg !4019
  call void @llvm.dbg.value(metadata i32 %127, metadata !3970, metadata !DIExpression()), !dbg !4019
  %128 = add i32 %95, -1, !dbg !4129
  %129 = add i32 %128, %119, !dbg !4130
  call void @llvm.dbg.value(metadata i32 %129, metadata !3967, metadata !DIExpression()), !dbg !4019
  br label %130, !dbg !4131

130:                                              ; preds = %115, %126, %117, %111
  %131 = phi i32 [ %97, %111 ], [ %127, %126 ], [ %97, %115 ], [ %97, %117 ], !dbg !4019
  %132 = phi i32 [ %112, %111 ], [ %129, %126 ], [ %116, %115 ], [ %95, %117 ], !dbg !4091
  call void @llvm.dbg.value(metadata i32 %132, metadata !3967, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i32 %131, metadata !3970, metadata !DIExpression()), !dbg !4019
  %133 = add nuw nsw i32 %98, 1, !dbg !4132
  call void @llvm.dbg.value(metadata i8* %100, metadata !3969, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i32 %133, metadata !3982, metadata !DIExpression()), !dbg !4085
  %134 = icmp eq i32 %133, %31, !dbg !4086
  br i1 %134, label %287, label %94, !dbg !4087, !llvm.loop !4133

135:                                              ; preds = %41
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !3992, metadata !DIExpression()), !dbg !4135
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !3993, metadata !DIExpression()), !dbg !4136
  br i1 %28, label %136, label %138, !dbg !4137

136:                                              ; preds = %135
  call void @llvm.dbg.value(metadata i8 %23, metadata !3994, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i8 0, metadata !3995, metadata !DIExpression()), !dbg !4019
  %137 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !4138
  call void @llvm.dbg.value(metadata i8* %137, metadata !3996, metadata !DIExpression()), !dbg !4019
  br label %143, !dbg !4141

138:                                              ; preds = %135
  %139 = and i32 %4, 4
  %140 = icmp ne i32 %139, 0
  %141 = and i1 %140, %25, !dbg !4142
  %142 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %141, label %143, label %148, !dbg !4142

143:                                              ; preds = %136, %138
  %144 = phi i8 [ 0, %138 ], [ %23, %136 ]
  %145 = phi i8 [ %23, %138 ], [ 0, %136 ]
  %146 = phi i8* [ %142, %138 ], [ %137, %136 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !3996, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i8 undef, metadata !3995, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i8 0, metadata !3994, metadata !DIExpression()), !dbg !4019
  %147 = call i8* @memcpy(i8* noundef nonnull %146, i8* noundef nonnull %48, i32 noundef %24) #24, !dbg !4144
  br label %148, !dbg !4147

148:                                              ; preds = %138, %143
  %149 = phi i8 [ %145, %143 ], [ 0, %138 ]
  %150 = phi i8 [ %144, %143 ], [ 0, %138 ]
  %151 = getelementptr inbounds i8, i8* %48, i32 %24, !dbg !4148
  call void @llvm.dbg.value(metadata i8* %151, metadata !3969, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i32 0, metadata !3998, metadata !DIExpression()), !dbg !4149
  call void @llvm.dbg.value(metadata i8 %149, metadata !3995, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i8 %150, metadata !3994, metadata !DIExpression()), !dbg !4019
  %152 = icmp eq i8 %30, 0, !dbg !4150
  br i1 %152, label %153, label %155, !dbg !4151

153:                                              ; preds = %148
  %154 = and i32 %4, 4, !dbg !4152
  br label %160, !dbg !4151

155:                                              ; preds = %148
  %156 = icmp eq i32 %33, 0
  %157 = icmp eq i32 %26, 0
  %158 = and i32 %4, 4
  %159 = icmp eq i32 %158, 0
  br label %179, !dbg !4151

160:                                              ; preds = %235, %153
  %161 = phi i32 [ %154, %153 ], [ %158, %235 ], !dbg !4152
  %162 = phi i8 [ %150, %153 ], [ %236, %235 ], !dbg !4153
  %163 = phi i8 [ %149, %153 ], [ %237, %235 ], !dbg !4154
  %164 = phi i8* [ %151, %153 ], [ %186, %235 ], !dbg !4019
  call void @llvm.dbg.value(metadata i8 undef, metadata !3991, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !4019
  %165 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4155
  %166 = load i8, i8* %165, align 1, !dbg !4155
  %167 = zext i8 %162 to i32, !dbg !4156
  %168 = add i8 %166, %162, !dbg !4157
  call void @llvm.dbg.value(metadata i8 %168, metadata !3991, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !4019
  %169 = icmp eq i32 %33, 0, !dbg !4158
  %170 = lshr i8 %163, 1, !dbg !4159
  %171 = select i1 %169, i8 %170, i8 0, !dbg !4159
  call void @llvm.dbg.value(metadata i8 %171, metadata !3991, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !4019
  %172 = icmp eq i32 %26, 0, !dbg !4160
  %173 = icmp eq i32 %161, 0, !dbg !4152
  %174 = select i1 %173, i8 0, i8 %163, !dbg !4152
  %175 = select i1 %172, i8 %174, i8 0, !dbg !4152
  call void @llvm.dbg.value(metadata i8 %175, metadata !3991, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !4019
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !4006, metadata !DIExpression()), !dbg !4161
  %176 = load i32, i32* %14, align 1, !dbg !4162
  store i8 %168, i8* %165, align 1, !dbg !4163
  store i8 %175, i8* %22, align 1, !dbg !4163
  store i8 %171, i8* %29, align 1, !dbg !4163
  %177 = call i32 %2(i8* noundef nonnull %0, i32 noundef %44, i8* noundef %3) #24, !dbg !4164
  call void @llvm.dbg.value(metadata i32 %177, metadata !3997, metadata !DIExpression()), !dbg !4019
  %178 = icmp slt i32 %177, 0, !dbg !4165
  br i1 %178, label %287, label %240, !dbg !4167

179:                                              ; preds = %155, %235
  %180 = phi i8* [ %151, %155 ], [ %186, %235 ]
  %181 = phi i32 [ 0, %155 ], [ %238, %235 ]
  %182 = phi i8 [ %149, %155 ], [ %237, %235 ]
  %183 = phi i8 [ %150, %155 ], [ %236, %235 ]
  call void @llvm.dbg.value(metadata i8* %180, metadata !3969, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i32 %181, metadata !3998, metadata !DIExpression()), !dbg !4149
  call void @llvm.dbg.value(metadata i8 %182, metadata !3995, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i8 %183, metadata !3994, metadata !DIExpression()), !dbg !4019
  %184 = getelementptr inbounds i8, i8* %180, i32 1, !dbg !4168
  call void @llvm.dbg.value(metadata i8* %184, metadata !3969, metadata !DIExpression()), !dbg !4019
  %185 = load i8, i8* %180, align 1, !dbg !4169
  call void @llvm.dbg.value(metadata i8 %185, metadata !4000, metadata !DIExpression()), !dbg !4170
  %186 = getelementptr inbounds i8, i8* %180, i32 2, !dbg !4171
  call void @llvm.dbg.value(metadata i8* %186, metadata !3969, metadata !DIExpression()), !dbg !4019
  %187 = load i8, i8* %184, align 1, !dbg !4172
  call void @llvm.dbg.value(metadata i8 %187, metadata !4003, metadata !DIExpression()), !dbg !4170
  %188 = zext i8 %187 to i32, !dbg !4173
  %189 = getelementptr inbounds i32, i32* %14, i32 %188, !dbg !4173
  %190 = bitcast i32* %189 to i8**, !dbg !4174
  %191 = load i8*, i8** %190, align 4, !dbg !4174
  call void @llvm.dbg.value(metadata i8* %191, metadata !4004, metadata !DIExpression()), !dbg !4170
  %192 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %191) #25, !dbg !4175
  call void @llvm.dbg.value(metadata i1 %192, metadata !4005, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4170
  br i1 %16, label %196, label %193, !dbg !4176

193:                                              ; preds = %179
  %194 = zext i8 %185 to i32, !dbg !4178
  %195 = call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %194) #25, !dbg !4179
  br i1 %195, label %235, label %196, !dbg !4180

196:                                              ; preds = %193, %179
  br i1 %192, label %197, label %213, !dbg !4181

197:                                              ; preds = %196
  br i1 %157, label %205, label %198, !dbg !4182

198:                                              ; preds = %197
  %199 = icmp ult i8 %183, 16, !dbg !4185
  br i1 %199, label %201, label %200, !dbg !4190

200:                                              ; preds = %198
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 1086) #24, !dbg !4191
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 1086) #24, !dbg !4191
  unreachable, !dbg !4191

201:                                              ; preds = %198
  %202 = zext i8 %183 to i32, !dbg !4185
  %203 = add nuw nsw i8 %183, 1, !dbg !4193
  call void @llvm.dbg.value(metadata i8 %203, metadata !3994, metadata !DIExpression()), !dbg !4019
  %204 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %202, !dbg !4194
  br label %231, !dbg !4195

205:                                              ; preds = %197
  br i1 %159, label %235, label %206, !dbg !4196

206:                                              ; preds = %205
  %207 = icmp ult i8 %182, 16, !dbg !4197
  br i1 %207, label %209, label %208, !dbg !4202

208:                                              ; preds = %206
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 1089) #24, !dbg !4203
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 1089) #24, !dbg !4203
  unreachable, !dbg !4203

209:                                              ; preds = %206
  %210 = zext i8 %182 to i32, !dbg !4197
  %211 = add nuw nsw i8 %182, 1, !dbg !4205
  call void @llvm.dbg.value(metadata i8 %211, metadata !3995, metadata !DIExpression()), !dbg !4019
  %212 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %210, !dbg !4206
  br label %231, !dbg !4207

213:                                              ; preds = %196
  br i1 %156, label %221, label %214, !dbg !4208

214:                                              ; preds = %213
  %215 = icmp ult i8 %183, 16, !dbg !4210
  br i1 %215, label %217, label %216, !dbg !4215

216:                                              ; preds = %214
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 1096) #24, !dbg !4216
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 1096) #24, !dbg !4216
  unreachable, !dbg !4216

217:                                              ; preds = %214
  %218 = zext i8 %183 to i32, !dbg !4210
  %219 = add nuw nsw i8 %183, 1, !dbg !4218
  call void @llvm.dbg.value(metadata i8 %219, metadata !3994, metadata !DIExpression()), !dbg !4019
  %220 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %218, !dbg !4219
  br label %231, !dbg !4220

221:                                              ; preds = %213
  %222 = icmp ult i8 %182, 16, !dbg !4221
  br i1 %222, label %224, label %223, !dbg !4225

223:                                              ; preds = %221
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 1099) #24, !dbg !4226
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 1099) #24, !dbg !4226
  unreachable, !dbg !4226

224:                                              ; preds = %221
  %225 = zext i8 %182 to i32, !dbg !4221
  %226 = add nuw nsw i8 %182, 1, !dbg !4228
  call void @llvm.dbg.value(metadata i8 %226, metadata !3995, metadata !DIExpression()), !dbg !4019
  %227 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %225, !dbg !4229
  store i8 %185, i8* %227, align 1, !dbg !4230
  %228 = add nuw nsw i8 %182, 2, !dbg !4231
  call void @llvm.dbg.value(metadata i8 %228, metadata !3995, metadata !DIExpression()), !dbg !4019
  %229 = zext i8 %226 to i32, !dbg !4232
  %230 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %229, !dbg !4232
  br label %231

231:                                              ; preds = %217, %224, %201, %209
  %232 = phi i8* [ %212, %209 ], [ %204, %201 ], [ %230, %224 ], [ %220, %217 ]
  %233 = phi i8 [ %183, %209 ], [ %203, %201 ], [ %183, %224 ], [ %219, %217 ]
  %234 = phi i8 [ %211, %209 ], [ %182, %201 ], [ %228, %224 ], [ %182, %217 ]
  store i8 %187, i8* %232, align 1, !dbg !4233
  br label %235, !dbg !4234

235:                                              ; preds = %231, %205, %193
  %236 = phi i8 [ %183, %193 ], [ %183, %205 ], [ %233, %231 ], !dbg !4019
  %237 = phi i8 [ %182, %193 ], [ %182, %205 ], [ %234, %231 ], !dbg !4154
  call void @llvm.dbg.value(metadata i8 %237, metadata !3995, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i8 %236, metadata !3994, metadata !DIExpression()), !dbg !4019
  %238 = add nuw nsw i32 %181, 1, !dbg !4234
  call void @llvm.dbg.value(metadata i8* %186, metadata !3969, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i32 %238, metadata !3998, metadata !DIExpression()), !dbg !4149
  %239 = icmp eq i32 %238, %31, !dbg !4150
  br i1 %239, label %160, label %179, !dbg !4151, !llvm.loop !4235

240:                                              ; preds = %160
  %241 = zext i8 %163 to i32, !dbg !4159
  call void @llvm.dbg.value(metadata i32 %177, metadata !3967, metadata !DIExpression()), !dbg !4019
  store i32 %176, i32* %14, align 1, !dbg !4237
  %242 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !4238
  %243 = call i32 %2(i8* noundef nonnull %242, i32 noundef %241, i8* noundef %3) #24, !dbg !4239
  call void @llvm.dbg.value(metadata i32 %243, metadata !3997, metadata !DIExpression()), !dbg !4019
  %244 = icmp slt i32 %243, 0, !dbg !4240
  br i1 %244, label %287, label %245, !dbg !4242

245:                                              ; preds = %240
  call void @llvm.dbg.value(metadata !DIArgList(i32 %177, i32 %243), metadata !3967, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4019
  %246 = mul nsw i32 %31, -2
  %247 = add i32 %21, %246, !dbg !4243
  %248 = add nuw nsw i32 %44, %24, !dbg !4243
  %249 = sub i32 %247, %248, !dbg !4243
  call void @llvm.dbg.value(metadata i32 %249, metadata !4007, metadata !DIExpression()), !dbg !4019
  %250 = call i32 %2(i8* noundef %164, i32 noundef %249, i8* noundef %3) #24, !dbg !4244
  call void @llvm.dbg.value(metadata i32 %250, metadata !3997, metadata !DIExpression()), !dbg !4019
  %251 = icmp slt i32 %250, 0, !dbg !4245
  br i1 %251, label %287, label %252, !dbg !4247

252:                                              ; preds = %245
  %253 = add nuw nsw i32 %243, %177, !dbg !4248
  call void @llvm.dbg.value(metadata i32 %253, metadata !3967, metadata !DIExpression()), !dbg !4019
  %254 = add nuw nsw i32 %253, %250, !dbg !4249
  call void @llvm.dbg.value(metadata i32 %254, metadata !3967, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata i32 0, metadata !4008, metadata !DIExpression()), !dbg !4250
  %255 = icmp eq i8 %162, 0, !dbg !4251
  br i1 %255, label %284, label %256, !dbg !4252

256:                                              ; preds = %252
  %257 = icmp eq i16* %5, null
  br label %258, !dbg !4252

258:                                              ; preds = %256, %279
  %259 = phi i32 [ 0, %256 ], [ %282, %279 ]
  %260 = phi i32 [ %254, %256 ], [ %281, %279 ]
  call void @llvm.dbg.value(metadata i32 %259, metadata !4008, metadata !DIExpression()), !dbg !4250
  call void @llvm.dbg.value(metadata i32 %260, metadata !3967, metadata !DIExpression()), !dbg !4019
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4253
  %261 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %259, !dbg !4254
  %262 = load i8, i8* %261, align 1, !dbg !4254
  call void @llvm.dbg.value(metadata i8 %262, metadata !4010, metadata !DIExpression()), !dbg !4255
  store i8 %262, i8* %10, align 1, !dbg !4256
  %263 = zext i8 %262 to i32, !dbg !4257
  %264 = getelementptr inbounds i32, i32* %14, i32 %263, !dbg !4257
  %265 = bitcast i32* %264 to i8**, !dbg !4258
  %266 = load i8*, i8** %265, align 4, !dbg !4258
  call void @llvm.dbg.value(metadata i8* %266, metadata !4013, metadata !DIExpression()), !dbg !4255
  br i1 %257, label %270, label %267, !dbg !4259

267:                                              ; preds = %258
  %268 = getelementptr inbounds i16, i16* %5, i32 %259, !dbg !4260
  %269 = load i16, i16* %268, align 2, !dbg !4260
  br label %270, !dbg !4259

270:                                              ; preds = %258, %267
  %271 = phi i16 [ %269, %267 ], [ 0, %258 ], !dbg !4259
  call void @llvm.dbg.value(metadata i32 undef, metadata !4014, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4255
  call void @llvm.dbg.value(metadata i8* %10, metadata !4010, metadata !DIExpression(DW_OP_deref)), !dbg !4255
  %272 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #24, !dbg !4261
  call void @llvm.dbg.value(metadata i32 %272, metadata !3997, metadata !DIExpression()), !dbg !4019
  %273 = icmp slt i32 %272, 0, !dbg !4262
  br i1 %273, label %277, label %274, !dbg !4264

274:                                              ; preds = %270
  call void @llvm.dbg.value(metadata i16 %271, metadata !4014, metadata !DIExpression()), !dbg !4255
  call void @llvm.dbg.value(metadata !DIArgList(i32 %260, i32 %272), metadata !3967, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4019
  %275 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %266, i16 noundef zeroext %271) #25, !dbg !4265
  call void @llvm.dbg.value(metadata i32 %275, metadata !3997, metadata !DIExpression()), !dbg !4019
  %276 = icmp slt i32 %275, 0, !dbg !4266
  br i1 %276, label %277, label %279, !dbg !4268

277:                                              ; preds = %274, %270
  %278 = phi i32 [ %275, %274 ], [ %272, %270 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !3967, metadata !DIExpression()), !dbg !4019
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4269
  call void @llvm.dbg.value(metadata i32 undef, metadata !3967, metadata !DIExpression()), !dbg !4019
  br label %287

279:                                              ; preds = %274
  %280 = add nsw i32 %272, %260, !dbg !4270
  call void @llvm.dbg.value(metadata i32 %280, metadata !3967, metadata !DIExpression()), !dbg !4019
  %281 = add nsw i32 %280, %275, !dbg !4271
  call void @llvm.dbg.value(metadata i32 %281, metadata !3967, metadata !DIExpression()), !dbg !4019
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4269
  %282 = add nuw nsw i32 %259, 1, !dbg !4272
  call void @llvm.dbg.value(metadata i32 %282, metadata !4008, metadata !DIExpression()), !dbg !4250
  %283 = icmp eq i32 %282, %167, !dbg !4251
  br i1 %283, label %284, label %258, !dbg !4252, !llvm.loop !4273

284:                                              ; preds = %279, %252
  %285 = phi i32 [ %254, %252 ], [ %281, %279 ], !dbg !4249
  call void @llvm.dbg.value(metadata i32 %285, metadata !3967, metadata !DIExpression()), !dbg !4019
  %286 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #24, !dbg !4275
  br label %287, !dbg !4276

287:                                              ; preds = %130, %82, %277, %284, %160, %240, %245, %37, %39
  %288 = phi i32 [ %21, %39 ], [ %21, %37 ], [ %285, %284 ], [ %177, %160 ], [ %243, %240 ], [ %250, %245 ], [ %278, %277 ], [ %85, %82 ], [ %132, %130 ], !dbg !4019
  ret i32 %288, !dbg !4277
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !4278 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4282, metadata !DIExpression()), !dbg !4290
  %2 = icmp eq i8* %0, null, !dbg !4291
  br i1 %2, label %3, label %4, !dbg !4294

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 198) #24, !dbg !4295
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.7, i32 0, i32 0), i32 noundef 198) #24, !dbg !4295
  unreachable, !dbg !4295

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4283, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8* %0, metadata !4284, metadata !DIExpression()), !dbg !4290
  %5 = load i8, i8* %0, align 1, !dbg !4297
  %6 = zext i8 %5 to i32, !dbg !4297
  %7 = shl nuw nsw i32 %6, 2, !dbg !4298
  call void @llvm.dbg.value(metadata i32 %7, metadata !4285, metadata !DIExpression()), !dbg !4290
  %8 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4299
  %9 = load i8, i8* %8, align 1, !dbg !4299
  %10 = zext i8 %9 to i32, !dbg !4299
  call void @llvm.dbg.value(metadata i32 %10, metadata !4286, metadata !DIExpression()), !dbg !4290
  %11 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4300
  %12 = load i8, i8* %11, align 1, !dbg !4300
  %13 = zext i8 %12 to i32, !dbg !4300
  call void @llvm.dbg.value(metadata i32 %13, metadata !4287, metadata !DIExpression()), !dbg !4290
  %14 = getelementptr inbounds i8, i8* %0, i32 %7, !dbg !4301
  call void @llvm.dbg.value(metadata i8* %14, metadata !4283, metadata !DIExpression()), !dbg !4290
  %15 = getelementptr inbounds i8, i8* %14, i32 %13, !dbg !4302
  call void @llvm.dbg.value(metadata i8* %15, metadata !4283, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 0, metadata !4288, metadata !DIExpression()), !dbg !4303
  %16 = icmp eq i8 %9, 0, !dbg !4304
  br i1 %16, label %17, label %22, !dbg !4306

17:                                               ; preds = %22, %4
  %18 = phi i8* [ %15, %4 ], [ %28, %22 ], !dbg !4290
  %19 = ptrtoint i8* %18 to i32, !dbg !4307
  %20 = ptrtoint i8* %0 to i32, !dbg !4307
  %21 = sub i32 %19, %20, !dbg !4307
  ret i32 %21, !dbg !4308

22:                                               ; preds = %4, %22
  %23 = phi i32 [ %29, %22 ], [ 0, %4 ]
  %24 = phi i8* [ %28, %22 ], [ %15, %4 ]
  call void @llvm.dbg.value(metadata i32 %23, metadata !4288, metadata !DIExpression()), !dbg !4303
  call void @llvm.dbg.value(metadata i8* %24, metadata !4283, metadata !DIExpression()), !dbg !4290
  %25 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !4309
  call void @llvm.dbg.value(metadata i8* %25, metadata !4283, metadata !DIExpression()), !dbg !4290
  %26 = tail call i32 @strlen(i8* noundef nonnull %25) #24, !dbg !4311
  %27 = add i32 %26, 1, !dbg !4312
  %28 = getelementptr inbounds i8, i8* %25, i32 %27, !dbg !4313
  call void @llvm.dbg.value(metadata i8* %28, metadata !4283, metadata !DIExpression()), !dbg !4290
  %29 = add nuw nsw i32 %23, 1, !dbg !4314
  call void @llvm.dbg.value(metadata i32 %29, metadata !4288, metadata !DIExpression()), !dbg !4303
  %30 = icmp eq i32 %29, %10, !dbg !4304
  br i1 %30, label %17, label %22, !dbg !4306, !llvm.loop !4315
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !4317 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !4321, metadata !DIExpression()), !dbg !4325
  call void @llvm.dbg.value(metadata i8* %1, metadata !4322, metadata !DIExpression()), !dbg !4325
  call void @llvm.dbg.value(metadata i8* %2, metadata !4323, metadata !DIExpression()), !dbg !4325
  call void @llvm.dbg.value(metadata i16 %3, metadata !4324, metadata !DIExpression()), !dbg !4325
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !4326
  br i1 %5, label %6, label %9, !dbg !4328

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #24, !dbg !4329
  %8 = add i32 %7, 1, !dbg !4331
  br label %20, !dbg !4332

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !4333
  br i1 %10, label %13, label %11, !dbg !4334

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !4334
  br label %16, !dbg !4334

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #24, !dbg !4335
  %15 = add i32 %14, 1, !dbg !4336
  br label %16, !dbg !4334

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !4334
  %18 = and i32 %17, 65535, !dbg !4337
  call void @llvm.dbg.value(metadata i32 %17, metadata !4324, metadata !DIExpression()), !dbg !4325
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #24, !dbg !4338
  br label %20, !dbg !4339

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !4325
  ret i32 %21, !dbg !4340
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !4341 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4343, metadata !DIExpression()), !dbg !4344
  ret i32 0, !dbg !4345
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #9 !dbg !4346 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !4350, metadata !DIExpression()), !dbg !4351
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !4352
  ret void, !dbg !4353
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #10 !dbg !4354 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !4357
  ret i8* %1, !dbg !4358
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !4359 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4370, metadata !DIExpression()), !dbg !4381
  call void @llvm.dbg.value(metadata i8* %0, metadata !4369, metadata !DIExpression()), !dbg !4381
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #25, !dbg !4382
  ret void, !dbg !4384
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !4385 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4389, metadata !DIExpression()), !dbg !4391
  call void @llvm.dbg.value(metadata i8* %1, metadata !4390, metadata !DIExpression()), !dbg !4391
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4392
  %4 = tail call i32 %3(i32 noundef %0) #24, !dbg !4392
  ret i32 %4, !dbg !4393
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !4394 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4401, metadata !DIExpression()), !dbg !4402
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4398, metadata !DIExpression()), !dbg !4402
  call void @llvm.dbg.value(metadata i8* %1, metadata !4399, metadata !DIExpression()), !dbg !4402
  call void @llvm.dbg.value(metadata i8* %2, metadata !4400, metadata !DIExpression()), !dbg !4402
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #24, !dbg !4403
  ret void, !dbg !4404
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !4405 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4409, metadata !DIExpression()), !dbg !4412
  call void @llvm.dbg.value(metadata i32 %1, metadata !4410, metadata !DIExpression()), !dbg !4412
  call void @llvm.dbg.value(metadata i32 0, metadata !4411, metadata !DIExpression()), !dbg !4412
  %3 = icmp eq i32 %1, 0, !dbg !4413
  br i1 %3, label %13, label %4, !dbg !4416

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !4411, metadata !DIExpression()), !dbg !4412
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4417
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !4419
  %8 = load i8, i8* %7, align 1, !dbg !4419
  %9 = zext i8 %8 to i32, !dbg !4419
  %10 = tail call i32 %6(i32 noundef %9) #24, !dbg !4417
  %11 = add nuw i32 %5, 1, !dbg !4420
  call void @llvm.dbg.value(metadata i32 %11, metadata !4411, metadata !DIExpression()), !dbg !4412
  %12 = icmp eq i32 %11, %1, !dbg !4413
  br i1 %12, label %13, label %4, !dbg !4416, !llvm.loop !4421

13:                                               ; preds = %4, %2
  ret void, !dbg !4423
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !4424 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4428, metadata !DIExpression()), !dbg !4430
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !4431
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4431
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !4429, metadata !DIExpression()), !dbg !4432
  call void @llvm.va_start(i8* nonnull %3), !dbg !4433
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !4434
  %5 = load i32, i32* %4, align 4, !dbg !4434
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !4434
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !4434
  call void @llvm.va_end(i8* nonnull %3), !dbg !4435
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4436
  ret void, !dbg !4436
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !4437 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4441, metadata !DIExpression()), !dbg !4446
  call void @llvm.dbg.value(metadata i32 %1, metadata !4442, metadata !DIExpression()), !dbg !4446
  call void @llvm.dbg.value(metadata i8* %2, metadata !4443, metadata !DIExpression()), !dbg !4446
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !4447
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4447
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !4444, metadata !DIExpression()), !dbg !4448
  call void @llvm.va_start(i8* nonnull %5), !dbg !4449
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !4450
  %7 = load i32, i32* %6, align 4, !dbg !4450
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !4450
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #25, !dbg !4450
  call void @llvm.dbg.value(metadata i32 %9, metadata !4445, metadata !DIExpression()), !dbg !4446
  call void @llvm.va_end(i8* nonnull %5), !dbg !4451
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4452
  ret i32 %9, !dbg !4453
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !4454 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !4461, metadata !DIExpression()), !dbg !4468
  call void @llvm.dbg.value(metadata i8* %0, metadata !4458, metadata !DIExpression()), !dbg !4468
  call void @llvm.dbg.value(metadata i32 %1, metadata !4459, metadata !DIExpression()), !dbg !4468
  call void @llvm.dbg.value(metadata i8* %2, metadata !4460, metadata !DIExpression()), !dbg !4468
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !4469
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4469
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !4462, metadata !DIExpression()), !dbg !4470
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !4471
  store i8* %0, i8** %7, align 4, !dbg !4471
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !4471
  store i32 %1, i32* %8, align 4, !dbg !4471
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !4471
  store i32 0, i32* %9, align 4, !dbg !4471
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #25, !dbg !4472
  %10 = load i32, i32* %9, align 4, !dbg !4473
  %11 = load i32, i32* %8, align 4, !dbg !4475
  %12 = icmp slt i32 %10, %11, !dbg !4476
  br i1 %12, label %13, label %15, !dbg !4477

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !4478
  store i8 0, i8* %14, align 1, !dbg !4480
  br label %15, !dbg !4481

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4482
  ret i32 %10, !dbg !4483
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #11 !dbg !4484 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4489, metadata !DIExpression()), !dbg !4491
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !4490, metadata !DIExpression()), !dbg !4491
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !4492
  %4 = load i8*, i8** %3, align 4, !dbg !4492
  %5 = icmp eq i8* %4, null, !dbg !4494
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !4495
  br i1 %5, label %12, label %8, !dbg !4496

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !4497
  %10 = load i32, i32* %9, align 4, !dbg !4497
  %11 = icmp slt i32 %7, %10, !dbg !4498
  br i1 %11, label %15, label %12, !dbg !4499

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !4500
  %14 = add nsw i32 %7, 1, !dbg !4502
  store i32 %14, i32* %13, align 4, !dbg !4502
  br label %25, !dbg !4503

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !4504
  %17 = icmp eq i32 %7, %16, !dbg !4506
  br i1 %17, label %18, label %21, !dbg !4507

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !4508
  store i32 %19, i32* %6, align 4, !dbg !4508
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4510
  store i8 0, i8* %20, align 1, !dbg !4511
  br label %25, !dbg !4512

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !4513
  %23 = add nsw i32 %7, 1, !dbg !4515
  store i32 %23, i32* %6, align 4, !dbg !4515
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4516
  store i8 %22, i8* %24, align 1, !dbg !4517
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !4518
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #12 !dbg !4519 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !4524, metadata !DIExpression()), !dbg !4528
  call void @llvm.dbg.value(metadata i8* %1, metadata !4525, metadata !DIExpression()), !dbg !4528
  call void @llvm.dbg.value(metadata i8* %2, metadata !4526, metadata !DIExpression()), !dbg !4528
  call void @llvm.dbg.value(metadata i8* %3, metadata !4527, metadata !DIExpression()), !dbg !4528
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #24, !dbg !4529
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #26, !dbg !4530
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #25, !dbg !4531
  unreachable, !dbg !4532
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #13 !dbg !4533 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #26, !dbg !4640
  ret %struct.k_thread* %1, !dbg !4641
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !4642 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !4646, metadata !DIExpression()), !dbg !4647
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4648, !srcloc !4650
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !4651
  ret void, !dbg !4652
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #13 !dbg !4653 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4654, !srcloc !4656
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #24, !dbg !4657
  ret %struct.k_thread* %1, !dbg !4658
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4659 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4672, metadata !DIExpression()), !dbg !4798
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4669, metadata !DIExpression()), !dbg !4798
  call void @llvm.dbg.value(metadata i8* %1, metadata !4670, metadata !DIExpression()), !dbg !4798
  call void @llvm.dbg.value(metadata i8* %2, metadata !4671, metadata !DIExpression()), !dbg !4798
  call void @llvm.dbg.value(metadata i32 %4, metadata !4673, metadata !DIExpression()), !dbg !4798
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4799
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #23, !dbg !4799
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4674, metadata !DIExpression()), !dbg !4800
  call void @llvm.dbg.value(metadata i32 0, metadata !4678, metadata !DIExpression()), !dbg !4798
  call void @llvm.dbg.value(metadata i1 undef, metadata !4680, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4798
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4801

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4801

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4802
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4672, metadata !DIExpression()), !dbg !4798
  call void @llvm.dbg.value(metadata i8* %30, metadata !4671, metadata !DIExpression()), !dbg !4798
  call void @llvm.dbg.value(metadata i32 %29, metadata !4678, metadata !DIExpression()), !dbg !4798
  %31 = load i8, i8* %30, align 1, !dbg !4803
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4801

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4803
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4804
  call void @llvm.dbg.value(metadata i8* %34, metadata !4671, metadata !DIExpression()), !dbg !4798
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #24, !dbg !4804
  call void @llvm.dbg.value(metadata i32 %35, metadata !4682, metadata !DIExpression()), !dbg !4805
  %36 = icmp slt i32 %35, 0, !dbg !4806
  %37 = add i32 %29, 1, !dbg !4804
  call void @llvm.dbg.value(metadata i32 undef, metadata !4678, metadata !DIExpression()), !dbg !4798
  br i1 %36, label %365, label %28, !llvm.loop !4808

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4810
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4687, metadata !DIExpression()), !dbg !4811
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4811
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4730, metadata !DIExpression()), !dbg !4812
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4733, metadata !DIExpression()), !dbg !4812
  call void @llvm.dbg.value(metadata i8* %30, metadata !4736, metadata !DIExpression()), !dbg !4812
  call void @llvm.dbg.value(metadata i32 -1, metadata !4737, metadata !DIExpression()), !dbg !4812
  call void @llvm.dbg.value(metadata i32 -1, metadata !4738, metadata !DIExpression()), !dbg !4812
  call void @llvm.dbg.value(metadata i8* null, metadata !4739, metadata !DIExpression()), !dbg !4812
  call void @llvm.dbg.value(metadata i8* %14, metadata !4740, metadata !DIExpression()), !dbg !4812
  call void @llvm.dbg.value(metadata i8 0, metadata !4741, metadata !DIExpression()), !dbg !4812
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #25, !dbg !4813
  call void @llvm.dbg.value(metadata i8* %39, metadata !4671, metadata !DIExpression()), !dbg !4798
  %40 = load i24, i24* %15, align 8, !dbg !4814
  %41 = and i24 %40, 256, !dbg !4814
  %42 = icmp eq i24 %41, 0, !dbg !4814
  br i1 %42, label %51, label %43, !dbg !4816

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4817
  call void @llvm.dbg.value(metadata i8* %44, metadata !4672, metadata !DIExpression()), !dbg !4798
  %45 = bitcast i8* %27 to i32*, !dbg !4817
  %46 = load i32, i32* %45, align 4, !dbg !4817
  call void @llvm.dbg.value(metadata i32 %46, metadata !4737, metadata !DIExpression()), !dbg !4812
  %47 = icmp slt i32 %46, 0, !dbg !4819
  br i1 %47, label %48, label %56, !dbg !4821

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4822
  store i24 %49, i24* %15, align 8, !dbg !4822
  %50 = sub nsw i32 0, %46, !dbg !4824
  call void @llvm.dbg.value(metadata i32 %50, metadata !4737, metadata !DIExpression()), !dbg !4812
  br label %56, !dbg !4825

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4826
  %53 = icmp eq i24 %52, 0, !dbg !4826
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4828
  br label %56, !dbg !4828

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4829
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4812
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4672, metadata !DIExpression()), !dbg !4798
  call void @llvm.dbg.value(metadata i32 %58, metadata !4737, metadata !DIExpression()), !dbg !4812
  %60 = and i24 %57, 1024, !dbg !4829
  %61 = icmp eq i24 %60, 0, !dbg !4829
  br i1 %61, label %69, label %62, !dbg !4830

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4831
  call void @llvm.dbg.value(metadata i8* %63, metadata !4672, metadata !DIExpression()), !dbg !4798
  %64 = bitcast i8* %59 to i32*, !dbg !4831
  %65 = load i32, i32* %64, align 4, !dbg !4831
  call void @llvm.dbg.value(metadata i32 %65, metadata !4742, metadata !DIExpression()), !dbg !4832
  %66 = icmp slt i32 %65, 0, !dbg !4833
  br i1 %66, label %67, label %74, !dbg !4835

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4836
  store i24 %68, i24* %15, align 8, !dbg !4836
  br label %74, !dbg !4838

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4839
  %71 = icmp eq i24 %70, 0, !dbg !4839
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4841
  br label %74, !dbg !4841

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4842
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4812
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4812
  call void @llvm.dbg.value(metadata i8* %77, metadata !4672, metadata !DIExpression()), !dbg !4798
  call void @llvm.dbg.value(metadata i32 %76, metadata !4738, metadata !DIExpression()), !dbg !4812
  store i32 0, i32* %16, align 4, !dbg !4843
  store i32 0, i32* %17, align 8, !dbg !4844
  %78 = lshr i24 %75, 16, !dbg !4842
  call void @llvm.dbg.value(metadata i24 %78, metadata !4745, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4812
  %79 = lshr i24 %75, 11, !dbg !4845
  %80 = and i24 %79, 15, !dbg !4845
  %81 = zext i24 %80 to i32, !dbg !4845
  call void @llvm.dbg.value(metadata i32 %81, metadata !4746, metadata !DIExpression()), !dbg !4812
  %82 = trunc i24 %78 to i3, !dbg !4846
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4846

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4847

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4850
  call void @llvm.dbg.value(metadata i8* %85, metadata !4672, metadata !DIExpression()), !dbg !4798
  %86 = bitcast i8* %77 to i32*, !dbg !4850
  %87 = load i32, i32* %86, align 4, !dbg !4850
  %88 = sext i32 %87 to i64, !dbg !4850
  store i64 %88, i64* %20, align 8, !dbg !4852
  br label %115, !dbg !4853

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4854
  call void @llvm.dbg.value(metadata i8* %90, metadata !4672, metadata !DIExpression()), !dbg !4798
  %91 = bitcast i8* %77 to i32*, !dbg !4854
  %92 = load i32, i32* %91, align 4, !dbg !4854
  %93 = sext i32 %92 to i64, !dbg !4854
  store i64 %93, i64* %20, align 8, !dbg !4857
  br label %115, !dbg !4858

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4859
  %96 = add i32 %95, 7, !dbg !4859
  %97 = and i32 %96, -8, !dbg !4859
  %98 = inttoptr i32 %97 to i8*, !dbg !4859
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4859
  call void @llvm.dbg.value(metadata i8* %99, metadata !4672, metadata !DIExpression()), !dbg !4798
  %100 = inttoptr i32 %97 to i64*, !dbg !4859
  %101 = load i64, i64* %100, align 8, !dbg !4859
  store i64 %101, i64* %20, align 8, !dbg !4860
  br label %115, !dbg !4861

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4862
  %104 = add i32 %103, 7, !dbg !4862
  %105 = and i32 %104, -8, !dbg !4862
  %106 = inttoptr i32 %105 to i8*, !dbg !4862
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4862
  call void @llvm.dbg.value(metadata i8* %107, metadata !4672, metadata !DIExpression()), !dbg !4798
  %108 = inttoptr i32 %105 to i64*, !dbg !4862
  %109 = load i64, i64* %108, align 8, !dbg !4862
  store i64 %109, i64* %20, align 8, !dbg !4863
  br label %115, !dbg !4864

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4865
  call void @llvm.dbg.value(metadata i8* %111, metadata !4672, metadata !DIExpression()), !dbg !4798
  %112 = bitcast i8* %77 to i32*, !dbg !4865
  %113 = load i32, i32* %112, align 4, !dbg !4865
  %114 = sext i32 %113 to i64, !dbg !4866
  store i64 %114, i64* %20, align 8, !dbg !4867
  br label %115, !dbg !4868

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4869
  call void @llvm.dbg.value(metadata i8* %117, metadata !4672, metadata !DIExpression()), !dbg !4798
  %118 = trunc i24 %79 to i4, !dbg !4870
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4870

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4871
  %121 = ashr exact i64 %120, 56, !dbg !4871
  store i64 %121, i64* %20, align 8, !dbg !4874
  br label %177, !dbg !4875

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4876
  %124 = ashr exact i64 %123, 48, !dbg !4876
  store i64 %124, i64* %20, align 8, !dbg !4879
  br label %177, !dbg !4880

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4881

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4884
  call void @llvm.dbg.value(metadata i8* %127, metadata !4672, metadata !DIExpression()), !dbg !4798
  %128 = bitcast i8* %77 to i32*, !dbg !4884
  %129 = load i32, i32* %128, align 4, !dbg !4884
  %130 = zext i32 %129 to i64, !dbg !4884
  store i64 %130, i64* %20, align 8, !dbg !4886
  br label %157, !dbg !4887

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4888
  call void @llvm.dbg.value(metadata i8* %132, metadata !4672, metadata !DIExpression()), !dbg !4798
  call void @llvm.dbg.value(metadata i8* %132, metadata !4672, metadata !DIExpression()), !dbg !4798
  %133 = bitcast i8* %77 to i32*, !dbg !4888
  %134 = load i32, i32* %133, align 4, !dbg !4888
  %135 = zext i32 %134 to i64, !dbg !4888
  store i64 %135, i64* %20, align 8, !dbg !4888
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4890
  %138 = add i32 %137, 7, !dbg !4890
  %139 = and i32 %138, -8, !dbg !4890
  %140 = inttoptr i32 %139 to i8*, !dbg !4890
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4890
  call void @llvm.dbg.value(metadata i8* %141, metadata !4672, metadata !DIExpression()), !dbg !4798
  %142 = inttoptr i32 %139 to i64*, !dbg !4890
  %143 = load i64, i64* %142, align 8, !dbg !4890
  store i64 %143, i64* %20, align 8, !dbg !4891
  br label %157, !dbg !4892

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4893
  %146 = add i32 %145, 7, !dbg !4893
  %147 = and i32 %146, -8, !dbg !4893
  %148 = inttoptr i32 %147 to i8*, !dbg !4893
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4893
  call void @llvm.dbg.value(metadata i8* %149, metadata !4672, metadata !DIExpression()), !dbg !4798
  %150 = inttoptr i32 %147 to i64*, !dbg !4893
  %151 = load i64, i64* %150, align 8, !dbg !4893
  store i64 %151, i64* %20, align 8, !dbg !4894
  br label %157, !dbg !4895

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4896
  call void @llvm.dbg.value(metadata i8* %153, metadata !4672, metadata !DIExpression()), !dbg !4798
  %154 = bitcast i8* %77 to i32*, !dbg !4896
  %155 = load i32, i32* %154, align 4, !dbg !4896
  %156 = zext i32 %155 to i64, !dbg !4897
  store i64 %156, i64* %20, align 8, !dbg !4898
  br label %157, !dbg !4899

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4900
  call void @llvm.dbg.value(metadata i8* %159, metadata !4672, metadata !DIExpression()), !dbg !4798
  %160 = trunc i24 %79 to i4, !dbg !4901
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4901

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4902
  store i64 %162, i64* %20, align 8, !dbg !4905
  br label %177, !dbg !4906

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4907
  store i64 %164, i64* %20, align 8, !dbg !4910
  br label %177, !dbg !4911

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4912
  %167 = add i32 %166, 7, !dbg !4912
  %168 = and i32 %167, -8, !dbg !4912
  %169 = inttoptr i32 %168 to i8*, !dbg !4912
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4912
  call void @llvm.dbg.value(metadata i8* %170, metadata !4672, metadata !DIExpression()), !dbg !4798
  call void @llvm.dbg.value(metadata i8* %170, metadata !4672, metadata !DIExpression()), !dbg !4798
  %171 = inttoptr i32 %168 to double*, !dbg !4912
  %172 = load double, double* %171, align 8, !dbg !4912
  store double %172, double* %19, align 8, !dbg !4912
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4916
  call void @llvm.dbg.value(metadata i8* %174, metadata !4672, metadata !DIExpression()), !dbg !4798
  %175 = bitcast i8* %77 to i8**, !dbg !4916
  %176 = load i8*, i8** %175, align 4, !dbg !4916
  store i8* %176, i8** %18, align 8, !dbg !4919
  br label %177, !dbg !4920

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4812
  call void @llvm.dbg.value(metadata i8* %178, metadata !4672, metadata !DIExpression()), !dbg !4798
  %179 = and i24 %75, 3, !dbg !4921
  %180 = icmp eq i24 %179, 0, !dbg !4921
  br i1 %180, label %185, label %181, !dbg !4921

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #25, !dbg !4922
  call void @llvm.dbg.value(metadata i32 %182, metadata !4747, metadata !DIExpression()), !dbg !4923
  %183 = icmp slt i32 %182, 0, !dbg !4924
  %184 = add i32 %182, %29, !dbg !4922
  call void @llvm.dbg.value(metadata i32 undef, metadata !4678, metadata !DIExpression()), !dbg !4798
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4926
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4927

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #24, !dbg !4928
  call void @llvm.dbg.value(metadata i32 %188, metadata !4751, metadata !DIExpression()), !dbg !4929
  %189 = icmp slt i32 %188, 0, !dbg !4930
  %190 = add i32 %29, 1, !dbg !4928
  call void @llvm.dbg.value(metadata i32 undef, metadata !4678, metadata !DIExpression()), !dbg !4798
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4932
  call void @llvm.dbg.value(metadata i8* %192, metadata !4739, metadata !DIExpression()), !dbg !4812
  %193 = icmp sgt i32 %76, -1, !dbg !4933
  br i1 %193, label %194, label %196, !dbg !4935

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #24, !dbg !4936
  call void @llvm.dbg.value(metadata i32 %195, metadata !4754, metadata !DIExpression()), !dbg !4938
  br label %241, !dbg !4939

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #24, !dbg !4940
  call void @llvm.dbg.value(metadata i32 %197, metadata !4754, metadata !DIExpression()), !dbg !4938
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4739, metadata !DIExpression()), !dbg !4812
  %199 = load i64, i64* %20, align 8, !dbg !4942
  %200 = trunc i64 %199 to i8, !dbg !4943
  store i8 %200, i8* %10, align 1, !dbg !4944
  call void @llvm.dbg.value(metadata i8* %23, metadata !4740, metadata !DIExpression()), !dbg !4812
  br label %245, !dbg !4945

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4946
  %203 = icmp eq i24 %202, 0, !dbg !4946
  %204 = trunc i24 %75 to i8, !dbg !4948
  %205 = shl i8 %204, 1, !dbg !4948
  %206 = and i8 %205, 32, !dbg !4948
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4948
  call void @llvm.dbg.value(metadata i8 %207, metadata !4741, metadata !DIExpression()), !dbg !4812
  %208 = load i64, i64* %20, align 8, !dbg !4949
  call void @llvm.dbg.value(metadata i64 %208, metadata !4679, metadata !DIExpression()), !dbg !4798
  %209 = icmp slt i64 %208, 0, !dbg !4950
  br i1 %209, label %210, label %212, !dbg !4952

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4741, metadata !DIExpression()), !dbg !4812
  %211 = sub nsw i64 0, %208, !dbg !4953
  store i64 %211, i64* %20, align 8, !dbg !4955
  br label %212, !dbg !4956

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4812
  call void @llvm.dbg.value(metadata i8 %213, metadata !4741, metadata !DIExpression()), !dbg !4812
  %214 = load i64, i64* %20, align 8, !dbg !4957
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #25, !dbg !4958
  call void @llvm.dbg.value(metadata i8* %215, metadata !4739, metadata !DIExpression()), !dbg !4812
  br label %216, !dbg !4959

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4960
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4961
  call void @llvm.dbg.value(metadata i8* %218, metadata !4739, metadata !DIExpression()), !dbg !4812
  call void @llvm.dbg.value(metadata i8 %217, metadata !4741, metadata !DIExpression()), !dbg !4812
  call void @llvm.dbg.label(metadata !4797), !dbg !4962
  %219 = icmp sgt i32 %76, -1, !dbg !4963
  br i1 %219, label %222, label %220, !dbg !4964

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4965
  br label %245, !dbg !4964

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4967
  %224 = sub i32 %22, %223, !dbg !4967
  call void @llvm.dbg.value(metadata i32 %224, metadata !4756, metadata !DIExpression()), !dbg !4968
  %225 = load i24, i24* %15, align 8, !dbg !4969
  %226 = and i24 %225, -65, !dbg !4969
  store i24 %226, i24* %15, align 8, !dbg !4969
  %227 = icmp ugt i32 %76, %224, !dbg !4970
  br i1 %227, label %228, label %245, !dbg !4972

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4973
  store i32 %229, i32* %16, align 4, !dbg !4975
  br label %245, !dbg !4976

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4977
  %232 = icmp eq i8* %231, null, !dbg !4979
  br i1 %232, label %245, label %233, !dbg !4980

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4981
  %235 = zext i32 %234 to i64, !dbg !4981
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #25, !dbg !4983
  call void @llvm.dbg.value(metadata i8* %236, metadata !4739, metadata !DIExpression()), !dbg !4812
  %237 = load i24, i24* %15, align 8, !dbg !4984
  %238 = or i24 %237, 1048576, !dbg !4984
  store i24 %238, i24* %15, align 8, !dbg !4984
  store i8 120, i8* %21, align 1, !dbg !4985
  br label %216, !dbg !4986

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4987
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #25, !dbg !4990
  br label %363, !dbg !4991

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !4992
  call void @llvm.dbg.value(metadata i32 %242, metadata !4754, metadata !DIExpression()), !dbg !4938
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !4993
  call void @llvm.dbg.value(metadata i32 -1, metadata !4738, metadata !DIExpression()), !dbg !4812
  call void @llvm.dbg.value(metadata i32 %29, metadata !4678, metadata !DIExpression()), !dbg !4798
  call void @llvm.dbg.value(metadata i8* %192, metadata !4739, metadata !DIExpression()), !dbg !4812
  call void @llvm.dbg.value(metadata i8* %243, metadata !4740, metadata !DIExpression()), !dbg !4812
  call void @llvm.dbg.value(metadata i8 0, metadata !4741, metadata !DIExpression()), !dbg !4812
  %244 = icmp eq i8* %192, null, !dbg !4994
  br i1 %244, label %363, label %245, !dbg !4996, !llvm.loop !4808

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4965
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4759, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4812
  call void @llvm.dbg.value(metadata i32 0, metadata !4760, metadata !DIExpression()), !dbg !4812
  %250 = zext i8 %249 to i32, !dbg !4997
  %251 = icmp eq i8 %249, 0, !dbg !4999
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4759, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4812
  call void @llvm.dbg.value(metadata i32 undef, metadata !4759, metadata !DIExpression()), !dbg !4812
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4759, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4812
  call void @llvm.dbg.value(metadata i32 undef, metadata !4759, metadata !DIExpression()), !dbg !4812
  %252 = icmp sgt i32 %58, 0, !dbg !5000
  br i1 %252, label %253, label %302, !dbg !5001

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4965
  %255 = icmp eq i24 %254, 0, !dbg !4965
  %256 = ptrtoint i8* %248 to i32, !dbg !5002
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4759, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4812
  %257 = ptrtoint i8* %247 to i32, !dbg !5002
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4759, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4812
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4759, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4812
  %258 = xor i1 %251, true, !dbg !5003
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4759, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4812
  %259 = sext i1 %258 to i32, !dbg !5003
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4759, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4812
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4759, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4812
  %260 = lshr i24 %246, 19, !dbg !5004
  %261 = and i24 %260, 1, !dbg !5004
  %262 = select i1 %255, i24 %261, i24 2, !dbg !5004
  %263 = zext i24 %262 to i32, !dbg !5004
  %264 = add i32 %257, %259, !dbg !5004
  %265 = add i32 %256, %263, !dbg !5004
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4759, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4812
  %266 = and i24 %246, 4194304, !dbg !5005
  %267 = icmp eq i24 %266, 0, !dbg !5005
  %268 = load i32, i32* %16, align 4, !dbg !5007
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4759, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4812
  call void @llvm.dbg.value(metadata i32 undef, metadata !4759, metadata !DIExpression()), !dbg !4812
  %269 = load i32, i32* %17, align 8, !dbg !5008
  %270 = select i1 %267, i32 0, i32 %269, !dbg !5008
  call void @llvm.dbg.value(metadata i32 undef, metadata !4759, metadata !DIExpression()), !dbg !4812
  %271 = add i32 %264, %58, !dbg !5008
  %272 = add i32 %265, %268, !dbg !5008
  %273 = add i32 %272, %270, !dbg !5009
  %274 = sub i32 %271, %273, !dbg !5009
  call void @llvm.dbg.value(metadata i32 %274, metadata !4737, metadata !DIExpression()), !dbg !4812
  %275 = and i24 %246, 4, !dbg !5010
  %276 = icmp eq i24 %275, 0, !dbg !5010
  br i1 %276, label %277, label %302, !dbg !5011

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4761, metadata !DIExpression()), !dbg !5012
  %278 = and i24 %246, 64, !dbg !5013
  %279 = icmp eq i24 %278, 0, !dbg !5013
  %280 = select i1 %279, i1 true, i1 %251, !dbg !5014
  %281 = select i1 %279, i8 %249, i8 0, !dbg !5014
  %282 = select i1 %279, i32 32, i32 48, !dbg !5014
  br i1 %280, label %287, label %283, !dbg !5014

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #24, !dbg !5015
  call void @llvm.dbg.value(metadata i32 %284, metadata !4766, metadata !DIExpression()), !dbg !5016
  %285 = icmp slt i32 %284, 0, !dbg !5017
  %286 = add i32 %29, 1, !dbg !5015
  call void @llvm.dbg.value(metadata i32 undef, metadata !4678, metadata !DIExpression()), !dbg !4798
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4812
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4802
  call void @llvm.dbg.value(metadata i32 %290, metadata !4678, metadata !DIExpression()), !dbg !4798
  call void @llvm.dbg.value(metadata i8 undef, metadata !4761, metadata !DIExpression()), !dbg !5012
  call void @llvm.dbg.value(metadata i8 %288, metadata !4741, metadata !DIExpression()), !dbg !4812
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !5019
  %292 = add i32 %291, -1, !dbg !5019
  br label %293, !dbg !5019

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !5020
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4802
  call void @llvm.dbg.value(metadata i32 %295, metadata !4678, metadata !DIExpression()), !dbg !4798
  call void @llvm.dbg.value(metadata i32 %294, metadata !4737, metadata !DIExpression()), !dbg !4812
  call void @llvm.dbg.value(metadata i32 %294, metadata !4737, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4812
  %296 = icmp sgt i32 %294, 0, !dbg !5021
  br i1 %296, label %297, label %302, !dbg !5019

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !5022
  call void @llvm.dbg.value(metadata i32 %298, metadata !4737, metadata !DIExpression()), !dbg !4812
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #24, !dbg !5023
  call void @llvm.dbg.value(metadata i32 %299, metadata !4772, metadata !DIExpression()), !dbg !5024
  %300 = icmp slt i32 %299, 0, !dbg !5025
  %301 = add i32 %295, 1, !dbg !5023
  call void @llvm.dbg.value(metadata i32 undef, metadata !4678, metadata !DIExpression()), !dbg !4798
  br i1 %300, label %361, label %293, !llvm.loop !5027

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4812
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4812
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4802
  call void @llvm.dbg.value(metadata i32 %305, metadata !4678, metadata !DIExpression()), !dbg !4798
  call void @llvm.dbg.value(metadata i32 %304, metadata !4737, metadata !DIExpression()), !dbg !4812
  call void @llvm.dbg.value(metadata i8 %303, metadata !4741, metadata !DIExpression()), !dbg !4812
  %306 = icmp eq i8 %303, 0, !dbg !5029
  br i1 %306, label %312, label %307, !dbg !5030

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !5031
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #24, !dbg !5032
  call void @llvm.dbg.value(metadata i32 %309, metadata !4775, metadata !DIExpression()), !dbg !5033
  %310 = icmp slt i32 %309, 0, !dbg !5034
  %311 = add i32 %305, 1, !dbg !5032
  call void @llvm.dbg.value(metadata i32 undef, metadata !4678, metadata !DIExpression()), !dbg !4798
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4802
  call void @llvm.dbg.value(metadata i32 %313, metadata !4678, metadata !DIExpression()), !dbg !4798
  %314 = lshr i24 %246, 20, !dbg !5036
  %315 = lshr i24 %246, 19, !dbg !5037
  %316 = or i24 %314, %315, !dbg !5038
  %317 = and i24 %316, 1, !dbg !5038
  %318 = icmp eq i24 %317, 0, !dbg !5038
  br i1 %318, label %323, label %319, !dbg !5039

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #24, !dbg !5040
  call void @llvm.dbg.value(metadata i32 %320, metadata !4779, metadata !DIExpression()), !dbg !5041
  %321 = icmp slt i32 %320, 0, !dbg !5042
  %322 = add i32 %313, 1, !dbg !5040
  call void @llvm.dbg.value(metadata i32 undef, metadata !4678, metadata !DIExpression()), !dbg !4798
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4802
  call void @llvm.dbg.value(metadata i32 %324, metadata !4678, metadata !DIExpression()), !dbg !4798
  %325 = and i24 %246, 1048576, !dbg !5044
  %326 = icmp eq i24 %325, 0, !dbg !5044
  br i1 %326, label %333, label %327, !dbg !5045

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !5046
  %329 = zext i8 %328 to i32, !dbg !5046
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #24, !dbg !5046
  call void @llvm.dbg.value(metadata i32 %330, metadata !4785, metadata !DIExpression()), !dbg !5047
  %331 = icmp slt i32 %330, 0, !dbg !5048
  %332 = add i32 %324, 1, !dbg !5046
  call void @llvm.dbg.value(metadata i32 undef, metadata !4678, metadata !DIExpression()), !dbg !4798
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4802
  call void @llvm.dbg.value(metadata i32 %334, metadata !4678, metadata !DIExpression()), !dbg !4798
  %335 = load i32, i32* %16, align 4, !dbg !5050
  call void @llvm.dbg.value(metadata i32 %335, metadata !4760, metadata !DIExpression()), !dbg !4812
  br label %336, !dbg !5051

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !5052
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4802
  call void @llvm.dbg.value(metadata i32 %338, metadata !4678, metadata !DIExpression()), !dbg !4798
  call void @llvm.dbg.value(metadata i32 %337, metadata !4760, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4812
  %339 = icmp sgt i32 %337, 0, !dbg !5053
  br i1 %339, label %340, label %345, !dbg !5051

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !5054
  call void @llvm.dbg.value(metadata i32 %341, metadata !4760, metadata !DIExpression()), !dbg !4812
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #24, !dbg !5055
  call void @llvm.dbg.value(metadata i32 %342, metadata !4789, metadata !DIExpression()), !dbg !5056
  %343 = icmp slt i32 %342, 0, !dbg !5057
  %344 = add i32 %338, 1, !dbg !5055
  call void @llvm.dbg.value(metadata i32 undef, metadata !4678, metadata !DIExpression()), !dbg !4798
  br i1 %343, label %361, label %336, !llvm.loop !5059

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #25, !dbg !5061
  call void @llvm.dbg.value(metadata i32 %346, metadata !4792, metadata !DIExpression()), !dbg !5062
  %347 = icmp slt i32 %346, 0, !dbg !5063
  call void @llvm.dbg.value(metadata i32 undef, metadata !4678, metadata !DIExpression()), !dbg !4798
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !5061
  call void @llvm.dbg.value(metadata i32 %349, metadata !4678, metadata !DIExpression()), !dbg !4798
  call void @llvm.dbg.value(metadata i32 %304, metadata !4737, metadata !DIExpression()), !dbg !4812
  %350 = icmp sgt i32 %304, 0, !dbg !5065
  br i1 %350, label %351, label %363, !dbg !5066

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !5066
  %353 = add i32 %352, %338, !dbg !5066
  br label %354, !dbg !5066

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4678, metadata !DIExpression()), !dbg !4798
  call void @llvm.dbg.value(metadata i32 %355, metadata !4737, metadata !DIExpression()), !dbg !4812
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #24, !dbg !5067
  call void @llvm.dbg.value(metadata i32 %356, metadata !4794, metadata !DIExpression()), !dbg !5068
  %357 = icmp slt i32 %356, 0, !dbg !5069
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !5071
  call void @llvm.dbg.value(metadata i32 undef, metadata !4678, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4798
  call void @llvm.dbg.value(metadata i32 %359, metadata !4737, metadata !DIExpression()), !dbg !4812
  %360 = icmp sgt i32 %355, 1, !dbg !5065
  br i1 %360, label %354, label %363, !dbg !5066, !llvm.loop !5072

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4678, metadata !DIExpression()), !dbg !4798
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4809
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4802
  call void @llvm.dbg.value(metadata i32 %364, metadata !4678, metadata !DIExpression()), !dbg !4798
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4809
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4798
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #23, !dbg !5074
  ret i32 %366, !dbg !5074
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5075 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5079, metadata !DIExpression()), !dbg !5081
  call void @llvm.dbg.value(metadata i8* %1, metadata !5080, metadata !DIExpression()), !dbg !5081
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !5082
  store i24 0, i24* %3, align 4, !dbg !5082
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5082
  store i8 0, i8* %4, align 1, !dbg !5082
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5082
  store i32 0, i32* %5, align 4, !dbg !5082
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5082
  store i32 0, i32* %6, align 4, !dbg !5082
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5083
  call void @llvm.dbg.value(metadata i8* %7, metadata !5080, metadata !DIExpression()), !dbg !5081
  %8 = load i8, i8* %7, align 1, !dbg !5084
  %9 = icmp eq i8 %8, 37, !dbg !5086
  br i1 %9, label %10, label %12, !dbg !5087

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5088
  call void @llvm.dbg.value(metadata i8* %11, metadata !5080, metadata !DIExpression()), !dbg !5081
  store i8 37, i8* %4, align 1, !dbg !5090
  br label %18, !dbg !5091

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #25, !dbg !5092
  call void @llvm.dbg.value(metadata i8* %13, metadata !5080, metadata !DIExpression()), !dbg !5081
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #25, !dbg !5093
  call void @llvm.dbg.value(metadata i8* %14, metadata !5080, metadata !DIExpression()), !dbg !5081
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #25, !dbg !5094
  call void @llvm.dbg.value(metadata i8* %15, metadata !5080, metadata !DIExpression()), !dbg !5081
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #25, !dbg !5095
  call void @llvm.dbg.value(metadata i8* %16, metadata !5080, metadata !DIExpression()), !dbg !5081
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #25, !dbg !5096
  call void @llvm.dbg.value(metadata i8* %17, metadata !5080, metadata !DIExpression()), !dbg !5081
  br label %18, !dbg !5097

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !5081
  ret i8* %19, !dbg !5098
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !5099 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5103, metadata !DIExpression()), !dbg !5110
  call void @llvm.dbg.value(metadata i8* %1, metadata !5104, metadata !DIExpression()), !dbg !5110
  call void @llvm.dbg.value(metadata i8* %2, metadata !5105, metadata !DIExpression()), !dbg !5110
  call void @llvm.dbg.value(metadata i8* %3, metadata !5106, metadata !DIExpression()), !dbg !5110
  call void @llvm.dbg.value(metadata i32 0, metadata !5107, metadata !DIExpression()), !dbg !5110
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !5111

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !5112
  call void @llvm.dbg.value(metadata i32 %9, metadata !5107, metadata !DIExpression()), !dbg !5110
  call void @llvm.dbg.value(metadata i8* %8, metadata !5105, metadata !DIExpression()), !dbg !5110
  %10 = icmp ult i8* %8, %3, !dbg !5113
  br i1 %10, label %11, label %13, !dbg !5114

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !5115
  br label %17, !dbg !5114

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !5116

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !5117
  %16 = icmp eq i8 %15, 0, !dbg !5116
  br i1 %16, label %24, label %17, !dbg !5111

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !5115
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5118
  call void @llvm.dbg.value(metadata i8* %19, metadata !5105, metadata !DIExpression()), !dbg !5110
  %20 = zext i8 %18 to i32, !dbg !5119
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #24, !dbg !5120
  call void @llvm.dbg.value(metadata i32 %21, metadata !5108, metadata !DIExpression()), !dbg !5121
  %22 = icmp slt i32 %21, 0, !dbg !5122
  %23 = add i32 %9, 1, !dbg !5124
  call void @llvm.dbg.value(metadata i32 undef, metadata !5107, metadata !DIExpression()), !dbg !5110
  br i1 %22, label %24, label %7, !llvm.loop !5125

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !5110
  ret i32 %25, !dbg !5127
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #14 !dbg !5128 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !5132, metadata !DIExpression()), !dbg !5142
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !5133, metadata !DIExpression()), !dbg !5142
  call void @llvm.dbg.value(metadata i8* %2, metadata !5134, metadata !DIExpression()), !dbg !5142
  call void @llvm.dbg.value(metadata i8* %3, metadata !5135, metadata !DIExpression()), !dbg !5142
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !5143
  %6 = load i8, i8* %5, align 1, !dbg !5143
  %7 = zext i8 %6 to i32, !dbg !5144
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #25, !dbg !5145
  %9 = icmp eq i32 %8, 0, !dbg !5145
  call void @llvm.dbg.value(metadata i1 %9, metadata !5136, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5142
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #25, !dbg !5146
  call void @llvm.dbg.value(metadata i32 %10, metadata !5137, metadata !DIExpression()), !dbg !5142
  %11 = ptrtoint i8* %3 to i32, !dbg !5147
  %12 = ptrtoint i8* %2 to i32, !dbg !5147
  %13 = sub i32 %11, %12, !dbg !5147
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !5148
  call void @llvm.dbg.value(metadata i8* %14, metadata !5139, metadata !DIExpression()), !dbg !5142
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !5149

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !5142
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !5132, metadata !DIExpression()), !dbg !5142
  call void @llvm.dbg.value(metadata i8* %18, metadata !5139, metadata !DIExpression()), !dbg !5142
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !5150
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !5151
  call void @llvm.dbg.value(metadata i32 %25, metadata !5140, metadata !DIExpression()), !dbg !5152
  %26 = icmp ult i32 %25, 10, !dbg !5153
  %27 = select i1 %26, i32 48, i32 %16, !dbg !5154
  %28 = add i32 %27, %25, !dbg !5152
  %29 = trunc i32 %28 to i8, !dbg !5154
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !5155
  call void @llvm.dbg.value(metadata i8* %30, metadata !5139, metadata !DIExpression()), !dbg !5142
  store i8 %29, i8* %30, align 1, !dbg !5156
  call void @llvm.dbg.value(metadata i64 %22, metadata !5132, metadata !DIExpression()), !dbg !5142
  %31 = icmp uge i64 %19, %15, !dbg !5157
  %32 = icmp ugt i8* %30, %2, !dbg !5158
  %33 = and i1 %31, %32, !dbg !5158
  br i1 %33, label %17, label %34, !dbg !5159, !llvm.loop !5160

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !5162
  %36 = load i24, i24* %35, align 4, !dbg !5162
  %37 = and i24 %36, 32, !dbg !5162
  %38 = icmp eq i24 %37, 0, !dbg !5162
  br i1 %38, label %44, label %39, !dbg !5164

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !5165

40:                                               ; preds = %39
  br label %41, !dbg !5167

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !5171
  store i24 %43, i24* %35, align 4, !dbg !5171
  br label %44, !dbg !5172

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !5172
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #11 !dbg !5173 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5179, metadata !DIExpression()), !dbg !5182
  call void @llvm.dbg.value(metadata i8* %1, metadata !5180, metadata !DIExpression()), !dbg !5182
  call void @llvm.dbg.value(metadata i32 %2, metadata !5181, metadata !DIExpression()), !dbg !5182
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5183
  %5 = load i24, i24* %4, align 4, !dbg !5183
  %6 = lshr i24 %5, 11, !dbg !5183
  %7 = and i24 %6, 15, !dbg !5183
  %8 = zext i24 %7 to i32, !dbg !5183
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !5184

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !5185
  store i32 %2, i32* %10, align 4, !dbg !5187
  br label %28, !dbg !5188

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !5189
  store i8 %12, i8* %1, align 1, !dbg !5190
  br label %28, !dbg !5191

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !5192
  %15 = bitcast i8* %1 to i16*, !dbg !5193
  store i16 %14, i16* %15, align 2, !dbg !5194
  br label %28, !dbg !5195

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !5196
  store i32 %2, i32* %17, align 4, !dbg !5197
  br label %28, !dbg !5198

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !5199
  %20 = bitcast i8* %1 to i64*, !dbg !5200
  store i64 %19, i64* %20, align 8, !dbg !5201
  br label %28, !dbg !5202

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5203
  %23 = bitcast i8* %1 to i64*, !dbg !5204
  store i64 %22, i64* %23, align 8, !dbg !5205
  br label %28, !dbg !5206

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5207
  store i32 %2, i32* %25, align 4, !dbg !5208
  br label %28, !dbg !5209

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5210
  store i32 %2, i32* %27, align 4, !dbg !5211
  br label %28, !dbg !5212

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5213
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #6 !dbg !5214 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5217, metadata !DIExpression()), !dbg !5218
  %2 = add i32 %0, -65, !dbg !5219
  %3 = icmp ult i32 %2, 26, !dbg !5220
  %4 = zext i1 %3 to i32, !dbg !5220
  ret i32 %4, !dbg !5221
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #6 !dbg !5222 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5226, metadata !DIExpression()), !dbg !5227
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5228

2:                                                ; preds = %1
  br label %4, !dbg !5229

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5231

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5232
  ret i32 %5, !dbg !5233
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !5234 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5236, metadata !DIExpression()), !dbg !5239
  call void @llvm.dbg.value(metadata i8* %1, metadata !5237, metadata !DIExpression()), !dbg !5239
  call void @llvm.dbg.value(metadata i8 1, metadata !5238, metadata !DIExpression()), !dbg !5239
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5240

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5238, metadata !DIExpression()), !dbg !5239
  call void @llvm.dbg.value(metadata i8* %5, metadata !5237, metadata !DIExpression()), !dbg !5239
  %6 = load i8, i8* %5, align 1, !dbg !5241
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5243

7:                                                ; preds = %4
  br label %11, !dbg !5244

8:                                                ; preds = %4
  br label %11, !dbg !5246

9:                                                ; preds = %4
  br label %11, !dbg !5247

10:                                               ; preds = %4
  br label %11, !dbg !5248

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5249
  %14 = or i24 %13, %12, !dbg !5249
  store i24 %14, i24* %3, align 4, !dbg !5249
  call void @llvm.dbg.value(metadata i8 poison, metadata !5238, metadata !DIExpression()), !dbg !5239
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5237, metadata !DIExpression()), !dbg !5239
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5238, metadata !DIExpression()), !dbg !5239
  call void @llvm.dbg.value(metadata i8* %15, metadata !5237, metadata !DIExpression()), !dbg !5239
  %17 = load i24, i24* %3, align 4, !dbg !5250
  %18 = and i24 %17, 68, !dbg !5252
  %19 = icmp eq i24 %18, 68, !dbg !5252
  br i1 %19, label %20, label %22, !dbg !5252

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5253
  store i24 %21, i24* %3, align 4, !dbg !5253
  br label %22, !dbg !5255

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5256
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5257 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5259, metadata !DIExpression()), !dbg !5263
  call void @llvm.dbg.value(metadata i8* %1, metadata !5260, metadata !DIExpression()), !dbg !5263
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5264
  %5 = load i24, i24* %4, align 4, !dbg !5265
  %6 = or i24 %5, 128, !dbg !5265
  store i24 %6, i24* %4, align 4, !dbg !5265
  call void @llvm.dbg.value(metadata i8* %1, metadata !5260, metadata !DIExpression()), !dbg !5263
  %7 = load i8, i8* %1, align 1, !dbg !5266
  %8 = icmp eq i8 %7, 42, !dbg !5268
  br i1 %8, label %9, label %12, !dbg !5269

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5270
  store i24 %10, i24* %4, align 4, !dbg !5270
  call void @llvm.dbg.value(metadata i8* %1, metadata !5260, metadata !DIExpression()), !dbg !5263
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5272
  call void @llvm.dbg.value(metadata i8* %11, metadata !5260, metadata !DIExpression()), !dbg !5263
  store i8* %11, i8** %3, align 4, !dbg !5272
  br label %29, !dbg !5273

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5261, metadata !DIExpression()), !dbg !5263
  call void @llvm.dbg.value(metadata i8** %3, metadata !5260, metadata !DIExpression(DW_OP_deref)), !dbg !5263
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #25, !dbg !5274
  call void @llvm.dbg.value(metadata i32 %13, metadata !5262, metadata !DIExpression()), !dbg !5263
  %14 = load i8*, i8** %3, align 4, !dbg !5275
  call void @llvm.dbg.value(metadata i8* %14, metadata !5260, metadata !DIExpression()), !dbg !5263
  %15 = icmp eq i8* %14, %1, !dbg !5277
  br i1 %15, label %29, label %16, !dbg !5278

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5279
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5281
  store i32 %13, i32* %18, align 4, !dbg !5282
  %19 = lshr i32 %13, 31, !dbg !5283
  %20 = lshr i24 %17, 1, !dbg !5284
  %21 = and i24 %20, 1, !dbg !5284
  %22 = zext i24 %21 to i32, !dbg !5284
  %23 = or i32 %19, %22, !dbg !5284
  %24 = trunc i32 %23 to i24, !dbg !5284
  %25 = shl nuw nsw i24 %24, 1, !dbg !5284
  %26 = and i24 %17, -131, !dbg !5284
  %27 = or i24 %26, 128, !dbg !5284
  %28 = or i24 %25, %27, !dbg !5284
  store i24 %28, i24* %4, align 4, !dbg !5284
  br label %29, !dbg !5285

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5263
  ret i8* %30, !dbg !5286
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5287 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5289, metadata !DIExpression()), !dbg !5292
  call void @llvm.dbg.value(metadata i8* %1, metadata !5290, metadata !DIExpression()), !dbg !5292
  %4 = load i8, i8* %1, align 1, !dbg !5293
  %5 = icmp eq i8 %4, 46, !dbg !5294
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5295
  %7 = load i24, i24* %6, align 4, !dbg !5296
  %8 = select i1 %5, i24 512, i24 0, !dbg !5296
  %9 = and i24 %7, -513, !dbg !5296
  %10 = or i24 %9, %8, !dbg !5296
  store i24 %10, i24* %6, align 4, !dbg !5296
  br i1 %5, label %11, label %32, !dbg !5297

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5290, metadata !DIExpression()), !dbg !5292
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5298
  call void @llvm.dbg.value(metadata i8* %12, metadata !5290, metadata !DIExpression()), !dbg !5292
  store i8* %12, i8** %3, align 4, !dbg !5298
  %13 = load i8, i8* %12, align 1, !dbg !5299
  %14 = icmp eq i8 %13, 42, !dbg !5301
  br i1 %14, label %15, label %18, !dbg !5302

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5303
  store i24 %16, i24* %6, align 4, !dbg !5303
  call void @llvm.dbg.value(metadata i8* %12, metadata !5290, metadata !DIExpression()), !dbg !5292
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5305
  call void @llvm.dbg.value(metadata i8* %17, metadata !5290, metadata !DIExpression()), !dbg !5292
  store i8* %17, i8** %3, align 4, !dbg !5305
  br label %32, !dbg !5306

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5290, metadata !DIExpression(DW_OP_deref)), !dbg !5292
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #25, !dbg !5307
  call void @llvm.dbg.value(metadata i32 %19, metadata !5291, metadata !DIExpression()), !dbg !5292
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5308
  store i32 %19, i32* %20, align 4, !dbg !5309
  %21 = lshr i32 %19, 31, !dbg !5310
  %22 = load i24, i24* %6, align 4, !dbg !5311
  %23 = lshr i24 %22, 1, !dbg !5311
  %24 = and i24 %23, 1, !dbg !5311
  %25 = zext i24 %24 to i32, !dbg !5311
  %26 = or i32 %21, %25, !dbg !5311
  %27 = trunc i32 %26 to i24, !dbg !5311
  %28 = shl nuw nsw i24 %27, 1, !dbg !5311
  %29 = and i24 %22, -3, !dbg !5311
  %30 = or i24 %28, %29, !dbg !5311
  store i24 %30, i24* %6, align 4, !dbg !5311
  %31 = load i8*, i8** %3, align 4, !dbg !5312
  call void @llvm.dbg.value(metadata i8* %31, metadata !5290, metadata !DIExpression()), !dbg !5292
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5292
  ret i8* %33, !dbg !5313
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #11 !dbg !5314 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5316, metadata !DIExpression()), !dbg !5318
  call void @llvm.dbg.value(metadata i8* %1, metadata !5317, metadata !DIExpression()), !dbg !5318
  %3 = load i8, i8* %1, align 1, !dbg !5319
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5320

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5321
  call void @llvm.dbg.value(metadata i8* %5, metadata !5317, metadata !DIExpression()), !dbg !5318
  %6 = load i8, i8* %5, align 1, !dbg !5324
  %7 = icmp eq i8 %6, 104, !dbg !5325
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5326
  %9 = load i24, i24* %8, align 4, !dbg !5326
  %10 = and i24 %9, -30721, !dbg !5326
  br i1 %7, label %11, label %14, !dbg !5327

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5328
  store i24 %12, i24* %8, align 4, !dbg !5328
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5330
  call void @llvm.dbg.value(metadata i8* %13, metadata !5317, metadata !DIExpression()), !dbg !5318
  br label %56, !dbg !5331

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5332
  store i24 %15, i24* %8, align 4, !dbg !5332
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5334
  call void @llvm.dbg.value(metadata i8* %17, metadata !5317, metadata !DIExpression()), !dbg !5318
  %18 = load i8, i8* %17, align 1, !dbg !5336
  %19 = icmp eq i8 %18, 108, !dbg !5337
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5338
  %21 = load i24, i24* %20, align 4, !dbg !5338
  %22 = and i24 %21, -30721, !dbg !5338
  br i1 %19, label %23, label %26, !dbg !5339

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5340
  store i24 %24, i24* %20, align 4, !dbg !5340
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5342
  call void @llvm.dbg.value(metadata i8* %25, metadata !5317, metadata !DIExpression()), !dbg !5318
  br label %56, !dbg !5343

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5344
  store i24 %27, i24* %20, align 4, !dbg !5344
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5346
  %30 = load i24, i24* %29, align 4, !dbg !5347
  %31 = and i24 %30, -30721, !dbg !5347
  %32 = or i24 %31, 10240, !dbg !5347
  store i24 %32, i24* %29, align 4, !dbg !5347
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5348
  call void @llvm.dbg.value(metadata i8* %33, metadata !5317, metadata !DIExpression()), !dbg !5318
  br label %56, !dbg !5349

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5350
  %36 = load i24, i24* %35, align 4, !dbg !5351
  %37 = and i24 %36, -30721, !dbg !5351
  %38 = or i24 %37, 12288, !dbg !5351
  store i24 %38, i24* %35, align 4, !dbg !5351
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5352
  call void @llvm.dbg.value(metadata i8* %39, metadata !5317, metadata !DIExpression()), !dbg !5318
  br label %56, !dbg !5353

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5354
  %42 = load i24, i24* %41, align 4, !dbg !5355
  %43 = and i24 %42, -30721, !dbg !5355
  %44 = or i24 %43, 14336, !dbg !5355
  store i24 %44, i24* %41, align 4, !dbg !5355
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5356
  call void @llvm.dbg.value(metadata i8* %45, metadata !5317, metadata !DIExpression()), !dbg !5318
  br label %56, !dbg !5357

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5358
  %48 = load i24, i24* %47, align 4, !dbg !5359
  %49 = and i24 %48, -30723, !dbg !5359
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5360
  call void @llvm.dbg.value(metadata i8* %50, metadata !5317, metadata !DIExpression()), !dbg !5318
  %51 = or i24 %49, 16386, !dbg !5361
  store i24 %51, i24* %47, align 4, !dbg !5361
  br label %56, !dbg !5362

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5363
  %54 = load i24, i24* %53, align 4, !dbg !5364
  %55 = and i24 %54, -30721, !dbg !5364
  store i24 %55, i24* %53, align 4, !dbg !5364
  br label %56, !dbg !5365

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5317, metadata !DIExpression()), !dbg !5318
  ret i8* %57, !dbg !5366
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #11 !dbg !5367 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5369, metadata !DIExpression()), !dbg !5374
  call void @llvm.dbg.value(metadata i8* %1, metadata !5370, metadata !DIExpression()), !dbg !5374
  call void @llvm.dbg.value(metadata i8 0, metadata !5371, metadata !DIExpression()), !dbg !5374
  call void @llvm.dbg.value(metadata i8* %1, metadata !5370, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5374
  %3 = load i8, i8* %1, align 1, !dbg !5375
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5376
  store i8 %3, i8* %4, align 1, !dbg !5377
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5378

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5379

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5380
  %9 = load i24, i24* %8, align 4, !dbg !5380
  %10 = and i24 %9, -458753, !dbg !5380
  %11 = or i24 %10, %7, !dbg !5380
  call void @llvm.dbg.label(metadata !5372), !dbg !5381
  %12 = and i24 %9, 30720, !dbg !5382
  %13 = icmp eq i24 %12, 16384, !dbg !5382
  %14 = zext i1 %13 to i24, !dbg !5384
  %15 = or i24 %11, %14, !dbg !5384
  %16 = icmp eq i8 %3, 99, !dbg !5385
  br i1 %16, label %17, label %43, !dbg !5387

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5388
  %19 = icmp ne i24 %18, 0, !dbg !5388
  call void @llvm.dbg.value(metadata i1 %19, metadata !5371, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5374
  br label %43, !dbg !5390

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5391
  %22 = load i24, i24* %21, align 4, !dbg !5392
  %23 = and i24 %22, -458753, !dbg !5392
  %24 = or i24 %23, 262144, !dbg !5392
  call void @llvm.dbg.value(metadata i8 1, metadata !5371, metadata !DIExpression()), !dbg !5374
  br label %43, !dbg !5393

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5396
  %27 = load i24, i24* %26, align 4, !dbg !5397
  %28 = and i24 %27, -458753, !dbg !5397
  %29 = or i24 %28, 196608, !dbg !5397
  %30 = and i24 %27, 30720, !dbg !5398
  %31 = icmp eq i24 %30, 16384, !dbg !5398
  br label %43, !dbg !5400

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5401
  %34 = load i24, i24* %33, align 4, !dbg !5402
  %35 = and i24 %34, -458753, !dbg !5402
  %36 = or i24 %35, 196608, !dbg !5402
  %37 = and i24 %34, 30720, !dbg !5403
  %38 = icmp ne i24 %37, 0, !dbg !5403
  br label %43, !dbg !5405

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5406
  %41 = load i24, i24* %40, align 4, !dbg !5407
  %42 = or i24 %41, 1, !dbg !5407
  br label %43, !dbg !5408

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5409
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5410
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5411
  call void @llvm.dbg.value(metadata i8* %48, metadata !5370, metadata !DIExpression()), !dbg !5374
  call void @llvm.dbg.value(metadata i8 poison, metadata !5371, metadata !DIExpression()), !dbg !5374
  %49 = lshr i24 %44, 1, !dbg !5409
  %50 = and i24 %49, 1, !dbg !5409
  %51 = zext i24 %50 to i32, !dbg !5409
  %52 = or i32 %51, %47, !dbg !5409
  %53 = trunc i32 %52 to i24, !dbg !5409
  %54 = shl nuw nsw i24 %53, 1, !dbg !5409
  %55 = and i24 %44, -3, !dbg !5409
  %56 = or i24 %54, %55, !dbg !5409
  store i24 %56, i24* %46, align 4, !dbg !5409
  ret i8* %48, !dbg !5412
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #14 !dbg !5413 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5417, metadata !DIExpression()), !dbg !5420
  %2 = load i8*, i8** %0, align 4, !dbg !5421
  call void @llvm.dbg.value(metadata i8* %2, metadata !5418, metadata !DIExpression()), !dbg !5420
  call void @llvm.dbg.value(metadata i32 0, metadata !5419, metadata !DIExpression()), !dbg !5420
  %3 = load i8, i8* %2, align 1, !dbg !5422
  %4 = zext i8 %3 to i32, !dbg !5423
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #25, !dbg !5424
  %6 = icmp eq i32 %5, 0, !dbg !5425
  br i1 %6, label %19, label %7, !dbg !5425

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5419, metadata !DIExpression()), !dbg !5420
  call void @llvm.dbg.value(metadata i8* %10, metadata !5418, metadata !DIExpression()), !dbg !5420
  %11 = mul i32 %9, 10, !dbg !5426
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5428
  call void @llvm.dbg.value(metadata i8* %12, metadata !5418, metadata !DIExpression()), !dbg !5420
  %13 = add i32 %11, -48, !dbg !5429
  %14 = add i32 %13, %8, !dbg !5430
  call void @llvm.dbg.value(metadata i32 %14, metadata !5419, metadata !DIExpression()), !dbg !5420
  %15 = load i8, i8* %12, align 1, !dbg !5422
  %16 = zext i8 %15 to i32, !dbg !5423
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #25, !dbg !5424
  %18 = icmp eq i32 %17, 0, !dbg !5425
  br i1 %18, label %19, label %7, !dbg !5425, !llvm.loop !5431

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5420
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5420
  store i8* %20, i8** %0, align 4, !dbg !5433
  ret i32 %21, !dbg !5434
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #6 !dbg !5435 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5437, metadata !DIExpression()), !dbg !5438
  %2 = add i32 %0, -48, !dbg !5439
  %3 = icmp ult i32 %2, 10, !dbg !5440
  %4 = zext i1 %3 to i32, !dbg !5440
  ret i32 %4, !dbg !5441
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @assert_post_action(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5442 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5447, metadata !DIExpression()), !dbg !5449
  call void @llvm.dbg.value(metadata i32 %1, metadata !5448, metadata !DIExpression()), !dbg !5449
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !5450, !srcloc !5452
  ret void, !dbg !5453
}

; Function Attrs: noinline nounwind optsize
define dso_local void @assert_print(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5454 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5456, metadata !DIExpression()), !dbg !5464
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5465
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5465
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5457, metadata !DIExpression()), !dbg !5466
  call void @llvm.va_start(i8* nonnull %3), !dbg !5467
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5468
  %5 = load i32, i32* %4, align 4, !dbg !5468
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5468
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !5468
  call void @llvm.va_end(i8* nonnull %3), !dbg !5469
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5470
  ret void, !dbg !5470
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5471 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #23, !dbg !5473, !srcloc !5474
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #23, !dbg !5475, !srcloc !5476
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !5477, !srcloc !5478
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #23, !dbg !5479, !srcloc !5480
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !5481, !srcloc !5482
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,91\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !5483, !srcloc !5484
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,168000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !5485, !srcloc !5486
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #23, !dbg !5487, !srcloc !5488
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,2048\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !5489, !srcloc !5490
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !5491, !srcloc !5492
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !5493, !srcloc !5494
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !5495, !srcloc !5496
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !5497, !srcloc !5498
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !5499, !srcloc !5500
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !5501, !srcloc !5502
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #23, !dbg !5503, !srcloc !5504
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !5505, !srcloc !5506
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #23, !dbg !5507, !srcloc !5508
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !5509, !srcloc !5510
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #23, !dbg !5511, !srcloc !5512
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !5513, !srcloc !5514
  tail call void asm sideeffect ".globl\09CONFIG_TEST_EXTRA_STACK_SIZE\0A\09.equ\09CONFIG_TEST_EXTRA_STACK_SIZE,0\0A\09.type\09CONFIG_TEST_EXTRA_STACK_SIZE,%object", ""() #23, !dbg !5515, !srcloc !5516
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !5517, !srcloc !5518
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !5519, !srcloc !5520
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #23, !dbg !5521, !srcloc !5522
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !5523, !srcloc !5524
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !5525, !srcloc !5526
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !5527, !srcloc !5528
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #23, !dbg !5529, !srcloc !5530
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !5531, !srcloc !5532
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !5533, !srcloc !5534
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #23, !dbg !5535, !srcloc !5536
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5537, !srcloc !5538
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_ADC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_ADC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_ADC_ENABLED,%object", ""() #23, !dbg !5539, !srcloc !5540
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED,%object", ""() #23, !dbg !5541, !srcloc !5542
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #23, !dbg !5543, !srcloc !5544
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5545, !srcloc !5546
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #23, !dbg !5547, !srcloc !5548
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #23, !dbg !5549, !srcloc !5550
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #23, !dbg !5551, !srcloc !5552
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5553, !srcloc !5554
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,%object", ""() #23, !dbg !5555, !srcloc !5556
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #23, !dbg !5557, !srcloc !5558
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,%object", ""() #23, !dbg !5559, !srcloc !5560
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #23, !dbg !5561, !srcloc !5562
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RNG_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RNG_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RNG_ENABLED,%object", ""() #23, !dbg !5563, !srcloc !5564
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #23, !dbg !5565, !srcloc !5566
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,%object", ""() #23, !dbg !5567, !srcloc !5568
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #23, !dbg !5569, !srcloc !5570
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #23, !dbg !5571, !srcloc !5572
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5573, !srcloc !5574
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #23, !dbg !5575, !srcloc !5576
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #23, !dbg !5577, !srcloc !5578
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED,%object", ""() #23, !dbg !5579, !srcloc !5580
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !5581, !srcloc !5582
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !5583, !srcloc !5584
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !5585, !srcloc !5586
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !5587, !srcloc !5588
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #23, !dbg !5589, !srcloc !5590
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #23, !dbg !5591, !srcloc !5592
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !5593, !srcloc !5594
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !5595, !srcloc !5596
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !5597, !srcloc !5598
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !5599, !srcloc !5600
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !5601, !srcloc !5602
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !5603, !srcloc !5604
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !5605, !srcloc !5606
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !5607, !srcloc !5608
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !5609, !srcloc !5610
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !5611, !srcloc !5612
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !5613, !srcloc !5614
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !5615, !srcloc !5616
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !5617, !srcloc !5618
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !5619, !srcloc !5620
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !5621, !srcloc !5622
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !5623, !srcloc !5624
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !5625, !srcloc !5626
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !5627, !srcloc !5628
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !5629, !srcloc !5630
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !5631, !srcloc !5632
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !5633, !srcloc !5634
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !5635, !srcloc !5636
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !5637, !srcloc !5638
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !5639, !srcloc !5640
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !5641, !srcloc !5642
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !5643, !srcloc !5644
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #23, !dbg !5645, !srcloc !5646
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #23, !dbg !5647, !srcloc !5648
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !5649, !srcloc !5650
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_AEROCORE2\0A\09.equ\09CONFIG_BOARD_96B_AEROCORE2,1\0A\09.type\09CONFIG_BOARD_96B_AEROCORE2,%object", ""() #23, !dbg !5651, !srcloc !5652
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #23, !dbg !5653, !srcloc !5654
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #23, !dbg !5655, !srcloc !5656
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #23, !dbg !5657, !srcloc !5658
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !5659, !srcloc !5660
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #23, !dbg !5661, !srcloc !5662
  tail call void asm sideeffect ".globl\09CONFIG_STM32_CCM\0A\09.equ\09CONFIG_STM32_CCM,1\0A\09.type\09CONFIG_STM32_CCM,%object", ""() #23, !dbg !5663, !srcloc !5664
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F427XX\0A\09.equ\09CONFIG_SOC_STM32F427XX,1\0A\09.type\09CONFIG_SOC_STM32F427XX,%object", ""() #23, !dbg !5665, !srcloc !5666
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5667, !srcloc !5668
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #23, !dbg !5669, !srcloc !5670
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !5671, !srcloc !5672
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !5673, !srcloc !5674
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !5675, !srcloc !5676
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !5677, !srcloc !5678
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !5679, !srcloc !5680
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !5681, !srcloc !5682
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !5683, !srcloc !5684
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !5685, !srcloc !5686
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #23, !dbg !5687, !srcloc !5688
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !5689, !srcloc !5690
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !5691, !srcloc !5692
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #23, !dbg !5693, !srcloc !5694
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !5695, !srcloc !5696
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !5697, !srcloc !5698
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !5699, !srcloc !5700
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !5701, !srcloc !5702
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !5703, !srcloc !5704
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !5705, !srcloc !5706
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #23, !dbg !5707, !srcloc !5708
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !5709, !srcloc !5710
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !5711, !srcloc !5712
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !5713, !srcloc !5714
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #23, !dbg !5715, !srcloc !5716
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #23, !dbg !5717, !srcloc !5718
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #23, !dbg !5719, !srcloc !5720
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #23, !dbg !5721, !srcloc !5722
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !5723, !srcloc !5724
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !5725, !srcloc !5726
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #23, !dbg !5727, !srcloc !5728
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #23, !dbg !5729, !srcloc !5730
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !5731, !srcloc !5732
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,192\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !5733, !srcloc !5734
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !5735, !srcloc !5736
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #23, !dbg !5737, !srcloc !5738
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #23, !dbg !5739, !srcloc !5740
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #23, !dbg !5741, !srcloc !5742
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #23, !dbg !5743, !srcloc !5744
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #23, !dbg !5745, !srcloc !5746
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !5747, !srcloc !5748
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !5749, !srcloc !5750
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !5751, !srcloc !5752
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !5753, !srcloc !5754
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !5755, !srcloc !5756
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !5757, !srcloc !5758
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !5759, !srcloc !5760
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !5761, !srcloc !5762
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #23, !dbg !5763, !srcloc !5764
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #23, !dbg !5765, !srcloc !5766
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #23, !dbg !5767, !srcloc !5768
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !5769, !srcloc !5770
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !5771, !srcloc !5772
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !5773, !srcloc !5774
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !5775, !srcloc !5776
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !5777, !srcloc !5778
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5779, !srcloc !5780
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !5781, !srcloc !5782
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !5783, !srcloc !5784
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !5785, !srcloc !5786
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #23, !dbg !5787, !srcloc !5788
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #23, !dbg !5789, !srcloc !5790
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #23, !dbg !5791, !srcloc !5792
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #23, !dbg !5793, !srcloc !5794
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #23, !dbg !5795, !srcloc !5796
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #23, !dbg !5797, !srcloc !5798
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #23, !dbg !5799, !srcloc !5800
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !5801, !srcloc !5802
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5803, !srcloc !5804
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #23, !dbg !5805, !srcloc !5806
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !5807, !srcloc !5808
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !5809, !srcloc !5810
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !5811, !srcloc !5812
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,11\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !5813, !srcloc !5814
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !5815, !srcloc !5816
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !5817, !srcloc !5818
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !5819, !srcloc !5820
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !5821, !srcloc !5822
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !5823, !srcloc !5824
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !5825, !srcloc !5826
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #23, !dbg !5827, !srcloc !5828
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !5829, !srcloc !5830
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #23, !dbg !5831, !srcloc !5832
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !5833, !srcloc !5834
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #23, !dbg !5835, !srcloc !5836
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !5837, !srcloc !5838
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_NAME\0A\09.equ\09CONFIG_THREAD_NAME,1\0A\09.type\09CONFIG_THREAD_NAME,%object", ""() #23, !dbg !5839, !srcloc !5840
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_MAX_NAME_LEN\0A\09.equ\09CONFIG_THREAD_MAX_NAME_LEN,32\0A\09.type\09CONFIG_THREAD_MAX_NAME_LEN,%object", ""() #23, !dbg !5841, !srcloc !5842
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !5843, !srcloc !5844
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !5845, !srcloc !5846
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !5847, !srcloc !5848
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !5849, !srcloc !5850
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !5851, !srcloc !5852
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !5853, !srcloc !5854
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !5855, !srcloc !5856
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !5857, !srcloc !5858
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !5859, !srcloc !5860
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !5861, !srcloc !5862
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !5863, !srcloc !5864
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !5865, !srcloc !5866
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !5867, !srcloc !5868
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !5869, !srcloc !5870
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !5871, !srcloc !5872
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !5873, !srcloc !5874
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !5875, !srcloc !5876
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !5877, !srcloc !5878
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !5879, !srcloc !5880
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !5881, !srcloc !5882
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5883, !srcloc !5884
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !5885, !srcloc !5886
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !5887, !srcloc !5888
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !5889, !srcloc !5890
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !5891, !srcloc !5892
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !5893, !srcloc !5894
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #23, !dbg !5895, !srcloc !5896
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #23, !dbg !5897, !srcloc !5898
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !5899, !srcloc !5900
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !5901, !srcloc !5902
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !5903, !srcloc !5904
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !5905, !srcloc !5906
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #23, !dbg !5907, !srcloc !5908
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #23, !dbg !5909, !srcloc !5910
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !5911, !srcloc !5912
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #23, !dbg !5913, !srcloc !5914
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !5915, !srcloc !5916
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5917, !srcloc !5918
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #23, !dbg !5919, !srcloc !5920
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #23, !dbg !5921, !srcloc !5922
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #23, !dbg !5923, !srcloc !5924
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #23, !dbg !5925, !srcloc !5926
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #23, !dbg !5927, !srcloc !5928
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #23, !dbg !5929, !srcloc !5930
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #23, !dbg !5931, !srcloc !5932
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #23, !dbg !5933, !srcloc !5934
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #23, !dbg !5935, !srcloc !5936
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #23, !dbg !5937, !srcloc !5938
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5939, !srcloc !5940
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #23, !dbg !5941, !srcloc !5942
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5943, !srcloc !5944
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !5945, !srcloc !5946
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !5947, !srcloc !5948
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !5949, !srcloc !5950
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !5951, !srcloc !5952
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #23, !dbg !5953, !srcloc !5954
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #23, !dbg !5955, !srcloc !5956
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #23, !dbg !5957, !srcloc !5958
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #23, !dbg !5959, !srcloc !5960
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #23, !dbg !5961, !srcloc !5962
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5963, !srcloc !5964
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #23, !dbg !5965, !srcloc !5966
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,24000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #23, !dbg !5967, !srcloc !5968
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #23, !dbg !5969, !srcloc !5970
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #23, !dbg !5971, !srcloc !5972
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5973, !srcloc !5974
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #23, !dbg !5975, !srcloc !5976
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #23, !dbg !5977, !srcloc !5978
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #23, !dbg !5979, !srcloc !5980
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5981, !srcloc !5982
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #23, !dbg !5983, !srcloc !5984
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !5985, !srcloc !5986
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !5987, !srcloc !5988
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !5989, !srcloc !5990
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !5991, !srcloc !5992
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !5993, !srcloc !5994
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !5995, !srcloc !5996
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !5997, !srcloc !5998
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !5999, !srcloc !6000
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !6001, !srcloc !6002
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !6003, !srcloc !6004
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !6005, !srcloc !6006
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #23, !dbg !6007, !srcloc !6008
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !6009, !srcloc !6010
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !6011, !srcloc !6012
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !6013, !srcloc !6014
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !6015, !srcloc !6016
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !6017, !srcloc !6018
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #23, !dbg !6019, !srcloc !6020
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #23, !dbg !6021, !srcloc !6022
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !6023, !srcloc !6024
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !6025, !srcloc !6026
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !6027, !srcloc !6028
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !6029, !srcloc !6030
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !6031, !srcloc !6032
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #23, !dbg !6033, !srcloc !6034
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT\0A\09.equ\09CONFIG_ASSERT,1\0A\09.type\09CONFIG_ASSERT,%object", ""() #23, !dbg !6035, !srcloc !6036
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_LEVEL\0A\09.equ\09CONFIG_ASSERT_LEVEL,2\0A\09.type\09CONFIG_ASSERT_LEVEL,%object", ""() #23, !dbg !6037, !srcloc !6038
  tail call void asm sideeffect ".globl\09CONFIG_SPIN_VALIDATE\0A\09.equ\09CONFIG_SPIN_VALIDATE,1\0A\09.type\09CONFIG_SPIN_VALIDATE,%object", ""() #23, !dbg !6039, !srcloc !6040
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !6041, !srcloc !6042
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #23, !dbg !6043, !srcloc !6044
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #23, !dbg !6045, !srcloc !6046
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_MINIMAL\0A\09.equ\09CONFIG_LOG_DEFAULT_MINIMAL,1\0A\09.type\09CONFIG_LOG_DEFAULT_MINIMAL,%object", ""() #23, !dbg !6047, !srcloc !6048
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #23, !dbg !6049, !srcloc !6050
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #23, !dbg !6051, !srcloc !6052
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #23, !dbg !6053, !srcloc !6054
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #23, !dbg !6055, !srcloc !6056
  tail call void asm sideeffect ".globl\09CONFIG_TEST\0A\09.equ\09CONFIG_TEST,1\0A\09.type\09CONFIG_TEST,%object", ""() #23, !dbg !6057, !srcloc !6058
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !6059, !srcloc !6060
  tail call void asm sideeffect ".globl\09CONFIG_TEST_LOGGING_DEFAULTS\0A\09.equ\09CONFIG_TEST_LOGGING_DEFAULTS,1\0A\09.type\09CONFIG_TEST_LOGGING_DEFAULTS,%object", ""() #23, !dbg !6061, !srcloc !6062
  tail call void asm sideeffect ".globl\09CONFIG_TEST_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_TEST_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_TEST_HW_STACK_PROTECTION,%object", ""() #23, !dbg !6063, !srcloc !6064
  tail call void asm sideeffect ".globl\09CONFIG_TEST_ARM_CORTEX_M\0A\09.equ\09CONFIG_TEST_ARM_CORTEX_M,1\0A\09.type\09CONFIG_TEST_ARM_CORTEX_M,%object", ""() #23, !dbg !6065, !srcloc !6066
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !6067, !srcloc !6068
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !6069, !srcloc !6070
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !6071, !srcloc !6072
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !6073, !srcloc !6074
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !6075, !srcloc !6076
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !6077, !srcloc !6078
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !6079, !srcloc !6080
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !6081, !srcloc !6082
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !6083, !srcloc !6084
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !6085, !srcloc !6086
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !6087, !srcloc !6088
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !6089, !srcloc !6090
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !6091, !srcloc !6092
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !6093, !srcloc !6094
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !6095, !srcloc !6096
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !6097, !srcloc !6098
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !6099, !srcloc !6100
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !6101, !srcloc !6102
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !6103, !srcloc !6104
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !6105, !srcloc !6106
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !6107, !srcloc !6108
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !6109, !srcloc !6110
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !6111, !srcloc !6112
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !6113, !srcloc !6114
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !6115, !srcloc !6116
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !6117, !srcloc !6118
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !6119, !srcloc !6120
  ret void, !dbg !6121
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6122 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6124, metadata !DIExpression()), !dbg !6126
  tail call fastcc void @LL_FLASH_EnableInstCache() #25, !dbg !6127
  tail call fastcc void @LL_FLASH_EnableDataCache() #25, !dbg !6128
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !6129, !srcloc !6138
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !6129
  call void @llvm.dbg.value(metadata i32 %3, metadata !6135, metadata !DIExpression()) #23, !dbg !6139
  call void @llvm.dbg.value(metadata i32 undef, metadata !6136, metadata !DIExpression()) #23, !dbg !6139
  call void @llvm.dbg.value(metadata i32 %3, metadata !6125, metadata !DIExpression()), !dbg !6126
  call void @llvm.dbg.value(metadata i32 %3, metadata !6140, metadata !DIExpression()) #23, !dbg !6145
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !6147, !srcloc !6148
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !6149
  ret i32 0, !dbg !6150
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #15 !dbg !6151 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6153
  %2 = or i32 %1, 512, !dbg !6153
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6153
  ret void, !dbg !6154
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #15 !dbg !6155 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6156
  %2 = or i32 %1, 1024, !dbg !6156
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6156
  ret void, !dbg !6157
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #6 !dbg !6158 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6160, metadata !DIExpression()), !dbg !6161
  ret i32 0, !dbg !6162
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !6163 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6166, metadata !DIExpression()), !dbg !6174
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !6175
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !6175
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !6167, metadata !DIExpression()), !dbg !6176
  call void @llvm.va_start(i8* nonnull %3), !dbg !6177
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !6178
  %5 = load i32, i32* %4, align 4, !dbg !6178
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !6178
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !6178
  call void @llvm.va_end(i8* nonnull %3), !dbg !6179
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !6180
  ret void, !dbg !6180
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !6181 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !6186, metadata !DIExpression()), !dbg !6187
  call void @llvm.dbg.value(metadata i8* %0, metadata !6185, metadata !DIExpression()), !dbg !6187
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #24, !dbg !6188
  ret void, !dbg !6189
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6190 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6194, metadata !DIExpression()), !dbg !6198
  call void @llvm.dbg.value(metadata i8* %1, metadata !6195, metadata !DIExpression()), !dbg !6198
  call void @llvm.dbg.value(metadata i32 %2, metadata !6196, metadata !DIExpression()), !dbg !6198
  call void @llvm.dbg.value(metadata i8* %1, metadata !6197, metadata !DIExpression()), !dbg !6198
  %4 = icmp eq i32 %2, 0, !dbg !6199
  br i1 %4, label %14, label %5, !dbg !6200

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) #25, !dbg !6198
  %7 = zext i8 %6 to i32
  br label %8, !dbg !6200

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !6197, metadata !DIExpression()), !dbg !6198
  call void @llvm.dbg.value(metadata i32 %10, metadata !6196, metadata !DIExpression()), !dbg !6198
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i32 0, i32 0), i32 noundef %7) #24, !dbg !6201
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #25, !dbg !6203
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !6204
  call void @llvm.dbg.value(metadata i32 %11, metadata !6196, metadata !DIExpression()), !dbg !6198
  call void @llvm.dbg.value(metadata i8* %12, metadata !6197, metadata !DIExpression()), !dbg !6198
  br i1 %13, label %14, label %8, !dbg !6204, !llvm.loop !6205

14:                                               ; preds = %8, %3
  ret void, !dbg !6207
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #6 !dbg !6208 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6213, metadata !DIExpression()), !dbg !6214
  %2 = add i32 %0, -1, !dbg !6215
  %3 = icmp ult i32 %2, 4, !dbg !6215
  %4 = shl i32 %2, 3, !dbg !6215
  %5 = lshr i32 1145657157, %4, !dbg !6215
  %6 = trunc i32 %5 to i8, !dbg !6215
  %7 = select i1 %3, i8 %6, i8 63, !dbg !6215
  ret i8 %7, !dbg !6216
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !6217 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6221, metadata !DIExpression()), !dbg !6232
  call void @llvm.dbg.value(metadata i32 %1, metadata !6222, metadata !DIExpression()), !dbg !6232
  call void @llvm.dbg.value(metadata i32 0, metadata !6223, metadata !DIExpression()), !dbg !6233
  br label %4, !dbg !6234

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.23, i32 0, i32 0)) #24, !dbg !6235
  call void @llvm.dbg.value(metadata i32 0, metadata !6225, metadata !DIExpression()), !dbg !6236
  br label %16, !dbg !6237

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !6223, metadata !DIExpression()), !dbg !6233
  %6 = icmp ult i32 %5, %1, !dbg !6238
  br i1 %6, label %7, label %11, !dbg !6242

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !6243
  %9 = load i8, i8* %8, align 1, !dbg !6243
  %10 = zext i8 %9 to i32, !dbg !6245
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.24, i32 0, i32 0), i32 noundef %10) #24, !dbg !6246
  br label %12, !dbg !6247

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.25, i32 0, i32 0)) #24, !dbg !6248
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !6250
  call void @llvm.dbg.value(metadata i32 %13, metadata !6223, metadata !DIExpression()), !dbg !6233
  %14 = icmp eq i32 %13, 8, !dbg !6251
  br i1 %14, label %3, label %4, !dbg !6234, !llvm.loop !6252

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.26, i32 0, i32 0)) #24, !dbg !6254
  ret void, !dbg !6255

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !6225, metadata !DIExpression()), !dbg !6236
  %18 = icmp ult i32 %17, %1, !dbg !6256
  br i1 %18, label %19, label %26, !dbg !6257

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !6258
  %21 = load i8, i8* %20, align 1, !dbg !6258
  call void @llvm.dbg.value(metadata i8 %21, metadata !6227, metadata !DIExpression()), !dbg !6259
  %22 = zext i8 %21 to i32, !dbg !6260
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #25, !dbg !6261
  %24 = icmp eq i32 %23, 0, !dbg !6262
  %25 = select i1 %24, i32 46, i32 %22, !dbg !6261
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.27, i32 0, i32 0), i32 noundef %25) #24, !dbg !6263
  br label %27, !dbg !6264

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.28, i32 0, i32 0)) #24, !dbg !6265
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !6267
  call void @llvm.dbg.value(metadata i32 %28, metadata !6225, metadata !DIExpression()), !dbg !6236
  %29 = icmp eq i32 %28, 8, !dbg !6268
  br i1 %29, label %15, label %16, !dbg !6237, !llvm.loop !6269
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #6 !dbg !6271 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6273, metadata !DIExpression()), !dbg !6274
  %2 = add i32 %0, -32, !dbg !6275
  %3 = icmp ult i32 %2, 95, !dbg !6275
  %4 = zext i1 %3 to i32, !dbg !6275
  ret i32 %4, !dbg !6276
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6277 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6326, metadata !DIExpression()), !dbg !6328
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6327, metadata !DIExpression()), !dbg !6328
  %3 = icmp eq %struct.__esf* %1, null, !dbg !6329
  br i1 %3, label %5, label %4, !dbg !6331

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #25, !dbg !6332
  br label %5, !dbg !6334

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #24, !dbg !6335
  ret void, !dbg !6336
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6337 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6341, metadata !DIExpression()), !dbg !6342
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6343
  %3 = load i32, i32* %2, align 4, !dbg !6343
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !6343
  %5 = load i32, i32* %4, align 4, !dbg !6343
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !6343
  %7 = load i32, i32* %6, align 4, !dbg !6343
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.29, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #24, !dbg !6343
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !6348
  %9 = load i32, i32* %8, align 4, !dbg !6348
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !6348
  %11 = load i32, i32* %10, align 4, !dbg !6348
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !6348
  %13 = load i32, i32* %12, align 4, !dbg !6348
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.30, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #24, !dbg !6348
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !6353
  %15 = load i32, i32* %14, align 4, !dbg !6353
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.31, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #24, !dbg !6353
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6358
  %17 = load i32, i32* %16, align 4, !dbg !6358
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #24, !dbg !6358
  ret void, !dbg !6363
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6364 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6381, metadata !DIExpression()), !dbg !6384
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6382, metadata !DIExpression()), !dbg !6384
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6385
  %4 = load i32, i32* %3, align 4, !dbg !6385
  call void @llvm.dbg.value(metadata i32 %4, metadata !6383, metadata !DIExpression()), !dbg !6384
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #25, !dbg !6386
  ret void, !dbg !6387
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #12 !dbg !6388 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6392, metadata !DIExpression()), !dbg !6395
  call void @llvm.dbg.value(metadata i8* %0, metadata !6393, metadata !DIExpression()), !dbg !6395
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6396
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !6396
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6394, metadata !DIExpression()), !dbg !6397
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6397
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6398
  %5 = bitcast i8* %4 to i32*, !dbg !6398
  %6 = load i32, i32* %5, align 4, !dbg !6398
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6399
  store i32 %6, i32* %7, align 4, !dbg !6400
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #25, !dbg !6401
  unreachable, !dbg !6402
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6403 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6406, metadata !DIExpression()), !dbg !6407
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #25, !dbg !6408
  ret void, !dbg !6409
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6410 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6414, metadata !DIExpression()), !dbg !6415
  %2 = icmp sgt i32 %0, -1, !dbg !6416
  br i1 %2, label %3, label %8, !dbg !6418

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6419, !srcloc !6421
  %4 = and i32 %0, 31, !dbg !6422
  %5 = shl nuw i32 1, %4, !dbg !6423
  %6 = lshr i32 %0, 5, !dbg !6424
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6425
  store volatile i32 %5, i32* %7, align 4, !dbg !6426
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6427, !srcloc !6428
  br label %8, !dbg !6429

8:                                                ; preds = %3, %1
  ret void, !dbg !6430
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6431 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6433, metadata !DIExpression()), !dbg !6434
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #25, !dbg !6435
  ret void, !dbg !6436
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6437 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6439, metadata !DIExpression()), !dbg !6440
  %2 = icmp sgt i32 %0, -1, !dbg !6441
  br i1 %2, label %3, label %8, !dbg !6443

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6444
  %5 = shl nuw i32 1, %4, !dbg !6446
  %6 = lshr i32 %0, 5, !dbg !6447
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6448
  store volatile i32 %5, i32* %7, align 4, !dbg !6449
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6450, !srcloc !6454
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6455, !srcloc !6458
  br label %8, !dbg !6459

8:                                                ; preds = %3, %1
  ret void, !dbg !6460
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #5 !dbg !6461 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6465, metadata !DIExpression()), !dbg !6466
  %2 = lshr i32 %0, 5, !dbg !6467
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6468
  %4 = load volatile i32, i32* %3, align 4, !dbg !6468
  %5 = and i32 %0, 31, !dbg !6469
  %6 = shl nuw i32 1, %5, !dbg !6469
  %7 = and i32 %4, %6, !dbg !6470
  ret i32 %7, !dbg !6471
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6472 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6476, metadata !DIExpression()), !dbg !6479
  call void @llvm.dbg.value(metadata i32 %1, metadata !6477, metadata !DIExpression()), !dbg !6479
  call void @llvm.dbg.value(metadata i32 %2, metadata !6478, metadata !DIExpression()), !dbg !6479
  %4 = add i32 %1, 1, !dbg !6480
  call void @llvm.dbg.value(metadata i32 %4, metadata !6477, metadata !DIExpression()), !dbg !6479
  %5 = icmp ult i32 %4, 16, !dbg !6483
  br i1 %5, label %7, label %6, !dbg !6486

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.33, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.34, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.35, i32 0, i32 0), i32 noundef 94) #24, !dbg !6487
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3.36, i32 0, i32 0), i32 noundef %1, i32 noundef %0, i32 noundef 15) #24, !dbg !6487
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.35, i32 0, i32 0), i32 noundef 94) #24, !dbg !6487
  unreachable, !dbg !6487

7:                                                ; preds = %3
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #25, !dbg !6489
  ret void, !dbg !6490
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !6491 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6495, metadata !DIExpression()), !dbg !6497
  call void @llvm.dbg.value(metadata i32 %1, metadata !6496, metadata !DIExpression()), !dbg !6497
  %3 = trunc i32 %1 to i8, !dbg !6498
  %4 = shl i8 %3, 4, !dbg !6498
  %5 = and i32 %0, 15, !dbg !6500
  %6 = add nsw i32 %5, -4, !dbg !6500
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6500
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6500
  %9 = icmp slt i32 %0, 0, !dbg !6500
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6500
  store volatile i8 %4, i8* %10, align 1, !dbg !6498
  ret void, !dbg !6501
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6502 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6504, metadata !DIExpression()), !dbg !6505
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #24, !dbg !6506
  ret void, !dbg !6507
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6508 {
  tail call void @z_SysNmiOnReset() #24, !dbg !6510
  tail call void @z_arm_int_exit() #24, !dbg !6511
  ret void, !dbg !6512
}

; Function Attrs: optsize
declare !dbg !6513 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6514 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #12 !dbg !6516 {
  tail call fastcc void @relocate_vector_table() #25, !dbg !6518
  tail call fastcc void @z_arm_floating_point_init() #25, !dbg !6519
  tail call void @z_bss_zero() #24, !dbg !6520
  tail call void @z_data_copy() #24, !dbg !6521
  tail call void @z_arm_interrupt_init() #24, !dbg !6522
  tail call void @z_cstart() #27, !dbg !6523
  unreachable, !dbg !6523
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6524 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6525
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6526, !srcloc !6529
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6530, !srcloc !6533
  ret void, !dbg !6534
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6535 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6536
  %2 = and i32 %1, -15728641, !dbg !6536
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6536
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #23, !dbg !6537, !srcloc !6542
  call void @llvm.dbg.value(metadata i32 %3, metadata !6540, metadata !DIExpression()) #23, !dbg !6543
  %4 = and i32 %3, -5, !dbg !6544
  call void @llvm.dbg.value(metadata i32 %4, metadata !6545, metadata !DIExpression()) #23, !dbg !6550
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #23, !dbg !6552, !srcloc !6553
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6554, !srcloc !6533
  ret void, !dbg !6556
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6557 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6560, metadata !DIExpression()), !dbg !6561
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6562
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 8, i32 0, !dbg !6563
  store i32 %0, i32* %3, align 4, !dbg !6564
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6565
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 8, i32 1, !dbg !6566
  store i32 %4, i32* %5, align 4, !dbg !6567
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6568
  %7 = or i32 %6, 268435456, !dbg !6568
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6568
  call void @llvm.dbg.value(metadata i32 0, metadata !6569, metadata !DIExpression()) #23, !dbg !6572
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6574, !srcloc !6575
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6576
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 8, i32 1, !dbg !6577
  %10 = load i32, i32* %9, align 4, !dbg !6577
  ret i32 %10, !dbg !6578
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #9 !dbg !6579 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6692, metadata !DIExpression()), !dbg !6700
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6693, metadata !DIExpression()), !dbg !6700
  call void @llvm.dbg.value(metadata i8* %2, metadata !6694, metadata !DIExpression()), !dbg !6700
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6695, metadata !DIExpression()), !dbg !6700
  call void @llvm.dbg.value(metadata i8* %4, metadata !6696, metadata !DIExpression()), !dbg !6700
  call void @llvm.dbg.value(metadata i8* %5, metadata !6697, metadata !DIExpression()), !dbg !6700
  call void @llvm.dbg.value(metadata i8* %6, metadata !6698, metadata !DIExpression()), !dbg !6700
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6701
  call void @llvm.dbg.value(metadata i8* %8, metadata !6699, metadata !DIExpression()), !dbg !6700
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6702
  %10 = bitcast i8* %9 to i32*, !dbg !6702
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6703
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6704
  %12 = bitcast i8* %8 to i32*, !dbg !6705
  store i32 %11, i32* %12, align 4, !dbg !6706
  %13 = ptrtoint i8* %4 to i32, !dbg !6707
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6708
  %15 = bitcast i8* %14 to i32*, !dbg !6708
  store i32 %13, i32* %15, align 4, !dbg !6709
  %16 = ptrtoint i8* %5 to i32, !dbg !6710
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6711
  %18 = bitcast i8* %17 to i32*, !dbg !6711
  store i32 %16, i32* %18, align 4, !dbg !6712
  %19 = ptrtoint i8* %6 to i32, !dbg !6713
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6714
  %21 = bitcast i8* %20 to i32*, !dbg !6714
  store i32 %19, i32* %21, align 4, !dbg !6715
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6716
  %23 = bitcast i8* %22 to i32*, !dbg !6716
  store i32 16777216, i32* %23, align 4, !dbg !6717
  %24 = ptrtoint i8* %8 to i32, !dbg !6718
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6719
  store i32 %24, i32* %25, align 8, !dbg !6720
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 8, i32 0, !dbg !6721
  store i32 0, i32* %26, align 4, !dbg !6722
  ret void, !dbg !6723
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !6724 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6729, metadata !DIExpression()), !dbg !6735
  call void @llvm.dbg.value(metadata i32 %1, metadata !6730, metadata !DIExpression()), !dbg !6735
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6736
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !6731, metadata !DIExpression()), !dbg !6735
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !6737
  br i1 %4, label %19, label %5, !dbg !6739

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !6734, metadata !DIExpression()), !dbg !6735
  %6 = icmp eq i32 %0, -22, !dbg !6740
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 6, i32 0, !dbg !6740
  %8 = load i32, i32* %7, align 4, !dbg !6740
  br i1 %6, label %16, label %9, !dbg !6742

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !6740
  %11 = icmp ule i32 %10, %0, !dbg !6740
  %12 = icmp ugt i32 %8, %0, !dbg !6740
  %13 = and i1 %12, %11, !dbg !6740
  %14 = icmp ugt i32 %8, %1, !dbg !6740
  %15 = and i1 %14, %13, !dbg !6740
  br i1 %15, label %18, label %19, !dbg !6740

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !6740
  br i1 %17, label %18, label %19, !dbg !6742

18:                                               ; preds = %9, %16
  br label %19, !dbg !6743

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !6735
  ret i32 %20, !dbg !6745
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #12 !dbg !6746 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6750, metadata !DIExpression()), !dbg !6753
  call void @llvm.dbg.value(metadata i8* %1, metadata !6751, metadata !DIExpression()), !dbg !6753
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6752, metadata !DIExpression()), !dbg !6753
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6754
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #24, !dbg !6755
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !6756, !srcloc !6757
  unreachable, !dbg !6758
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6759 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6777, metadata !DIExpression()), !dbg !6787
  call void @llvm.dbg.value(metadata i32 %1, metadata !6778, metadata !DIExpression()), !dbg !6787
  call void @llvm.dbg.value(metadata i32 %2, metadata !6779, metadata !DIExpression()), !dbg !6787
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6780, metadata !DIExpression()), !dbg !6787
  call void @llvm.dbg.value(metadata i32 0, metadata !6781, metadata !DIExpression()), !dbg !6787
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6788
  call void @llvm.dbg.value(metadata i32 %8, metadata !6782, metadata !DIExpression(DW_OP_constu, 511, DW_OP_and, DW_OP_stack_value)), !dbg !6787
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6789
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6789
  %9 = bitcast %struct.__esf* %7 to i8*, !dbg !6790
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6790
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6786, metadata !DIExpression()), !dbg !6791
  call void @llvm.dbg.value(metadata i32 0, metadata !6792, metadata !DIExpression()) #23, !dbg !6795
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6797, !srcloc !6798
  call void @llvm.dbg.value(metadata i8* %6, metadata !6784, metadata !DIExpression(DW_OP_deref)), !dbg !6787
  %10 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #25, !dbg !6799
  call void @llvm.dbg.value(metadata %struct.__esf* %10, metadata !6785, metadata !DIExpression()), !dbg !6787
  %11 = icmp eq %struct.__esf* %10, null, !dbg !6800
  br i1 %11, label %12, label %13, !dbg !6803

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.40, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 1057) #24, !dbg !6804
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3.42, i32 0, i32 0)) #24, !dbg !6804
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 1057) #24, !dbg !6804
  unreachable, !dbg !6804

13:                                               ; preds = %4
  %14 = and i32 %8, 511, !dbg !6806
  call void @llvm.dbg.value(metadata i32 %14, metadata !6782, metadata !DIExpression()), !dbg !6787
  call void @llvm.dbg.value(metadata i8* %5, metadata !6783, metadata !DIExpression(DW_OP_deref)), !dbg !6787
  %15 = call fastcc i32 @fault_handle(%struct.__esf* noundef nonnull %10, i32 noundef %14, i8* noundef nonnull %5) #25, !dbg !6807
  call void @llvm.dbg.value(metadata i32 %15, metadata !6781, metadata !DIExpression()), !dbg !6787
  %16 = load i8, i8* %5, align 1, !dbg !6808, !range !6810
  call void @llvm.dbg.value(metadata i8 %16, metadata !6783, metadata !DIExpression()), !dbg !6787
  %17 = icmp eq i8 %16, 0, !dbg !6808
  br i1 %17, label %18, label %35, !dbg !6811

18:                                               ; preds = %13
  %19 = bitcast %struct.__esf* %10 to i8*, !dbg !6812
  %20 = call i8* @memcpy(i8* noundef nonnull %9, i8* noundef nonnull %19, i32 noundef 32) #24, !dbg !6813
  %21 = load i8, i8* %6, align 1, !dbg !6814, !range !6810
  call void @llvm.dbg.value(metadata i8 %21, metadata !6784, metadata !DIExpression()), !dbg !6787
  %22 = icmp eq i8 %21, 0, !dbg !6814
  %23 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6816
  %24 = load i32, i32* %23, align 4, !dbg !6816
  br i1 %22, label %30, label %25, !dbg !6817

25:                                               ; preds = %18
  %26 = and i32 %24, 511, !dbg !6818
  %27 = icmp eq i32 %26, 0, !dbg !6821
  br i1 %27, label %28, label %34, !dbg !6822

28:                                               ; preds = %25
  %29 = or i32 %24, 511, !dbg !6823
  br label %32, !dbg !6825

30:                                               ; preds = %18
  %31 = and i32 %24, -512, !dbg !6826
  br label %32

32:                                               ; preds = %30, %28
  %33 = phi i32 [ %29, %28 ], [ %31, %30 ]
  store i32 %33, i32* %23, align 4, !dbg !6816
  br label %34, !dbg !6828

34:                                               ; preds = %32, %25
  call void @z_arm_fatal_error(i32 noundef %15, %struct.__esf* noundef nonnull %7) #24, !dbg !6828
  br label %35, !dbg !6829

35:                                               ; preds = %13, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6829
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6829
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6829
  ret void, !dbg !6829
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !6830 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6835, metadata !DIExpression()), !dbg !6841
  call void @llvm.dbg.value(metadata i32 %1, metadata !6836, metadata !DIExpression()), !dbg !6841
  call void @llvm.dbg.value(metadata i32 %2, metadata !6837, metadata !DIExpression()), !dbg !6841
  call void @llvm.dbg.value(metadata i8* %3, metadata !6838, metadata !DIExpression()), !dbg !6841
  call void @llvm.dbg.value(metadata i8 0, metadata !6839, metadata !DIExpression()), !dbg !6841
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6840, metadata !DIExpression()), !dbg !6841
  store i8 0, i8* %3, align 1, !dbg !6842
  %5 = icmp ugt i32 %2, -16777217, !dbg !6843
  br i1 %5, label %6, label %17, !dbg !6845

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !6846
  %8 = icmp eq i32 %7, 8, !dbg !6846
  br i1 %8, label %9, label %10, !dbg !6846

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4.55, i32 0, i32 0), i32 noundef 69) #24, !dbg !6848
  br label %17, !dbg !6854

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !6855
  %12 = icmp eq i32 %11, 0, !dbg !6855
  br i1 %12, label %13, label %14, !dbg !6856

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !6840, metadata !DIExpression()), !dbg !6841
  store i8 1, i8* %3, align 1, !dbg !6859
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !6841
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !6840, metadata !DIExpression()), !dbg !6841
  br label %17, !dbg !6862

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !6841
  ret %struct.__esf* %18, !dbg !6863
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6864 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6868, metadata !DIExpression()), !dbg !6872
  call void @llvm.dbg.value(metadata i32 %1, metadata !6869, metadata !DIExpression()), !dbg !6872
  call void @llvm.dbg.value(metadata i8* %2, metadata !6870, metadata !DIExpression()), !dbg !6872
  call void @llvm.dbg.value(metadata i32 0, metadata !6871, metadata !DIExpression()), !dbg !6872
  store i8 0, i8* %2, align 1, !dbg !6873
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !6874

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #25, !dbg !6875
  call void @llvm.dbg.value(metadata i32 %5, metadata !6871, metadata !DIExpression()), !dbg !6872
  br label %12, !dbg !6877

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #25, !dbg !6878
  call void @llvm.dbg.value(metadata i32 %7, metadata !6871, metadata !DIExpression()), !dbg !6872
  br label %12, !dbg !6879

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #25, !dbg !6880
  call void @llvm.dbg.value(metadata i32 0, metadata !6871, metadata !DIExpression()), !dbg !6872
  br label %12, !dbg !6881

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #25, !dbg !6882
  call void @llvm.dbg.value(metadata i32 0, metadata !6871, metadata !DIExpression()), !dbg !6872
  br label %12, !dbg !6883

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #25, !dbg !6884
  br label %12, !dbg !6885

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #25, !dbg !6886
  br label %12, !dbg !6887

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !6872
  call void @llvm.dbg.value(metadata i32 %13, metadata !6871, metadata !DIExpression()), !dbg !6872
  ret i32 %13, !dbg !6888
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6889 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6893, metadata !DIExpression()), !dbg !6896
  call void @llvm.dbg.value(metadata i8* %1, metadata !6894, metadata !DIExpression()), !dbg !6896
  call void @llvm.dbg.value(metadata i32 0, metadata !6895, metadata !DIExpression()), !dbg !6896
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.47, i32 0, i32 0), i32 noundef 69) #24, !dbg !6897
  store i8 0, i8* %1, align 1, !dbg !6902
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6903
  %4 = and i32 %3, 2, !dbg !6905
  %5 = icmp eq i32 %4, 0, !dbg !6906
  br i1 %5, label %7, label %6, !dbg !6907

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.48, i32 0, i32 0), i32 noundef 69) #24, !dbg !6908
  br label %38, !dbg !6914

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6915
  %9 = icmp sgt i32 %8, -1, !dbg !6917
  br i1 %9, label %11, label %10, !dbg !6918

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.49, i32 0, i32 0), i32 noundef 69) #24, !dbg !6919
  br label %38, !dbg !6925

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6926
  %13 = and i32 %12, 1073741824, !dbg !6928
  %14 = icmp eq i32 %13, 0, !dbg !6929
  br i1 %14, label %37, label %15, !dbg !6930

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.50, i32 0, i32 0), i32 noundef 69) #24, !dbg !6931
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #25, !dbg !6937
  br i1 %16, label %17, label %21, !dbg !6939

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6940
  %19 = load i32, i32* %18, align 4, !dbg !6940
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9.51, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #24, !dbg !6940
  %20 = load i32, i32* %18, align 4, !dbg !6946
  call void @llvm.dbg.value(metadata i32 %20, metadata !6895, metadata !DIExpression()), !dbg !6896
  br label %38, !dbg !6947

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6948
  %23 = and i32 %22, 255, !dbg !6950
  %24 = icmp eq i32 %23, 0, !dbg !6951
  br i1 %24, label %27, label %25, !dbg !6952

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #25, !dbg !6953
  call void @llvm.dbg.value(metadata i32 %26, metadata !6895, metadata !DIExpression()), !dbg !6896
  br label %38, !dbg !6955

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6956
  %29 = and i32 %28, 65280, !dbg !6958
  %30 = icmp eq i32 %29, 0, !dbg !6959
  br i1 %30, label %32, label %31, !dbg !6960

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #25, !dbg !6961
  call void @llvm.dbg.value(metadata i32 0, metadata !6895, metadata !DIExpression()), !dbg !6896
  br label %38, !dbg !6963

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6964
  %34 = icmp ult i32 %33, 65536, !dbg !6966
  br i1 %34, label %36, label %35, !dbg !6967

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #25, !dbg !6968
  call void @llvm.dbg.value(metadata i32 0, metadata !6895, metadata !DIExpression()), !dbg !6896
  br label %38

36:                                               ; preds = %32
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 755) #24, !dbg !6970
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.53, i32 0, i32 0)) #24, !dbg !6970
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 755) #24, !dbg !6970
  unreachable, !dbg !6970

37:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 760) #24, !dbg !6975
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12.54, i32 0, i32 0)) #24, !dbg !6975
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 760) #24, !dbg !6975
  unreachable, !dbg !6975

38:                                               ; preds = %10, %17, %31, %35, %25, %6
  %39 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], !dbg !6896
  call void @llvm.dbg.value(metadata i32 %39, metadata !6895, metadata !DIExpression()), !dbg !6896
  ret i32 %39, !dbg !6980
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !6981 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6983, metadata !DIExpression()), !dbg !6996
  call void @llvm.dbg.value(metadata i32 %1, metadata !6984, metadata !DIExpression()), !dbg !6996
  call void @llvm.dbg.value(metadata i8* %2, metadata !6985, metadata !DIExpression()), !dbg !6996
  call void @llvm.dbg.value(metadata i32 0, metadata !6986, metadata !DIExpression()), !dbg !6996
  call void @llvm.dbg.value(metadata i32 -22, metadata !6987, metadata !DIExpression()), !dbg !6996
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13.46, i32 0, i32 0), i32 noundef 69) #24, !dbg !6997
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7002
  %5 = and i32 %4, 16, !dbg !7004
  %6 = icmp eq i32 %5, 0, !dbg !7005
  br i1 %6, label %8, label %7, !dbg !7006

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.14, i32 0, i32 0), i32 noundef 69) #24, !dbg !7007
  br label %8, !dbg !7013

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7014
  %10 = and i32 %9, 8, !dbg !7016
  %11 = icmp eq i32 %10, 0, !dbg !7017
  br i1 %11, label %13, label %12, !dbg !7018

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #24, !dbg !7019
  br label %13, !dbg !7025

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7026
  %15 = and i32 %14, 2, !dbg !7027
  %16 = icmp eq i32 %15, 0, !dbg !7028
  br i1 %16, label %27, label %17, !dbg !7029

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16, i32 0, i32 0), i32 noundef 69) #24, !dbg !7030
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !7035
  call void @llvm.dbg.value(metadata i32 %18, metadata !6988, metadata !DIExpression()), !dbg !7036
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7037
  %20 = and i32 %19, 128, !dbg !7039
  %21 = icmp eq i32 %20, 0, !dbg !7040
  br i1 %21, label %27, label %22, !dbg !7041

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !6987, metadata !DIExpression()), !dbg !6996
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #24, !dbg !7042
  %23 = icmp eq i32 %1, 0, !dbg !7048
  br i1 %23, label %27, label %24, !dbg !7050

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7051
  %26 = and i32 %25, -129, !dbg !7051
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7051
  br label %27, !dbg !7053

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !6996
  call void @llvm.dbg.value(metadata i32 %28, metadata !6987, metadata !DIExpression()), !dbg !6996
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7054
  %30 = and i32 %29, 1, !dbg !7056
  %31 = icmp eq i32 %30, 0, !dbg !7057
  br i1 %31, label %33, label %32, !dbg !7058

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i32 0, i32 0), i32 noundef 69) #24, !dbg !7059
  br label %33, !dbg !7065

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7066
  %35 = and i32 %34, 32, !dbg !7068
  %36 = icmp eq i32 %35, 0, !dbg !7069
  br i1 %36, label %38, label %37, !dbg !7070

37:                                               ; preds = %33
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), i32 noundef 69) #24, !dbg !7071
  br label %38, !dbg !7077

38:                                               ; preds = %37, %33
  %39 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7078
  %40 = and i32 %39, 16, !dbg !7079
  %41 = icmp eq i32 %40, 0, !dbg !7079
  br i1 %41, label %42, label %46, !dbg !7080

42:                                               ; preds = %38
  %43 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7081
  %44 = and i32 %43, 2, !dbg !7082
  %45 = icmp eq i32 %44, 0, !dbg !7082
  br i1 %45, label %60, label %46, !dbg !7083

46:                                               ; preds = %42, %38
  %47 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7084
  %48 = and i32 %47, 2048, !dbg !7085
  %49 = icmp eq i32 %48, 0, !dbg !7085
  br i1 %49, label %60, label %50, !dbg !7086

50:                                               ; preds = %46
  %51 = ptrtoint %struct.__esf* %0 to i32, !dbg !7087
  %52 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %51) #24, !dbg !7088
  call void @llvm.dbg.value(metadata i32 %52, metadata !6991, metadata !DIExpression()), !dbg !7089
  %53 = icmp eq i32 %52, 0, !dbg !7090
  br i1 %53, label %55, label %54, !dbg !7092

54:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %52, metadata !7093, metadata !DIExpression()) #23, !dbg !7096
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %52) #23, !dbg !7099, !srcloc !7100
  call void @llvm.dbg.value(metadata i32 2, metadata !6986, metadata !DIExpression()), !dbg !6996
  br label %60, !dbg !7101

55:                                               ; preds = %50
  %56 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7102
  %57 = and i32 %56, 16, !dbg !7102
  %58 = icmp eq i32 %57, 0, !dbg !7102
  br i1 %58, label %60, label %59, !dbg !7106

59:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.20, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 343) #24, !dbg !7107
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.21, i32 0, i32 0)) #24, !dbg !7107
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 343) #24, !dbg !7107
  unreachable, !dbg !7107

60:                                               ; preds = %54, %55, %46, %42
  %61 = phi i32 [ 0, %46 ], [ 0, %42 ], [ 2, %54 ], [ 0, %55 ], !dbg !6996
  call void @llvm.dbg.value(metadata i32 %61, metadata !6986, metadata !DIExpression()), !dbg !6996
  %62 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7109
  %63 = and i32 %62, 32, !dbg !7111
  %64 = icmp eq i32 %63, 0, !dbg !7112
  br i1 %64, label %68, label %65, !dbg !7113

65:                                               ; preds = %60
  %66 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7114
  %67 = and i32 %66, -8193, !dbg !7114
  store volatile i32 %67, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7114
  br label %68, !dbg !7116

68:                                               ; preds = %65, %60
  %69 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7117
  %70 = or i32 %69, 255, !dbg !7117
  store volatile i32 %70, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7117
  store i8 0, i8* %2, align 1, !dbg !7118
  ret i32 %61, !dbg !7119
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !7120 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7124, metadata !DIExpression()), !dbg !7131
  call void @llvm.dbg.value(metadata i32 %0, metadata !7125, metadata !DIExpression()), !dbg !7131
  call void @llvm.dbg.value(metadata i8* %1, metadata !7126, metadata !DIExpression()), !dbg !7131
  call void @llvm.dbg.value(metadata i32 0, metadata !7127, metadata !DIExpression()), !dbg !7131
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22.45, i32 0, i32 0), i32 noundef 69) #24, !dbg !7132
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7137
  %4 = and i32 %3, 4096, !dbg !7139
  %5 = icmp eq i32 %4, 0, !dbg !7139
  br i1 %5, label %7, label %6, !dbg !7140

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.23, i32 0, i32 0), i32 noundef 69) #24, !dbg !7141
  br label %7, !dbg !7147

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7148
  %9 = and i32 %8, 2048, !dbg !7150
  %10 = icmp eq i32 %9, 0, !dbg !7150
  br i1 %10, label %12, label %11, !dbg !7151

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #24, !dbg !7152
  br label %12, !dbg !7158

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7159
  %14 = and i32 %13, 512, !dbg !7160
  %15 = icmp eq i32 %14, 0, !dbg !7160
  br i1 %15, label %26, label %16, !dbg !7161

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69) #24, !dbg !7162
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !7167
  call void @llvm.dbg.value(metadata i32 %17, metadata !7128, metadata !DIExpression()), !dbg !7168
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7169
  %19 = and i32 %18, 32768, !dbg !7171
  %20 = icmp eq i32 %19, 0, !dbg !7172
  br i1 %20, label %26, label %21, !dbg !7173

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #24, !dbg !7174
  %22 = icmp eq i32 %0, 0, !dbg !7180
  br i1 %22, label %26, label %23, !dbg !7182

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7183
  %25 = and i32 %24, -32769, !dbg !7183
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7183
  br label %26, !dbg !7185

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7186
  %28 = and i32 %27, 1024, !dbg !7188
  %29 = icmp eq i32 %28, 0, !dbg !7188
  br i1 %29, label %31, label %30, !dbg !7189

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26, i32 0, i32 0), i32 noundef 69) #24, !dbg !7190
  br label %31, !dbg !7196

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7197
  %33 = and i32 %32, 256, !dbg !7199
  %34 = icmp eq i32 %33, 0, !dbg !7200
  br i1 %34, label %35, label %39, !dbg !7201

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7202
  %37 = and i32 %36, 8192, !dbg !7204
  %38 = icmp eq i32 %37, 0, !dbg !7204
  br i1 %38, label %41, label %39, !dbg !7205

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.27, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #24, !dbg !7206
  br label %41, !dbg !7207

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7207
  %43 = or i32 %42, 65280, !dbg !7207
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7207
  store i8 0, i8* %1, align 1, !dbg !7208
  ret void, !dbg !7209
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !7210 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7216, metadata !DIExpression()), !dbg !7218
  call void @llvm.dbg.value(metadata i32 0, metadata !7217, metadata !DIExpression()), !dbg !7218
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i32 0, i32 0), i32 noundef 69) #24, !dbg !7219
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7224
  %2 = and i32 %1, 33554432, !dbg !7226
  %3 = icmp eq i32 %2, 0, !dbg !7227
  br i1 %3, label %5, label %4, !dbg !7228

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.29.43, i32 0, i32 0), i32 noundef 69) #24, !dbg !7229
  br label %5, !dbg !7235

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7236
  %7 = and i32 %6, 16777216, !dbg !7238
  %8 = icmp eq i32 %7, 0, !dbg !7239
  br i1 %8, label %10, label %9, !dbg !7240

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30, i32 0, i32 0), i32 noundef 69) #24, !dbg !7241
  br label %10, !dbg !7247

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7248
  %12 = and i32 %11, 524288, !dbg !7250
  %13 = icmp eq i32 %12, 0, !dbg !7251
  br i1 %13, label %15, label %14, !dbg !7252

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.31, i32 0, i32 0), i32 noundef 69) #24, !dbg !7253
  br label %15, !dbg !7259

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7260
  %17 = and i32 %16, 262144, !dbg !7262
  %18 = icmp eq i32 %17, 0, !dbg !7263
  br i1 %18, label %20, label %19, !dbg !7264

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.32, i32 0, i32 0), i32 noundef 69) #24, !dbg !7265
  br label %20, !dbg !7271

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7272
  %22 = and i32 %21, 131072, !dbg !7274
  %23 = icmp eq i32 %22, 0, !dbg !7275
  br i1 %23, label %25, label %24, !dbg !7276

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.33.44, i32 0, i32 0), i32 noundef 69) #24, !dbg !7277
  br label %25, !dbg !7283

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7284
  %27 = and i32 %26, 65536, !dbg !7286
  %28 = icmp eq i32 %27, 0, !dbg !7287
  br i1 %28, label %30, label %29, !dbg !7288

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.34, i32 0, i32 0), i32 noundef 69) #24, !dbg !7289
  br label %30, !dbg !7295

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7296
  %32 = or i32 %31, -65536, !dbg !7296
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7296
  ret void, !dbg !7297
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !7298 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7302, metadata !DIExpression()), !dbg !7304
  call void @llvm.dbg.value(metadata i8* %0, metadata !7303, metadata !DIExpression()), !dbg !7304
  store i8 0, i8* %0, align 1, !dbg !7305
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.35, i32 0, i32 0), i32 noundef 69) #24, !dbg !7306
  ret void, !dbg !7311
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !7312 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7316, metadata !DIExpression()), !dbg !7318
  call void @llvm.dbg.value(metadata i32 %0, metadata !7317, metadata !DIExpression()), !dbg !7318
  %2 = icmp slt i32 %0, 16, !dbg !7319
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.38, i32 0, i32 0), !dbg !7319
  %4 = add nsw i32 %0, -16, !dbg !7319
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.36, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #24, !dbg !7319
  ret void, !dbg !7324
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7325 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7329, metadata !DIExpression()), !dbg !7332
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7333
  %3 = load i32, i32* %2, align 4, !dbg !7333
  %4 = inttoptr i32 %3 to i16*, !dbg !7334
  call void @llvm.dbg.value(metadata i16* %4, metadata !7330, metadata !DIExpression()), !dbg !7332
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7335
  %6 = or i32 %5, 256, !dbg !7335
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7335
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7336, !srcloc !7339
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7340, !srcloc !7343
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !7344
  %8 = load i16, i16* %7, align 2, !dbg !7345
  call void @llvm.dbg.value(metadata i16 %8, metadata !7331, metadata !DIExpression()), !dbg !7332
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7346
  %10 = and i32 %9, -257, !dbg !7346
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7346
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7347, !srcloc !7339
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7349, !srcloc !7343
  %11 = icmp eq i16 %8, -8446, !dbg !7351
  ret i1 %11, !dbg !7353
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #15 !dbg !7354 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7355
  %2 = or i32 %1, 16, !dbg !7355
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7355
  ret void, !dbg !7356
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #15 !dbg !7357 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7360, metadata !DIExpression()), !dbg !7361
  br label %1, !dbg !7362

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7360, metadata !DIExpression()), !dbg !7361
  tail call fastcc void @__NVIC_SetPriority.58(i32 noundef %2) #25, !dbg !7364
  %3 = add nuw nsw i32 %2, 1, !dbg !7367
  call void @llvm.dbg.value(metadata i32 %3, metadata !7360, metadata !DIExpression()), !dbg !7361
  %4 = icmp eq i32 %3, 91, !dbg !7368
  br i1 %4, label %5, label %1, !dbg !7362, !llvm.loop !7369

5:                                                ; preds = %1
  ret void, !dbg !7371
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.58(i32 noundef %0) unnamed_addr #15 !dbg !7372 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7374, metadata !DIExpression()), !dbg !7376
  call void @llvm.dbg.value(metadata i32 1, metadata !7375, metadata !DIExpression()), !dbg !7376
  %2 = and i32 %0, 15, !dbg !7377
  %3 = add nsw i32 %2, -4, !dbg !7377
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !7377
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7377
  %6 = icmp slt i32 %0, 0, !dbg !7377
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !7377
  store volatile i8 16, i8* %7, align 1, !dbg !7378
  ret void, !dbg !7380
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !7381 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7490, metadata !DIExpression()), !dbg !7491
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7492
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !7494
  br i1 %3, label %4, label %12, !dbg !7495

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !7496, !srcloc !7508
  call void @llvm.dbg.value(metadata i32 %5, metadata !7499, metadata !DIExpression()) #23, !dbg !7509
  %6 = icmp eq i32 %5, 0, !dbg !7510
  br i1 %6, label %12, label %7, !dbg !7511

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7512
  %9 = or i32 %8, 268435456, !dbg !7512
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7512
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7514
  %11 = and i32 %10, -32769, !dbg !7514
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7514
  br label %12, !dbg !7515

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !7516
  ret void, !dbg !7517
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !7518 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #24, !dbg !7519
  ret void, !dbg !7520
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !391 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !499, metadata !DIExpression()), !dbg !7521
  call void @llvm.dbg.value(metadata i8 0, metadata !500, metadata !DIExpression()), !dbg !7521
  call void @llvm.dbg.value(metadata i32 64, metadata !502, metadata !DIExpression()), !dbg !7521
  call void @llvm.dbg.value(metadata i32 undef, metadata !501, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7521
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !7522
  %3 = load i32, i32* %2, align 4, !dbg !7522
  call void @llvm.dbg.value(metadata i32 %3, metadata !501, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7521
  %4 = add i32 %3, -64, !dbg !7524
  call void @llvm.dbg.value(metadata i32 %4, metadata !501, metadata !DIExpression()), !dbg !7521
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !7525
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !7526
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !7527
  call void @llvm.dbg.value(metadata i8 1, metadata !500, metadata !DIExpression()), !dbg !7521
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #24, !dbg !7528
  ret void, !dbg !7529
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !7530 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7531
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7532, !srcloc !7535
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7536, !srcloc !7539
  ret void, !dbg !7540
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !7541 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #23, !dbg !7542, !srcloc !7545
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7546
  ret void, !dbg !7547
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !7548 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7563, metadata !DIExpression()), !dbg !7567
  call void @llvm.dbg.value(metadata i8 %1, metadata !7564, metadata !DIExpression()), !dbg !7567
  call void @llvm.dbg.value(metadata i32 %2, metadata !7565, metadata !DIExpression()), !dbg !7567
  call void @llvm.dbg.value(metadata i32 %3, metadata !7566, metadata !DIExpression()), !dbg !7567
  %5 = tail call fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #25, !dbg !7568
  %6 = icmp eq i32 %5, -22, !dbg !7570
  br i1 %6, label %7, label %9, !dbg !7571

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 283) #24, !dbg !7572
  %8 = zext i8 %1 to i32, !dbg !7572
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3.70, i32 0, i32 0), i32 noundef %8) #24, !dbg !7572
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 283) #24, !dbg !7572
  unreachable, !dbg !7572

9:                                                ; preds = %4
  ret void, !dbg !7577
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !7578 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7583, metadata !DIExpression()), !dbg !7588
  call void @llvm.dbg.value(metadata i8 %1, metadata !7584, metadata !DIExpression()), !dbg !7588
  call void @llvm.dbg.value(metadata i32 undef, metadata !7585, metadata !DIExpression()), !dbg !7588
  call void @llvm.dbg.value(metadata i32 undef, metadata !7586, metadata !DIExpression()), !dbg !7588
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7589
  call void @llvm.dbg.value(metadata i8 %3, metadata !7587, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7588
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #25, !dbg !7590
  call void @llvm.dbg.value(metadata i32 %4, metadata !7587, metadata !DIExpression()), !dbg !7588
  %5 = trunc i32 %4 to i8, !dbg !7591
  store i8 %5, i8* @static_regions_num, align 1, !dbg !7592
  ret i32 %4, !dbg !7593
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !7594 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7598, metadata !DIExpression()), !dbg !7604
  call void @llvm.dbg.value(metadata i8 %1, metadata !7599, metadata !DIExpression()), !dbg !7604
  call void @llvm.dbg.value(metadata i8 %2, metadata !7600, metadata !DIExpression()), !dbg !7604
  call void @llvm.dbg.value(metadata i1 %3, metadata !7601, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7604
  %5 = zext i8 %2 to i32, !dbg !7605
  call void @llvm.dbg.value(metadata i32 %5, metadata !7603, metadata !DIExpression()), !dbg !7604
  call void @llvm.dbg.value(metadata i32 0, metadata !7602, metadata !DIExpression()), !dbg !7604
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !7603, metadata !DIExpression()), !dbg !7604
  call void @llvm.dbg.value(metadata i32 0, metadata !7602, metadata !DIExpression()), !dbg !7604
  %7 = icmp eq i8 %1, 0, !dbg !7606
  br i1 %7, label %30, label %8, !dbg !7609

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7603, metadata !DIExpression()), !dbg !7604
  call void @llvm.dbg.value(metadata i32 %10, metadata !7602, metadata !DIExpression()), !dbg !7604
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !7610
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !7613
  %13 = load i32, i32* %12, align 4, !dbg !7613
  %14 = icmp eq i32 %13, 0, !dbg !7614
  br i1 %14, label %26, label %15, !dbg !7615

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !7616

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #25, !dbg !7618
  %18 = icmp eq i32 %17, 0, !dbg !7618
  br i1 %18, label %19, label %20, !dbg !7619

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.71, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #24, !dbg !7620
  br label %30, !dbg !7626

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !7627
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #25, !dbg !7628
  call void @llvm.dbg.value(metadata i32 %22, metadata !7603, metadata !DIExpression()), !dbg !7604
  %23 = icmp eq i32 %22, -22, !dbg !7629
  br i1 %23, label %30, label %24, !dbg !7631

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !7632
  call void @llvm.dbg.value(metadata i32 %25, metadata !7603, metadata !DIExpression()), !dbg !7604
  br label %26, !dbg !7633

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !7604
  call void @llvm.dbg.value(metadata i32 %27, metadata !7603, metadata !DIExpression()), !dbg !7604
  %28 = add nuw nsw i32 %10, 1, !dbg !7634
  call void @llvm.dbg.value(metadata i32 %28, metadata !7602, metadata !DIExpression()), !dbg !7604
  %29 = icmp eq i32 %28, %6, !dbg !7606
  br i1 %29, label %30, label %8, !dbg !7609, !llvm.loop !7635

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !7604
  ret i32 %31, !dbg !7637
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #16 !dbg !7638 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7642, metadata !DIExpression()), !dbg !7644
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !7645
  %3 = load i32, i32* %2, align 4, !dbg !7645
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !7646, !range !7647
  %5 = icmp ult i32 %4, 2, !dbg !7646
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !7648
  br i1 %7, label %8, label %15, !dbg !7648

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !7649
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !7650
  %11 = load i32, i32* %10, align 4, !dbg !7650
  %12 = and i32 %11, %9, !dbg !7651
  %13 = icmp eq i32 %12, 0, !dbg !7652
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7643, metadata !DIExpression()), !dbg !7644
  ret i32 %16, !dbg !7653
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7654 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !7658, metadata !DIExpression()), !dbg !7661
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !7659, metadata !DIExpression()), !dbg !7661
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !7662
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7662
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !7660, metadata !DIExpression()), !dbg !7663
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !7664
  %6 = load i32, i32* %5, align 4, !dbg !7664
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !7665
  store i32 %6, i32* %7, align 4, !dbg !7666
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !7667
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !7668
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !7669
  %11 = load i32, i32* %10, align 4, !dbg !7669
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* noundef nonnull %8, %struct.k_spinlock* noundef nonnull %9, i32 noundef %11) #25, !dbg !7670
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #25, !dbg !7671
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7672
  ret i32 %12, !dbg !7673
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* nocapture noundef writeonly %0, %struct.k_spinlock* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #17 !dbg !7674 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !7681, metadata !DIExpression()), !dbg !7685
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !7682, metadata !DIExpression()), !dbg !7685
  call void @llvm.dbg.value(metadata i32 undef, metadata !7683, metadata !DIExpression()), !dbg !7685
  call void @llvm.dbg.value(metadata i32 %2, metadata !7684, metadata !DIExpression()), !dbg !7685
  %4 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %1, i32 0, i32 0, !dbg !7686
  %5 = load i32, i32* %4, align 4, !dbg !7686
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #25, !dbg !7687
  %7 = or i32 %6, %5, !dbg !7688
  %8 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !7689
  store i32 %7, i32* %8, align 4, !dbg !7690
  ret void, !dbg !7691
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7692 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7696, metadata !DIExpression()), !dbg !7698
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7697, metadata !DIExpression()), !dbg !7698
  %3 = zext i8 %0 to i32, !dbg !7699
  %4 = icmp ugt i8 %0, 7, !dbg !7701
  br i1 %4, label %5, label %6, !dbg !7702

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.9.72, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #24, !dbg !7703
  br label %7, !dbg !7709

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #25, !dbg !7710
  br label %7, !dbg !7711

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !7698
  ret i32 %8, !dbg !7712
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7713 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7717, metadata !DIExpression()), !dbg !7719
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7718, metadata !DIExpression()), !dbg !7719
  tail call fastcc void @set_region_number(i32 noundef %0) #25, !dbg !7720
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7721
  %4 = load i32, i32* %3, align 4, !dbg !7721
  %5 = and i32 %4, -32, !dbg !7722
  %6 = or i32 %5, %0, !dbg !7723
  %7 = or i32 %6, 16, !dbg !7723
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7724
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7725
  %9 = load i32, i32* %8, align 4, !dbg !7725
  %10 = or i32 %9, 1, !dbg !7726
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7727
  ret void, !dbg !7728
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #15 !dbg !7729 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7732, metadata !DIExpression()), !dbg !7733
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7734
  ret void, !dbg !7735
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #13 !dbg !7736 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7740, metadata !DIExpression()), !dbg !7741
  %2 = icmp ult i32 %0, 33, !dbg !7742
  br i1 %2, label %11, label %3, !dbg !7744

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7745
  br i1 %4, label %11, label %5, !dbg !7747

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7748
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7749, !range !7647
  %8 = mul nsw i32 %7, -2, !dbg !7750
  %9 = add nsw i32 %8, 62, !dbg !7750
  %10 = and i32 %9, 62, !dbg !7751
  br label %11, !dbg !7752

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7741
  ret i32 %12, !dbg !7753
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !7754 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7758, metadata !DIExpression()), !dbg !7760
  call void @llvm.dbg.value(metadata i8 %1, metadata !7759, metadata !DIExpression()), !dbg !7760
  %3 = tail call fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #25, !dbg !7761
  %4 = icmp eq i32 %3, -22, !dbg !7763
  br i1 %4, label %5, label %7, !dbg !7764

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 314) #24, !dbg !7765
  %6 = zext i8 %1 to i32, !dbg !7765
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4.75, i32 0, i32 0), i32 noundef %6) #24, !dbg !7765
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 314) #24, !dbg !7765
  unreachable, !dbg !7765

7:                                                ; preds = %2
  ret void, !dbg !7770
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !7771 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7775, metadata !DIExpression()), !dbg !7782
  call void @llvm.dbg.value(metadata i8 %1, metadata !7776, metadata !DIExpression()), !dbg !7782
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7783
  call void @llvm.dbg.value(metadata i8 %3, metadata !7777, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7782
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #25, !dbg !7784
  call void @llvm.dbg.value(metadata i32 %4, metadata !7777, metadata !DIExpression()), !dbg !7782
  %5 = icmp ne i32 %4, -22, !dbg !7785
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7786
  call void @llvm.dbg.value(metadata i32 %4, metadata !7778, metadata !DIExpression()), !dbg !7787
  br i1 %7, label %8, label %12, !dbg !7786

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7778, metadata !DIExpression()), !dbg !7787
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #25, !dbg !7788
  %10 = add i32 %9, 1, !dbg !7791
  call void @llvm.dbg.value(metadata i32 %10, metadata !7778, metadata !DIExpression()), !dbg !7787
  %11 = icmp eq i32 %10, 8, !dbg !7792
  br i1 %11, label %12, label %8, !dbg !7793, !llvm.loop !7794

12:                                               ; preds = %8, %2
  ret i32 %4, !dbg !7796
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #15 !dbg !7797 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7800, metadata !DIExpression()), !dbg !7801
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7802
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7803
  ret void, !dbg !7804
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7805 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7810
  %2 = icmp ugt i32 %1, 8, !dbg !7812
  br i1 %2, label %3, label %4, !dbg !7813

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 341) #24, !dbg !7814
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5.76, i32 0, i32 0), i32 noundef %1, i32 noundef 8) #24, !dbg !7814
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 341) #24, !dbg !7814
  unreachable, !dbg !7814

4:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #25, !dbg !7819
  call void @llvm.dbg.value(metadata i32 0, metadata !7809, metadata !DIExpression()), !dbg !7820
  %5 = icmp eq i32 %1, 0, !dbg !7821
  br i1 %5, label %13, label %6, !dbg !7824

6:                                                ; preds = %4
  %7 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %8, !dbg !7824

8:                                                ; preds = %6, %8
  %9 = phi i32 [ 0, %6 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7809, metadata !DIExpression()), !dbg !7820
  %10 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %7, i32 %9, !dbg !7825
  tail call fastcc void @region_init(i32 noundef %9, %struct.arm_mpu_region* noundef %10) #25, !dbg !7827
  %11 = add nuw i32 %9, 1, !dbg !7828
  call void @llvm.dbg.value(metadata i32 %11, metadata !7809, metadata !DIExpression()), !dbg !7820
  %12 = icmp eq i32 %11, %1, !dbg !7821
  br i1 %12, label %13, label %8, !dbg !7824, !llvm.loop !7829

13:                                               ; preds = %8, %4
  %14 = trunc i32 %1 to i8, !dbg !7831
  store i8 %14, i8* @static_regions_num, align 1, !dbg !7832
  tail call void @arm_core_mpu_enable() #25, !dbg !7833
  %15 = load volatile i32, i32* inttoptr (i32 -536810096 to i32*), align 16, !dbg !7834
  %16 = and i32 %15, 65280, !dbg !7834
  %17 = icmp eq i32 %16, 2048, !dbg !7834
  br i1 %17, label %19, label %18, !dbg !7837

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.6.77, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 435) #24, !dbg !7838
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.78, i32 0, i32 0)) #24, !dbg !7838
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 435) #24, !dbg !7838
  unreachable, !dbg !7838

19:                                               ; preds = %13
  ret i32 0, !dbg !7840
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !7841 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7848, metadata !DIExpression()), !dbg !7851
  call void @llvm.dbg.value(metadata i8* %1, metadata !7849, metadata !DIExpression()), !dbg !7851
  call void @llvm.dbg.value(metadata i8* %0, metadata !7850, metadata !DIExpression()), !dbg !7851
  %3 = load i8, i8* %1, align 1, !dbg !7852
  %4 = icmp eq i8 %3, 0, !dbg !7853
  br i1 %4, label %13, label %5, !dbg !7854

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7848, metadata !DIExpression()), !dbg !7851
  call void @llvm.dbg.value(metadata i8* %8, metadata !7849, metadata !DIExpression()), !dbg !7851
  store i8 %6, i8* %7, align 1, !dbg !7855
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7857
  call void @llvm.dbg.value(metadata i8* %9, metadata !7848, metadata !DIExpression()), !dbg !7851
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7858
  call void @llvm.dbg.value(metadata i8* %10, metadata !7849, metadata !DIExpression()), !dbg !7851
  %11 = load i8, i8* %10, align 1, !dbg !7852
  %12 = icmp eq i8 %11, 0, !dbg !7853
  br i1 %12, label %13, label %5, !dbg !7854, !llvm.loop !7859

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7861
  ret i8* %0, !dbg !7862
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7863 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7867, metadata !DIExpression()), !dbg !7871
  call void @llvm.dbg.value(metadata i8* %1, metadata !7868, metadata !DIExpression()), !dbg !7871
  call void @llvm.dbg.value(metadata i32 %2, metadata !7869, metadata !DIExpression()), !dbg !7871
  call void @llvm.dbg.value(metadata i8* %0, metadata !7870, metadata !DIExpression()), !dbg !7871
  %4 = icmp eq i32 %2, 0, !dbg !7872
  br i1 %4, label %22, label %5, !dbg !7873

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7867, metadata !DIExpression()), !dbg !7871
  call void @llvm.dbg.value(metadata i32 %7, metadata !7869, metadata !DIExpression()), !dbg !7871
  call void @llvm.dbg.value(metadata i8* %8, metadata !7868, metadata !DIExpression()), !dbg !7871
  %9 = load i8, i8* %8, align 1, !dbg !7874
  %10 = icmp eq i8 %9, 0, !dbg !7875
  br i1 %10, label %16, label %11, !dbg !7876

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7877
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7879
  call void @llvm.dbg.value(metadata i8* %12, metadata !7868, metadata !DIExpression()), !dbg !7871
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7880
  call void @llvm.dbg.value(metadata i8* %13, metadata !7867, metadata !DIExpression()), !dbg !7871
  %14 = add i32 %7, -1, !dbg !7881
  call void @llvm.dbg.value(metadata i32 %14, metadata !7869, metadata !DIExpression()), !dbg !7871
  %15 = icmp eq i32 %14, 0, !dbg !7872
  br i1 %15, label %22, label %5, !dbg !7873, !llvm.loop !7882

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7867, metadata !DIExpression()), !dbg !7871
  call void @llvm.dbg.value(metadata i32 %18, metadata !7869, metadata !DIExpression()), !dbg !7871
  store i8 0, i8* %17, align 1, !dbg !7884
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7886
  call void @llvm.dbg.value(metadata i8* %19, metadata !7867, metadata !DIExpression()), !dbg !7871
  %20 = add i32 %18, -1, !dbg !7887
  call void @llvm.dbg.value(metadata i32 %20, metadata !7869, metadata !DIExpression()), !dbg !7871
  %21 = icmp eq i32 %20, 0, !dbg !7888
  br i1 %21, label %22, label %16, !dbg !7889, !llvm.loop !7890

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7892
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !7893 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7897, metadata !DIExpression()), !dbg !7900
  call void @llvm.dbg.value(metadata i32 %1, metadata !7898, metadata !DIExpression()), !dbg !7900
  call void @llvm.dbg.value(metadata i32 %1, metadata !7899, metadata !DIExpression()), !dbg !7900
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7901

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7897, metadata !DIExpression()), !dbg !7900
  %6 = load i8, i8* %5, align 1, !dbg !7902
  %7 = icmp eq i8 %6, %3, !dbg !7903
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7904
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7905
  call void @llvm.dbg.value(metadata i8* %10, metadata !7897, metadata !DIExpression()), !dbg !7900
  br i1 %9, label %11, label %4, !dbg !7904, !llvm.loop !7907

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7909
  ret i8* %12, !dbg !7910
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !7911 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7913, metadata !DIExpression()), !dbg !7916
  call void @llvm.dbg.value(metadata i32 %1, metadata !7914, metadata !DIExpression()), !dbg !7916
  call void @llvm.dbg.value(metadata i8* null, metadata !7915, metadata !DIExpression()), !dbg !7916
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7917

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7916
  call void @llvm.dbg.value(metadata i8* %6, metadata !7915, metadata !DIExpression()), !dbg !7916
  call void @llvm.dbg.value(metadata i8* %5, metadata !7913, metadata !DIExpression()), !dbg !7916
  %7 = load i8, i8* %5, align 1, !dbg !7918
  %8 = icmp eq i8 %7, %3, !dbg !7921
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7922
  call void @llvm.dbg.value(metadata i8* %9, metadata !7915, metadata !DIExpression()), !dbg !7916
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7923
  call void @llvm.dbg.value(metadata i8* %10, metadata !7913, metadata !DIExpression()), !dbg !7916
  %11 = icmp eq i8 %7, 0, !dbg !7924
  br i1 %11, label %12, label %4, !dbg !7924, !llvm.loop !7925

12:                                               ; preds = %4
  ret i8* %9, !dbg !7927
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !7928 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7932, metadata !DIExpression()), !dbg !7934
  call void @llvm.dbg.value(metadata i32 0, metadata !7933, metadata !DIExpression()), !dbg !7934
  %2 = load i8, i8* %0, align 1, !dbg !7935
  %3 = icmp eq i8 %2, 0, !dbg !7936
  br i1 %3, label %11, label %4, !dbg !7937

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7933, metadata !DIExpression()), !dbg !7934
  call void @llvm.dbg.value(metadata i8* %6, metadata !7932, metadata !DIExpression()), !dbg !7934
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7938
  call void @llvm.dbg.value(metadata i8* %7, metadata !7932, metadata !DIExpression()), !dbg !7934
  %8 = add i32 %5, 1, !dbg !7940
  call void @llvm.dbg.value(metadata i32 %8, metadata !7933, metadata !DIExpression()), !dbg !7934
  %9 = load i8, i8* %7, align 1, !dbg !7935
  %10 = icmp eq i8 %9, 0, !dbg !7936
  br i1 %10, label %11, label %4, !dbg !7937, !llvm.loop !7941

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7934
  ret i32 %12, !dbg !7943
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !7944 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7948, metadata !DIExpression()), !dbg !7951
  call void @llvm.dbg.value(metadata i32 %1, metadata !7949, metadata !DIExpression()), !dbg !7951
  call void @llvm.dbg.value(metadata i32 0, metadata !7950, metadata !DIExpression()), !dbg !7951
  %3 = load i8, i8* %0, align 1, !dbg !7952
  %4 = icmp ne i8 %3, 0, !dbg !7953
  %5 = icmp ne i32 %1, 0, !dbg !7954
  %6 = and i1 %4, %5, !dbg !7954
  br i1 %6, label %7, label %16, !dbg !7955

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7950, metadata !DIExpression()), !dbg !7951
  call void @llvm.dbg.value(metadata i8* %9, metadata !7948, metadata !DIExpression()), !dbg !7951
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7956
  call void @llvm.dbg.value(metadata i8* %10, metadata !7948, metadata !DIExpression()), !dbg !7951
  %11 = add nuw i32 %8, 1, !dbg !7958
  call void @llvm.dbg.value(metadata i32 %11, metadata !7950, metadata !DIExpression()), !dbg !7951
  %12 = load i8, i8* %10, align 1, !dbg !7952
  %13 = icmp ne i8 %12, 0, !dbg !7953
  %14 = icmp ult i32 %11, %1, !dbg !7954
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7954
  br i1 %15, label %7, label %16, !dbg !7955, !llvm.loop !7959

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7951
  ret i32 %17, !dbg !7961
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !7962 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7966, metadata !DIExpression()), !dbg !7968
  call void @llvm.dbg.value(metadata i8* %1, metadata !7967, metadata !DIExpression()), !dbg !7968
  %3 = load i8, i8* %0, align 1, !dbg !7969
  %4 = load i8, i8* %1, align 1, !dbg !7970
  %5 = icmp ne i8 %3, %4, !dbg !7971
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !7972
  br i1 %7, label %18, label %8, !dbg !7972

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7967, metadata !DIExpression()), !dbg !7968
  call void @llvm.dbg.value(metadata i8* %10, metadata !7966, metadata !DIExpression()), !dbg !7968
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7973
  call void @llvm.dbg.value(metadata i8* %11, metadata !7966, metadata !DIExpression()), !dbg !7968
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7975
  call void @llvm.dbg.value(metadata i8* %12, metadata !7967, metadata !DIExpression()), !dbg !7968
  %13 = load i8, i8* %11, align 1, !dbg !7969
  %14 = load i8, i8* %12, align 1, !dbg !7970
  %15 = icmp ne i8 %13, %14, !dbg !7971
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !7972
  br i1 %17, label %18, label %8, !dbg !7972, !llvm.loop !7976

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !7969
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !7970
  %21 = zext i8 %19 to i32, !dbg !7979
  %22 = zext i8 %20 to i32, !dbg !7980
  %23 = sub nsw i32 %21, %22, !dbg !7981
  ret i32 %23, !dbg !7982
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #8 !dbg !7983 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7987, metadata !DIExpression()), !dbg !7990
  call void @llvm.dbg.value(metadata i8* %1, metadata !7988, metadata !DIExpression()), !dbg !7990
  call void @llvm.dbg.value(metadata i32 %2, metadata !7989, metadata !DIExpression()), !dbg !7990
  %4 = icmp eq i32 %2, 0, !dbg !7991
  br i1 %4, label %23, label %5, !dbg !7991

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7989, metadata !DIExpression()), !dbg !7990
  call void @llvm.dbg.value(metadata i8* %7, metadata !7988, metadata !DIExpression()), !dbg !7990
  call void @llvm.dbg.value(metadata i8* %8, metadata !7987, metadata !DIExpression()), !dbg !7990
  %9 = load i8, i8* %8, align 1, !dbg !7992
  %10 = load i8, i8* %7, align 1, !dbg !7993
  %11 = icmp ne i8 %9, %10, !dbg !7994
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !7995
  br i1 %13, label %19, label %14, !dbg !7995

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7996
  call void @llvm.dbg.value(metadata i8* %15, metadata !7987, metadata !DIExpression()), !dbg !7990
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7998
  call void @llvm.dbg.value(metadata i8* %16, metadata !7988, metadata !DIExpression()), !dbg !7990
  %17 = add i32 %6, -1, !dbg !7999
  call void @llvm.dbg.value(metadata i32 %17, metadata !7989, metadata !DIExpression()), !dbg !7990
  %18 = icmp eq i32 %17, 0, !dbg !7991
  br i1 %18, label %23, label %5, !dbg !7991, !llvm.loop !8000

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !8003
  %21 = zext i8 %10 to i32, !dbg !8004
  %22 = sub nsw i32 %20, %21, !dbg !8005
  br label %23, !dbg !8006

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !8006
  ret i32 %24, !dbg !8007
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #14 !dbg !8008 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8012, metadata !DIExpression()), !dbg !8017
  call void @llvm.dbg.value(metadata i8* %1, metadata !8013, metadata !DIExpression()), !dbg !8017
  call void @llvm.dbg.value(metadata i8** %2, metadata !8014, metadata !DIExpression()), !dbg !8017
  %4 = icmp eq i8* %0, null, !dbg !8018
  br i1 %4, label %5, label %7, !dbg !8018

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !8019
  br label %7, !dbg !8018

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !8018
  call void @llvm.dbg.value(metadata i8* %8, metadata !8015, metadata !DIExpression()), !dbg !8017
  %9 = load i8, i8* %8, align 1, !dbg !8020
  %10 = icmp eq i8 %9, 0, !dbg !8020
  br i1 %10, label %33, label %11, !dbg !8021

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8015, metadata !DIExpression()), !dbg !8017
  %14 = zext i8 %12 to i32, !dbg !8020
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #25, !dbg !8022
  %16 = icmp eq i8* %15, null, !dbg !8021
  br i1 %16, label %21, label %17, !dbg !8023

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8024
  call void @llvm.dbg.value(metadata i8* %18, metadata !8015, metadata !DIExpression()), !dbg !8017
  %19 = load i8, i8* %18, align 1, !dbg !8020
  %20 = icmp eq i8 %19, 0, !dbg !8020
  br i1 %20, label %33, label %11, !dbg !8021, !llvm.loop !8026

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !8016, metadata !DIExpression()), !dbg !8017
  %24 = zext i8 %22 to i32, !dbg !8028
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #25, !dbg !8029
  %26 = icmp eq i8* %25, null, !dbg !8030
  br i1 %26, label %27, label %31, !dbg !8031

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8032
  call void @llvm.dbg.value(metadata i8* %28, metadata !8016, metadata !DIExpression()), !dbg !8017
  %29 = load i8, i8* %28, align 1, !dbg !8028
  %30 = icmp eq i8 %29, 0, !dbg !8028
  br i1 %30, label %33, label %21, !dbg !8034, !llvm.loop !8035

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !8037
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8040
  br label %33, !dbg !8041

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !8017
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !8017
  store i8* %34, i8** %2, align 4, !dbg !8017
  ret i8* %35, !dbg !8042
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !8043 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8045, metadata !DIExpression()), !dbg !8047
  call void @llvm.dbg.value(metadata i8* %1, metadata !8046, metadata !DIExpression()), !dbg !8047
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !8048
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !8049
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #25, !dbg !8050
  ret i8* %0, !dbg !8051
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8052 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8054, metadata !DIExpression()), !dbg !8059
  call void @llvm.dbg.value(metadata i8* %1, metadata !8055, metadata !DIExpression()), !dbg !8059
  call void @llvm.dbg.value(metadata i32 %2, metadata !8056, metadata !DIExpression()), !dbg !8059
  call void @llvm.dbg.value(metadata i8* %0, metadata !8057, metadata !DIExpression()), !dbg !8059
  %4 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !8060
  call void @llvm.dbg.value(metadata i32 %4, metadata !8058, metadata !DIExpression()), !dbg !8059
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !8061
  call void @llvm.dbg.value(metadata i8* %5, metadata !8054, metadata !DIExpression()), !dbg !8059
  call void @llvm.dbg.value(metadata i8* %1, metadata !8055, metadata !DIExpression()), !dbg !8059
  call void @llvm.dbg.value(metadata i32 %2, metadata !8056, metadata !DIExpression()), !dbg !8059
  call void @llvm.dbg.value(metadata i32 %2, metadata !8056, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8059
  %6 = icmp eq i32 %2, 0, !dbg !8062
  br i1 %6, label %18, label %7, !dbg !8063

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !8064
  call void @llvm.dbg.value(metadata i8* %9, metadata !8054, metadata !DIExpression()), !dbg !8059
  call void @llvm.dbg.value(metadata i8* %10, metadata !8055, metadata !DIExpression()), !dbg !8059
  %12 = load i8, i8* %10, align 1, !dbg !8065
  %13 = icmp eq i8 %12, 0, !dbg !8066
  br i1 %13, label %18, label %14, !dbg !8067

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8068
  call void @llvm.dbg.value(metadata i8* %15, metadata !8055, metadata !DIExpression()), !dbg !8059
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8070
  call void @llvm.dbg.value(metadata i8* %16, metadata !8054, metadata !DIExpression()), !dbg !8059
  store i8 %12, i8* %9, align 1, !dbg !8071
  call void @llvm.dbg.value(metadata i32 %11, metadata !8056, metadata !DIExpression()), !dbg !8059
  call void @llvm.dbg.value(metadata i32 %11, metadata !8056, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8059
  %17 = icmp eq i32 %11, 0, !dbg !8062
  br i1 %17, label %18, label %7, !dbg !8063, !llvm.loop !8072

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !8059
  store i8 0, i8* %19, align 1, !dbg !8074
  ret i8* %0, !dbg !8075
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #8 !dbg !8076 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8080, metadata !DIExpression()), !dbg !8085
  call void @llvm.dbg.value(metadata i8* %1, metadata !8081, metadata !DIExpression()), !dbg !8085
  call void @llvm.dbg.value(metadata i32 %2, metadata !8082, metadata !DIExpression()), !dbg !8085
  call void @llvm.dbg.value(metadata i8* %0, metadata !8083, metadata !DIExpression()), !dbg !8085
  call void @llvm.dbg.value(metadata i8* %1, metadata !8084, metadata !DIExpression()), !dbg !8085
  %4 = icmp eq i32 %2, 0, !dbg !8086
  br i1 %4, label %31, label %5, !dbg !8088

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8084, metadata !DIExpression()), !dbg !8085
  call void @llvm.dbg.value(metadata i8* %0, metadata !8083, metadata !DIExpression()), !dbg !8085
  call void @llvm.dbg.value(metadata i32 %2, metadata !8082, metadata !DIExpression()), !dbg !8085
  %6 = add i32 %2, -1, !dbg !8089
  call void @llvm.dbg.value(metadata i32 %6, metadata !8082, metadata !DIExpression()), !dbg !8085
  %7 = icmp eq i32 %6, 0, !dbg !8090
  br i1 %7, label %23, label %8, !dbg !8091

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !8092
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !8092
  br label %11, !dbg !8092

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8084, metadata !DIExpression()), !dbg !8085
  call void @llvm.dbg.value(metadata i8* %14, metadata !8083, metadata !DIExpression()), !dbg !8085
  %15 = load i8, i8* %14, align 1, !dbg !8093
  %16 = load i8, i8* %13, align 1, !dbg !8094
  %17 = icmp eq i8 %15, %16, !dbg !8095
  br i1 %17, label %18, label %23, !dbg !8092

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !8096
  call void @llvm.dbg.value(metadata i8* %19, metadata !8083, metadata !DIExpression()), !dbg !8085
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8098
  call void @llvm.dbg.value(metadata i8* %20, metadata !8084, metadata !DIExpression()), !dbg !8085
  call void @llvm.dbg.value(metadata i32 %12, metadata !8082, metadata !DIExpression()), !dbg !8085
  %21 = add i32 %12, -1, !dbg !8089
  call void @llvm.dbg.value(metadata i32 %21, metadata !8082, metadata !DIExpression()), !dbg !8085
  %22 = icmp eq i32 %21, 0, !dbg !8090
  br i1 %22, label %23, label %11, !dbg !8091, !llvm.loop !8099

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !8085
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !8085
  %26 = load i8, i8* %24, align 1, !dbg !8101
  %27 = zext i8 %26 to i32, !dbg !8101
  %28 = load i8, i8* %25, align 1, !dbg !8102
  %29 = zext i8 %28 to i32, !dbg !8102
  %30 = sub nsw i32 %27, %29, !dbg !8103
  br label %31, !dbg !8104

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !8085
  ret i32 %32, !dbg !8105
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8106 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8110, metadata !DIExpression()), !dbg !8115
  call void @llvm.dbg.value(metadata i8* %1, metadata !8111, metadata !DIExpression()), !dbg !8115
  call void @llvm.dbg.value(metadata i32 %2, metadata !8112, metadata !DIExpression()), !dbg !8115
  call void @llvm.dbg.value(metadata i8* %0, metadata !8113, metadata !DIExpression()), !dbg !8115
  call void @llvm.dbg.value(metadata i8* %1, metadata !8114, metadata !DIExpression()), !dbg !8115
  %4 = ptrtoint i8* %0 to i32, !dbg !8116
  %5 = ptrtoint i8* %1 to i32, !dbg !8116
  %6 = sub i32 %4, %5, !dbg !8116
  %7 = icmp ult i32 %6, %2, !dbg !8118
  br i1 %7, label %10, label %8, !dbg !8119

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8114, metadata !DIExpression()), !dbg !8115
  call void @llvm.dbg.value(metadata i8* %0, metadata !8113, metadata !DIExpression()), !dbg !8115
  call void @llvm.dbg.value(metadata i32 %2, metadata !8112, metadata !DIExpression()), !dbg !8115
  %9 = icmp eq i32 %2, 0, !dbg !8120
  br i1 %9, label %26, label %17, !dbg !8122

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !8112, metadata !DIExpression()), !dbg !8115
  %12 = add i32 %11, -1, !dbg !8123
  call void @llvm.dbg.value(metadata i32 %12, metadata !8112, metadata !DIExpression()), !dbg !8115
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !8126
  %14 = load i8, i8* %13, align 1, !dbg !8126
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !8127
  store i8 %14, i8* %15, align 1, !dbg !8128
  %16 = icmp eq i32 %12, 0, !dbg !8129
  br i1 %16, label %26, label %10, !dbg !8130, !llvm.loop !8131

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !8114, metadata !DIExpression()), !dbg !8115
  call void @llvm.dbg.value(metadata i8* %19, metadata !8113, metadata !DIExpression()), !dbg !8115
  call void @llvm.dbg.value(metadata i32 %20, metadata !8112, metadata !DIExpression()), !dbg !8115
  %21 = load i8, i8* %18, align 1, !dbg !8133
  store i8 %21, i8* %19, align 1, !dbg !8135
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !8136
  call void @llvm.dbg.value(metadata i8* %22, metadata !8113, metadata !DIExpression()), !dbg !8115
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !8137
  call void @llvm.dbg.value(metadata i8* %23, metadata !8114, metadata !DIExpression()), !dbg !8115
  %24 = add i32 %20, -1, !dbg !8138
  call void @llvm.dbg.value(metadata i32 %24, metadata !8112, metadata !DIExpression()), !dbg !8115
  %25 = icmp eq i32 %24, 0, !dbg !8120
  br i1 %25, label %26, label %17, !dbg !8122, !llvm.loop !8139

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !8141
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !8142 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8148, metadata !DIExpression()), !dbg !8153
  call void @llvm.dbg.value(metadata i8* %1, metadata !8149, metadata !DIExpression()), !dbg !8153
  call void @llvm.dbg.value(metadata i32 %2, metadata !8150, metadata !DIExpression()), !dbg !8153
  call void @llvm.dbg.value(metadata i8* %0, metadata !8151, metadata !DIExpression()), !dbg !8153
  call void @llvm.dbg.value(metadata i8* %1, metadata !8152, metadata !DIExpression()), !dbg !8153
  %4 = icmp eq i32 %2, 0, !dbg !8154
  br i1 %4, label %14, label %5, !dbg !8155

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8152, metadata !DIExpression()), !dbg !8153
  call void @llvm.dbg.value(metadata i8* %7, metadata !8151, metadata !DIExpression()), !dbg !8153
  call void @llvm.dbg.value(metadata i32 %8, metadata !8150, metadata !DIExpression()), !dbg !8153
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8156
  call void @llvm.dbg.value(metadata i8* %9, metadata !8152, metadata !DIExpression()), !dbg !8153
  %10 = load i8, i8* %6, align 1, !dbg !8158
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8159
  call void @llvm.dbg.value(metadata i8* %11, metadata !8151, metadata !DIExpression()), !dbg !8153
  store i8 %10, i8* %7, align 1, !dbg !8160
  %12 = add i32 %8, -1, !dbg !8161
  call void @llvm.dbg.value(metadata i32 %12, metadata !8150, metadata !DIExpression()), !dbg !8153
  %13 = icmp eq i32 %12, 0, !dbg !8154
  br i1 %13, label %14, label %5, !dbg !8155, !llvm.loop !8162

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !8164
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #18 !dbg !8165 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8169, metadata !DIExpression()), !dbg !8174
  call void @llvm.dbg.value(metadata i32 %1, metadata !8170, metadata !DIExpression()), !dbg !8174
  call void @llvm.dbg.value(metadata i32 %2, metadata !8171, metadata !DIExpression()), !dbg !8174
  call void @llvm.dbg.value(metadata i8* %0, metadata !8172, metadata !DIExpression()), !dbg !8174
  %4 = trunc i32 %1 to i8, !dbg !8175
  call void @llvm.dbg.value(metadata i8 %4, metadata !8173, metadata !DIExpression()), !dbg !8174
  call void @llvm.dbg.value(metadata i32 %2, metadata !8171, metadata !DIExpression()), !dbg !8174
  call void @llvm.dbg.value(metadata i8* %0, metadata !8172, metadata !DIExpression()), !dbg !8174
  %5 = icmp eq i32 %2, 0, !dbg !8176
  br i1 %5, label %12, label %6, !dbg !8177

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !8171, metadata !DIExpression()), !dbg !8174
  call void @llvm.dbg.value(metadata i8* %8, metadata !8172, metadata !DIExpression()), !dbg !8174
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8178
  call void @llvm.dbg.value(metadata i8* %9, metadata !8172, metadata !DIExpression()), !dbg !8174
  store i8 %4, i8* %8, align 1, !dbg !8180
  %10 = add i32 %7, -1, !dbg !8181
  call void @llvm.dbg.value(metadata i32 %10, metadata !8171, metadata !DIExpression()), !dbg !8174
  %11 = icmp eq i32 %10, 0, !dbg !8176
  br i1 %11, label %12, label %6, !dbg !8177, !llvm.loop !8182

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !8184
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #8 !dbg !8185 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8189, metadata !DIExpression()), !dbg !8195
  call void @llvm.dbg.value(metadata i32 %1, metadata !8190, metadata !DIExpression()), !dbg !8195
  call void @llvm.dbg.value(metadata i32 %2, metadata !8191, metadata !DIExpression()), !dbg !8195
  %4 = icmp eq i32 %2, 0, !dbg !8196
  br i1 %4, label %17, label %5, !dbg !8197

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !8198

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !8199
  call void @llvm.dbg.value(metadata i8* %9, metadata !8192, metadata !DIExpression()), !dbg !8199
  call void @llvm.dbg.value(metadata i32 %8, metadata !8191, metadata !DIExpression()), !dbg !8195
  call void @llvm.dbg.value(metadata i8* %9, metadata !8192, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8199
  %10 = load i8, i8* %9, align 1, !dbg !8200
  %11 = icmp eq i8 %10, %6, !dbg !8203
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !8204
  call void @llvm.dbg.value(metadata i8* %12, metadata !8192, metadata !DIExpression()), !dbg !8199
  call void @llvm.dbg.value(metadata i32 %13, metadata !8191, metadata !DIExpression()), !dbg !8195
  br i1 %15, label %16, label %7, !dbg !8204, !llvm.loop !8205

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !8207

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !8195
  ret i8* %19, !dbg !8208
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #9 !dbg !8209 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !8211, metadata !DIExpression()), !dbg !8212
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !8213
  ret void, !dbg !8214
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #6 !dbg !8215 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8217, metadata !DIExpression()), !dbg !8218
  ret i32 -1, !dbg !8219
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8220 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8224, metadata !DIExpression()), !dbg !8226
  call void @llvm.dbg.value(metadata i32* %1, metadata !8225, metadata !DIExpression()), !dbg !8226
  %3 = ptrtoint i32* %1 to i32, !dbg !8227
  %4 = and i32 %3, -2, !dbg !8227
  %5 = icmp eq i32 %4, 2, !dbg !8227
  br i1 %5, label %6, label %9, !dbg !8227

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8228
  %8 = tail call i32 %7(i32 noundef %0) #24, !dbg !8228
  br label %9, !dbg !8229

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !8229
  ret i32 %10, !dbg !8230
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8231 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8233, metadata !DIExpression()), !dbg !8235
  call void @llvm.dbg.value(metadata i32* %1, metadata !8234, metadata !DIExpression()), !dbg !8235
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #25, !dbg !8236
  ret i32 %3, !dbg !8237
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !8238 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8241, metadata !DIExpression()), !dbg !8243
  call void @llvm.dbg.value(metadata i32* %1, metadata !8242, metadata !DIExpression()), !dbg !8243
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8244, !srcloc !8246
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #25, !dbg !8247
  ret i32 %3, !dbg !8248
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !8249 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8254, metadata !DIExpression()), !dbg !8258
  call void @llvm.dbg.value(metadata i32* %1, metadata !8255, metadata !DIExpression()), !dbg !8258
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !8259
  call void @llvm.dbg.value(metadata i32 %3, metadata !8256, metadata !DIExpression()), !dbg !8258
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #25, !dbg !8260
  call void @llvm.dbg.value(metadata i32 %4, metadata !8257, metadata !DIExpression()), !dbg !8258
  %5 = icmp ne i32 %3, %4, !dbg !8261
  %6 = sext i1 %5 to i32, !dbg !8262
  ret i32 %6, !dbg !8263
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !8264 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8268, metadata !DIExpression()), !dbg !8272
  call void @llvm.dbg.value(metadata i32 %1, metadata !8269, metadata !DIExpression()), !dbg !8272
  call void @llvm.dbg.value(metadata i32 %2, metadata !8270, metadata !DIExpression()), !dbg !8272
  call void @llvm.dbg.value(metadata i32* %3, metadata !8271, metadata !DIExpression()), !dbg !8272
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #25, !dbg !8273
  ret i32 %5, !dbg !8274
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !8275 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8277, metadata !DIExpression()), !dbg !8281
  call void @llvm.dbg.value(metadata i32 %1, metadata !8278, metadata !DIExpression()), !dbg !8281
  call void @llvm.dbg.value(metadata i32 %2, metadata !8279, metadata !DIExpression()), !dbg !8281
  call void @llvm.dbg.value(metadata i32* %3, metadata !8280, metadata !DIExpression()), !dbg !8281
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8282, !srcloc !8284
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #25, !dbg !8285
  ret i32 %5, !dbg !8286
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !8287 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8289, metadata !DIExpression()), !dbg !8297
  call void @llvm.dbg.value(metadata i32 %1, metadata !8290, metadata !DIExpression()), !dbg !8297
  call void @llvm.dbg.value(metadata i32 %2, metadata !8291, metadata !DIExpression()), !dbg !8297
  call void @llvm.dbg.value(metadata i32* %3, metadata !8292, metadata !DIExpression()), !dbg !8297
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !8298
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !8300
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !8300
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !8300
  br i1 %11, label %33, label %12, !dbg !8300

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !8297
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !8297
  call void @llvm.dbg.value(metadata i8* %14, metadata !8295, metadata !DIExpression()), !dbg !8297
  call void @llvm.dbg.value(metadata i32 %13, metadata !8293, metadata !DIExpression()), !dbg !8297
  call void @llvm.dbg.value(metadata i32 %1, metadata !8294, metadata !DIExpression()), !dbg !8297
  br label %15, !dbg !8301

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !8303
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !8297
  call void @llvm.dbg.value(metadata i8* %17, metadata !8295, metadata !DIExpression()), !dbg !8297
  call void @llvm.dbg.value(metadata i32 %16, metadata !8294, metadata !DIExpression()), !dbg !8297
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8304
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8307
  call void @llvm.dbg.value(metadata i8* %19, metadata !8295, metadata !DIExpression()), !dbg !8297
  %20 = load i8, i8* %17, align 1, !dbg !8308
  %21 = zext i8 %20 to i32, !dbg !8309
  %22 = tail call i32 %18(i32 noundef %21) #24, !dbg !8304
  %23 = icmp eq i32 %22, -1, !dbg !8310
  br i1 %23, label %30, label %24, !dbg !8311

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !8312
  call void @llvm.dbg.value(metadata i32 %25, metadata !8294, metadata !DIExpression()), !dbg !8297
  %26 = icmp eq i32 %25, 0, !dbg !8313
  br i1 %26, label %27, label %15, !dbg !8314, !llvm.loop !8315

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !8317
  call void @llvm.dbg.value(metadata i32 %28, metadata !8293, metadata !DIExpression()), !dbg !8297
  %29 = icmp eq i32 %28, 0, !dbg !8318
  br i1 %29, label %30, label %12, !dbg !8319, !llvm.loop !8320

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !8297
  call void @llvm.dbg.value(metadata i32 %31, metadata !8293, metadata !DIExpression()), !dbg !8297
  call void @llvm.dbg.label(metadata !8296), !dbg !8323
  %32 = sub i32 %2, %31, !dbg !8324
  br label %33, !dbg !8325

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !8297
  ret i32 %34, !dbg !8326
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !8327 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8331, metadata !DIExpression()), !dbg !8332
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #25, !dbg !8333
  %3 = icmp eq i32 %2, -1, !dbg !8335
  br i1 %3, label %8, label %4, !dbg !8336

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #25, !dbg !8337
  %6 = icmp eq i32 %5, -1, !dbg !8338
  %7 = sext i1 %6 to i32, !dbg !8337
  br label %8, !dbg !8339

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !8332
  ret i32 %9, !dbg !8340
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintf(i8* noalias noundef %0, i32 noundef %1, i8* noalias noundef %2, ...) local_unnamed_addr #1 !dbg !8341 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca %struct.emitter, align 4
  %6 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !8346, metadata !DIExpression()), !dbg !8363
  call void @llvm.dbg.value(metadata i32 %1, metadata !8347, metadata !DIExpression()), !dbg !8363
  call void @llvm.dbg.value(metadata i8* %2, metadata !8348, metadata !DIExpression()), !dbg !8363
  %7 = bitcast %struct.__va_list* %4 to i8*, !dbg !8364
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #23, !dbg !8364
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !8349, metadata !DIExpression()), !dbg !8365
  %8 = bitcast %struct.emitter* %5 to i8*, !dbg !8366
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #23, !dbg !8366
  call void @llvm.dbg.declare(metadata %struct.emitter* %5, metadata !8356, metadata !DIExpression()), !dbg !8367
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !8368
  %9 = icmp eq i32 %1, 0, !dbg !8369
  %10 = select i1 %9, i8* %6, i8* %0, !dbg !8371
  call void @llvm.dbg.value(metadata i8* %10, metadata !8346, metadata !DIExpression()), !dbg !8363
  %11 = getelementptr inbounds %struct.emitter, %struct.emitter* %5, i32 0, i32 0, !dbg !8372
  store i8* %10, i8** %11, align 4, !dbg !8373
  %12 = getelementptr inbounds %struct.emitter, %struct.emitter* %5, i32 0, i32 1, !dbg !8374
  store i32 %1, i32* %12, align 4, !dbg !8375
  call void @llvm.va_start(i8* nonnull %7), !dbg !8376
  %13 = bitcast %struct.__va_list* %4 to i32*, !dbg !8377
  %14 = load i32, i32* %13, align 4, !dbg !8377
  %15 = insertvalue [1 x i32] poison, i32 %14, 0, !dbg !8377
  %16 = call fastcc i32 @cbvprintf.85(i8* noundef nonnull %8, i8* noundef %2, [1 x i32] %15) #25, !dbg !8377
  call void @llvm.dbg.value(metadata i32 %16, metadata !8361, metadata !DIExpression()), !dbg !8363
  call void @llvm.va_end(i8* nonnull %7), !dbg !8378
  %17 = load i8*, i8** %11, align 4, !dbg !8379
  store i8 0, i8* %17, align 1, !dbg !8380
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !8381
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #23, !dbg !8381
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #23, !dbg !8381
  ret i32 %16, !dbg !8382
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbvprintf.85(i8* noundef %0, i8* noundef %1, [1 x i32] %2) unnamed_addr #1 !dbg !8383 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !8390, metadata !DIExpression()), !dbg !8391
  call void @llvm.dbg.value(metadata i32 (...)* bitcast (i32 (i32, %struct.emitter*)* @sprintf_out to i32 (...)*), metadata !8387, metadata !DIExpression()), !dbg !8391
  call void @llvm.dbg.value(metadata i8* %0, metadata !8388, metadata !DIExpression()), !dbg !8391
  call void @llvm.dbg.value(metadata i8* %1, metadata !8389, metadata !DIExpression()), !dbg !8391
  %4 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef bitcast (i32 (i32, %struct.emitter*)* @sprintf_out to i32 (...)*), i8* noundef %0, i8* noundef %1, [1 x i32] %2, i32 noundef 0) #24, !dbg !8392
  ret i32 %4, !dbg !8393
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @sprintf_out(i32 noundef %0, %struct.emitter* nocapture noundef %1) #11 !dbg !8394 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8399, metadata !DIExpression()), !dbg !8401
  call void @llvm.dbg.value(metadata %struct.emitter* %1, metadata !8400, metadata !DIExpression()), !dbg !8401
  %3 = getelementptr inbounds %struct.emitter, %struct.emitter* %1, i32 0, i32 1, !dbg !8402
  %4 = load i32, i32* %3, align 4, !dbg !8402
  %5 = icmp sgt i32 %4, 1, !dbg !8404
  br i1 %5, label %6, label %14, !dbg !8405

6:                                                ; preds = %2
  %7 = trunc i32 %0 to i8, !dbg !8406
  %8 = getelementptr inbounds %struct.emitter, %struct.emitter* %1, i32 0, i32 0, !dbg !8408
  %9 = load i8*, i8** %8, align 4, !dbg !8408
  store i8 %7, i8* %9, align 1, !dbg !8409
  %10 = load i8*, i8** %8, align 4, !dbg !8410
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8410
  store i8* %11, i8** %8, align 4, !dbg !8410
  %12 = load i32, i32* %3, align 4, !dbg !8411
  %13 = add nsw i32 %12, -1, !dbg !8411
  store i32 %13, i32* %3, align 4, !dbg !8411
  br label %14, !dbg !8412

14:                                               ; preds = %6, %2
  ret i32 0, !dbg !8413
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sprintf(i8* noalias noundef %0, i8* noalias noundef %1, ...) local_unnamed_addr #1 !dbg !8414 {
  %3 = alloca %struct.__va_list, align 4
  %4 = alloca %struct.emitter, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !8418, metadata !DIExpression()), !dbg !8423
  call void @llvm.dbg.value(metadata i8* %1, metadata !8419, metadata !DIExpression()), !dbg !8423
  %5 = bitcast %struct.__va_list* %3 to i8*, !dbg !8424
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !8424
  call void @llvm.dbg.declare(metadata %struct.__va_list* %3, metadata !8420, metadata !DIExpression()), !dbg !8425
  %6 = bitcast %struct.emitter* %4 to i8*, !dbg !8426
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #23, !dbg !8426
  call void @llvm.dbg.declare(metadata %struct.emitter* %4, metadata !8421, metadata !DIExpression()), !dbg !8427
  %7 = getelementptr inbounds %struct.emitter, %struct.emitter* %4, i32 0, i32 0, !dbg !8428
  store i8* %0, i8** %7, align 4, !dbg !8429
  %8 = getelementptr inbounds %struct.emitter, %struct.emitter* %4, i32 0, i32 1, !dbg !8430
  store i32 2147483647, i32* %8, align 4, !dbg !8431
  call void @llvm.va_start(i8* nonnull %5), !dbg !8432
  %9 = bitcast %struct.__va_list* %3 to i32*, !dbg !8433
  %10 = load i32, i32* %9, align 4, !dbg !8433
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !8433
  %12 = call fastcc i32 @cbvprintf.85(i8* noundef nonnull %6, i8* noundef %1, [1 x i32] %11) #25, !dbg !8433
  call void @llvm.dbg.value(metadata i32 %12, metadata !8422, metadata !DIExpression()), !dbg !8423
  call void @llvm.va_end(i8* nonnull %5), !dbg !8434
  %13 = load i8*, i8** %7, align 4, !dbg !8435
  store i8 0, i8* %13, align 1, !dbg !8436
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #23, !dbg !8437
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !8437
  ret i32 %12, !dbg !8438
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintf(i8* noalias noundef %0, i32 noundef %1, i8* noalias noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !8439 {
  %5 = alloca %struct.emitter, align 4
  %6 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !8446, metadata !DIExpression()), !dbg !8450
  call void @llvm.dbg.value(metadata i8* %0, metadata !8443, metadata !DIExpression()), !dbg !8450
  call void @llvm.dbg.value(metadata i32 %1, metadata !8444, metadata !DIExpression()), !dbg !8450
  call void @llvm.dbg.value(metadata i8* %2, metadata !8445, metadata !DIExpression()), !dbg !8450
  %7 = bitcast %struct.emitter* %5 to i8*, !dbg !8451
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #23, !dbg !8451
  call void @llvm.dbg.declare(metadata %struct.emitter* %5, metadata !8447, metadata !DIExpression()), !dbg !8452
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !8453
  %8 = icmp eq i32 %1, 0, !dbg !8454
  %9 = select i1 %8, i8* %6, i8* %0, !dbg !8456
  call void @llvm.dbg.value(metadata i8* %9, metadata !8443, metadata !DIExpression()), !dbg !8450
  %10 = getelementptr inbounds %struct.emitter, %struct.emitter* %5, i32 0, i32 0, !dbg !8457
  store i8* %9, i8** %10, align 4, !dbg !8458
  %11 = getelementptr inbounds %struct.emitter, %struct.emitter* %5, i32 0, i32 1, !dbg !8459
  store i32 %1, i32* %11, align 4, !dbg !8460
  %12 = call fastcc i32 @cbvprintf.85(i8* noundef nonnull %7, i8* noundef %2, [1 x i32] %3) #25, !dbg !8461
  call void @llvm.dbg.value(metadata i32 %12, metadata !8448, metadata !DIExpression()), !dbg !8450
  %13 = load i8*, i8** %10, align 4, !dbg !8462
  store i8 0, i8* %13, align 1, !dbg !8463
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !8464
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #23, !dbg !8464
  ret i32 %12, !dbg !8465
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsprintf(i8* noalias noundef %0, i8* noalias noundef %1, [1 x i32] %2) local_unnamed_addr #1 !dbg !8466 {
  %4 = alloca %struct.emitter, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !8472, metadata !DIExpression()), !dbg !8475
  call void @llvm.dbg.value(metadata i8* %0, metadata !8470, metadata !DIExpression()), !dbg !8475
  call void @llvm.dbg.value(metadata i8* %1, metadata !8471, metadata !DIExpression()), !dbg !8475
  %5 = bitcast %struct.emitter* %4 to i8*, !dbg !8476
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #23, !dbg !8476
  call void @llvm.dbg.declare(metadata %struct.emitter* %4, metadata !8473, metadata !DIExpression()), !dbg !8477
  %6 = getelementptr inbounds %struct.emitter, %struct.emitter* %4, i32 0, i32 0, !dbg !8478
  store i8* %0, i8** %6, align 4, !dbg !8479
  %7 = getelementptr inbounds %struct.emitter, %struct.emitter* %4, i32 0, i32 1, !dbg !8480
  store i32 2147483647, i32* %7, align 4, !dbg !8481
  %8 = call fastcc i32 @cbvprintf.85(i8* noundef nonnull %5, i8* noundef %1, [1 x i32] %2) #25, !dbg !8482
  call void @llvm.dbg.value(metadata i32 %8, metadata !8474, metadata !DIExpression()), !dbg !8475
  %9 = load i8*, i8** %6, align 4, !dbg !8483
  store i8 0, i8* %9, align 1, !dbg !8484
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #23, !dbg !8485
  ret i32 %8, !dbg !8486
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !8487 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8489, metadata !DIExpression()), !dbg !8490
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #25, !dbg !8491
  ret void, !dbg !8492
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !8493 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8497, metadata !DIExpression()), !dbg !8503
  call void @llvm.dbg.value(metadata i32 %1, metadata !8498, metadata !DIExpression()), !dbg !8503
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !8499, metadata !DIExpression()), !dbg !8503
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !8504
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !8504
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !8504
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !8500, metadata !DIExpression()), !dbg !8503
  call void @llvm.dbg.value(metadata i32 %0, metadata !8502, metadata !DIExpression()), !dbg !8503
  %7 = icmp slt i32 %0, %1, !dbg !8505
  br i1 %7, label %8, label %22, !dbg !8508

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8502, metadata !DIExpression()), !dbg !8503
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #25, !dbg !8509
  %11 = icmp eq i32 %10, 0, !dbg !8509
  br i1 %11, label %19, label %12, !dbg !8512

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #25, !dbg !8513
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !8515
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !8515
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !8517
  br i1 %15, label %19, label %16, !dbg !8518

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !8519
  %18 = load i8*, i8** %17, align 4, !dbg !8519
  tail call void %14(i32 noundef %9, i8* noundef %18) #24, !dbg !8520
  br label %19, !dbg !8521

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !8522
  call void @llvm.dbg.value(metadata i32 %20, metadata !8502, metadata !DIExpression()), !dbg !8503
  %21 = icmp eq i32 %20, %1, !dbg !8505
  br i1 %21, label %22, label %8, !dbg !8508, !llvm.loop !8523

22:                                               ; preds = %19, %3
  ret void, !dbg !8525
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #5 !dbg !8526 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8528, metadata !DIExpression()), !dbg !8529
  %2 = shl nuw i32 1, %0, !dbg !8530
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #25, !dbg !8533
  ret i32 %3, !dbg !8534
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #15 !dbg !8535 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8539, metadata !DIExpression()), !dbg !8540
  %2 = shl nuw i32 1, %0, !dbg !8541
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #25, !dbg !8544
  ret void, !dbg !8545
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8546 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8549, metadata !DIExpression()), !dbg !8550
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !8551
  ret void, !dbg !8552
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #5 !dbg !8553 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8555, metadata !DIExpression()), !dbg !8556
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !8557
  %3 = and i32 %2, %0, !dbg !8557
  %4 = icmp eq i32 %3, %0, !dbg !8558
  %5 = zext i1 %4 to i32, !dbg !8558
  ret i32 %5, !dbg !8559
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !8560 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8562, metadata !DIExpression()), !dbg !8563
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #25, !dbg !8564
  ret void, !dbg !8565
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !8566 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8568, metadata !DIExpression()), !dbg !8569
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #25, !dbg !8570
  ret void, !dbg !8571
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !8572 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8574, metadata !DIExpression()), !dbg !8575
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #25, !dbg !8576
  ret void, !dbg !8577
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !8578 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8580, metadata !DIExpression()), !dbg !8581
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #25, !dbg !8582
  ret void, !dbg !8583
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !8584 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8586, metadata !DIExpression()), !dbg !8587
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #25, !dbg !8588
  ret void, !dbg !8589
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !8590 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8592, metadata !DIExpression()), !dbg !8593
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #25, !dbg !8594
  ret void, !dbg !8595
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !8596 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8598, metadata !DIExpression()), !dbg !8599
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #25, !dbg !8600
  ret void, !dbg !8601
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !8602 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8604, metadata !DIExpression()), !dbg !8605
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #25, !dbg !8606
  ret void, !dbg !8607
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !8608 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8610, metadata !DIExpression()), !dbg !8611
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #25, !dbg !8612
  ret void, !dbg !8613
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !8614 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8616, metadata !DIExpression()), !dbg !8617
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #25, !dbg !8618
  ret void, !dbg !8619
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8620 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8622, metadata !DIExpression()), !dbg !8623
  tail call fastcc void @__stm32_exti_connect_irqs() #25, !dbg !8624
  ret i32 0, !dbg !8625
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !766 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !770, metadata !DIExpression()), !dbg !8626
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #24, !dbg !8627
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #24, !dbg !8629
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #24, !dbg !8631
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #24, !dbg !8633
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #24, !dbg !8635
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #24, !dbg !8637
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #24, !dbg !8639
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #24, !dbg !8641
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #24, !dbg !8643
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #24, !dbg !8645
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #24, !dbg !8647
  ret void, !dbg !8649
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !8650 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8652, metadata !DIExpression()), !dbg !8654
  call void @llvm.dbg.value(metadata i32 0, metadata !8653, metadata !DIExpression()), !dbg !8654
  call void @llvm.dbg.value(metadata i32 undef, metadata !8653, metadata !DIExpression()), !dbg !8654
  %2 = lshr i32 6684671, %0, !dbg !8655
  %3 = and i32 %2, 1, !dbg !8655
  %4 = or i32 %3, %0, !dbg !8657
  %5 = icmp eq i32 %4, 0, !dbg !8657
  br i1 %5, label %6, label %7, !dbg !8657

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.94, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.95, i32 0, i32 0), i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.96, i32 0, i32 0), i32 noundef 123) #24, !dbg !8658
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.96, i32 0, i32 0), i32 noundef 123) #24, !dbg !8658
  unreachable, !dbg !8658

7:                                                ; preds = %1
  %8 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !8663
  %9 = load i32, i32* %8, align 4, !dbg !8663
  call void @llvm.dbg.value(metadata i32 %9, metadata !8653, metadata !DIExpression()), !dbg !8654
  %10 = shl nuw i32 1, %0, !dbg !8664
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %10) #25, !dbg !8665
  tail call void @arch_irq_enable(i32 noundef %9) #24, !dbg !8666
  ret void, !dbg !8667
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8668 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8670, metadata !DIExpression()), !dbg !8671
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8672
  %3 = or i32 %2, %0, !dbg !8672
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8672
  ret void, !dbg !8673
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #15 !dbg !8674 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8676, metadata !DIExpression()), !dbg !8677
  %2 = icmp slt i32 %0, 32, !dbg !8678
  br i1 %2, label %3, label %5, !dbg !8680

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !8681
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #25, !dbg !8683
  br label %5, !dbg !8684

5:                                                ; preds = %1, %3
  ret void, !dbg !8685
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8686 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8688, metadata !DIExpression()), !dbg !8689
  %2 = xor i32 %0, -1, !dbg !8690
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8690
  %4 = and i32 %3, %2, !dbg !8690
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8690
  ret void, !dbg !8691
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !8692 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8696, metadata !DIExpression()), !dbg !8698
  call void @llvm.dbg.value(metadata i32 %1, metadata !8697, metadata !DIExpression()), !dbg !8698
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !8699

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !8700
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #25, !dbg !8702
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #25, !dbg !8703
  br label %11, !dbg !8704

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !8705
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #25, !dbg !8706
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #25, !dbg !8707
  br label %11, !dbg !8708

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !8709
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #25, !dbg !8710
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #25, !dbg !8711
  br label %11, !dbg !8712

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !8713
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #25, !dbg !8714
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #25, !dbg !8715
  br label %11, !dbg !8716

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !8717
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8718 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8720, metadata !DIExpression()), !dbg !8721
  %2 = xor i32 %0, -1, !dbg !8722
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8722
  %4 = and i32 %3, %2, !dbg !8722
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8722
  ret void, !dbg !8723
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8724 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8726, metadata !DIExpression()), !dbg !8727
  %2 = xor i32 %0, -1, !dbg !8728
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8728
  %4 = and i32 %3, %2, !dbg !8728
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8728
  ret void, !dbg !8729
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8730 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8732, metadata !DIExpression()), !dbg !8733
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8734
  %3 = or i32 %2, %0, !dbg !8734
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8734
  ret void, !dbg !8735
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8736 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8738, metadata !DIExpression()), !dbg !8739
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8740
  %3 = or i32 %2, %0, !dbg !8740
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8740
  ret void, !dbg !8741
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #11 !dbg !8742 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8746, metadata !DIExpression()), !dbg !8752
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !8747, metadata !DIExpression()), !dbg !8752
  call void @llvm.dbg.value(metadata i8* %2, metadata !8748, metadata !DIExpression()), !dbg !8752
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !8749, metadata !DIExpression()), !dbg !8752
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8751, metadata !DIExpression()), !dbg !8752
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8753
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !8753
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !8755
  br i1 %6, label %7, label %9, !dbg !8756

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !8757
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8758
  store i8* %2, i8** %8, align 4, !dbg !8759
  br label %9, !dbg !8760

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !8752
  ret i32 %10, !dbg !8761
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #9 !dbg !8762 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8764, metadata !DIExpression()), !dbg !8767
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !8765, metadata !DIExpression()), !dbg !8767
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8766, metadata !DIExpression()), !dbg !8767
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8768
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !8769
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8770
  store i8* null, i8** %3, align 4, !dbg !8771
  ret void, !dbg !8772
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !8773 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8775, metadata !DIExpression()), !dbg !8780
  call void @llvm.dbg.value(metadata i8* %1, metadata !8776, metadata !DIExpression()), !dbg !8780
  call void @llvm.dbg.value(metadata i8* %1, metadata !8777, metadata !DIExpression()), !dbg !8780
  %3 = bitcast i8* %1 to i32*, !dbg !8781
  %4 = load i32, i32* %3, align 4, !dbg !8781
  %5 = add i32 %4, -169, !dbg !8781
  %6 = icmp ult i32 %5, -121, !dbg !8781
  br i1 %6, label %15, label %7, !dbg !8783

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8784
  %9 = inttoptr i32 %8 to i32*, !dbg !8785
  call void @llvm.dbg.value(metadata i32* %9, metadata !8778, metadata !DIExpression()), !dbg !8780
  %10 = load volatile i32, i32* %9, align 4, !dbg !8786
  call void @llvm.dbg.value(metadata i32 %10, metadata !8779, metadata !DIExpression()), !dbg !8780
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8787
  %12 = bitcast i8* %11 to i32*, !dbg !8787
  %13 = load i32, i32* %12, align 4, !dbg !8787
  %14 = or i32 %13, %10, !dbg !8788
  call void @llvm.dbg.value(metadata i32 %14, metadata !8779, metadata !DIExpression()), !dbg !8780
  store volatile i32 %14, i32* %9, align 4, !dbg !8789
  br label %15, !dbg !8790

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8780
  ret i32 %16, !dbg !8791
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !8792 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8794, metadata !DIExpression()), !dbg !8799
  call void @llvm.dbg.value(metadata i8* %1, metadata !8795, metadata !DIExpression()), !dbg !8799
  call void @llvm.dbg.value(metadata i8* %1, metadata !8796, metadata !DIExpression()), !dbg !8799
  %3 = bitcast i8* %1 to i32*, !dbg !8800
  %4 = load i32, i32* %3, align 4, !dbg !8800
  %5 = add i32 %4, -169, !dbg !8800
  %6 = icmp ult i32 %5, -121, !dbg !8800
  br i1 %6, label %16, label %7, !dbg !8802

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8803
  %9 = inttoptr i32 %8 to i32*, !dbg !8804
  call void @llvm.dbg.value(metadata i32* %9, metadata !8797, metadata !DIExpression()), !dbg !8799
  %10 = load volatile i32, i32* %9, align 4, !dbg !8805
  call void @llvm.dbg.value(metadata i32 %10, metadata !8798, metadata !DIExpression()), !dbg !8799
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8806
  %12 = bitcast i8* %11 to i32*, !dbg !8806
  %13 = load i32, i32* %12, align 4, !dbg !8806
  %14 = xor i32 %13, -1, !dbg !8807
  %15 = and i32 %10, %14, !dbg !8808
  call void @llvm.dbg.value(metadata i32 %15, metadata !8798, metadata !DIExpression()), !dbg !8799
  store volatile i32 %15, i32* %9, align 4, !dbg !8809
  br label %16, !dbg !8810

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8799
  ret i32 %17, !dbg !8811
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !8812 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8814, metadata !DIExpression()), !dbg !8822
  call void @llvm.dbg.value(metadata i8* %1, metadata !8815, metadata !DIExpression()), !dbg !8822
  call void @llvm.dbg.value(metadata i32* %2, metadata !8816, metadata !DIExpression()), !dbg !8822
  call void @llvm.dbg.value(metadata i8* %1, metadata !8817, metadata !DIExpression()), !dbg !8822
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !8823
  call void @llvm.dbg.value(metadata i32 %4, metadata !8818, metadata !DIExpression()), !dbg !8822
  call void @llvm.dbg.value(metadata i32 undef, metadata !8819, metadata !DIExpression()), !dbg !8822
  call void @llvm.dbg.value(metadata i32 undef, metadata !8820, metadata !DIExpression()), !dbg !8822
  call void @llvm.dbg.value(metadata i32 %4, metadata !8821, metadata !DIExpression()), !dbg !8822
  %5 = bitcast i8* %1 to i32*, !dbg !8824
  %6 = load i32, i32* %5, align 4, !dbg !8824
  switch i32 %6, label %21 [
    i32 48, label %19
    i32 52, label %19
    i32 56, label %19
    i32 64, label %7
    i32 68, label %9
    i32 168, label %19
    i32 6, label %19
    i32 1, label %11
    i32 2, label %14
    i32 4, label %17
    i32 5, label %18
  ], !dbg !8825

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 4) #25, !dbg !8826
  call void @llvm.dbg.value(metadata i32 %8, metadata !8819, metadata !DIExpression()), !dbg !8822
  br label %19, !dbg !8827

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #25, !dbg !8829
  call void @llvm.dbg.value(metadata i32 %10, metadata !8820, metadata !DIExpression()), !dbg !8822
  br label %19, !dbg !8830

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #24, !dbg !8831
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12, i32 noundef 2) #25, !dbg !8832
  br label %19, !dbg !8833

14:                                               ; preds = %3
  %15 = tail call i32 @get_pllsrc_frequency() #24, !dbg !8834
  %16 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %15, i32 noundef 7) #25, !dbg !8835
  br label %19, !dbg !8836

17:                                               ; preds = %3
  br label %19, !dbg !8837

18:                                               ; preds = %3
  br label %19, !dbg !8838

19:                                               ; preds = %3, %3, %3, %3, %3, %18, %17, %14, %11, %9, %7
  %20 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ %16, %14 ], [ 0, %17 ], [ 0, %18 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %20, i32* %2, align 4, !dbg !8839
  br label %21, !dbg !8840

21:                                               ; preds = %19, %3
  %22 = phi i32 [ -134, %3 ], [ 0, %19 ], !dbg !8822
  ret i32 %22, !dbg !8840
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #15 !dbg !8841 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8843, metadata !DIExpression()), !dbg !8851
  call void @llvm.dbg.value(metadata i8* %1, metadata !8844, metadata !DIExpression()), !dbg !8851
  call void @llvm.dbg.value(metadata i8* %2, metadata !8845, metadata !DIExpression()), !dbg !8851
  call void @llvm.dbg.value(metadata i8* %1, metadata !8846, metadata !DIExpression()), !dbg !8851
  %4 = bitcast i8* %1 to i32*, !dbg !8852
  %5 = load i32, i32* %4, align 4, !dbg !8852
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #25, !dbg !8853
  call void @llvm.dbg.value(metadata i32 %6, metadata !8850, metadata !DIExpression()), !dbg !8851
  %7 = icmp slt i32 %6, 0, !dbg !8854
  br i1 %7, label %22, label %8, !dbg !8856

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8846, metadata !DIExpression()), !dbg !8851
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8857
  %10 = bitcast i8* %9 to i32*, !dbg !8857
  %11 = load i32, i32* %10, align 4, !dbg !8857
  %12 = lshr i32 %11, 16, !dbg !8857
  %13 = and i32 %12, 7, !dbg !8857
  %14 = lshr i32 %11, 8, !dbg !8858
  %15 = and i32 %14, 31, !dbg !8858
  %16 = shl i32 %13, %15, !dbg !8859
  call void @llvm.dbg.value(metadata i32 %16, metadata !8849, metadata !DIExpression()), !dbg !8851
  %17 = and i32 %11, 255, !dbg !8860
  %18 = or i32 %17, 1073887232, !dbg !8861
  %19 = inttoptr i32 %18 to i32*, !dbg !8862
  call void @llvm.dbg.value(metadata i32* %19, metadata !8847, metadata !DIExpression()), !dbg !8851
  %20 = load volatile i32, i32* %19, align 4, !dbg !8863
  call void @llvm.dbg.value(metadata i32 %20, metadata !8848, metadata !DIExpression()), !dbg !8851
  %21 = or i32 %16, %20, !dbg !8864
  call void @llvm.dbg.value(metadata i32 %21, metadata !8848, metadata !DIExpression()), !dbg !8851
  store volatile i32 %21, i32* %19, align 4, !dbg !8865
  br label %22, !dbg !8866

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !8851
  ret i32 %23, !dbg !8867
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #6 !dbg !8868 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8872, metadata !DIExpression()), !dbg !8874
  call void @llvm.dbg.value(metadata i32 0, metadata !8873, metadata !DIExpression()), !dbg !8874
  %2 = add i32 %0, -1, !dbg !8875
  %3 = icmp ult i32 %2, 6, !dbg !8875
  br i1 %3, label %4, label %7, !dbg !8875

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !8875
  %6 = load i32, i32* %5, align 4, !dbg !8875
  call void @llvm.dbg.value(metadata i32 %6, metadata !8873, metadata !DIExpression()), !dbg !8874
  br label %7, !dbg !8876

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !8874
  ret i32 %8, !dbg !8877
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #6 !dbg !8878 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8882, metadata !DIExpression()), !dbg !8884
  call void @llvm.dbg.value(metadata i32 %1, metadata !8883, metadata !DIExpression()), !dbg !8884
  %3 = udiv i32 %0, %1, !dbg !8885
  ret i32 %3, !dbg !8886
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #6 !dbg !8887 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8891, metadata !DIExpression()), !dbg !8895
  call void @llvm.dbg.value(metadata i32 24, metadata !8892, metadata !DIExpression()), !dbg !8895
  call void @llvm.dbg.value(metadata i32 336, metadata !8893, metadata !DIExpression()), !dbg !8895
  call void @llvm.dbg.value(metadata i32 %1, metadata !8894, metadata !DIExpression()), !dbg !8895
  %3 = mul i32 %0, 336, !dbg !8896
  %4 = mul nsw i32 %1, 24, !dbg !8897
  %5 = udiv i32 %3, %4, !dbg !8898
  ret i32 %5, !dbg !8899
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !8900 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !8902, metadata !DIExpression()), !dbg !8905
  tail call void @config_enable_default_clocks() #24, !dbg !8906
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #24, !dbg !8907
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #25, !dbg !8907
  %4 = lshr i32 %3, 4, !dbg !8907
  %5 = and i32 %4, 15, !dbg !8907
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !8907
  %7 = load i8, i8* %6, align 1, !dbg !8907
  %8 = zext i8 %7 to i32, !dbg !8907
  %9 = lshr i32 %2, %8, !dbg !8907
  call void @llvm.dbg.value(metadata i32 %9, metadata !8903, metadata !DIExpression()), !dbg !8905
  call void @llvm.dbg.value(metadata !DIArgList(i32 168000000, i8 undef), metadata !8904, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !8905
  %10 = icmp ult i32 %9, 168000000, !dbg !8908
  br i1 %10, label %11, label %13, !dbg !8910

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 168000000) #24, !dbg !8911
  br label %13, !dbg !8913

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #25, !dbg !8914
  tail call fastcc void @set_up_plls() #25, !dbg !8915
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #25, !dbg !8916
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #25, !dbg !8919
  br label %14, !dbg !8920

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #25, !dbg !8921
  %16 = icmp eq i32 %15, 8, !dbg !8922
  br i1 %16, label %17, label %14, !dbg !8920, !llvm.loop !8923

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 167999999, !dbg !8925
  br i1 %18, label %19, label %21, !dbg !8927

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 168000000) #24, !dbg !8928
  br label %21, !dbg !8930

21:                                               ; preds = %19, %17
  store i32 168000000, i32* @SystemCoreClock, align 4, !dbg !8931
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #25, !dbg !8932
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #25, !dbg !8933
  ret i32 0, !dbg !8934
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #5 !dbg !8935 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8937
  %2 = and i32 %1, 240, !dbg !8937
  ret i32 %2, !dbg !8938
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #15 !dbg !8939 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #25, !dbg !8940
  tail call fastcc void @LL_RCC_HSE_Enable() #25, !dbg !8945
  br label %1, !dbg !8946

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #25, !dbg !8947
  %3 = icmp eq i32 %2, 1, !dbg !8948
  br i1 %3, label %4, label %1, !dbg !8946, !llvm.loop !8949

4:                                                ; preds = %1
  ret void, !dbg !8951
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !8952 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #25, !dbg !8953
  %2 = icmp eq i32 %1, 8, !dbg !8955
  br i1 %2, label %3, label %4, !dbg !8956

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #25, !dbg !8957
  tail call fastcc void @stm32_clock_switch_to_hsi() #25, !dbg !8959
  br label %4, !dbg !8960

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #25, !dbg !8961
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8962
  %6 = and i32 %5, -196609, !dbg !8962
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8962
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8963
  %8 = and i32 %7, -251658241, !dbg !8963
  %9 = or i32 %8, 117440512, !dbg !8963
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8963
  tail call void @config_pll_sysclock() #24, !dbg !8964
  tail call fastcc void @LL_RCC_PLL_Enable() #25, !dbg !8965
  br label %10, !dbg !8966

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #25, !dbg !8967
  %12 = icmp eq i32 %11, 1, !dbg !8968
  br i1 %12, label %13, label %10, !dbg !8966, !llvm.loop !8969

13:                                               ; preds = %10
  ret void, !dbg !8971
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #15 !dbg !8972 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8974, metadata !DIExpression()), !dbg !8975
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8976
  %2 = and i32 %1, -241, !dbg !8976
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8976
  ret void, !dbg !8977
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #15 !dbg !8978 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8980, metadata !DIExpression()), !dbg !8981
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8982
  %3 = and i32 %2, -4, !dbg !8982
  %4 = or i32 %3, %0, !dbg !8982
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8982
  ret void, !dbg !8983
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #5 !dbg !8984 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8985
  %2 = and i32 %1, 12, !dbg !8985
  ret i32 %2, !dbg !8986
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #15 !dbg !8987 {
  call void @llvm.dbg.value(metadata i32 5120, metadata !8989, metadata !DIExpression()), !dbg !8990
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8991
  %2 = and i32 %1, -7169, !dbg !8991
  %3 = or i32 %2, 5120, !dbg !8991
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8991
  ret void, !dbg !8992
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #15 !dbg !8993 {
  call void @llvm.dbg.value(metadata i32 32768, metadata !8995, metadata !DIExpression()), !dbg !8996
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8997
  %2 = and i32 %1, -57345, !dbg !8997
  %3 = or i32 %2, 32768, !dbg !8997
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8997
  ret void, !dbg !8998
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #15 !dbg !8999 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #25, !dbg !9000
  %2 = icmp eq i32 %1, 1, !dbg !9002
  br i1 %2, label %7, label %3, !dbg !9003

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #25, !dbg !9004
  br label %4, !dbg !9006

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #25, !dbg !9007
  %6 = icmp eq i32 %5, 1, !dbg !9008
  br i1 %6, label %7, label %4, !dbg !9006, !llvm.loop !9009

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #25, !dbg !9011
  br label %8, !dbg !9012

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #25, !dbg !9013
  %10 = icmp eq i32 %9, 0, !dbg !9014
  br i1 %10, label %11, label %8, !dbg !9012, !llvm.loop !9015

11:                                               ; preds = %8
  ret void, !dbg !9017
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #15 !dbg !9018 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9019
  %2 = and i32 %1, -16777217, !dbg !9019
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9019
  ret void, !dbg !9020
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #15 !dbg !9021 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9022
  %2 = or i32 %1, 16777216, !dbg !9022
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9022
  ret void, !dbg !9023
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #5 !dbg !9024 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9025
  %2 = lshr i32 %1, 25, !dbg !9026
  %3 = and i32 %2, 1, !dbg !9026
  ret i32 %3, !dbg !9027
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #5 !dbg !9028 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9029
  %2 = lshr i32 %1, 1, !dbg !9030
  %3 = and i32 %2, 1, !dbg !9030
  ret i32 %3, !dbg !9031
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #15 !dbg !9032 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9033
  %2 = or i32 %1, 1, !dbg !9033
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9033
  ret void, !dbg !9034
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #15 !dbg !9035 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9036
  %2 = and i32 %1, -262145, !dbg !9036
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9036
  ret void, !dbg !9037
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #15 !dbg !9038 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9039
  %2 = or i32 %1, 65536, !dbg !9039
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9039
  ret void, !dbg !9040
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #5 !dbg !9041 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9042
  %2 = lshr i32 %1, 17, !dbg !9043
  %3 = and i32 %2, 1, !dbg !9043
  ret i32 %3, !dbg !9044
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #6 !dbg !9045 {
  ret i32 24000000, !dbg !9047
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #15 !dbg !9051 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #25, !dbg !9052
  ret void, !dbg !9053
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #15 !dbg !9054 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !9058, metadata !DIExpression()), !dbg !9062
  call void @llvm.dbg.value(metadata i32 24, metadata !9059, metadata !DIExpression()), !dbg !9062
  call void @llvm.dbg.value(metadata i32 336, metadata !9060, metadata !DIExpression()), !dbg !9062
  call void @llvm.dbg.value(metadata i32 0, metadata !9061, metadata !DIExpression()), !dbg !9062
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9063
  %2 = and i32 %1, -4227072, !dbg !9063
  %3 = or i32 %2, 4215832, !dbg !9063
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9063
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9064
  %5 = and i32 %4, -196609, !dbg !9064
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9064
  ret void, !dbg !9065
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #19 !dbg !9066 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #25, !dbg !9067
  ret void, !dbg !9068
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #19 !dbg !9069 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !9072, metadata !DIExpression()), !dbg !9074
  %2 = bitcast i32* %1 to i8*, !dbg !9075
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !9075
  call void @llvm.dbg.declare(metadata i32* %1, metadata !9073, metadata !DIExpression()), !dbg !9076
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9077
  %4 = or i32 %3, 268435456, !dbg !9077
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9077
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9078
  %6 = and i32 %5, 268435456, !dbg !9078
  store volatile i32 %6, i32* %1, align 4, !dbg !9079
  %7 = load volatile i32, i32* %1, align 4, !dbg !9080
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !9081
  ret void, !dbg !9081
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9082 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9084, metadata !DIExpression()), !dbg !9085
  %2 = tail call fastcc zeroext i1 @device_is_ready() #25, !dbg !9086
  br i1 %2, label %3, label %4, !dbg !9088

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #25, !dbg !9089
  br label %4, !dbg !9090

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !9085
  ret i32 %5, !dbg !9091
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !9092 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_57, metadata !9097, metadata !DIExpression()), !dbg !9098
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9099, !srcloc !9101
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #25, !dbg !9102
  ret i1 %1, !dbg !9103
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !9104 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #24, !dbg !9105
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #24, !dbg !9106
  ret void, !dbg !9107
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !9108 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9110, metadata !DIExpression()), !dbg !9111
  %2 = icmp eq i32 %0, 10, !dbg !9112
  br i1 %2, label %3, label %4, !dbg !9114

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #25, !dbg !9115
  br label %4, !dbg !9117

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !9118
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #25, !dbg !9119
  ret i32 %0, !dbg !9120
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9121 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_57, metadata !9124, metadata !DIExpression()), !dbg !9126
  call void @llvm.dbg.value(metadata i8 %0, metadata !9125, metadata !DIExpression()), !dbg !9126
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9127, !srcloc !9129
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #25, !dbg !9130
  ret void, !dbg !9131
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9132 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_57, metadata !9134, metadata !DIExpression()), !dbg !9137
  call void @llvm.dbg.value(metadata i8 %0, metadata !9135, metadata !DIExpression()), !dbg !9137
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_57, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9138
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !9136, metadata !DIExpression()), !dbg !9137
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !9139
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !9139
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_57, i8 noundef zeroext %0) #24, !dbg !9140
  ret void, !dbg !9141
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !9142 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_57, metadata !9144, metadata !DIExpression()), !dbg !9145
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_57) #24, !dbg !9146
  ret i1 %1, !dbg !9147
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #6 !dbg !9148 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !9197, metadata !DIExpression()), !dbg !9200
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !9198, metadata !DIExpression()), !dbg !9200
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !9199, metadata !DIExpression()), !dbg !9200
  ret void, !dbg !9201
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !9202 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9204, metadata !DIExpression()), !dbg !9209
  call void @llvm.dbg.value(metadata i8 %1, metadata !9205, metadata !DIExpression()), !dbg !9209
  call void @llvm.dbg.value(metadata i32 %2, metadata !9206, metadata !DIExpression()), !dbg !9209
  %5 = bitcast i32* %4 to i8*, !dbg !9210
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9210
  call void @llvm.dbg.value(metadata i32* %4, metadata !9208, metadata !DIExpression(DW_OP_deref)), !dbg !9209
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #25, !dbg !9211
  call void @llvm.dbg.value(metadata i32 %6, metadata !9207, metadata !DIExpression()), !dbg !9209
  %7 = icmp eq i32 %6, 0, !dbg !9212
  br i1 %7, label %8, label %31, !dbg !9214

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !9207, metadata !DIExpression()), !dbg !9209
  %9 = and i32 %2, 131072, !dbg !9215
  %10 = icmp eq i32 %9, 0, !dbg !9217
  br i1 %10, label %28, label %11, !dbg !9218

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !9219
  %13 = icmp eq i32 %12, 0, !dbg !9222
  br i1 %13, label %18, label %14, !dbg !9223

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !9224
  %16 = shl nuw i32 1, %15, !dbg !9224
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #25, !dbg !9226
  br label %25, !dbg !9227

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !9228
  %20 = icmp eq i32 %19, 0, !dbg !9230
  %21 = zext i8 %1 to i32, !dbg !9209
  br i1 %20, label %25, label %22, !dbg !9231

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !9232
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #25, !dbg !9234
  br label %25, !dbg !9235

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !9236
  %27 = load i32, i32* %4, align 4, !dbg !9237
  call void @llvm.dbg.value(metadata i32 %30, metadata !9208, metadata !DIExpression()), !dbg !9209
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #25, !dbg !9238
  br label %31, !dbg !9239

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !9236
  %30 = load i32, i32* %4, align 4, !dbg !9237
  call void @llvm.dbg.value(metadata i32 %30, metadata !9208, metadata !DIExpression()), !dbg !9209
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #25, !dbg !9238
  call void @llvm.dbg.value(metadata i32 0, metadata !9207, metadata !DIExpression()), !dbg !9209
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9240
  ret i32 %6, !dbg !9240
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #5 !dbg !9241 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9245, metadata !DIExpression()), !dbg !9250
  call void @llvm.dbg.value(metadata i32* %1, metadata !9246, metadata !DIExpression()), !dbg !9250
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9251
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9251
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9251
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9247, metadata !DIExpression()), !dbg !9250
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9252
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9252
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9252
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9249, metadata !DIExpression()), !dbg !9250
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #25, !dbg !9253
  store i32 %9, i32* %1, align 4, !dbg !9254
  ret i32 0, !dbg !9255
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #15 !dbg !9256 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9258, metadata !DIExpression()), !dbg !9264
  call void @llvm.dbg.value(metadata i32 %1, metadata !9259, metadata !DIExpression()), !dbg !9264
  call void @llvm.dbg.value(metadata i32 %2, metadata !9260, metadata !DIExpression()), !dbg !9264
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9265
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !9265
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !9265
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !9261, metadata !DIExpression()), !dbg !9264
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !9266
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !9266
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !9266
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !9262, metadata !DIExpression()), !dbg !9264
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #25, !dbg !9267
  call void @llvm.dbg.value(metadata i32 %10, metadata !9263, metadata !DIExpression()), !dbg !9264
  %11 = xor i32 %1, -1, !dbg !9268
  %12 = and i32 %10, %11, !dbg !9269
  %13 = and i32 %2, %1, !dbg !9270
  %14 = or i32 %12, %13, !dbg !9271
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #25, !dbg !9272
  ret i32 0, !dbg !9273
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !9274 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9276, metadata !DIExpression()), !dbg !9280
  call void @llvm.dbg.value(metadata i32 %1, metadata !9277, metadata !DIExpression()), !dbg !9280
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9281
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9281
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9281
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9278, metadata !DIExpression()), !dbg !9280
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9282
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9282
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9282
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9279, metadata !DIExpression()), !dbg !9280
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !9283
  store volatile i32 %1, i32* %9, align 4, !dbg !9283
  ret i32 0, !dbg !9284
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !9285 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9287, metadata !DIExpression()), !dbg !9291
  call void @llvm.dbg.value(metadata i32 %1, metadata !9288, metadata !DIExpression()), !dbg !9291
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9292
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9292
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9292
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9289, metadata !DIExpression()), !dbg !9291
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9293
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9293
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9293
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9290, metadata !DIExpression()), !dbg !9291
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #25, !dbg !9294
  ret i32 0, !dbg !9295
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !9296 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9298, metadata !DIExpression()), !dbg !9302
  call void @llvm.dbg.value(metadata i32 %1, metadata !9299, metadata !DIExpression()), !dbg !9302
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9303
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9303
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9303
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9300, metadata !DIExpression()), !dbg !9302
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9304
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9304
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9304
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9301, metadata !DIExpression()), !dbg !9302
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !9305
  %10 = load volatile i32, i32* %9, align 4, !dbg !9305
  %11 = xor i32 %10, %1, !dbg !9305
  store volatile i32 %11, i32* %9, align 4, !dbg !9305
  ret i32 0, !dbg !9306
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !9307 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9309, metadata !DIExpression()), !dbg !9319
  call void @llvm.dbg.value(metadata i8 %1, metadata !9310, metadata !DIExpression()), !dbg !9319
  call void @llvm.dbg.value(metadata i32 %2, metadata !9311, metadata !DIExpression()), !dbg !9319
  call void @llvm.dbg.value(metadata i32 %3, metadata !9312, metadata !DIExpression()), !dbg !9319
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9320
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9320
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9320
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9313, metadata !DIExpression()), !dbg !9319
  call void @llvm.dbg.value(metadata i8* undef, metadata !9314, metadata !DIExpression()), !dbg !9319
  call void @llvm.dbg.value(metadata i32 0, metadata !9316, metadata !DIExpression()), !dbg !9319
  call void @llvm.dbg.value(metadata i32 0, metadata !9317, metadata !DIExpression()), !dbg !9319
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !9321

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !9322
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #25, !dbg !9326
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9327
  %12 = load i32, i32* %11, align 4, !dbg !9327
  %13 = icmp eq i32 %10, %12, !dbg !9328
  br i1 %13, label %14, label %29, !dbg !9329

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #24, !dbg !9330
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #24, !dbg !9332
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #24, !dbg !9333
  br label %29, !dbg !9334

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9335
  %17 = load i8*, i8** %16, align 4, !dbg !9335
  call void @llvm.dbg.value(metadata i8* %17, metadata !9314, metadata !DIExpression()), !dbg !9319
  %18 = zext i8 %1 to i32, !dbg !9336
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #24, !dbg !9338
  %20 = icmp eq i32 %19, 0, !dbg !9339
  br i1 %20, label %21, label %29, !dbg !9340

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9341
  %23 = load i32, i32* %22, align 4, !dbg !9341
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #25, !dbg !9342
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !9343

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !9316, metadata !DIExpression()), !dbg !9319
  br label %27, !dbg !9344

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !9316, metadata !DIExpression()), !dbg !9319
  br label %27, !dbg !9346

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !9316, metadata !DIExpression()), !dbg !9319
  br label %27, !dbg !9347

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !9319
  call void @llvm.dbg.value(metadata i32 %28, metadata !9316, metadata !DIExpression()), !dbg !9319
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #24, !dbg !9348
  tail call void @stm32_exti_enable(i32 noundef %18) #24, !dbg !9349
  br label %29, !dbg !9349

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !9319
  call void @llvm.dbg.value(metadata i32 %30, metadata !9317, metadata !DIExpression()), !dbg !9319
  call void @llvm.dbg.label(metadata !9318), !dbg !9350
  ret i32 %30, !dbg !9351
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #1 !dbg !9352 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9354, metadata !DIExpression()), !dbg !9358
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9355, metadata !DIExpression()), !dbg !9358
  call void @llvm.dbg.value(metadata i1 %2, metadata !9356, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9358
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9359
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !9359
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !9359
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !9357, metadata !DIExpression()), !dbg !9358
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !9360
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #25, !dbg !9361
  ret i32 %8, !dbg !9362
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #1 !dbg !9363 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9369, metadata !DIExpression()), !dbg !9372
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9370, metadata !DIExpression()), !dbg !9372
  call void @llvm.dbg.value(metadata i1 %2, metadata !9371, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9372
  %4 = icmp eq %struct.gpio_callback* %1, null, !dbg !9373
  br i1 %4, label %5, label %6, !dbg !9376

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.11.107, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.37.108, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.35.109, i32 0, i32 0), i32 noundef 42) #24, !dbg !9377
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.38.110, i32 0, i32 0)) #24, !dbg !9377
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.35.109, i32 0, i32 0), i32 noundef 42) #24, !dbg !9377
  unreachable, !dbg !9377

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 1, !dbg !9379
  %8 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %7, align 4, !dbg !9379
  %9 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %8, null, !dbg !9379
  br i1 %9, label %10, label %11, !dbg !9382

10:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.11.107, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.39.111, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.35.109, i32 0, i32 0), i32 noundef 43) #24, !dbg !9383
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.36.112, i32 0, i32 0)) #24, !dbg !9383
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.35.109, i32 0, i32 0), i32 noundef 43) #24, !dbg !9383
  unreachable, !dbg !9383

11:                                               ; preds = %6
  %12 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #25, !dbg !9385
  br i1 %12, label %18, label %13, !dbg !9387

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9388
  %15 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef nonnull %14) #25, !dbg !9391
  %16 = or i1 %15, %2, !dbg !9392
  %17 = select i1 %16, i32 0, i32 -22, !dbg !9392
  br i1 %2, label %19, label %21, !dbg !9392

18:                                               ; preds = %11
  br i1 %2, label %19, label %21, !dbg !9393

19:                                               ; preds = %18, %13
  %20 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9394
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef nonnull %20) #25, !dbg !9397
  br label %21, !dbg !9398

21:                                               ; preds = %13, %19, %18
  %22 = phi i32 [ %17, %13 ], [ -22, %18 ], [ 0, %19 ], !dbg !9372
  ret i32 %22, !dbg !9399
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !9400 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9404, metadata !DIExpression()), !dbg !9405
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !9406
  %3 = icmp eq %struct._snode* %2, null, !dbg !9406
  ret i1 %3, !dbg !9406
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #14 !dbg !9407 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9411, metadata !DIExpression()), !dbg !9415
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9412, metadata !DIExpression()), !dbg !9415
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9413, metadata !DIExpression()), !dbg !9415
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !9416
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9414, metadata !DIExpression()), !dbg !9415
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9413, metadata !DIExpression()), !dbg !9415
  %4 = icmp eq %struct._snode* %3, null, !dbg !9418
  br i1 %4, label %15, label %5, !dbg !9416

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9414, metadata !DIExpression()), !dbg !9415
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9413, metadata !DIExpression()), !dbg !9415
  %6 = icmp eq %struct._snode* %3, %1, !dbg !9420
  br i1 %6, label %9, label %11, !dbg !9423

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9414, metadata !DIExpression()), !dbg !9415
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9413, metadata !DIExpression()), !dbg !9415
  %8 = icmp eq %struct._snode* %13, %1, !dbg !9420
  br i1 %8, label %9, label %11, !dbg !9423, !llvm.loop !9424

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #25, !dbg !9425
  br label %15, !dbg !9425

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9414, metadata !DIExpression()), !dbg !9415
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9413, metadata !DIExpression()), !dbg !9415
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #25, !dbg !9418
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9414, metadata !DIExpression()), !dbg !9415
  %14 = icmp eq %struct._snode* %13, null, !dbg !9418
  br i1 %14, label %15, label %7, !dbg !9416, !llvm.loop !9424

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !9427
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #11 !dbg !9428 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9432, metadata !DIExpression()), !dbg !9434
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9433, metadata !DIExpression()), !dbg !9434
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !9435
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #25, !dbg !9435
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #25, !dbg !9435
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #25, !dbg !9436
  %5 = icmp eq %struct._snode* %4, null, !dbg !9436
  br i1 %5, label %6, label %8, !dbg !9435

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !9438
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #25, !dbg !9438
  br label %8, !dbg !9438

8:                                                ; preds = %6, %2
  ret void, !dbg !9435
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !9440 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9444, metadata !DIExpression()), !dbg !9445
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9446
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9446
  ret %struct._snode* %3, !dbg !9447
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !9448 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9452, metadata !DIExpression()), !dbg !9454
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9453, metadata !DIExpression()), !dbg !9454
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9455
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9456
  ret void, !dbg !9457
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !9458 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9460, metadata !DIExpression()), !dbg !9462
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9461, metadata !DIExpression()), !dbg !9462
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9463
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9464
  ret void, !dbg !9465
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !9466 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9468, metadata !DIExpression()), !dbg !9469
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9470
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9470
  ret %struct._snode* %3, !dbg !9471
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !9472 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9474, metadata !DIExpression()), !dbg !9476
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9475, metadata !DIExpression()), !dbg !9476
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9477
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9478
  ret void, !dbg !9479
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #11 !dbg !9480 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9484, metadata !DIExpression()), !dbg !9487
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9485, metadata !DIExpression()), !dbg !9487
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !9486, metadata !DIExpression()), !dbg !9487
  %4 = icmp eq %struct._snode* %1, null, !dbg !9488
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #25, !dbg !9490
  br i1 %4, label %6, label %11, !dbg !9491

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #25, !dbg !9492
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #25, !dbg !9494
  %8 = icmp eq %struct._snode* %7, %2, !dbg !9494
  br i1 %8, label %9, label %15, !dbg !9492

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !9496
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #25, !dbg !9496
  br label %15, !dbg !9496

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #25, !dbg !9498
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #25, !dbg !9500
  %13 = icmp eq %struct._snode* %12, %2, !dbg !9500
  br i1 %13, label %14, label %15, !dbg !9498

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #25, !dbg !9502
  br label %15, !dbg !9502

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #25, !dbg !9491
  ret void, !dbg !9491
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #10 !dbg !9504 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9508, metadata !DIExpression()), !dbg !9509
  %2 = icmp eq %struct._snode* %0, null, !dbg !9510
  br i1 %2, label %5, label %3, !dbg !9510

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #25, !dbg !9510
  br label %5, !dbg !9510

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !9510
  ret %struct._snode* %6, !dbg !9510
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !9511 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9513, metadata !DIExpression()), !dbg !9514
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #25, !dbg !9515
  ret %struct._snode* %2, !dbg !9515
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !9516 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9518, metadata !DIExpression()), !dbg !9519
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9520
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9520
  ret %struct._snode* %3, !dbg !9521
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !9522 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9524, metadata !DIExpression()), !dbg !9527
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #25, !dbg !9528, !range !9529
  call void @llvm.dbg.value(metadata i32 %2, metadata !9525, metadata !DIExpression()), !dbg !9527
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #25, !dbg !9530
  call void @llvm.dbg.value(metadata i32 %3, metadata !9526, metadata !DIExpression()), !dbg !9527
  ret i32 %3, !dbg !9531
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !9532 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9534, metadata !DIExpression()), !dbg !9537
  call void @llvm.dbg.value(metadata i8* %1, metadata !9535, metadata !DIExpression()), !dbg !9537
  call void @llvm.dbg.value(metadata i8* %1, metadata !9536, metadata !DIExpression()), !dbg !9537
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !9538
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !9538
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9539
  %6 = bitcast i8* %5 to %struct.device**, !dbg !9539
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !9539
  %8 = shl nuw i32 1, %0, !dbg !9540
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #25, !dbg !9541
  ret void, !dbg !9542
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9543 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !9547, metadata !DIExpression()), !dbg !9553
  call void @llvm.dbg.value(metadata i32 %1, metadata !9548, metadata !DIExpression()), !dbg !9553
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9549, metadata !DIExpression()), !dbg !9553
  %4 = bitcast i64* %3 to i8*, !dbg !9554
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #23, !dbg !9554
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !9551, metadata !DIExpression()), !dbg !9553
  store i64 70368744177732, i64* %3, align 8, !dbg !9555
  call void @llvm.dbg.value(metadata i64* %3, metadata !9551, metadata !DIExpression(DW_OP_deref)), !dbg !9553
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #25, !dbg !9556
  call void @llvm.dbg.value(metadata i32 %5, metadata !9552, metadata !DIExpression()), !dbg !9553
  %6 = icmp eq i32 %5, 0, !dbg !9557
  br i1 %6, label %7, label %8, !dbg !9559

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #25, !dbg !9560
  br label %8, !dbg !9561

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #23, !dbg !9562
  ret void, !dbg !9562
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !9563 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9565, metadata !DIExpression()), !dbg !9568
  call void @llvm.dbg.value(metadata i8* %0, metadata !9566, metadata !DIExpression()), !dbg !9568
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !9569
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !9567, metadata !DIExpression()), !dbg !9568
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !9570
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !9570
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #24, !dbg !9571
  ret i32 %5, !dbg !9572
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9573 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9575, metadata !DIExpression()), !dbg !9578
  call void @llvm.dbg.value(metadata i32 %1, metadata !9576, metadata !DIExpression()), !dbg !9578
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #25, !dbg !9579
  call void @llvm.dbg.value(metadata i32 %3, metadata !9577, metadata !DIExpression()), !dbg !9578
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #25, !dbg !9580
  ret void, !dbg !9581
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #6 !dbg !9582 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9586, metadata !DIExpression()), !dbg !9587
  %2 = sdiv i32 %0, 4, !dbg !9588
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !9589
  %6 = add nsw i32 %5, 16, !dbg !9590
  %7 = shl i32 15, %6, !dbg !9591
  %8 = or i32 %7, %2, !dbg !9592
  ret i32 %8, !dbg !9593
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9594 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9598, metadata !DIExpression()), !dbg !9600
  call void @llvm.dbg.value(metadata i32 %1, metadata !9599, metadata !DIExpression()), !dbg !9600
  %3 = and i32 %1, 255, !dbg !9601
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !9601
  %5 = load volatile i32, i32* %4, align 4, !dbg !9601
  %6 = lshr i32 %1, 16, !dbg !9601
  %7 = xor i32 %6, -1, !dbg !9601
  %8 = and i32 %5, %7, !dbg !9601
  call void @llvm.dbg.value(metadata i32 %6, metadata !9602, metadata !DIExpression()) #23, !dbg !9606
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !9608, !srcloc !9609
  call void @llvm.dbg.value(metadata i32 %9, metadata !9605, metadata !DIExpression()) #23, !dbg !9606
  call void @llvm.dbg.value(metadata i32 %9, metadata !9610, metadata !DIExpression()) #23, !dbg !9615
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #23, !dbg !9617, !range !7647
  %11 = shl i32 %0, %10, !dbg !9601
  %12 = or i32 %11, %8, !dbg !9601
  store volatile i32 %12, i32* %4, align 4, !dbg !9601
  ret void, !dbg !9618
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9619 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9623, metadata !DIExpression()), !dbg !9628
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !9624, metadata !DIExpression()), !dbg !9628
  call void @llvm.dbg.value(metadata i32 %2, metadata !9625, metadata !DIExpression()), !dbg !9628
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !9629
  %5 = icmp eq %struct._snode* %4, null, !dbg !9629
  br i1 %5, label %24, label %6, !dbg !9629

6:                                                ; preds = %3, %22
  %7 = phi %struct._snode* [ %8, %22 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #25, !dbg !9631
  %9 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9627, metadata !DIExpression()), !dbg !9628
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %9, metadata !9626, metadata !DIExpression()), !dbg !9628
  %10 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !9632
  %11 = bitcast %struct._snode* %10 to i32*, !dbg !9632
  %12 = load i32, i32* %11, align 4, !dbg !9632
  %13 = and i32 %12, %2, !dbg !9636
  %14 = icmp eq i32 %13, 0, !dbg !9636
  br i1 %14, label %22, label %15, !dbg !9637

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !9638
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !9638
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !9638
  %19 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %18, null, !dbg !9638
  br i1 %19, label %20, label %21, !dbg !9642

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.11.107, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.34.113, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.35.109, i32 0, i32 0), i32 noundef 77) #24, !dbg !9643
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.36.112, i32 0, i32 0)) #24, !dbg !9643
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.35.109, i32 0, i32 0), i32 noundef 77) #24, !dbg !9643
  unreachable, !dbg !9643

21:                                               ; preds = %15
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %9, i32 noundef %13) #24, !dbg !9645
  br label %22, !dbg !9646

22:                                               ; preds = %6, %21
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9626, metadata !DIExpression()), !dbg !9628
  %23 = icmp eq %struct._snode* %8, null, !dbg !9647
  br i1 %23, label %24, label %6, !dbg !9647

24:                                               ; preds = %22, %3
  ret void, !dbg !9648
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !9649 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9651, metadata !DIExpression()), !dbg !9652
  %2 = and i32 %0, 255, !dbg !9653
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !9653
  %4 = load volatile i32, i32* %3, align 4, !dbg !9653
  %5 = lshr i32 %0, 16, !dbg !9653
  %6 = and i32 %4, %5, !dbg !9653
  call void @llvm.dbg.value(metadata i32 %5, metadata !9602, metadata !DIExpression()) #23, !dbg !9654
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #28, !dbg !9656, !srcloc !9609
  call void @llvm.dbg.value(metadata i32 %7, metadata !9605, metadata !DIExpression()) #23, !dbg !9654
  call void @llvm.dbg.value(metadata i32 %7, metadata !9610, metadata !DIExpression()) #23, !dbg !9657
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !9659, !range !7647
  %9 = lshr i32 %6, %8, !dbg !9660
  ret i32 %9, !dbg !9661
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9662 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9667, metadata !DIExpression()), !dbg !9669
  call void @llvm.dbg.value(metadata i32 %1, metadata !9668, metadata !DIExpression()), !dbg !9669
  %3 = shl i32 %1, 16, !dbg !9670
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !9670
  store volatile i32 %3, i32* %4, align 4, !dbg !9670
  ret void, !dbg !9671
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #5 !dbg !9672 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9676, metadata !DIExpression()), !dbg !9677
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9678
  %3 = load volatile i32, i32* %2, align 4, !dbg !9678
  ret i32 %3, !dbg !9679
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9680 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9682, metadata !DIExpression()), !dbg !9684
  call void @llvm.dbg.value(metadata i32 %1, metadata !9683, metadata !DIExpression()), !dbg !9684
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9685
  store volatile i32 %1, i32* %3, align 4, !dbg !9685
  ret void, !dbg !9686
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #5 !dbg !9687 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9689, metadata !DIExpression()), !dbg !9690
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !9691
  %3 = load volatile i32, i32* %2, align 4, !dbg !9691
  ret i32 %3, !dbg !9692
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #11 !dbg !9693 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9697, metadata !DIExpression()), !dbg !9699
  call void @llvm.dbg.value(metadata i32* %1, metadata !9698, metadata !DIExpression()), !dbg !9699
  %3 = and i32 %0, 131072, !dbg !9700
  %4 = icmp eq i32 %3, 0, !dbg !9702
  br i1 %4, label %22, label %5, !dbg !9703

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !9704
  %6 = and i32 %0, 2, !dbg !9706
  %7 = icmp eq i32 %6, 0, !dbg !9708
  br i1 %7, label %11, label %8, !dbg !9709

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !9710
  %10 = icmp eq i32 %9, 0, !dbg !9710
  br i1 %10, label %33, label %11, !dbg !9713

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !9714
  store i32 %12, i32* %1, align 4, !dbg !9714
  %13 = and i32 %0, 16, !dbg !9715
  %14 = icmp eq i32 %13, 0, !dbg !9717
  br i1 %14, label %17, label %15, !dbg !9718

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !9719
  br label %31, !dbg !9721

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !9722
  %19 = icmp eq i32 %18, 0, !dbg !9724
  br i1 %19, label %33, label %20, !dbg !9725

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !9726
  br label %31, !dbg !9728

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !9729
  %24 = icmp eq i32 %23, 0, !dbg !9731
  br i1 %24, label %31, label %25, !dbg !9732

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !9733
  %27 = icmp eq i32 %26, 0, !dbg !9736
  br i1 %27, label %28, label %31, !dbg !9737

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !9738
  br label %33, !dbg !9739

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !9699
  ret i32 %34, !dbg !9739
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !9740 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9744, metadata !DIExpression()), !dbg !9755
  call void @llvm.dbg.value(metadata i32 %1, metadata !9745, metadata !DIExpression()), !dbg !9755
  call void @llvm.dbg.value(metadata i32 %2, metadata !9746, metadata !DIExpression()), !dbg !9755
  call void @llvm.dbg.value(metadata i32 %3, metadata !9747, metadata !DIExpression()), !dbg !9755
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9756
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9756
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9756
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9748, metadata !DIExpression()), !dbg !9755
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !9757
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !9757
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !9757
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !9749, metadata !DIExpression()), !dbg !9755
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #25, !dbg !9758
  call void @llvm.dbg.value(metadata i32 %11, metadata !9750, metadata !DIExpression()), !dbg !9755
  %12 = and i32 %2, 48, !dbg !9759
  call void @llvm.dbg.value(metadata i32 %12, metadata !9751, metadata !DIExpression()), !dbg !9755
  call void @llvm.dbg.value(metadata i32 %2, metadata !9752, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !9755
  call void @llvm.dbg.value(metadata i32 %2, metadata !9753, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !9755
  call void @llvm.dbg.value(metadata i32 %2, metadata !9754, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !9755
  %13 = lshr i32 %2, 6, !dbg !9760
  %14 = and i32 %13, 1, !dbg !9760
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #25, !dbg !9761
  %15 = lshr i32 %2, 7, !dbg !9762
  %16 = and i32 %15, 3, !dbg !9762
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #25, !dbg !9763
  %17 = lshr i32 %2, 9, !dbg !9764
  %18 = and i32 %17, 3, !dbg !9764
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #25, !dbg !9765
  %19 = icmp eq i32 %12, 32, !dbg !9766
  br i1 %19, label %20, label %24, !dbg !9768

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !9769
  br i1 %21, label %22, label %23, !dbg !9772

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #25, !dbg !9773
  br label %24, !dbg !9775

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #25, !dbg !9776
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !9778
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #25, !dbg !9779
  ret void, !dbg !9780
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #6 !dbg !9781 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9783, metadata !DIExpression()), !dbg !9785
  %2 = shl nuw i32 1, %0, !dbg !9786
  call void @llvm.dbg.value(metadata i32 %2, metadata !9784, metadata !DIExpression()), !dbg !9785
  ret i32 %2, !dbg !9787
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !9788 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9792, metadata !DIExpression()), !dbg !9795
  call void @llvm.dbg.value(metadata i32 %1, metadata !9793, metadata !DIExpression()), !dbg !9795
  call void @llvm.dbg.value(metadata i32 %2, metadata !9794, metadata !DIExpression()), !dbg !9795
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !9796
  %5 = load volatile i32, i32* %4, align 4, !dbg !9796
  %6 = xor i32 %1, -1, !dbg !9796
  %7 = and i32 %5, %6, !dbg !9796
  %8 = mul i32 %2, %1, !dbg !9796
  %9 = or i32 %7, %8, !dbg !9796
  store volatile i32 %9, i32* %4, align 4, !dbg !9796
  ret void, !dbg !9797
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9798 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9800, metadata !DIExpression()), !dbg !9803
  call void @llvm.dbg.value(metadata i32 %1, metadata !9801, metadata !DIExpression()), !dbg !9803
  call void @llvm.dbg.value(metadata i32 %2, metadata !9802, metadata !DIExpression()), !dbg !9803
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !9804
  %5 = load volatile i32, i32* %4, align 4, !dbg !9804
  call void @llvm.dbg.value(metadata i32 %1, metadata !9602, metadata !DIExpression()) #23, !dbg !9805
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9807, !srcloc !9609
  call void @llvm.dbg.value(metadata i32 %6, metadata !9605, metadata !DIExpression()) #23, !dbg !9805
  call void @llvm.dbg.value(metadata i32 %6, metadata !9610, metadata !DIExpression()) #23, !dbg !9808
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9810, !range !7647
  %8 = shl nuw nsw i32 %7, 1, !dbg !9804
  %9 = shl i32 3, %8, !dbg !9804
  %10 = xor i32 %9, -1, !dbg !9804
  %11 = and i32 %5, %10, !dbg !9804
  call void @llvm.dbg.value(metadata i32 %1, metadata !9602, metadata !DIExpression()) #23, !dbg !9811
  call void @llvm.dbg.value(metadata i32 %6, metadata !9605, metadata !DIExpression()) #23, !dbg !9811
  call void @llvm.dbg.value(metadata i32 %6, metadata !9610, metadata !DIExpression()) #23, !dbg !9813
  %12 = shl i32 %2, %8, !dbg !9804
  %13 = or i32 %11, %12, !dbg !9804
  store volatile i32 %13, i32* %4, align 4, !dbg !9804
  ret void, !dbg !9815
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9816 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9818, metadata !DIExpression()), !dbg !9821
  call void @llvm.dbg.value(metadata i32 %1, metadata !9819, metadata !DIExpression()), !dbg !9821
  call void @llvm.dbg.value(metadata i32 %2, metadata !9820, metadata !DIExpression()), !dbg !9821
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !9822
  %5 = load volatile i32, i32* %4, align 4, !dbg !9822
  call void @llvm.dbg.value(metadata i32 %1, metadata !9602, metadata !DIExpression()) #23, !dbg !9823
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9825, !srcloc !9609
  call void @llvm.dbg.value(metadata i32 %6, metadata !9605, metadata !DIExpression()) #23, !dbg !9823
  call void @llvm.dbg.value(metadata i32 %6, metadata !9610, metadata !DIExpression()) #23, !dbg !9826
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9828, !range !7647
  %8 = shl nuw nsw i32 %7, 1, !dbg !9822
  %9 = shl i32 3, %8, !dbg !9822
  %10 = xor i32 %9, -1, !dbg !9822
  %11 = and i32 %5, %10, !dbg !9822
  call void @llvm.dbg.value(metadata i32 %1, metadata !9602, metadata !DIExpression()) #23, !dbg !9829
  call void @llvm.dbg.value(metadata i32 %6, metadata !9605, metadata !DIExpression()) #23, !dbg !9829
  call void @llvm.dbg.value(metadata i32 %6, metadata !9610, metadata !DIExpression()) #23, !dbg !9831
  %12 = shl i32 %2, %8, !dbg !9822
  %13 = or i32 %11, %12, !dbg !9822
  store volatile i32 %13, i32* %4, align 4, !dbg !9822
  ret void, !dbg !9833
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9834 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9836, metadata !DIExpression()), !dbg !9839
  call void @llvm.dbg.value(metadata i32 %1, metadata !9837, metadata !DIExpression()), !dbg !9839
  call void @llvm.dbg.value(metadata i32 %2, metadata !9838, metadata !DIExpression()), !dbg !9839
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !9840
  %5 = load volatile i32, i32* %4, align 4, !dbg !9840
  call void @llvm.dbg.value(metadata i32 %1, metadata !9602, metadata !DIExpression()) #23, !dbg !9841
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9843, !srcloc !9609
  call void @llvm.dbg.value(metadata i32 %6, metadata !9605, metadata !DIExpression()) #23, !dbg !9841
  call void @llvm.dbg.value(metadata i32 %6, metadata !9610, metadata !DIExpression()) #23, !dbg !9844
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9846, !range !7647
  %8 = shl nuw nsw i32 %7, 2, !dbg !9840
  %9 = shl i32 15, %8, !dbg !9840
  %10 = xor i32 %9, -1, !dbg !9840
  %11 = and i32 %5, %10, !dbg !9840
  call void @llvm.dbg.value(metadata i32 %1, metadata !9602, metadata !DIExpression()) #23, !dbg !9847
  call void @llvm.dbg.value(metadata i32 %6, metadata !9605, metadata !DIExpression()) #23, !dbg !9847
  call void @llvm.dbg.value(metadata i32 %6, metadata !9610, metadata !DIExpression()) #23, !dbg !9849
  %12 = shl i32 %2, %8, !dbg !9840
  %13 = or i32 %11, %12, !dbg !9840
  store volatile i32 %13, i32* %4, align 4, !dbg !9840
  ret void, !dbg !9851
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9852 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9854, metadata !DIExpression()), !dbg !9857
  call void @llvm.dbg.value(metadata i32 %1, metadata !9855, metadata !DIExpression()), !dbg !9857
  call void @llvm.dbg.value(metadata i32 %2, metadata !9856, metadata !DIExpression()), !dbg !9857
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !9858
  %5 = load volatile i32, i32* %4, align 4, !dbg !9858
  %6 = lshr i32 %1, 8, !dbg !9858
  call void @llvm.dbg.value(metadata i32 %6, metadata !9602, metadata !DIExpression()) #23, !dbg !9859
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !9861, !srcloc !9609
  call void @llvm.dbg.value(metadata i32 %7, metadata !9605, metadata !DIExpression()) #23, !dbg !9859
  call void @llvm.dbg.value(metadata i32 %7, metadata !9610, metadata !DIExpression()) #23, !dbg !9862
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !9864, !range !7647
  %9 = shl nuw nsw i32 %8, 2, !dbg !9858
  %10 = shl i32 15, %9, !dbg !9858
  %11 = xor i32 %10, -1, !dbg !9858
  %12 = and i32 %5, %11, !dbg !9858
  call void @llvm.dbg.value(metadata i32 %6, metadata !9602, metadata !DIExpression()) #23, !dbg !9865
  call void @llvm.dbg.value(metadata i32 %7, metadata !9605, metadata !DIExpression()) #23, !dbg !9865
  call void @llvm.dbg.value(metadata i32 %7, metadata !9610, metadata !DIExpression()) #23, !dbg !9867
  %13 = shl i32 %2, %9, !dbg !9858
  %14 = or i32 %12, %13, !dbg !9858
  store volatile i32 %14, i32* %4, align 4, !dbg !9858
  ret void, !dbg !9869
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9870 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9872, metadata !DIExpression()), !dbg !9875
  call void @llvm.dbg.value(metadata i32 %1, metadata !9873, metadata !DIExpression()), !dbg !9875
  call void @llvm.dbg.value(metadata i32 %2, metadata !9874, metadata !DIExpression()), !dbg !9875
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !9876
  %5 = load volatile i32, i32* %4, align 4, !dbg !9876
  call void @llvm.dbg.value(metadata i32 %1, metadata !9602, metadata !DIExpression()) #23, !dbg !9877
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9879, !srcloc !9609
  call void @llvm.dbg.value(metadata i32 %6, metadata !9605, metadata !DIExpression()) #23, !dbg !9877
  call void @llvm.dbg.value(metadata i32 %6, metadata !9610, metadata !DIExpression()) #23, !dbg !9880
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9882, !range !7647
  %8 = shl nuw nsw i32 %7, 1, !dbg !9876
  %9 = shl i32 3, %8, !dbg !9876
  %10 = xor i32 %9, -1, !dbg !9876
  %11 = and i32 %5, %10, !dbg !9876
  call void @llvm.dbg.value(metadata i32 %1, metadata !9602, metadata !DIExpression()) #23, !dbg !9883
  call void @llvm.dbg.value(metadata i32 %6, metadata !9605, metadata !DIExpression()) #23, !dbg !9883
  call void @llvm.dbg.value(metadata i32 %6, metadata !9610, metadata !DIExpression()) #23, !dbg !9885
  %12 = shl i32 %2, %8, !dbg !9876
  %13 = or i32 %11, %12, !dbg !9876
  store volatile i32 %13, i32* %4, align 4, !dbg !9876
  ret void, !dbg !9887
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !9888 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9890, metadata !DIExpression()), !dbg !9893
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9894
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !9894
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !9894
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !9891, metadata !DIExpression()), !dbg !9893
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !9895
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !9896
  %6 = tail call fastcc zeroext i1 @device_is_ready.125() #25, !dbg !9897
  br i1 %6, label %7, label %11, !dbg !9899

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #25, !dbg !9900
  call void @llvm.dbg.value(metadata i32 %8, metadata !9892, metadata !DIExpression()), !dbg !9893
  %9 = icmp slt i32 %8, 0, !dbg !9901
  %10 = select i1 %9, i32 %8, i32 0, !dbg !9903
  br label %11, !dbg !9903

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !9893
  ret i32 %12, !dbg !9904
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.125() unnamed_addr #1 !dbg !9905 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9909, metadata !DIExpression()), !dbg !9910
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9911, !srcloc !9913
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.126() #25, !dbg !9914
  ret i1 %1, !dbg !9915
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef readonly %0) unnamed_addr #1 !dbg !9916 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9920, metadata !DIExpression()), !dbg !9925
  call void @llvm.dbg.value(metadata i8 1, metadata !9921, metadata !DIExpression()), !dbg !9925
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9926
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !9926
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !9926
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !9922, metadata !DIExpression()), !dbg !9925
  call void @llvm.dbg.value(metadata i32 0, metadata !9923, metadata !DIExpression()), !dbg !9925
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9924, metadata !DIExpression()), !dbg !9925
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !9927
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !9930
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #25, !dbg !9931
  call void @llvm.dbg.value(metadata i32 %7, metadata !9923, metadata !DIExpression()), !dbg !9925
  ret i32 %7, !dbg !9932
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.126() unnamed_addr #1 !dbg !9933 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9935, metadata !DIExpression()), !dbg !9936
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #24, !dbg !9937
  ret i1 %1, !dbg !9938
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !9939 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9943, metadata !DIExpression()), !dbg !9951
  call void @llvm.dbg.value(metadata i32 %1, metadata !9944, metadata !DIExpression()), !dbg !9951
  call void @llvm.dbg.value(metadata i32 %2, metadata !9945, metadata !DIExpression()), !dbg !9951
  call void @llvm.dbg.value(metadata i32 %3, metadata !9946, metadata !DIExpression()), !dbg !9951
  call void @llvm.dbg.value(metadata i32 0, metadata !9947, metadata !DIExpression()), !dbg !9951
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #25, !dbg !9952
  %5 = icmp eq i32 %3, 17, !dbg !9953
  br i1 %5, label %6, label %14, !dbg !9954

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !9955
  call void @llvm.dbg.value(metadata i32 %7, metadata !9948, metadata !DIExpression()), !dbg !9956
  %8 = icmp eq i32 %7, 0, !dbg !9957
  %9 = shl nuw i32 1, %1, !dbg !9959
  br i1 %8, label %12, label %10, !dbg !9960

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #25, !dbg !9961
  br label %14, !dbg !9963

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #25, !dbg !9964
  br label %14, !dbg !9967

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !9968
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #19 !dbg !9969 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9971, metadata !DIExpression()), !dbg !9975
  call void @llvm.dbg.value(metadata i8* %1, metadata !9972, metadata !DIExpression()), !dbg !9975
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9976
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9976
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9976
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9973, metadata !DIExpression()), !dbg !9975
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9977
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9977
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #25, !dbg !9979
  %9 = icmp eq i32 %8, 0, !dbg !9979
  br i1 %9, label %12, label %10, !dbg !9980

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9981
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #25, !dbg !9983
  br label %12, !dbg !9984

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9985
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #25, !dbg !9987
  %15 = icmp eq i32 %14, 0, !dbg !9987
  br i1 %15, label %19, label %16, !dbg !9988

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9989
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #25, !dbg !9990
  store i8 %18, i8* %1, align 1, !dbg !9991
  br label %19, !dbg !9992

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !9975
  ret i32 %20, !dbg !9993
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !9994 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9996, metadata !DIExpression()), !dbg !10000
  call void @llvm.dbg.value(metadata i8 %1, metadata !9997, metadata !DIExpression()), !dbg !10000
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10001
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10001
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10001
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9998, metadata !DIExpression()), !dbg !10000
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !10002

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10003
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #25, !dbg !10006
  %10 = icmp eq i32 %9, 0, !dbg !10006
  br i1 %10, label %18, label %11, !dbg !10007

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10008, !srcloc !10015
  call void @llvm.dbg.value(metadata i32 undef, metadata !10011, metadata !DIExpression()) #23, !dbg !10016
  call void @llvm.dbg.value(metadata i32 undef, metadata !10012, metadata !DIExpression()) #23, !dbg !10016
  call void @llvm.dbg.value(metadata i32 undef, metadata !9999, metadata !DIExpression()), !dbg !10000
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10017
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #25, !dbg !10019
  %15 = icmp eq i32 %14, 0, !dbg !10019
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !10008
  br i1 %15, label %17, label %19, !dbg !10020

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !10011, metadata !DIExpression()) #23, !dbg !10016
  call void @llvm.dbg.value(metadata i32 %16, metadata !9999, metadata !DIExpression()), !dbg !10000
  call void @llvm.dbg.value(metadata i32 undef, metadata !10021, metadata !DIExpression()) #23, !dbg !10024
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !10026, !srcloc !10027
  br label %18, !dbg !10028

18:                                               ; preds = %17, %7
  br label %7, !dbg !10003, !llvm.loop !10029

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !10008
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10031
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #25, !dbg !10032
  call void @llvm.dbg.value(metadata i32 %20, metadata !10021, metadata !DIExpression()) #23, !dbg !10033
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !10035, !srcloc !10027
  ret void, !dbg !10036
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #19 !dbg !10037 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10039, metadata !DIExpression()), !dbg !10042
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10043
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10043
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10043
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10040, metadata !DIExpression()), !dbg !10042
  call void @llvm.dbg.value(metadata i32 0, metadata !10041, metadata !DIExpression()), !dbg !10042
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10044
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10044
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #25, !dbg !10046
  %8 = icmp ne i32 %7, 0, !dbg !10046
  %9 = zext i1 %8 to i32, !dbg !10047
  call void @llvm.dbg.value(metadata i32 %9, metadata !10041, metadata !DIExpression()), !dbg !10042
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10048
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #25, !dbg !10050
  %12 = icmp eq i32 %11, 0, !dbg !10050
  %13 = or i32 %9, 2, !dbg !10051
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !10051
  call void @llvm.dbg.value(metadata i32 %14, metadata !10041, metadata !DIExpression()), !dbg !10042
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10052
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #25, !dbg !10054
  %17 = icmp eq i32 %16, 0, !dbg !10054
  %18 = or i32 %14, 4, !dbg !10055
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !10055
  call void @llvm.dbg.value(metadata i32 %19, metadata !10041, metadata !DIExpression()), !dbg !10042
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10056
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #25, !dbg !10058
  %22 = icmp eq i32 %21, 0, !dbg !10058
  %23 = or i32 %19, 8, !dbg !10059
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !10059
  call void @llvm.dbg.value(metadata i32 %24, metadata !10041, metadata !DIExpression()), !dbg !10042
  %25 = and i32 %24, 8, !dbg !10060
  %26 = icmp eq i32 %25, 0, !dbg !10060
  br i1 %26, label %29, label %27, !dbg !10062

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10063
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #25, !dbg !10065
  br label %29, !dbg !10066

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !10067
  %31 = icmp eq i32 %30, 0, !dbg !10067
  br i1 %31, label %34, label %32, !dbg !10069

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10070
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #25, !dbg !10072
  br label %34, !dbg !10073

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !10074
  %36 = icmp eq i32 %35, 0, !dbg !10074
  br i1 %36, label %39, label %37, !dbg !10076

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10077
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #25, !dbg !10079
  br label %39, !dbg !10080

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !10081
  %41 = icmp eq i32 %40, 0, !dbg !10081
  br i1 %41, label %44, label %42, !dbg !10083

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10084
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #25, !dbg !10086
  br label %44, !dbg !10087

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10088
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #25, !dbg !10089
  ret i32 %24, !dbg !10090
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !10091 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10093, metadata !DIExpression()), !dbg !10102
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10094, metadata !DIExpression()), !dbg !10102
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10103
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10103
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10103
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10095, metadata !DIExpression()), !dbg !10102
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10104
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !10104
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !10104
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !10096, metadata !DIExpression()), !dbg !10102
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10105
  %10 = load i8, i8* %9, align 4, !dbg !10105
  %11 = zext i8 %10 to i32, !dbg !10106
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #25, !dbg !10107
  call void @llvm.dbg.value(metadata i32 %12, metadata !10098, metadata !DIExpression()), !dbg !10102
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10108
  %14 = load i8, i8* %13, align 1, !dbg !10108
  %15 = zext i8 %14 to i32, !dbg !10109
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #25, !dbg !10110
  call void @llvm.dbg.value(metadata i32 %16, metadata !10099, metadata !DIExpression()), !dbg !10102
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10111
  %18 = load i8, i8* %17, align 2, !dbg !10111
  %19 = zext i8 %18 to i32, !dbg !10112
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #25, !dbg !10113
  call void @llvm.dbg.value(metadata i32 %20, metadata !10100, metadata !DIExpression()), !dbg !10102
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10114
  %22 = load i8, i8* %21, align 1, !dbg !10114
  %23 = zext i8 %22 to i32, !dbg !10115
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #25, !dbg !10116
  call void @llvm.dbg.value(metadata i32 %24, metadata !10101, metadata !DIExpression()), !dbg !10102
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !10117

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !10119
  br i1 %26, label %69, label %27, !dbg !10121

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !10122

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !10123
  br i1 %29, label %65, label %30, !dbg !10123

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !10125
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !10102
  br i1 %31, label %38, label %34, !dbg !10127

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !10128
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
    i32 1073812480, label %36
  ], !dbg !10128

36:                                               ; preds = %34, %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !10131
  br i1 %37, label %38, label %69, !dbg !10132

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10133
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #25, !dbg !10134
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #25, !dbg !10135
  %41 = icmp eq i32 %12, %40, !dbg !10137
  br i1 %41, label %43, label %42, !dbg !10138

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #25, !dbg !10139
  br label %43, !dbg !10141

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #25, !dbg !10142
  %45 = icmp eq i32 %16, %44, !dbg !10144
  br i1 %45, label %47, label %46, !dbg !10145

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #25, !dbg !10146
  br label %47, !dbg !10148

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #25, !dbg !10149
  %49 = icmp eq i32 %20, %48, !dbg !10151
  br i1 %49, label %51, label %50, !dbg !10152

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #25, !dbg !10153
  br label %51, !dbg !10155

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #25, !dbg !10156
  %53 = icmp eq i32 %24, %52, !dbg !10158
  br i1 %53, label %55, label %54, !dbg !10159

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #25, !dbg !10160
  br label %55, !dbg !10162

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10163
  %57 = load i32, i32* %56, align 4, !dbg !10163
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !10165
  %59 = load i32, i32* %58, align 4, !dbg !10165
  %60 = icmp eq i32 %57, %59, !dbg !10166
  br i1 %60, label %63, label %61, !dbg !10167

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #25, !dbg !10168
  %62 = load i32, i32* %56, align 4, !dbg !10170
  store i32 %62, i32* %58, align 4, !dbg !10171
  br label %63, !dbg !10172

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !10173
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #25, !dbg !10174
  br label %69, !dbg !10175

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !10123
  %67 = and i8 %66, 1, !dbg !10123
  %68 = icmp eq i8 %67, 0, !dbg !10123
  br i1 %68, label %30, label %69, !dbg !10123

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !10102
  ret i32 %70, !dbg !10176
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #20 !dbg !10177 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10179, metadata !DIExpression()), !dbg !10182
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10180, metadata !DIExpression()), !dbg !10182
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10183
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !10183
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !10183
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !10181, metadata !DIExpression()), !dbg !10182
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !10184
  %7 = load i32, i32* %6, align 4, !dbg !10184
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10185
  store i32 %7, i32* %8, align 4, !dbg !10186
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #25, !dbg !10187, !range !10188
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #25, !dbg !10189
  %11 = trunc i32 %10 to i8, !dbg !10189
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10190
  store i8 %11, i8* %12, align 4, !dbg !10191
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #25, !dbg !10192, !range !10193
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #25, !dbg !10194
  %15 = trunc i32 %14 to i8, !dbg !10194
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10195
  store i8 %15, i8* %16, align 1, !dbg !10196
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #25, !dbg !10197
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #25, !dbg !10198, !range !10188
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #25, !dbg !10199
  %20 = trunc i32 %19 to i8, !dbg !10199
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10200
  store i8 %20, i8* %21, align 2, !dbg !10201
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #25, !dbg !10202, !range !10203
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #25, !dbg !10204
  %24 = trunc i32 %23 to i8, !dbg !10204
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10205
  store i8 %24, i8* %25, align 1, !dbg !10206
  ret i32 0, !dbg !10207
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #5 !dbg !10208 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10212, metadata !DIExpression()), !dbg !10214
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10215
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10215
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10215
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10213, metadata !DIExpression()), !dbg !10214
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10216
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10216
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #25, !dbg !10217
  ret i32 %7, !dbg !10218
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #6 !dbg !10219 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10223, metadata !DIExpression()), !dbg !10224
  %2 = icmp eq i32 %0, 1024, !dbg !10225
  %3 = select i1 %2, i32 2, i32 0, !dbg !10225
  %4 = icmp eq i32 %0, 1536, !dbg !10225
  %5 = select i1 %4, i32 1, i32 %3, !dbg !10225
  ret i32 %5, !dbg !10226
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #5 !dbg !10227 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10229, metadata !DIExpression()), !dbg !10231
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10232
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10232
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10232
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10230, metadata !DIExpression()), !dbg !10231
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10233
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10233
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #25, !dbg !10234
  ret i32 %7, !dbg !10235
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #13 !dbg !10236 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10240, metadata !DIExpression()), !dbg !10241
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !10242
  %3 = icmp ult i32 %2, 4, !dbg !10242
  br i1 %3, label %4, label %7, !dbg !10242

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !10242
  %6 = load i32, i32* %5, align 4, !dbg !10242
  br label %7, !dbg !10242

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !10243
  ret i32 %8, !dbg !10245
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #5 !dbg !10246 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10248, metadata !DIExpression()), !dbg !10250
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10251
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10251
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10251
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10249, metadata !DIExpression()), !dbg !10250
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10252
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10252
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #25, !dbg !10253
  ret i32 %7, !dbg !10254
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #6 !dbg !10255 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10259, metadata !DIExpression()), !dbg !10261
  call void @llvm.dbg.value(metadata i32 %1, metadata !10260, metadata !DIExpression()), !dbg !10261
  %3 = icmp eq i32 %0, 4096, !dbg !10262
  %4 = icmp eq i32 %1, 0, !dbg !10262
  %5 = select i1 %4, i32 4, i32 3, !dbg !10262
  %6 = select i1 %4, i32 3, i32 2, !dbg !10262
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !10262
  ret i32 %7, !dbg !10263
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #5 !dbg !10264 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10266, metadata !DIExpression()), !dbg !10268
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10269
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10269
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10269
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10267, metadata !DIExpression()), !dbg !10268
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10270
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10270
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #25, !dbg !10271
  ret i32 %7, !dbg !10272
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #6 !dbg !10273 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10277, metadata !DIExpression()), !dbg !10278
  %2 = icmp eq i32 %0, 768, !dbg !10279
  %3 = zext i1 %2 to i32, !dbg !10278
  ret i32 %3, !dbg !10281
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10282 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10287, metadata !DIExpression()), !dbg !10288
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10289
  %3 = load volatile i32, i32* %2, align 4, !dbg !10289
  %4 = and i32 %3, 768, !dbg !10289
  ret i32 %4, !dbg !10290
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10291 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10293, metadata !DIExpression()), !dbg !10294
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10295
  %3 = load volatile i32, i32* %2, align 4, !dbg !10295
  %4 = and i32 %3, 4096, !dbg !10295
  ret i32 %4, !dbg !10296
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10297 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10299, metadata !DIExpression()), !dbg !10300
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10301
  %3 = load volatile i32, i32* %2, align 4, !dbg !10301
  %4 = and i32 %3, 12288, !dbg !10301
  ret i32 %4, !dbg !10302
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10303 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10305, metadata !DIExpression()), !dbg !10306
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10307
  %3 = load volatile i32, i32* %2, align 4, !dbg !10307
  %4 = and i32 %3, 1536, !dbg !10307
  ret i32 %4, !dbg !10308
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #6 !dbg !10309 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10313, metadata !DIExpression()), !dbg !10314
  %2 = icmp eq i32 %0, 2, !dbg !10315
  %3 = select i1 %2, i32 1024, i32 0, !dbg !10315
  %4 = icmp eq i32 %0, 1, !dbg !10315
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !10315
  ret i32 %5, !dbg !10316
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #6 !dbg !10317 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10321, metadata !DIExpression()), !dbg !10322
  %2 = icmp ult i32 %0, 3, !dbg !10323
  br i1 %2, label %3, label %6, !dbg !10323

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !10323
  %5 = load i32, i32* %4, align 4, !dbg !10323
  br label %6, !dbg !10323

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !10324
  ret i32 %7, !dbg !10326
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #6 !dbg !10327 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10331, metadata !DIExpression()), !dbg !10333
  call void @llvm.dbg.value(metadata i32 %1, metadata !10332, metadata !DIExpression()), !dbg !10333
  %3 = icmp eq i32 %0, 4, !dbg !10334
  %4 = icmp eq i32 %1, 0, !dbg !10334
  %5 = select i1 %4, i32 0, i32 4096, !dbg !10334
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !10334
  ret i32 %6, !dbg !10335
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #6 !dbg !10336 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10340, metadata !DIExpression()), !dbg !10341
  %2 = icmp eq i32 %0, 1, !dbg !10342
  %3 = select i1 %2, i32 768, i32 0, !dbg !10341
  ret i32 %3, !dbg !10344
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10345 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10349, metadata !DIExpression()), !dbg !10350
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10351
  %3 = load volatile i32, i32* %2, align 4, !dbg !10351
  %4 = and i32 %3, -8193, !dbg !10351
  store volatile i32 %4, i32* %2, align 4, !dbg !10351
  ret void, !dbg !10352
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10353 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10357, metadata !DIExpression()), !dbg !10360
  call void @llvm.dbg.value(metadata i32 %1, metadata !10358, metadata !DIExpression()), !dbg !10360
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10361
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10361
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10361
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10359, metadata !DIExpression()), !dbg !10360
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10362
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10362
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #25, !dbg !10363
  ret void, !dbg !10364
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10365 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10367, metadata !DIExpression()), !dbg !10370
  call void @llvm.dbg.value(metadata i32 %1, metadata !10368, metadata !DIExpression()), !dbg !10370
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10371
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10371
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10371
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10369, metadata !DIExpression()), !dbg !10370
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10372
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10372
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #25, !dbg !10373
  ret void, !dbg !10374
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10375 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10377, metadata !DIExpression()), !dbg !10380
  call void @llvm.dbg.value(metadata i32 %1, metadata !10378, metadata !DIExpression()), !dbg !10380
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10381
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10381
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10381
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10379, metadata !DIExpression()), !dbg !10380
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10382
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10382
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #25, !dbg !10383
  ret void, !dbg !10384
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10385 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10387, metadata !DIExpression()), !dbg !10390
  call void @llvm.dbg.value(metadata i32 %1, metadata !10388, metadata !DIExpression()), !dbg !10390
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10391
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10391
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10391
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10389, metadata !DIExpression()), !dbg !10390
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10392
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10392
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #25, !dbg !10393
  ret void, !dbg !10394
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !10395 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10397, metadata !DIExpression()), !dbg !10402
  call void @llvm.dbg.value(metadata i32 %1, metadata !10398, metadata !DIExpression()), !dbg !10402
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10403
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !10403
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !10403
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !10399, metadata !DIExpression()), !dbg !10402
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10404
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !10404
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !10404
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !10400, metadata !DIExpression()), !dbg !10402
  %10 = bitcast i32* %3 to i8*, !dbg !10405
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !10405
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !10406
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !10406
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !10410
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !10410
  %15 = load i8*, i8** %14, align 4, !dbg !10410
  call void @llvm.dbg.value(metadata i32* %3, metadata !10401, metadata !DIExpression(DW_OP_deref)), !dbg !10402
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #25, !dbg !10411
  %17 = icmp slt i32 %16, 0, !dbg !10412
  br i1 %17, label %18, label %21, !dbg !10413

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.129(i32 noundef 1) #25, !dbg !10414
  %20 = zext i8 %19 to i32, !dbg !10414
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.6.130, i32 0, i32 0), i32 noundef %20) #24, !dbg !10414
  br label %31, !dbg !10420

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !10421
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !10421
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #25, !dbg !10422
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !10423
  %25 = load i32, i32* %3, align 4, !dbg !10424
  call void @llvm.dbg.value(metadata i32 %25, metadata !10401, metadata !DIExpression()), !dbg !10402
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #25, !dbg !10425
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !10426
  %27 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %26, i32 0, i32 2, !dbg !10426
  %28 = load volatile i32, i32* %27, align 4, !dbg !10426
  %29 = icmp ugt i32 %28, 16, !dbg !10426
  br i1 %29, label %31, label %30, !dbg !10429

30:                                               ; preds = %21
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.131, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8.132, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.9.133, i32 0, i32 0), i32 noundef 190) #24, !dbg !10430
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.10.134, i32 0, i32 0)) #24, !dbg !10430
  call void @assert_post_action(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.9.133, i32 0, i32 0), i32 noundef 190) #24, !dbg !10430
  unreachable, !dbg !10430

31:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !10432
  ret void, !dbg !10432
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10433 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10435, metadata !DIExpression()), !dbg !10436
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10437
  %3 = load volatile i32, i32* %2, align 4, !dbg !10437
  %4 = or i32 %3, 8192, !dbg !10437
  store volatile i32 %4, i32* %2, align 4, !dbg !10437
  ret void, !dbg !10438
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !10439 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10441, metadata !DIExpression()), !dbg !10445
  call void @llvm.dbg.value(metadata i8* %1, metadata !10442, metadata !DIExpression()), !dbg !10445
  call void @llvm.dbg.value(metadata i32* %2, metadata !10443, metadata !DIExpression()), !dbg !10445
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10446
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !10446
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !10446
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !10444, metadata !DIExpression()), !dbg !10445
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !10447
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !10447
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !10449
  br i1 %9, label %12, label %10, !dbg !10450

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #24, !dbg !10451
  br label %12, !dbg !10452

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !10445
  ret i32 %13, !dbg !10453
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.129(i32 noundef %0) unnamed_addr #6 !dbg !10454 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10456, metadata !DIExpression()), !dbg !10457
  %2 = icmp eq i32 %0, 2, !dbg !10458
  %3 = select i1 %2, i8 87, i8 63, !dbg !10458
  %4 = icmp eq i32 %0, 1, !dbg !10458
  %5 = select i1 %4, i8 69, i8 %3, !dbg !10458
  ret i8 %5, !dbg !10459
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10460 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10464, metadata !DIExpression()), !dbg !10466
  call void @llvm.dbg.value(metadata i32 0, metadata !10465, metadata !DIExpression()), !dbg !10466
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10467
  %3 = load volatile i32, i32* %2, align 4, !dbg !10467
  %4 = and i32 %3, -32769, !dbg !10467
  store volatile i32 %4, i32* %2, align 4, !dbg !10467
  ret void, !dbg !10468
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10469 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10473, metadata !DIExpression()), !dbg !10477
  call void @llvm.dbg.value(metadata i32 %1, metadata !10474, metadata !DIExpression()), !dbg !10477
  call void @llvm.dbg.value(metadata i32 0, metadata !10475, metadata !DIExpression()), !dbg !10477
  call void @llvm.dbg.value(metadata i32 %2, metadata !10476, metadata !DIExpression()), !dbg !10477
  %4 = zext i32 %1 to i64, !dbg !10478
  %5 = mul nuw nsw i64 %4, 25, !dbg !10478
  %6 = zext i32 %2 to i64, !dbg !10478
  %7 = shl nuw nsw i64 %6, 2, !dbg !10478
  %8 = udiv i64 %5, %7, !dbg !10478
  %9 = trunc i64 %8 to i32, !dbg !10478
  %10 = udiv i32 %9, 100, !dbg !10478
  %11 = shl nuw nsw i32 %10, 4, !dbg !10478
  %12 = mul i32 %10, -100, !dbg !10478
  %13 = add i32 %12, %9, !dbg !10478
  %14 = shl i32 %13, 4, !dbg !10478
  %15 = add i32 %14, 50, !dbg !10478
  %16 = udiv i32 %15, 100, !dbg !10478
  %17 = and i32 %16, 240, !dbg !10478
  %18 = add nuw nsw i32 %17, %11, !dbg !10478
  %19 = and i32 %16, 15, !dbg !10478
  %20 = and i32 %18, 65520, !dbg !10481
  %21 = or i32 %20, %19, !dbg !10481
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !10482
  store volatile i32 %21, i32* %22, align 4, !dbg !10483
  ret void, !dbg !10484
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10485 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10487, metadata !DIExpression()), !dbg !10489
  call void @llvm.dbg.value(metadata i32 %1, metadata !10488, metadata !DIExpression()), !dbg !10489
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10490
  %4 = load volatile i32, i32* %3, align 4, !dbg !10490
  %5 = and i32 %4, -769, !dbg !10490
  %6 = or i32 %5, %1, !dbg !10490
  store volatile i32 %6, i32* %3, align 4, !dbg !10490
  ret void, !dbg !10491
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10492 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10494, metadata !DIExpression()), !dbg !10496
  call void @llvm.dbg.value(metadata i32 %1, metadata !10495, metadata !DIExpression()), !dbg !10496
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10497
  %4 = load volatile i32, i32* %3, align 4, !dbg !10497
  %5 = and i32 %4, -4097, !dbg !10497
  %6 = or i32 %5, %1, !dbg !10497
  store volatile i32 %6, i32* %3, align 4, !dbg !10497
  ret void, !dbg !10498
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10499 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10501, metadata !DIExpression()), !dbg !10503
  call void @llvm.dbg.value(metadata i32 %1, metadata !10502, metadata !DIExpression()), !dbg !10503
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10504
  %4 = load volatile i32, i32* %3, align 4, !dbg !10504
  %5 = and i32 %4, -12289, !dbg !10504
  %6 = or i32 %5, %1, !dbg !10504
  store volatile i32 %6, i32* %3, align 4, !dbg !10504
  ret void, !dbg !10505
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10506 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10508, metadata !DIExpression()), !dbg !10510
  call void @llvm.dbg.value(metadata i32 %1, metadata !10509, metadata !DIExpression()), !dbg !10510
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10511
  %4 = load volatile i32, i32* %3, align 4, !dbg !10511
  %5 = and i32 %4, -1537, !dbg !10511
  %6 = or i32 %5, %1, !dbg !10511
  store volatile i32 %6, i32* %3, align 4, !dbg !10511
  ret void, !dbg !10512
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10513 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10515, metadata !DIExpression()), !dbg !10516
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10517
  %3 = load volatile i32, i32* %2, align 4, !dbg !10517
  %4 = lshr i32 %3, 3, !dbg !10518
  %5 = and i32 %4, 1, !dbg !10518
  ret i32 %5, !dbg !10519
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10520 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10522, metadata !DIExpression()), !dbg !10523
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10524
  %3 = load volatile i32, i32* %2, align 4, !dbg !10524
  %4 = and i32 %3, 1, !dbg !10524
  ret i32 %4, !dbg !10525
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10526 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10528, metadata !DIExpression()), !dbg !10529
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10530
  %3 = load volatile i32, i32* %2, align 4, !dbg !10530
  %4 = lshr i32 %3, 1, !dbg !10531
  %5 = and i32 %4, 1, !dbg !10531
  ret i32 %5, !dbg !10532
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10533 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10535, metadata !DIExpression()), !dbg !10536
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10537
  %3 = load volatile i32, i32* %2, align 4, !dbg !10537
  %4 = lshr i32 %3, 8, !dbg !10538
  %5 = and i32 %4, 1, !dbg !10538
  ret i32 %5, !dbg !10539
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10540 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10542, metadata !DIExpression()), !dbg !10543
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10544
  store volatile i32 -257, i32* %2, align 4, !dbg !10544
  ret void, !dbg !10545
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !10546 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10548, metadata !DIExpression()), !dbg !10550
  %3 = bitcast i32* %2 to i8*, !dbg !10551
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10551
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10549, metadata !DIExpression()), !dbg !10552
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10553
  %5 = load volatile i32, i32* %4, align 4, !dbg !10553
  store volatile i32 %5, i32* %2, align 4, !dbg !10554
  %6 = load volatile i32, i32* %2, align 4, !dbg !10555
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10556
  %8 = load volatile i32, i32* %7, align 4, !dbg !10556
  store volatile i32 %8, i32* %2, align 4, !dbg !10557
  %9 = load volatile i32, i32* %2, align 4, !dbg !10558
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10559
  ret void, !dbg !10559
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !10560 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10562, metadata !DIExpression()), !dbg !10564
  %3 = bitcast i32* %2 to i8*, !dbg !10565
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10565
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10563, metadata !DIExpression()), !dbg !10566
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10567
  %5 = load volatile i32, i32* %4, align 4, !dbg !10567
  store volatile i32 %5, i32* %2, align 4, !dbg !10568
  %6 = load volatile i32, i32* %2, align 4, !dbg !10569
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10570
  %8 = load volatile i32, i32* %7, align 4, !dbg !10570
  store volatile i32 %8, i32* %2, align 4, !dbg !10571
  %9 = load volatile i32, i32* %2, align 4, !dbg !10572
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10573
  ret void, !dbg !10573
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !10574 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10576, metadata !DIExpression()), !dbg !10578
  %3 = bitcast i32* %2 to i8*, !dbg !10579
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10579
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10577, metadata !DIExpression()), !dbg !10580
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10581
  %5 = load volatile i32, i32* %4, align 4, !dbg !10581
  store volatile i32 %5, i32* %2, align 4, !dbg !10582
  %6 = load volatile i32, i32* %2, align 4, !dbg !10583
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10584
  %8 = load volatile i32, i32* %7, align 4, !dbg !10584
  store volatile i32 %8, i32* %2, align 4, !dbg !10585
  %9 = load volatile i32, i32* %2, align 4, !dbg !10586
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10587
  ret void, !dbg !10587
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !10588 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10590, metadata !DIExpression()), !dbg !10592
  %3 = bitcast i32* %2 to i8*, !dbg !10593
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10593
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10591, metadata !DIExpression()), !dbg !10594
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10595
  %5 = load volatile i32, i32* %4, align 4, !dbg !10595
  store volatile i32 %5, i32* %2, align 4, !dbg !10596
  %6 = load volatile i32, i32* %2, align 4, !dbg !10597
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10598
  %8 = load volatile i32, i32* %7, align 4, !dbg !10598
  store volatile i32 %8, i32* %2, align 4, !dbg !10599
  %9 = load volatile i32, i32* %2, align 4, !dbg !10600
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10601
  ret void, !dbg !10601
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10602 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10604, metadata !DIExpression()), !dbg !10605
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10606
  %3 = load volatile i32, i32* %2, align 4, !dbg !10606
  %4 = lshr i32 %3, 7, !dbg !10607
  %5 = and i32 %4, 1, !dbg !10607
  ret i32 %5, !dbg !10608
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !10609 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10613, metadata !DIExpression()), !dbg !10615
  call void @llvm.dbg.value(metadata i8 %1, metadata !10614, metadata !DIExpression()), !dbg !10615
  %3 = zext i8 %1 to i32, !dbg !10616
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10617
  store volatile i32 %3, i32* %4, align 4, !dbg !10618
  ret void, !dbg !10619
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10620 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10622, metadata !DIExpression()), !dbg !10623
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10624
  %3 = load volatile i32, i32* %2, align 4, !dbg !10624
  %4 = lshr i32 %3, 5, !dbg !10625
  %5 = and i32 %4, 1, !dbg !10625
  ret i32 %5, !dbg !10626
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #5 !dbg !10627 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10631, metadata !DIExpression()), !dbg !10632
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10633
  %3 = load volatile i32, i32* %2, align 4, !dbg !10633
  %4 = trunc i32 %3 to i8, !dbg !10634
  ret i8 %4, !dbg !10635
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !10636 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10638, metadata !DIExpression()), !dbg !10644
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10645
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10645
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10645
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10639, metadata !DIExpression()), !dbg !10644
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10646
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !10646
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !10646
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !10640, metadata !DIExpression()), !dbg !10644
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #25, !dbg !10647
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !10648
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !10648
  %10 = tail call fastcc zeroext i1 @device_is_ready.142(%struct.device* noundef %9) #25, !dbg !10650
  br i1 %10, label %14, label %11, !dbg !10651

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.129(i32 noundef 1) #25, !dbg !10652
  %13 = zext i8 %12 to i32, !dbg !10652
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.143, i32 0, i32 0), i32 noundef %13) #24, !dbg !10652
  br label %62, !dbg !10658

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !10659
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !10660
  %17 = bitcast %struct._thread_arch** %16 to i8**, !dbg !10660
  %18 = load i8*, i8** %17, align 4, !dbg !10660
  %19 = tail call fastcc i32 @clock_control_on.144(%struct.device* noundef %15, i8* noundef %18) #25, !dbg !10661
  call void @llvm.dbg.value(metadata i32 %19, metadata !10643, metadata !DIExpression()), !dbg !10644
  %20 = icmp eq i32 %19, 0, !dbg !10662
  br i1 %20, label %24, label %21, !dbg !10664

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.129(i32 noundef 1) #25, !dbg !10665
  %23 = zext i8 %22 to i32, !dbg !10665
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.12.145, i32 0, i32 0), i32 noundef %23) #24, !dbg !10665
  br label %62, !dbg !10671

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !10672
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !10672
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #25, !dbg !10673
  call void @llvm.dbg.value(metadata i32 %27, metadata !10643, metadata !DIExpression()), !dbg !10644
  %28 = icmp slt i32 %27, 0, !dbg !10674
  br i1 %28, label %62, label %29, !dbg !10676

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10677
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10677
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #25, !dbg !10678
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10679
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #25, !dbg !10680
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !10681
  %34 = load i32, i32* %33, align 4, !dbg !10681
  %35 = icmp ult i32 %34, 3, !dbg !10683
  br i1 %35, label %39, label %36, !dbg !10683

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.129(i32 noundef 2) #25, !dbg !10684
  %38 = zext i8 %37 to i32, !dbg !10684
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13.146, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #24, !dbg !10684
  call void @llvm.dbg.value(metadata i32 0, metadata !10641, metadata !DIExpression()), !dbg !10644
  call void @llvm.dbg.value(metadata i32 0, metadata !10642, metadata !DIExpression()), !dbg !10644
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !10683
  %41 = load i32, i32* %40, align 4, !dbg !10683
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.14, i32 0, i32 %34, !dbg !10683
  %43 = load i32, i32* %42, align 4, !dbg !10683
  br label %44, !dbg !10683

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !10693
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !10693
  call void @llvm.dbg.value(metadata i32 %46, metadata !10642, metadata !DIExpression()), !dbg !10644
  call void @llvm.dbg.value(metadata i32 %45, metadata !10641, metadata !DIExpression()), !dbg !10644
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10694
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #25, !dbg !10695
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !10696
  %49 = load i8, i8* %48, align 4, !dbg !10696, !range !6810
  %50 = icmp eq i8 %49, 0, !dbg !10696
  br i1 %50, label %52, label %51, !dbg !10698

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #25, !dbg !10699
  br label %52, !dbg !10701

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !10702
  %54 = load i32, i32* %53, align 4, !dbg !10702
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #25, !dbg !10703
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !10704
  %56 = load i8, i8* %55, align 4, !dbg !10704, !range !6810
  %57 = icmp eq i8 %56, 0, !dbg !10704
  br i1 %57, label %60, label %58, !dbg !10706

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10707
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #25, !dbg !10709
  br label %60, !dbg !10710

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10711
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #25, !dbg !10712
  br label %62, !dbg !10713

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !10644
  ret i32 %63, !dbg !10714
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #11 !dbg !10715 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10719, metadata !DIExpression()), !dbg !10723
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10724
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !10724
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !10724
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !10720, metadata !DIExpression()), !dbg !10723
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10721, metadata !DIExpression()), !dbg !10723
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !10725
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !10726
  ret void, !dbg !10727
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.142(%struct.device* noundef %0) unnamed_addr #1 !dbg !10728 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10732, metadata !DIExpression()), !dbg !10733
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10734, !srcloc !10736
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.147(%struct.device* noundef %0) #25, !dbg !10737
  ret i1 %2, !dbg !10738
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.144(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !10739 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10741, metadata !DIExpression()), !dbg !10744
  call void @llvm.dbg.value(metadata i8* %1, metadata !10742, metadata !DIExpression()), !dbg !10744
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10745
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !10745
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !10745
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !10743, metadata !DIExpression()), !dbg !10744
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !10746
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !10746
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #24, !dbg !10747
  ret i32 %8, !dbg !10748
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !10749 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10753, metadata !DIExpression()), !dbg !10757
  call void @llvm.dbg.value(metadata i8 0, metadata !10754, metadata !DIExpression()), !dbg !10757
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !10758
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !10758
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10756, metadata !DIExpression(DW_OP_deref)), !dbg !10757
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #24, !dbg !10759
  call void @llvm.dbg.value(metadata i32 %4, metadata !10755, metadata !DIExpression()), !dbg !10757
  %5 = icmp slt i32 %4, 0, !dbg !10760
  br i1 %5, label %9, label %6, !dbg !10762

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !10763
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !10756, metadata !DIExpression()), !dbg !10757
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #25, !dbg !10764
  br label %9, !dbg !10765

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !10757
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !10766
  ret i32 %10, !dbg !10766
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10767 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10769, metadata !DIExpression()), !dbg !10773
  call void @llvm.dbg.value(metadata i32 12, metadata !10770, metadata !DIExpression()), !dbg !10773
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10774

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10775, metadata !DIExpression()) #23, !dbg !10781
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #23, !dbg !10784, !srcloc !10785
  call void @llvm.dbg.value(metadata i32 %4, metadata !10780, metadata !DIExpression()) #23, !dbg !10781
  %5 = or i32 %4, 12, !dbg !10786
  call void @llvm.dbg.value(metadata i32 %5, metadata !10771, metadata !DIExpression()), !dbg !10787
  call void @llvm.dbg.value(metadata i32 %5, metadata !10788, metadata !DIExpression()) #23, !dbg !10795
  call void @llvm.dbg.value(metadata i32* %2, metadata !10793, metadata !DIExpression()) #23, !dbg !10795
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #23, !dbg !10797, !srcloc !10798
  call void @llvm.dbg.value(metadata i32 %6, metadata !10794, metadata !DIExpression()) #23, !dbg !10795
  %7 = icmp eq i32 %6, 0, !dbg !10774
  br i1 %7, label %8, label %3, !dbg !10786, !llvm.loop !10799

8:                                                ; preds = %3
  ret void, !dbg !10800
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10801 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10803, metadata !DIExpression()), !dbg !10807
  call void @llvm.dbg.value(metadata i32 %1, metadata !10804, metadata !DIExpression()), !dbg !10807
  call void @llvm.dbg.value(metadata i32 %2, metadata !10805, metadata !DIExpression()), !dbg !10807
  call void @llvm.dbg.value(metadata i32 0, metadata !10806, metadata !DIExpression()), !dbg !10807
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10808
  %5 = load volatile i32, i32* %4, align 4, !dbg !10808
  %6 = and i32 %5, -5633, !dbg !10808
  %7 = or i32 %2, %1, !dbg !10808
  %8 = or i32 %7, %6, !dbg !10808
  store volatile i32 %8, i32* %4, align 4, !dbg !10808
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10809
  %10 = load volatile i32, i32* %9, align 4, !dbg !10809
  %11 = and i32 %10, -12289, !dbg !10809
  store volatile i32 %11, i32* %9, align 4, !dbg !10809
  ret void, !dbg !10810
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10811 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10813, metadata !DIExpression()), !dbg !10814
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10815
  %3 = load volatile i32, i32* %2, align 4, !dbg !10815
  %4 = or i32 %3, 8, !dbg !10815
  store volatile i32 %4, i32* %2, align 4, !dbg !10815
  ret void, !dbg !10816
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10817 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !10821, metadata !DIExpression()), !dbg !10824
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !10822, metadata !DIExpression()), !dbg !10824
  call void @llvm.dbg.value(metadata i32 0, metadata !10823, metadata !DIExpression()), !dbg !10824
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !10825
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !10825
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !10826
  %5 = load i8, i8* %4, align 4, !dbg !10826
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #24, !dbg !10827
  ret i32 %6, !dbg !10828
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.147(%struct.device* noundef %0) unnamed_addr #1 !dbg !10829 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10831, metadata !DIExpression()), !dbg !10832
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #24, !dbg !10833
  ret i1 %2, !dbg !10834
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #15 !dbg !10835 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10837, metadata !DIExpression()), !dbg !10838
  tail call fastcc void @__NVIC_SetPriority.149() #25, !dbg !10839
  store i32 16799, i32* @last_load, align 4, !dbg !10840
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10841
  store volatile i32 16799, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10842
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10843
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10844
  %3 = or i32 %2, 7, !dbg !10844
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10844
  ret i32 0, !dbg !10845
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.149() unnamed_addr #15 !dbg !10846 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !10848, metadata !DIExpression()), !dbg !10850
  call void @llvm.dbg.value(metadata i32 1, metadata !10849, metadata !DIExpression()), !dbg !10850
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !10851
  ret void, !dbg !10854
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !10855 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10857, metadata !DIExpression()), !dbg !10859
  %2 = tail call fastcc i32 @elapsed() #25, !dbg !10860
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10861
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10862
  %5 = add i32 %4, %3, !dbg !10862
  store i32 %5, i32* @cycle_count, align 4, !dbg !10862
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10863
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10864
  %7 = sub i32 %5, %6, !dbg !10867
  %8 = udiv i32 %7, 16800, !dbg !10868
  call void @llvm.dbg.value(metadata i32 %8, metadata !10858, metadata !DIExpression()), !dbg !10859
  %9 = mul nuw i32 %8, 16800, !dbg !10869
  %10 = add i32 %9, %6, !dbg !10870
  store i32 %10, i32* @announced_cycles, align 4, !dbg !10870
  tail call void @sys_clock_announce(i32 noundef %8) #24, !dbg !10871
  tail call void @z_arm_int_exit() #24, !dbg !10872
  ret void, !dbg !10873
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #15 !dbg !10874 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10879
  call void @llvm.dbg.value(metadata i32 %1, metadata !10876, metadata !DIExpression()), !dbg !10880
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10881
  call void @llvm.dbg.value(metadata i32 %2, metadata !10877, metadata !DIExpression()), !dbg !10880
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10882
  call void @llvm.dbg.value(metadata i32 %3, metadata !10878, metadata !DIExpression()), !dbg !10880
  %4 = and i32 %2, 65536, !dbg !10883
  %5 = icmp ne i32 %4, 0, !dbg !10883
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !10885
  %8 = load i32, i32* @last_load, align 4, !dbg !10880
  br i1 %7, label %9, label %13, !dbg !10885

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10886
  %11 = add i32 %10, %8, !dbg !10886
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !10886
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10888
  br label %13, !dbg !10889

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !10890
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10891
  %16 = add i32 %14, %15, !dbg !10892
  ret i32 %16, !dbg !10893
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !10894 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10898, metadata !DIExpression()), !dbg !10911
  call void @llvm.dbg.value(metadata i1 %1, metadata !10899, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10911
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !10912
  br i1 %4, label %5, label %8, !dbg !10912

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10914
  %7 = and i32 %6, -2, !dbg !10914
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10914
  store i32 -16777216, i32* @last_load, align 4, !dbg !10916
  br label %60, !dbg !10917

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !10918
  call void @llvm.dbg.value(metadata i32 %9, metadata !10903, metadata !DIExpression()), !dbg !10911
  br i1 %3, label %18, label %10, !dbg !10919

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !10919
  call void @llvm.dbg.value(metadata i32 undef, metadata !10898, metadata !DIExpression()), !dbg !10911
  %12 = icmp slt i32 %11, 1, !dbg !10920
  br i1 %12, label %18, label %13, !dbg !10920

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 997, !dbg !10920
  %15 = select i1 %14, i32 %11, i32 997, !dbg !10920
  %16 = mul nuw nsw i32 %15, 16800, !dbg !10920
  %17 = add nuw nsw i32 %16, 16799, !dbg !10920
  br label %18, !dbg !10920

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 16799, %10 ], [ 16749599, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !10898, metadata !DIExpression()), !dbg !10911
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10921, metadata !DIExpression()) #23, !dbg !10928
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10930, !srcloc !10936
  call void @llvm.dbg.value(metadata i32 undef, metadata !10933, metadata !DIExpression()) #23, !dbg !10937
  call void @llvm.dbg.value(metadata i32 undef, metadata !10934, metadata !DIExpression()) #23, !dbg !10937
  call void @llvm.dbg.value(metadata i32 undef, metadata !10927, metadata !DIExpression()) #23, !dbg !10928
  %21 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10938
  br i1 %21, label %23, label %22, !dbg !10941

22:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.150, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.151, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.152, i32 0, i32 0), i32 noundef 148) #24, !dbg !10942
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.153, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10942
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.152, i32 0, i32 0), i32 noundef 148) #24, !dbg !10942
  unreachable, !dbg !10942

23:                                               ; preds = %18
  %24 = extractvalue { i32, i32 } %20, 0, !dbg !10930
  call void @llvm.dbg.value(metadata i32 %24, metadata !10933, metadata !DIExpression()) #23, !dbg !10937
  call void @llvm.dbg.value(metadata i32 %24, metadata !10927, metadata !DIExpression()) #23, !dbg !10928
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10944
  call void @llvm.dbg.value(metadata i32 %24, metadata !10904, metadata !DIExpression()), !dbg !10911
  %25 = tail call fastcc i32 @elapsed() #25, !dbg !10945
  call void @llvm.dbg.value(metadata i32 %25, metadata !10909, metadata !DIExpression()), !dbg !10911
  %26 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10946
  call void @llvm.dbg.value(metadata i32 %26, metadata !10901, metadata !DIExpression()), !dbg !10911
  %27 = load i32, i32* @cycle_count, align 4, !dbg !10947
  %28 = add i32 %27, %25, !dbg !10947
  store i32 %28, i32* @cycle_count, align 4, !dbg !10947
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10948
  %29 = load i32, i32* @announced_cycles, align 4, !dbg !10949
  %30 = sub i32 %28, %29, !dbg !10950
  call void @llvm.dbg.value(metadata i32 %30, metadata !10910, metadata !DIExpression()), !dbg !10911
  %31 = icmp slt i32 %30, 0, !dbg !10951
  br i1 %31, label %41, label %32, !dbg !10953

32:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !10900, metadata !DIExpression()), !dbg !10911
  call void @llvm.dbg.value(metadata i32 undef, metadata !10900, metadata !DIExpression()), !dbg !10911
  %33 = add nuw i32 %19, %30, !dbg !10954
  %34 = urem i32 %33, 16800, !dbg !10956
  call void @llvm.dbg.value(metadata !DIArgList(i32 %33, i32 %34), metadata !10900, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10911
  %35 = sub nuw nsw i32 %19, %34, !dbg !10957
  call void @llvm.dbg.value(metadata i32 %35, metadata !10900, metadata !DIExpression()), !dbg !10911
  %36 = icmp ugt i32 %35, 1050, !dbg !10958
  br i1 %36, label %37, label %39, !dbg !10958

37:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i32 %35, metadata !10900, metadata !DIExpression()), !dbg !10911
  %38 = icmp ugt i32 %35, 16749600, !dbg !10959
  br i1 %38, label %41, label %39, !dbg !10961

39:                                               ; preds = %32, %37
  %40 = phi i32 [ %35, %37 ], [ 1050, %32 ]
  br label %41

41:                                               ; preds = %37, %23, %39
  %42 = phi i32 [ %40, %39 ], [ 1050, %23 ], [ 16749600, %37 ]
  store i32 %42, i32* @last_load, align 4, !dbg !10962
  %43 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10963
  call void @llvm.dbg.value(metadata i32 %43, metadata !10902, metadata !DIExpression()), !dbg !10911
  %44 = add nsw i32 %42, -1, !dbg !10964
  store volatile i32 %44, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10965
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10966
  %45 = icmp ult i32 %26, %43, !dbg !10967
  br i1 %45, label %46, label %51, !dbg !10969

46:                                               ; preds = %41
  %47 = load i32, i32* @cycle_count, align 4, !dbg !10970
  %48 = add i32 %26, %9, !dbg !10972
  %49 = sub i32 %48, %43, !dbg !10973
  %50 = add i32 %49, %47, !dbg !10970
  br label %55, !dbg !10974

51:                                               ; preds = %41
  %52 = sub i32 %26, %43, !dbg !10975
  %53 = load i32, i32* @cycle_count, align 4, !dbg !10977
  %54 = add i32 %52, %53, !dbg !10977
  br label %55

55:                                               ; preds = %51, %46
  %56 = phi i32 [ %54, %51 ], [ %50, %46 ], !dbg !10978
  store i32 %56, i32* @cycle_count, align 4, !dbg !10978
  call void @llvm.dbg.value(metadata i32 undef, metadata !10979, metadata !DIExpression()) #23, !dbg !10985
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10984, metadata !DIExpression()) #23, !dbg !10985
  %57 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10987
  br i1 %57, label %59, label %58, !dbg !10990

58:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.150, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.154, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.152, i32 0, i32 0), i32 noundef 194) #24, !dbg !10991
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.155, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #24, !dbg !10991
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.152, i32 0, i32 0), i32 noundef 194) #24, !dbg !10991
  unreachable, !dbg !10991

59:                                               ; preds = %55
  call void @llvm.dbg.value(metadata i32 %24, metadata !10979, metadata !DIExpression()) #23, !dbg !10985
  call void @llvm.dbg.value(metadata i32 %24, metadata !10993, metadata !DIExpression()) #23, !dbg !10996
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !10998, !srcloc !10999
  br label %60

60:                                               ; preds = %59, %5
  ret void, !dbg !11000
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !11001 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10921, metadata !DIExpression()) #23, !dbg !11005
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11007, !srcloc !10936
  call void @llvm.dbg.value(metadata i32 undef, metadata !10933, metadata !DIExpression()) #23, !dbg !11009
  call void @llvm.dbg.value(metadata i32 undef, metadata !10934, metadata !DIExpression()) #23, !dbg !11009
  call void @llvm.dbg.value(metadata i32 undef, metadata !10927, metadata !DIExpression()) #23, !dbg !11005
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !11010
  br i1 %2, label %4, label %3, !dbg !11011

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.150, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.151, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.152, i32 0, i32 0), i32 noundef 148) #24, !dbg !11012
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.153, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #24, !dbg !11012
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.152, i32 0, i32 0), i32 noundef 148) #24, !dbg !11012
  unreachable, !dbg !11012

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !10933, metadata !DIExpression()) #23, !dbg !11009
  call void @llvm.dbg.value(metadata i32 undef, metadata !10927, metadata !DIExpression()) #23, !dbg !11005
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !11013
  call void @llvm.dbg.value(metadata i32 undef, metadata !11003, metadata !DIExpression()), !dbg !11014
  %5 = tail call fastcc i32 @elapsed() #25, !dbg !11015
  %6 = load i32, i32* @cycle_count, align 4, !dbg !11016
  %7 = load i32, i32* @announced_cycles, align 4, !dbg !11017
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %7, i32 %6), metadata !11004, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11014
  call void @llvm.dbg.value(metadata i32 undef, metadata !10979, metadata !DIExpression()) #23, !dbg !11018
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10984, metadata !DIExpression()) #23, !dbg !11018
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !11020
  br i1 %8, label %10, label %9, !dbg !11021

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.150, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.154, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.152, i32 0, i32 0), i32 noundef 194) #24, !dbg !11022
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.155, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #24, !dbg !11022
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.152, i32 0, i32 0), i32 noundef 194) #24, !dbg !11022
  unreachable, !dbg !11022

10:                                               ; preds = %4
  %11 = add i32 %6, %5, !dbg !11023
  call void @llvm.dbg.value(metadata !DIArgList(i32 %11, i32 %7), metadata !11004, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11014
  %12 = sub i32 %11, %7, !dbg !11024
  call void @llvm.dbg.value(metadata i32 %12, metadata !11004, metadata !DIExpression()), !dbg !11014
  %13 = extractvalue { i32, i32 } %1, 0, !dbg !11007
  call void @llvm.dbg.value(metadata i32 %13, metadata !10933, metadata !DIExpression()) #23, !dbg !11009
  call void @llvm.dbg.value(metadata i32 %13, metadata !10927, metadata !DIExpression()) #23, !dbg !11005
  call void @llvm.dbg.value(metadata i32 %13, metadata !11003, metadata !DIExpression()), !dbg !11014
  call void @llvm.dbg.value(metadata i32 undef, metadata !10979, metadata !DIExpression()) #23, !dbg !11018
  call void @llvm.dbg.value(metadata i32 undef, metadata !10993, metadata !DIExpression()) #23, !dbg !11025
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !11027, !srcloc !10999
  %14 = udiv i32 %12, 16800, !dbg !11028
  ret i32 %14, !dbg !11029
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !11030 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10921, metadata !DIExpression()) #23, !dbg !11034
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11036, !srcloc !10936
  call void @llvm.dbg.value(metadata i32 undef, metadata !10933, metadata !DIExpression()) #23, !dbg !11038
  call void @llvm.dbg.value(metadata i32 undef, metadata !10934, metadata !DIExpression()) #23, !dbg !11038
  call void @llvm.dbg.value(metadata i32 undef, metadata !10927, metadata !DIExpression()) #23, !dbg !11034
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !11039
  br i1 %2, label %4, label %3, !dbg !11040

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.150, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.151, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.152, i32 0, i32 0), i32 noundef 148) #24, !dbg !11041
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.153, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #24, !dbg !11041
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.152, i32 0, i32 0), i32 noundef 148) #24, !dbg !11041
  unreachable, !dbg !11041

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !10933, metadata !DIExpression()) #23, !dbg !11038
  call void @llvm.dbg.value(metadata i32 undef, metadata !10927, metadata !DIExpression()) #23, !dbg !11034
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !11042
  call void @llvm.dbg.value(metadata i32 undef, metadata !11032, metadata !DIExpression()), !dbg !11043
  %5 = tail call fastcc i32 @elapsed() #25, !dbg !11044
  %6 = load i32, i32* @cycle_count, align 4, !dbg !11045
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %6), metadata !11033, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !11043
  call void @llvm.dbg.value(metadata i32 undef, metadata !10979, metadata !DIExpression()) #23, !dbg !11046
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10984, metadata !DIExpression()) #23, !dbg !11046
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #24, !dbg !11048
  br i1 %7, label %9, label %8, !dbg !11049

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.150, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.154, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.152, i32 0, i32 0), i32 noundef 194) #24, !dbg !11050
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.155, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #24, !dbg !11050
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.152, i32 0, i32 0), i32 noundef 194) #24, !dbg !11050
  unreachable, !dbg !11050

9:                                                ; preds = %4
  %10 = add i32 %6, %5, !dbg !11051
  call void @llvm.dbg.value(metadata i32 %10, metadata !11033, metadata !DIExpression()), !dbg !11043
  %11 = extractvalue { i32, i32 } %1, 0, !dbg !11036
  call void @llvm.dbg.value(metadata i32 %11, metadata !10933, metadata !DIExpression()) #23, !dbg !11038
  call void @llvm.dbg.value(metadata i32 %11, metadata !10927, metadata !DIExpression()) #23, !dbg !11034
  call void @llvm.dbg.value(metadata i32 %11, metadata !11032, metadata !DIExpression()), !dbg !11043
  call void @llvm.dbg.value(metadata i32 undef, metadata !10979, metadata !DIExpression()) #23, !dbg !11046
  call void @llvm.dbg.value(metadata i32 undef, metadata !10993, metadata !DIExpression()) #23, !dbg !11052
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !11054, !srcloc !10999
  ret i32 %10, !dbg !11055
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #15 !dbg !11056 {
  %1 = load i32, i32* @last_load, align 4, !dbg !11057
  %2 = icmp eq i32 %1, -16777216, !dbg !11059
  br i1 %2, label %3, label %6, !dbg !11060

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11061
  %5 = or i32 %4, 1, !dbg !11061
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11061
  br label %6, !dbg !11063

6:                                                ; preds = %3, %0
  ret void, !dbg !11064
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #15 !dbg !11065 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11066
  %2 = and i32 %1, -2, !dbg !11066
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11066
  ret void, !dbg !11067
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #14 !dbg !11068 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11094, metadata !DIExpression()), !dbg !11097
  call void @llvm.dbg.value(metadata i8 %1, metadata !11095, metadata !DIExpression()), !dbg !11097
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11096, metadata !DIExpression()), !dbg !11097
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !11098
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11098
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !11097
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11099
  %8 = load i8, i8* %6, align 4, !dbg !11100
  %9 = zext i8 %8 to i32, !dbg !11101
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !11101
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !11102
  br i1 %11, label %18, label %24, !dbg !11103

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !11097
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11099
  %14 = load i8, i8* %6, align 4, !dbg !11100
  %15 = zext i8 %14 to i32, !dbg !11101
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !11101
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !11102
  br i1 %17, label %18, label %24, !dbg !11103, !llvm.loop !11104

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !11106
  %21 = load i8, i8* %20, align 1, !dbg !11106
  %22 = icmp eq i8 %21, %1, !dbg !11109
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !11110
  br i1 %22, label %24, label %12, !dbg !11111

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !11097
  ret i32 %25, !dbg !11112
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11113 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !11124, metadata !DIExpression()), !dbg !11140
  call void @llvm.dbg.value(metadata i8 %1, metadata !11125, metadata !DIExpression()), !dbg !11140
  call void @llvm.dbg.value(metadata i32 %2, metadata !11126, metadata !DIExpression()), !dbg !11140
  call void @llvm.dbg.value(metadata i32 0, metadata !11129, metadata !DIExpression()), !dbg !11140
  call void @llvm.dbg.value(metadata i32 0, metadata !11130, metadata !DIExpression()), !dbg !11140
  call void @llvm.dbg.value(metadata i8 0, metadata !11131, metadata !DIExpression()), !dbg !11141
  %4 = icmp eq i8 %1, 0, !dbg !11142
  br i1 %4, label %35, label %5, !dbg !11143

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !11142
  br label %9, !dbg !11143

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !11131, metadata !DIExpression()), !dbg !11141
  call void @llvm.dbg.value(metadata i32 %29, metadata !11129, metadata !DIExpression()), !dbg !11140
  %8 = icmp eq i32 %34, %6, !dbg !11142
  br i1 %8, label %35, label %9, !dbg !11143, !llvm.loop !11144

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11131, metadata !DIExpression()), !dbg !11141
  call void @llvm.dbg.value(metadata i32 %11, metadata !11129, metadata !DIExpression()), !dbg !11140
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !11146
  %13 = load i32, i32* %12, align 4, !dbg !11146
  call void @llvm.dbg.value(metadata i32 %13, metadata !11128, metadata !DIExpression()), !dbg !11140
  %14 = and i32 %13, 31, !dbg !11147
  %15 = icmp ult i32 %14, 16, !dbg !11148
  br i1 %15, label %16, label %20, !dbg !11149

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11150
  %18 = load i32, i32* %17, align 4, !dbg !11150
  %19 = or i32 %18, 32, !dbg !11152
  call void @llvm.dbg.value(metadata i32 %19, metadata !11129, metadata !DIExpression()), !dbg !11140
  br label %28, !dbg !11153

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !11154

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11155
  %23 = load i32, i32* %22, align 4, !dbg !11155
  call void @llvm.dbg.value(metadata i32 %23, metadata !11133, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !11156
  %24 = lshr i32 %23, 7, !dbg !11157
  %25 = and i32 %24, 16, !dbg !11157
  %26 = or i32 %25, %23, !dbg !11157
  call void @llvm.dbg.value(metadata i32 %26, metadata !11129, metadata !DIExpression()), !dbg !11140
  br label %28, !dbg !11158

27:                                               ; preds = %20
  br label %28

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ %11, %27 ], [ 48, %20 ], !dbg !11140
  call void @llvm.dbg.value(metadata i32 %29, metadata !11129, metadata !DIExpression()), !dbg !11140
  %30 = lshr i32 %13, 5, !dbg !11159
  %31 = and i32 %30, 255, !dbg !11159
  call void @llvm.dbg.value(metadata i32 %31, metadata !11127, metadata !DIExpression()), !dbg !11140
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #25, !dbg !11160
  call void @llvm.dbg.value(metadata i32 %32, metadata !11130, metadata !DIExpression()), !dbg !11140
  %33 = icmp slt i32 %32, 0, !dbg !11161
  %34 = add nuw nsw i32 %10, 1, !dbg !11163
  call void @llvm.dbg.value(metadata i32 %34, metadata !11131, metadata !DIExpression()), !dbg !11141
  br i1 %33, label %35, label %7, !dbg !11164

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !11165
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11166 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11170, metadata !DIExpression()), !dbg !11174
  call void @llvm.dbg.value(metadata i32 %1, metadata !11171, metadata !DIExpression()), !dbg !11174
  call void @llvm.dbg.value(metadata i32 %2, metadata !11172, metadata !DIExpression()), !dbg !11174
  %4 = icmp ugt i32 %0, 175, !dbg !11175
  br i1 %4, label %13, label %5, !dbg !11177

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !11178
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !11179
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !11179
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !11173, metadata !DIExpression()), !dbg !11174
  %9 = tail call fastcc zeroext i1 @device_is_ready.162(%struct.device* noundef %8) #25, !dbg !11180
  br i1 %9, label %10, label %13, !dbg !11182

10:                                               ; preds = %5
  %11 = and i32 %0, 15, !dbg !11183
  %12 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %11, i32 noundef %1, i32 noundef %2) #24, !dbg !11184
  br label %13, !dbg !11185

13:                                               ; preds = %5, %3, %10
  %14 = phi i32 [ %12, %10 ], [ -22, %3 ], [ -19, %5 ], !dbg !11174
  ret i32 %14, !dbg !11186
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.162(%struct.device* noundef %0) unnamed_addr #1 !dbg !11187 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11191, metadata !DIExpression()), !dbg !11192
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11193, !srcloc !11195
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.163(%struct.device* noundef %0) #25, !dbg !11196
  ret i1 %2, !dbg !11197
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.163(%struct.device* noundef %0) unnamed_addr #1 !dbg !11198 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11200, metadata !DIExpression()), !dbg !11201
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #24, !dbg !11202
  ret i1 %2, !dbg !11203
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #6 !dbg !11204 {
  ret void, !dbg !11205
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #5 !dbg !11206 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11208, metadata !DIExpression()), !dbg !11213
  call void @llvm.dbg.value(metadata i32 0, metadata !11209, metadata !DIExpression()), !dbg !11213
  call void @llvm.dbg.value(metadata i32 2, metadata !11210, metadata !DIExpression()), !dbg !11213
  call void @llvm.dbg.value(metadata i32 0, metadata !11211, metadata !DIExpression()), !dbg !11213
  call void @llvm.dbg.value(metadata i32 2, metadata !11212, metadata !DIExpression()), !dbg !11213
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11214
  %2 = and i32 %1, 12, !dbg !11215
  call void @llvm.dbg.value(metadata i32 %2, metadata !11208, metadata !DIExpression()), !dbg !11213
  switch i32 %2, label %21 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !11216

3:                                                ; preds = %0
  br label %21, !dbg !11217

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11219
  call void @llvm.dbg.value(metadata i32 %5, metadata !11211, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !11213
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11220
  %7 = and i32 %6, 63, !dbg !11221
  call void @llvm.dbg.value(metadata i32 %7, metadata !11212, metadata !DIExpression()), !dbg !11213
  %8 = and i32 %5, 4194304, !dbg !11222
  %9 = icmp eq i32 %8, 0, !dbg !11222
  %10 = select i1 %9, i32 16000000, i32 24000000
  %11 = udiv i32 %10, %7, !dbg !11224
  %12 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11224
  %13 = lshr i32 %12, 6, !dbg !11224
  %14 = and i32 %13, 511, !dbg !11224
  %15 = mul i32 %14, %11, !dbg !11224
  call void @llvm.dbg.value(metadata i32 %15, metadata !11209, metadata !DIExpression()), !dbg !11213
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11225
  %17 = lshr i32 %16, 15, !dbg !11226
  %18 = and i32 %17, 6, !dbg !11226
  %19 = add nuw nsw i32 %18, 2, !dbg !11226
  call void @llvm.dbg.value(metadata i32 %19, metadata !11210, metadata !DIExpression()), !dbg !11213
  %20 = udiv i32 %15, %19, !dbg !11227
  br label %21, !dbg !11228

21:                                               ; preds = %0, %4, %3
  %22 = phi i32 [ %20, %4 ], [ 24000000, %3 ], [ 16000000, %0 ]
  store i32 %22, i32* @SystemCoreClock, align 4, !dbg !11229
  %23 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11230
  %24 = lshr i32 %23, 4, !dbg !11231
  %25 = and i32 %24, 15, !dbg !11231
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %25, !dbg !11232
  %27 = load i8, i8* %26, align 1, !dbg !11232
  %28 = zext i8 %27 to i32, !dbg !11232
  call void @llvm.dbg.value(metadata i32 %28, metadata !11208, metadata !DIExpression()), !dbg !11213
  %29 = lshr i32 %22, %28, !dbg !11233
  store i32 %29, i32* @SystemCoreClock, align 4, !dbg !11233
  ret void, !dbg !11234
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !11235 {
  ret i32 0, !dbg !11240
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !11241 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11267, metadata !DIExpression()), !dbg !11278
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !11279
  br i1 %3, label %311, label %4, !dbg !11281

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11282
  %6 = load i32, i32* %5, align 4, !dbg !11282
  %7 = and i32 %6, 1, !dbg !11284
  %8 = icmp eq i32 %7, 0, !dbg !11285
  br i1 %8, label %66, label %9, !dbg !11286

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11287
  %11 = and i32 %10, 12, !dbg !11287
  %12 = icmp eq i32 %11, 4, !dbg !11290
  br i1 %12, label %21, label %13, !dbg !11291

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11292
  %15 = and i32 %14, 12, !dbg !11292
  %16 = icmp eq i32 %15, 8, !dbg !11293
  br i1 %16, label %17, label %29, !dbg !11294

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11295
  %19 = and i32 %18, 4194304, !dbg !11296
  %20 = icmp eq i32 %19, 0, !dbg !11297
  br i1 %20, label %29, label %21, !dbg !11298

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11299
  %23 = and i32 %22, 131072, !dbg !11299
  %24 = icmp eq i32 %23, 0, !dbg !11299
  br i1 %24, label %66, label %25, !dbg !11302

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11303
  %27 = load i32, i32* %26, align 4, !dbg !11303
  %28 = icmp eq i32 %27, 0, !dbg !11304
  br i1 %28, label %311, label %66, !dbg !11305

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11306
  %31 = load i32, i32* %30, align 4, !dbg !11306
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !11310

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11311
  %34 = or i32 %33, 65536, !dbg !11311
  br label %45, !dbg !11311

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11313
  %37 = or i32 %36, 262144, !dbg !11313
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11313
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11313
  %39 = or i32 %38, 65536, !dbg !11313
  br label %45, !dbg !11313

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11316
  %42 = and i32 %41, -65537, !dbg !11316
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11316
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11316
  %44 = and i32 %43, -262145, !dbg !11316
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11318
  %47 = load i32, i32* %30, align 4, !dbg !11319
  %48 = icmp eq i32 %47, 0, !dbg !11321
  %49 = tail call i32 @HAL_GetTick() #24, !dbg !11322
  call void @llvm.dbg.value(metadata i32 %49, metadata !11268, metadata !DIExpression()), !dbg !11278
  call void @llvm.dbg.value(metadata i32 %49, metadata !11268, metadata !DIExpression()), !dbg !11278
  br i1 %48, label %58, label %50, !dbg !11323

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11324
  %52 = and i32 %51, 131072, !dbg !11326
  %53 = icmp eq i32 %52, 0, !dbg !11326
  br i1 %53, label %54, label %66, !dbg !11327

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #24, !dbg !11328
  %56 = sub i32 %55, %49, !dbg !11331
  %57 = icmp ugt i32 %56, 100, !dbg !11332
  br i1 %57, label %311, label %50, !dbg !11333, !llvm.loop !11334

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11336
  %60 = and i32 %59, 131072, !dbg !11336
  %61 = icmp eq i32 %60, 0, !dbg !11336
  br i1 %61, label %66, label %62, !dbg !11338

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #24, !dbg !11339
  %64 = sub i32 %63, %49, !dbg !11342
  %65 = icmp ugt i32 %64, 100, !dbg !11343
  br i1 %65, label %311, label %58, !dbg !11344, !llvm.loop !11345

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !11347
  %68 = and i32 %67, 2, !dbg !11349
  %69 = icmp eq i32 %68, 0, !dbg !11350
  br i1 %69, label %121, label %70, !dbg !11351

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11352
  %72 = and i32 %71, 12, !dbg !11352
  %73 = icmp eq i32 %72, 0, !dbg !11355
  br i1 %73, label %82, label %74, !dbg !11356

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11357
  %76 = and i32 %75, 12, !dbg !11357
  %77 = icmp eq i32 %76, 8, !dbg !11358
  br i1 %77, label %78, label %90, !dbg !11359

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11360
  %80 = and i32 %79, 4194304, !dbg !11361
  %81 = icmp eq i32 %80, 0, !dbg !11362
  br i1 %81, label %82, label %90, !dbg !11363

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11364
  %84 = and i32 %83, 2, !dbg !11364
  %85 = icmp eq i32 %84, 0, !dbg !11364
  br i1 %85, label %114, label %86, !dbg !11367

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11368
  %88 = load i32, i32* %87, align 4, !dbg !11368
  %89 = icmp eq i32 %88, 1, !dbg !11369
  br i1 %89, label %114, label %311, !dbg !11370

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11371
  %92 = load i32, i32* %91, align 4, !dbg !11371
  %93 = icmp eq i32 %92, 0, !dbg !11374
  br i1 %93, label %104, label %94, !dbg !11375

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !11376
  %95 = tail call i32 @HAL_GetTick() #24, !dbg !11378
  call void @llvm.dbg.value(metadata i32 %95, metadata !11268, metadata !DIExpression()), !dbg !11278
  br label %96, !dbg !11379

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11380
  %98 = and i32 %97, 2, !dbg !11381
  %99 = icmp eq i32 %98, 0, !dbg !11381
  br i1 %99, label %100, label %114, !dbg !11379

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #24, !dbg !11382
  %102 = sub i32 %101, %95, !dbg !11385
  %103 = icmp ugt i32 %102, 2, !dbg !11386
  br i1 %103, label %311, label %96, !dbg !11387, !llvm.loop !11388

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !11390
  %105 = tail call i32 @HAL_GetTick() #24, !dbg !11392
  call void @llvm.dbg.value(metadata i32 %105, metadata !11268, metadata !DIExpression()), !dbg !11278
  br label %106, !dbg !11393

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11394
  %108 = and i32 %107, 2, !dbg !11394
  %109 = icmp eq i32 %108, 0, !dbg !11394
  br i1 %109, label %121, label %110, !dbg !11393

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #24, !dbg !11395
  %112 = sub i32 %111, %105, !dbg !11398
  %113 = icmp ugt i32 %112, 2, !dbg !11399
  br i1 %113, label %311, label %106, !dbg !11400, !llvm.loop !11401

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11403
  %116 = and i32 %115, -249, !dbg !11403
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11403
  %118 = load i32, i32* %117, align 4, !dbg !11403
  %119 = shl i32 %118, 3, !dbg !11403
  %120 = or i32 %119, %116, !dbg !11403
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11403
  br label %121, !dbg !11404

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !11404
  %123 = and i32 %122, 8, !dbg !11406
  %124 = icmp eq i32 %123, 0, !dbg !11407
  br i1 %124, label %149, label %125, !dbg !11408

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11409
  %127 = load i32, i32* %126, align 4, !dbg !11409
  %128 = icmp eq i32 %127, 0, !dbg !11412
  br i1 %128, label %139, label %129, !dbg !11413

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !11414
  %130 = tail call i32 @HAL_GetTick() #24, !dbg !11416
  call void @llvm.dbg.value(metadata i32 %130, metadata !11268, metadata !DIExpression()), !dbg !11278
  br label %131, !dbg !11417

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11418
  %133 = and i32 %132, 2, !dbg !11419
  %134 = icmp eq i32 %133, 0, !dbg !11419
  br i1 %134, label %135, label %149, !dbg !11417

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #24, !dbg !11420
  %137 = sub i32 %136, %130, !dbg !11423
  %138 = icmp ugt i32 %137, 2, !dbg !11424
  br i1 %138, label %311, label %131, !dbg !11425, !llvm.loop !11426

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !11428
  %140 = tail call i32 @HAL_GetTick() #24, !dbg !11430
  call void @llvm.dbg.value(metadata i32 %140, metadata !11268, metadata !DIExpression()), !dbg !11278
  br label %141, !dbg !11431

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11432
  %143 = and i32 %142, 2, !dbg !11432
  %144 = icmp eq i32 %143, 0, !dbg !11432
  br i1 %144, label %149, label %145, !dbg !11431

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #24, !dbg !11433
  %147 = sub i32 %146, %140, !dbg !11436
  %148 = icmp ugt i32 %147, 2, !dbg !11437
  br i1 %148, label %311, label %141, !dbg !11438, !llvm.loop !11439

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !11441
  %151 = and i32 %150, 4, !dbg !11442
  %152 = icmp eq i32 %151, 0, !dbg !11443
  br i1 %152, label %221, label %153, !dbg !11444

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !11270, metadata !DIExpression()), !dbg !11445
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11446
  %155 = and i32 %154, 268435456, !dbg !11446
  %156 = icmp eq i32 %155, 0, !dbg !11446
  br i1 %156, label %157, label %164, !dbg !11447

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !11448
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !11448
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11274, metadata !DIExpression()), !dbg !11448
  store volatile i32 0, i32* %2, align 4, !dbg !11448
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11448
  %160 = or i32 %159, 268435456, !dbg !11448
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11448
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11448
  %162 = and i32 %161, 268435456, !dbg !11448
  store volatile i32 %162, i32* %2, align 4, !dbg !11448
  %163 = load volatile i32, i32* %2, align 4, !dbg !11448
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !11449
  call void @llvm.dbg.value(metadata i32 1, metadata !11270, metadata !DIExpression()), !dbg !11445
  br label %164, !dbg !11450

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !11270, metadata !DIExpression()), !dbg !11445
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11451
  %166 = and i32 %165, 256, !dbg !11451
  %167 = icmp eq i32 %166, 0, !dbg !11451
  br i1 %167, label %168, label %180, !dbg !11453

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11454
  %170 = or i32 %169, 256, !dbg !11454
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11454
  %171 = tail call i32 @HAL_GetTick() #24, !dbg !11456
  call void @llvm.dbg.value(metadata i32 %171, metadata !11268, metadata !DIExpression()), !dbg !11278
  br label %172, !dbg !11457

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11458
  %174 = and i32 %173, 256, !dbg !11458
  %175 = icmp eq i32 %174, 0, !dbg !11458
  br i1 %175, label %176, label %180, !dbg !11457

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #24, !dbg !11459
  %178 = sub i32 %177, %171, !dbg !11462
  %179 = icmp ugt i32 %178, 2, !dbg !11463
  br i1 %179, label %311, label %172, !dbg !11464, !llvm.loop !11465

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11467
  %182 = load i32, i32* %181, align 4, !dbg !11467
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !11470

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11471
  %185 = or i32 %184, 1, !dbg !11471
  br label %196, !dbg !11471

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11473
  %188 = or i32 %187, 4, !dbg !11473
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11473
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11473
  %190 = or i32 %189, 1, !dbg !11473
  br label %196, !dbg !11473

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11476
  %193 = and i32 %192, -2, !dbg !11476
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11476
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11476
  %195 = and i32 %194, -5, !dbg !11476
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11478
  %198 = load i32, i32* %181, align 4, !dbg !11479
  %199 = icmp eq i32 %198, 0, !dbg !11481
  %200 = tail call i32 @HAL_GetTick() #24, !dbg !11482
  call void @llvm.dbg.value(metadata i32 %200, metadata !11268, metadata !DIExpression()), !dbg !11278
  call void @llvm.dbg.value(metadata i32 %200, metadata !11268, metadata !DIExpression()), !dbg !11278
  br i1 %199, label %209, label %201, !dbg !11483

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11484
  %203 = and i32 %202, 2, !dbg !11486
  %204 = icmp eq i32 %203, 0, !dbg !11486
  br i1 %204, label %205, label %217, !dbg !11487

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #24, !dbg !11488
  %207 = sub i32 %206, %200, !dbg !11491
  %208 = icmp ugt i32 %207, 5000, !dbg !11492
  br i1 %208, label %311, label %201, !dbg !11493, !llvm.loop !11494

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11496
  %211 = and i32 %210, 2, !dbg !11496
  %212 = icmp eq i32 %211, 0, !dbg !11496
  br i1 %212, label %217, label %213, !dbg !11498

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #24, !dbg !11499
  %215 = sub i32 %214, %200, !dbg !11502
  %216 = icmp ugt i32 %215, 5000, !dbg !11503
  br i1 %216, label %311, label %209, !dbg !11504, !llvm.loop !11505

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !11507

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11508
  %220 = and i32 %219, -268435457, !dbg !11508
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11508
  br label %221, !dbg !11511

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !11512
  %223 = load i32, i32* %222, align 4, !dbg !11512
  %224 = icmp eq i32 %223, 0, !dbg !11514
  br i1 %224, label %310, label %225, !dbg !11515

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11516
  %227 = and i32 %226, 12, !dbg !11516
  %228 = icmp eq i32 %227, 8, !dbg !11519
  br i1 %228, label %277, label %229, !dbg !11520

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !11521
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !11524
  %231 = tail call i32 @HAL_GetTick() #24, !dbg !11524
  call void @llvm.dbg.value(metadata i32 %231, metadata !11268, metadata !DIExpression()), !dbg !11278
  call void @llvm.dbg.value(metadata i32 %231, metadata !11268, metadata !DIExpression()), !dbg !11278
  br i1 %230, label %232, label %269, !dbg !11525

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11526
  %234 = and i32 %233, 33554432, !dbg !11526
  %235 = icmp eq i32 %234, 0, !dbg !11526
  br i1 %235, label %240, label %236, !dbg !11528

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #24, !dbg !11529
  %238 = sub i32 %237, %231, !dbg !11532
  %239 = icmp ugt i32 %238, 2, !dbg !11533
  br i1 %239, label %311, label %232, !dbg !11534, !llvm.loop !11535

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11537
  %242 = load i32, i32* %241, align 4, !dbg !11537
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11537
  %244 = load i32, i32* %243, align 4, !dbg !11537
  %245 = or i32 %244, %242, !dbg !11537
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11537
  %247 = load i32, i32* %246, align 4, !dbg !11537
  %248 = shl i32 %247, 6, !dbg !11537
  %249 = or i32 %245, %248, !dbg !11537
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11537
  %251 = load i32, i32* %250, align 4, !dbg !11537
  %252 = shl i32 %251, 15, !dbg !11537
  %253 = add i32 %252, -65536, !dbg !11537
  %254 = and i32 %253, -65536, !dbg !11537
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11537
  %256 = load i32, i32* %255, align 4, !dbg !11537
  %257 = shl i32 %256, 24, !dbg !11537
  %258 = or i32 %249, %257, !dbg !11537
  %259 = or i32 %258, %254, !dbg !11537
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11537
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !11538
  %260 = tail call i32 @HAL_GetTick() #24, !dbg !11539
  call void @llvm.dbg.value(metadata i32 %260, metadata !11268, metadata !DIExpression()), !dbg !11278
  br label %261, !dbg !11540

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11541
  %263 = and i32 %262, 33554432, !dbg !11542
  %264 = icmp eq i32 %263, 0, !dbg !11542
  br i1 %264, label %265, label %310, !dbg !11540

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #24, !dbg !11543
  %267 = sub i32 %266, %260, !dbg !11546
  %268 = icmp ugt i32 %267, 2, !dbg !11547
  br i1 %268, label %311, label %261, !dbg !11548, !llvm.loop !11549

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11551
  %271 = and i32 %270, 33554432, !dbg !11551
  %272 = icmp eq i32 %271, 0, !dbg !11551
  br i1 %272, label %310, label %273, !dbg !11553

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #24, !dbg !11554
  %275 = sub i32 %274, %231, !dbg !11557
  %276 = icmp ugt i32 %275, 2, !dbg !11558
  br i1 %276, label %311, label %269, !dbg !11559, !llvm.loop !11560

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !11562
  br i1 %278, label %311, label %279, !dbg !11565

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11566
  call void @llvm.dbg.value(metadata i32 %280, metadata !11269, metadata !DIExpression()), !dbg !11278
  %281 = and i32 %280, 4194304, !dbg !11568
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11570
  %283 = load i32, i32* %282, align 4, !dbg !11570
  %284 = icmp eq i32 %281, %283, !dbg !11571
  br i1 %284, label %285, label %311, !dbg !11572

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !11573
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11574
  %288 = load i32, i32* %287, align 4, !dbg !11574
  %289 = icmp eq i32 %286, %288, !dbg !11575
  br i1 %289, label %290, label %311, !dbg !11576

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !11577
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11578
  %293 = load i32, i32* %292, align 4, !dbg !11578
  %294 = shl i32 %293, 6, !dbg !11579
  %295 = icmp eq i32 %291, %294, !dbg !11580
  br i1 %295, label %296, label %311, !dbg !11581

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !11582
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11583
  %299 = load i32, i32* %298, align 4, !dbg !11583
  %300 = shl i32 %299, 15, !dbg !11584
  %301 = add i32 %300, -65536, !dbg !11584
  %302 = and i32 %301, -65536, !dbg !11584
  %303 = icmp eq i32 %297, %302, !dbg !11585
  br i1 %303, label %304, label %311, !dbg !11586

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !11587
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11588
  %307 = load i32, i32* %306, align 4, !dbg !11588
  %308 = shl i32 %307, 24, !dbg !11589
  %309 = icmp eq i32 %305, %308, !dbg !11590
  br i1 %309, label %310, label %311, !dbg !11591

310:                                              ; preds = %269, %261, %304, %221
  br label %311, !dbg !11592

311:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %277, %86, %25, %1, %310
  %312 = phi i32 [ 0, %310 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !11278
  ret i32 %312, !dbg !11593
}

; Function Attrs: optsize
declare !dbg !11594 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !11596 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11609, metadata !DIExpression()), !dbg !11612
  call void @llvm.dbg.value(metadata i32 %1, metadata !11610, metadata !DIExpression()), !dbg !11612
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !11613
  br i1 %3, label %115, label %4, !dbg !11615

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11616
  %6 = and i32 %5, 15, !dbg !11616
  %7 = icmp ult i32 %6, %1, !dbg !11618
  br i1 %7, label %8, label %13, !dbg !11619

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !11620
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !11620
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11622
  %11 = and i32 %10, 15, !dbg !11622
  %12 = icmp eq i32 %11, %1, !dbg !11624
  br i1 %12, label %13, label %115, !dbg !11625

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11626
  %15 = load i32, i32* %14, align 4, !dbg !11626
  %16 = and i32 %15, 2, !dbg !11628
  %17 = icmp eq i32 %16, 0, !dbg !11629
  br i1 %17, label %39, label %18, !dbg !11630

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !11631
  %20 = icmp eq i32 %19, 0, !dbg !11634
  br i1 %20, label %25, label %21, !dbg !11635

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11636
  %23 = or i32 %22, 7168, !dbg !11636
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11636
  %24 = load i32, i32* %14, align 4, !dbg !11638
  br label %25, !dbg !11640

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !11638
  %27 = and i32 %26, 8, !dbg !11641
  %28 = icmp eq i32 %27, 0, !dbg !11642
  br i1 %28, label %32, label %29, !dbg !11643

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11644
  %31 = or i32 %30, 57344, !dbg !11644
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11644
  br label %32, !dbg !11646

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11647
  %34 = and i32 %33, -241, !dbg !11647
  %35 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11647
  %36 = load i32, i32* %35, align 4, !dbg !11647
  %37 = or i32 %34, %36, !dbg !11647
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11647
  %38 = load i32, i32* %14, align 4, !dbg !11648
  br label %39, !dbg !11650

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !11648
  %41 = and i32 %40, 1, !dbg !11651
  %42 = icmp eq i32 %41, 0, !dbg !11652
  br i1 %42, label %73, label %43, !dbg !11653

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11654
  %45 = load i32, i32* %44, align 4, !dbg !11654
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !11657

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11658
  %48 = and i32 %47, 131072, !dbg !11661
  %49 = icmp eq i32 %48, 0, !dbg !11661
  br i1 %49, label %115, label %58, !dbg !11662

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11663
  %52 = and i32 %51, 33554432, !dbg !11667
  %53 = icmp eq i32 %52, 0, !dbg !11667
  br i1 %53, label %115, label %58, !dbg !11668

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11669
  %56 = and i32 %55, 2, !dbg !11672
  %57 = icmp eq i32 %56, 0, !dbg !11672
  br i1 %57, label %115, label %58, !dbg !11673

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11674
  %60 = and i32 %59, -4, !dbg !11674
  %61 = or i32 %60, %45, !dbg !11674
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11674
  %62 = tail call i32 @HAL_GetTick() #24, !dbg !11675
  call void @llvm.dbg.value(metadata i32 %62, metadata !11611, metadata !DIExpression()), !dbg !11612
  br label %63, !dbg !11676

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11677
  %65 = and i32 %64, 12, !dbg !11677
  %66 = load i32, i32* %44, align 4, !dbg !11678
  %67 = shl i32 %66, 2, !dbg !11679
  %68 = icmp eq i32 %65, %67, !dbg !11680
  br i1 %68, label %73, label %69, !dbg !11676

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #24, !dbg !11681
  %71 = sub i32 %70, %62, !dbg !11684
  %72 = icmp ugt i32 %71, 5000, !dbg !11685
  br i1 %72, label %115, label %63, !dbg !11686, !llvm.loop !11687

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11689
  %75 = and i32 %74, 15, !dbg !11689
  %76 = icmp ugt i32 %75, %1, !dbg !11691
  br i1 %76, label %77, label %82, !dbg !11692

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !11693
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !11693
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11695
  %80 = and i32 %79, 15, !dbg !11695
  %81 = icmp eq i32 %80, %1, !dbg !11697
  br i1 %81, label %82, label %115, !dbg !11698

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !11699
  %84 = and i32 %83, 4, !dbg !11701
  %85 = icmp eq i32 %84, 0, !dbg !11702
  br i1 %85, label %93, label %86, !dbg !11703

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11704
  %88 = and i32 %87, -7169, !dbg !11704
  %89 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11704
  %90 = load i32, i32* %89, align 4, !dbg !11704
  %91 = or i32 %88, %90, !dbg !11704
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11704
  %92 = load i32, i32* %14, align 4, !dbg !11706
  br label %93, !dbg !11708

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !11706
  %95 = and i32 %94, 8, !dbg !11709
  %96 = icmp eq i32 %95, 0, !dbg !11710
  br i1 %96, label %104, label %97, !dbg !11711

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11712
  %99 = and i32 %98, -57345, !dbg !11712
  %100 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11712
  %101 = load i32, i32* %100, align 4, !dbg !11712
  %102 = shl i32 %101, 3, !dbg !11712
  %103 = or i32 %102, %99, !dbg !11712
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11712
  br label %104, !dbg !11714

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !11715
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11716
  %107 = lshr i32 %106, 4, !dbg !11717
  %108 = and i32 %107, 15, !dbg !11717
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !11718
  %110 = load i8, i8* %109, align 1, !dbg !11718
  %111 = zext i8 %110 to i32, !dbg !11718
  %112 = lshr i32 %105, %111, !dbg !11719
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !11720
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !11721
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #24, !dbg !11722
  br label %115, !dbg !11723

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !11612
  ret i32 %116, !dbg !11724
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !11725 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11727, metadata !DIExpression()), !dbg !11731
  call void @llvm.dbg.value(metadata i32 0, metadata !11728, metadata !DIExpression()), !dbg !11731
  call void @llvm.dbg.value(metadata i32 0, metadata !11729, metadata !DIExpression()), !dbg !11731
  call void @llvm.dbg.value(metadata i32 0, metadata !11730, metadata !DIExpression()), !dbg !11731
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11732
  %2 = and i32 %1, 12, !dbg !11733
  switch i32 %2, label %24 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !11734

3:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 24000000, metadata !11730, metadata !DIExpression()), !dbg !11731
  br label %24, !dbg !11735

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11738
  %6 = and i32 %5, 63, !dbg !11740
  call void @llvm.dbg.value(metadata i32 %6, metadata !11727, metadata !DIExpression()), !dbg !11731
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11741
  %8 = and i32 %7, 4194304, !dbg !11741
  %9 = icmp eq i32 %8, 0, !dbg !11743
  %10 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11744
  %11 = lshr i32 %10, 6, !dbg !11744
  %12 = and i32 %11, 511, !dbg !11744
  %13 = zext i32 %12 to i64, !dbg !11744
  %14 = select i1 %9, i64 16000000, i64 24000000
  %15 = mul nuw nsw i64 %14, %13, !dbg !11744
  %16 = zext i32 %6 to i64, !dbg !11744
  %17 = udiv i64 %15, %16, !dbg !11744
  %18 = trunc i64 %17 to i32, !dbg !11744
  call void @llvm.dbg.value(metadata i32 %18, metadata !11728, metadata !DIExpression()), !dbg !11731
  %19 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11745
  %20 = lshr i32 %19, 15, !dbg !11746
  %21 = and i32 %20, 6, !dbg !11746
  %22 = add nuw nsw i32 %21, 2, !dbg !11746
  call void @llvm.dbg.value(metadata i32 %22, metadata !11729, metadata !DIExpression()), !dbg !11731
  %23 = udiv i32 %18, %22, !dbg !11747
  call void @llvm.dbg.value(metadata i32 %23, metadata !11730, metadata !DIExpression()), !dbg !11731
  br label %24, !dbg !11748

24:                                               ; preds = %0, %4, %3
  %25 = phi i32 [ %23, %4 ], [ 24000000, %3 ], [ 16000000, %0 ], !dbg !11749
  call void @llvm.dbg.value(metadata i32 %25, metadata !11730, metadata !DIExpression()), !dbg !11731
  ret i32 %25, !dbg !11750
}

; Function Attrs: optsize
declare !dbg !11751 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11754 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11758, metadata !DIExpression()), !dbg !11778
  call void @llvm.dbg.value(metadata i32 %1, metadata !11759, metadata !DIExpression()), !dbg !11778
  call void @llvm.dbg.value(metadata i32 %2, metadata !11760, metadata !DIExpression()), !dbg !11778
  %7 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !11779
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #23, !dbg !11779
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !11761, metadata !DIExpression()), !dbg !11780
  %8 = icmp eq i32 %0, 0, !dbg !11781
  br i1 %8, label %9, label %23, !dbg !11782

9:                                                ; preds = %3
  %10 = bitcast i32* %5 to i8*, !dbg !11783
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10), !dbg !11783
  call void @llvm.dbg.declare(metadata i32* %5, metadata !11771, metadata !DIExpression()), !dbg !11783
  store volatile i32 0, i32* %5, align 4, !dbg !11783
  %11 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11783
  %12 = or i32 %11, 1, !dbg !11783
  store volatile i32 %12, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11783
  %13 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11783
  %14 = and i32 %13, 1, !dbg !11783
  store volatile i32 %14, i32* %5, align 4, !dbg !11783
  %15 = load volatile i32, i32* %5, align 4, !dbg !11783
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10), !dbg !11784
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !11785
  store i32 256, i32* %16, align 4, !dbg !11786
  %17 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !11787
  store i32 2, i32* %17, align 4, !dbg !11788
  %18 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !11789
  store i32 3, i32* %18, align 4, !dbg !11790
  %19 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !11791
  store i32 0, i32* %19, align 4, !dbg !11792
  %20 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !11793
  store i32 0, i32* %20, align 4, !dbg !11794
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #24, !dbg !11795
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11796
  %22 = and i32 %21, -123731969, !dbg !11796
  br label %38, !dbg !11797

23:                                               ; preds = %3
  %24 = bitcast i32* %6 to i8*, !dbg !11798
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24), !dbg !11798
  call void @llvm.dbg.declare(metadata i32* %6, metadata !11775, metadata !DIExpression()), !dbg !11798
  store volatile i32 0, i32* %6, align 4, !dbg !11798
  %25 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11798
  %26 = or i32 %25, 4, !dbg !11798
  store volatile i32 %26, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11798
  %27 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11798
  %28 = and i32 %27, 4, !dbg !11798
  store volatile i32 %28, i32* %6, align 4, !dbg !11798
  %29 = load volatile i32, i32* %6, align 4, !dbg !11798
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24), !dbg !11799
  %30 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !11800
  store i32 512, i32* %30, align 4, !dbg !11801
  %31 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !11802
  store i32 2, i32* %31, align 4, !dbg !11803
  %32 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !11804
  store i32 3, i32* %32, align 4, !dbg !11805
  %33 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !11806
  store i32 0, i32* %33, align 4, !dbg !11807
  %34 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !11808
  store i32 0, i32* %34, align 4, !dbg !11809
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073874944 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #24, !dbg !11810
  %35 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11811
  %36 = and i32 %35, 134217727, !dbg !11811
  %37 = shl i32 %2, 3, !dbg !11811
  br label %38

38:                                               ; preds = %23, %9
  %39 = phi i32 [ %37, %23 ], [ %2, %9 ]
  %40 = phi i32 [ %36, %23 ], [ %22, %9 ]
  %41 = or i32 %39, %1, !dbg !11812
  %42 = or i32 %41, %40, !dbg !11812
  store volatile i32 %42, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11812
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #23, !dbg !11813
  ret void, !dbg !11813
}

; Function Attrs: optsize
declare !dbg !11814 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #15 !dbg !11818 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !11819
  ret void, !dbg !11820
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #15 !dbg !11821 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !11822
  ret void, !dbg !11823
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #10 !dbg !11824 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !11825
  ret i32 %1, !dbg !11826
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #5 !dbg !11827 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #25, !dbg !11828
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11829
  %3 = lshr i32 %2, 10, !dbg !11830
  %4 = and i32 %3, 7, !dbg !11830
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11831
  %6 = load i8, i8* %5, align 1, !dbg !11831
  %7 = zext i8 %6 to i32, !dbg !11831
  %8 = lshr i32 %1, %7, !dbg !11832
  ret i32 %8, !dbg !11833
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #5 !dbg !11834 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #25, !dbg !11835
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11836
  %3 = lshr i32 %2, 13, !dbg !11837
  %4 = and i32 %3, 7, !dbg !11837
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11838
  %6 = load i8, i8* %5, align 1, !dbg !11838
  %7 = zext i8 %6 to i32, !dbg !11838
  %8 = lshr i32 %1, %7, !dbg !11839
  ret i32 %8, !dbg !11840
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !11841 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11845, metadata !DIExpression()), !dbg !11846
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11847
  store i32 15, i32* %2, align 4, !dbg !11848
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11849
  %4 = and i32 %3, 262144, !dbg !11851
  %5 = icmp eq i32 %4, 0, !dbg !11852
  br i1 %5, label %8, label %6, !dbg !11853

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11854
  store i32 327680, i32* %7, align 4, !dbg !11856
  br label %15, !dbg !11857

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11858
  %10 = and i32 %9, 65536, !dbg !11860
  %11 = icmp eq i32 %10, 0, !dbg !11861
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11862
  br i1 %11, label %14, label %13, !dbg !11863

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !11864
  br label %15, !dbg !11866

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !11867
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11869
  %17 = and i32 %16, 1, !dbg !11871
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11872
  store i32 %17, i32* %18, align 4, !dbg !11874
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11875
  %20 = lshr i32 %19, 3, !dbg !11876
  %21 = and i32 %20, 31, !dbg !11876
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11877
  store i32 %21, i32* %22, align 4, !dbg !11878
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11879
  %24 = and i32 %23, 4, !dbg !11881
  %25 = icmp eq i32 %24, 0, !dbg !11882
  br i1 %25, label %28, label %26, !dbg !11883

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11884
  store i32 5, i32* %27, align 4, !dbg !11886
  br label %35, !dbg !11887

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11888
  %30 = and i32 %29, 1, !dbg !11890
  %31 = icmp eq i32 %30, 0, !dbg !11891
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11892
  br i1 %31, label %34, label %33, !dbg !11893

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !11894
  br label %35, !dbg !11896

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !11897
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11899
  %37 = and i32 %36, 1, !dbg !11901
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11902
  store i32 %37, i32* %38, align 4, !dbg !11904
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11905
  %40 = and i32 %39, 16777216, !dbg !11907
  %41 = icmp eq i32 %40, 0, !dbg !11908
  %42 = select i1 %41, i32 1, i32 2, !dbg !11909
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !11910
  store i32 %42, i32* %43, align 4, !dbg !11912
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11913
  %45 = and i32 %44, 4194304, !dbg !11914
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11915
  store i32 %45, i32* %46, align 4, !dbg !11916
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11917
  %48 = and i32 %47, 63, !dbg !11918
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11919
  store i32 %48, i32* %49, align 4, !dbg !11920
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11921
  %51 = lshr i32 %50, 6, !dbg !11922
  %52 = and i32 %51, 511, !dbg !11922
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11923
  store i32 %52, i32* %53, align 4, !dbg !11924
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11925
  %55 = shl i32 %54, 1, !dbg !11926
  %56 = and i32 %55, 393216, !dbg !11926
  %57 = add nuw nsw i32 %56, 131072, !dbg !11926
  %58 = lshr exact i32 %57, 16, !dbg !11927
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11928
  store i32 %58, i32* %59, align 4, !dbg !11929
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11930
  %61 = lshr i32 %60, 24, !dbg !11931
  %62 = and i32 %61, 15, !dbg !11931
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11932
  store i32 %62, i32* %63, align 4, !dbg !11933
  ret void, !dbg !11934
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #5 !dbg !11935 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11939, metadata !DIExpression()), !dbg !11941
  call void @llvm.dbg.value(metadata i32* %1, metadata !11940, metadata !DIExpression()), !dbg !11941
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11942
  store i32 15, i32* %3, align 4, !dbg !11943
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11944
  %5 = and i32 %4, 3, !dbg !11945
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11946
  store i32 %5, i32* %6, align 4, !dbg !11947
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11948
  %8 = and i32 %7, 240, !dbg !11949
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11950
  store i32 %8, i32* %9, align 4, !dbg !11951
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11952
  %11 = and i32 %10, 7168, !dbg !11953
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11954
  store i32 %11, i32* %12, align 4, !dbg !11955
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11956
  %14 = lshr i32 %13, 3, !dbg !11957
  %15 = and i32 %14, 7168, !dbg !11957
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11958
  store i32 %15, i32* %16, align 4, !dbg !11959
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11960
  %18 = and i32 %17, 15, !dbg !11961
  store i32 %18, i32* %1, align 4, !dbg !11962
  ret void, !dbg !11963
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !11964 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11965
  %2 = and i32 %1, 128, !dbg !11965
  %3 = icmp eq i32 %2, 0, !dbg !11965
  br i1 %3, label %5, label %4, !dbg !11967

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #25, !dbg !11968
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !11970
  br label %5, !dbg !11971

5:                                                ; preds = %4, %0
  ret void, !dbg !11972
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !11973 {
  ret void, !dbg !11974
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #15 !dbg !11975 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11978, metadata !DIExpression()), !dbg !11979
  tail call fastcc void @LL_InitTick(i32 noundef %0) #25, !dbg !11980
  ret void, !dbg !11981
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #15 !dbg !11982 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11985, metadata !DIExpression()), !dbg !11987
  call void @llvm.dbg.value(metadata i32 1000, metadata !11986, metadata !DIExpression()), !dbg !11987
  %2 = udiv i32 %0, 1000, !dbg !11988
  %3 = add nsw i32 %2, -1, !dbg !11989
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11990
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11991
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11992
  ret void, !dbg !11993
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #19 !dbg !11994 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11996, metadata !DIExpression()), !dbg !11998
  %3 = bitcast i32* %2 to i8*, !dbg !11999
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11999
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11997, metadata !DIExpression()), !dbg !12000
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12001
  store volatile i32 %4, i32* %2, align 4, !dbg !12000
  %5 = load volatile i32, i32* %2, align 4, !dbg !12002
  %6 = icmp eq i32 %0, -1, !dbg !12003
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !11996, metadata !DIExpression()), !dbg !11998
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !11998
  call void @llvm.dbg.value(metadata i32 %8, metadata !11996, metadata !DIExpression()), !dbg !11998
  br label %9, !dbg !12005

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11996, metadata !DIExpression()), !dbg !11998
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12006
  call void @llvm.dbg.value(metadata i32 undef, metadata !11996, metadata !DIExpression()), !dbg !11998
  %12 = shl i32 %11, 15, !dbg !11998
  %13 = ashr i32 %12, 31, !dbg !11998
  %14 = add i32 %13, %10, !dbg !11998
  call void @llvm.dbg.value(metadata i32 %14, metadata !11996, metadata !DIExpression()), !dbg !11998
  %15 = icmp eq i32 %14, 0, !dbg !12005
  br i1 %15, label %16, label %9, !dbg !12005

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12009
  ret void, !dbg !12009
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #9 !dbg !12010 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12012, metadata !DIExpression()), !dbg !12013
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !12014
  ret void, !dbg !12015
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #15 !dbg !12016 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12021, metadata !DIExpression()), !dbg !12026
  call void @llvm.dbg.value(metadata i32 0, metadata !12024, metadata !DIExpression()), !dbg !12026
  call void @llvm.dbg.value(metadata i32 0, metadata !12025, metadata !DIExpression()), !dbg !12026
  %2 = icmp eq i32 %0, 0, !dbg !12027
  br i1 %2, label %72, label %3, !dbg !12029

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #25, !dbg !12030
  %5 = icmp eq i32 %4, 49152, !dbg !12033
  br i1 %5, label %6, label %21, !dbg !12034

6:                                                ; preds = %3
  %7 = icmp ult i32 %0, 150000001, !dbg !12035
  %8 = select i1 %7, i32 0, i32 5, !dbg !12038
  call void @llvm.dbg.value(metadata i32 %8, metadata !12024, metadata !DIExpression()), !dbg !12026
  %9 = add i32 %0, -120000001, !dbg !12039
  %10 = icmp ult i32 %9, 30000000, !dbg !12039
  %11 = select i1 %10, i32 4, i32 %8, !dbg !12039
  call void @llvm.dbg.value(metadata i32 %11, metadata !12024, metadata !DIExpression()), !dbg !12026
  %12 = icmp ult i32 %9, -30000000, !dbg !12041
  %13 = select i1 %12, i32 %11, i32 3, !dbg !12041
  call void @llvm.dbg.value(metadata i32 %13, metadata !12024, metadata !DIExpression()), !dbg !12026
  %14 = icmp ugt i32 %0, 60000000, !dbg !12043
  %15 = icmp eq i32 %13, 0
  %16 = and i1 %14, %15, !dbg !12045
  br i1 %16, label %21, label %17, !dbg !12045

17:                                               ; preds = %6
  %18 = icmp ugt i32 %0, 30000000, !dbg !12046
  %19 = and i1 %18, %15, !dbg !12049
  %20 = select i1 %19, i32 1, i32 %13, !dbg !12049
  br label %21, !dbg !12049

21:                                               ; preds = %17, %6, %3
  %22 = phi i32 [ 0, %3 ], [ 2, %6 ], [ %20, %17 ], !dbg !12026
  call void @llvm.dbg.value(metadata i32 %22, metadata !12024, metadata !DIExpression()), !dbg !12026
  %23 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #25, !dbg !12050
  %24 = icmp eq i32 %23, 32768, !dbg !12052
  br i1 %24, label %25, label %45, !dbg !12053

25:                                               ; preds = %21
  %26 = icmp ugt i32 %0, 150000000, !dbg !12054
  %27 = icmp eq i32 %22, 0
  %28 = and i1 %26, %27, !dbg !12057
  %29 = select i1 %28, i32 5, i32 %22, !dbg !12057
  call void @llvm.dbg.value(metadata i32 %29, metadata !12024, metadata !DIExpression()), !dbg !12026
  %30 = icmp ugt i32 %0, 12000000, !dbg !12058
  %31 = icmp eq i32 %29, 0
  %32 = and i1 %30, %31, !dbg !12060
  %33 = select i1 %32, i32 4, i32 %29, !dbg !12060
  call void @llvm.dbg.value(metadata i32 %33, metadata !12024, metadata !DIExpression()), !dbg !12026
  %34 = icmp ugt i32 %0, 90000000, !dbg !12061
  %35 = icmp eq i32 %33, 0
  %36 = and i1 %34, %35, !dbg !12063
  %37 = select i1 %36, i32 3, i32 %33, !dbg !12063
  call void @llvm.dbg.value(metadata i32 %37, metadata !12024, metadata !DIExpression()), !dbg !12026
  %38 = icmp ugt i32 %0, 60000000, !dbg !12064
  %39 = icmp eq i32 %37, 0
  %40 = select i1 %38, i1 %39, i1 false, !dbg !12066
  br i1 %40, label %45, label %41, !dbg !12066

41:                                               ; preds = %25
  %42 = icmp ugt i32 %0, 30000000, !dbg !12067
  %43 = select i1 %42, i1 %39, i1 false, !dbg !12070
  %44 = select i1 %43, i32 1, i32 %37, !dbg !12070
  br label %45, !dbg !12070

45:                                               ; preds = %41, %25, %21
  %46 = phi i32 [ %22, %21 ], [ 2, %25 ], [ %44, %41 ], !dbg !12071
  call void @llvm.dbg.value(metadata i32 %46, metadata !12024, metadata !DIExpression()), !dbg !12026
  %47 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #25, !dbg !12072
  %48 = icmp eq i32 %47, 16384, !dbg !12074
  br i1 %48, label %49, label %61, !dbg !12075

49:                                               ; preds = %45
  %50 = icmp ugt i32 %0, 90000000, !dbg !12076
  %51 = icmp eq i32 %46, 0
  %52 = select i1 %50, i1 %51, i1 false, !dbg !12079
  %53 = select i1 %52, i32 3, i32 %46, !dbg !12079
  call void @llvm.dbg.value(metadata i32 %53, metadata !12024, metadata !DIExpression()), !dbg !12026
  %54 = icmp ugt i32 %0, 60000000, !dbg !12080
  %55 = icmp eq i32 %53, 0
  %56 = select i1 %54, i1 %55, i1 false, !dbg !12082
  br i1 %56, label %61, label %57, !dbg !12082

57:                                               ; preds = %49
  %58 = icmp ugt i32 %0, 30000000, !dbg !12083
  %59 = select i1 %58, i1 %55, i1 false, !dbg !12086
  %60 = select i1 %59, i32 1, i32 %53, !dbg !12086
  br label %61, !dbg !12086

61:                                               ; preds = %57, %49, %45
  %62 = phi i32 [ %46, %45 ], [ 2, %49 ], [ %60, %57 ], !dbg !12071
  call void @llvm.dbg.value(metadata i32 %62, metadata !12024, metadata !DIExpression()), !dbg !12026
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %62) #25, !dbg !12087
  call void @llvm.dbg.value(metadata i32 2, metadata !12022, metadata !DIExpression()), !dbg !12026
  br label %63, !dbg !12088

63:                                               ; preds = %63, %61
  %64 = phi i32 [ 2, %61 ], [ %66, %63 ], !dbg !12071
  call void @llvm.dbg.value(metadata i32 %64, metadata !12022, metadata !DIExpression()), !dbg !12026
  %65 = tail call fastcc i32 @LL_FLASH_GetLatency() #25, !dbg !12089
  call void @llvm.dbg.value(metadata i32 %65, metadata !12023, metadata !DIExpression()), !dbg !12026
  %66 = add nsw i32 %64, -1, !dbg !12091
  call void @llvm.dbg.value(metadata i32 %66, metadata !12022, metadata !DIExpression()), !dbg !12026
  %67 = icmp ne i32 %65, %62, !dbg !12092
  %68 = icmp ne i32 %66, 0, !dbg !12093
  %69 = select i1 %67, i1 %68, i1 false, !dbg !12093
  br i1 %69, label %63, label %70, !dbg !12094, !llvm.loop !12095

70:                                               ; preds = %63
  %71 = zext i1 %67 to i32
  br label %72

72:                                               ; preds = %70, %1
  %73 = phi i32 [ 1, %1 ], [ %71, %70 ], !dbg !12097
  call void @llvm.dbg.value(metadata i32 %73, metadata !12025, metadata !DIExpression()), !dbg !12026
  ret i32 %73, !dbg !12098
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #5 !dbg !12099 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12101
  %2 = and i32 %1, 49152, !dbg !12101
  ret i32 %2, !dbg !12102
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #15 !dbg !12103 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12105, metadata !DIExpression()), !dbg !12106
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12107
  %3 = and i32 %2, -16, !dbg !12107
  %4 = or i32 %3, %0, !dbg !12107
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12107
  ret void, !dbg !12108
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #5 !dbg !12109 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12110
  %2 = and i32 %1, 15, !dbg !12110
  ret i32 %2, !dbg !12111
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !12112 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !12130, metadata !DIExpression()), !dbg !12134
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12131, metadata !DIExpression()), !dbg !12134
  call void @llvm.dbg.value(metadata i32 0, metadata !12132, metadata !DIExpression()), !dbg !12134
  call void @llvm.dbg.value(metadata i32 0, metadata !12133, metadata !DIExpression()), !dbg !12134
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #25, !dbg !12135
  %4 = icmp eq i32 %3, 0, !dbg !12137
  br i1 %4, label %5, label %21, !dbg !12138

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #25, !dbg !12139
  call void @llvm.dbg.value(metadata i32 %6, metadata !12133, metadata !DIExpression()), !dbg !12134
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.172() #25, !dbg !12141
  %8 = icmp eq i32 %7, 1, !dbg !12143
  br i1 %8, label %13, label %9, !dbg !12144

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.173() #25, !dbg !12145
  br label %10, !dbg !12147

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.172() #25, !dbg !12148
  %12 = icmp eq i32 %11, 1, !dbg !12149
  br i1 %12, label %13, label %10, !dbg !12147, !llvm.loop !12150

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !12152
  %15 = load i32, i32* %14, align 4, !dbg !12152
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !12153
  %17 = load i32, i32* %16, align 4, !dbg !12153
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !12154
  %19 = load i32, i32* %18, align 4, !dbg !12154
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.174(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #25, !dbg !12155
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #25, !dbg !12156
  call void @llvm.dbg.value(metadata i32 %20, metadata !12132, metadata !DIExpression()), !dbg !12134
  br label %21, !dbg !12157

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !12158
  call void @llvm.dbg.value(metadata i32 %22, metadata !12132, metadata !DIExpression()), !dbg !12134
  ret i32 %22, !dbg !12159
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #5 !dbg !12160 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12164, metadata !DIExpression()), !dbg !12165
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.176() #25, !dbg !12166
  %2 = icmp ne i32 %1, 0, !dbg !12168
  call void @llvm.dbg.value(metadata i1 %2, metadata !12164, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12165
  %3 = tail call fastcc i32 @LL_RCC_PLLSAI_IsReady() #25, !dbg !12169
  %4 = icmp ne i32 %3, 0, !dbg !12171
  call void @llvm.dbg.value(metadata i1 undef, metadata !12164, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12165
  %5 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #25, !dbg !12172
  %6 = icmp ne i32 %5, 0, !dbg !12174
  %7 = select i1 %6, i1 true, i1 %4, !dbg !12175
  %8 = select i1 %7, i1 true, i1 %2, !dbg !12175
  %9 = zext i1 %8 to i32, !dbg !12175
  call void @llvm.dbg.value(metadata i32 %9, metadata !12164, metadata !DIExpression()), !dbg !12165
  ret i32 %9, !dbg !12176
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #10 !dbg !12177 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12181, metadata !DIExpression()), !dbg !12184
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12182, metadata !DIExpression()), !dbg !12184
  call void @llvm.dbg.value(metadata i32 0, metadata !12183, metadata !DIExpression()), !dbg !12184
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !12185
  %4 = load i32, i32* %3, align 4, !dbg !12185
  %5 = and i32 %4, 63, !dbg !12186
  %6 = udiv i32 %0, %5, !dbg !12187
  call void @llvm.dbg.value(metadata i32 %6, metadata !12183, metadata !DIExpression()), !dbg !12184
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !12188
  %8 = load i32, i32* %7, align 4, !dbg !12188
  %9 = and i32 %8, 511, !dbg !12189
  %10 = mul i32 %9, %6, !dbg !12190
  call void @llvm.dbg.value(metadata i32 %10, metadata !12183, metadata !DIExpression()), !dbg !12184
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !12191
  %12 = load i32, i32* %11, align 4, !dbg !12191
  %13 = lshr i32 %12, 15, !dbg !12192
  %14 = and i32 %13, 131070, !dbg !12192
  %15 = add nuw nsw i32 %14, 2, !dbg !12192
  %16 = udiv i32 %10, %15, !dbg !12193
  call void @llvm.dbg.value(metadata i32 %16, metadata !12183, metadata !DIExpression()), !dbg !12184
  ret i32 %16, !dbg !12194
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.172() unnamed_addr #5 !dbg !12195 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12196
  %2 = lshr i32 %1, 1, !dbg !12197
  %3 = and i32 %2, 1, !dbg !12197
  ret i32 %3, !dbg !12198
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.173() unnamed_addr #15 !dbg !12199 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12200
  %2 = or i32 %1, 1, !dbg !12200
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12200
  ret void, !dbg !12201
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.174(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #15 !dbg !12202 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12204, metadata !DIExpression()), !dbg !12208
  call void @llvm.dbg.value(metadata i32 %1, metadata !12205, metadata !DIExpression()), !dbg !12208
  call void @llvm.dbg.value(metadata i32 %2, metadata !12206, metadata !DIExpression()), !dbg !12208
  call void @llvm.dbg.value(metadata i32 %3, metadata !12207, metadata !DIExpression()), !dbg !12208
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12209
  %6 = and i32 %5, -4227072, !dbg !12209
  %7 = or i32 %1, %0, !dbg !12209
  %8 = shl i32 %2, 6, !dbg !12209
  %9 = or i32 %7, %8, !dbg !12209
  %10 = or i32 %9, %6, !dbg !12209
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12209
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12210
  %12 = and i32 %11, -196609, !dbg !12210
  %13 = or i32 %12, %3, !dbg !12210
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12210
  ret void, !dbg !12211
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #15 !dbg !12212 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12216, metadata !DIExpression()), !dbg !12220
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12217, metadata !DIExpression()), !dbg !12220
  call void @llvm.dbg.value(metadata i32 0, metadata !12218, metadata !DIExpression()), !dbg !12220
  call void @llvm.dbg.value(metadata i32 0, metadata !12219, metadata !DIExpression()), !dbg !12220
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !12221
  %4 = load i32, i32* %3, align 4, !dbg !12221
  %5 = lshr i32 %4, 4, !dbg !12221
  %6 = and i32 %5, 15, !dbg !12221
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !12221
  %8 = load i8, i8* %7, align 1, !dbg !12221
  %9 = zext i8 %8 to i32, !dbg !12221
  %10 = lshr i32 %0, %9, !dbg !12221
  call void @llvm.dbg.value(metadata i32 %10, metadata !12219, metadata !DIExpression()), !dbg !12220
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !12222
  %12 = icmp ult i32 %11, %10, !dbg !12224
  br i1 %12, label %13, label %16, !dbg !12225

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #25, !dbg !12226
  call void @llvm.dbg.value(metadata i32 %14, metadata !12218, metadata !DIExpression()), !dbg !12220
  %15 = icmp eq i32 %14, 0, !dbg !12228
  br i1 %15, label %16, label %30, !dbg !12230

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.175() #25, !dbg !12231
  br label %17, !dbg !12233

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.176() #25, !dbg !12234
  %19 = icmp eq i32 %18, 1, !dbg !12235
  br i1 %19, label %20, label %17, !dbg !12233, !llvm.loop !12236

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !12238
  tail call fastcc void @LL_RCC_SetAHBPrescaler.177(i32 noundef %21) #25, !dbg !12239
  tail call fastcc void @LL_RCC_SetSysClkSource.178() #25, !dbg !12240
  br label %22, !dbg !12241

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.179() #25, !dbg !12242
  %24 = icmp eq i32 %23, 8, !dbg !12243
  br i1 %24, label %25, label %22, !dbg !12241, !llvm.loop !12244

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !12246
  %27 = load i32, i32* %26, align 4, !dbg !12246
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.180(i32 noundef %27) #25, !dbg !12247
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !12248
  %29 = load i32, i32* %28, align 4, !dbg !12248
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.181(i32 noundef %29) #25, !dbg !12249
  br label %30, !dbg !12250

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !12251
  %33 = icmp ugt i32 %32, %10, !dbg !12253
  br i1 %33, label %34, label %36, !dbg !12254

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #25, !dbg !12255
  call void @llvm.dbg.value(metadata i32 %35, metadata !12218, metadata !DIExpression()), !dbg !12220
  br label %36, !dbg !12257

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !12220
  call void @llvm.dbg.value(metadata i32 %37, metadata !12218, metadata !DIExpression()), !dbg !12220
  %38 = icmp eq i32 %37, 0, !dbg !12258
  br i1 %38, label %39, label %40, !dbg !12260

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #25, !dbg !12261
  br label %40, !dbg !12263

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !12264
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.175() unnamed_addr #15 !dbg !12265 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12266
  %2 = or i32 %1, 16777216, !dbg !12266
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12266
  ret void, !dbg !12267
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.176() unnamed_addr #5 !dbg !12268 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12269
  %2 = lshr i32 %1, 25, !dbg !12270
  %3 = and i32 %2, 1, !dbg !12270
  ret i32 %3, !dbg !12271
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.177(i32 noundef %0) unnamed_addr #15 !dbg !12272 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12274, metadata !DIExpression()), !dbg !12275
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12276
  %3 = and i32 %2, -241, !dbg !12276
  %4 = or i32 %3, %0, !dbg !12276
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12276
  ret void, !dbg !12277
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.178() unnamed_addr #15 !dbg !12278 {
  call void @llvm.dbg.value(metadata i32 2, metadata !12280, metadata !DIExpression()), !dbg !12281
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12282
  %2 = and i32 %1, -4, !dbg !12282
  %3 = or i32 %2, 2, !dbg !12282
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12282
  ret void, !dbg !12283
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.179() unnamed_addr #5 !dbg !12284 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12285
  %2 = and i32 %1, 12, !dbg !12285
  ret i32 %2, !dbg !12286
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.180(i32 noundef %0) unnamed_addr #15 !dbg !12287 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12289, metadata !DIExpression()), !dbg !12290
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12291
  %3 = and i32 %2, -7169, !dbg !12291
  %4 = or i32 %3, %0, !dbg !12291
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12291
  ret void, !dbg !12292
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.181(i32 noundef %0) unnamed_addr #15 !dbg !12293 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12295, metadata !DIExpression()), !dbg !12296
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12297
  %3 = and i32 %2, -57345, !dbg !12297
  %4 = or i32 %3, %0, !dbg !12297
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12297
  ret void, !dbg !12298
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLSAI_IsReady() unnamed_addr #5 !dbg !12299 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12300
  %2 = lshr i32 %1, 29, !dbg !12301
  %3 = and i32 %2, 1, !dbg !12301
  ret i32 %3, !dbg !12302
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #5 !dbg !12303 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12304
  %2 = lshr i32 %1, 27, !dbg !12305
  %3 = and i32 %2, 1, !dbg !12305
  ret i32 %3, !dbg !12306
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #15 !dbg !12307 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12311, metadata !DIExpression()), !dbg !12317
  call void @llvm.dbg.value(metadata i32 %1, metadata !12312, metadata !DIExpression()), !dbg !12317
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !12313, metadata !DIExpression()), !dbg !12317
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !12314, metadata !DIExpression()), !dbg !12317
  call void @llvm.dbg.value(metadata i32 0, metadata !12315, metadata !DIExpression()), !dbg !12317
  call void @llvm.dbg.value(metadata i32 0, metadata !12316, metadata !DIExpression()), !dbg !12317
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #25, !dbg !12318
  %6 = icmp eq i32 %5, 0, !dbg !12320
  br i1 %6, label %7, label %27, !dbg !12321

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #25, !dbg !12322
  call void @llvm.dbg.value(metadata i32 %8, metadata !12316, metadata !DIExpression()), !dbg !12317
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.182() #25, !dbg !12324
  %10 = icmp eq i32 %9, 1, !dbg !12326
  br i1 %10, label %19, label %11, !dbg !12327

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !12328
  br i1 %12, label %13, label %14, !dbg !12331

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #25, !dbg !12332
  br label %15, !dbg !12334

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.183() #25, !dbg !12335
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.184() #25, !dbg !12337
  br label %16, !dbg !12338

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.182() #25, !dbg !12339
  %18 = icmp eq i32 %17, 1, !dbg !12340
  br i1 %18, label %19, label %16, !dbg !12338, !llvm.loop !12341

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !12343
  %21 = load i32, i32* %20, align 4, !dbg !12343
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !12344
  %23 = load i32, i32* %22, align 4, !dbg !12344
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !12345
  %25 = load i32, i32* %24, align 4, !dbg !12345
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.174(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #25, !dbg !12346
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #25, !dbg !12347
  call void @llvm.dbg.value(metadata i32 %26, metadata !12315, metadata !DIExpression()), !dbg !12317
  br label %27, !dbg !12348

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !12349
  call void @llvm.dbg.value(metadata i32 %28, metadata !12315, metadata !DIExpression()), !dbg !12317
  ret i32 %28, !dbg !12350
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.182() unnamed_addr #5 !dbg !12351 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12352
  %2 = lshr i32 %1, 17, !dbg !12353
  %3 = and i32 %2, 1, !dbg !12353
  ret i32 %3, !dbg !12354
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #15 !dbg !12355 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12356
  %2 = or i32 %1, 262144, !dbg !12356
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12356
  ret void, !dbg !12357
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.183() unnamed_addr #15 !dbg !12358 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12359
  %2 = and i32 %1, -262145, !dbg !12359
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12359
  ret void, !dbg !12360
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.184() unnamed_addr #15 !dbg !12361 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12362
  %2 = or i32 %1, 65536, !dbg !12362
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12362
  ret void, !dbg !12363
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #21 !dbg !12364 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12367, metadata !DIExpression()), !dbg !12383
  call void @llvm.dbg.value(metadata i32 undef, metadata !12367, metadata !DIExpression()), !dbg !12383
  call void @llvm.dbg.value(metadata i32 undef, metadata !12367, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !12383
  ret void, !dbg !12384
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !12385 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12389, metadata !DIExpression()), !dbg !12391
  %2 = icmp eq i8* %0, null, !dbg !12392
  br i1 %2, label %29, label %3, !dbg !12394

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !12395
  %5 = icmp eq i8 %4, 0, !dbg !12396
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !12397
  br i1 %6, label %29, label %8, !dbg !12397

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12390, metadata !DIExpression()), !dbg !12391
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !12398

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !12390, metadata !DIExpression()), !dbg !12391
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #25, !dbg !12400
  br i1 %10, label %11, label %15, !dbg !12405

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !12406
  %13 = load i8*, i8** %12, align 4, !dbg !12406
  %14 = icmp eq i8* %13, %0, !dbg !12407
  br i1 %14, label %29, label %15, !dbg !12408

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !12409
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !12390, metadata !DIExpression()), !dbg !12391
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12410
  br i1 %17, label %7, label %8, !dbg !12411, !llvm.loop !12412

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !12390, metadata !DIExpression()), !dbg !12391
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #25, !dbg !12414
  br i1 %20, label %21, label %26, !dbg !12418

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !12419
  %23 = load i8*, i8** %22, align 4, !dbg !12419
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #24, !dbg !12420
  %25 = icmp eq i32 %24, 0, !dbg !12421
  br i1 %25, label %29, label %26, !dbg !12422

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !12423
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !12390, metadata !DIExpression()), !dbg !12391
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12424
  br i1 %28, label %29, label %18, !dbg !12398, !llvm.loop !12425

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !12391
  ret %struct.device* %30, !dbg !12427
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #10 !dbg !12428 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12432, metadata !DIExpression()), !dbg !12433
  %2 = icmp eq %struct.device* %0, null, !dbg !12434
  br i1 %2, label %14, label %3, !dbg !12436

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !12437
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !12437
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !12438
  %7 = load i8, i8* %6, align 1, !dbg !12438
  %8 = and i8 %7, 1, !dbg !12438
  %9 = icmp eq i8 %8, 0, !dbg !12438
  br i1 %9, label %14, label %10, !dbg !12439

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !12440
  %12 = load i8, i8* %11, align 1, !dbg !12440
  %13 = icmp eq i8 %12, 0, !dbg !12441
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !12433
  ret i1 %15, !dbg !12442
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #9 !dbg !12443 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !12448, metadata !DIExpression()), !dbg !12449
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !12450
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !12451
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12452 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12460, metadata !DIExpression()), !dbg !12465
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12461, metadata !DIExpression()), !dbg !12465
  call void @llvm.dbg.value(metadata i8* %2, metadata !12462, metadata !DIExpression()), !dbg !12465
  %5 = bitcast i32* %4 to i8*, !dbg !12466
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12466
  call void @llvm.dbg.value(metadata i32 0, metadata !12463, metadata !DIExpression()), !dbg !12465
  store i32 0, i32* %4, align 4, !dbg !12467
  call void @llvm.dbg.value(metadata i32* %4, metadata !12463, metadata !DIExpression(DW_OP_deref)), !dbg !12465
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #25, !dbg !12468
  call void @llvm.dbg.value(metadata i16* %6, metadata !12464, metadata !DIExpression()), !dbg !12465
  %7 = load i32, i32* %4, align 4, !dbg !12469
  call void @llvm.dbg.value(metadata i32 %7, metadata !12463, metadata !DIExpression()), !dbg !12465
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #25, !dbg !12470
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12471
  ret i32 %8, !dbg !12472
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !12473 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12477, metadata !DIExpression()), !dbg !12483
  call void @llvm.dbg.value(metadata i32* %1, metadata !12478, metadata !DIExpression()), !dbg !12483
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12484
  %4 = load i16*, i16** %3, align 4, !dbg !12484
  call void @llvm.dbg.value(metadata i16* %4, metadata !12479, metadata !DIExpression()), !dbg !12483
  %5 = icmp eq i16* %4, null, !dbg !12485
  br i1 %5, label %14, label %6, !dbg !12486

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !12487
  call void @llvm.dbg.value(metadata i32 %7, metadata !12480, metadata !DIExpression()), !dbg !12487
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !12488
  %9 = load i16, i16* %8, align 2, !dbg !12488
  %10 = add i16 %9, -32767, !dbg !12489
  %11 = icmp ult i16 %10, 2, !dbg !12489
  %12 = add i32 %7, 1, !dbg !12490
  call void @llvm.dbg.value(metadata i32 %12, metadata !12480, metadata !DIExpression()), !dbg !12487
  br i1 %11, label %13, label %6, !dbg !12489, !llvm.loop !12492

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !12495
  br label %14, !dbg !12496

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !12497
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !12498 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !12502, metadata !DIExpression()), !dbg !12513
  call void @llvm.dbg.value(metadata i32 %1, metadata !12503, metadata !DIExpression()), !dbg !12513
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !12504, metadata !DIExpression()), !dbg !12513
  call void @llvm.dbg.value(metadata i8* %3, metadata !12505, metadata !DIExpression()), !dbg !12513
  call void @llvm.dbg.value(metadata i32 0, metadata !12506, metadata !DIExpression()), !dbg !12514
  %5 = icmp eq i32 %1, 0, !dbg !12515
  br i1 %5, label %16, label %8, !dbg !12516

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !12506, metadata !DIExpression()), !dbg !12514
  %7 = icmp eq i32 %15, %1, !dbg !12515
  br i1 %7, label %16, label %8, !dbg !12516, !llvm.loop !12517

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !12506, metadata !DIExpression()), !dbg !12514
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !12519
  %11 = load i16, i16* %10, align 2, !dbg !12519
  call void @llvm.dbg.value(metadata i16 %11, metadata !12508, metadata !DIExpression()), !dbg !12520
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #25, !dbg !12521
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !12511, metadata !DIExpression()), !dbg !12520
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #24, !dbg !12522
  call void @llvm.dbg.value(metadata i32 %13, metadata !12512, metadata !DIExpression()), !dbg !12520
  %14 = icmp slt i32 %13, 0, !dbg !12523
  %15 = add nuw i32 %9, 1, !dbg !12525
  call void @llvm.dbg.value(metadata i32 %15, metadata !12506, metadata !DIExpression()), !dbg !12514
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !12526
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #6 !dbg !12527 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !12531, metadata !DIExpression()), !dbg !12534
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !12532, metadata !DIExpression()), !dbg !12534
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !12533, metadata !DIExpression()), !dbg !12534
  %2 = sext i16 %0 to i32, !dbg !12535
  %3 = icmp slt i16 %0, 1, !dbg !12537
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !12538
  %6 = add nsw i32 %2, -1, !dbg !12538
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !12538
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !12538
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12532, metadata !DIExpression()), !dbg !12534
  ret %struct.device* %8, !dbg !12539
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12540 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12542, metadata !DIExpression()), !dbg !12547
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12543, metadata !DIExpression()), !dbg !12547
  call void @llvm.dbg.value(metadata i8* %2, metadata !12544, metadata !DIExpression()), !dbg !12547
  %5 = bitcast i32* %4 to i8*, !dbg !12548
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12548
  call void @llvm.dbg.value(metadata i32 0, metadata !12545, metadata !DIExpression()), !dbg !12547
  store i32 0, i32* %4, align 4, !dbg !12549
  call void @llvm.dbg.value(metadata i32* %4, metadata !12545, metadata !DIExpression(DW_OP_deref)), !dbg !12547
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #25, !dbg !12550
  call void @llvm.dbg.value(metadata i16* %6, metadata !12546, metadata !DIExpression()), !dbg !12547
  %7 = load i32, i32* %4, align 4, !dbg !12551
  call void @llvm.dbg.value(metadata i32 %7, metadata !12545, metadata !DIExpression()), !dbg !12547
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #25, !dbg !12552
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12553
  ret i32 %8, !dbg !12554
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !12555 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12557, metadata !DIExpression()), !dbg !12562
  call void @llvm.dbg.value(metadata i32* %1, metadata !12558, metadata !DIExpression()), !dbg !12562
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12563
  %4 = load i16*, i16** %3, align 4, !dbg !12563
  call void @llvm.dbg.value(metadata i16* %4, metadata !12559, metadata !DIExpression()), !dbg !12562
  call void @llvm.dbg.value(metadata i32 0, metadata !12560, metadata !DIExpression()), !dbg !12562
  call void @llvm.dbg.value(metadata i32 0, metadata !12561, metadata !DIExpression()), !dbg !12562
  %5 = icmp eq i16* %4, null, !dbg !12564
  br i1 %5, label %22, label %6, !dbg !12566

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !12560, metadata !DIExpression()), !dbg !12562
  call void @llvm.dbg.value(metadata i16* %8, metadata !12559, metadata !DIExpression()), !dbg !12562
  %9 = load i16, i16* %8, align 2, !dbg !12567
  %10 = icmp eq i16 %9, -32768, !dbg !12571
  call void @llvm.dbg.value(metadata i32 undef, metadata !12560, metadata !DIExpression()), !dbg !12562
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !12572
  call void @llvm.dbg.value(metadata i16* %11, metadata !12559, metadata !DIExpression()), !dbg !12562
  %12 = zext i1 %10 to i32, !dbg !12573
  %13 = add i32 %7, %12, !dbg !12573
  call void @llvm.dbg.value(metadata i32 %13, metadata !12560, metadata !DIExpression()), !dbg !12562
  %14 = icmp eq i32 %13, 2, !dbg !12574
  br i1 %14, label %15, label %6, !dbg !12575

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !12562
  call void @llvm.dbg.value(metadata i32 %16, metadata !12561, metadata !DIExpression()), !dbg !12562
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !12576
  %18 = load i16, i16* %17, align 2, !dbg !12576
  %19 = icmp eq i16 %18, 32767, !dbg !12577
  %20 = add i32 %16, 1, !dbg !12578
  call void @llvm.dbg.value(metadata i32 %20, metadata !12561, metadata !DIExpression()), !dbg !12562
  br i1 %19, label %21, label %15, !dbg !12580, !llvm.loop !12581

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !12583
  br label %22, !dbg !12584

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !12585
  call void @llvm.dbg.value(metadata i16* %23, metadata !12559, metadata !DIExpression()), !dbg !12562
  ret i16* %23, !dbg !12586
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #10 !dbg !12587 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12590
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 5, !dbg !12591
  ret i32* %2, !dbg !12592
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #6 !dbg !12593 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12744, metadata !DIExpression()), !dbg !12747
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !12745, metadata !DIExpression()), !dbg !12747
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12746, metadata !DIExpression()), !dbg !12747
  ret void, !dbg !12748
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #6 !dbg !12749 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12753, metadata !DIExpression()), !dbg !12755
  call void @llvm.dbg.value(metadata i32 %1, metadata !12754, metadata !DIExpression()), !dbg !12755
  ret void, !dbg !12756
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #6 !dbg !12757 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12761, metadata !DIExpression()), !dbg !12763
  call void @llvm.dbg.value(metadata i32 %1, metadata !12762, metadata !DIExpression()), !dbg !12763
  ret void, !dbg !12764
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #6 !dbg !12765 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12769, metadata !DIExpression()), !dbg !12771
  call void @llvm.dbg.value(metadata i8* %1, metadata !12770, metadata !DIExpression()), !dbg !12771
  ret i32 -134, !dbg !12772
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #6 !dbg !12773 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12777, metadata !DIExpression()), !dbg !12779
  call void @llvm.dbg.value(metadata i8* %1, metadata !12778, metadata !DIExpression()), !dbg !12779
  ret i32 -134, !dbg !12780
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #12 !dbg !12781 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12784, metadata !DIExpression()), !dbg !12785
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12786, !srcloc !12792
  call void @llvm.dbg.value(metadata i32 undef, metadata !12789, metadata !DIExpression()) #23, !dbg !12793
  call void @llvm.dbg.value(metadata i32 undef, metadata !12790, metadata !DIExpression()) #23, !dbg !12793
  br label %3, !dbg !12794

3:                                                ; preds = %3, %1
  br label %3, !dbg !12795, !llvm.loop !12798
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12801 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12805, metadata !DIExpression()), !dbg !12807
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12806, metadata !DIExpression()), !dbg !12807
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.189, i32 0, i32 0), i32 noundef 69) #24, !dbg !12808
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !12813
  unreachable, !dbg !12813
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #12 !dbg !12814 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12816, metadata !DIExpression()), !dbg !12817
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !12818
  unreachable, !dbg !12818
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12819 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12821, metadata !DIExpression()), !dbg !12825
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12822, metadata !DIExpression()), !dbg !12825
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12826, !srcloc !12792
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !12826
  call void @llvm.dbg.value(metadata i32 %4, metadata !12789, metadata !DIExpression()) #23, !dbg !12828
  call void @llvm.dbg.value(metadata i32 undef, metadata !12790, metadata !DIExpression()) #23, !dbg !12828
  call void @llvm.dbg.value(metadata i32 %4, metadata !12823, metadata !DIExpression()), !dbg !12825
  %5 = tail call fastcc %struct.k_thread* @k_current_get.192() #26, !dbg !12829
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !12824, metadata !DIExpression()), !dbg !12825
  %6 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #25, !dbg !12830
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.193, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %6, i32 noundef 0) #24, !dbg !12830
  %7 = icmp eq %struct.__esf* %1, null, !dbg !12835
  br i1 %7, label %20, label %8, !dbg !12837

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12838, metadata !DIExpression()), !dbg !12843
  %9 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !12845
  %10 = load i32, i32* %9, align 4, !dbg !12845
  %11 = and i32 %10, 511, !dbg !12846
  %12 = icmp eq i32 %11, 0, !dbg !12847
  br i1 %12, label %14, label %13, !dbg !12848

13:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.194, i32 0, i32 0), i32 noundef 69) #24, !dbg !12849
  br label %14, !dbg !12855

14:                                               ; preds = %8, %13
  %15 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #25, !dbg !12856
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.195, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %15) #24, !dbg !12856
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #25, !dbg !12861
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12838, metadata !DIExpression()), !dbg !12862
  %16 = load i32, i32* %9, align 4, !dbg !12867
  %17 = and i32 %16, 511, !dbg !12868
  %18 = icmp eq i32 %17, 0, !dbg !12869
  br i1 %18, label %22, label %19, !dbg !12870

19:                                               ; preds = %14
  call void @llvm.dbg.value(metadata i32 %4, metadata !12871, metadata !DIExpression()) #23, !dbg !12874
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !12877, !srcloc !12878
  br label %25, !dbg !12879

20:                                               ; preds = %2
  %21 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #25, !dbg !12856
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.195, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %21) #24, !dbg !12856
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #25, !dbg !12861
  br label %22, !dbg !12880

22:                                               ; preds = %20, %14
  %23 = icmp eq i32 %0, 1, !dbg !12881
  call void @llvm.dbg.value(metadata i32 %4, metadata !12871, metadata !DIExpression()) #23, !dbg !12884
  call void @llvm.dbg.value(metadata i32 %4, metadata !12871, metadata !DIExpression()) #23, !dbg !12887
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !12825
  br i1 %23, label %25, label %24, !dbg !12889

24:                                               ; preds = %22
  tail call fastcc void @k_thread_abort.196(%struct.k_thread* noundef %5) #25, !dbg !12890
  br label %25, !dbg !12893

25:                                               ; preds = %22, %24, %19
  ret void, !dbg !12893
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.192() unnamed_addr #13 !dbg !12894 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.204() #26, !dbg !12898
  ret %struct.k_thread* %1, !dbg !12899
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #6 !dbg !12900 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12904, metadata !DIExpression()), !dbg !12905
  %2 = icmp ult i32 %0, 5, !dbg !12906
  br i1 %2, label %3, label %6, !dbg !12906

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !12906
  %5 = load i8*, i8** %4, align 4, !dbg !12906
  br label %6, !dbg !12906

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.198, i32 0, i32 0), %1 ], !dbg !12907
  ret i8* %7, !dbg !12909
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12910 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12914, metadata !DIExpression()), !dbg !12916
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !12917
  br i1 %2, label %9, label %3, !dbg !12918

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #24, !dbg !12919
  call void @llvm.dbg.value(metadata i8* %4, metadata !12915, metadata !DIExpression()), !dbg !12916
  %5 = icmp eq i8* %4, null, !dbg !12920
  br i1 %5, label %9, label %6, !dbg !12922

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !12923
  %8 = icmp eq i8 %7, 0, !dbg !12924
  br i1 %8, label %9, label %10, !dbg !12925

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.197, i32 0, i32 0), metadata !12915, metadata !DIExpression()), !dbg !12916
  br label %10, !dbg !12926

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.197, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !12916
  call void @llvm.dbg.value(metadata i8* %11, metadata !12915, metadata !DIExpression()), !dbg !12916
  ret i8* %11, !dbg !12928
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.196(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12929 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12933, metadata !DIExpression()), !dbg !12934
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12935, !srcloc !12937
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !12938
  ret void, !dbg !12939
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.204() unnamed_addr #13 !dbg !12940 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12941, !srcloc !12943
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #24, !dbg !12944
  ret %struct.k_thread* %1, !dbg !12945
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12946 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12950, metadata !DIExpression()), !dbg !12953
  call void @llvm.dbg.value(metadata i32 %1, metadata !12951, metadata !DIExpression()), !dbg !12953
  call void @llvm.dbg.value(metadata i32 %2, metadata !12952, metadata !DIExpression()), !dbg !12953
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #24, !dbg !12954
  ret void, !dbg !12955
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12956 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12960, metadata !DIExpression()), !dbg !12963
  call void @llvm.dbg.value(metadata i8* %1, metadata !12961, metadata !DIExpression()), !dbg !12963
  call void @llvm.dbg.value(metadata i32 %2, metadata !12962, metadata !DIExpression()), !dbg !12963
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #24, !dbg !12964
  ret void, !dbg !12965
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !12966 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #25, !dbg !12967
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__ccm_bss_end to i32), i32 ptrtoint ([0 x i8]* @__ccm_bss_start to i32))) #25, !dbg !12968
  ret void, !dbg !12969
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !12970 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12972, metadata !DIExpression()), !dbg !12973
  tail call fastcc void @init_idle_thread(i32 noundef %0) #25, !dbg !12974
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12975
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !12976
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !12977
  %4 = trunc i32 %0 to i8, !dbg !12978
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !12979
  store i8 %4, i8* %5, align 4, !dbg !12980
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !12981
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #25, !dbg !12982
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !12983
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !12984
  store i8* %8, i8** %9, align 4, !dbg !12985
  ret void, !dbg !12986
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !12987 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12989, metadata !DIExpression()), !dbg !12995
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12996
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12990, metadata !DIExpression()), !dbg !12995
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !12997
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !12991, metadata !DIExpression()), !dbg !12995
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.211, i32 0, i32 0), metadata !12994, metadata !DIExpression()), !dbg !12995
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !12998
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !12999
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.211, i32 0, i32 0)) #24, !dbg !13000
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #25, !dbg !13001
  ret void, !dbg !13002
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #6 !dbg !13003 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13007, metadata !DIExpression()), !dbg !13008
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !13009
  ret i8* %2, !dbg !13010
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !13011 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13016, metadata !DIExpression()), !dbg !13017
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13018
  %3 = load i8, i8* %2, align 1, !dbg !13019
  %4 = and i8 %3, -5, !dbg !13019
  store i8 %4, i8* %2, align 1, !dbg !13019
  ret void, !dbg !13020
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #12 !dbg !13021 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #25, !dbg !13024
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #24, !dbg !13025
  %3 = ptrtoint i8* %2 to i32, !dbg !13034
  %4 = add i32 %3, 2048, !dbg !13035
  call void @llvm.dbg.value(metadata i32 %4, metadata !13029, metadata !DIExpression()) #23, !dbg !13036
  call void @llvm.dbg.value(metadata i32 %4, metadata !13037, metadata !DIExpression()) #23, !dbg !13040
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !13042, !srcloc !13043
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13044
  %6 = or i32 %5, 512, !dbg !13044
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13044
  tail call fastcc void @__NVIC_SetPriority.214(i32 noundef -2, i32 noundef 255) #24, !dbg !13045
  tail call fastcc void @__NVIC_SetPriority.214(i32 noundef -5, i32 noundef 0) #24, !dbg !13048
  tail call fastcc void @__NVIC_SetPriority.214(i32 noundef -12, i32 noundef 0) #24, !dbg !13049
  tail call fastcc void @__NVIC_SetPriority.214(i32 noundef -11, i32 noundef 0) #24, !dbg !13050
  tail call fastcc void @__NVIC_SetPriority.214(i32 noundef -10, i32 noundef 0) #24, !dbg !13051
  tail call fastcc void @__NVIC_SetPriority.214(i32 noundef -4, i32 noundef 0) #24, !dbg !13052
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13053
  %8 = or i32 %7, 458752, !dbg !13053
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13053
  tail call void @z_arm_fault_init() #24, !dbg !13054
  tail call void @z_arm_cpu_idle_init() #24, !dbg !13055
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13056
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !13059
  %9 = tail call i32 @z_arm_mpu_init() #24, !dbg !13060
  tail call void @z_arm_configure_static_mpu_regions() #24, !dbg !13061
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !13062
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %10) #23, !dbg !13062
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !13023, metadata !DIExpression()), !dbg !13063
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #25, !dbg !13064
  call void @z_device_state_init() #24, !dbg !13065
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #25, !dbg !13066
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #25, !dbg !13067
  %11 = call fastcc i8* @prepare_multithreading() #25, !dbg !13068
  call fastcc void @switch_to_main_thread(i8* noundef %11) #29, !dbg !13069
  unreachable, !dbg !13069
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2195 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2199, metadata !DIExpression()), !dbg !13070
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !13071
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !13071
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2200, metadata !DIExpression()), !dbg !13070
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2200, metadata !DIExpression()), !dbg !13070
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !13072
  br i1 %7, label %8, label %35, !dbg !13073

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2200, metadata !DIExpression()), !dbg !13070
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !13074
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !13074
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2210, metadata !DIExpression()), !dbg !13075
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !13076
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !13076
  %14 = tail call i32 %13(%struct.device* noundef %11) #24, !dbg !13077
  call void @llvm.dbg.value(metadata i32 %14, metadata !2214, metadata !DIExpression()), !dbg !13075
  %15 = icmp eq %struct.device* %11, null, !dbg !13078
  br i1 %15, label %32, label %16, !dbg !13080

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !13081
  br i1 %17, label %26, label %18, !dbg !13084

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !13085
  call void @llvm.dbg.value(metadata i32 %19, metadata !2214, metadata !DIExpression()), !dbg !13075
  %20 = icmp ult i32 %19, 255, !dbg !13087
  %21 = select i1 %20, i32 %19, i32 255, !dbg !13087
  call void @llvm.dbg.value(metadata i32 %21, metadata !2214, metadata !DIExpression()), !dbg !13075
  %22 = trunc i32 %21 to i8, !dbg !13088
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13089
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !13089
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !13090
  store i8 %22, i8* %25, align 1, !dbg !13091
  br label %26, !dbg !13092

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13093
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !13093
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !13094
  %30 = load i8, i8* %29, align 1, !dbg !13095
  %31 = or i8 %30, 1, !dbg !13095
  store i8 %31, i8* %29, align 1, !dbg !13095
  br label %32, !dbg !13096

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !13097
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2200, metadata !DIExpression()), !dbg !13070
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !13072
  br i1 %34, label %8, label %35, !dbg !13073, !llvm.loop !13098

35:                                               ; preds = %32, %1
  ret void, !dbg !13100
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.214(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !13101 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13103, metadata !DIExpression()), !dbg !13105
  call void @llvm.dbg.value(metadata i32 %1, metadata !13104, metadata !DIExpression()), !dbg !13105
  %3 = trunc i32 %1 to i8, !dbg !13106
  %4 = shl i8 %3, 4, !dbg !13106
  %5 = and i32 %0, 15, !dbg !13109
  %6 = add nsw i32 %5, -4, !dbg !13110
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !13111
  store volatile i8 %4, i8* %7, align 1, !dbg !13112
  ret void, !dbg !13113
}

; Function Attrs: optsize
declare !dbg !13114 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #9 !dbg !13115 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13118, metadata !DIExpression()), !dbg !13119
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13120
  store i8 1, i8* %2, align 1, !dbg !13121
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !13122
  store i8 1, i8* %3, align 4, !dbg !13123
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !13124
  store i32 0, i32* %4, align 4, !dbg !13125
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !13126
  store i32 0, i32* %5, align 4, !dbg !13127
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, !dbg !13128
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !13129
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13130
  ret void, !dbg !13131
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !13132 {
  tail call void @z_sched_init() #24, !dbg !13137
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13138
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 11, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.215, i32 0, i32 0)) #24, !dbg !13139
  call void @llvm.dbg.value(metadata i8* %1, metadata !13136, metadata !DIExpression()), !dbg !13140
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !13141
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !13142
  tail call void @z_init_cpu(i32 noundef 0) #25, !dbg !13143
  ret i8* %1, !dbg !13144
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #12 !dbg !13145 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13149, metadata !DIExpression()), !dbg !13150
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #24, !dbg !13151
  unreachable, !dbg !13152
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !13153 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13155, metadata !DIExpression()), !dbg !13158
  call void @llvm.dbg.value(metadata i8* %1, metadata !13156, metadata !DIExpression()), !dbg !13158
  call void @llvm.dbg.value(metadata i8* %2, metadata !13157, metadata !DIExpression()), !dbg !13158
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !13159
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #25, !dbg !13160
  tail call void @boot_banner() #24, !dbg !13161
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #25, !dbg !13162
  tail call void @z_init_static_threads() #24, !dbg !13163
  tail call void @main() #24, !dbg !13164
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13165
  %5 = and i8 %4, -2, !dbg !13165
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13165
  ret void, !dbg !13166
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #6 !dbg !13167 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13177, metadata !DIExpression()), !dbg !13179
  call void @llvm.dbg.value(metadata i8* %1, metadata !13178, metadata !DIExpression()), !dbg !13179
  ret void, !dbg !13180
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #6 !dbg !13181 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13183, metadata !DIExpression()), !dbg !13185
  call void @llvm.dbg.value(metadata i8* %1, metadata !13184, metadata !DIExpression()), !dbg !13185
  ret void, !dbg !13186
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !13187 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13188, !srcloc !13195
  call void @llvm.dbg.value(metadata i32 %1, metadata !13191, metadata !DIExpression()) #23, !dbg !13196
  %2 = icmp ne i32 %1, 0, !dbg !13197
  ret i1 %2, !dbg !13198
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #11 !dbg !13199 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13200
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13201
  %3 = load i8, i8* %2, align 4, !dbg !13202
  %4 = or i8 %3, 1, !dbg !13202
  store i8 %4, i8* %2, align 4, !dbg !13202
  ret void, !dbg !13203
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #11 !dbg !13204 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13205
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13206
  %3 = load i8, i8* %2, align 4, !dbg !13207
  %4 = and i8 %3, -2, !dbg !13207
  store i8 %4, i8* %2, align 4, !dbg !13207
  ret void, !dbg !13208
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #10 !dbg !13209 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13210
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13211
  %3 = load i8, i8* %2, align 4, !dbg !13211
  %4 = and i8 %3, 1, !dbg !13212
  %5 = icmp ne i8 %4, 0, !dbg !13213
  ret i1 %5, !dbg !13214
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13215 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13219, metadata !DIExpression()), !dbg !13221
  call void @llvm.dbg.value(metadata i8* %1, metadata !13220, metadata !DIExpression()), !dbg !13221
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13222
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %0, !dbg !13224
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13219, metadata !DIExpression()), !dbg !13221
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 0, !dbg !13225
  %7 = tail call i8* @strncpy(i8* noundef nonnull %6, i8* noundef %1, i32 noundef 31) #24, !dbg !13226
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 31, !dbg !13227
  store i8 0, i8* %8, align 1, !dbg !13228
  ret i32 0, !dbg !13229
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local nonnull i8* @k_thread_name_get(%struct.k_thread* noundef readnone %0) local_unnamed_addr #6 !dbg !13230 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13234, metadata !DIExpression()), !dbg !13235
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13236
  ret i8* %2, !dbg !13237
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13238 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13242, metadata !DIExpression()), !dbg !13245
  call void @llvm.dbg.value(metadata i8* %1, metadata !13243, metadata !DIExpression()), !dbg !13245
  call void @llvm.dbg.value(metadata i32 %2, metadata !13244, metadata !DIExpression()), !dbg !13245
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13246
  %5 = tail call i8* @strncpy(i8* noundef %1, i8* noundef nonnull %4, i32 noundef %2) #24, !dbg !13247
  ret i32 0, !dbg !13248
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2225 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2342, metadata !DIExpression()), !dbg !13249
  call void @llvm.dbg.value(metadata i8* %1, metadata !2343, metadata !DIExpression()), !dbg !13249
  call void @llvm.dbg.value(metadata i32 %2, metadata !2344, metadata !DIExpression()), !dbg !13249
  call void @llvm.dbg.value(metadata i32 0, metadata !2345, metadata !DIExpression()), !dbg !13249
  call void @llvm.dbg.value(metadata i8 undef, metadata !2347, metadata !DIExpression()), !dbg !13249
  %4 = icmp eq i8* %1, null, !dbg !13250
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !13252
  br i1 %6, label %46, label %7, !dbg !13252

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13253
  %9 = load i8, i8* %8, align 1, !dbg !13253
  call void @llvm.dbg.value(metadata i8 %9, metadata !2347, metadata !DIExpression()), !dbg !13249
  %10 = add i32 %2, -1, !dbg !13254
  call void @llvm.dbg.value(metadata i32 %10, metadata !2344, metadata !DIExpression()), !dbg !13249
  call void @llvm.dbg.value(metadata i8 0, metadata !2348, metadata !DIExpression()), !dbg !13255
  call void @llvm.dbg.value(metadata i8 %9, metadata !2347, metadata !DIExpression()), !dbg !13249
  call void @llvm.dbg.value(metadata i32 0, metadata !2345, metadata !DIExpression()), !dbg !13249
  %11 = icmp eq i8 %9, 0, !dbg !13256
  br i1 %11, label %12, label %15, !dbg !13258

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !13259
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !13260
  store i8 0, i8* %14, align 1, !dbg !13261
  br label %46, !dbg !13262

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2348, metadata !DIExpression()), !dbg !13255
  call void @llvm.dbg.value(metadata i8 %17, metadata !2347, metadata !DIExpression()), !dbg !13249
  call void @llvm.dbg.value(metadata i32 %18, metadata !2345, metadata !DIExpression()), !dbg !13249
  %19 = zext i8 %17 to i32, !dbg !13263
  %20 = zext i8 %16 to i32, !dbg !13264
  %21 = shl nuw i32 1, %20, !dbg !13264
  call void @llvm.dbg.value(metadata i32 %21, metadata !2346, metadata !DIExpression()), !dbg !13249
  %22 = and i32 %21, %19, !dbg !13266
  %23 = icmp eq i32 %22, 0, !dbg !13268
  br i1 %23, label %42, label %24, !dbg !13269

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !13270
  %26 = sub i32 %10, %18, !dbg !13271
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !13272
  %28 = load i8*, i8** %27, align 4, !dbg !13272
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !13273
  %30 = load i32, i32* %29, align 4, !dbg !13273
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #25, !dbg !13274
  %32 = add i32 %31, %18, !dbg !13275
  call void @llvm.dbg.value(metadata i32 %32, metadata !2345, metadata !DIExpression()), !dbg !13249
  %33 = trunc i32 %21 to i8, !dbg !13276
  %34 = xor i8 %33, -1, !dbg !13276
  %35 = and i8 %17, %34, !dbg !13276
  call void @llvm.dbg.value(metadata i8 %35, metadata !2347, metadata !DIExpression()), !dbg !13249
  %36 = icmp eq i8 %35, 0, !dbg !13277
  br i1 %36, label %12, label %37, !dbg !13279

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !13280
  %39 = sub i32 %10, %32, !dbg !13282
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.218, i32 0, i32 0), i32 noundef 1) #25, !dbg !13283
  %41 = add i32 %40, %32, !dbg !13284
  call void @llvm.dbg.value(metadata i32 %41, metadata !2345, metadata !DIExpression()), !dbg !13249
  br label %42, !dbg !13285

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !13249
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !13249
  call void @llvm.dbg.value(metadata i8 %44, metadata !2347, metadata !DIExpression()), !dbg !13249
  call void @llvm.dbg.value(metadata i32 %43, metadata !2345, metadata !DIExpression()), !dbg !13249
  %45 = add i8 %16, 1, !dbg !13286
  call void @llvm.dbg.value(metadata i8 %45, metadata !2348, metadata !DIExpression()), !dbg !13255
  br label %15, !dbg !13258

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.219, i32 0, i32 0), %3 ], !dbg !13249
  ret i8* %47, !dbg !13287
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !13288 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13292, metadata !DIExpression()), !dbg !13297
  call void @llvm.dbg.value(metadata i32 %1, metadata !13293, metadata !DIExpression()), !dbg !13297
  call void @llvm.dbg.value(metadata i8* %2, metadata !13294, metadata !DIExpression()), !dbg !13297
  call void @llvm.dbg.value(metadata i32 %3, metadata !13295, metadata !DIExpression()), !dbg !13297
  %5 = icmp ult i32 %1, %3, !dbg !13298
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !13298
  call void @llvm.dbg.value(metadata i32 %6, metadata !13296, metadata !DIExpression()), !dbg !13297
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #24, !dbg !13299
  ret i32 %6, !dbg !13300
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13301 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13305, metadata !DIExpression()), !dbg !13306
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #24, !dbg !13307
  ret void, !dbg !13308
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef %9) local_unnamed_addr #1 !dbg !13309 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13318, metadata !DIExpression()), !dbg !13329
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13319, metadata !DIExpression()), !dbg !13329
  call void @llvm.dbg.value(metadata i32 %2, metadata !13320, metadata !DIExpression()), !dbg !13329
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13321, metadata !DIExpression()), !dbg !13329
  call void @llvm.dbg.value(metadata i8* %4, metadata !13322, metadata !DIExpression()), !dbg !13329
  call void @llvm.dbg.value(metadata i8* %5, metadata !13323, metadata !DIExpression()), !dbg !13329
  call void @llvm.dbg.value(metadata i8* %6, metadata !13324, metadata !DIExpression()), !dbg !13329
  call void @llvm.dbg.value(metadata i32 %7, metadata !13325, metadata !DIExpression()), !dbg !13329
  call void @llvm.dbg.value(metadata i32 %8, metadata !13326, metadata !DIExpression()), !dbg !13329
  call void @llvm.dbg.value(metadata i8* %9, metadata !13327, metadata !DIExpression()), !dbg !13329
  %11 = icmp eq i32 %7, 15, !dbg !13330
  br i1 %11, label %12, label %15, !dbg !13330

12:                                               ; preds = %10
  %13 = bitcast void (i8*, i8*, i8*)* %3 to i8*, !dbg !13330
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef %13) #25, !dbg !13330
  br i1 %14, label %19, label %18, !dbg !13330

15:                                               ; preds = %10
  %16 = add i32 %7, 16, !dbg !13330
  %17 = icmp ult i32 %16, 31, !dbg !13330
  br i1 %17, label %19, label %18, !dbg !13330

18:                                               ; preds = %12, %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([128 x i8], [128 x i8]* @.str.10.230, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.231, i32 0, i32 0), i32 noundef 536) #24, !dbg !13334
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12.232, i32 0, i32 0), i32 noundef %7, i32 noundef 14, i32 noundef -16) #24, !dbg !13334
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.231, i32 0, i32 0), i32 noundef 536) #24, !dbg !13334
  unreachable, !dbg !13334

19:                                               ; preds = %15, %12
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13336
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %20) #25, !dbg !13337
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !13338
  tail call void @z_init_thread_base(%struct._thread_base* noundef %21, i32 noundef %7, i32 noundef 4, i32 noundef %8) #25, !dbg !13339
  %22 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #25, !dbg !13340
  call void @llvm.dbg.value(metadata i8* %22, metadata !13328, metadata !DIExpression()), !dbg !13329
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %22, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #24, !dbg !13341
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !13342
  store i8* null, i8** %23, align 4, !dbg !13343
  %24 = icmp eq i8* %9, null, !dbg !13344
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13346
  br i1 %24, label %29, label %26, !dbg !13347

26:                                               ; preds = %19
  %27 = tail call i8* @strncpy(i8* noundef nonnull %25, i8* noundef nonnull %9, i32 noundef 31) #24, !dbg !13348
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 31, !dbg !13350
  store i8 0, i8* %28, align 1, !dbg !13351
  br label %30, !dbg !13352

29:                                               ; preds = %19
  store i8 0, i8* %25, align 8, !dbg !13353
  br label %30

30:                                               ; preds = %29, %26
  %31 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13355
  %32 = icmp eq %struct.k_thread* %31, null, !dbg !13355
  br i1 %32, label %36, label %33, !dbg !13357

33:                                               ; preds = %30
  %34 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %31, i32 0, i32 7, !dbg !13358
  %35 = load %struct.k_heap*, %struct.k_heap** %34, align 8, !dbg !13358
  br label %36, !dbg !13359

36:                                               ; preds = %30, %33
  %37 = phi %struct.k_heap* [ %35, %33 ], [ null, %30 ], !dbg !13329
  %38 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, !dbg !13360
  store %struct.k_heap* %37, %struct.k_heap** %38, align 8, !dbg !13362
  ret i8* %22, !dbg !13363
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef readnone %0) unnamed_addr #6 !dbg !13364 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13368, metadata !DIExpression()), !dbg !13369
  %2 = icmp eq i8* %0, bitcast (void (i8*, i8*, i8*)* @idle to i8*), !dbg !13370
  ret i1 %2, !dbg !13371
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #9 !dbg !13372 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13377, metadata !DIExpression()), !dbg !13378
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !13379
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #25, !dbg !13380
  ret void, !dbg !13381
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #9 !dbg !13382 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13387, metadata !DIExpression()), !dbg !13391
  call void @llvm.dbg.value(metadata i32 %1, metadata !13388, metadata !DIExpression()), !dbg !13391
  call void @llvm.dbg.value(metadata i32 %2, metadata !13389, metadata !DIExpression()), !dbg !13391
  call void @llvm.dbg.value(metadata i32 %3, metadata !13390, metadata !DIExpression()), !dbg !13391
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !13392
  store %union.anon* null, %union.anon** %5, align 8, !dbg !13393
  %6 = trunc i32 %3 to i8, !dbg !13394
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !13395
  store i8 %6, i8* %7, align 4, !dbg !13396
  %8 = trunc i32 %2 to i8, !dbg !13397
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !13398
  store i8 %8, i8* %9, align 1, !dbg !13399
  %10 = trunc i32 %1 to i8, !dbg !13400
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !13401
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !13401
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !13401
  store i8 %10, i8* %13, align 2, !dbg !13402
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !13403
  store i8 0, i8* %14, align 1, !dbg !13404
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #25, !dbg !13405
  ret void, !dbg !13406
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !13407 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13411, metadata !DIExpression()), !dbg !13419
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13412, metadata !DIExpression()), !dbg !13419
  call void @llvm.dbg.value(metadata i32 %2, metadata !13413, metadata !DIExpression()), !dbg !13419
  call void @llvm.dbg.value(metadata i32 0, metadata !13418, metadata !DIExpression()), !dbg !13419
  %4 = add i32 %2, 7, !dbg !13420
  %5 = and i32 %4, -8, !dbg !13420
  %6 = add i32 %5, 64, !dbg !13420
  call void @llvm.dbg.value(metadata i32 %6, metadata !13414, metadata !DIExpression()), !dbg !13419
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.233(%struct.z_thread_stack_element* noundef %1) #25, !dbg !13422
  call void @llvm.dbg.value(metadata i8* %7, metadata !13417, metadata !DIExpression()), !dbg !13419
  call void @llvm.dbg.value(metadata i32 %5, metadata !13415, metadata !DIExpression()), !dbg !13419
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !13423
  call void @llvm.dbg.value(metadata i8* %8, metadata !13416, metadata !DIExpression()), !dbg !13419
  call void @llvm.dbg.value(metadata i32 0, metadata !13418, metadata !DIExpression()), !dbg !13419
  %9 = ptrtoint i8* %7 to i32, !dbg !13424
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !13425
  store i32 %9, i32* %10, align 4, !dbg !13426
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !13427
  store i32 %5, i32* %11, align 4, !dbg !13428
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 2, !dbg !13429
  store i32 0, i32* %12, align 4, !dbg !13430
  call void @llvm.dbg.value(metadata i8* %8, metadata !13416, metadata !DIExpression()), !dbg !13419
  ret i8* %8, !dbg !13431
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.233(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #6 !dbg !13432 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13436, metadata !DIExpression()), !dbg !13437
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !13438
  ret i8* %2, !dbg !13439
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !13440 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13445, metadata !DIExpression()), !dbg !13446
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !13447
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !13448
  ret void, !dbg !13449
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !13450 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13452, metadata !DIExpression()), !dbg !13453
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13454
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #25, !dbg !13455
  ret void, !dbg !13456
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !13457 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13461, metadata !DIExpression()), !dbg !13462
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13463
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !13464
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13465
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !13466
  ret void, !dbg !13467
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !13468 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13473, metadata !DIExpression()), !dbg !13474
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13475
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13476
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13477
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13478
  ret void, !dbg !13479
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !13480 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13497, metadata !DIExpression()), !dbg !13498
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13488, metadata !DIExpression()), !dbg !13498
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13489, metadata !DIExpression()), !dbg !13498
  call void @llvm.dbg.value(metadata i32 %2, metadata !13490, metadata !DIExpression()), !dbg !13498
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13491, metadata !DIExpression()), !dbg !13498
  call void @llvm.dbg.value(metadata i8* %4, metadata !13492, metadata !DIExpression()), !dbg !13498
  call void @llvm.dbg.value(metadata i8* %5, metadata !13493, metadata !DIExpression()), !dbg !13498
  call void @llvm.dbg.value(metadata i8* %6, metadata !13494, metadata !DIExpression()), !dbg !13498
  call void @llvm.dbg.value(metadata i32 %7, metadata !13495, metadata !DIExpression()), !dbg !13498
  call void @llvm.dbg.value(metadata i32 %8, metadata !13496, metadata !DIExpression()), !dbg !13498
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13499, !srcloc !13195
  call void @llvm.dbg.value(metadata i32 %11, metadata !13191, metadata !DIExpression()) #23, !dbg !13504
  %12 = icmp eq i32 %11, 0, !dbg !13505
  br i1 %12, label %14, label %13, !dbg !13506

13:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.231, i32 0, i32 0), i32 noundef 647) #24, !dbg !13507
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14.237, i32 0, i32 0)) #24, !dbg !13507
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.231, i32 0, i32 0), i32 noundef 647) #24, !dbg !13507
  unreachable, !dbg !13507

14:                                               ; preds = %10
  %15 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %15, metadata !13497, metadata !DIExpression()), !dbg !13498
  %16 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef null) #25, !dbg !13509
  %17 = icmp eq i64 %15, -1, !dbg !13510
  br i1 %17, label %19, label %18, !dbg !13512

18:                                               ; preds = %14
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #25, !dbg !13513
  br label %19, !dbg !13515

19:                                               ; preds = %18, %14
  ret %struct.k_thread* %0, !dbg !13516
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13517 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13522, metadata !DIExpression()), !dbg !13523
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13521, metadata !DIExpression()), !dbg !13523
  %4 = icmp eq i64 %3, 0, !dbg !13524
  br i1 %4, label %5, label %6, !dbg !13526

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #25, !dbg !13527
  br label %7, !dbg !13529

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #25, !dbg !13530
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !13532
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13533 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13537, metadata !DIExpression()), !dbg !13538
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13539, !srcloc !13541
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #25, !dbg !13542
  ret void, !dbg !13543
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13544 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13547, metadata !DIExpression()), !dbg !13548
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13546, metadata !DIExpression()), !dbg !13548
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13549
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #24, !dbg !13550
  ret void, !dbg !13551
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !13552 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13554, metadata !DIExpression()), !dbg !13574
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %1, label %2, !dbg !13575

1:                                                ; preds = %6, %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.240, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.231, i32 0, i32 0), i32 noundef 750) #24, !dbg !13579
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.241, i32 0, i32 0)) #24, !dbg !13579
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.231, i32 0, i32 0), i32 noundef 750) #24, !dbg !13579
  unreachable, !dbg !13579

2:                                                ; preds = %0, %6
  %3 = phi %struct._static_thread_data* [ %31, %6 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !13554, metadata !DIExpression()), !dbg !13574
  %4 = icmp ult %struct._static_thread_data* %3, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13582
  br i1 %4, label %6, label %5, !dbg !13583

5:                                                ; preds = %2
  tail call void @k_sched_lock() #24, !dbg !13584
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13572, metadata !DIExpression()), !dbg !13585
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %33, label %34, !dbg !13586

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !13590
  %8 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !13590
  %9 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !13592
  %10 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %9, align 4, !dbg !13592
  %11 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !13593
  %12 = load i32, i32* %11, align 4, !dbg !13593
  %13 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !13594
  %14 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %13, align 4, !dbg !13594
  %15 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !13595
  %16 = load i8*, i8** %15, align 4, !dbg !13595
  %17 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !13596
  %18 = load i8*, i8** %17, align 4, !dbg !13596
  %19 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !13597
  %20 = load i8*, i8** %19, align 4, !dbg !13597
  %21 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !13598
  %22 = load i32, i32* %21, align 4, !dbg !13598
  %23 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !13599
  %24 = load i32, i32* %23, align 4, !dbg !13599
  %25 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 11, !dbg !13600
  %26 = load i8*, i8** %25, align 4, !dbg !13600
  %27 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %8, %struct.z_thread_stack_element* noundef %10, i32 noundef %12, void (i8*, i8*, i8*)* noundef %14, i8* noundef %16, i8* noundef %18, i8* noundef %20, i32 noundef %22, i32 noundef %24, i8* noundef %26) #25, !dbg !13601
  %28 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !13602
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 2, !dbg !13603
  %30 = bitcast i8** %29 to %struct._static_thread_data**, !dbg !13604
  store %struct._static_thread_data* %3, %struct._static_thread_data** %30, align 4, !dbg !13604
  %31 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !13605
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !13554, metadata !DIExpression()), !dbg !13574
  %32 = icmp ugt %struct._static_thread_data* %31, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13606
  br i1 %32, label %1, label %2, !dbg !13575, !llvm.loop !13607

33:                                               ; preds = %50, %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.240, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.231, i32 0, i32 0), i32 noundef 781) #24, !dbg !13609
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.241, i32 0, i32 0)) #24, !dbg !13609
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.231, i32 0, i32 0), i32 noundef 781) #24, !dbg !13609
  unreachable, !dbg !13609

34:                                               ; preds = %5, %50
  %35 = phi %struct._static_thread_data* [ %51, %50 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %5 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %35, metadata !13572, metadata !DIExpression()), !dbg !13585
  %36 = icmp ult %struct._static_thread_data* %35, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13612
  br i1 %36, label %38, label %37, !dbg !13613

37:                                               ; preds = %34
  tail call void @k_sched_unlock() #24, !dbg !13614
  ret void, !dbg !13615

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 9, !dbg !13616
  %40 = load i32, i32* %39, align 4, !dbg !13616
  %41 = icmp eq i32 %40, -1, !dbg !13619
  br i1 %41, label %50, label %42, !dbg !13620

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 0, !dbg !13621
  %44 = load %struct.k_thread*, %struct.k_thread** %43, align 4, !dbg !13621
  %45 = icmp sgt i32 %40, 0, !dbg !13623
  %46 = select i1 %45, i32 %40, i32 0, !dbg !13623
  %47 = zext i32 %46 to i64, !dbg !13623
  %48 = tail call fastcc i64 @k_ms_to_ticks_ceil64.242(i64 noundef %47) #25, !dbg !13623
  %49 = insertvalue [1 x i64] poison, i64 %48, 0, !dbg !13624
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %44, [1 x i64] %49) #25, !dbg !13624
  br label %50, !dbg !13625

50:                                               ; preds = %38, %42
  %51 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 1, !dbg !13626
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %51, metadata !13572, metadata !DIExpression()), !dbg !13585
  %52 = icmp ugt %struct._static_thread_data* %51, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13627
  br i1 %52, label %33, label %34, !dbg !13586, !llvm.loop !13628
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.242(i64 noundef %0) unnamed_addr #6 !dbg !13630 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13632, metadata !DIExpression()), !dbg !13633
  call void @llvm.dbg.value(metadata i64 %0, metadata !13634, metadata !DIExpression()), !dbg !13649
  call void @llvm.dbg.value(metadata i32 1000, metadata !13637, metadata !DIExpression()), !dbg !13649
  call void @llvm.dbg.value(metadata i32 10000, metadata !13638, metadata !DIExpression()), !dbg !13649
  call void @llvm.dbg.value(metadata i8 1, metadata !13639, metadata !DIExpression()), !dbg !13649
  call void @llvm.dbg.value(metadata i8 0, metadata !13640, metadata !DIExpression()), !dbg !13649
  call void @llvm.dbg.value(metadata i8 1, metadata !13641, metadata !DIExpression()), !dbg !13649
  call void @llvm.dbg.value(metadata i8 0, metadata !13642, metadata !DIExpression()), !dbg !13649
  call void @llvm.dbg.value(metadata i8 1, metadata !13643, metadata !DIExpression()), !dbg !13649
  call void @llvm.dbg.value(metadata i8 0, metadata !13644, metadata !DIExpression()), !dbg !13649
  call void @llvm.dbg.value(metadata i64 0, metadata !13645, metadata !DIExpression()), !dbg !13649
  call void @llvm.dbg.value(metadata i64 0, metadata !13645, metadata !DIExpression()), !dbg !13649
  %2 = mul i64 %0, 10, !dbg !13651
  ret i64 %2, !dbg !13657
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #12 !dbg !13658 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !13660, metadata !DIExpression()), !dbg !13664
  call void @llvm.dbg.value(metadata i8* %1, metadata !13661, metadata !DIExpression()), !dbg !13664
  call void @llvm.dbg.value(metadata i8* %2, metadata !13662, metadata !DIExpression()), !dbg !13664
  call void @llvm.dbg.value(metadata i8* %3, metadata !13663, metadata !DIExpression()), !dbg !13664
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13665
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !13666
  %7 = load i8, i8* %6, align 4, !dbg !13667
  %8 = or i8 %7, 4, !dbg !13667
  store i8 %8, i8* %6, align 4, !dbg !13667
  tail call void @z_thread_essential_clear() #25, !dbg !13668
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !13669
  unreachable, !dbg !13669
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !13670 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13675, metadata !DIExpression()), !dbg !13677
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !13678
  %3 = load i32, i32* %2, align 4, !dbg !13678
  call void @llvm.dbg.value(metadata i32 %3, metadata !13676, metadata !DIExpression()), !dbg !13677
  %4 = icmp eq i32 %3, 0, !dbg !13679
  br i1 %4, label %10, label %5, !dbg !13681

5:                                                ; preds = %1
  %6 = and i32 %3, 3, !dbg !13682
  %7 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13685
  %8 = zext i8 %7 to i32, !dbg !13686
  %9 = icmp eq i32 %6, %8, !dbg !13687
  br i1 %9, label %11, label %10, !dbg !13688

10:                                               ; preds = %5, %1
  br label %11, !dbg !13689

11:                                               ; preds = %5, %10
  %12 = phi i1 [ true, %10 ], [ false, %5 ], !dbg !13677
  ret i1 %12, !dbg !13690
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* nocapture noundef %0) local_unnamed_addr #11 !dbg !13691 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13693, metadata !DIExpression()), !dbg !13694
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !13695
  %3 = load i32, i32* %2, align 4, !dbg !13695
  %4 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13697
  %5 = zext i8 %4 to i32, !dbg !13698
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13699
  %7 = ptrtoint %struct.k_thread* %6 to i32, !dbg !13700
  %8 = or i32 %7, %5, !dbg !13701
  %9 = icmp eq i32 %3, %8, !dbg !13702
  br i1 %9, label %10, label %11, !dbg !13703

10:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !13704
  br label %11, !dbg !13705

11:                                               ; preds = %1, %10
  ret i1 %9, !dbg !13706
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_spin_lock_set_owner(%struct.k_spinlock* nocapture noundef writeonly %0) local_unnamed_addr #11 !dbg !13707 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13711, metadata !DIExpression()), !dbg !13712
  %2 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13713
  %3 = zext i8 %2 to i32, !dbg !13714
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13715
  %5 = ptrtoint %struct.k_thread* %4 to i32, !dbg !13716
  %6 = or i32 %5, %3, !dbg !13717
  %7 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !13718
  store i32 %6, i32* %7, align 4, !dbg !13719
  ret void, !dbg !13720
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #6 !dbg !13721 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13725, metadata !DIExpression()), !dbg !13726
  ret i32 -134, !dbg !13727
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #6 !dbg !13728 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13732, metadata !DIExpression()), !dbg !13734
  call void @llvm.dbg.value(metadata i32 %1, metadata !13733, metadata !DIExpression()), !dbg !13734
  ret i32 -134, !dbg !13735
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct._cpu_arch* noundef readnone %1) local_unnamed_addr #6 !dbg !13736 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13743, metadata !DIExpression()), !dbg !13745
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %1, metadata !13744, metadata !DIExpression()), !dbg !13745
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13746
  %4 = icmp eq %struct._cpu_arch* %1, null
  %5 = or i1 %3, %4, !dbg !13748
  %6 = select i1 %5, i32 -22, i32 0, !dbg !13745
  ret i32 %6, !dbg !13749
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct._cpu_arch* noundef readnone %0) local_unnamed_addr #6 !dbg !13750 {
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %0, metadata !13754, metadata !DIExpression()), !dbg !13755
  %2 = icmp eq %struct._cpu_arch* %0, null, !dbg !13756
  %3 = select i1 %2, i32 -22, i32 0, !dbg !13755
  ret i32 %3, !dbg !13758
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !13759 {
  tail call void @sys_clock_idle_exit() #24, !dbg !13761
  ret void, !dbg !13762
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #12 !dbg !13763 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13765, metadata !DIExpression()), !dbg !13768
  call void @llvm.dbg.value(metadata i8* %1, metadata !13766, metadata !DIExpression()), !dbg !13768
  call void @llvm.dbg.value(metadata i8* %2, metadata !13767, metadata !DIExpression()), !dbg !13768
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13769
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !13769
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !13769
  %7 = load i8, i8* %6, align 2, !dbg !13769
  %8 = icmp sgt i8 %7, -1, !dbg !13769
  br i1 %8, label %10, label %9, !dbg !13772

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.251, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1.252, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.253, i32 0, i32 0), i32 noundef 39) #24, !dbg !13773
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.253, i32 0, i32 0), i32 noundef 39) #24, !dbg !13773
  unreachable, !dbg !13773

10:                                               ; preds = %3, %10
  %11 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13775, !srcloc !13782
  call void @llvm.dbg.value(metadata i32 undef, metadata !13778, metadata !DIExpression()) #23, !dbg !13783
  call void @llvm.dbg.value(metadata i32 undef, metadata !13779, metadata !DIExpression()) #23, !dbg !13783
  tail call fastcc void @k_cpu_idle() #25, !dbg !13784
  br label %10, !dbg !13785, !llvm.loop !13786
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !13788 {
  tail call void @arch_cpu_idle() #24, !dbg !13789
  ret void, !dbg !13790
}

; Function Attrs: optsize
declare !dbg !13791 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #10 !dbg !13792 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13796, metadata !DIExpression()), !dbg !13800
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13797, metadata !DIExpression()), !dbg !13800
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13801
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !13801
  %5 = load i8, i8* %4, align 2, !dbg !13801
  call void @llvm.dbg.value(metadata i8 %5, metadata !13798, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !13800
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !13802
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !13802
  %8 = load i8, i8* %7, align 2, !dbg !13802
  call void @llvm.dbg.value(metadata i8 %8, metadata !13799, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !13800
  %9 = icmp eq i8 %8, %5, !dbg !13803
  %10 = sext i8 %5 to i32, !dbg !13805
  %11 = sext i8 %8 to i32, !dbg !13805
  %12 = sub nsw i32 %11, %10, !dbg !13805
  %13 = select i1 %9, i32 0, i32 %12, !dbg !13805
  ret i32 %13, !dbg !13806
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !13807 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13811, metadata !DIExpression()), !dbg !13812
  %2 = tail call fastcc i32 @slice_time() #25, !dbg !13813
  %3 = icmp eq i32 %2, 0, !dbg !13815
  br i1 %3, label %8, label %4, !dbg !13816

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #24, !dbg !13817
  %6 = add i32 %5, %2, !dbg !13819
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13820
  %7 = tail call fastcc i32 @slice_time() #25, !dbg !13821
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #24, !dbg !13822
  br label %8, !dbg !13823

8:                                                ; preds = %4, %1
  ret void, !dbg !13824
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #10 !dbg !13825 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13829, metadata !DIExpression()), !dbg !13831
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !13832
  call void @llvm.dbg.value(metadata i32 %1, metadata !13830, metadata !DIExpression()), !dbg !13831
  ret i32 %1, !dbg !13833
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13834 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13838, metadata !DIExpression()), !dbg !13847
  call void @llvm.dbg.value(metadata i32 %1, metadata !13839, metadata !DIExpression()), !dbg !13847
  call void @llvm.dbg.value(metadata i32 0, metadata !13840, metadata !DIExpression()), !dbg !13848
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13849, metadata !DIExpression()) #23, !dbg !13856
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13858, !srcloc !13864
  call void @llvm.dbg.value(metadata i32 undef, metadata !13861, metadata !DIExpression()) #23, !dbg !13865
  call void @llvm.dbg.value(metadata i32 undef, metadata !13862, metadata !DIExpression()) #23, !dbg !13865
  call void @llvm.dbg.value(metadata i32 undef, metadata !13855, metadata !DIExpression()) #23, !dbg !13856
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !13866
  br i1 %4, label %6, label %5, !dbg !13869

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.255, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 148) #24, !dbg !13870
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.257, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !13870
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 148) #24, !dbg !13870
  unreachable, !dbg !13870

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !13861, metadata !DIExpression()) #23, !dbg !13865
  call void @llvm.dbg.value(metadata i32 undef, metadata !13855, metadata !DIExpression()) #23, !dbg !13856
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !13872
  call void @llvm.dbg.value(metadata i32 undef, metadata !13846, metadata !DIExpression()), !dbg !13848
  call void @llvm.dbg.value(metadata i32 undef, metadata !13840, metadata !DIExpression()), !dbg !13848
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13873
  %7 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #25, !dbg !13876
  %8 = icmp sgt i32 %0, 0, !dbg !13877
  %9 = icmp sgt i32 %7, 2, !dbg !13879
  %10 = select i1 %9, i32 %7, i32 2, !dbg !13879
  %11 = select i1 %8, i32 %10, i32 %7, !dbg !13879
  store i32 %11, i32* @slice_ticks, align 4, !dbg !13880
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !13881
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !13882
  call void @llvm.dbg.value(metadata i32 undef, metadata !13883, metadata !DIExpression()) #23, !dbg !13889
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13888, metadata !DIExpression()) #23, !dbg !13889
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !13891
  br i1 %12, label %14, label %13, !dbg !13894

13:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.258, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 194) #24, !dbg !13895
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.259, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !13895
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 194) #24, !dbg !13895
  unreachable, !dbg !13895

14:                                               ; preds = %6
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !13858
  call void @llvm.dbg.value(metadata i32 %15, metadata !13861, metadata !DIExpression()) #23, !dbg !13865
  call void @llvm.dbg.value(metadata i32 %15, metadata !13855, metadata !DIExpression()) #23, !dbg !13856
  call void @llvm.dbg.value(metadata i32 %15, metadata !13846, metadata !DIExpression()), !dbg !13848
  call void @llvm.dbg.value(metadata i32 undef, metadata !13883, metadata !DIExpression()) #23, !dbg !13889
  call void @llvm.dbg.value(metadata i32 undef, metadata !13897, metadata !DIExpression()) #23, !dbg !13900
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !13902, !srcloc !13903
  call void @llvm.dbg.value(metadata i32 1, metadata !13840, metadata !DIExpression()), !dbg !13848
  call void @llvm.dbg.value(metadata i32 undef, metadata !13840, metadata !DIExpression()), !dbg !13848
  ret void, !dbg !13904
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #6 !dbg !13905 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13907, metadata !DIExpression()), !dbg !13908
  call void @llvm.dbg.value(metadata i32 %0, metadata !13909, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13924
  call void @llvm.dbg.value(metadata i32 1000, metadata !13912, metadata !DIExpression()), !dbg !13924
  call void @llvm.dbg.value(metadata i32 10000, metadata !13913, metadata !DIExpression()), !dbg !13924
  call void @llvm.dbg.value(metadata i8 1, metadata !13914, metadata !DIExpression()), !dbg !13924
  call void @llvm.dbg.value(metadata i1 true, metadata !13915, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13924
  call void @llvm.dbg.value(metadata i1 true, metadata !13916, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13924
  call void @llvm.dbg.value(metadata i8 0, metadata !13917, metadata !DIExpression()), !dbg !13924
  call void @llvm.dbg.value(metadata i1 true, metadata !13918, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13924
  call void @llvm.dbg.value(metadata i1 false, metadata !13919, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13924
  call void @llvm.dbg.value(metadata i64 0, metadata !13920, metadata !DIExpression()), !dbg !13924
  call void @llvm.dbg.value(metadata i64 0, metadata !13920, metadata !DIExpression()), !dbg !13924
  %2 = mul i32 %0, 10, !dbg !13926
  ret i32 %2, !dbg !13932
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !13933 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13935, metadata !DIExpression()), !dbg !13937
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13849, metadata !DIExpression()) #23, !dbg !13938
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13940, !srcloc !13864
  call void @llvm.dbg.value(metadata i32 undef, metadata !13861, metadata !DIExpression()) #23, !dbg !13942
  call void @llvm.dbg.value(metadata i32 undef, metadata !13862, metadata !DIExpression()) #23, !dbg !13942
  call void @llvm.dbg.value(metadata i32 undef, metadata !13855, metadata !DIExpression()) #23, !dbg !13938
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !13943
  br i1 %3, label %5, label %4, !dbg !13944

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.255, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 148) #24, !dbg !13945
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.257, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !13945
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 148) #24, !dbg !13945
  unreachable, !dbg !13945

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !13940
  call void @llvm.dbg.value(metadata i32 %6, metadata !13861, metadata !DIExpression()) #23, !dbg !13942
  call void @llvm.dbg.value(metadata i32 %6, metadata !13855, metadata !DIExpression()) #23, !dbg !13938
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !13946
  call void @llvm.dbg.value(metadata i32 %6, metadata !13936, metadata !DIExpression()), !dbg !13937
  %7 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !13947
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13949
  %9 = icmp eq %struct.k_thread* %7, %8, !dbg !13950
  br i1 %9, label %10, label %14, !dbg !13951

10:                                               ; preds = %5
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !13952
  call void @llvm.dbg.value(metadata i32 undef, metadata !13883, metadata !DIExpression()) #23, !dbg !13954
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13888, metadata !DIExpression()) #23, !dbg !13954
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !13956
  br i1 %11, label %13, label %12, !dbg !13957

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.258, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 194) #24, !dbg !13958
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.259, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !13958
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 194) #24, !dbg !13958
  unreachable, !dbg !13958

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %6, metadata !13883, metadata !DIExpression()) #23, !dbg !13954
  call void @llvm.dbg.value(metadata i32 %6, metadata !13897, metadata !DIExpression()) #23, !dbg !13959
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !13961, !srcloc !13903
  br label %33, !dbg !13962

14:                                               ; preds = %5
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !13963
  %15 = tail call fastcc i32 @slice_time() #25, !dbg !13964
  %16 = icmp eq i32 %15, 0, !dbg !13964
  br i1 %16, label %27, label %17, !dbg !13966

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %8) #25, !dbg !13967
  br i1 %18, label %19, label %27, !dbg !13968

19:                                               ; preds = %17
  %20 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13969
  %21 = icmp sgt i32 %20, %0, !dbg !13972
  br i1 %21, label %25, label %22, !dbg !13973

22:                                               ; preds = %19
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !13974
  %24 = tail call fastcc i32 @slice_expired_locked([1 x i32] %23) #25, !dbg !13974
  call void @llvm.dbg.value(metadata i32 %24, metadata !13936, metadata !DIExpression()), !dbg !13937
  br label %28, !dbg !13976

25:                                               ; preds = %19
  %26 = sub nsw i32 %20, %0, !dbg !13977
  store i32 %26, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13977
  br label %28

27:                                               ; preds = %17, %14
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13979
  br label %28

28:                                               ; preds = %22, %25, %27
  %29 = phi i32 [ %24, %22 ], [ %6, %25 ], [ %6, %27 ], !dbg !13937
  call void @llvm.dbg.value(metadata i32 %29, metadata !13936, metadata !DIExpression()), !dbg !13937
  call void @llvm.dbg.value(metadata i32 undef, metadata !13883, metadata !DIExpression()) #23, !dbg !13981
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13888, metadata !DIExpression()) #23, !dbg !13981
  %30 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !13983
  br i1 %30, label %32, label %31, !dbg !13984

31:                                               ; preds = %28
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.258, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 194) #24, !dbg !13985
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.259, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !13985
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 194) #24, !dbg !13985
  unreachable, !dbg !13985

32:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %29, metadata !13883, metadata !DIExpression()) #23, !dbg !13981
  call void @llvm.dbg.value(metadata i32 %29, metadata !13897, metadata !DIExpression()) #23, !dbg !13986
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %29) #23, !dbg !13988, !srcloc !13903
  br label %33, !dbg !13989

33:                                               ; preds = %32, %13
  ret void, !dbg !13989
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #10 !dbg !13990 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13994, metadata !DIExpression()), !dbg !13996
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #25, !dbg !13997
  %3 = icmp eq i32 %2, 0, !dbg !13997
  br i1 %3, label %16, label %4, !dbg !13998

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #25, !dbg !13999
  br i1 %5, label %16, label %6, !dbg !14000

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14001
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !14001
  %9 = load i8, i8* %8, align 2, !dbg !14001
  %10 = sext i8 %9 to i32, !dbg !14002
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !14003
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #25, !dbg !14004
  br i1 %12, label %16, label %13, !dbg !14005

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #25, !dbg !14006
  %15 = xor i1 %14, true, !dbg !14007
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !13996
  call void @llvm.dbg.value(metadata i1 %17, metadata !13995, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13996
  ret i1 %17, !dbg !14008
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !14009 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14013, metadata !DIExpression()), !dbg !14015
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14016
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14014, metadata !DIExpression()), !dbg !14015
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #25, !dbg !14017
  br i1 %3, label %5, label %4, !dbg !14019

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #25, !dbg !14020
  br label %5, !dbg !14022

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !14013, metadata !DIExpression()), !dbg !14015
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !14023
  ret i32 %6, !dbg !14024
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14025 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14027, metadata !DIExpression()), !dbg !14029
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14030
  %3 = load i8, i8* %2, align 1, !dbg !14030
  call void @llvm.dbg.value(metadata i8 %3, metadata !14028, metadata !DIExpression()), !dbg !14029
  %4 = and i8 %3, 31, !dbg !14031
  %5 = icmp ne i8 %4, 0, !dbg !14032
  ret i1 %5, !dbg !14033
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14034 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14036, metadata !DIExpression()), !dbg !14037
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !14038
  br i1 %2, label %3, label %7, !dbg !14040

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14041, metadata !DIExpression()) #23, !dbg !14044
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14047
  %5 = load i8, i8* %4, align 1, !dbg !14048
  %6 = and i8 %5, 127, !dbg !14048
  store i8 %6, i8* %4, align 1, !dbg !14048
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14049, metadata !DIExpression()) #23, !dbg !14052
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !14056
  br label %7, !dbg !14057

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14058, metadata !DIExpression()) #23, !dbg !14061
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14063
  %9 = load i8, i8* %8, align 1, !dbg !14064
  %10 = or i8 %9, -128, !dbg !14064
  store i8 %10, i8* %8, align 1, !dbg !14064
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14065, metadata !DIExpression()) #23, !dbg !14068
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14072, metadata !DIExpression()) #23, !dbg !14080
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14078, metadata !DIExpression()) #23, !dbg !14080
  %11 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #24, !dbg !14082
  br i1 %11, label %12, label %13, !dbg !14085

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.261, i32 0, i32 0), i32 noundef 186) #24, !dbg !14086
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.261, i32 0, i32 0), i32 noundef 186) #24, !dbg !14086
  unreachable, !dbg !14086

13:                                               ; preds = %7
  %14 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !14088
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !14079, metadata !DIExpression()) #23, !dbg !14080
  %15 = icmp eq %struct._dnode* %14, null, !dbg !14090
  br i1 %15, label %26, label %16, !dbg !14088

16:                                               ; preds = %13, %23
  %17 = phi %struct._dnode* [ %24, %23 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !14079, metadata !DIExpression()) #23, !dbg !14080
  %18 = bitcast %struct._dnode* %17 to %struct.k_thread*, !dbg !14092
  call void @llvm.dbg.value(metadata %struct.k_thread* %18, metadata !14079, metadata !DIExpression()) #23, !dbg !14080
  %19 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %18) #24, !dbg !14093
  %20 = icmp sgt i32 %19, 0, !dbg !14096
  br i1 %20, label %21, label %23, !dbg !14097

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14098
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %17, %struct._dnode* noundef %22) #24, !dbg !14100
  br label %28, !dbg !14101

23:                                               ; preds = %16
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %17) #24, !dbg !14090
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14079, metadata !DIExpression()) #23, !dbg !14080
  %25 = icmp eq %struct._dnode* %24, null, !dbg !14090
  br i1 %25, label %26, label %16, !dbg !14088, !llvm.loop !14102

26:                                               ; preds = %23, %13
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14104
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %27) #24, !dbg !14105
  br label %28, !dbg !14106

28:                                               ; preds = %21, %26
  %29 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14107
  %30 = icmp eq %struct.k_thread* %29, %0, !dbg !14108
  %31 = zext i1 %30 to i32, !dbg !14108
  tail call fastcc void @update_cache(i32 noundef %31) #25, !dbg !14109
  ret void, !dbg !14110
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14111 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14113, metadata !DIExpression()), !dbg !14114
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0, i32 noundef 128) #25, !dbg !14115
  ret i1 %2, !dbg !14116
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14117 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !14119, metadata !DIExpression()), !dbg !14121
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14120, metadata !DIExpression()), !dbg !14121
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #25, !dbg !14122
  br i1 %3, label %4, label %5, !dbg !14125

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.261, i32 0, i32 0), i32 noundef 1139) #24, !dbg !14126
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.261, i32 0, i32 0), i32 noundef 1139) #24, !dbg !14126
  unreachable, !dbg !14126

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !14128
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %6) #25, !dbg !14129
  ret void, !dbg !14130
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #6 !dbg !14131 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14133, metadata !DIExpression()), !dbg !14134
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !14135
  ret i1 %2, !dbg !14136
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #10 !dbg !14137 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14141, metadata !DIExpression()), !dbg !14142
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #25, !dbg !14143
  br i1 %2, label %6, label %3, !dbg !14143

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14144
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14144
  br label %6, !dbg !14143

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14143
  ret %struct._dnode* %7, !dbg !14145
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !14146 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14150, metadata !DIExpression()), !dbg !14154
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14151, metadata !DIExpression()), !dbg !14154
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14155
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14155
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14152, metadata !DIExpression()), !dbg !14154
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14156
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !14157
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14158
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !14159
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14160
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14161
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14162
  ret void, !dbg !14163
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #10 !dbg !14164 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14168, metadata !DIExpression()), !dbg !14170
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14169, metadata !DIExpression()), !dbg !14170
  %3 = icmp eq %struct._dnode* %1, null, !dbg !14171
  br i1 %3, label %6, label %4, !dbg !14172

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #25, !dbg !14173
  br label %6, !dbg !14172

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !14172
  ret %struct._dnode* %7, !dbg !14174
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !14175 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14179, metadata !DIExpression()), !dbg !14182
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14180, metadata !DIExpression()), !dbg !14182
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14183
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14183
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14181, metadata !DIExpression()), !dbg !14182
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14184
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !14185
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14186
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !14187
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14188
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14189
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14190
  ret void, !dbg !14191
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !14192 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14194, metadata !DIExpression()), !dbg !14196
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !14197
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14204, metadata !DIExpression()) #23, !dbg !14206
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14207
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !14208
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !14208
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14195, metadata !DIExpression()), !dbg !14196
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14209, metadata !DIExpression()) #23, !dbg !14215
  call void @llvm.dbg.value(metadata i32 %0, metadata !14214, metadata !DIExpression()) #23, !dbg !14215
  %6 = icmp eq i32 %0, 0, !dbg !14218
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14220
  br i1 %6, label %8, label %18, !dbg !14221

8:                                                ; preds = %1
  %9 = icmp eq %struct.k_thread* %7, null, !dbg !14222
  br i1 %9, label %10, label %11, !dbg !14225

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.261, i32 0, i32 0), i32 noundef 137) #24, !dbg !14226
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.263, i32 0, i32 0)) #24, !dbg !14226
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.261, i32 0, i32 0), i32 noundef 137) #24, !dbg !14226
  unreachable, !dbg !14226

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %7) #24, !dbg !14228
  br i1 %12, label %18, label %13, !dbg !14230

13:                                               ; preds = %11
  %14 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #24, !dbg !14231
  br i1 %14, label %18, label %15, !dbg !14233

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef nonnull %7) #24, !dbg !14234
  %17 = icmp eq i32 %16, 0, !dbg !14234
  br i1 %17, label %21, label %18, !dbg !14236

18:                                               ; preds = %1, %13, %11, %15
  %19 = icmp eq %struct.k_thread* %5, %7, !dbg !14237
  br i1 %19, label %21, label %20, !dbg !14240

20:                                               ; preds = %18
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !14241
  br label %21, !dbg !14243

21:                                               ; preds = %15, %18, %20
  %22 = phi %struct.k_thread* [ %5, %20 ], [ %5, %18 ], [ %7, %15 ], !dbg !14220
  store %struct.k_thread* %22, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14220
  ret void, !dbg !14244
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #10 !dbg !14245 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14249, metadata !DIExpression()), !dbg !14252
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14250, metadata !DIExpression()), !dbg !14252
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #25, !dbg !14253
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !14251, metadata !DIExpression()), !dbg !14252
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14250, metadata !DIExpression()), !dbg !14252
  ret %struct.k_thread* %3, !dbg !14254
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14255 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14257, metadata !DIExpression()), !dbg !14258
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14259
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !14260
  %4 = xor i1 %3, true, !dbg !14261
  ret i1 %4, !dbg !14262
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14263 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14265, metadata !DIExpression()), !dbg !14266
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !14267
  %3 = load i16, i16* %2, align 2, !dbg !14267
  %4 = icmp ult i16 %3, 128, !dbg !14268
  %5 = zext i1 %4 to i32, !dbg !14268
  ret i32 %5, !dbg !14269
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14270 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14276, metadata !DIExpression()), !dbg !14277
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14278
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #25, !dbg !14279
  %4 = xor i1 %3, true, !dbg !14280
  ret i1 %4, !dbg !14281
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14282 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14288, metadata !DIExpression()), !dbg !14289
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14290
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14290
  %4 = icmp ne %struct._dnode* %3, null, !dbg !14291
  ret i1 %4, !dbg !14292
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #10 !dbg !14293 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14295, metadata !DIExpression()), !dbg !14297
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14296, metadata !DIExpression()), !dbg !14297
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14298
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14298
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !14299
  br i1 %5, label %9, label %6, !dbg !14300

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14301
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !14301
  br label %9, !dbg !14300

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !14300
  ret %struct._dnode* %10, !dbg !14302
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !14303 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14307, metadata !DIExpression()), !dbg !14308
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14309
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14309
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !14310
  ret i1 %4, !dbg !14311
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #11 !dbg !14312 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14316, metadata !DIExpression()), !dbg !14319
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14320
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14320
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14317, metadata !DIExpression()), !dbg !14319
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14321
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14321
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !14318, metadata !DIExpression()), !dbg !14319
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !14322
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !14323
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !14324
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !14325
  tail call fastcc void @sys_dnode_init.264(%struct._dnode* noundef %0) #25, !dbg !14326
  ret void, !dbg !14327
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.264(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !14328 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14330, metadata !DIExpression()), !dbg !14331
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14332
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14333
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14334
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14335
  ret void, !dbg !14336
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #10 !dbg !14337 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14341, metadata !DIExpression()), !dbg !14343
  call void @llvm.dbg.value(metadata i32 %1, metadata !14342, metadata !DIExpression()), !dbg !14343
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14344
  %4 = load i8, i8* %3, align 1, !dbg !14344
  %5 = zext i8 %4 to i32, !dbg !14345
  %6 = and i32 %5, %1, !dbg !14346
  %7 = icmp ne i32 %6, 0, !dbg !14347
  ret i1 %7, !dbg !14348
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #6 !dbg !14349 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14353, metadata !DIExpression()), !dbg !14355
  call void @llvm.dbg.value(metadata i32 %1, metadata !14354, metadata !DIExpression()), !dbg !14355
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #25, !dbg !14356
  ret i1 %3, !dbg !14357
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #6 !dbg !14358 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14360, metadata !DIExpression()), !dbg !14362
  call void @llvm.dbg.value(metadata i32 %1, metadata !14361, metadata !DIExpression()), !dbg !14362
  %3 = icmp slt i32 %0, %1, !dbg !14363
  ret i1 %3, !dbg !14364
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14365 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14367, metadata !DIExpression()), !dbg !14371
  call void @llvm.dbg.value(metadata i32 0, metadata !14368, metadata !DIExpression()), !dbg !14372
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13849, metadata !DIExpression()) #23, !dbg !14373
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14375, !srcloc !13864
  call void @llvm.dbg.value(metadata i32 undef, metadata !13861, metadata !DIExpression()) #23, !dbg !14377
  call void @llvm.dbg.value(metadata i32 undef, metadata !13862, metadata !DIExpression()) #23, !dbg !14377
  call void @llvm.dbg.value(metadata i32 undef, metadata !13855, metadata !DIExpression()) #23, !dbg !14373
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14378
  br i1 %3, label %5, label %4, !dbg !14379

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.255, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 148) #24, !dbg !14380
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.257, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14380
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 148) #24, !dbg !14380
  unreachable, !dbg !14380

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13861, metadata !DIExpression()) #23, !dbg !14377
  call void @llvm.dbg.value(metadata i32 undef, metadata !13855, metadata !DIExpression()) #23, !dbg !14373
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14381
  call void @llvm.dbg.value(metadata i32 undef, metadata !14370, metadata !DIExpression()), !dbg !14372
  call void @llvm.dbg.value(metadata i32 undef, metadata !14368, metadata !DIExpression()), !dbg !14372
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !14382
  call void @llvm.dbg.value(metadata i32 undef, metadata !13883, metadata !DIExpression()) #23, !dbg !14387
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13888, metadata !DIExpression()) #23, !dbg !14387
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14389
  br i1 %6, label %8, label %7, !dbg !14390

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.258, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 194) #24, !dbg !14391
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.259, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14391
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 194) #24, !dbg !14391
  unreachable, !dbg !14391

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14375
  call void @llvm.dbg.value(metadata i32 %9, metadata !13861, metadata !DIExpression()) #23, !dbg !14377
  call void @llvm.dbg.value(metadata i32 %9, metadata !13855, metadata !DIExpression()) #23, !dbg !14373
  call void @llvm.dbg.value(metadata i32 %9, metadata !14370, metadata !DIExpression()), !dbg !14372
  call void @llvm.dbg.value(metadata i32 undef, metadata !13883, metadata !DIExpression()) #23, !dbg !14387
  call void @llvm.dbg.value(metadata i32 undef, metadata !13897, metadata !DIExpression()) #23, !dbg !14392
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14394, !srcloc !13903
  call void @llvm.dbg.value(metadata i32 1, metadata !14368, metadata !DIExpression()), !dbg !14372
  call void @llvm.dbg.value(metadata i32 undef, metadata !14368, metadata !DIExpression()), !dbg !14372
  ret void, !dbg !14395
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14396 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14398, metadata !DIExpression()), !dbg !14399
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !14400
  br i1 %2, label %27, label %3, !dbg !14402

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #25, !dbg !14403
  br i1 %4, label %5, label %27, !dbg !14404

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14058, metadata !DIExpression()) #23, !dbg !14405
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14408
  %7 = load i8, i8* %6, align 1, !dbg !14409
  %8 = or i8 %7, -128, !dbg !14409
  store i8 %8, i8* %6, align 1, !dbg !14409
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14065, metadata !DIExpression()) #23, !dbg !14410
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14072, metadata !DIExpression()) #23, !dbg !14412
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14078, metadata !DIExpression()) #23, !dbg !14412
  %9 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #24, !dbg !14414
  br i1 %9, label %10, label %11, !dbg !14415

10:                                               ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.261, i32 0, i32 0), i32 noundef 186) #24, !dbg !14416
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.261, i32 0, i32 0), i32 noundef 186) #24, !dbg !14416
  unreachable, !dbg !14416

11:                                               ; preds = %5
  %12 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !14417
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !14079, metadata !DIExpression()) #23, !dbg !14412
  %13 = icmp eq %struct._dnode* %12, null, !dbg !14418
  br i1 %13, label %24, label %14, !dbg !14417

14:                                               ; preds = %11, %21
  %15 = phi %struct._dnode* [ %22, %21 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !14079, metadata !DIExpression()) #23, !dbg !14412
  %16 = bitcast %struct._dnode* %15 to %struct.k_thread*, !dbg !14419
  call void @llvm.dbg.value(metadata %struct.k_thread* %16, metadata !14079, metadata !DIExpression()) #23, !dbg !14412
  %17 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %16) #24, !dbg !14420
  %18 = icmp sgt i32 %17, 0, !dbg !14421
  br i1 %18, label %19, label %21, !dbg !14422

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14423
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %15, %struct._dnode* noundef %20) #24, !dbg !14424
  br label %26, !dbg !14425

21:                                               ; preds = %14
  %22 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %15) #24, !dbg !14418
  call void @llvm.dbg.value(metadata %struct._dnode* %22, metadata !14079, metadata !DIExpression()) #23, !dbg !14412
  %23 = icmp eq %struct._dnode* %22, null, !dbg !14418
  br i1 %23, label %24, label %14, !dbg !14417, !llvm.loop !14426

24:                                               ; preds = %21, %11
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14428
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %25) #24, !dbg !14429
  br label %26, !dbg !14430

26:                                               ; preds = %19, %24
  tail call fastcc void @update_cache(i32 noundef 0) #25, !dbg !14431
  br label %27, !dbg !14432

27:                                               ; preds = %26, %3, %1
  ret void, !dbg !14433
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14434 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14436, metadata !DIExpression()), !dbg !14437
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #25, !dbg !14438
  br i1 %2, label %6, label %3, !dbg !14439

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #25, !dbg !14440
  %5 = xor i1 %4, true, !dbg !14439
  br label %6, !dbg !14439

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !14441
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14442 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14444, metadata !DIExpression()), !dbg !14448
  call void @llvm.dbg.value(metadata i32 0, metadata !14445, metadata !DIExpression()), !dbg !14449
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13849, metadata !DIExpression()) #23, !dbg !14450
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14452, !srcloc !13864
  call void @llvm.dbg.value(metadata i32 undef, metadata !13861, metadata !DIExpression()) #23, !dbg !14454
  call void @llvm.dbg.value(metadata i32 undef, metadata !13862, metadata !DIExpression()) #23, !dbg !14454
  call void @llvm.dbg.value(metadata i32 undef, metadata !13855, metadata !DIExpression()) #23, !dbg !14450
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14455
  br i1 %3, label %5, label %4, !dbg !14456

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.255, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 148) #24, !dbg !14457
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.257, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14457
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 148) #24, !dbg !14457
  unreachable, !dbg !14457

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13861, metadata !DIExpression()) #23, !dbg !14454
  call void @llvm.dbg.value(metadata i32 undef, metadata !13855, metadata !DIExpression()) #23, !dbg !14450
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14458
  call void @llvm.dbg.value(metadata i32 undef, metadata !14447, metadata !DIExpression()), !dbg !14449
  call void @llvm.dbg.value(metadata i32 undef, metadata !14445, metadata !DIExpression()), !dbg !14449
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #25, !dbg !14459
  call void @llvm.dbg.value(metadata i32 undef, metadata !13883, metadata !DIExpression()) #23, !dbg !14462
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13888, metadata !DIExpression()) #23, !dbg !14462
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14464
  br i1 %6, label %8, label %7, !dbg !14465

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.258, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 194) #24, !dbg !14466
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.259, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14466
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 194) #24, !dbg !14466
  unreachable, !dbg !14466

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14452
  call void @llvm.dbg.value(metadata i32 %9, metadata !13861, metadata !DIExpression()) #23, !dbg !14454
  call void @llvm.dbg.value(metadata i32 %9, metadata !13855, metadata !DIExpression()) #23, !dbg !14450
  call void @llvm.dbg.value(metadata i32 %9, metadata !14447, metadata !DIExpression()), !dbg !14449
  call void @llvm.dbg.value(metadata i32 undef, metadata !13883, metadata !DIExpression()) #23, !dbg !14462
  call void @llvm.dbg.value(metadata i32 undef, metadata !13897, metadata !DIExpression()) #23, !dbg !14467
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14469, !srcloc !13903
  call void @llvm.dbg.value(metadata i32 1, metadata !14445, metadata !DIExpression()), !dbg !14449
  call void @llvm.dbg.value(metadata i32 undef, metadata !14445, metadata !DIExpression()), !dbg !14449
  ret void, !dbg !14470
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14471 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14473, metadata !DIExpression()), !dbg !14475
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13849, metadata !DIExpression()) #23, !dbg !14476
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14478, !srcloc !13864
  call void @llvm.dbg.value(metadata i32 undef, metadata !13861, metadata !DIExpression()) #23, !dbg !14480
  call void @llvm.dbg.value(metadata i32 undef, metadata !13862, metadata !DIExpression()) #23, !dbg !14480
  call void @llvm.dbg.value(metadata i32 undef, metadata !13855, metadata !DIExpression()) #23, !dbg !14476
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14481
  br i1 %3, label %5, label %4, !dbg !14482

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.255, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 148) #24, !dbg !14483
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.257, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14483
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 148) #24, !dbg !14483
  unreachable, !dbg !14483

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14478
  call void @llvm.dbg.value(metadata i32 %6, metadata !13861, metadata !DIExpression()) #23, !dbg !14480
  call void @llvm.dbg.value(metadata i32 %6, metadata !13855, metadata !DIExpression()) #23, !dbg !14476
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14484
  call void @llvm.dbg.value(metadata i32 %6, metadata !14474, metadata !DIExpression()), !dbg !14475
  %7 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #25, !dbg !14485
  br i1 %7, label %8, label %12, !dbg !14487

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !13883, metadata !DIExpression()) #23, !dbg !14488
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13888, metadata !DIExpression()) #23, !dbg !14488
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14491
  br i1 %9, label %11, label %10, !dbg !14492

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.258, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 194) #24, !dbg !14493
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.259, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14493
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 194) #24, !dbg !14493
  unreachable, !dbg !14493

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !13883, metadata !DIExpression()) #23, !dbg !14488
  call void @llvm.dbg.value(metadata i32 %6, metadata !13897, metadata !DIExpression()) #23, !dbg !14494
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !14496, !srcloc !13903
  br label %14, !dbg !14497

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_started.269(%struct.k_thread* noundef %0) #25, !dbg !14498
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !14499
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14500
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #25, !dbg !14500
  br label %14, !dbg !14501

14:                                               ; preds = %12, %11
  ret void, !dbg !14501
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14502 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14504, metadata !DIExpression()), !dbg !14505
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14506
  %3 = load i8, i8* %2, align 1, !dbg !14506
  %4 = and i8 %3, 4, !dbg !14507
  %5 = icmp eq i8 %4, 0, !dbg !14508
  ret i1 %5, !dbg !14509
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.269(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !14510 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14512, metadata !DIExpression()), !dbg !14513
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14514
  %3 = load i8, i8* %2, align 1, !dbg !14515
  %4 = and i8 %3, -5, !dbg !14515
  store i8 %4, i8* %2, align 1, !dbg !14515
  ret void, !dbg !14516
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !14517 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !14520, metadata !DIExpression()), !dbg !14521
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14519, metadata !DIExpression()), !dbg !14521
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #25, !dbg !14522
  br i1 %4, label %5, label %12, !dbg !14524

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #25, !dbg !14525
  br i1 %6, label %7, label %12, !dbg !14526

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14527, metadata !DIExpression()) #23, !dbg !14533
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14532, metadata !DIExpression()) #23, !dbg !14533
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14536, metadata !DIExpression()) #23, !dbg !14541
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #24, !dbg !14543
  br i1 %8, label %10, label %9, !dbg !14546

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.258, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 225) #24, !dbg !14547
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.259, i32 0, i32 0), %struct.k_spinlock* noundef %0) #24, !dbg !14547
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 225) #24, !dbg !14547
  unreachable, !dbg !14547

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 %3, metadata !14527, metadata !DIExpression()) #23, !dbg !14533
  %11 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #24, !dbg !14549
  br label %16, !dbg !14550

12:                                               ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !13883, metadata !DIExpression()) #23, !dbg !14551
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13888, metadata !DIExpression()) #23, !dbg !14551
  %13 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #24, !dbg !14554
  br i1 %13, label %15, label %14, !dbg !14555

14:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.258, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 194) #24, !dbg !14556
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.259, i32 0, i32 0), %struct.k_spinlock* noundef %0) #24, !dbg !14556
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 194) #24, !dbg !14556
  unreachable, !dbg !14556

15:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 %3, metadata !13883, metadata !DIExpression()) #23, !dbg !14551
  call void @llvm.dbg.value(metadata i32 %3, metadata !13897, metadata !DIExpression()) #23, !dbg !14557
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14559, !srcloc !13903
  br label %16

16:                                               ; preds = %15, %10
  ret void, !dbg !14560
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !14561 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14565, metadata !DIExpression()), !dbg !14566
  call void @llvm.dbg.value(metadata i32 %0, metadata !14567, metadata !DIExpression()), !dbg !14572
  %2 = icmp eq i32 %0, 0, !dbg !14574
  br i1 %2, label %3, label %6, !dbg !14575

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14576, !srcloc !14583
  call void @llvm.dbg.value(metadata i32 %4, metadata !14579, metadata !DIExpression()) #23, !dbg !14584
  %5 = icmp eq i32 %4, 0, !dbg !14585
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !14566
  ret i1 %7, !dbg !14586
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #10 !dbg !14587 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14590
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14589, metadata !DIExpression()), !dbg !14591
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14592
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !14593
  ret i1 %3, !dbg !14594
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !14595 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14597, metadata !DIExpression()), !dbg !14599
  %2 = tail call i32 @arch_swap(i32 noundef %0) #24, !dbg !14600
  call void @llvm.dbg.value(metadata i32 %2, metadata !14598, metadata !DIExpression()), !dbg !14599
  ret i32 %2, !dbg !14601
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14602 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14604, metadata !DIExpression()), !dbg !14608
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !14609
  call void @llvm.dbg.value(metadata i32 0, metadata !14605, metadata !DIExpression()), !dbg !14610
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13849, metadata !DIExpression()) #23, !dbg !14611
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14613, !srcloc !13864
  call void @llvm.dbg.value(metadata i32 undef, metadata !13861, metadata !DIExpression()) #23, !dbg !14615
  call void @llvm.dbg.value(metadata i32 undef, metadata !13862, metadata !DIExpression()) #23, !dbg !14615
  call void @llvm.dbg.value(metadata i32 undef, metadata !13855, metadata !DIExpression()) #23, !dbg !14611
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14616
  br i1 %4, label %6, label %5, !dbg !14617

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.255, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 148) #24, !dbg !14618
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.257, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14618
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 148) #24, !dbg !14618
  unreachable, !dbg !14618

6:                                                ; preds = %1
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !14613
  call void @llvm.dbg.value(metadata i32 %7, metadata !13861, metadata !DIExpression()) #23, !dbg !14615
  call void @llvm.dbg.value(metadata i32 %7, metadata !13855, metadata !DIExpression()) #23, !dbg !14611
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14619
  call void @llvm.dbg.value(metadata i32 %7, metadata !14607, metadata !DIExpression()), !dbg !14610
  call void @llvm.dbg.value(metadata i32 undef, metadata !14605, metadata !DIExpression()), !dbg !14610
  %8 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !14620
  br i1 %8, label %9, label %13, !dbg !14624

9:                                                ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14041, metadata !DIExpression()) #23, !dbg !14625
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14628
  %11 = load i8, i8* %10, align 1, !dbg !14629
  %12 = and i8 %11, 127, !dbg !14629
  store i8 %12, i8* %10, align 1, !dbg !14629
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14049, metadata !DIExpression()) #23, !dbg !14630
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !14632
  br label %13, !dbg !14633

13:                                               ; preds = %9, %6
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #25, !dbg !14634
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14635
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !14636
  %16 = zext i1 %15 to i32, !dbg !14636
  tail call fastcc void @update_cache(i32 noundef %16) #25, !dbg !14637
  call void @llvm.dbg.value(metadata i32 undef, metadata !13883, metadata !DIExpression()) #23, !dbg !14638
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13888, metadata !DIExpression()) #23, !dbg !14638
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14640
  br i1 %17, label %19, label %18, !dbg !14641

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.258, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 194) #24, !dbg !14642
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.259, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14642
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 194) #24, !dbg !14642
  unreachable, !dbg !14642

19:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %7, metadata !13883, metadata !DIExpression()) #23, !dbg !14638
  call void @llvm.dbg.value(metadata i32 %7, metadata !13897, metadata !DIExpression()) #23, !dbg !14643
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !14645, !srcloc !13903
  call void @llvm.dbg.value(metadata i32 1, metadata !14605, metadata !DIExpression()), !dbg !14610
  call void @llvm.dbg.value(metadata i32 undef, metadata !14605, metadata !DIExpression()), !dbg !14610
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14646
  %21 = icmp eq %struct.k_thread* %20, %0, !dbg !14648
  br i1 %21, label %22, label %23, !dbg !14649

22:                                               ; preds = %19
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !14650
  br label %23, !dbg !14652

23:                                               ; preds = %22, %19
  ret void, !dbg !14653
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14654 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14656, metadata !DIExpression()), !dbg !14657
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14658
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !14659
  ret i32 %3, !dbg !14660
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !14661 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14663, metadata !DIExpression()), !dbg !14664
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14665
  %3 = load i8, i8* %2, align 1, !dbg !14666
  %4 = or i8 %3, 16, !dbg !14666
  store i8 %4, i8* %2, align 1, !dbg !14666
  ret void, !dbg !14667
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !14668 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14669, !srcloc !13864
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14669
  call void @llvm.dbg.value(metadata i32 %2, metadata !13861, metadata !DIExpression()) #23, !dbg !14671
  call void @llvm.dbg.value(metadata i32 undef, metadata !13862, metadata !DIExpression()) #23, !dbg !14671
  tail call void @z_reschedule_irqlock(i32 noundef %2) #25, !dbg !14672
  ret void, !dbg !14673
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !14674 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14676, metadata !DIExpression()), !dbg !14677
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #25, !dbg !14678
  br i1 %2, label %3, label %5, !dbg !14680

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #25, !dbg !14681
  br label %6, !dbg !14683

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !13897, metadata !DIExpression()) #23, !dbg !14684
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !14687, !srcloc !13903
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !14688
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14689 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14691, metadata !DIExpression()), !dbg !14693
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13849, metadata !DIExpression()) #23, !dbg !14694
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14696, !srcloc !13864
  call void @llvm.dbg.value(metadata i32 undef, metadata !13861, metadata !DIExpression()) #23, !dbg !14698
  call void @llvm.dbg.value(metadata i32 undef, metadata !13862, metadata !DIExpression()) #23, !dbg !14698
  call void @llvm.dbg.value(metadata i32 undef, metadata !13855, metadata !DIExpression()) #23, !dbg !14694
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14699
  br i1 %3, label %5, label %4, !dbg !14700

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.255, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 148) #24, !dbg !14701
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.257, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14701
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 148) #24, !dbg !14701
  unreachable, !dbg !14701

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14696
  call void @llvm.dbg.value(metadata i32 %6, metadata !13861, metadata !DIExpression()) #23, !dbg !14698
  call void @llvm.dbg.value(metadata i32 %6, metadata !13855, metadata !DIExpression()) #23, !dbg !14694
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14702
  call void @llvm.dbg.value(metadata i32 %6, metadata !14692, metadata !DIExpression()), !dbg !14693
  %7 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #25, !dbg !14703
  br i1 %7, label %12, label %8, !dbg !14705

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !13883, metadata !DIExpression()) #23, !dbg !14706
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13888, metadata !DIExpression()) #23, !dbg !14706
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14709
  br i1 %9, label %11, label %10, !dbg !14710

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.258, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 194) #24, !dbg !14711
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.259, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14711
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 194) #24, !dbg !14711
  unreachable, !dbg !14711

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !13883, metadata !DIExpression()) #23, !dbg !14706
  call void @llvm.dbg.value(metadata i32 %6, metadata !13897, metadata !DIExpression()) #23, !dbg !14712
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !14714, !srcloc !13903
  br label %14, !dbg !14715

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #25, !dbg !14716
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !14717
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14718
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #25, !dbg !14718
  br label %14, !dbg !14719

14:                                               ; preds = %12, %11
  ret void, !dbg !14719
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14720 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14722, metadata !DIExpression()), !dbg !14723
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14724
  %3 = load i8, i8* %2, align 1, !dbg !14724
  %4 = and i8 %3, 16, !dbg !14725
  %5 = icmp ne i8 %4, 0, !dbg !14726
  ret i1 %5, !dbg !14727
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !14728 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14730, metadata !DIExpression()), !dbg !14731
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14732
  %3 = load i8, i8* %2, align 1, !dbg !14733
  %4 = and i8 %3, -17, !dbg !14733
  store i8 %4, i8* %2, align 1, !dbg !14733
  ret void, !dbg !14734
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14735 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14745, metadata !DIExpression()), !dbg !14749
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14743, metadata !DIExpression()), !dbg !14749
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !14744, metadata !DIExpression()), !dbg !14749
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14750
  %5 = icmp eq %struct.k_thread* %4, %0, !dbg !14750
  br i1 %5, label %9, label %6, !dbg !14750

6:                                                ; preds = %3
  %7 = tail call fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* noundef %0) #25, !dbg !14750
  br i1 %7, label %9, label %8, !dbg !14753

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.261, i32 0, i32 0), i32 noundef 773) #24, !dbg !14754
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.261, i32 0, i32 0), i32 noundef 773) #24, !dbg !14754
  unreachable, !dbg !14754

9:                                                ; preds = %3, %6
  call void @llvm.dbg.value(metadata i32 0, metadata !14746, metadata !DIExpression()), !dbg !14756
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13849, metadata !DIExpression()) #23, !dbg !14757
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14759, !srcloc !13864
  call void @llvm.dbg.value(metadata i32 undef, metadata !13861, metadata !DIExpression()) #23, !dbg !14761
  call void @llvm.dbg.value(metadata i32 undef, metadata !13862, metadata !DIExpression()) #23, !dbg !14761
  call void @llvm.dbg.value(metadata i32 undef, metadata !13855, metadata !DIExpression()) #23, !dbg !14757
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14762
  br i1 %11, label %13, label %12, !dbg !14763

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.255, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 148) #24, !dbg !14764
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.257, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14764
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 148) #24, !dbg !14764
  unreachable, !dbg !14764

13:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !13861, metadata !DIExpression()) #23, !dbg !14761
  call void @llvm.dbg.value(metadata i32 undef, metadata !13855, metadata !DIExpression()) #23, !dbg !14757
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14765
  call void @llvm.dbg.value(metadata i32 undef, metadata !14748, metadata !DIExpression()), !dbg !14756
  call void @llvm.dbg.value(metadata i32 undef, metadata !14746, metadata !DIExpression()), !dbg !14756
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #25, !dbg !14766
  call void @llvm.dbg.value(metadata i32 undef, metadata !13883, metadata !DIExpression()) #23, !dbg !14769
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13888, metadata !DIExpression()) #23, !dbg !14769
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14771
  br i1 %14, label %16, label %15, !dbg !14772

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.258, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 194) #24, !dbg !14773
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.259, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14773
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 194) #24, !dbg !14773
  unreachable, !dbg !14773

16:                                               ; preds = %13
  %17 = extractvalue { i32, i32 } %10, 0, !dbg !14759
  call void @llvm.dbg.value(metadata i32 %17, metadata !13861, metadata !DIExpression()) #23, !dbg !14761
  call void @llvm.dbg.value(metadata i32 %17, metadata !13855, metadata !DIExpression()) #23, !dbg !14757
  call void @llvm.dbg.value(metadata i32 %17, metadata !14748, metadata !DIExpression()), !dbg !14756
  call void @llvm.dbg.value(metadata i32 undef, metadata !13883, metadata !DIExpression()) #23, !dbg !14769
  call void @llvm.dbg.value(metadata i32 undef, metadata !13897, metadata !DIExpression()) #23, !dbg !14774
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %17) #23, !dbg !14776, !srcloc !13903
  call void @llvm.dbg.value(metadata i32 1, metadata !14746, metadata !DIExpression()), !dbg !14756
  call void @llvm.dbg.value(metadata i32 undef, metadata !14746, metadata !DIExpression()), !dbg !14756
  ret void, !dbg !14777
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !14778 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14780, metadata !DIExpression()), !dbg !14781
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14782
  %3 = load i8, i8* %2, align 1, !dbg !14782
  %4 = and i8 %3, 1, !dbg !14783
  %5 = icmp ne i8 %4, 0, !dbg !14784
  ret i1 %5, !dbg !14785
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !14786 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14790, metadata !DIExpression()), !dbg !14791
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14788, metadata !DIExpression()), !dbg !14791
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !14789, metadata !DIExpression()), !dbg !14791
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #25, !dbg !14792
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #25, !dbg !14793
  ret void, !dbg !14794
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !14795 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14799, metadata !DIExpression()), !dbg !14801
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !14800, metadata !DIExpression()), !dbg !14801
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #25, !dbg !14802
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #25, !dbg !14803
  %3 = icmp eq %union.anon* %1, null, !dbg !14804
  br i1 %3, label %24, label %4, !dbg !14806

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14807
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !14809
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !14810
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !14072, metadata !DIExpression()) #23, !dbg !14811
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14078, metadata !DIExpression()) #23, !dbg !14811
  %7 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #24, !dbg !14813
  br i1 %7, label %8, label %9, !dbg !14814

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.261, i32 0, i32 0), i32 noundef 186) #24, !dbg !14815
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.261, i32 0, i32 0), i32 noundef 186) #24, !dbg !14815
  unreachable, !dbg !14815

9:                                                ; preds = %4
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #24, !dbg !14816
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14079, metadata !DIExpression()) #23, !dbg !14811
  %11 = icmp eq %struct._dnode* %10, null, !dbg !14817
  br i1 %11, label %22, label %12, !dbg !14816

12:                                               ; preds = %9, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !14079, metadata !DIExpression()) #23, !dbg !14811
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !14818
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14079, metadata !DIExpression()) #23, !dbg !14811
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %14) #24, !dbg !14819
  %16 = icmp sgt i32 %15, 0, !dbg !14820
  br i1 %16, label %17, label %19, !dbg !14821

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14822
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #24, !dbg !14823
  br label %24, !dbg !14824

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %13) #24, !dbg !14817
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14079, metadata !DIExpression()) #23, !dbg !14811
  %21 = icmp eq %struct._dnode* %20, null, !dbg !14817
  br i1 %21, label %22, label %12, !dbg !14816, !llvm.loop !14825

22:                                               ; preds = %19, %9
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14827
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %23) #24, !dbg !14828
  br label %24, !dbg !14829

24:                                               ; preds = %22, %17, %2
  ret void, !dbg !14830
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14831 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14836, metadata !DIExpression()), !dbg !14837
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14835, metadata !DIExpression()), !dbg !14837
  %4 = icmp eq i64 %3, -1, !dbg !14838
  br i1 %4, label %6, label %5, !dbg !14840

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.271(%struct.k_thread* noundef %0, [1 x i64] %1) #25, !dbg !14841
  br label %6, !dbg !14843

6:                                                ; preds = %5, %2
  ret void, !dbg !14844
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.271(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14845 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14848, metadata !DIExpression()), !dbg !14849
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14847, metadata !DIExpression()), !dbg !14849
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14850
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #24, !dbg !14851
  ret void, !dbg !14852
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !14853 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14855, metadata !DIExpression()), !dbg !14863
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !14864
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !14864
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14856, metadata !DIExpression()), !dbg !14863
  call void @llvm.dbg.value(metadata i32 0, metadata !14857, metadata !DIExpression()), !dbg !14865
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13849, metadata !DIExpression()) #23, !dbg !14866
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14868, !srcloc !13864
  call void @llvm.dbg.value(metadata i32 undef, metadata !13861, metadata !DIExpression()) #23, !dbg !14870
  call void @llvm.dbg.value(metadata i32 undef, metadata !13862, metadata !DIExpression()) #23, !dbg !14870
  call void @llvm.dbg.value(metadata i32 undef, metadata !13855, metadata !DIExpression()) #23, !dbg !14866
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14871
  br i1 %5, label %7, label %6, !dbg !14872

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.255, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 148) #24, !dbg !14873
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.257, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14873
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 148) #24, !dbg !14873
  unreachable, !dbg !14873

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13861, metadata !DIExpression()) #23, !dbg !14870
  call void @llvm.dbg.value(metadata i32 undef, metadata !13855, metadata !DIExpression()) #23, !dbg !14866
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14874
  call void @llvm.dbg.value(metadata i32 undef, metadata !14859, metadata !DIExpression()), !dbg !14865
  call void @llvm.dbg.value(metadata i32 undef, metadata !14857, metadata !DIExpression()), !dbg !14865
  %8 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !14875
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %8, i32 0, i32 3, !dbg !14876
  %10 = load i8, i8* %9, align 1, !dbg !14876
  %11 = and i8 %10, 40, !dbg !14877
  %12 = icmp eq i8 %11, 0, !dbg !14877
  call void @llvm.dbg.value(metadata i1 %12, metadata !14860, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14878
  br i1 %12, label %13, label %20, !dbg !14879

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !14880
  %15 = bitcast void (%struct._timeout*)** %14 to %union.anon**, !dbg !14880
  %16 = load %union.anon*, %union.anon** %15, align 8, !dbg !14880
  %17 = icmp eq %union.anon* %16, null, !dbg !14884
  br i1 %17, label %19, label %18, !dbg !14885

18:                                               ; preds = %13
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #25, !dbg !14886
  br label %19, !dbg !14888

19:                                               ; preds = %18, %13
  tail call fastcc void @z_mark_thread_as_started.269(%struct.k_thread* noundef nonnull %3) #25, !dbg !14889
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #25, !dbg !14890
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #25, !dbg !14891
  br label %20, !dbg !14892

20:                                               ; preds = %19, %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !13883, metadata !DIExpression()) #23, !dbg !14893
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13888, metadata !DIExpression()) #23, !dbg !14893
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14895
  br i1 %21, label %23, label %22, !dbg !14896

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.258, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 194) #24, !dbg !14897
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.259, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14897
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 194) #24, !dbg !14897
  unreachable, !dbg !14897

23:                                               ; preds = %20
  %24 = extractvalue { i32, i32 } %4, 0, !dbg !14868
  call void @llvm.dbg.value(metadata i32 %24, metadata !13861, metadata !DIExpression()) #23, !dbg !14870
  call void @llvm.dbg.value(metadata i32 %24, metadata !13855, metadata !DIExpression()) #23, !dbg !14866
  call void @llvm.dbg.value(metadata i32 %24, metadata !14859, metadata !DIExpression()), !dbg !14865
  call void @llvm.dbg.value(metadata i32 undef, metadata !13883, metadata !DIExpression()) #23, !dbg !14893
  call void @llvm.dbg.value(metadata i32 undef, metadata !13897, metadata !DIExpression()) #23, !dbg !14898
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !14900, !srcloc !13903
  call void @llvm.dbg.value(metadata i32 1, metadata !14857, metadata !DIExpression()), !dbg !14865
  call void @llvm.dbg.value(metadata i32 undef, metadata !14857, metadata !DIExpression()), !dbg !14865
  ret void, !dbg !14901
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14902 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14904, metadata !DIExpression()), !dbg !14905
  %2 = tail call fastcc %union.anon* @pended_on_thread(%struct.k_thread* noundef %0) #25, !dbg !14906
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14907
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #25, !dbg !14908
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14909
  store %union.anon* null, %union.anon** %3, align 8, !dbg !14910
  ret void, !dbg !14911
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %union.anon* @pended_on_thread(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #1 !dbg !14912 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14916, metadata !DIExpression()), !dbg !14917
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14918
  %3 = load %union.anon*, %union.anon** %2, align 8, !dbg !14918
  %4 = icmp eq %union.anon* %3, null, !dbg !14918
  br i1 %4, label %5, label %6, !dbg !14921

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.261, i32 0, i32 0), i32 noundef 726) #24, !dbg !14922
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.261, i32 0, i32 0), i32 noundef 726) #24, !dbg !14922
  unreachable, !dbg !14922

6:                                                ; preds = %1
  ret %union.anon* %3, !dbg !14924
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !14925 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14927, metadata !DIExpression()), !dbg !14928
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14929
  %3 = load i8, i8* %2, align 1, !dbg !14930
  %4 = and i8 %3, -3, !dbg !14930
  store i8 %4, i8* %2, align 1, !dbg !14930
  ret void, !dbg !14931
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14932 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14934, metadata !DIExpression()), !dbg !14935
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !14936
  br i1 %2, label %3, label %7, !dbg !14938

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14041, metadata !DIExpression()) #23, !dbg !14939
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14942
  %5 = load i8, i8* %4, align 1, !dbg !14943
  %6 = and i8 %5, 127, !dbg !14943
  store i8 %6, i8* %4, align 1, !dbg !14943
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14049, metadata !DIExpression()) #23, !dbg !14944
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !14946
  br label %7, !dbg !14947

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14948
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !14949
  %10 = zext i1 %9 to i32, !dbg !14949
  tail call fastcc void @update_cache(i32 noundef %10) #25, !dbg !14950
  ret void, !dbg !14951
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !14952 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14954, metadata !DIExpression()), !dbg !14955
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14956
  %3 = load i8, i8* %2, align 1, !dbg !14957
  %4 = or i8 %3, 2, !dbg !14957
  store i8 %4, i8* %2, align 1, !dbg !14957
  ret void, !dbg !14958
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* noundef %0) local_unnamed_addr #22 !dbg !14959 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14961, metadata !DIExpression()), !dbg !14965
  call void @llvm.dbg.value(metadata i32 0, metadata !14962, metadata !DIExpression()), !dbg !14966
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13849, metadata !DIExpression()) #23, !dbg !14967
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14969, !srcloc !13864
  call void @llvm.dbg.value(metadata i32 undef, metadata !13861, metadata !DIExpression()) #23, !dbg !14971
  call void @llvm.dbg.value(metadata i32 undef, metadata !13862, metadata !DIExpression()) #23, !dbg !14971
  call void @llvm.dbg.value(metadata i32 undef, metadata !13855, metadata !DIExpression()) #23, !dbg !14967
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14972
  br i1 %3, label %5, label %4, !dbg !14973

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.255, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 148) #24, !dbg !14974
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.257, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14974
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 148) #24, !dbg !14974
  unreachable, !dbg !14974

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13861, metadata !DIExpression()) #23, !dbg !14971
  call void @llvm.dbg.value(metadata i32 undef, metadata !13855, metadata !DIExpression()) #23, !dbg !14967
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14975
  call void @llvm.dbg.value(metadata i32 undef, metadata !14964, metadata !DIExpression()), !dbg !14966
  call void @llvm.dbg.value(metadata i32 undef, metadata !14962, metadata !DIExpression()), !dbg !14966
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !14976
  call void @llvm.dbg.value(metadata i32 undef, metadata !13883, metadata !DIExpression()) #23, !dbg !14979
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13888, metadata !DIExpression()) #23, !dbg !14979
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14981
  br i1 %6, label %8, label %7, !dbg !14982

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.258, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 194) #24, !dbg !14983
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.259, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !14983
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 194) #24, !dbg !14983
  unreachable, !dbg !14983

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14969
  call void @llvm.dbg.value(metadata i32 %9, metadata !13861, metadata !DIExpression()) #23, !dbg !14971
  call void @llvm.dbg.value(metadata i32 %9, metadata !13855, metadata !DIExpression()) #23, !dbg !14967
  call void @llvm.dbg.value(metadata i32 %9, metadata !14964, metadata !DIExpression()), !dbg !14966
  call void @llvm.dbg.value(metadata i32 undef, metadata !13883, metadata !DIExpression()) #23, !dbg !14979
  call void @llvm.dbg.value(metadata i32 undef, metadata !13897, metadata !DIExpression()) #23, !dbg !14984
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14986, !srcloc !13903
  call void @llvm.dbg.value(metadata i32 1, metadata !14962, metadata !DIExpression()), !dbg !14966
  call void @llvm.dbg.value(metadata i32 undef, metadata !14962, metadata !DIExpression()), !dbg !14966
  ret void, !dbg !14987
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14988 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14994, metadata !DIExpression()), !dbg !14999
  call void @llvm.dbg.value(metadata i32 %0, metadata !14992, metadata !DIExpression()), !dbg !14999
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !14993, metadata !DIExpression()), !dbg !14999
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15000
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #25, !dbg !15001
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15002
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15003
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #25, !dbg !15004
  call void @llvm.dbg.value(metadata i32 %6, metadata !14995, metadata !DIExpression()), !dbg !14999
  call void @llvm.dbg.value(metadata i32 0, metadata !14996, metadata !DIExpression()), !dbg !15005
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13849, metadata !DIExpression()) #23, !dbg !15006
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15008, !srcloc !13864
  call void @llvm.dbg.value(metadata i32 undef, metadata !13861, metadata !DIExpression()) #23, !dbg !15010
  call void @llvm.dbg.value(metadata i32 undef, metadata !13862, metadata !DIExpression()) #23, !dbg !15010
  call void @llvm.dbg.value(metadata i32 undef, metadata !13855, metadata !DIExpression()) #23, !dbg !15006
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15011
  br i1 %8, label %10, label %9, !dbg !15012

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.255, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 148) #24, !dbg !15013
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.257, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15013
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 148) #24, !dbg !15013
  unreachable, !dbg !15013

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !13861, metadata !DIExpression()) #23, !dbg !15010
  call void @llvm.dbg.value(metadata i32 undef, metadata !13855, metadata !DIExpression()) #23, !dbg !15006
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15014
  call void @llvm.dbg.value(metadata i32 undef, metadata !14998, metadata !DIExpression()), !dbg !15005
  call void @llvm.dbg.value(metadata i32 undef, metadata !14996, metadata !DIExpression()), !dbg !15005
  %11 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15015
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15019
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !15020
  br i1 %13, label %14, label %15, !dbg !15021

14:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15022
  br label %15, !dbg !15024

15:                                               ; preds = %10, %14
  call void @llvm.dbg.value(metadata i32 undef, metadata !13883, metadata !DIExpression()) #23, !dbg !15025
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13888, metadata !DIExpression()) #23, !dbg !15025
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15027
  br i1 %16, label %18, label %17, !dbg !15028

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.258, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 194) #24, !dbg !15029
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.259, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15029
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 194) #24, !dbg !15029
  unreachable, !dbg !15029

18:                                               ; preds = %15
  %19 = extractvalue { i32, i32 } %7, 0, !dbg !15008
  call void @llvm.dbg.value(metadata i32 %19, metadata !13861, metadata !DIExpression()) #23, !dbg !15010
  call void @llvm.dbg.value(metadata i32 %19, metadata !13855, metadata !DIExpression()) #23, !dbg !15006
  call void @llvm.dbg.value(metadata i32 %19, metadata !14998, metadata !DIExpression()), !dbg !15005
  call void @llvm.dbg.value(metadata i32 undef, metadata !13883, metadata !DIExpression()) #23, !dbg !15025
  call void @llvm.dbg.value(metadata i32 undef, metadata !13897, metadata !DIExpression()) #23, !dbg !15030
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #23, !dbg !15032, !srcloc !13903
  call void @llvm.dbg.value(metadata i32 1, metadata !14996, metadata !DIExpression()), !dbg !15005
  call void @llvm.dbg.value(metadata i32 undef, metadata !14996, metadata !DIExpression()), !dbg !15005
  ret i32 %6, !dbg !15033
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !15034 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15039, metadata !DIExpression()), !dbg !15042
  call void @llvm.dbg.value(metadata i64 undef, metadata !15041, metadata !DIExpression()), !dbg !15042
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15038, metadata !DIExpression()), !dbg !15042
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !15040, metadata !DIExpression()), !dbg !15042
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15043
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15044
  %6 = icmp eq %struct.k_spinlock* %0, @sched_spinlock, !dbg !15045
  br i1 %6, label %7, label %8, !dbg !15048

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3.275, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.261, i32 0, i32 0), i32 noundef 846) #24, !dbg !15049
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.261, i32 0, i32 0), i32 noundef 846) #24, !dbg !15049
  unreachable, !dbg !15049

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13849, metadata !DIExpression()) #23, !dbg !15051
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15053, !srcloc !13864
  call void @llvm.dbg.value(metadata i32 undef, metadata !13861, metadata !DIExpression()) #23, !dbg !15055
  call void @llvm.dbg.value(metadata i32 undef, metadata !13862, metadata !DIExpression()) #23, !dbg !15055
  call void @llvm.dbg.value(metadata i32 undef, metadata !13855, metadata !DIExpression()) #23, !dbg !15051
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15056
  br i1 %10, label %12, label %11, !dbg !15057

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.255, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 148) #24, !dbg !15058
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.257, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15058
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 148) #24, !dbg !15058
  unreachable, !dbg !15058

12:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !13861, metadata !DIExpression()) #23, !dbg !15055
  call void @llvm.dbg.value(metadata i32 undef, metadata !13855, metadata !DIExpression()) #23, !dbg !15051
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15059
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15060
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %13, %union.anon* noundef %2, [1 x i64] %3) #25, !dbg !15061
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14536, metadata !DIExpression()) #23, !dbg !15062
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #24, !dbg !15064
  br i1 %14, label %16, label %15, !dbg !15065

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.258, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 225) #24, !dbg !15066
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.259, i32 0, i32 0), %struct.k_spinlock* noundef %0) #24, !dbg !15066
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 225) #24, !dbg !15066
  unreachable, !dbg !15066

16:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !14527, metadata !DIExpression()) #23, !dbg !15067
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14532, metadata !DIExpression()) #23, !dbg !15067
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14536, metadata !DIExpression()) #23, !dbg !15069
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15071
  br i1 %17, label %19, label %18, !dbg !15072

18:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.258, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 225) #24, !dbg !15073
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.259, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15073
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 225) #24, !dbg !15073
  unreachable, !dbg !15073

19:                                               ; preds = %16
  %20 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %20, metadata !14527, metadata !DIExpression()) #23, !dbg !15067
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %20) #24, !dbg !15074
  ret i32 %21, !dbg !15075
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15076 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15080, metadata !DIExpression()), !dbg !15085
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15081, metadata !DIExpression()), !dbg !15085
  call void @llvm.dbg.value(metadata i32 0, metadata !15082, metadata !DIExpression()), !dbg !15086
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13849, metadata !DIExpression()) #23, !dbg !15087
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15089, !srcloc !13864
  call void @llvm.dbg.value(metadata i32 undef, metadata !13861, metadata !DIExpression()) #23, !dbg !15091
  call void @llvm.dbg.value(metadata i32 undef, metadata !13862, metadata !DIExpression()) #23, !dbg !15091
  call void @llvm.dbg.value(metadata i32 undef, metadata !13855, metadata !DIExpression()) #23, !dbg !15087
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15092
  br i1 %3, label %5, label %4, !dbg !15093

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.255, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 148) #24, !dbg !15094
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.257, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15094
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 148) #24, !dbg !15094
  unreachable, !dbg !15094

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13861, metadata !DIExpression()) #23, !dbg !15091
  call void @llvm.dbg.value(metadata i32 undef, metadata !13855, metadata !DIExpression()) #23, !dbg !15087
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15095
  call void @llvm.dbg.value(metadata i32 undef, metadata !15084, metadata !DIExpression()), !dbg !15086
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15081, metadata !DIExpression()), !dbg !15085
  call void @llvm.dbg.value(metadata i32 undef, metadata !15082, metadata !DIExpression()), !dbg !15086
  %6 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #25, !dbg !15096
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15081, metadata !DIExpression()), !dbg !15085
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15099
  br i1 %8, label %10, label %9, !dbg !15101

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #25, !dbg !15102
  br label %10, !dbg !15104

10:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !13883, metadata !DIExpression()) #23, !dbg !15105
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13888, metadata !DIExpression()) #23, !dbg !15105
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15107
  br i1 %11, label %13, label %12, !dbg !15108

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.258, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 194) #24, !dbg !15109
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.259, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15109
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 194) #24, !dbg !15109
  unreachable, !dbg !15109

13:                                               ; preds = %10
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !15089
  call void @llvm.dbg.value(metadata i32 %14, metadata !13861, metadata !DIExpression()) #23, !dbg !15091
  call void @llvm.dbg.value(metadata i32 %14, metadata !13855, metadata !DIExpression()) #23, !dbg !15087
  call void @llvm.dbg.value(metadata i32 %14, metadata !15084, metadata !DIExpression()), !dbg !15086
  call void @llvm.dbg.value(metadata i32 undef, metadata !13883, metadata !DIExpression()) #23, !dbg !15105
  call void @llvm.dbg.value(metadata i32 undef, metadata !13897, metadata !DIExpression()) #23, !dbg !15110
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !15112, !srcloc !13903
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15081, metadata !DIExpression()), !dbg !15085
  call void @llvm.dbg.value(metadata i32 undef, metadata !15082, metadata !DIExpression()), !dbg !15086
  ret %struct.k_thread* %7, !dbg !15113
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15114 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15116, metadata !DIExpression()), !dbg !15121
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15117, metadata !DIExpression()), !dbg !15121
  call void @llvm.dbg.value(metadata i32 0, metadata !15118, metadata !DIExpression()), !dbg !15122
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13849, metadata !DIExpression()) #23, !dbg !15123
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15125, !srcloc !13864
  call void @llvm.dbg.value(metadata i32 undef, metadata !13861, metadata !DIExpression()) #23, !dbg !15127
  call void @llvm.dbg.value(metadata i32 undef, metadata !13862, metadata !DIExpression()) #23, !dbg !15127
  call void @llvm.dbg.value(metadata i32 undef, metadata !13855, metadata !DIExpression()) #23, !dbg !15123
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15128
  br i1 %3, label %5, label %4, !dbg !15129

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.255, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 148) #24, !dbg !15130
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.257, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15130
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 148) #24, !dbg !15130
  unreachable, !dbg !15130

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13861, metadata !DIExpression()) #23, !dbg !15127
  call void @llvm.dbg.value(metadata i32 undef, metadata !13855, metadata !DIExpression()) #23, !dbg !15123
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15131
  call void @llvm.dbg.value(metadata i32 undef, metadata !15120, metadata !DIExpression()), !dbg !15122
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15117, metadata !DIExpression()), !dbg !15121
  call void @llvm.dbg.value(metadata i32 undef, metadata !15118, metadata !DIExpression()), !dbg !15122
  %6 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #25, !dbg !15132
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15117, metadata !DIExpression()), !dbg !15121
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15135
  br i1 %8, label %11, label %9, !dbg !15137

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #25, !dbg !15138
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %7) #25, !dbg !15140
  br label %11, !dbg !15141

11:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !13883, metadata !DIExpression()) #23, !dbg !15142
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13888, metadata !DIExpression()) #23, !dbg !15142
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15144
  br i1 %12, label %14, label %13, !dbg !15145

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.258, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 194) #24, !dbg !15146
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.259, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15146
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 194) #24, !dbg !15146
  unreachable, !dbg !15146

14:                                               ; preds = %11
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !15125
  call void @llvm.dbg.value(metadata i32 %15, metadata !13861, metadata !DIExpression()) #23, !dbg !15127
  call void @llvm.dbg.value(metadata i32 %15, metadata !13855, metadata !DIExpression()) #23, !dbg !15123
  call void @llvm.dbg.value(metadata i32 %15, metadata !15120, metadata !DIExpression()), !dbg !15122
  call void @llvm.dbg.value(metadata i32 undef, metadata !13883, metadata !DIExpression()) #23, !dbg !15142
  call void @llvm.dbg.value(metadata i32 undef, metadata !13897, metadata !DIExpression()) #23, !dbg !15147
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !15149, !srcloc !13903
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15117, metadata !DIExpression()), !dbg !15121
  call void @llvm.dbg.value(metadata i32 undef, metadata !15118, metadata !DIExpression()), !dbg !15122
  ret %struct.k_thread* %7, !dbg !15150
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15151 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15153, metadata !DIExpression()), !dbg !15154
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14961, metadata !DIExpression()) #23, !dbg !15155
  call void @llvm.dbg.value(metadata i32 0, metadata !14962, metadata !DIExpression()) #23, !dbg !15157
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13849, metadata !DIExpression()) #23, !dbg !15158
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15160, !srcloc !13864
  call void @llvm.dbg.value(metadata i32 undef, metadata !13861, metadata !DIExpression()) #23, !dbg !15162
  call void @llvm.dbg.value(metadata i32 undef, metadata !13862, metadata !DIExpression()) #23, !dbg !15162
  call void @llvm.dbg.value(metadata i32 undef, metadata !13855, metadata !DIExpression()) #23, !dbg !15158
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15163
  br i1 %3, label %5, label %4, !dbg !15164

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.255, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 148) #24, !dbg !15165
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.257, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15165
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 148) #24, !dbg !15165
  unreachable, !dbg !15165

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13861, metadata !DIExpression()) #23, !dbg !15162
  call void @llvm.dbg.value(metadata i32 undef, metadata !13855, metadata !DIExpression()) #23, !dbg !15158
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15166
  call void @llvm.dbg.value(metadata i32 undef, metadata !14964, metadata !DIExpression()) #23, !dbg !15157
  call void @llvm.dbg.value(metadata i32 undef, metadata !14962, metadata !DIExpression()) #23, !dbg !15157
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !15167
  call void @llvm.dbg.value(metadata i32 undef, metadata !13883, metadata !DIExpression()) #23, !dbg !15168
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13888, metadata !DIExpression()) #23, !dbg !15168
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15170
  br i1 %6, label %8, label %7, !dbg !15171

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.258, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 194) #24, !dbg !15172
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.259, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15172
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 194) #24, !dbg !15172
  unreachable, !dbg !15172

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15160
  call void @llvm.dbg.value(metadata i32 %9, metadata !13861, metadata !DIExpression()) #23, !dbg !15162
  call void @llvm.dbg.value(metadata i32 %9, metadata !13855, metadata !DIExpression()) #23, !dbg !15158
  call void @llvm.dbg.value(metadata i32 %9, metadata !14964, metadata !DIExpression()) #23, !dbg !15157
  call void @llvm.dbg.value(metadata i32 undef, metadata !13883, metadata !DIExpression()) #23, !dbg !15168
  call void @llvm.dbg.value(metadata i32 undef, metadata !13897, metadata !DIExpression()) #23, !dbg !15173
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15175, !srcloc !13903
  call void @llvm.dbg.value(metadata i32 1, metadata !14962, metadata !DIExpression()) #23, !dbg !15157
  call void @llvm.dbg.value(metadata i32 undef, metadata !14962, metadata !DIExpression()) #23, !dbg !15157
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !15176
  ret void, !dbg !15177
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15178 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15180, metadata !DIExpression()), !dbg !15186
  call void @llvm.dbg.value(metadata i32 %1, metadata !15181, metadata !DIExpression()), !dbg !15186
  call void @llvm.dbg.value(metadata i8 0, metadata !15182, metadata !DIExpression()), !dbg !15186
  call void @llvm.dbg.value(metadata i32 0, metadata !15183, metadata !DIExpression()), !dbg !15187
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13849, metadata !DIExpression()) #23, !dbg !15188
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15190, !srcloc !13864
  call void @llvm.dbg.value(metadata i32 undef, metadata !13861, metadata !DIExpression()) #23, !dbg !15192
  call void @llvm.dbg.value(metadata i32 undef, metadata !13862, metadata !DIExpression()) #23, !dbg !15192
  call void @llvm.dbg.value(metadata i32 undef, metadata !13855, metadata !DIExpression()) #23, !dbg !15188
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15193
  br i1 %4, label %6, label %5, !dbg !15194

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.255, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 148) #24, !dbg !15195
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.257, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15195
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 148) #24, !dbg !15195
  unreachable, !dbg !15195

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !13861, metadata !DIExpression()) #23, !dbg !15192
  call void @llvm.dbg.value(metadata i32 undef, metadata !13855, metadata !DIExpression()) #23, !dbg !15188
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15196
  call void @llvm.dbg.value(metadata i32 undef, metadata !15185, metadata !DIExpression()), !dbg !15187
  call void @llvm.dbg.value(metadata i8 poison, metadata !15182, metadata !DIExpression()), !dbg !15186
  call void @llvm.dbg.value(metadata i32 undef, metadata !15183, metadata !DIExpression()), !dbg !15187
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #25, !dbg !15197
  call void @llvm.dbg.value(metadata i1 %9, metadata !15182, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15186
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %11 = bitcast %union.anon.2* %10 to i8*
  %12 = trunc i32 %1 to i8
  br i1 %9, label %13, label %34, !dbg !15200

13:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14041, metadata !DIExpression()) #23, !dbg !15201
  %14 = load i8, i8* %7, align 1, !dbg !15207
  %15 = and i8 %14, 127, !dbg !15207
  store i8 %15, i8* %7, align 1, !dbg !15207
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14049, metadata !DIExpression()) #23, !dbg !15208
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !15210
  store i8 %12, i8* %11, align 2, !dbg !15211
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14058, metadata !DIExpression()) #23, !dbg !15212
  %16 = load i8, i8* %7, align 1, !dbg !15214
  %17 = or i8 %16, -128, !dbg !15214
  store i8 %17, i8* %7, align 1, !dbg !15214
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14065, metadata !DIExpression()) #23, !dbg !15215
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14072, metadata !DIExpression()) #23, !dbg !15217
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14078, metadata !DIExpression()) #23, !dbg !15217
  %18 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #24, !dbg !15219
  br i1 %18, label %19, label %20, !dbg !15220

19:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.261, i32 0, i32 0), i32 noundef 186) #24, !dbg !15221
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.261, i32 0, i32 0), i32 noundef 186) #24, !dbg !15221
  unreachable, !dbg !15221

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !15222
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !14079, metadata !DIExpression()) #23, !dbg !15217
  %22 = icmp eq %struct._dnode* %21, null, !dbg !15223
  br i1 %22, label %32, label %23, !dbg !15222

23:                                               ; preds = %20, %29
  %24 = phi %struct._dnode* [ %30, %29 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14079, metadata !DIExpression()) #23, !dbg !15217
  %25 = bitcast %struct._dnode* %24 to %struct.k_thread*, !dbg !15224
  call void @llvm.dbg.value(metadata %struct.k_thread* %25, metadata !14079, metadata !DIExpression()) #23, !dbg !15217
  %26 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %25) #24, !dbg !15225
  %27 = icmp sgt i32 %26, 0, !dbg !15226
  br i1 %27, label %28, label %29, !dbg !15227

28:                                               ; preds = %23
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %24, %struct._dnode* noundef %8) #24, !dbg !15228
  br label %33, !dbg !15229

29:                                               ; preds = %23
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %24) #24, !dbg !15223
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !14079, metadata !DIExpression()) #23, !dbg !15217
  %31 = icmp eq %struct._dnode* %30, null, !dbg !15223
  br i1 %31, label %32, label %23, !dbg !15222, !llvm.loop !15230

32:                                               ; preds = %29, %20
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %8) #24, !dbg !15232
  br label %33, !dbg !15233

33:                                               ; preds = %28, %32
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !15234
  br label %35, !dbg !15235

34:                                               ; preds = %6
  store i8 %12, i8* %11, align 2, !dbg !15236
  br label %35

35:                                               ; preds = %33, %34
  call void @llvm.dbg.value(metadata i32 undef, metadata !13883, metadata !DIExpression()) #23, !dbg !15238
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13888, metadata !DIExpression()) #23, !dbg !15238
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15240
  br i1 %36, label %38, label %37, !dbg !15241

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.258, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 194) #24, !dbg !15242
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.259, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15242
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 194) #24, !dbg !15242
  unreachable, !dbg !15242

38:                                               ; preds = %35
  %39 = extractvalue { i32, i32 } %3, 0, !dbg !15190
  call void @llvm.dbg.value(metadata i32 %39, metadata !13861, metadata !DIExpression()) #23, !dbg !15192
  call void @llvm.dbg.value(metadata i32 %39, metadata !13855, metadata !DIExpression()) #23, !dbg !15188
  call void @llvm.dbg.value(metadata i32 %39, metadata !15185, metadata !DIExpression()), !dbg !15187
  call void @llvm.dbg.value(metadata i32 undef, metadata !13883, metadata !DIExpression()) #23, !dbg !15238
  call void @llvm.dbg.value(metadata i32 undef, metadata !13897, metadata !DIExpression()) #23, !dbg !15243
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %39) #23, !dbg !15245, !srcloc !13903
  call void @llvm.dbg.value(metadata i8 poison, metadata !15182, metadata !DIExpression()), !dbg !15186
  call void @llvm.dbg.value(metadata i32 undef, metadata !15183, metadata !DIExpression()), !dbg !15187
  ret i1 %9, !dbg !15246
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15247 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15251, metadata !DIExpression()), !dbg !15254
  call void @llvm.dbg.value(metadata i32 %1, metadata !15252, metadata !DIExpression()), !dbg !15254
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #25, !dbg !15255
  call void @llvm.dbg.value(metadata i1 %3, metadata !15253, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15254
  br i1 %3, label %4, label %12, !dbg !15256

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15258
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15259
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15259
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15259
  %9 = load i8, i8* %8, align 1, !dbg !15259
  %10 = icmp eq i8 %9, 0, !dbg !15260
  br i1 %10, label %11, label %12, !dbg !15261

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !15262
  br label %12, !dbg !15264

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !15265
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !15266 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15268, metadata !DIExpression()), !dbg !15271
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13849, metadata !DIExpression()) #23, !dbg !15272
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15274, !srcloc !13864
  call void @llvm.dbg.value(metadata i32 undef, metadata !13861, metadata !DIExpression()) #23, !dbg !15276
  call void @llvm.dbg.value(metadata i32 undef, metadata !13862, metadata !DIExpression()) #23, !dbg !15276
  call void @llvm.dbg.value(metadata i32 undef, metadata !13855, metadata !DIExpression()) #23, !dbg !15272
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15277
  br i1 %2, label %4, label %3, !dbg !15278

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.255, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 148) #24, !dbg !15279
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.257, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15279
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 148) #24, !dbg !15279
  unreachable, !dbg !15279

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !13861, metadata !DIExpression()) #23, !dbg !15276
  call void @llvm.dbg.value(metadata i32 undef, metadata !13855, metadata !DIExpression()) #23, !dbg !15272
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15280
  call void @llvm.dbg.value(metadata i32 undef, metadata !15270, metadata !DIExpression()), !dbg !15271
  call void @llvm.dbg.value(metadata i32 undef, metadata !15268, metadata !DIExpression()), !dbg !15271
  tail call fastcc void @z_sched_lock() #25, !dbg !15281
  call void @llvm.dbg.value(metadata i32 undef, metadata !13883, metadata !DIExpression()) #23, !dbg !15284
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13888, metadata !DIExpression()) #23, !dbg !15284
  %5 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15286
  br i1 %5, label %7, label %6, !dbg !15287

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.258, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 194) #24, !dbg !15288
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.259, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15288
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 194) #24, !dbg !15288
  unreachable, !dbg !15288

7:                                                ; preds = %4
  %8 = extractvalue { i32, i32 } %1, 0, !dbg !15274
  call void @llvm.dbg.value(metadata i32 %8, metadata !13861, metadata !DIExpression()) #23, !dbg !15276
  call void @llvm.dbg.value(metadata i32 %8, metadata !13855, metadata !DIExpression()) #23, !dbg !15272
  call void @llvm.dbg.value(metadata i32 %8, metadata !15270, metadata !DIExpression()), !dbg !15271
  call void @llvm.dbg.value(metadata i32 undef, metadata !13883, metadata !DIExpression()) #23, !dbg !15284
  call void @llvm.dbg.value(metadata i32 undef, metadata !13897, metadata !DIExpression()) #23, !dbg !15289
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !15291, !srcloc !13903
  call void @llvm.dbg.value(metadata i32 1, metadata !15268, metadata !DIExpression()), !dbg !15271
  call void @llvm.dbg.value(metadata i32 undef, metadata !15268, metadata !DIExpression()), !dbg !15271
  ret void, !dbg !15292
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !15293 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15294, !srcloc !14583
  call void @llvm.dbg.value(metadata i32 %1, metadata !14579, metadata !DIExpression()) #23, !dbg !15299
  %2 = icmp eq i32 %1, 0, !dbg !15300
  br i1 %2, label %4, label %3, !dbg !15301

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.278, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.279, i32 0, i32 0), i32 noundef 253) #24, !dbg !15302
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.263, i32 0, i32 0)) #24, !dbg !15302
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.279, i32 0, i32 0), i32 noundef 253) #24, !dbg !15302
  unreachable, !dbg !15302

4:                                                ; preds = %0
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15304
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15304
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15304
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15304
  %9 = load i8, i8* %8, align 1, !dbg !15304
  %10 = icmp eq i8 %9, 1, !dbg !15304
  br i1 %10, label %11, label %12, !dbg !15307

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.22.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.279, i32 0, i32 0), i32 noundef 254) #24, !dbg !15308
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.263, i32 0, i32 0)) #24, !dbg !15308
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.279, i32 0, i32 0), i32 noundef 254) #24, !dbg !15308
  unreachable, !dbg !15308

12:                                               ; preds = %4
  %13 = add i8 %9, -1, !dbg !15310
  store i8 %13, i8* %8, align 1, !dbg !15310
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15311, !srcloc !15313
  ret void, !dbg !15314
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !15315 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15317, metadata !DIExpression()), !dbg !15320
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13849, metadata !DIExpression()) #23, !dbg !15321
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15323, !srcloc !13864
  call void @llvm.dbg.value(metadata i32 undef, metadata !13861, metadata !DIExpression()) #23, !dbg !15325
  call void @llvm.dbg.value(metadata i32 undef, metadata !13862, metadata !DIExpression()) #23, !dbg !15325
  call void @llvm.dbg.value(metadata i32 undef, metadata !13855, metadata !DIExpression()) #23, !dbg !15321
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15326
  br i1 %2, label %4, label %3, !dbg !15327

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.255, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 148) #24, !dbg !15328
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.257, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15328
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 148) #24, !dbg !15328
  unreachable, !dbg !15328

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !13861, metadata !DIExpression()) #23, !dbg !15325
  call void @llvm.dbg.value(metadata i32 undef, metadata !13855, metadata !DIExpression()) #23, !dbg !15321
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15329
  call void @llvm.dbg.value(metadata i32 undef, metadata !15319, metadata !DIExpression()), !dbg !15320
  call void @llvm.dbg.value(metadata i32 undef, metadata !15317, metadata !DIExpression()), !dbg !15320
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15330
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15330
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15330
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15330
  %9 = load i8, i8* %8, align 1, !dbg !15330
  %10 = icmp eq i8 %9, 0, !dbg !15330
  br i1 %10, label %11, label %12, !dbg !15335

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.283, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.261, i32 0, i32 0), i32 noundef 999) #24, !dbg !15336
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.263, i32 0, i32 0)) #24, !dbg !15336
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.261, i32 0, i32 0), i32 noundef 999) #24, !dbg !15336
  unreachable, !dbg !15336

12:                                               ; preds = %4
  %13 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15338, !srcloc !14583
  call void @llvm.dbg.value(metadata i32 %13, metadata !14579, metadata !DIExpression()) #23, !dbg !15343
  %14 = icmp eq i32 %13, 0, !dbg !15344
  br i1 %14, label %16, label %15, !dbg !15345

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.278, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.261, i32 0, i32 0), i32 noundef 1000) #24, !dbg !15346
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.263, i32 0, i32 0)) #24, !dbg !15346
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.261, i32 0, i32 0), i32 noundef 1000) #24, !dbg !15346
  unreachable, !dbg !15346

16:                                               ; preds = %12
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15348
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %17, i32 0, i32 0, i32 4, !dbg !15349
  %19 = bitcast %union.anon.2* %18 to %struct.device_state*, !dbg !15349
  %20 = getelementptr inbounds %struct.device_state, %struct.device_state* %19, i32 0, i32 1, !dbg !15349
  %21 = load i8, i8* %20, align 1, !dbg !15350
  %22 = add i8 %21, 1, !dbg !15350
  store i8 %22, i8* %20, align 1, !dbg !15350
  tail call fastcc void @update_cache(i32 noundef 0) #25, !dbg !15351
  call void @llvm.dbg.value(metadata i32 undef, metadata !13883, metadata !DIExpression()) #23, !dbg !15352
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13888, metadata !DIExpression()) #23, !dbg !15352
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15354
  br i1 %23, label %25, label %24, !dbg !15355

24:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.258, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 194) #24, !dbg !15356
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.259, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15356
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 194) #24, !dbg !15356
  unreachable, !dbg !15356

25:                                               ; preds = %16
  %26 = extractvalue { i32, i32 } %1, 0, !dbg !15323
  call void @llvm.dbg.value(metadata i32 %26, metadata !13861, metadata !DIExpression()) #23, !dbg !15325
  call void @llvm.dbg.value(metadata i32 %26, metadata !13855, metadata !DIExpression()) #23, !dbg !15321
  call void @llvm.dbg.value(metadata i32 %26, metadata !15319, metadata !DIExpression()), !dbg !15320
  call void @llvm.dbg.value(metadata i32 undef, metadata !13883, metadata !DIExpression()) #23, !dbg !15352
  call void @llvm.dbg.value(metadata i32 undef, metadata !13897, metadata !DIExpression()) #23, !dbg !15357
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %26) #23, !dbg !15359, !srcloc !13903
  call void @llvm.dbg.value(metadata i32 1, metadata !15317, metadata !DIExpression()), !dbg !15320
  call void @llvm.dbg.value(metadata i32 undef, metadata !15317, metadata !DIExpression()), !dbg !15320
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !15360
  ret void, !dbg !15361
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #10 !dbg !15362 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15363
  ret %struct.k_thread* %1, !dbg !15364
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #10 !dbg !15365 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !15369, metadata !DIExpression()), !dbg !15374
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !15370, metadata !DIExpression()), !dbg !15374
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !15375
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15371, metadata !DIExpression()), !dbg !15374
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !15376
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15372, metadata !DIExpression()), !dbg !15374
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #25, !dbg !15377
  call void @llvm.dbg.value(metadata i32 %5, metadata !15373, metadata !DIExpression()), !dbg !15374
  %6 = icmp sgt i32 %5, 0, !dbg !15378
  br i1 %6, label %17, label %7, !dbg !15380

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !15381
  br i1 %8, label %17, label %9, !dbg !15383

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !15384
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !15384
  %12 = load i32, i32* %11, align 8, !dbg !15384
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !15386
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !15386
  %15 = load i32, i32* %14, align 8, !dbg !15386
  %16 = icmp ult i32 %12, %15, !dbg !15387
  br label %17, !dbg !15388

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !15389
  ret i1 %18, !dbg !15390
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15391 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15408, metadata !DIExpression()), !dbg !15423
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15409, metadata !DIExpression()), !dbg !15423
  %4 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #25, !dbg !15424
  br i1 %4, label %5, label %6, !dbg !15427

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.261, i32 0, i32 0), i32 noundef 1179) #24, !dbg !15428
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.261, i32 0, i32 0), i32 noundef 1179) #24, !dbg !15428
  unreachable, !dbg !15428

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !15430
  %8 = load i32, i32* %7, align 4, !dbg !15431
  %9 = add nsw i32 %8, 1, !dbg !15431
  store i32 %9, i32* %7, align 4, !dbg !15431
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !15432
  store i32 %8, i32* %10, align 8, !dbg !15433
  %11 = load i32, i32* %7, align 4, !dbg !15434
  %12 = icmp eq i32 %11, 0, !dbg !15435
  br i1 %12, label %13, label %35, !dbg !15436

13:                                               ; preds = %6
  %14 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !15437
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #23, !dbg !15437
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !15411, metadata !DIExpression()), !dbg !15437
  %15 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15437
  %16 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !15437
  %17 = load i32, i32* %16, align 4, !dbg !15437
  %18 = shl i32 %17, 2, !dbg !15437
  %19 = alloca i8, i32 %18, align 8, !dbg !15437
  %20 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !15437
  store i8* %19, i8** %20, align 4, !dbg !15437
  %21 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !15437
  %22 = alloca i8, i32 %17, align 8, !dbg !15437
  store i8* %22, i8** %21, align 4, !dbg !15437
  %23 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !15437
  store i32 -1, i32* %23, align 4, !dbg !15437
  %24 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #24, !dbg !15438
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !15420, metadata !DIExpression()), !dbg !15439
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !15410, metadata !DIExpression()), !dbg !15423
  %25 = icmp eq %struct.rbnode* %24, null, !dbg !15440
  br i1 %25, label %26, label %27, !dbg !15437

26:                                               ; preds = %27, %13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #23, !dbg !15440
  br label %35, !dbg !15441

27:                                               ; preds = %13, %27
  %28 = phi %struct.rbnode* [ %33, %27 ], [ %24, %13 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %28, metadata !15410, metadata !DIExpression()), !dbg !15423
  %29 = load i32, i32* %7, align 4, !dbg !15442
  %30 = add nsw i32 %29, 1, !dbg !15442
  store i32 %30, i32* %7, align 4, !dbg !15442
  %31 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %28, i32 2, !dbg !15444
  %32 = bitcast %struct.rbnode* %31 to i32*, !dbg !15444
  store i32 %29, i32* %32, align 8, !dbg !15445
  %33 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #24, !dbg !15438
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !15420, metadata !DIExpression()), !dbg !15439
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !15410, metadata !DIExpression()), !dbg !15423
  %34 = icmp eq %struct.rbnode* %33, null, !dbg !15440
  br i1 %34, label %26, label %27, !dbg !15437, !llvm.loop !15446

35:                                               ; preds = %26, %6
  %36 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15448
  %37 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !15449
  call void @rb_insert(%struct.rbtree* noundef %36, %struct.rbnode* noundef %37) #24, !dbg !15450
  ret void, !dbg !15451
}

; Function Attrs: optsize
declare !dbg !15452 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !15457 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15460 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15462, metadata !DIExpression()), !dbg !15464
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15463, metadata !DIExpression()), !dbg !15464
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #25, !dbg !15465
  br i1 %3, label %4, label %5, !dbg !15468

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.261, i32 0, i32 0), i32 noundef 1200) #24, !dbg !15469
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.261, i32 0, i32 0), i32 noundef 1200) #24, !dbg !15469
  unreachable, !dbg !15469

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15471
  %7 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !15472
  tail call void @rb_remove(%struct.rbtree* noundef %6, %struct.rbnode* noundef %7) #24, !dbg !15473
  %8 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !15474
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !15474
  %10 = icmp eq %struct.rbnode* %9, null, !dbg !15476
  br i1 %10, label %11, label %13, !dbg !15477

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !15478
  store i32 0, i32* %12, align 4, !dbg !15480
  br label %13, !dbg !15481

13:                                               ; preds = %11, %5
  ret void, !dbg !15482
}

; Function Attrs: optsize
declare !dbg !15483 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !15484 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15488, metadata !DIExpression()), !dbg !15491
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15489, metadata !DIExpression()), !dbg !15491
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15492
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #25, !dbg !15493
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !15490, metadata !DIExpression()), !dbg !15491
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15489, metadata !DIExpression()), !dbg !15491
  ret %struct.k_thread* %4, !dbg !15494
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !15495 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !15499, metadata !DIExpression()), !dbg !15500
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #24, !dbg !15501
  ret %struct.rbnode* %2, !dbg !15502
}

; Function Attrs: optsize
declare !dbg !15503 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #16 !dbg !15506 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !15516, metadata !DIExpression()), !dbg !15520
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !15521
  %3 = load i32, i32* %2, align 4, !dbg !15521
  %4 = icmp eq i32 %3, 0, !dbg !15523
  br i1 %4, label %10, label %5, !dbg !15524

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15517, metadata !DIExpression()), !dbg !15520
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !15525, !range !7647
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !15526
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !15518, metadata !DIExpression()), !dbg !15520
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #25, !dbg !15527
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !15519, metadata !DIExpression()), !dbg !15520
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15517, metadata !DIExpression()), !dbg !15520
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !15520
  ret %struct.k_thread* %11, !dbg !15528
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15529 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15533, metadata !DIExpression()), !dbg !15536
  call void @llvm.dbg.value(metadata i32 0, metadata !15534, metadata !DIExpression()), !dbg !15536
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !15537
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15535, metadata !DIExpression()), !dbg !15536
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15538
  br i1 %3, label %8, label %4, !dbg !15539

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !15540
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !15542
  call void @llvm.dbg.value(metadata i32 1, metadata !15534, metadata !DIExpression()), !dbg !15536
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !15537
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15535, metadata !DIExpression()), !dbg !15536
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !15538
  br i1 %7, label %8, label %4, !dbg !15539, !llvm.loop !15543

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !15536
  ret i32 %9, !dbg !15545
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #10 !dbg !15546 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15548, metadata !DIExpression()), !dbg !15549
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !15550
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #25, !dbg !15551
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !15552
  ret %struct.k_thread* %4, !dbg !15553
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #9 !dbg !15554 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !15563, metadata !DIExpression()), !dbg !15564
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !15565
  tail call fastcc void @sys_dlist_init.284(%struct._dnode* noundef nonnull %2) #25, !dbg !15566
  ret void, !dbg !15567
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.284(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !15568 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15572, metadata !DIExpression()), !dbg !15573
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15574
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15575
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15576
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15577
  ret void, !dbg !15578
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !15579 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #25, !dbg !15580
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #25, !dbg !15581
  ret void, !dbg !15582
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !15583 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15588, metadata !DIExpression()), !dbg !15589
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15590
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !15590
  %4 = load i8, i8* %3, align 2, !dbg !15590
  %5 = sext i8 %4 to i32, !dbg !15591
  ret i32 %5, !dbg !15592
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15593 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15597, metadata !DIExpression()), !dbg !15600
  call void @llvm.dbg.value(metadata i32 %1, metadata !15598, metadata !DIExpression()), !dbg !15600
  %3 = add i32 %1, 16, !dbg !15601
  %4 = icmp ult i32 %3, 31, !dbg !15601
  br i1 %4, label %6, label %5, !dbg !15601

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([134 x i8], [134 x i8]* @.str.8.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.261, i32 0, i32 0), i32 noundef 1331) #24, !dbg !15605
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9.288, i32 0, i32 0), i32 noundef %1, i32 noundef 14, i32 noundef -16) #24, !dbg !15605
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.261, i32 0, i32 0), i32 noundef 1331) #24, !dbg !15605
  unreachable, !dbg !15605

6:                                                ; preds = %2
  %7 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15607, !srcloc !14583
  call void @llvm.dbg.value(metadata i32 %7, metadata !14579, metadata !DIExpression()) #23, !dbg !15612
  %8 = icmp eq i32 %7, 0, !dbg !15613
  br i1 %8, label %10, label %9, !dbg !15614

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.278, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.261, i32 0, i32 0), i32 noundef 1332) #24, !dbg !15615
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.263, i32 0, i32 0)) #24, !dbg !15615
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.261, i32 0, i32 0), i32 noundef 1332) #24, !dbg !15615
  unreachable, !dbg !15615

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15599, metadata !DIExpression()), !dbg !15600
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #25, !dbg !15617
  ret void, !dbg !15618
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !15619 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #25, !dbg !15620
  br i1 %1, label %8, label %2, !dbg !15621

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #24, !dbg !15622
  br i1 %3, label %8, label %4, !dbg !15623

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15624
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #25, !dbg !15625
  %7 = xor i1 %6, true, !dbg !15623
  br label %8, !dbg !15623

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !15626
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #10 !dbg !15627 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !15628, !range !6810
  %2 = icmp eq i8 %1, 0, !dbg !15628
  ret i1 %2, !dbg !15629
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !15630 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15633, !srcloc !14583
  call void @llvm.dbg.value(metadata i32 %1, metadata !14579, metadata !DIExpression()) #23, !dbg !15638
  %2 = icmp eq i32 %1, 0, !dbg !15639
  br i1 %2, label %4, label %3, !dbg !15640

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.278, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.261, i32 0, i32 0), i32 noundef 1392) #24, !dbg !15641
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.263, i32 0, i32 0)) #24, !dbg !15641
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.261, i32 0, i32 0), i32 noundef 1392) #24, !dbg !15641
  unreachable, !dbg !15641

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13849, metadata !DIExpression()) #23, !dbg !15643
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15645, !srcloc !13864
  call void @llvm.dbg.value(metadata i32 undef, metadata !13861, metadata !DIExpression()) #23, !dbg !15647
  call void @llvm.dbg.value(metadata i32 undef, metadata !13862, metadata !DIExpression()) #23, !dbg !15647
  call void @llvm.dbg.value(metadata i32 undef, metadata !13855, metadata !DIExpression()) #23, !dbg !15643
  %6 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15648
  br i1 %6, label %8, label %7, !dbg !15649

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.255, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 148) #24, !dbg !15650
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.257, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15650
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 148) #24, !dbg !15650
  unreachable, !dbg !15650

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !13861, metadata !DIExpression()) #23, !dbg !15647
  call void @llvm.dbg.value(metadata i32 undef, metadata !13855, metadata !DIExpression()) #23, !dbg !15643
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15651
  call void @llvm.dbg.value(metadata i32 undef, metadata !15632, metadata !DIExpression()), !dbg !15652
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15653
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14041, metadata !DIExpression()) #23, !dbg !15656
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 3, !dbg !15658
  %11 = load i8, i8* %10, align 1, !dbg !15659
  %12 = and i8 %11, 127, !dbg !15659
  store i8 %12, i8* %10, align 1, !dbg !15659
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14049, metadata !DIExpression()) #23, !dbg !15660
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %9) #24, !dbg !15662
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15663
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14058, metadata !DIExpression()) #23, !dbg !15664
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 3, !dbg !15666
  %15 = load i8, i8* %14, align 1, !dbg !15667
  %16 = or i8 %15, -128, !dbg !15667
  store i8 %16, i8* %14, align 1, !dbg !15667
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14065, metadata !DIExpression()) #23, !dbg !15668
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14072, metadata !DIExpression()) #23, !dbg !15670
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14078, metadata !DIExpression()) #23, !dbg !15670
  %17 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %13) #24, !dbg !15672
  br i1 %17, label %18, label %19, !dbg !15673

18:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.261, i32 0, i32 0), i32 noundef 186) #24, !dbg !15674
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.261, i32 0, i32 0), i32 noundef 186) #24, !dbg !15674
  unreachable, !dbg !15674

19:                                               ; preds = %8
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !15675
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14079, metadata !DIExpression()) #23, !dbg !15670
  %21 = icmp eq %struct._dnode* %20, null, !dbg !15676
  br i1 %21, label %32, label %22, !dbg !15675

22:                                               ; preds = %19, %29
  %23 = phi %struct._dnode* [ %30, %29 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %23, metadata !14079, metadata !DIExpression()) #23, !dbg !15670
  %24 = bitcast %struct._dnode* %23 to %struct.k_thread*, !dbg !15677
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !14079, metadata !DIExpression()) #23, !dbg !15670
  %25 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %13, %struct.k_thread* noundef nonnull %24) #24, !dbg !15678
  %26 = icmp sgt i32 %25, 0, !dbg !15679
  br i1 %26, label %27, label %29, !dbg !15680

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !15681
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %23, %struct._dnode* noundef %28) #24, !dbg !15682
  br label %34, !dbg !15683

29:                                               ; preds = %22
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %23) #24, !dbg !15676
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !14079, metadata !DIExpression()) #23, !dbg !15670
  %31 = icmp eq %struct._dnode* %30, null, !dbg !15676
  br i1 %31, label %32, label %22, !dbg !15675, !llvm.loop !15684

32:                                               ; preds = %29, %19
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !15686
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %33) #24, !dbg !15687
  br label %34, !dbg !15688

34:                                               ; preds = %27, %32
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !15689
  call void @llvm.dbg.value(metadata i32 undef, metadata !14527, metadata !DIExpression()) #23, !dbg !15690
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14532, metadata !DIExpression()) #23, !dbg !15690
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14536, metadata !DIExpression()) #23, !dbg !15692
  %35 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15694
  br i1 %35, label %37, label %36, !dbg !15695

36:                                               ; preds = %34
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.258, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 225) #24, !dbg !15696
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.259, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15696
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 225) #24, !dbg !15696
  unreachable, !dbg !15696

37:                                               ; preds = %34
  %38 = extractvalue { i32, i32 } %5, 0, !dbg !15645
  call void @llvm.dbg.value(metadata i32 %38, metadata !13861, metadata !DIExpression()) #23, !dbg !15647
  call void @llvm.dbg.value(metadata i32 %38, metadata !13855, metadata !DIExpression()) #23, !dbg !15643
  call void @llvm.dbg.value(metadata i32 %38, metadata !15632, metadata !DIExpression()), !dbg !15652
  call void @llvm.dbg.value(metadata i32 undef, metadata !14527, metadata !DIExpression()) #23, !dbg !15690
  %39 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %38) #24, !dbg !15697
  ret void, !dbg !15698
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !15699 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !15703, metadata !DIExpression()), !dbg !15706
  %3 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15707, !srcloc !14583
  call void @llvm.dbg.value(metadata i32 %3, metadata !14579, metadata !DIExpression()) #23, !dbg !15712
  %4 = icmp eq i32 %3, 0, !dbg !15713
  br i1 %4, label %6, label %5, !dbg !15714

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.278, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.261, i32 0, i32 0), i32 noundef 1463) #24, !dbg !15715
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.263, i32 0, i32 0)) #24, !dbg !15715
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.261, i32 0, i32 0), i32 noundef 1463) #24, !dbg !15715
  unreachable, !dbg !15715

6:                                                ; preds = %1
  %7 = icmp eq i64 %2, -1, !dbg !15717
  br i1 %7, label %8, label %10, !dbg !15719

8:                                                ; preds = %6
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15720
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %9) #25, !dbg !15722
  br label %15, !dbg !15723

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i64 %2, metadata !15704, metadata !DIExpression()), !dbg !15706
  %11 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #25, !dbg !15724
  %12 = sext i32 %11 to i64, !dbg !15724
  call void @llvm.dbg.value(metadata i64 %12, metadata !15704, metadata !DIExpression()), !dbg !15706
  %13 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %12) #25, !dbg !15725
  %14 = trunc i64 %13 to i32, !dbg !15725
  call void @llvm.dbg.value(metadata i32 %14, metadata !15705, metadata !DIExpression()), !dbg !15706
  br label %15

15:                                               ; preds = %10, %8
  %16 = phi i32 [ -1, %8 ], [ %14, %10 ], !dbg !15706
  ret i32 %16, !dbg !15726
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15727 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15731, metadata !DIExpression()), !dbg !15732
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15733, !srcloc !15735
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #25, !dbg !15736
  ret void, !dbg !15737
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !15738 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15742, metadata !DIExpression()), !dbg !15746
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15747, !srcloc !14583
  call void @llvm.dbg.value(metadata i32 %2, metadata !14579, metadata !DIExpression()) #23, !dbg !15752
  %3 = icmp eq i32 %2, 0, !dbg !15753
  br i1 %3, label %5, label %4, !dbg !15754

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.278, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.261, i32 0, i32 0), i32 noundef 1420) #24, !dbg !15755
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.263, i32 0, i32 0)) #24, !dbg !15755
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.261, i32 0, i32 0), i32 noundef 1420) #24, !dbg !15755
  unreachable, !dbg !15755

5:                                                ; preds = %1
  %6 = icmp eq i64 %0, 0, !dbg !15757
  br i1 %6, label %7, label %8, !dbg !15759

7:                                                ; preds = %5
  tail call fastcc void @k_yield() #25, !dbg !15760
  br label %43, !dbg !15762

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i64 %0, metadata !15744, metadata !DIExpression()), !dbg !15746
  %9 = icmp sgt i64 %0, -3, !dbg !15763
  br i1 %9, label %10, label %14, !dbg !15765

10:                                               ; preds = %8
  %11 = tail call i32 @sys_clock_tick_get_32() #24, !dbg !15766
  %12 = trunc i64 %0 to i32, !dbg !15768
  %13 = add i32 %11, %12, !dbg !15768
  call void @llvm.dbg.value(metadata i32 %13, metadata !15743, metadata !DIExpression()), !dbg !15746
  br label %17, !dbg !15769

14:                                               ; preds = %8
  %15 = trunc i64 %0 to i32, !dbg !15770
  %16 = sub i32 -2, %15, !dbg !15770
  call void @llvm.dbg.value(metadata i32 %16, metadata !15743, metadata !DIExpression()), !dbg !15746
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i32 [ %13, %10 ], [ %16, %14 ], !dbg !15772
  call void @llvm.dbg.value(metadata i32 %18, metadata !15743, metadata !DIExpression()), !dbg !15746
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13849, metadata !DIExpression()) #23, !dbg !15773
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15775, !srcloc !13864
  call void @llvm.dbg.value(metadata i32 undef, metadata !13861, metadata !DIExpression()) #23, !dbg !15777
  call void @llvm.dbg.value(metadata i32 undef, metadata !13862, metadata !DIExpression()) #23, !dbg !15777
  call void @llvm.dbg.value(metadata i32 undef, metadata !13855, metadata !DIExpression()) #23, !dbg !15773
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15778
  br i1 %20, label %22, label %21, !dbg !15779

21:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.255, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 148) #24, !dbg !15780
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.257, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15780
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 148) #24, !dbg !15780
  unreachable, !dbg !15780

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !13861, metadata !DIExpression()) #23, !dbg !15777
  call void @llvm.dbg.value(metadata i32 undef, metadata !13855, metadata !DIExpression()) #23, !dbg !15773
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15781
  call void @llvm.dbg.value(metadata i32 undef, metadata !15745, metadata !DIExpression()), !dbg !15746
  %23 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15782
  store %struct.k_thread* %23, %struct.k_thread** @pending_current, align 4, !dbg !15783
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %23) #25, !dbg !15784
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15785
  %25 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !15786
  tail call fastcc void @z_add_thread_timeout.271(%struct.k_thread* noundef %24, [1 x i64] %25) #25, !dbg !15786
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15787
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %26) #25, !dbg !15788
  call void @llvm.dbg.value(metadata i32 undef, metadata !14527, metadata !DIExpression()) #23, !dbg !15789
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14532, metadata !DIExpression()) #23, !dbg !15789
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14536, metadata !DIExpression()) #23, !dbg !15791
  %27 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15793
  br i1 %27, label %29, label %28, !dbg !15794

28:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.258, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 225) #24, !dbg !15795
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.259, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15795
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 225) #24, !dbg !15795
  unreachable, !dbg !15795

29:                                               ; preds = %22
  %30 = extractvalue { i32, i32 } %19, 0, !dbg !15775
  call void @llvm.dbg.value(metadata i32 %30, metadata !13861, metadata !DIExpression()) #23, !dbg !15777
  call void @llvm.dbg.value(metadata i32 %30, metadata !13855, metadata !DIExpression()) #23, !dbg !15773
  call void @llvm.dbg.value(metadata i32 %30, metadata !15745, metadata !DIExpression()), !dbg !15746
  call void @llvm.dbg.value(metadata i32 undef, metadata !14527, metadata !DIExpression()) #23, !dbg !15789
  %31 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %30) #24, !dbg !15796
  %32 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15797
  %33 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %32, i32 noundef 16) #25, !dbg !15797
  br i1 %33, label %34, label %35, !dbg !15800

34:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.23.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.261, i32 0, i32 0), i32 noundef 1448) #24, !dbg !15801
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.263, i32 0, i32 0)) #24, !dbg !15801
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.261, i32 0, i32 0), i32 noundef 1448) #24, !dbg !15801
  unreachable, !dbg !15801

35:                                               ; preds = %29
  %36 = zext i32 %18 to i64, !dbg !15803
  %37 = tail call i32 @sys_clock_tick_get_32() #24, !dbg !15804
  %38 = zext i32 %37 to i64, !dbg !15804
  %39 = sub nsw i64 %36, %38, !dbg !15805
  call void @llvm.dbg.value(metadata i64 %39, metadata !15742, metadata !DIExpression()), !dbg !15746
  %40 = icmp sgt i64 %39, 0, !dbg !15806
  %41 = select i1 %40, i64 %39, i64 0, !dbg !15806
  %42 = trunc i64 %41 to i32, !dbg !15806
  br label %43

43:                                               ; preds = %35, %7
  %44 = phi i32 [ 0, %7 ], [ %42, %35 ], !dbg !15746
  ret i32 %44, !dbg !15807
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #6 !dbg !15808 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15810, metadata !DIExpression()), !dbg !15811
  call void @llvm.dbg.value(metadata i64 %0, metadata !13909, metadata !DIExpression()), !dbg !15812
  call void @llvm.dbg.value(metadata i32 10000, metadata !13912, metadata !DIExpression()), !dbg !15812
  call void @llvm.dbg.value(metadata i32 1000, metadata !13913, metadata !DIExpression()), !dbg !15812
  call void @llvm.dbg.value(metadata i8 1, metadata !13914, metadata !DIExpression()), !dbg !15812
  call void @llvm.dbg.value(metadata i1 false, metadata !13915, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15812
  call void @llvm.dbg.value(metadata i1 false, metadata !13916, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15812
  call void @llvm.dbg.value(metadata i8 0, metadata !13917, metadata !DIExpression()), !dbg !15812
  call void @llvm.dbg.value(metadata i1 false, metadata !13918, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15812
  call void @llvm.dbg.value(metadata i1 true, metadata !13919, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15812
  call void @llvm.dbg.value(metadata i64 0, metadata !13920, metadata !DIExpression()), !dbg !15812
  call void @llvm.dbg.value(metadata i64 0, metadata !13920, metadata !DIExpression()), !dbg !15812
  call void @llvm.dbg.value(metadata i64 %0, metadata !13909, metadata !DIExpression()), !dbg !15812
  %2 = udiv i64 %0, 10, !dbg !15814
  ret i64 %2, !dbg !15818
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !15819 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15820, !srcloc !15822
  tail call void @z_impl_k_yield() #25, !dbg !15823
  ret void, !dbg !15824
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !15825 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15829, metadata !DIExpression()), !dbg !15831
  %2 = sext i32 %0 to i64, !dbg !15832
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #25, !dbg !15833
  call void @llvm.dbg.value(metadata i64 %3, metadata !15830, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15831
  %4 = shl i64 %3, 32, !dbg !15834
  %5 = ashr exact i64 %4, 32, !dbg !15834
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #25, !dbg !15835
  call void @llvm.dbg.value(metadata i32 %6, metadata !15830, metadata !DIExpression()), !dbg !15831
  %7 = sext i32 %6 to i64, !dbg !15836
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #25, !dbg !15837
  %9 = trunc i64 %8 to i32, !dbg !15837
  ret i32 %9, !dbg !15838
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #6 !dbg !15839 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15841, metadata !DIExpression()), !dbg !15842
  call void @llvm.dbg.value(metadata i64 %0, metadata !13909, metadata !DIExpression()), !dbg !15843
  call void @llvm.dbg.value(metadata i32 1000000, metadata !13912, metadata !DIExpression()), !dbg !15843
  call void @llvm.dbg.value(metadata i32 10000, metadata !13913, metadata !DIExpression()), !dbg !15843
  call void @llvm.dbg.value(metadata i8 1, metadata !13914, metadata !DIExpression()), !dbg !15843
  call void @llvm.dbg.value(metadata i1 false, metadata !13915, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15843
  call void @llvm.dbg.value(metadata i1 true, metadata !13916, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15843
  call void @llvm.dbg.value(metadata i8 0, metadata !13917, metadata !DIExpression()), !dbg !15843
  call void @llvm.dbg.value(metadata i1 false, metadata !13918, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15843
  call void @llvm.dbg.value(metadata i1 true, metadata !13919, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15843
  call void @llvm.dbg.value(metadata i64 0, metadata !13920, metadata !DIExpression()), !dbg !15843
  call void @llvm.dbg.value(metadata i64 0, metadata !13920, metadata !DIExpression()), !dbg !15843
  %2 = add i64 %0, 99, !dbg !15845
  call void @llvm.dbg.value(metadata i64 %2, metadata !13909, metadata !DIExpression()), !dbg !15843
  %3 = udiv i64 %2, 100, !dbg !15846
  ret i64 %3, !dbg !15847
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #6 !dbg !15848 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15850, metadata !DIExpression()), !dbg !15851
  call void @llvm.dbg.value(metadata i64 %0, metadata !13909, metadata !DIExpression()), !dbg !15852
  call void @llvm.dbg.value(metadata i32 10000, metadata !13912, metadata !DIExpression()), !dbg !15852
  call void @llvm.dbg.value(metadata i32 1000000, metadata !13913, metadata !DIExpression()), !dbg !15852
  call void @llvm.dbg.value(metadata i8 1, metadata !13914, metadata !DIExpression()), !dbg !15852
  call void @llvm.dbg.value(metadata i1 false, metadata !13915, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15852
  call void @llvm.dbg.value(metadata i1 false, metadata !13916, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15852
  call void @llvm.dbg.value(metadata i8 0, metadata !13917, metadata !DIExpression()), !dbg !15852
  call void @llvm.dbg.value(metadata i1 true, metadata !13918, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15852
  call void @llvm.dbg.value(metadata i1 false, metadata !13919, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15852
  call void @llvm.dbg.value(metadata i64 0, metadata !13920, metadata !DIExpression()), !dbg !15852
  call void @llvm.dbg.value(metadata i64 0, metadata !13920, metadata !DIExpression()), !dbg !15852
  %2 = mul i64 %0, 100, !dbg !15854
  ret i64 %2, !dbg !15856
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15857 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15859, metadata !DIExpression()), !dbg !15860
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #25, !dbg !15861
  br i1 %2, label %14, label %3, !dbg !15863

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !15864
  %5 = icmp slt i32 %4, 0, !dbg !15866
  br i1 %5, label %6, label %10, !dbg !15867

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15868
  %8 = load i8, i8* %7, align 1, !dbg !15868
  %9 = icmp eq i8 %8, 16, !dbg !15871
  br i1 %9, label %10, label %14, !dbg !15872

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #25, !dbg !15873
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #25, !dbg !15874
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15875, !srcloc !14583
  call void @llvm.dbg.value(metadata i32 %11, metadata !14579, metadata !DIExpression()) #23, !dbg !15879
  %12 = icmp eq i32 %11, 0, !dbg !15880
  br i1 %12, label %13, label %14, !dbg !15881

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !15882
  br label %14, !dbg !15884

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !15885
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15886 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15888, metadata !DIExpression()), !dbg !15889
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15890
  %3 = load i8, i8* %2, align 1, !dbg !15890
  %4 = and i8 %3, 2, !dbg !15891
  %5 = icmp ne i8 %4, 0, !dbg !15892
  ret i1 %5, !dbg !15893
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #10 !dbg !15894 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15899
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15898, metadata !DIExpression()), !dbg !15900
  ret %struct.k_thread* %1, !dbg !15901
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !15902 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15903, !srcloc !14583
  call void @llvm.dbg.value(metadata i32 %1, metadata !14579, metadata !DIExpression()) #23, !dbg !15906
  %2 = icmp eq i32 %1, 0, !dbg !15907
  br i1 %2, label %3, label %8, !dbg !15908

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15909
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #25, !dbg !15910
  %6 = icmp ne i32 %5, 0, !dbg !15908
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !15911
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15912 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15914, metadata !DIExpression()), !dbg !15916
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13849, metadata !DIExpression()) #23, !dbg !15917
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15919, !srcloc !13864
  call void @llvm.dbg.value(metadata i32 undef, metadata !13861, metadata !DIExpression()) #23, !dbg !15921
  call void @llvm.dbg.value(metadata i32 undef, metadata !13862, metadata !DIExpression()) #23, !dbg !15921
  call void @llvm.dbg.value(metadata i32 undef, metadata !13855, metadata !DIExpression()) #23, !dbg !15917
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15922
  br i1 %3, label %5, label %4, !dbg !15923

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.255, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 148) #24, !dbg !15924
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.257, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15924
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 148) #24, !dbg !15924
  unreachable, !dbg !15924

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !15919
  call void @llvm.dbg.value(metadata i32 %6, metadata !13861, metadata !DIExpression()) #23, !dbg !15921
  call void @llvm.dbg.value(metadata i32 %6, metadata !13855, metadata !DIExpression()) #23, !dbg !15917
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15925
  call void @llvm.dbg.value(metadata i32 %6, metadata !15915, metadata !DIExpression()), !dbg !15916
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !15926
  %8 = load i8, i8* %7, align 4, !dbg !15926
  %9 = and i8 %8, 1, !dbg !15928
  %10 = icmp eq i8 %9, 0, !dbg !15929
  br i1 %10, label %15, label %11, !dbg !15930

11:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !13883, metadata !DIExpression()) #23, !dbg !15931
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13888, metadata !DIExpression()) #23, !dbg !15931
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15934
  br i1 %12, label %14, label %13, !dbg !15935

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.258, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 194) #24, !dbg !15936
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.259, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15936
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 194) #24, !dbg !15936
  unreachable, !dbg !15936

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %6, metadata !13883, metadata !DIExpression()) #23, !dbg !15931
  call void @llvm.dbg.value(metadata i32 %6, metadata !13897, metadata !DIExpression()) #23, !dbg !15937
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !15939, !srcloc !13903
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.296, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.261, i32 0, i32 0), i32 noundef 1731) #24, !dbg !15940
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.297, i32 0, i32 0), %struct.k_thread* noundef nonnull %0) #24, !dbg !15940
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.261, i32 0, i32 0), i32 noundef 1731) #24, !dbg !15940
  unreachable, !dbg !15940

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15944
  %17 = load i8, i8* %16, align 1, !dbg !15944
  %18 = and i8 %17, 8, !dbg !15946
  %19 = icmp eq i8 %18, 0, !dbg !15947
  br i1 %19, label %24, label %20, !dbg !15948

20:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 undef, metadata !13883, metadata !DIExpression()) #23, !dbg !15949
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13888, metadata !DIExpression()) #23, !dbg !15949
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15952
  br i1 %21, label %23, label %22, !dbg !15953

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.258, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 194) #24, !dbg !15954
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.259, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15954
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 194) #24, !dbg !15954
  unreachable, !dbg !15954

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %6, metadata !13883, metadata !DIExpression()) #23, !dbg !15949
  call void @llvm.dbg.value(metadata i32 %6, metadata !13897, metadata !DIExpression()) #23, !dbg !15955
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !15957, !srcloc !13903
  br label %39, !dbg !15958

24:                                               ; preds = %15
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #25, !dbg !15959
  %25 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15960
  %26 = icmp eq %struct.k_thread* %25, %0, !dbg !15962
  br i1 %26, label %27, label %35, !dbg !15963

27:                                               ; preds = %24
  %28 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15964, !srcloc !14583
  call void @llvm.dbg.value(metadata i32 %28, metadata !14579, metadata !DIExpression()) #23, !dbg !15967
  %29 = icmp eq i32 %28, 0, !dbg !15968
  br i1 %29, label %30, label %35, !dbg !15969

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !14527, metadata !DIExpression()) #23, !dbg !15970
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14532, metadata !DIExpression()) #23, !dbg !15970
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14536, metadata !DIExpression()) #23, !dbg !15973
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15975
  br i1 %31, label %33, label %32, !dbg !15976

32:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.258, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 225) #24, !dbg !15977
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.259, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15977
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 225) #24, !dbg !15977
  unreachable, !dbg !15977

33:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %6, metadata !14527, metadata !DIExpression()) #23, !dbg !15970
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %6) #24, !dbg !15978
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.296, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.261, i32 0, i32 0), i32 noundef 1778) #24, !dbg !15979
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.298, i32 0, i32 0)) #24, !dbg !15979
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.261, i32 0, i32 0), i32 noundef 1778) #24, !dbg !15979
  unreachable, !dbg !15979

35:                                               ; preds = %27, %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !13883, metadata !DIExpression()) #23, !dbg !15983
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13888, metadata !DIExpression()) #23, !dbg !15983
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15985
  br i1 %36, label %38, label %37, !dbg !15986

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.258, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 194) #24, !dbg !15987
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.259, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !15987
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 194) #24, !dbg !15987
  unreachable, !dbg !15987

38:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %6, metadata !13883, metadata !DIExpression()) #23, !dbg !15983
  call void @llvm.dbg.value(metadata i32 %6, metadata !13897, metadata !DIExpression()) #23, !dbg !15988
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !15990, !srcloc !13903
  br label %39, !dbg !15991

39:                                               ; preds = %38, %23
  ret void, !dbg !15991
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15992 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15994, metadata !DIExpression()), !dbg !15995
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15996
  %3 = load i8, i8* %2, align 1, !dbg !15996
  %4 = and i8 %3, 8, !dbg !15998
  %5 = icmp eq i8 %4, 0, !dbg !15999
  br i1 %5, label %6, label %20, !dbg !16000

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !16001
  %8 = or i8 %7, 8, !dbg !16001
  store i8 %8, i8* %2, align 1, !dbg !16001
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #25, !dbg !16003
  br i1 %9, label %10, label %12, !dbg !16005

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14041, metadata !DIExpression()) #23, !dbg !16006
  %11 = and i8 %8, 95, !dbg !16009
  store i8 %11, i8* %2, align 1, !dbg !16009
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14049, metadata !DIExpression()) #23, !dbg !16010
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #24, !dbg !16012
  br label %12, !dbg !16013

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16014
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !16014
  %15 = icmp eq %union.anon* %14, null, !dbg !16016
  br i1 %15, label %17, label %16, !dbg !16017

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #25, !dbg !16018
  br label %17, !dbg !16020

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #25, !dbg !16021
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16022
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #25, !dbg !16023
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !16024
  br label %20, !dbg !16025

20:                                               ; preds = %17, %1
  ret void, !dbg !16026
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !16027 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16031, metadata !DIExpression()), !dbg !16033
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !16034
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16032, metadata !DIExpression()), !dbg !16033
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16035
  br i1 %3, label %10, label %4, !dbg !16036

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #25, !dbg !16037
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #25, !dbg !16039
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16040, metadata !DIExpression()), !dbg !16046
  call void @llvm.dbg.value(metadata i32 0, metadata !16045, metadata !DIExpression()), !dbg !16046
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 8, i32 1, !dbg !16048
  store i32 0, i32* %7, align 4, !dbg !16049
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !16050
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !16034
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16032, metadata !DIExpression()), !dbg !16033
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16035
  br i1 %9, label %10, label %4, !dbg !16036, !llvm.loop !16051

10:                                               ; preds = %4, %1
  ret void, !dbg !16053
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !16054 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16059, metadata !DIExpression()), !dbg !16062
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16058, metadata !DIExpression()), !dbg !16062
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13849, metadata !DIExpression()) #23, !dbg !16063
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16065, !srcloc !13864
  call void @llvm.dbg.value(metadata i32 undef, metadata !13861, metadata !DIExpression()) #23, !dbg !16067
  call void @llvm.dbg.value(metadata i32 undef, metadata !13862, metadata !DIExpression()) #23, !dbg !16067
  call void @llvm.dbg.value(metadata i32 undef, metadata !13855, metadata !DIExpression()) #23, !dbg !16063
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16068
  br i1 %4, label %6, label %5, !dbg !16069

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.255, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 148) #24, !dbg !16070
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.257, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16070
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 148) #24, !dbg !16070
  unreachable, !dbg !16070

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !16065
  call void @llvm.dbg.value(metadata i32 %7, metadata !13861, metadata !DIExpression()) #23, !dbg !16067
  call void @llvm.dbg.value(metadata i32 %7, metadata !13855, metadata !DIExpression()) #23, !dbg !16063
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16071
  call void @llvm.dbg.value(metadata i32 %7, metadata !16060, metadata !DIExpression()), !dbg !16062
  call void @llvm.dbg.value(metadata i32 0, metadata !16061, metadata !DIExpression()), !dbg !16062
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16072
  %9 = load i8, i8* %8, align 1, !dbg !16072
  %10 = and i8 %9, 8, !dbg !16074
  %11 = icmp eq i8 %10, 0, !dbg !16075
  br i1 %11, label %12, label %35, !dbg !16076

12:                                               ; preds = %6
  %13 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %13, metadata !16059, metadata !DIExpression()), !dbg !16062
  %14 = icmp eq i64 %13, 0, !dbg !16077
  br i1 %14, label %35, label %15, !dbg !16079

15:                                               ; preds = %12
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16080
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !16082
  br i1 %17, label %35, label %18, !dbg !16083

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16084
  %20 = load %union.anon*, %union.anon** %19, align 8, !dbg !16084
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %16, i32 0, i32 3, !dbg !16085
  %22 = icmp eq %union.anon* %20, %21, !dbg !16086
  br i1 %22, label %35, label %23, !dbg !16087

23:                                               ; preds = %18
  %24 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16088, !srcloc !14583
  call void @llvm.dbg.value(metadata i32 %24, metadata !14579, metadata !DIExpression()) #23, !dbg !16094
  %25 = icmp eq i32 %24, 0, !dbg !16095
  br i1 %25, label %27, label %26, !dbg !16096

26:                                               ; preds = %23
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.278, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.261, i32 0, i32 0), i32 noundef 1809) #24, !dbg !16097
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13.299, i32 0, i32 0)) #24, !dbg !16097
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.261, i32 0, i32 0), i32 noundef 1809) #24, !dbg !16097
  unreachable, !dbg !16097

27:                                               ; preds = %23
  %28 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16099
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16100
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %28, %union.anon* noundef nonnull %29) #25, !dbg !16101
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16102
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %30, [1 x i64] %1) #25, !dbg !16103
  call void @llvm.dbg.value(metadata i32 undef, metadata !14527, metadata !DIExpression()) #23, !dbg !16104
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14532, metadata !DIExpression()) #23, !dbg !16104
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14536, metadata !DIExpression()) #23, !dbg !16106
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16108
  br i1 %31, label %33, label %32, !dbg !16109

32:                                               ; preds = %27
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.258, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 225) #24, !dbg !16110
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.259, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16110
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 225) #24, !dbg !16110
  unreachable, !dbg !16110

33:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %7, metadata !14527, metadata !DIExpression()) #23, !dbg !16104
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %7) #24, !dbg !16111
  call void @llvm.dbg.value(metadata i32 %34, metadata !16061, metadata !DIExpression()), !dbg !16062
  br label %40, !dbg !16112

35:                                               ; preds = %15, %18, %12, %6
  %36 = phi i32 [ 0, %6 ], [ -16, %12 ], [ -45, %18 ], [ -45, %15 ], !dbg !16113
  call void @llvm.dbg.value(metadata i32 %36, metadata !16061, metadata !DIExpression()), !dbg !16062
  call void @llvm.dbg.value(metadata i32 undef, metadata !13883, metadata !DIExpression()) #23, !dbg !16114
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13888, metadata !DIExpression()) #23, !dbg !16114
  %37 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16116
  br i1 %37, label %39, label %38, !dbg !16117

38:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.258, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 194) #24, !dbg !16118
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.259, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16118
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 194) #24, !dbg !16118
  unreachable, !dbg !16118

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %7, metadata !13883, metadata !DIExpression()) #23, !dbg !16114
  call void @llvm.dbg.value(metadata i32 %7, metadata !13897, metadata !DIExpression()) #23, !dbg !16119
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !16121, !srcloc !13903
  br label %40, !dbg !16122

40:                                               ; preds = %39, %33
  %41 = phi i32 [ %36, %39 ], [ %34, %33 ], !dbg !16062
  ret i32 %41, !dbg !16123
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !16124 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16128, metadata !DIExpression()), !dbg !16136
  call void @llvm.dbg.value(metadata i32 %1, metadata !16129, metadata !DIExpression()), !dbg !16136
  call void @llvm.dbg.value(metadata i8* %2, metadata !16130, metadata !DIExpression()), !dbg !16136
  call void @llvm.dbg.value(metadata i8 0, metadata !16132, metadata !DIExpression()), !dbg !16136
  call void @llvm.dbg.value(metadata i32 0, metadata !16133, metadata !DIExpression()), !dbg !16137
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13849, metadata !DIExpression()) #23, !dbg !16138
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16140, !srcloc !13864
  call void @llvm.dbg.value(metadata i32 undef, metadata !13861, metadata !DIExpression()) #23, !dbg !16142
  call void @llvm.dbg.value(metadata i32 undef, metadata !13862, metadata !DIExpression()) #23, !dbg !16142
  call void @llvm.dbg.value(metadata i32 undef, metadata !13855, metadata !DIExpression()) #23, !dbg !16138
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16143
  br i1 %5, label %7, label %6, !dbg !16144

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.255, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 148) #24, !dbg !16145
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.257, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16145
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 148) #24, !dbg !16145
  unreachable, !dbg !16145

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !13861, metadata !DIExpression()) #23, !dbg !16142
  call void @llvm.dbg.value(metadata i32 undef, metadata !13855, metadata !DIExpression()) #23, !dbg !16138
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16146
  call void @llvm.dbg.value(metadata i32 undef, metadata !16135, metadata !DIExpression()), !dbg !16137
  call void @llvm.dbg.value(metadata i8 poison, metadata !16132, metadata !DIExpression()), !dbg !16136
  call void @llvm.dbg.value(metadata i32 undef, metadata !16133, metadata !DIExpression()), !dbg !16137
  %8 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %9 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %8) #25, !dbg !16147
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16131, metadata !DIExpression()), !dbg !16136
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !16150
  br i1 %10, label %15, label %11, !dbg !16152

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16153, metadata !DIExpression()), !dbg !16161
  call void @llvm.dbg.value(metadata i32 %1, metadata !16159, metadata !DIExpression()), !dbg !16161
  call void @llvm.dbg.value(metadata i8* %2, metadata !16160, metadata !DIExpression()), !dbg !16161
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16040, metadata !DIExpression()), !dbg !16164
  call void @llvm.dbg.value(metadata i32 %1, metadata !16045, metadata !DIExpression()), !dbg !16164
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 8, i32 1, !dbg !16166
  store i32 %1, i32* %12, align 4, !dbg !16167
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16168
  store i8* %2, i8** %13, align 4, !dbg !16169
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %9) #25, !dbg !16170
  %14 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %9) #25, !dbg !16171
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %9) #25, !dbg !16172
  call void @llvm.dbg.value(metadata i8 1, metadata !16132, metadata !DIExpression()), !dbg !16136
  br label %15, !dbg !16173

15:                                               ; preds = %7, %11
  call void @llvm.dbg.value(metadata i8 poison, metadata !16132, metadata !DIExpression()), !dbg !16136
  call void @llvm.dbg.value(metadata i32 undef, metadata !13883, metadata !DIExpression()) #23, !dbg !16174
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13888, metadata !DIExpression()) #23, !dbg !16174
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16176
  br i1 %16, label %18, label %17, !dbg !16177

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.258, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 194) #24, !dbg !16178
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.259, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #24, !dbg !16178
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.256, i32 0, i32 0), i32 noundef 194) #24, !dbg !16178
  unreachable, !dbg !16178

18:                                               ; preds = %15
  %19 = xor i1 %10, true, !dbg !16136
  %20 = extractvalue { i32, i32 } %4, 0, !dbg !16140
  call void @llvm.dbg.value(metadata i32 %20, metadata !13861, metadata !DIExpression()) #23, !dbg !16142
  call void @llvm.dbg.value(metadata i32 %20, metadata !13855, metadata !DIExpression()) #23, !dbg !16138
  call void @llvm.dbg.value(metadata i32 %20, metadata !16135, metadata !DIExpression()), !dbg !16137
  call void @llvm.dbg.value(metadata i32 undef, metadata !13883, metadata !DIExpression()) #23, !dbg !16174
  call void @llvm.dbg.value(metadata i32 undef, metadata !13897, metadata !DIExpression()) #23, !dbg !16179
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !16181, !srcloc !13903
  call void @llvm.dbg.value(metadata i8 poison, metadata !16132, metadata !DIExpression()), !dbg !16136
  call void @llvm.dbg.value(metadata i32 undef, metadata !16133, metadata !DIExpression()), !dbg !16137
  ret i1 %19, !dbg !16182
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !16183 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16189, metadata !DIExpression()), !dbg !16194
  call void @llvm.dbg.value(metadata i64 undef, metadata !16191, metadata !DIExpression()), !dbg !16194
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16188, metadata !DIExpression()), !dbg !16194
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !16190, metadata !DIExpression()), !dbg !16194
  call void @llvm.dbg.value(metadata i8** %4, metadata !16192, metadata !DIExpression()), !dbg !16194
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #25, !dbg !16195
  call void @llvm.dbg.value(metadata i32 %6, metadata !16193, metadata !DIExpression()), !dbg !16194
  %7 = icmp eq i8** %4, null, !dbg !16196
  br i1 %7, label %12, label %8, !dbg !16198

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16199
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16201
  %11 = load i8*, i8** %10, align 4, !dbg !16201
  store i8* %11, i8** %4, align 4, !dbg !16202
  br label %12, !dbg !16203

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !16204
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !16205 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #24, !dbg !16207
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #24, !dbg !16208
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_data_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_data_rom_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__ccm_data_end to i32), i32 ptrtoint ([0 x i8]* @__ccm_data_start to i32))) #24, !dbg !16209
  ret void, !dbg !16210
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16211 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !16221, metadata !DIExpression()), !dbg !16238
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16219, metadata !DIExpression()), !dbg !16238
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !16220, metadata !DIExpression()), !dbg !16238
  %5 = icmp eq i64 %4, -1, !dbg !16239
  br i1 %5, label %63, label %6, !dbg !16241

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16242
  %8 = tail call fastcc zeroext i1 @sys_dnode_is_linked.304(%struct._dnode* noundef %7) #25, !dbg !16242
  br i1 %8, label %9, label %10, !dbg !16245

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.307, i32 0, i32 0), i32 noundef 99) #24, !dbg !16246
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.308, i32 0, i32 0)) #24, !dbg !16246
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.307, i32 0, i32 0), i32 noundef 99) #24, !dbg !16246
  unreachable, !dbg !16246

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !16248
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %11, align 8, !dbg !16249
  call void @llvm.dbg.value(metadata i32 0, metadata !16222, metadata !DIExpression()), !dbg !16250
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16251, metadata !DIExpression()) #23, !dbg !16258
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16260, !srcloc !16266
  call void @llvm.dbg.value(metadata i32 undef, metadata !16263, metadata !DIExpression()) #23, !dbg !16267
  call void @llvm.dbg.value(metadata i32 undef, metadata !16264, metadata !DIExpression()) #23, !dbg !16267
  call void @llvm.dbg.value(metadata i32 undef, metadata !16257, metadata !DIExpression()) #23, !dbg !16258
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16268
  br i1 %13, label %15, label %14, !dbg !16271

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.309, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.310, i32 0, i32 0), i32 noundef 148) #24, !dbg !16272
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.311, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16272
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.310, i32 0, i32 0), i32 noundef 148) #24, !dbg !16272
  unreachable, !dbg !16272

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !16260
  call void @llvm.dbg.value(metadata i32 %16, metadata !16263, metadata !DIExpression()) #23, !dbg !16267
  call void @llvm.dbg.value(metadata i32 %16, metadata !16257, metadata !DIExpression()) #23, !dbg !16258
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16274
  call void @llvm.dbg.value(metadata i32 %16, metadata !16228, metadata !DIExpression()), !dbg !16250
  call void @llvm.dbg.value(metadata i32 undef, metadata !16222, metadata !DIExpression()), !dbg !16250
  %17 = icmp slt i64 %4, -1, !dbg !16275
  br i1 %17, label %18, label %24, !dbg !16276

18:                                               ; preds = %15
  %19 = load i64, i64* @curr_tick, align 8, !dbg !16277
  %20 = add i64 %4, %19, !dbg !16278
  %21 = sub i64 -2, %20, !dbg !16278
  call void @llvm.dbg.value(metadata i64 %21, metadata !16232, metadata !DIExpression()), !dbg !16279
  %22 = icmp sgt i64 %21, 1, !dbg !16280
  %23 = select i1 %22, i64 %21, i64 1, !dbg !16280
  br label %29, !dbg !16281

24:                                               ; preds = %15
  %25 = add nuw nsw i64 %4, 1, !dbg !16282
  %26 = tail call fastcc i32 @elapsed.312() #25, !dbg !16284
  %27 = sext i32 %26 to i64, !dbg !16284
  %28 = add nsw i64 %25, %27, !dbg !16285
  br label %29

29:                                               ; preds = %24, %18
  %30 = phi i64 [ %23, %18 ], [ %28, %24 ], !dbg !16286
  %31 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16287
  store i64 %30, i64* %31, align 8, !dbg !16288
  %32 = tail call fastcc %struct._timeout* @first() #25, !dbg !16289
  call void @llvm.dbg.value(metadata %struct._timeout* %32, metadata !16229, metadata !DIExpression()), !dbg !16291
  %33 = icmp eq %struct._timeout* %32, null, !dbg !16292
  br i1 %33, label %48, label %34, !dbg !16292

34:                                               ; preds = %29, %44
  %35 = phi i64 [ %45, %44 ], [ %30, %29 ], !dbg !16293
  %36 = phi %struct._timeout* [ %46, %44 ], [ %32, %29 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %36, metadata !16229, metadata !DIExpression()), !dbg !16291
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !16297
  %38 = load i64, i64* %37, align 8, !dbg !16297
  %39 = icmp slt i64 %35, %38, !dbg !16298
  br i1 %39, label %40, label %44, !dbg !16299

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !16297
  %42 = sub nsw i64 %38, %35, !dbg !16300
  store i64 %42, i64* %41, align 8, !dbg !16300
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 0, !dbg !16302
  tail call fastcc void @sys_dlist_insert.313(%struct._dnode* noundef nonnull %43, %struct._dnode* noundef nonnull %7) #25, !dbg !16303
  br label %49, !dbg !16304

44:                                               ; preds = %34
  %45 = sub nsw i64 %35, %38, !dbg !16305
  store i64 %45, i64* %31, align 8, !dbg !16305
  %46 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %36) #25, !dbg !16306
  call void @llvm.dbg.value(metadata %struct._timeout* %46, metadata !16229, metadata !DIExpression()), !dbg !16291
  %47 = icmp eq %struct._timeout* %46, null, !dbg !16292
  br i1 %47, label %48, label %34, !dbg !16292, !llvm.loop !16307

48:                                               ; preds = %44, %29
  tail call fastcc void @sys_dlist_append.314(%struct._dnode* noundef nonnull %7) #25, !dbg !16309
  br label %49, !dbg !16312

49:                                               ; preds = %40, %48
  %50 = tail call fastcc %struct._timeout* @first() #25, !dbg !16313
  %51 = icmp eq %struct._timeout* %50, %0, !dbg !16314
  br i1 %51, label %52, label %59, !dbg !16315

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @next_timeout() #25, !dbg !16316
  call void @llvm.dbg.value(metadata i32 %53, metadata !16235, metadata !DIExpression()), !dbg !16317
  %54 = icmp ne i32 %53, 0, !dbg !16318
  %55 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %56 = icmp eq i32 %55, %53
  %57 = select i1 %54, i1 %56, i1 false, !dbg !16320
  br i1 %57, label %59, label %58, !dbg !16320

58:                                               ; preds = %52
  tail call void @sys_clock_set_timeout(i32 noundef %53, i1 noundef zeroext false) #24, !dbg !16321
  br label %59, !dbg !16323

59:                                               ; preds = %58, %52, %49
  call void @llvm.dbg.value(metadata i32 undef, metadata !16324, metadata !DIExpression()) #23, !dbg !16330
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16329, metadata !DIExpression()) #23, !dbg !16330
  %60 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16332
  br i1 %60, label %62, label %61, !dbg !16335

61:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.315, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.310, i32 0, i32 0), i32 noundef 194) #24, !dbg !16336
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.316, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16336
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.310, i32 0, i32 0), i32 noundef 194) #24, !dbg !16336
  unreachable, !dbg !16336

62:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !16324, metadata !DIExpression()) #23, !dbg !16330
  call void @llvm.dbg.value(metadata i32 %16, metadata !16338, metadata !DIExpression()) #23, !dbg !16341
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !16343, !srcloc !16344
  call void @llvm.dbg.value(metadata i32 undef, metadata !16222, metadata !DIExpression()), !dbg !16250
  br label %63

63:                                               ; preds = %3, %62
  ret void, !dbg !16345
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.304(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16346 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16352, metadata !DIExpression()), !dbg !16353
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16354
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16354
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16355
  ret i1 %4, !dbg !16356
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.312() unnamed_addr #1 !dbg !16357 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !16360
  %2 = icmp eq i32 %1, 0, !dbg !16361
  br i1 %2, label %3, label %5, !dbg !16360

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #24, !dbg !16362
  br label %5, !dbg !16360

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !16360
  ret i32 %6, !dbg !16363
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #10 !dbg !16364 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.319() #25, !dbg !16370
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16368, metadata !DIExpression()), !dbg !16371
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !16372
  ret %struct._timeout* %2, !dbg !16373
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.313(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !16374 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16378, metadata !DIExpression()), !dbg !16382
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16379, metadata !DIExpression()), !dbg !16382
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16383
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16383
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16380, metadata !DIExpression()), !dbg !16382
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16384
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16385
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16386
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16387
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16388
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16389
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16390
  ret void, !dbg !16391
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #10 !dbg !16392 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16396, metadata !DIExpression()), !dbg !16398
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16399
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.317(%struct._dnode* noundef %2) #25, !dbg !16400
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16397, metadata !DIExpression()), !dbg !16398
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !16401
  ret %struct._timeout* %4, !dbg !16402
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.314(%struct._dnode* noundef %0) unnamed_addr #11 !dbg !16403 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16408, metadata !DIExpression()), !dbg !16411
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16409, metadata !DIExpression()), !dbg !16411
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16412
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16410, metadata !DIExpression()), !dbg !16411
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16413
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !16414
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16415
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !16416
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !16417
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !16418
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16419
  ret void, !dbg !16420
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !16421 {
  %1 = tail call fastcc %struct._timeout* @first() #25, !dbg !16426
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !16423, metadata !DIExpression()), !dbg !16427
  %2 = tail call fastcc i32 @elapsed.312() #25, !dbg !16428
  call void @llvm.dbg.value(metadata i32 %2, metadata !16424, metadata !DIExpression()), !dbg !16427
  %3 = icmp eq %struct._timeout* %1, null, !dbg !16429
  br i1 %3, label %14, label %4, !dbg !16431

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !16432
  %6 = load i64, i64* %5, align 8, !dbg !16432
  %7 = sext i32 %2 to i64, !dbg !16433
  %8 = sub nsw i64 %6, %7, !dbg !16434
  %9 = icmp sgt i64 %8, 2147483647, !dbg !16435
  br i1 %9, label %14, label %10, !dbg !16436

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !16437
  %12 = select i1 %11, i64 %8, i64 0, !dbg !16437
  %13 = trunc i64 %12 to i32, !dbg !16437
  call void @llvm.dbg.value(metadata i32 %13, metadata !16425, metadata !DIExpression()), !dbg !16427
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !16439
  call void @llvm.dbg.value(metadata i32 %15, metadata !16425, metadata !DIExpression()), !dbg !16427
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16440
  %17 = icmp ne i32 %16, 0, !dbg !16442
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !16443
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !16443
  call void @llvm.dbg.value(metadata i32 %20, metadata !16425, metadata !DIExpression()), !dbg !16427
  ret i32 %20, !dbg !16444
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.317(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !16445 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16449, metadata !DIExpression()), !dbg !16451
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16450, metadata !DIExpression()), !dbg !16451
  %2 = icmp eq %struct._dnode* %0, null, !dbg !16452
  br i1 %2, label %5, label %3, !dbg !16453

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.318(%struct._dnode* noundef nonnull %0) #25, !dbg !16454
  br label %5, !dbg !16453

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !16453
  ret %struct._dnode* %6, !dbg !16455
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.318(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !16456 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16458, metadata !DIExpression()), !dbg !16460
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16459, metadata !DIExpression()), !dbg !16460
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16461
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !16462
  br i1 %3, label %7, label %4, !dbg !16463

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16464
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !16464
  br label %7, !dbg !16463

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !16463
  ret %struct._dnode* %8, !dbg !16465
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.319() unnamed_addr #10 !dbg !16466 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16470, metadata !DIExpression()), !dbg !16471
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.320() #25, !dbg !16472
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !16472
  ret %struct._dnode* %3, !dbg !16473
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.320() unnamed_addr #10 !dbg !16474 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16478, metadata !DIExpression()), !dbg !16479
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !16480
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !16481
  ret i1 %2, !dbg !16482
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16483 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16487, metadata !DIExpression()), !dbg !16492
  call void @llvm.dbg.value(metadata i32 -22, metadata !16488, metadata !DIExpression()), !dbg !16492
  call void @llvm.dbg.value(metadata i32 0, metadata !16489, metadata !DIExpression()), !dbg !16493
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16251, metadata !DIExpression()) #23, !dbg !16494
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16496, !srcloc !16266
  call void @llvm.dbg.value(metadata i32 undef, metadata !16263, metadata !DIExpression()) #23, !dbg !16498
  call void @llvm.dbg.value(metadata i32 undef, metadata !16264, metadata !DIExpression()) #23, !dbg !16498
  call void @llvm.dbg.value(metadata i32 undef, metadata !16257, metadata !DIExpression()) #23, !dbg !16494
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16499
  br i1 %3, label %5, label %4, !dbg !16500

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.309, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.310, i32 0, i32 0), i32 noundef 148) #24, !dbg !16501
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.311, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16501
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.310, i32 0, i32 0), i32 noundef 148) #24, !dbg !16501
  unreachable, !dbg !16501

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16263, metadata !DIExpression()) #23, !dbg !16498
  call void @llvm.dbg.value(metadata i32 undef, metadata !16257, metadata !DIExpression()) #23, !dbg !16494
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16502
  call void @llvm.dbg.value(metadata i32 undef, metadata !16491, metadata !DIExpression()), !dbg !16493
  call void @llvm.dbg.value(metadata i32 -22, metadata !16488, metadata !DIExpression()), !dbg !16492
  call void @llvm.dbg.value(metadata i32 undef, metadata !16489, metadata !DIExpression()), !dbg !16493
  %6 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !16488, metadata !DIExpression()), !dbg !16492
  %7 = tail call fastcc zeroext i1 @sys_dnode_is_linked.304(%struct._dnode* noundef %6) #25, !dbg !16503
  br i1 %7, label %8, label %9, !dbg !16507

8:                                                ; preds = %5
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #25, !dbg !16508
  call void @llvm.dbg.value(metadata i32 0, metadata !16488, metadata !DIExpression()), !dbg !16492
  br label %9, !dbg !16510

9:                                                ; preds = %5, %8
  %10 = phi i32 [ 0, %8 ], [ -22, %5 ], !dbg !16492
  call void @llvm.dbg.value(metadata i32 %10, metadata !16488, metadata !DIExpression()), !dbg !16492
  call void @llvm.dbg.value(metadata i32 undef, metadata !16324, metadata !DIExpression()) #23, !dbg !16511
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16329, metadata !DIExpression()) #23, !dbg !16511
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16513
  br i1 %11, label %13, label %12, !dbg !16514

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.315, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.310, i32 0, i32 0), i32 noundef 194) #24, !dbg !16515
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.316, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16515
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.310, i32 0, i32 0), i32 noundef 194) #24, !dbg !16515
  unreachable, !dbg !16515

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !16496
  call void @llvm.dbg.value(metadata i32 %14, metadata !16263, metadata !DIExpression()) #23, !dbg !16498
  call void @llvm.dbg.value(metadata i32 %14, metadata !16257, metadata !DIExpression()) #23, !dbg !16494
  call void @llvm.dbg.value(metadata i32 %14, metadata !16491, metadata !DIExpression()), !dbg !16493
  call void @llvm.dbg.value(metadata i32 undef, metadata !16324, metadata !DIExpression()) #23, !dbg !16511
  call void @llvm.dbg.value(metadata i32 undef, metadata !16338, metadata !DIExpression()) #23, !dbg !16516
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !16518, !srcloc !16344
  call void @llvm.dbg.value(metadata i32 %10, metadata !16488, metadata !DIExpression()), !dbg !16492
  call void @llvm.dbg.value(metadata i32 undef, metadata !16489, metadata !DIExpression()), !dbg !16493
  ret i32 %10, !dbg !16519
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #11 !dbg !16520 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16522, metadata !DIExpression()), !dbg !16523
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #25, !dbg !16524
  %3 = icmp eq %struct._timeout* %2, null, !dbg !16526
  br i1 %3, label %10, label %4, !dbg !16527

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16528
  %6 = load i64, i64* %5, align 8, !dbg !16528
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !16530
  %8 = load i64, i64* %7, align 8, !dbg !16531
  %9 = add nsw i64 %8, %6, !dbg !16531
  store i64 %9, i64* %7, align 8, !dbg !16531
  br label %10, !dbg !16532

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16533
  tail call fastcc void @sys_dlist_remove.323(%struct._dnode* noundef %11) #25, !dbg !16534
  ret void, !dbg !16535
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.323(%struct._dnode* nocapture noundef %0) unnamed_addr #11 !dbg !16536 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16540, metadata !DIExpression()), !dbg !16543
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16544
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16544
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16541, metadata !DIExpression()), !dbg !16543
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16545
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16545
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !16542, metadata !DIExpression()), !dbg !16543
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !16546
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !16547
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !16548
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !16549
  tail call fastcc void @sys_dnode_init.324(%struct._dnode* noundef %0) #25, !dbg !16550
  ret void, !dbg !16551
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.324(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !16552 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16554, metadata !DIExpression()), !dbg !16555
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16556
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !16557
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16558
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !16559
  ret void, !dbg !16560
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16561 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16567, metadata !DIExpression()), !dbg !16572
  call void @llvm.dbg.value(metadata i64 0, metadata !16568, metadata !DIExpression()), !dbg !16572
  call void @llvm.dbg.value(metadata i32 0, metadata !16569, metadata !DIExpression()), !dbg !16573
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16251, metadata !DIExpression()) #23, !dbg !16574
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16576, !srcloc !16266
  call void @llvm.dbg.value(metadata i32 undef, metadata !16263, metadata !DIExpression()) #23, !dbg !16578
  call void @llvm.dbg.value(metadata i32 undef, metadata !16264, metadata !DIExpression()) #23, !dbg !16578
  call void @llvm.dbg.value(metadata i32 undef, metadata !16257, metadata !DIExpression()) #23, !dbg !16574
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16579
  br i1 %3, label %5, label %4, !dbg !16580

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.309, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.310, i32 0, i32 0), i32 noundef 148) #24, !dbg !16581
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.311, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16581
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.310, i32 0, i32 0), i32 noundef 148) #24, !dbg !16581
  unreachable, !dbg !16581

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16263, metadata !DIExpression()) #23, !dbg !16578
  call void @llvm.dbg.value(metadata i32 undef, metadata !16257, metadata !DIExpression()) #23, !dbg !16574
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16582
  call void @llvm.dbg.value(metadata i32 undef, metadata !16571, metadata !DIExpression()), !dbg !16573
  call void @llvm.dbg.value(metadata i64 0, metadata !16568, metadata !DIExpression()), !dbg !16572
  call void @llvm.dbg.value(metadata i32 undef, metadata !16569, metadata !DIExpression()), !dbg !16573
  %6 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #25, !dbg !16583
  call void @llvm.dbg.value(metadata i64 %6, metadata !16568, metadata !DIExpression()), !dbg !16572
  call void @llvm.dbg.value(metadata i32 undef, metadata !16324, metadata !DIExpression()) #23, !dbg !16586
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16329, metadata !DIExpression()) #23, !dbg !16586
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16588
  br i1 %7, label %9, label %8, !dbg !16589

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.315, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.310, i32 0, i32 0), i32 noundef 194) #24, !dbg !16590
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.316, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16590
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.310, i32 0, i32 0), i32 noundef 194) #24, !dbg !16590
  unreachable, !dbg !16590

9:                                                ; preds = %5
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !16576
  call void @llvm.dbg.value(metadata i32 %10, metadata !16263, metadata !DIExpression()) #23, !dbg !16578
  call void @llvm.dbg.value(metadata i32 %10, metadata !16257, metadata !DIExpression()) #23, !dbg !16574
  call void @llvm.dbg.value(metadata i32 %10, metadata !16571, metadata !DIExpression()), !dbg !16573
  call void @llvm.dbg.value(metadata i32 undef, metadata !16324, metadata !DIExpression()) #23, !dbg !16586
  call void @llvm.dbg.value(metadata i32 undef, metadata !16338, metadata !DIExpression()) #23, !dbg !16591
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !16593, !srcloc !16344
  call void @llvm.dbg.value(metadata i64 %6, metadata !16568, metadata !DIExpression()), !dbg !16572
  call void @llvm.dbg.value(metadata i32 undef, metadata !16569, metadata !DIExpression()), !dbg !16573
  ret i64 %6, !dbg !16594
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !16595 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16597, metadata !DIExpression()), !dbg !16601
  call void @llvm.dbg.value(metadata i64 0, metadata !16598, metadata !DIExpression()), !dbg !16601
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.325(%struct._timeout* noundef %0) #25, !dbg !16602
  br i1 %2, label %21, label %3, !dbg !16604

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #25, !dbg !16605
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !16599, metadata !DIExpression()), !dbg !16606
  call void @llvm.dbg.value(metadata i64 0, metadata !16598, metadata !DIExpression()), !dbg !16601
  %5 = icmp eq %struct._timeout* %4, null, !dbg !16607
  br i1 %5, label %16, label %6, !dbg !16609

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !16599, metadata !DIExpression()), !dbg !16606
  call void @llvm.dbg.value(metadata i64 %8, metadata !16598, metadata !DIExpression()), !dbg !16601
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !16610
  %10 = load i64, i64* %9, align 8, !dbg !16610
  %11 = add nsw i64 %10, %8, !dbg !16612
  call void @llvm.dbg.value(metadata i64 %11, metadata !16598, metadata !DIExpression()), !dbg !16601
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !16613
  br i1 %12, label %16, label %13, !dbg !16615

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #25, !dbg !16616
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !16599, metadata !DIExpression()), !dbg !16606
  call void @llvm.dbg.value(metadata i64 %11, metadata !16598, metadata !DIExpression()), !dbg !16601
  %15 = icmp eq %struct._timeout* %14, null, !dbg !16607
  br i1 %15, label %16, label %6, !dbg !16609, !llvm.loop !16617

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !16601
  call void @llvm.dbg.value(metadata i64 %17, metadata !16598, metadata !DIExpression()), !dbg !16601
  %18 = tail call fastcc i32 @elapsed.312() #25, !dbg !16619
  %19 = sext i32 %18 to i64, !dbg !16619
  %20 = sub nsw i64 %17, %19, !dbg !16620
  br label %21, !dbg !16621

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !16601
  ret i64 %22, !dbg !16622
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.325(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16623 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16627, metadata !DIExpression()), !dbg !16628
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16629
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.304(%struct._dnode* noundef %2) #25, !dbg !16630
  %4 = xor i1 %3, true, !dbg !16631
  ret i1 %4, !dbg !16632
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16633 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16635, metadata !DIExpression()), !dbg !16640
  call void @llvm.dbg.value(metadata i64 0, metadata !16636, metadata !DIExpression()), !dbg !16640
  call void @llvm.dbg.value(metadata i32 0, metadata !16637, metadata !DIExpression()), !dbg !16641
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16251, metadata !DIExpression()) #23, !dbg !16642
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16644, !srcloc !16266
  call void @llvm.dbg.value(metadata i32 undef, metadata !16263, metadata !DIExpression()) #23, !dbg !16646
  call void @llvm.dbg.value(metadata i32 undef, metadata !16264, metadata !DIExpression()) #23, !dbg !16646
  call void @llvm.dbg.value(metadata i32 undef, metadata !16257, metadata !DIExpression()) #23, !dbg !16642
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16647
  br i1 %3, label %5, label %4, !dbg !16648

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.309, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.310, i32 0, i32 0), i32 noundef 148) #24, !dbg !16649
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.311, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16649
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.310, i32 0, i32 0), i32 noundef 148) #24, !dbg !16649
  unreachable, !dbg !16649

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16263, metadata !DIExpression()) #23, !dbg !16646
  call void @llvm.dbg.value(metadata i32 undef, metadata !16257, metadata !DIExpression()) #23, !dbg !16642
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16650
  call void @llvm.dbg.value(metadata i32 undef, metadata !16639, metadata !DIExpression()), !dbg !16641
  call void @llvm.dbg.value(metadata i64 0, metadata !16636, metadata !DIExpression()), !dbg !16640
  call void @llvm.dbg.value(metadata i32 undef, metadata !16637, metadata !DIExpression()), !dbg !16641
  %6 = load i64, i64* @curr_tick, align 8, !dbg !16651
  %7 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #25, !dbg !16654
  call void @llvm.dbg.value(metadata !DIArgList(i64 %6, i64 %7), metadata !16636, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16640
  call void @llvm.dbg.value(metadata i32 undef, metadata !16324, metadata !DIExpression()) #23, !dbg !16655
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16329, metadata !DIExpression()) #23, !dbg !16655
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16657
  br i1 %8, label %10, label %9, !dbg !16658

9:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.315, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.310, i32 0, i32 0), i32 noundef 194) #24, !dbg !16659
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.316, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16659
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.310, i32 0, i32 0), i32 noundef 194) #24, !dbg !16659
  unreachable, !dbg !16659

10:                                               ; preds = %5
  %11 = extractvalue { i32, i32 } %2, 0, !dbg !16644
  call void @llvm.dbg.value(metadata i32 %11, metadata !16263, metadata !DIExpression()) #23, !dbg !16646
  call void @llvm.dbg.value(metadata i32 %11, metadata !16257, metadata !DIExpression()) #23, !dbg !16642
  call void @llvm.dbg.value(metadata i32 %11, metadata !16639, metadata !DIExpression()), !dbg !16641
  call void @llvm.dbg.value(metadata !DIArgList(i64 %7, i64 %6), metadata !16636, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16640
  call void @llvm.dbg.value(metadata i32 undef, metadata !16324, metadata !DIExpression()) #23, !dbg !16655
  call void @llvm.dbg.value(metadata i32 undef, metadata !16338, metadata !DIExpression()) #23, !dbg !16660
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !16662, !srcloc !16344
  call void @llvm.dbg.value(metadata i32 undef, metadata !16637, metadata !DIExpression()), !dbg !16641
  %12 = add i64 %7, %6, !dbg !16663
  ret i64 %12, !dbg !16664
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !16665 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !16667, metadata !DIExpression()), !dbg !16671
  call void @llvm.dbg.value(metadata i32 0, metadata !16668, metadata !DIExpression()), !dbg !16672
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16251, metadata !DIExpression()) #23, !dbg !16673
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16675, !srcloc !16266
  call void @llvm.dbg.value(metadata i32 undef, metadata !16263, metadata !DIExpression()) #23, !dbg !16677
  call void @llvm.dbg.value(metadata i32 undef, metadata !16264, metadata !DIExpression()) #23, !dbg !16677
  call void @llvm.dbg.value(metadata i32 undef, metadata !16257, metadata !DIExpression()) #23, !dbg !16673
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16678
  br i1 %2, label %4, label %3, !dbg !16679

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.309, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.310, i32 0, i32 0), i32 noundef 148) #24, !dbg !16680
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.311, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16680
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.310, i32 0, i32 0), i32 noundef 148) #24, !dbg !16680
  unreachable, !dbg !16680

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16263, metadata !DIExpression()) #23, !dbg !16677
  call void @llvm.dbg.value(metadata i32 undef, metadata !16257, metadata !DIExpression()) #23, !dbg !16673
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16681
  call void @llvm.dbg.value(metadata i32 undef, metadata !16670, metadata !DIExpression()), !dbg !16672
  call void @llvm.dbg.value(metadata i32 -1, metadata !16667, metadata !DIExpression()), !dbg !16671
  call void @llvm.dbg.value(metadata i32 undef, metadata !16668, metadata !DIExpression()), !dbg !16672
  %5 = tail call fastcc i32 @next_timeout() #25, !dbg !16682
  call void @llvm.dbg.value(metadata i32 %5, metadata !16667, metadata !DIExpression()), !dbg !16671
  call void @llvm.dbg.value(metadata i32 undef, metadata !16324, metadata !DIExpression()) #23, !dbg !16685
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16329, metadata !DIExpression()) #23, !dbg !16685
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16687
  br i1 %6, label %8, label %7, !dbg !16688

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.315, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.310, i32 0, i32 0), i32 noundef 194) #24, !dbg !16689
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.316, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16689
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.310, i32 0, i32 0), i32 noundef 194) #24, !dbg !16689
  unreachable, !dbg !16689

8:                                                ; preds = %4
  %9 = extractvalue { i32, i32 } %1, 0, !dbg !16675
  call void @llvm.dbg.value(metadata i32 %9, metadata !16263, metadata !DIExpression()) #23, !dbg !16677
  call void @llvm.dbg.value(metadata i32 %9, metadata !16257, metadata !DIExpression()) #23, !dbg !16673
  call void @llvm.dbg.value(metadata i32 %9, metadata !16670, metadata !DIExpression()), !dbg !16672
  call void @llvm.dbg.value(metadata i32 undef, metadata !16324, metadata !DIExpression()) #23, !dbg !16685
  call void @llvm.dbg.value(metadata i32 undef, metadata !16338, metadata !DIExpression()) #23, !dbg !16690
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !16692, !srcloc !16344
  call void @llvm.dbg.value(metadata i32 %5, metadata !16667, metadata !DIExpression()), !dbg !16671
  call void @llvm.dbg.value(metadata i32 undef, metadata !16668, metadata !DIExpression()), !dbg !16672
  ret i32 %5, !dbg !16693
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !16694 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16696, metadata !DIExpression()), !dbg !16706
  call void @llvm.dbg.value(metadata i1 %1, metadata !16697, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16706
  call void @llvm.dbg.value(metadata i32 0, metadata !16698, metadata !DIExpression()), !dbg !16707
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16251, metadata !DIExpression()) #23, !dbg !16708
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16710, !srcloc !16266
  call void @llvm.dbg.value(metadata i32 undef, metadata !16263, metadata !DIExpression()) #23, !dbg !16712
  call void @llvm.dbg.value(metadata i32 undef, metadata !16264, metadata !DIExpression()) #23, !dbg !16712
  call void @llvm.dbg.value(metadata i32 undef, metadata !16257, metadata !DIExpression()) #23, !dbg !16708
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16713
  br i1 %4, label %6, label %5, !dbg !16714

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.309, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.310, i32 0, i32 0), i32 noundef 148) #24, !dbg !16715
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.311, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16715
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.310, i32 0, i32 0), i32 noundef 148) #24, !dbg !16715
  unreachable, !dbg !16715

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !16263, metadata !DIExpression()) #23, !dbg !16712
  call void @llvm.dbg.value(metadata i32 undef, metadata !16257, metadata !DIExpression()) #23, !dbg !16708
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16716
  call void @llvm.dbg.value(metadata i32 undef, metadata !16700, metadata !DIExpression()), !dbg !16707
  call void @llvm.dbg.value(metadata i32 undef, metadata !16698, metadata !DIExpression()), !dbg !16707
  %7 = tail call fastcc i32 @next_timeout() #25, !dbg !16717
  call void @llvm.dbg.value(metadata i32 %7, metadata !16701, metadata !DIExpression()), !dbg !16718
  call void @llvm.dbg.value(metadata i1 undef, metadata !16704, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16718
  %8 = icmp slt i32 %7, 2, !dbg !16719
  call void @llvm.dbg.value(metadata i1 %8, metadata !16705, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16718
  %9 = icmp slt i32 %7, %0
  %10 = or i1 %8, %9, !dbg !16720
  call void @llvm.dbg.value(metadata i1 %9, metadata !16704, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16718
  br i1 %10, label %14, label %11, !dbg !16720

11:                                               ; preds = %6
  %12 = icmp sgt i32 %7, %0, !dbg !16722
  %13 = select i1 %12, i32 %0, i32 %7, !dbg !16722
  tail call void @sys_clock_set_timeout(i32 noundef %13, i1 noundef zeroext %1) #24, !dbg !16724
  br label %14, !dbg !16725

14:                                               ; preds = %11, %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !16324, metadata !DIExpression()) #23, !dbg !16726
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16329, metadata !DIExpression()) #23, !dbg !16726
  %15 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16728
  br i1 %15, label %17, label %16, !dbg !16729

16:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.315, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.310, i32 0, i32 0), i32 noundef 194) #24, !dbg !16730
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.316, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16730
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.310, i32 0, i32 0), i32 noundef 194) #24, !dbg !16730
  unreachable, !dbg !16730

17:                                               ; preds = %14
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !16710
  call void @llvm.dbg.value(metadata i32 %18, metadata !16263, metadata !DIExpression()) #23, !dbg !16712
  call void @llvm.dbg.value(metadata i32 %18, metadata !16257, metadata !DIExpression()) #23, !dbg !16708
  call void @llvm.dbg.value(metadata i32 %18, metadata !16700, metadata !DIExpression()), !dbg !16707
  call void @llvm.dbg.value(metadata i32 undef, metadata !16324, metadata !DIExpression()) #23, !dbg !16726
  call void @llvm.dbg.value(metadata i32 undef, metadata !16338, metadata !DIExpression()) #23, !dbg !16731
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !16733, !srcloc !16344
  call void @llvm.dbg.value(metadata i32 1, metadata !16698, metadata !DIExpression()), !dbg !16707
  call void @llvm.dbg.value(metadata i32 undef, metadata !16698, metadata !DIExpression()), !dbg !16707
  ret void, !dbg !16734
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !16735 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16739, metadata !DIExpression()), !dbg !16744
  tail call void @z_time_slice(i32 noundef %0) #24, !dbg !16745
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16251, metadata !DIExpression()) #23, !dbg !16746
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16748, !srcloc !16266
  call void @llvm.dbg.value(metadata i32 undef, metadata !16263, metadata !DIExpression()) #23, !dbg !16750
  call void @llvm.dbg.value(metadata i32 undef, metadata !16264, metadata !DIExpression()) #23, !dbg !16750
  call void @llvm.dbg.value(metadata i32 undef, metadata !16257, metadata !DIExpression()) #23, !dbg !16746
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16751
  br i1 %3, label %5, label %4, !dbg !16752

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.309, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.310, i32 0, i32 0), i32 noundef 148) #24, !dbg !16753
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.311, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16753
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.310, i32 0, i32 0), i32 noundef 148) #24, !dbg !16753
  unreachable, !dbg !16753

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16263, metadata !DIExpression()) #23, !dbg !16750
  call void @llvm.dbg.value(metadata i32 undef, metadata !16257, metadata !DIExpression()) #23, !dbg !16746
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16754
  call void @llvm.dbg.value(metadata i32 undef, metadata !16740, metadata !DIExpression()), !dbg !16744
  store i32 %0, i32* @announce_remaining, align 4, !dbg !16744
  call void @llvm.dbg.value(metadata i32 undef, metadata !16740, metadata !DIExpression()), !dbg !16744
  %6 = tail call fastcc %struct._timeout* @first() #25, !dbg !16755
  %7 = icmp eq %struct._timeout* %6, null, !dbg !16756
  br i1 %7, label %37, label %8, !dbg !16757

8:                                                ; preds = %5, %30
  %9 = phi %struct._timeout* [ %33, %30 ], [ %6, %5 ]
  %10 = phi { i32, i32 } [ %27, %30 ], [ %2, %5 ]
  %11 = phi i32 [ %32, %30 ], [ %0, %5 ]
  %12 = extractvalue { i32, i32 } %10, 0, !dbg !16744
  %13 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 2, !dbg !16758
  %14 = load i64, i64* %13, align 8, !dbg !16758
  %15 = sext i32 %11 to i64, !dbg !16759
  %16 = icmp sgt i64 %14, %15, !dbg !16760
  br i1 %16, label %35, label %17, !dbg !16761

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct._timeout* %9, metadata !16741, metadata !DIExpression()), !dbg !16762
  %18 = trunc i64 %14 to i32, !dbg !16763
  call void @llvm.dbg.value(metadata i32 %18, metadata !16743, metadata !DIExpression()), !dbg !16762
  %19 = sext i32 %18 to i64, !dbg !16764
  %20 = load i64, i64* @curr_tick, align 8, !dbg !16765
  %21 = add i64 %20, %19, !dbg !16765
  store i64 %21, i64* @curr_tick, align 8, !dbg !16765
  store i64 0, i64* %13, align 8, !dbg !16766
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %9) #25, !dbg !16767
  call void @llvm.dbg.value(metadata i32 undef, metadata !16324, metadata !DIExpression()) #23, !dbg !16768
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16329, metadata !DIExpression()) #23, !dbg !16768
  %22 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16770
  br i1 %22, label %24, label %23, !dbg !16771

23:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.315, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.310, i32 0, i32 0), i32 noundef 194) #24, !dbg !16772
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.316, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16772
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.310, i32 0, i32 0), i32 noundef 194) #24, !dbg !16772
  unreachable, !dbg !16772

24:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %12, metadata !16324, metadata !DIExpression()) #23, !dbg !16768
  call void @llvm.dbg.value(metadata i32 %12, metadata !16338, metadata !DIExpression()) #23, !dbg !16773
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !16775, !srcloc !16344
  %25 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 1, !dbg !16776
  %26 = load void (%struct._timeout*)*, void (%struct._timeout*)** %25, align 8, !dbg !16776
  tail call void %26(%struct._timeout* noundef nonnull %9) #24, !dbg !16777
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16251, metadata !DIExpression()) #23, !dbg !16778
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16780, !srcloc !16266
  call void @llvm.dbg.value(metadata i32 undef, metadata !16263, metadata !DIExpression()) #23, !dbg !16782
  call void @llvm.dbg.value(metadata i32 undef, metadata !16264, metadata !DIExpression()) #23, !dbg !16782
  call void @llvm.dbg.value(metadata i32 undef, metadata !16257, metadata !DIExpression()) #23, !dbg !16778
  %28 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16783
  br i1 %28, label %30, label %29, !dbg !16784

29:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.309, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.310, i32 0, i32 0), i32 noundef 148) #24, !dbg !16785
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.311, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16785
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.310, i32 0, i32 0), i32 noundef 148) #24, !dbg !16785
  unreachable, !dbg !16785

30:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !16263, metadata !DIExpression()) #23, !dbg !16782
  call void @llvm.dbg.value(metadata i32 undef, metadata !16257, metadata !DIExpression()) #23, !dbg !16778
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16786
  call void @llvm.dbg.value(metadata i32 undef, metadata !16740, metadata !DIExpression()), !dbg !16744
  %31 = load i32, i32* @announce_remaining, align 4, !dbg !16787
  %32 = sub nsw i32 %31, %18, !dbg !16787
  store i32 %32, i32* @announce_remaining, align 4, !dbg !16744
  call void @llvm.dbg.value(metadata i32 undef, metadata !16740, metadata !DIExpression()), !dbg !16744
  %33 = tail call fastcc %struct._timeout* @first() #25, !dbg !16755
  %34 = icmp eq %struct._timeout* %33, null, !dbg !16756
  br i1 %34, label %37, label %8, !dbg !16757, !llvm.loop !16788

35:                                               ; preds = %8
  %36 = sub nsw i64 %14, %15, !dbg !16790
  store i64 %36, i64* %13, align 8, !dbg !16790
  br label %41, !dbg !16793

37:                                               ; preds = %30, %5
  %38 = phi { i32, i32 } [ %2, %5 ], [ %27, %30 ]
  %39 = phi i32 [ %0, %5 ], [ %32, %30 ], !dbg !16744
  %40 = sext i32 %39 to i64, !dbg !16794
  br label %41, !dbg !16794

41:                                               ; preds = %37, %35
  %42 = phi i64 [ %40, %37 ], [ %15, %35 ], !dbg !16794
  %43 = phi { i32, i32 } [ %38, %37 ], [ %10, %35 ]
  %44 = load i64, i64* @curr_tick, align 8, !dbg !16795
  %45 = add i64 %44, %42, !dbg !16795
  store i64 %45, i64* @curr_tick, align 8, !dbg !16795
  store i32 0, i32* @announce_remaining, align 4, !dbg !16796
  %46 = tail call fastcc i32 @next_timeout() #25, !dbg !16797
  tail call void @sys_clock_set_timeout(i32 noundef %46, i1 noundef zeroext false) #24, !dbg !16798
  call void @llvm.dbg.value(metadata i32 undef, metadata !16324, metadata !DIExpression()) #23, !dbg !16799
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16329, metadata !DIExpression()) #23, !dbg !16799
  %47 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16801
  br i1 %47, label %49, label %48, !dbg !16802

48:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.315, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.310, i32 0, i32 0), i32 noundef 194) #24, !dbg !16803
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.316, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16803
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.310, i32 0, i32 0), i32 noundef 194) #24, !dbg !16803
  unreachable, !dbg !16803

49:                                               ; preds = %41
  %50 = extractvalue { i32, i32 } %43, 0, !dbg !16744
  call void @llvm.dbg.value(metadata i32 %50, metadata !16324, metadata !DIExpression()) #23, !dbg !16799
  call void @llvm.dbg.value(metadata i32 %50, metadata !16338, metadata !DIExpression()) #23, !dbg !16804
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %50) #23, !dbg !16806, !srcloc !16344
  ret void, !dbg !16807
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !16808 {
  call void @llvm.dbg.value(metadata i64 0, metadata !16812, metadata !DIExpression()), !dbg !16816
  call void @llvm.dbg.value(metadata i32 0, metadata !16813, metadata !DIExpression()), !dbg !16817
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16251, metadata !DIExpression()) #23, !dbg !16818
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16820, !srcloc !16266
  call void @llvm.dbg.value(metadata i32 undef, metadata !16263, metadata !DIExpression()) #23, !dbg !16822
  call void @llvm.dbg.value(metadata i32 undef, metadata !16264, metadata !DIExpression()) #23, !dbg !16822
  call void @llvm.dbg.value(metadata i32 undef, metadata !16257, metadata !DIExpression()) #23, !dbg !16818
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16823
  br i1 %2, label %4, label %3, !dbg !16824

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.309, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.310, i32 0, i32 0), i32 noundef 148) #24, !dbg !16825
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.311, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16825
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.310, i32 0, i32 0), i32 noundef 148) #24, !dbg !16825
  unreachable, !dbg !16825

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16263, metadata !DIExpression()) #23, !dbg !16822
  call void @llvm.dbg.value(metadata i32 undef, metadata !16257, metadata !DIExpression()) #23, !dbg !16818
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16826
  call void @llvm.dbg.value(metadata i32 undef, metadata !16815, metadata !DIExpression()), !dbg !16817
  call void @llvm.dbg.value(metadata i64 0, metadata !16812, metadata !DIExpression()), !dbg !16816
  call void @llvm.dbg.value(metadata i32 undef, metadata !16813, metadata !DIExpression()), !dbg !16817
  %5 = load i64, i64* @curr_tick, align 8, !dbg !16827
  %6 = tail call fastcc i32 @elapsed.312() #25, !dbg !16830
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !16812, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !16816
  call void @llvm.dbg.value(metadata i32 undef, metadata !16324, metadata !DIExpression()) #23, !dbg !16831
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16329, metadata !DIExpression()) #23, !dbg !16831
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16833
  br i1 %7, label %9, label %8, !dbg !16834

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.315, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.310, i32 0, i32 0), i32 noundef 194) #24, !dbg !16835
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.316, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #24, !dbg !16835
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.310, i32 0, i32 0), i32 noundef 194) #24, !dbg !16835
  unreachable, !dbg !16835

9:                                                ; preds = %4
  %10 = extractvalue { i32, i32 } %1, 0, !dbg !16820
  call void @llvm.dbg.value(metadata i32 %10, metadata !16263, metadata !DIExpression()) #23, !dbg !16822
  call void @llvm.dbg.value(metadata i32 %10, metadata !16257, metadata !DIExpression()) #23, !dbg !16818
  call void @llvm.dbg.value(metadata i32 %10, metadata !16815, metadata !DIExpression()), !dbg !16817
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !16812, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !16816
  call void @llvm.dbg.value(metadata !DIArgList(i32 %6, i64 %5), metadata !16812, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16816
  call void @llvm.dbg.value(metadata i32 undef, metadata !16324, metadata !DIExpression()) #23, !dbg !16831
  call void @llvm.dbg.value(metadata i32 undef, metadata !16338, metadata !DIExpression()) #23, !dbg !16836
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !16838, !srcloc !16344
  call void @llvm.dbg.value(metadata i32 undef, metadata !16813, metadata !DIExpression()), !dbg !16817
  %11 = sext i32 %6 to i64, !dbg !16830
  %12 = add i64 %5, %11, !dbg !16839
  ret i64 %12, !dbg !16840
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !16841 {
  %1 = tail call i64 @sys_clock_tick_get() #25, !dbg !16842
  %2 = trunc i64 %1 to i32, !dbg !16843
  ret i32 %2, !dbg !16844
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !16845 {
  %1 = tail call i64 @sys_clock_tick_get() #25, !dbg !16846
  ret i64 %1, !dbg !16847
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !16848 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16850, metadata !DIExpression()), !dbg !16857
  %2 = icmp eq i32 %0, 0, !dbg !16858
  br i1 %2, label %10, label %3, !dbg !16860

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32.332() #25, !dbg !16861
  call void @llvm.dbg.value(metadata i32 %4, metadata !16851, metadata !DIExpression()), !dbg !16857
  %5 = mul i32 %0, 168, !dbg !16862
  call void @llvm.dbg.value(metadata i32 %5, metadata !16852, metadata !DIExpression()), !dbg !16857
  br label %6, !dbg !16863

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32.332() #25, !dbg !16864
  call void @llvm.dbg.value(metadata i32 %7, metadata !16853, metadata !DIExpression()), !dbg !16865
  %8 = sub i32 %7, %4, !dbg !16866
  %9 = icmp ult i32 %8, %5, !dbg !16868
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !16869
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32.332() unnamed_addr #1 !dbg !16870 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32.333() #25, !dbg !16871
  ret i32 %1, !dbg !16872
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32.333() unnamed_addr #1 !dbg !16873 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #24, !dbg !16874
  ret i32 %1, !dbg !16875
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !16876 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16880, metadata !DIExpression()), !dbg !16882
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !16883

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #25, !dbg !16884
  br label %14, !dbg !16888

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !16881, metadata !DIExpression()), !dbg !16882
  %6 = icmp slt i64 %2, -1, !dbg !16889
  br i1 %6, label %7, label %9, !dbg !16892

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !16893
  br label %14, !dbg !16894

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #25, !dbg !16896
  %11 = icmp ugt i64 %2, 1, !dbg !16897
  %12 = select i1 %11, i64 %2, i64 1, !dbg !16897
  %13 = add nsw i64 %10, %12, !dbg !16898
  br label %14, !dbg !16899

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !16900
  ret i64 %15, !dbg !16901
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !16902 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.336, i32 0, i32 0)) #24, !dbg !16904
  ret void, !dbg !16905
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nofree nosync nounwind willreturn }
attributes #4 = { argmemonly nofree nounwind willreturn writeonly }
attributes #5 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { nofree nosync nounwind willreturn }
attributes #8 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin nounwind optsize "no-builtins" }
attributes #25 = { nobuiltin optsize "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #27 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #28 = { nounwind readnone }
attributes #29 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!803, !2, !2510, !27, !270, !295, !2512, !2514, !2548, !2550, !305, !356, !2552, !2555, !2566, !2612, !2614, !2642, !2670, !2713, !2785, !2830, !385, !528, !2858, !564, !2863, !574, !599, !849, !2866, !986, !1052, !1391, !1695, !2905, !1810, !1900, !2907, !2993, !3058, !1950, !3061, !1957, !2333, !3079, !2353, !3081, !2471, !3084}
!llvm.ident = !{!3086, !3086, !3086, !3086, !3086, !3086, !3086, !3086, !3086, !3086, !3086, !3086, !3086, !3086, !3086, !3086, !3086, !3086, !3086, !3086, !3086, !3086, !3086, !3086, !3086, !3086, !3086, !3086, !3086, !3086, !3086, !3086, !3086, !3086, !3086, !3086, !3086, !3086, !3086, !3086, !3086, !3086, !3086, !3086, !3086, !3086, !3086, !3086, !3086, !3086}
!llvm.module.flags = !{!3087, !3088, !3089, !3090, !3091, !3092, !3093, !3094, !3095}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pi/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pi")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 103, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pi")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 5824, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 91)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 2912, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "tthread", scope: !27, file: !125, line: 29, type: !141, isLocal: true, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !122, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/arch/smp/pi/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pi")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !106, !108, !113, !114, !118, !119, !120}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!103 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !104, line: 22, baseType: !105)
!104 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!105 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!107 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!108 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !109, line: 46, baseType: !110)
!109 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !111, size: 32)
!111 = !DISubroutineType(types: !112)
!112 = !{null, !113, !113, !113}
!113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!114 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !115, line: 46, baseType: !116)
!115 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!116 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !117)
!117 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!118 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!119 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!120 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !121)
!121 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!122 = !{!123, !25, !134, !139}
!123 = !DIGlobalVariableExpression(var: !124, expr: !DIExpression())
!124 = distinct !DIGlobalVariable(name: "tstack", scope: !27, file: !125, line: 28, type: !126, isLocal: true, isDefinition: true, align: 512)
!125 = !DIFile(filename: "zephyr/samples/arch/smp/pi/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!126 = !DICompositeType(tag: DW_TAG_array_type, baseType: !127, size: 573440, elements: !131)
!127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !128, line: 47, size: 8, elements: !129)
!128 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!129 = !{!130}
!130 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !127, file: !128, line: 48, baseType: !107, size: 8)
!131 = !{!132, !133}
!132 = !DISubrange(count: 16)
!133 = !DISubrange(count: 4480)
!134 = !DIGlobalVariableExpression(var: !135, expr: !DIExpression())
!135 = distinct !DIGlobalVariable(name: "buffer", scope: !27, file: !125, line: 30, type: !136, isLocal: true, isDefinition: true)
!136 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, size: 30848, elements: !137)
!137 = !{!132, !138}
!138 = !DISubrange(count: 241)
!139 = !DIGlobalVariableExpression(var: !140, expr: !DIExpression())
!140 = distinct !DIGlobalVariable(name: "counter", scope: !27, file: !125, line: 31, type: !103, isLocal: true, isDefinition: true)
!141 = !DICompositeType(tag: DW_TAG_array_type, baseType: !142, size: 20480, elements: !267)
!142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !143, line: 245, size: 1280, elements: !144)
!143 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!144 = !{!145, !214, !227, !228, !229, !233, !234, !242, !262}
!145 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !142, file: !143, line: 247, baseType: !146, size: 384)
!146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !143, line: 57, size: 384, elements: !147)
!147 = !{!148, !176, !184, !187, !188, !201, !202, !203}
!148 = !DIDerivedType(tag: DW_TAG_member, scope: !146, file: !143, line: 60, baseType: !149, size: 64)
!149 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !146, file: !143, line: 60, size: 64, elements: !150)
!150 = !{!151, !167}
!151 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !149, file: !143, line: 61, baseType: !152, size: 64)
!152 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !153, line: 49, baseType: !154)
!153 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !155)
!155 = !{!156, !162}
!156 = !DIDerivedType(tag: DW_TAG_member, scope: !154, file: !153, line: 38, baseType: !157, size: 32)
!157 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !154, file: !153, line: 38, size: 32, elements: !158)
!158 = !{!159, !161}
!159 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !157, file: !153, line: 39, baseType: !160, size: 32)
!160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 32)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !157, file: !153, line: 40, baseType: !160, size: 32)
!162 = !DIDerivedType(tag: DW_TAG_member, scope: !154, file: !153, line: 42, baseType: !163, size: 32, offset: 32)
!163 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !154, file: !153, line: 42, size: 32, elements: !164)
!164 = !{!165, !166}
!165 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !163, file: !153, line: 43, baseType: !160, size: 32)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !163, file: !153, line: 44, baseType: !160, size: 32)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !149, file: !143, line: 62, baseType: !168, size: 64)
!168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !169, line: 49, size: 64, elements: !170)
!169 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!170 = !{!171}
!171 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !168, file: !169, line: 50, baseType: !172, size: 64)
!172 = !DICompositeType(tag: DW_TAG_array_type, baseType: !173, size: 64, elements: !174)
!173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !168, size: 32)
!174 = !{!175}
!175 = !DISubrange(count: 2)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !146, file: !143, line: 68, baseType: !177, size: 32, offset: 64)
!177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !178, size: 32)
!178 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !179, line: 233, baseType: !180)
!179 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!180 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !179, line: 231, size: 64, elements: !181)
!181 = !{!182}
!182 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !180, file: !179, line: 232, baseType: !183, size: 64)
!183 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !154)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !146, file: !143, line: 71, baseType: !185, size: 8, offset: 96)
!185 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !186)
!186 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !146, file: !143, line: 74, baseType: !185, size: 8, offset: 104)
!188 = !DIDerivedType(tag: DW_TAG_member, scope: !146, file: !143, line: 90, baseType: !189, size: 16, offset: 112)
!189 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !146, file: !143, line: 90, size: 16, elements: !190)
!190 = !{!191, !198}
!191 = !DIDerivedType(tag: DW_TAG_member, scope: !189, file: !143, line: 91, baseType: !192, size: 16)
!192 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !189, file: !143, line: 91, size: 16, elements: !193)
!193 = !{!194, !197}
!194 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !192, file: !143, line: 96, baseType: !195, size: 8)
!195 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !196)
!196 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !192, file: !143, line: 97, baseType: !185, size: 8, offset: 8)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !189, file: !143, line: 100, baseType: !199, size: 16)
!199 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !200)
!200 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !146, file: !143, line: 107, baseType: !118, size: 32, offset: 128)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !146, file: !143, line: 127, baseType: !113, size: 32, offset: 160)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !146, file: !143, line: 131, baseType: !204, size: 192, offset: 192)
!204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !179, line: 244, size: 192, elements: !205)
!205 = !{!206, !207, !213}
!206 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !204, file: !179, line: 245, baseType: !152, size: 64)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !204, file: !179, line: 246, baseType: !208, size: 32, offset: 64)
!208 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !179, line: 242, baseType: !209)
!209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 32)
!210 = !DISubroutineType(types: !211)
!211 = !{null, !212}
!212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !204, size: 32)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !204, file: !179, line: 249, baseType: !116, size: 64, offset: 128)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !142, file: !143, line: 250, baseType: !215, size: 288, offset: 384)
!215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !217)
!216 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!217 = !{!218, !219, !220, !221, !222, !223, !224, !225, !226}
!218 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !215, file: !216, line: 26, baseType: !118, size: 32)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !215, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !215, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !215, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !215, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !215, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !215, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !215, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !215, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !142, file: !143, line: 253, baseType: !113, size: 32, offset: 672)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !142, file: !143, line: 256, baseType: !178, size: 64, offset: 704)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !142, file: !143, line: 279, baseType: !230, size: 256, offset: 768)
!230 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, size: 256, elements: !231)
!231 = !{!232}
!232 = !DISubrange(count: 32)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !142, file: !143, line: 294, baseType: !119, size: 32, offset: 1024)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !142, file: !143, line: 300, baseType: !235, size: 96, offset: 1056)
!235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !143, line: 149, size: 96, elements: !236)
!236 = !{!237, !238, !241}
!237 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !235, file: !143, line: 153, baseType: !22, size: 32)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !235, file: !143, line: 162, baseType: !239, size: 32, offset: 32)
!239 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !240, line: 214, baseType: !32)
!240 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!241 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !235, file: !143, line: 168, baseType: !239, size: 32, offset: 64)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !142, file: !143, line: 325, baseType: !243, size: 32, offset: 1152)
!243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !244, size: 32)
!244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !245, line: 5073, size: 192, elements: !246)
!245 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!246 = !{!247, !256, !257}
!247 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !244, file: !245, line: 5074, baseType: !248, size: 96)
!248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !249, line: 56, size: 96, elements: !250)
!249 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!250 = !{!251, !254, !255}
!251 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !248, file: !249, line: 57, baseType: !252, size: 32)
!252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !253, size: 32)
!253 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !249, line: 57, flags: DIFlagFwdDecl)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !248, file: !249, line: 58, baseType: !113, size: 32, offset: 32)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !248, file: !249, line: 59, baseType: !239, size: 32, offset: 64)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !244, file: !245, line: 5075, baseType: !178, size: 64, offset: 96)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !244, file: !245, line: 5076, baseType: !258, size: 32, offset: 160)
!258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !260)
!259 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!260 = !{!261}
!261 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !258, file: !259, line: 52, baseType: !22, size: 32)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !142, file: !143, line: 343, baseType: !263, size: 64, offset: 1184)
!263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !216, line: 60, size: 64, elements: !264)
!264 = !{!265, !266}
!265 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !263, file: !216, line: 63, baseType: !118, size: 32)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !263, file: !216, line: 66, baseType: !118, size: 32, offset: 32)
!267 = !{!132}
!268 = !DIGlobalVariableExpression(var: !269, expr: !DIExpression())
!269 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !270, file: !286, line: 18, type: !287, isLocal: false, isDefinition: true)
!270 = distinct !DICompileUnit(language: DW_LANG_C99, file: !271, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !272, globals: !285, splitDebugInlining: false, nameTableKind: None)
!271 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pi")
!272 = !{!22, !113, !24, !273, !275, !277, !239, !119, !280, !281, !282, !283, !106, !284, !199, !278}
!273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !274, size: 32)
!274 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !276, size: 32)
!276 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 32)
!278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !279, size: 32)
!279 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !107)
!280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !119, size: 32)
!281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !105, size: 32)
!282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 32)
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 32)
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 32)
!285 = !{!268}
!286 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!287 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !288)
!288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !289, line: 16, size: 64, elements: !290)
!289 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!290 = !{!291, !292}
!291 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !288, file: !289, line: 17, baseType: !278, size: 32)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !288, file: !289, line: 18, baseType: !185, size: 8, offset: 32)
!293 = !DIGlobalVariableExpression(var: !294, expr: !DIExpression())
!294 = distinct !DIGlobalVariable(name: "_char_out", scope: !295, file: !299, line: 54, type: !300, isLocal: false, isDefinition: true)
!295 = distinct !DICompileUnit(language: DW_LANG_C99, file: !296, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !297, globals: !298, splitDebugInlining: false, nameTableKind: None)
!296 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pi")
!297 = !{!113, !119}
!298 = !{!293}
!299 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !301, size: 32)
!301 = !DISubroutineType(types: !302)
!302 = !{!119, !119}
!303 = !DIGlobalVariableExpression(var: !304, expr: !DIExpression())
!304 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !305, file: !322, line: 56, type: !323, isLocal: true, isDefinition: true, align: 32)
!305 = distinct !DICompileUnit(language: DW_LANG_C99, file: !306, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !307, globals: !321, splitDebugInlining: false, nameTableKind: None)
!306 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pi")
!307 = !{!308}
!308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !309, size: 32)
!309 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !310, line: 501, baseType: !311)
!310 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f427xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!311 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 492, size: 224, elements: !312)
!312 = !{!313, !315, !316, !317, !318, !319, !320}
!313 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !311, file: !310, line: 494, baseType: !314, size: 32)
!314 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !118)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !311, file: !310, line: 495, baseType: !314, size: 32, offset: 32)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !311, file: !310, line: 496, baseType: !314, size: 32, offset: 64)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !311, file: !310, line: 497, baseType: !314, size: 32, offset: 96)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !311, file: !310, line: 498, baseType: !314, size: 32, offset: 128)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !311, file: !310, line: 499, baseType: !314, size: 32, offset: 160)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !311, file: !310, line: 500, baseType: !314, size: 32, offset: 192)
!321 = !{!303}
!322 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!323 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !324)
!324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !326)
!325 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!326 = !{!327, !353}
!327 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !324, file: !325, line: 60, baseType: !328, size: 32)
!328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !329, size: 32)
!329 = !DISubroutineType(types: !330)
!330 = !{!119, !331}
!331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !332, size: 32)
!332 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !333)
!333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !335)
!334 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!335 = !{!336, !337, !338, !339, !346, !347}
!336 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !333, file: !334, line: 380, baseType: !278, size: 32)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !333, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !333, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !333, file: !334, line: 386, baseType: !340, size: 32, offset: 96)
!340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !341, size: 32)
!341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !342)
!342 = !{!343, !344}
!343 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !341, file: !334, line: 359, baseType: !185, size: 8)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !341, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!345 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !333, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !333, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !349, size: 32)
!349 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !350)
!350 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !334, line: 43, baseType: !351)
!351 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !352)
!352 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !324, file: !325, line: 65, baseType: !331, size: 32, offset: 32)
!354 = !DIGlobalVariableExpression(var: !355, expr: !DIExpression())
!355 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !356, file: !359, line: 71, type: !360, isLocal: true, isDefinition: true, align: 32)
!356 = distinct !DICompileUnit(language: DW_LANG_C99, file: !357, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !358, splitDebugInlining: false, nameTableKind: None)
!357 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pi")
!358 = !{!354}
!359 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!360 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !361)
!361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !362)
!362 = !{!363, !382}
!363 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !361, file: !325, line: 60, baseType: !364, size: 32)
!364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !365, size: 32)
!365 = !DISubroutineType(types: !366)
!366 = !{!119, !367}
!367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !368, size: 32)
!368 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !369)
!369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !370)
!370 = !{!371, !372, !373, !374, !380, !381}
!371 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !369, file: !334, line: 380, baseType: !278, size: 32)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !369, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !369, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !369, file: !334, line: 386, baseType: !375, size: 32, offset: 96)
!375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !376, size: 32)
!376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !377)
!377 = !{!378, !379}
!378 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !376, file: !334, line: 359, baseType: !185, size: 8)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !376, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !369, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !369, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !361, file: !325, line: 65, baseType: !367, size: 32, offset: 32)
!383 = !DIGlobalVariableExpression(var: !384, expr: !DIExpression())
!384 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !385, file: !392, line: 17, type: !521, isLocal: false, isDefinition: true)
!385 = distinct !DICompileUnit(language: DW_LANG_C99, file: !386, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !387, globals: !388, splitDebugInlining: false, nameTableKind: None)
!386 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pi")
!387 = !{!239, !119, !118, !113}
!388 = !{!383, !389, !517}
!389 = !DIGlobalVariableExpression(var: !390, expr: !DIExpression())
!390 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !391, file: !392, line: 198, type: !503, isLocal: true, isDefinition: true)
!391 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !392, file: !392, line: 175, type: !393, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !385, retainedNodes: !498)
!392 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!393 = !DISubroutineType(types: !394)
!394 = !{null, !395}
!395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !396, size: 32)
!396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !143, line: 245, size: 1280, elements: !397)
!397 = !{!398, !456, !468, !469, !470, !471, !472, !478, !493}
!398 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !396, file: !143, line: 247, baseType: !399, size: 384)
!399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !143, line: 57, size: 384, elements: !400)
!400 = !{!401, !425, !432, !433, !434, !443, !444, !445}
!401 = !DIDerivedType(tag: DW_TAG_member, scope: !399, file: !143, line: 60, baseType: !402, size: 64)
!402 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !399, file: !143, line: 60, size: 64, elements: !403)
!403 = !{!404, !419}
!404 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !402, file: !143, line: 61, baseType: !405, size: 64)
!405 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !153, line: 49, baseType: !406)
!406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !407)
!407 = !{!408, !414}
!408 = !DIDerivedType(tag: DW_TAG_member, scope: !406, file: !153, line: 38, baseType: !409, size: 32)
!409 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !406, file: !153, line: 38, size: 32, elements: !410)
!410 = !{!411, !413}
!411 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !409, file: !153, line: 39, baseType: !412, size: 32)
!412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !406, size: 32)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !409, file: !153, line: 40, baseType: !412, size: 32)
!414 = !DIDerivedType(tag: DW_TAG_member, scope: !406, file: !153, line: 42, baseType: !415, size: 32, offset: 32)
!415 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !406, file: !153, line: 42, size: 32, elements: !416)
!416 = !{!417, !418}
!417 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !415, file: !153, line: 43, baseType: !412, size: 32)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !415, file: !153, line: 44, baseType: !412, size: 32)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !402, file: !143, line: 62, baseType: !420, size: 64)
!420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !169, line: 49, size: 64, elements: !421)
!421 = !{!422}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !420, file: !169, line: 50, baseType: !423, size: 64)
!423 = !DICompositeType(tag: DW_TAG_array_type, baseType: !424, size: 64, elements: !174)
!424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !420, size: 32)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !399, file: !143, line: 68, baseType: !426, size: 32, offset: 64)
!426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !427, size: 32)
!427 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !179, line: 233, baseType: !428)
!428 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !179, line: 231, size: 64, elements: !429)
!429 = !{!430}
!430 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !428, file: !179, line: 232, baseType: !431, size: 64)
!431 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !406)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !399, file: !143, line: 71, baseType: !185, size: 8, offset: 96)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !399, file: !143, line: 74, baseType: !185, size: 8, offset: 104)
!434 = !DIDerivedType(tag: DW_TAG_member, scope: !399, file: !143, line: 90, baseType: !435, size: 16, offset: 112)
!435 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !399, file: !143, line: 90, size: 16, elements: !436)
!436 = !{!437, !442}
!437 = !DIDerivedType(tag: DW_TAG_member, scope: !435, file: !143, line: 91, baseType: !438, size: 16)
!438 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !435, file: !143, line: 91, size: 16, elements: !439)
!439 = !{!440, !441}
!440 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !438, file: !143, line: 96, baseType: !195, size: 8)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !438, file: !143, line: 97, baseType: !185, size: 8, offset: 8)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !435, file: !143, line: 100, baseType: !199, size: 16)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !399, file: !143, line: 107, baseType: !118, size: 32, offset: 128)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !399, file: !143, line: 127, baseType: !113, size: 32, offset: 160)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !399, file: !143, line: 131, baseType: !446, size: 192, offset: 192)
!446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !179, line: 244, size: 192, elements: !447)
!447 = !{!448, !449, !455}
!448 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !446, file: !179, line: 245, baseType: !405, size: 64)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !446, file: !179, line: 246, baseType: !450, size: 32, offset: 64)
!450 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !179, line: 242, baseType: !451)
!451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !452, size: 32)
!452 = !DISubroutineType(types: !453)
!453 = !{null, !454}
!454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !446, size: 32)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !446, file: !179, line: 249, baseType: !116, size: 64, offset: 128)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !396, file: !143, line: 250, baseType: !457, size: 288, offset: 384)
!457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !458)
!458 = !{!459, !460, !461, !462, !463, !464, !465, !466, !467}
!459 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !457, file: !216, line: 26, baseType: !118, size: 32)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !457, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !457, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !457, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !457, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !457, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !457, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !457, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !457, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !396, file: !143, line: 253, baseType: !113, size: 32, offset: 672)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !396, file: !143, line: 256, baseType: !427, size: 64, offset: 704)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !396, file: !143, line: 279, baseType: !230, size: 256, offset: 768)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !396, file: !143, line: 294, baseType: !119, size: 32, offset: 1024)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !396, file: !143, line: 300, baseType: !473, size: 96, offset: 1056)
!473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !143, line: 149, size: 96, elements: !474)
!474 = !{!475, !476, !477}
!475 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !473, file: !143, line: 153, baseType: !22, size: 32)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !473, file: !143, line: 162, baseType: !239, size: 32, offset: 32)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !473, file: !143, line: 168, baseType: !239, size: 32, offset: 64)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !396, file: !143, line: 325, baseType: !479, size: 32, offset: 1152)
!479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !480, size: 32)
!480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !245, line: 5073, size: 192, elements: !481)
!481 = !{!482, !488, !489}
!482 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !480, file: !245, line: 5074, baseType: !483, size: 96)
!483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !249, line: 56, size: 96, elements: !484)
!484 = !{!485, !486, !487}
!485 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !483, file: !249, line: 57, baseType: !252, size: 32)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !483, file: !249, line: 58, baseType: !113, size: 32, offset: 32)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !483, file: !249, line: 59, baseType: !239, size: 32, offset: 64)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !480, file: !245, line: 5075, baseType: !427, size: 64, offset: 96)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !480, file: !245, line: 5076, baseType: !490, size: 32, offset: 160)
!490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !491)
!491 = !{!492}
!492 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !490, file: !259, line: 52, baseType: !22, size: 32)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !396, file: !143, line: 343, baseType: !494, size: 64, offset: 1184)
!494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !216, line: 60, size: 64, elements: !495)
!495 = !{!496, !497}
!496 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !494, file: !216, line: 63, baseType: !118, size: 32)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !494, file: !216, line: 66, baseType: !118, size: 32, offset: 32)
!498 = !{!499, !500, !501, !502}
!499 = !DILocalVariable(name: "thread", arg: 1, scope: !391, file: !392, line: 175, type: !395)
!500 = !DILocalVariable(name: "region_num", scope: !391, file: !392, line: 200, type: !185)
!501 = !DILocalVariable(name: "guard_start", scope: !391, file: !392, line: 265, type: !22)
!502 = !DILocalVariable(name: "guard_size", scope: !391, file: !392, line: 266, type: !239)
!503 = !DICompositeType(tag: DW_TAG_array_type, baseType: !504, size: 96, elements: !515)
!504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !505, line: 52, size: 96, elements: !506)
!505 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!506 = !{!507, !508, !509}
!507 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !504, file: !505, line: 53, baseType: !22, size: 32)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !504, file: !505, line: 54, baseType: !239, size: 32, offset: 32)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !504, file: !505, line: 55, baseType: !510, size: 32, offset: 64)
!510 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !511, line: 151, baseType: !512)
!511 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!512 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !511, line: 149, size: 32, elements: !513)
!513 = !{!514}
!514 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !512, file: !511, line: 150, baseType: !118, size: 32)
!515 = !{!516}
!516 = !DISubrange(count: 1)
!517 = !DIGlobalVariableExpression(var: !518, expr: !DIExpression())
!518 = distinct !DIGlobalVariable(name: "static_regions", scope: !385, file: !392, line: 62, type: !519, isLocal: true, isDefinition: true)
!519 = !DICompositeType(tag: DW_TAG_array_type, baseType: !520, size: 96, elements: !515)
!520 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !504)
!521 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !522)
!522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !289, line: 16, size: 64, elements: !523)
!523 = !{!524, !525}
!524 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !522, file: !289, line: 17, baseType: !278, size: 32)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !522, file: !289, line: 18, baseType: !185, size: 8, offset: 32)
!526 = !DIGlobalVariableExpression(var: !527, expr: !DIExpression())
!527 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !528, file: !561, line: 39, type: !185, isLocal: true, isDefinition: true)
!528 = distinct !DICompileUnit(language: DW_LANG_C99, file: !529, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !530, globals: !560, splitDebugInlining: false, nameTableKind: None)
!529 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pi")
!530 = !{!531, !113, !119, !548, !185}
!531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !532, size: 32)
!532 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !533, line: 1226, baseType: !534)
!533 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!534 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 1213, size: 352, elements: !535)
!535 = !{!536, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547}
!536 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !534, file: !533, line: 1215, baseType: !537, size: 32)
!537 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !314)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !534, file: !533, line: 1216, baseType: !314, size: 32, offset: 32)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !534, file: !533, line: 1217, baseType: !314, size: 32, offset: 64)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !534, file: !533, line: 1218, baseType: !314, size: 32, offset: 96)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !534, file: !533, line: 1219, baseType: !314, size: 32, offset: 128)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !534, file: !533, line: 1220, baseType: !314, size: 32, offset: 160)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !534, file: !533, line: 1221, baseType: !314, size: 32, offset: 192)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !534, file: !533, line: 1222, baseType: !314, size: 32, offset: 224)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !534, file: !533, line: 1223, baseType: !314, size: 32, offset: 256)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !534, file: !533, line: 1224, baseType: !314, size: 32, offset: 288)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !534, file: !533, line: 1225, baseType: !314, size: 32, offset: 320)
!548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !549, size: 32)
!549 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !550)
!550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !551, line: 27, size: 96, elements: !552)
!551 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!552 = !{!553, !554, !555}
!553 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !550, file: !551, line: 29, baseType: !118, size: 32)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !550, file: !551, line: 31, baseType: !278, size: 32, offset: 32)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !550, file: !551, line: 37, baseType: !556, size: 32, offset: 64)
!556 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !511, line: 146, baseType: !557)
!557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !511, line: 141, size: 32, elements: !558)
!558 = !{!559}
!559 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !557, file: !511, line: 143, baseType: !118, size: 32)
!560 = !{!526}
!561 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!562 = !DIGlobalVariableExpression(var: !563, expr: !DIExpression())
!563 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !564, file: !571, line: 21, type: !300, isLocal: true, isDefinition: true)
!564 = distinct !DICompileUnit(language: DW_LANG_C99, file: !565, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !566, globals: !570, splitDebugInlining: false, nameTableKind: None)
!565 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pi")
!566 = !{!567, !119, !113}
!567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !568, size: 32)
!568 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !569, line: 22, baseType: !119)
!569 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!570 = !{!562}
!571 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!572 = !DIGlobalVariableExpression(var: !573, expr: !DIExpression())
!573 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !574, file: !579, line: 13, type: !596, isLocal: true, isDefinition: true)
!574 = distinct !DICompileUnit(language: DW_LANG_C99, file: !575, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !576, splitDebugInlining: false, nameTableKind: None)
!575 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pi")
!576 = !{!577, !572}
!577 = !DIGlobalVariableExpression(var: !578, expr: !DIExpression())
!578 = distinct !DIGlobalVariable(name: "mpu_config", scope: !574, file: !579, line: 37, type: !580, isLocal: false, isDefinition: true)
!579 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!580 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !581)
!581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !551, line: 41, size: 64, elements: !582)
!582 = !{!583, !584}
!583 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !581, file: !551, line: 43, baseType: !118, size: 32)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !581, file: !551, line: 45, baseType: !585, size: 32, offset: 32)
!585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !586, size: 32)
!586 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !587)
!587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !551, line: 27, size: 96, elements: !588)
!588 = !{!589, !590, !591}
!589 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !587, file: !551, line: 29, baseType: !118, size: 32)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !587, file: !551, line: 31, baseType: !278, size: 32, offset: 32)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !587, file: !551, line: 37, baseType: !592, size: 32, offset: 64)
!592 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !511, line: 146, baseType: !593)
!593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !511, line: 141, size: 32, elements: !594)
!594 = !{!595}
!595 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !593, file: !511, line: 143, baseType: !118, size: 32)
!596 = !DICompositeType(tag: DW_TAG_array_type, baseType: !586, size: 192, elements: !174)
!597 = !DIGlobalVariableExpression(var: !598, expr: !DIExpression())
!598 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !599, file: !714, line: 72, type: !798, isLocal: true, isDefinition: true)
!599 = distinct !DICompileUnit(language: DW_LANG_C99, file: !600, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !601, retainedTypes: !700, globals: !711, splitDebugInlining: false, nameTableKind: None)
!600 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pi")
!601 = !{!30, !602}
!602 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !310, line: 65, baseType: !119, size: 32, elements: !603)
!603 = !{!604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699}
!604 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!605 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!606 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!607 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!608 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!609 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!610 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!611 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!612 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!613 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!614 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!615 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!616 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!617 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!618 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!619 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!620 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!621 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!622 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!623 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!624 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!625 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!626 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!627 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!628 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!629 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!630 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!631 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!632 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!633 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!634 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!635 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!636 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!637 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!638 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!639 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!640 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!641 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!642 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!643 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!644 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!645 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!646 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!647 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!648 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!649 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!650 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!651 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!652 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!653 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!654 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!655 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!656 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!657 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!658 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!659 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!660 = !DIEnumerator(name: "FMC_IRQn", value: 48)
!661 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!662 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!663 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!664 = !DIEnumerator(name: "UART4_IRQn", value: 52)
!665 = !DIEnumerator(name: "UART5_IRQn", value: 53)
!666 = !DIEnumerator(name: "TIM6_DAC_IRQn", value: 54)
!667 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!668 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!669 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!670 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!671 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!672 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!673 = !DIEnumerator(name: "ETH_IRQn", value: 61)
!674 = !DIEnumerator(name: "ETH_WKUP_IRQn", value: 62)
!675 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!676 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!677 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!678 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!679 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!680 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!681 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!682 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!683 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!684 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!685 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!686 = !DIEnumerator(name: "OTG_HS_EP1_OUT_IRQn", value: 74)
!687 = !DIEnumerator(name: "OTG_HS_EP1_IN_IRQn", value: 75)
!688 = !DIEnumerator(name: "OTG_HS_WKUP_IRQn", value: 76)
!689 = !DIEnumerator(name: "OTG_HS_IRQn", value: 77)
!690 = !DIEnumerator(name: "DCMI_IRQn", value: 78)
!691 = !DIEnumerator(name: "HASH_RNG_IRQn", value: 80)
!692 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!693 = !DIEnumerator(name: "UART7_IRQn", value: 82)
!694 = !DIEnumerator(name: "UART8_IRQn", value: 83)
!695 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!696 = !DIEnumerator(name: "SPI5_IRQn", value: 85)
!697 = !DIEnumerator(name: "SPI6_IRQn", value: 86)
!698 = !DIEnumerator(name: "SAI1_IRQn", value: 87)
!699 = !DIEnumerator(name: "DMA2D_IRQn", value: 90)
!700 = !{!239, !119, !113, !701}
!701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !702, size: 32)
!702 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !310, line: 486, baseType: !703)
!703 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 478, size: 192, elements: !704)
!704 = !{!705, !706, !707, !708, !709, !710}
!705 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !703, file: !310, line: 480, baseType: !314, size: 32)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !703, file: !310, line: 481, baseType: !314, size: 32, offset: 32)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !703, file: !310, line: 482, baseType: !314, size: 32, offset: 64)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !703, file: !310, line: 483, baseType: !314, size: 32, offset: 96)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !703, file: !310, line: 484, baseType: !314, size: 32, offset: 128)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !703, file: !310, line: 485, baseType: !314, size: 32, offset: 160)
!711 = !{!712, !718, !734, !745, !762, !597, !764, !778, !780, !782, !784, !786, !788, !790, !792, !794, !796}
!712 = !DIGlobalVariableExpression(var: !713, expr: !DIExpression())
!713 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !599, file: !714, line: 424, type: !715, isLocal: false, isDefinition: true, align: 16)
!714 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!715 = !DICompositeType(tag: DW_TAG_array_type, baseType: !349, size: 64, elements: !716)
!716 = !{!717}
!717 = !DISubrange(count: 4)
!718 = !DIGlobalVariableExpression(var: !719, expr: !DIExpression())
!719 = distinct !DIGlobalVariable(name: "__device_dts_ord_42", scope: !599, file: !714, line: 424, type: !720, isLocal: false, isDefinition: true, align: 32)
!720 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !721)
!721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !722)
!722 = !{!723, !724, !725, !726, !732, !733}
!723 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !721, file: !334, line: 380, baseType: !278, size: 32)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !721, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !721, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !721, file: !334, line: 386, baseType: !727, size: 32, offset: 96)
!727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !728, size: 32)
!728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !729)
!729 = !{!730, !731}
!730 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !728, file: !334, line: 359, baseType: !185, size: 8)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !728, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !721, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !721, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!734 = !DIGlobalVariableExpression(var: !735, expr: !DIExpression())
!735 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_42", scope: !599, file: !714, line: 424, type: !736, isLocal: true, isDefinition: true, align: 32)
!736 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !737)
!737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !738)
!738 = !{!739, !744}
!739 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !737, file: !325, line: 60, baseType: !740, size: 32)
!740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !741, size: 32)
!741 = !DISubroutineType(types: !742)
!742 = !{!119, !743}
!743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !720, size: 32)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !737, file: !325, line: 65, baseType: !743, size: 32, offset: 32)
!745 = !DIGlobalVariableExpression(var: !746, expr: !DIExpression())
!746 = distinct !DIGlobalVariable(name: "exti_data", scope: !599, file: !714, line: 423, type: !747, isLocal: true, isDefinition: true)
!747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !714, line: 107, size: 1472, elements: !748)
!748 = !{!749}
!749 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !747, file: !714, line: 109, baseType: !750, size: 1472)
!750 = !DICompositeType(tag: DW_TAG_array_type, baseType: !751, size: 1472, elements: !760)
!751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !714, line: 101, size: 64, elements: !752)
!752 = !{!753, !759}
!753 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !751, file: !714, line: 102, baseType: !754, size: 32)
!754 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !755, line: 63, baseType: !756)
!755 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !757, size: 32)
!757 = !DISubroutineType(types: !758)
!758 = !{null, !119, !113}
!759 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !751, file: !714, line: 103, baseType: !113, size: 32, offset: 32)
!760 = !{!761}
!761 = !DISubrange(count: 23)
!762 = !DIGlobalVariableExpression(var: !763, expr: !DIExpression())
!763 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_42", scope: !599, file: !714, line: 424, type: !728, isLocal: true, isDefinition: true, align: 8)
!764 = !DIGlobalVariableExpression(var: !765, expr: !DIExpression())
!765 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !766, file: !714, line: 493, type: !771, isLocal: true, isDefinition: true, align: 32)
!766 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !714, file: !714, line: 460, type: !767, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !769)
!767 = !DISubroutineType(types: !768)
!768 = !{null, !743}
!769 = !{!770}
!770 = !DILocalVariable(name: "dev", arg: 1, scope: !766, file: !714, line: 460, type: !743)
!771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !772)
!772 = !{!773, !775, !776, !777}
!773 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !771, file: !10, line: 55, baseType: !774, size: 32)
!774 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !119)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !771, file: !10, line: 57, baseType: !774, size: 32, offset: 32)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !771, file: !10, line: 59, baseType: !113, size: 32, offset: 64)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !771, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!778 = !DIGlobalVariableExpression(var: !779, expr: !DIExpression())
!779 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !766, file: !714, line: 497, type: !771, isLocal: true, isDefinition: true, align: 32)
!780 = !DIGlobalVariableExpression(var: !781, expr: !DIExpression())
!781 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !766, file: !714, line: 507, type: !771, isLocal: true, isDefinition: true, align: 32)
!782 = !DIGlobalVariableExpression(var: !783, expr: !DIExpression())
!783 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !766, file: !714, line: 512, type: !771, isLocal: true, isDefinition: true, align: 32)
!784 = !DIGlobalVariableExpression(var: !785, expr: !DIExpression())
!785 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !766, file: !714, line: 516, type: !771, isLocal: true, isDefinition: true, align: 32)
!786 = !DIGlobalVariableExpression(var: !787, expr: !DIExpression())
!787 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !766, file: !714, line: 523, type: !771, isLocal: true, isDefinition: true, align: 32)
!788 = !DIGlobalVariableExpression(var: !789, expr: !DIExpression())
!789 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !766, file: !714, line: 527, type: !771, isLocal: true, isDefinition: true, align: 32)
!790 = !DIGlobalVariableExpression(var: !791, expr: !DIExpression())
!791 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !766, file: !714, line: 581, type: !771, isLocal: true, isDefinition: true, align: 32)
!792 = !DIGlobalVariableExpression(var: !793, expr: !DIExpression())
!793 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !766, file: !714, line: 586, type: !771, isLocal: true, isDefinition: true, align: 32)
!794 = !DIGlobalVariableExpression(var: !795, expr: !DIExpression())
!795 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !766, file: !714, line: 591, type: !771, isLocal: true, isDefinition: true, align: 32)
!796 = !DIGlobalVariableExpression(var: !797, expr: !DIExpression())
!797 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !766, file: !714, line: 595, type: !771, isLocal: true, isDefinition: true, align: 32)
!798 = !DICompositeType(tag: DW_TAG_array_type, baseType: !799, size: 736, elements: !760)
!799 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !800)
!800 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !310, line: 165, baseType: !602)
!801 = !DIGlobalVariableExpression(var: !802, expr: !DIExpression())
!802 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !803, file: !808, line: 29, type: !844, isLocal: false, isDefinition: true, align: 16)
!803 = distinct !DICompileUnit(language: DW_LANG_C99, file: !804, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !805, splitDebugInlining: false, nameTableKind: None)
!804 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pi/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pi")
!805 = !{!806, !801, !812, !814, !816, !818, !820, !822, !824, !826, !828, !830, !832, !834, !836, !838, !840, !842}
!806 = !DIGlobalVariableExpression(var: !807, expr: !DIExpression())
!807 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !803, file: !808, line: 24, type: !809, isLocal: false, isDefinition: true, align: 16)
!808 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pi")
!809 = !DICompositeType(tag: DW_TAG_array_type, baseType: !349, size: 304, elements: !810)
!810 = !{!811}
!811 = !DISubrange(count: 19)
!812 = !DIGlobalVariableExpression(var: !813, expr: !DIExpression())
!813 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_106", scope: !803, file: !808, line: 36, type: !715, isLocal: false, isDefinition: true, align: 16)
!814 = !DIGlobalVariableExpression(var: !815, expr: !DIExpression())
!815 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_105", scope: !803, file: !808, line: 43, type: !715, isLocal: false, isDefinition: true, align: 16)
!816 = !DIGlobalVariableExpression(var: !817, expr: !DIExpression())
!817 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_104", scope: !803, file: !808, line: 50, type: !715, isLocal: false, isDefinition: true, align: 16)
!818 = !DIGlobalVariableExpression(var: !819, expr: !DIExpression())
!819 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_103", scope: !803, file: !808, line: 57, type: !715, isLocal: false, isDefinition: true, align: 16)
!820 = !DIGlobalVariableExpression(var: !821, expr: !DIExpression())
!821 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_102", scope: !803, file: !808, line: 64, type: !715, isLocal: false, isDefinition: true, align: 16)
!822 = !DIGlobalVariableExpression(var: !823, expr: !DIExpression())
!823 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_101", scope: !803, file: !808, line: 71, type: !715, isLocal: false, isDefinition: true, align: 16)
!824 = !DIGlobalVariableExpression(var: !825, expr: !DIExpression())
!825 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_24", scope: !803, file: !808, line: 78, type: !715, isLocal: false, isDefinition: true, align: 16)
!826 = !DIGlobalVariableExpression(var: !827, expr: !DIExpression())
!827 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_100", scope: !803, file: !808, line: 85, type: !715, isLocal: false, isDefinition: true, align: 16)
!828 = !DIGlobalVariableExpression(var: !829, expr: !DIExpression())
!829 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_99", scope: !803, file: !808, line: 92, type: !715, isLocal: false, isDefinition: true, align: 16)
!830 = !DIGlobalVariableExpression(var: !831, expr: !DIExpression())
!831 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_98", scope: !803, file: !808, line: 99, type: !715, isLocal: false, isDefinition: true, align: 16)
!832 = !DIGlobalVariableExpression(var: !833, expr: !DIExpression())
!833 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_97", scope: !803, file: !808, line: 106, type: !715, isLocal: false, isDefinition: true, align: 16)
!834 = !DIGlobalVariableExpression(var: !835, expr: !DIExpression())
!835 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_60", scope: !803, file: !808, line: 113, type: !715, isLocal: false, isDefinition: true, align: 16)
!836 = !DIGlobalVariableExpression(var: !837, expr: !DIExpression())
!837 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_57", scope: !803, file: !808, line: 120, type: !715, isLocal: false, isDefinition: true, align: 16)
!838 = !DIGlobalVariableExpression(var: !839, expr: !DIExpression())
!839 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_52", scope: !803, file: !808, line: 127, type: !715, isLocal: false, isDefinition: true, align: 16)
!840 = !DIGlobalVariableExpression(var: !841, expr: !DIExpression())
!841 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_49", scope: !803, file: !808, line: 134, type: !715, isLocal: false, isDefinition: true, align: 16)
!842 = !DIGlobalVariableExpression(var: !843, expr: !DIExpression())
!843 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_63", scope: !803, file: !808, line: 141, type: !715, isLocal: false, isDefinition: true, align: 16)
!844 = !DICompositeType(tag: DW_TAG_array_type, baseType: !349, size: 48, elements: !845)
!845 = !{!846}
!846 = !DISubrange(count: 3)
!847 = !DIGlobalVariableExpression(var: !848, expr: !DIExpression())
!848 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !849, file: !912, line: 398, type: !945, isLocal: true, isDefinition: true)
!849 = distinct !DICompileUnit(language: DW_LANG_C99, file: !850, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !851, retainedTypes: !864, globals: !909, splitDebugInlining: false, nameTableKind: None)
!850 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pi")
!851 = !{!852, !30, !857}
!852 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !853, line: 197, baseType: !32, size: 32, elements: !854)
!853 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!854 = !{!855, !856}
!855 = !DIEnumerator(name: "SUCCESS", value: 0)
!856 = !DIEnumerator(name: "ERROR", value: 1)
!857 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !858, line: 44, baseType: !32, size: 32, elements: !859)
!858 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!859 = !{!860, !861, !862, !863}
!860 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!861 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!862 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!863 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!864 = !{!113, !119, !118, !865, !902, !908}
!865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !866, size: 32)
!866 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !310, line: 677, baseType: !867)
!867 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 643, size: 1152, elements: !868)
!868 = !{!869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901}
!869 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !867, file: !310, line: 645, baseType: !314, size: 32)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !867, file: !310, line: 646, baseType: !314, size: 32, offset: 32)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !867, file: !310, line: 647, baseType: !314, size: 32, offset: 64)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !867, file: !310, line: 648, baseType: !314, size: 32, offset: 96)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !867, file: !310, line: 649, baseType: !314, size: 32, offset: 128)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !867, file: !310, line: 650, baseType: !314, size: 32, offset: 160)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !867, file: !310, line: 651, baseType: !314, size: 32, offset: 192)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !867, file: !310, line: 652, baseType: !118, size: 32, offset: 224)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !867, file: !310, line: 653, baseType: !314, size: 32, offset: 256)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !867, file: !310, line: 654, baseType: !314, size: 32, offset: 288)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !867, file: !310, line: 655, baseType: !880, size: 64, offset: 320)
!880 = !DICompositeType(tag: DW_TAG_array_type, baseType: !118, size: 64, elements: !174)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !867, file: !310, line: 656, baseType: !314, size: 32, offset: 384)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !867, file: !310, line: 657, baseType: !314, size: 32, offset: 416)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !867, file: !310, line: 658, baseType: !314, size: 32, offset: 448)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !867, file: !310, line: 659, baseType: !118, size: 32, offset: 480)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !867, file: !310, line: 660, baseType: !314, size: 32, offset: 512)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !867, file: !310, line: 661, baseType: !314, size: 32, offset: 544)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !867, file: !310, line: 662, baseType: !880, size: 64, offset: 576)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !867, file: !310, line: 663, baseType: !314, size: 32, offset: 640)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !867, file: !310, line: 664, baseType: !314, size: 32, offset: 672)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !867, file: !310, line: 665, baseType: !314, size: 32, offset: 704)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !867, file: !310, line: 666, baseType: !118, size: 32, offset: 736)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !867, file: !310, line: 667, baseType: !314, size: 32, offset: 768)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !867, file: !310, line: 668, baseType: !314, size: 32, offset: 800)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !867, file: !310, line: 669, baseType: !880, size: 64, offset: 832)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !867, file: !310, line: 670, baseType: !314, size: 32, offset: 896)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !867, file: !310, line: 671, baseType: !314, size: 32, offset: 928)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !867, file: !310, line: 672, baseType: !880, size: 64, offset: 960)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !867, file: !310, line: 673, baseType: !314, size: 32, offset: 1024)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !867, file: !310, line: 674, baseType: !314, size: 32, offset: 1056)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !867, file: !310, line: 675, baseType: !314, size: 32, offset: 1088)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !867, file: !310, line: 676, baseType: !314, size: 32, offset: 1120)
!902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !903, size: 32)
!903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !904, line: 343, size: 64, elements: !905)
!904 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!905 = !{!906, !907}
!906 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !903, file: !904, line: 344, baseType: !118, size: 32)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !903, file: !904, line: 345, baseType: !118, size: 32, offset: 32)
!908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 32)
!909 = !{!910, !916, !932, !943, !847}
!910 = !DIGlobalVariableExpression(var: !911, expr: !DIExpression())
!911 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !849, file: !912, line: 752, type: !913, isLocal: false, isDefinition: true, align: 16)
!912 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!913 = !DICompositeType(tag: DW_TAG_array_type, baseType: !349, size: 1024, elements: !914)
!914 = !{!915}
!915 = !DISubrange(count: 64)
!916 = !DIGlobalVariableExpression(var: !917, expr: !DIExpression())
!917 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !849, file: !912, line: 752, type: !918, isLocal: false, isDefinition: true, align: 32)
!918 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !919)
!919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !920)
!920 = !{!921, !922, !923, !924, !930, !931}
!921 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !919, file: !334, line: 380, baseType: !278, size: 32)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !919, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !919, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !919, file: !334, line: 386, baseType: !925, size: 32, offset: 96)
!925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 32)
!926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !927)
!927 = !{!928, !929}
!928 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !926, file: !334, line: 359, baseType: !185, size: 8)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !926, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !919, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !919, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!932 = !DIGlobalVariableExpression(var: !933, expr: !DIExpression())
!933 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !849, file: !912, line: 752, type: !934, isLocal: true, isDefinition: true, align: 32)
!934 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !935)
!935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !936)
!936 = !{!937, !942}
!937 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !935, file: !325, line: 60, baseType: !938, size: 32)
!938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !939, size: 32)
!939 = !DISubroutineType(types: !940)
!940 = !{!119, !941}
!941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !918, size: 32)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !935, file: !325, line: 65, baseType: !941, size: 32, offset: 32)
!943 = !DIGlobalVariableExpression(var: !944, expr: !DIExpression())
!944 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !849, file: !912, line: 752, type: !926, isLocal: true, isDefinition: true, align: 8)
!945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !858, line: 100, size: 224, elements: !946)
!946 = !{!947, !953, !954, !963, !968, !973, !979}
!947 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !945, file: !858, line: 101, baseType: !948, size: 32)
!948 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !858, line: 76, baseType: !949)
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !950, size: 32)
!950 = !DISubroutineType(types: !951)
!951 = !{!119, !941, !952}
!952 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !858, line: 56, baseType: !113)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !945, file: !858, line: 102, baseType: !948, size: 32, offset: 32)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !945, file: !858, line: 103, baseType: !955, size: 32, offset: 64)
!955 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !858, line: 83, baseType: !956)
!956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !957, size: 32)
!957 = !DISubroutineType(types: !958)
!958 = !{!119, !941, !952, !959, !113}
!959 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !858, line: 72, baseType: !960)
!960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !961, size: 32)
!961 = !DISubroutineType(types: !962)
!962 = !{null, !941, !952, !113}
!963 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !945, file: !858, line: 104, baseType: !964, size: 32, offset: 96)
!964 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !858, line: 79, baseType: !965)
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !966, size: 32)
!966 = !DISubroutineType(types: !967)
!967 = !{!119, !941, !952, !908}
!968 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !945, file: !858, line: 105, baseType: !969, size: 32, offset: 128)
!969 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !858, line: 88, baseType: !970)
!970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !971, size: 32)
!971 = !DISubroutineType(types: !972)
!972 = !{!857, !941, !952}
!973 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !945, file: !858, line: 106, baseType: !974, size: 32, offset: 160)
!974 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !858, line: 92, baseType: !975)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 32)
!976 = !DISubroutineType(types: !977)
!977 = !{!119, !941, !952, !978}
!978 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !858, line: 64, baseType: !113)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !945, file: !858, line: 107, baseType: !980, size: 32, offset: 192)
!980 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !858, line: 96, baseType: !981)
!981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !982, size: 32)
!982 = !DISubroutineType(types: !983)
!983 = !{!119, !941, !952, !113}
!984 = !DIGlobalVariableExpression(var: !985, expr: !DIExpression())
!985 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !986, file: !1043, line: 603, type: !1045, isLocal: true, isDefinition: true, align: 32)
!986 = distinct !DICompileUnit(language: DW_LANG_C99, file: !987, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !988, globals: !1040, splitDebugInlining: false, nameTableKind: None)
!987 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pi")
!988 = !{!113, !119, !989}
!989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !990, size: 32)
!990 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !991)
!991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !992, line: 336, size: 160, elements: !993)
!992 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!993 = !{!994, !1014, !1018, !1022, !1035}
!994 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !991, file: !992, line: 365, baseType: !995, size: 32)
!995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 32)
!996 = !DISubroutineType(types: !997)
!997 = !{!119, !998, !1013}
!998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !999, size: 32)
!999 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1000)
!1000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !1001)
!1001 = !{!1002, !1003, !1004, !1005, !1011, !1012}
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1000, file: !334, line: 380, baseType: !278, size: 32)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1000, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1000, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1000, file: !334, line: 386, baseType: !1006, size: 32, offset: 96)
!1006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1007, size: 32)
!1007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !1008)
!1008 = !{!1009, !1010}
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1007, file: !334, line: 359, baseType: !185, size: 8)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1007, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1000, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1000, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!1013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !186, size: 32)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !991, file: !992, line: 366, baseType: !1015, size: 32, offset: 32)
!1015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1016, size: 32)
!1016 = !DISubroutineType(types: !1017)
!1017 = !{null, !998, !186}
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !991, file: !992, line: 374, baseType: !1019, size: 32, offset: 64)
!1019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1020, size: 32)
!1020 = !DISubroutineType(types: !1021)
!1021 = !{!119, !998}
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !991, file: !992, line: 377, baseType: !1023, size: 32, offset: 96)
!1023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1024, size: 32)
!1024 = !DISubroutineType(types: !1025)
!1025 = !{!119, !998, !1026}
!1026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1027, size: 32)
!1027 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1028)
!1028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !992, line: 122, size: 64, elements: !1029)
!1029 = !{!1030, !1031, !1032, !1033, !1034}
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1028, file: !992, line: 123, baseType: !118, size: 32)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1028, file: !992, line: 124, baseType: !185, size: 8, offset: 32)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1028, file: !992, line: 125, baseType: !185, size: 8, offset: 40)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1028, file: !992, line: 126, baseType: !185, size: 8, offset: 48)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1028, file: !992, line: 127, baseType: !185, size: 8, offset: 56)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !991, file: !992, line: 379, baseType: !1036, size: 32, offset: 128)
!1036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1037, size: 32)
!1037 = !DISubroutineType(types: !1038)
!1038 = !{!119, !998, !1039}
!1039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1028, size: 32)
!1040 = !{!984, !1041}
!1041 = !DIGlobalVariableExpression(var: !1042, expr: !DIExpression())
!1042 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !986, file: !1043, line: 38, type: !1044, isLocal: true, isDefinition: true)
!1043 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1044 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !998)
!1045 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1046)
!1046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !1047)
!1047 = !{!1048, !1049}
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1046, file: !325, line: 60, baseType: !1019, size: 32)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1046, file: !325, line: 65, baseType: !998, size: 32, offset: 32)
!1050 = !DIGlobalVariableExpression(var: !1051, expr: !DIExpression())
!1051 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1052, file: !1221, line: 762, type: !1360, isLocal: true, isDefinition: true)
!1052 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1053, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1054, retainedTypes: !1072, globals: !1218, splitDebugInlining: false, nameTableKind: None)
!1053 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pi")
!1054 = !{!30, !1055, !1061, !1066, !857}
!1055 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1056, line: 506, baseType: !32, size: 32, elements: !1057)
!1056 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1057 = !{!1058, !1059, !1060}
!1058 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1059 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1060 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1061 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1056, line: 512, baseType: !32, size: 32, elements: !1062)
!1062 = !{!1063, !1064, !1065}
!1063 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1064 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1065 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1066 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !755, line: 43, baseType: !32, size: 32, elements: !1067)
!1067 = !{!1068, !1069, !1070, !1071}
!1068 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1069 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1070 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1071 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1072 = !{!113, !119, !1073, !1143, !1148, !1108, !1061, !1055, !1153, !1154, !118, !1168, !1123, !106, !1178, !1179}
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 32)
!1074 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1075)
!1075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1056, line: 523, size: 288, elements: !1076)
!1076 = !{!1077, !1098, !1104, !1109, !1113, !1114, !1115, !1119, !1139}
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1075, file: !1056, line: 524, baseType: !1078, size: 32)
!1078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1079, size: 32)
!1079 = !DISubroutineType(types: !1080)
!1080 = !{!119, !1081, !1096, !1097}
!1081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1082, size: 32)
!1082 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1083)
!1083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !1084)
!1084 = !{!1085, !1086, !1087, !1088, !1094, !1095}
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1083, file: !334, line: 380, baseType: !278, size: 32)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1083, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1083, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1083, file: !334, line: 386, baseType: !1089, size: 32, offset: 96)
!1089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1090, size: 32)
!1090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !1091)
!1091 = !{!1092, !1093}
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1090, file: !334, line: 359, baseType: !185, size: 8)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1090, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1083, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1083, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!1096 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1056, line: 237, baseType: !185)
!1097 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1056, line: 257, baseType: !118)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1075, file: !1056, line: 530, baseType: !1099, size: 32, offset: 32)
!1099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1100, size: 32)
!1100 = !DISubroutineType(types: !1101)
!1101 = !{!119, !1081, !1102}
!1102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 32)
!1103 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1056, line: 229, baseType: !118)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1075, file: !1056, line: 532, baseType: !1105, size: 32, offset: 64)
!1105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1106, size: 32)
!1106 = !DISubroutineType(types: !1107)
!1107 = !{!119, !1081, !1108, !1103}
!1108 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1056, line: 216, baseType: !118)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1075, file: !1056, line: 535, baseType: !1110, size: 32, offset: 96)
!1110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1111, size: 32)
!1111 = !DISubroutineType(types: !1112)
!1112 = !{!119, !1081, !1108}
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1075, file: !1056, line: 537, baseType: !1110, size: 32, offset: 128)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1075, file: !1056, line: 539, baseType: !1110, size: 32, offset: 160)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1075, file: !1056, line: 541, baseType: !1116, size: 32, offset: 192)
!1116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1117, size: 32)
!1117 = !DISubroutineType(types: !1118)
!1118 = !{!119, !1081, !1096, !1055, !1061}
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1075, file: !1056, line: 544, baseType: !1120, size: 32, offset: 224)
!1120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1121, size: 32)
!1121 = !DISubroutineType(types: !1122)
!1122 = !{!119, !1081, !1123, !345}
!1123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1124, size: 32)
!1124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1056, line: 478, size: 96, elements: !1125)
!1125 = !{!1126, !1133, !1138}
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1124, file: !1056, line: 482, baseType: !1127, size: 32)
!1127 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1128, line: 33, baseType: !1129)
!1128 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1128, line: 29, size: 32, elements: !1130)
!1130 = !{!1131}
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1129, file: !1128, line: 30, baseType: !1132, size: 32)
!1132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1129, size: 32)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1124, file: !1056, line: 485, baseType: !1134, size: 32, offset: 32)
!1134 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1056, line: 464, baseType: !1135)
!1135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1136, size: 32)
!1136 = !DISubroutineType(types: !1137)
!1137 = !{null, !1081, !1123, !1108}
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1124, file: !1056, line: 493, baseType: !1108, size: 32, offset: 64)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1075, file: !1056, line: 547, baseType: !1140, size: 32, offset: 256)
!1140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1141, size: 32)
!1141 = !DISubroutineType(types: !1142)
!1142 = !{!118, !1081}
!1143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1144, size: 32)
!1144 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1145)
!1145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1056, line: 428, size: 32, elements: !1146)
!1146 = !{!1147}
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1145, file: !1056, line: 434, baseType: !1108, size: 32)
!1148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1149, size: 32)
!1149 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1150)
!1150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1056, line: 441, size: 32, elements: !1151)
!1151 = !{!1152}
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1150, file: !1056, line: 447, baseType: !1108, size: 32)
!1153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1150, size: 32)
!1154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1155, size: 32)
!1155 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !310, line: 583, baseType: !1156)
!1156 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 572, size: 320, elements: !1157)
!1157 = !{!1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166}
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1156, file: !310, line: 574, baseType: !314, size: 32)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1156, file: !310, line: 575, baseType: !314, size: 32, offset: 32)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1156, file: !310, line: 576, baseType: !314, size: 32, offset: 64)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1156, file: !310, line: 577, baseType: !314, size: 32, offset: 96)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1156, file: !310, line: 578, baseType: !314, size: 32, offset: 128)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1156, file: !310, line: 579, baseType: !314, size: 32, offset: 160)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1156, file: !310, line: 580, baseType: !314, size: 32, offset: 192)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1156, file: !310, line: 581, baseType: !314, size: 32, offset: 224)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1156, file: !310, line: 582, baseType: !1167, size: 64, offset: 256)
!1167 = !DICompositeType(tag: DW_TAG_array_type, baseType: !314, size: 64, elements: !174)
!1168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1169, size: 32)
!1169 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !310, line: 596, baseType: !1170)
!1170 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 589, size: 288, elements: !1171)
!1171 = !{!1172, !1173, !1174, !1176, !1177}
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1170, file: !310, line: 591, baseType: !314, size: 32)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1170, file: !310, line: 592, baseType: !314, size: 32, offset: 32)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1170, file: !310, line: 593, baseType: !1175, size: 128, offset: 64)
!1175 = !DICompositeType(tag: DW_TAG_array_type, baseType: !314, size: 128, elements: !716)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1170, file: !310, line: 594, baseType: !880, size: 64, offset: 192)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1170, file: !310, line: 595, baseType: !314, size: 32, offset: 256)
!1178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !952, size: 32)
!1179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1180, size: 32)
!1180 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1181)
!1181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !858, line: 100, size: 224, elements: !1182)
!1182 = !{!1183, !1188, !1189, !1198, !1203, !1208, !1213}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1181, file: !858, line: 101, baseType: !1184, size: 32)
!1184 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !858, line: 76, baseType: !1185)
!1185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1186, size: 32)
!1186 = !DISubroutineType(types: !1187)
!1187 = !{!119, !1081, !952}
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1181, file: !858, line: 102, baseType: !1184, size: 32, offset: 32)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1181, file: !858, line: 103, baseType: !1190, size: 32, offset: 64)
!1190 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !858, line: 83, baseType: !1191)
!1191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1192, size: 32)
!1192 = !DISubroutineType(types: !1193)
!1193 = !{!119, !1081, !952, !1194, !113}
!1194 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !858, line: 72, baseType: !1195)
!1195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1196, size: 32)
!1196 = !DISubroutineType(types: !1197)
!1197 = !{null, !1081, !952, !113}
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1181, file: !858, line: 104, baseType: !1199, size: 32, offset: 96)
!1199 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !858, line: 79, baseType: !1200)
!1200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1201, size: 32)
!1201 = !DISubroutineType(types: !1202)
!1202 = !{!119, !1081, !952, !908}
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1181, file: !858, line: 105, baseType: !1204, size: 32, offset: 128)
!1204 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !858, line: 88, baseType: !1205)
!1205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1206, size: 32)
!1206 = !DISubroutineType(types: !1207)
!1207 = !{!857, !1081, !952}
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1181, file: !858, line: 106, baseType: !1209, size: 32, offset: 160)
!1209 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !858, line: 92, baseType: !1210)
!1210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1211, size: 32)
!1211 = !DISubroutineType(types: !1212)
!1212 = !{!119, !1081, !952, !978}
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1181, file: !858, line: 107, baseType: !1214, size: 32, offset: 192)
!1214 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !858, line: 96, baseType: !1215)
!1215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1216, size: 32)
!1216 = !DISubroutineType(types: !1217)
!1217 = !{!119, !1081, !952, !113}
!1218 = !{!1219, !1225, !1227, !1237, !1239, !1241, !1243, !1245, !1247, !1249, !1251, !1253, !1255, !1260, !1262, !1264, !1266, !1268, !1270, !1272, !1274, !1276, !1278, !1280, !1282, !1284, !1286, !1288, !1290, !1292, !1294, !1296, !1298, !1300, !1314, !1316, !1318, !1320, !1322, !1324, !1326, !1328, !1330, !1332, !1334, !1336, !1338, !1340, !1342, !1344, !1346, !1348, !1350, !1352, !1354, !1050, !1356, !1358, !1371, !1373, !1375, !1377, !1379, !1381, !1383, !1385, !1387}
!1219 = !DIGlobalVariableExpression(var: !1220, expr: !DIExpression())
!1220 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_97", scope: !1052, file: !1221, line: 762, type: !1222, isLocal: false, isDefinition: true, align: 16)
!1221 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1222 = !DICompositeType(tag: DW_TAG_array_type, baseType: !349, size: 80, elements: !1223)
!1223 = !{!1224}
!1224 = !DISubrange(count: 5)
!1225 = !DIGlobalVariableExpression(var: !1226, expr: !DIExpression())
!1226 = distinct !DIGlobalVariable(name: "__device_dts_ord_97", scope: !1052, file: !1221, line: 762, type: !1082, isLocal: false, isDefinition: true, align: 32)
!1227 = !DIGlobalVariableExpression(var: !1228, expr: !DIExpression())
!1228 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_97", scope: !1052, file: !1221, line: 762, type: !1229, isLocal: true, isDefinition: true, align: 32)
!1229 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1230)
!1230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !1231)
!1231 = !{!1232, !1236}
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1230, file: !325, line: 60, baseType: !1233, size: 32)
!1233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1234, size: 32)
!1234 = !DISubroutineType(types: !1235)
!1235 = !{!119, !1081}
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1230, file: !325, line: 65, baseType: !1081, size: 32, offset: 32)
!1237 = !DIGlobalVariableExpression(var: !1238, expr: !DIExpression())
!1238 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_98", scope: !1052, file: !1221, line: 766, type: !1222, isLocal: false, isDefinition: true, align: 16)
!1239 = !DIGlobalVariableExpression(var: !1240, expr: !DIExpression())
!1240 = distinct !DIGlobalVariable(name: "__device_dts_ord_98", scope: !1052, file: !1221, line: 766, type: !1082, isLocal: false, isDefinition: true, align: 32)
!1241 = !DIGlobalVariableExpression(var: !1242, expr: !DIExpression())
!1242 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_98", scope: !1052, file: !1221, line: 766, type: !1229, isLocal: true, isDefinition: true, align: 32)
!1243 = !DIGlobalVariableExpression(var: !1244, expr: !DIExpression())
!1244 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_99", scope: !1052, file: !1221, line: 770, type: !1222, isLocal: false, isDefinition: true, align: 16)
!1245 = !DIGlobalVariableExpression(var: !1246, expr: !DIExpression())
!1246 = distinct !DIGlobalVariable(name: "__device_dts_ord_99", scope: !1052, file: !1221, line: 770, type: !1082, isLocal: false, isDefinition: true, align: 32)
!1247 = !DIGlobalVariableExpression(var: !1248, expr: !DIExpression())
!1248 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_99", scope: !1052, file: !1221, line: 770, type: !1229, isLocal: true, isDefinition: true, align: 32)
!1249 = !DIGlobalVariableExpression(var: !1250, expr: !DIExpression())
!1250 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_100", scope: !1052, file: !1221, line: 774, type: !1222, isLocal: false, isDefinition: true, align: 16)
!1251 = !DIGlobalVariableExpression(var: !1252, expr: !DIExpression())
!1252 = distinct !DIGlobalVariable(name: "__device_dts_ord_100", scope: !1052, file: !1221, line: 774, type: !1082, isLocal: false, isDefinition: true, align: 32)
!1253 = !DIGlobalVariableExpression(var: !1254, expr: !DIExpression())
!1254 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_100", scope: !1052, file: !1221, line: 774, type: !1229, isLocal: true, isDefinition: true, align: 32)
!1255 = !DIGlobalVariableExpression(var: !1256, expr: !DIExpression())
!1256 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_24", scope: !1052, file: !1221, line: 778, type: !1257, isLocal: false, isDefinition: true, align: 16)
!1257 = !DICompositeType(tag: DW_TAG_array_type, baseType: !349, size: 112, elements: !1258)
!1258 = !{!1259}
!1259 = !DISubrange(count: 7)
!1260 = !DIGlobalVariableExpression(var: !1261, expr: !DIExpression())
!1261 = distinct !DIGlobalVariable(name: "__device_dts_ord_24", scope: !1052, file: !1221, line: 778, type: !1082, isLocal: false, isDefinition: true, align: 32)
!1262 = !DIGlobalVariableExpression(var: !1263, expr: !DIExpression())
!1263 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_24", scope: !1052, file: !1221, line: 778, type: !1229, isLocal: true, isDefinition: true, align: 32)
!1264 = !DIGlobalVariableExpression(var: !1265, expr: !DIExpression())
!1265 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_101", scope: !1052, file: !1221, line: 782, type: !1222, isLocal: false, isDefinition: true, align: 16)
!1266 = !DIGlobalVariableExpression(var: !1267, expr: !DIExpression())
!1267 = distinct !DIGlobalVariable(name: "__device_dts_ord_101", scope: !1052, file: !1221, line: 782, type: !1082, isLocal: false, isDefinition: true, align: 32)
!1268 = !DIGlobalVariableExpression(var: !1269, expr: !DIExpression())
!1269 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_101", scope: !1052, file: !1221, line: 782, type: !1229, isLocal: true, isDefinition: true, align: 32)
!1270 = !DIGlobalVariableExpression(var: !1271, expr: !DIExpression())
!1271 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_102", scope: !1052, file: !1221, line: 786, type: !1222, isLocal: false, isDefinition: true, align: 16)
!1272 = !DIGlobalVariableExpression(var: !1273, expr: !DIExpression())
!1273 = distinct !DIGlobalVariable(name: "__device_dts_ord_102", scope: !1052, file: !1221, line: 786, type: !1082, isLocal: false, isDefinition: true, align: 32)
!1274 = !DIGlobalVariableExpression(var: !1275, expr: !DIExpression())
!1275 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_102", scope: !1052, file: !1221, line: 786, type: !1229, isLocal: true, isDefinition: true, align: 32)
!1276 = !DIGlobalVariableExpression(var: !1277, expr: !DIExpression())
!1277 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_103", scope: !1052, file: !1221, line: 790, type: !1222, isLocal: false, isDefinition: true, align: 16)
!1278 = !DIGlobalVariableExpression(var: !1279, expr: !DIExpression())
!1279 = distinct !DIGlobalVariable(name: "__device_dts_ord_103", scope: !1052, file: !1221, line: 790, type: !1082, isLocal: false, isDefinition: true, align: 32)
!1280 = !DIGlobalVariableExpression(var: !1281, expr: !DIExpression())
!1281 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_103", scope: !1052, file: !1221, line: 790, type: !1229, isLocal: true, isDefinition: true, align: 32)
!1282 = !DIGlobalVariableExpression(var: !1283, expr: !DIExpression())
!1283 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_104", scope: !1052, file: !1221, line: 794, type: !1222, isLocal: false, isDefinition: true, align: 16)
!1284 = !DIGlobalVariableExpression(var: !1285, expr: !DIExpression())
!1285 = distinct !DIGlobalVariable(name: "__device_dts_ord_104", scope: !1052, file: !1221, line: 794, type: !1082, isLocal: false, isDefinition: true, align: 32)
!1286 = !DIGlobalVariableExpression(var: !1287, expr: !DIExpression())
!1287 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_104", scope: !1052, file: !1221, line: 794, type: !1229, isLocal: true, isDefinition: true, align: 32)
!1288 = !DIGlobalVariableExpression(var: !1289, expr: !DIExpression())
!1289 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_105", scope: !1052, file: !1221, line: 798, type: !1222, isLocal: false, isDefinition: true, align: 16)
!1290 = !DIGlobalVariableExpression(var: !1291, expr: !DIExpression())
!1291 = distinct !DIGlobalVariable(name: "__device_dts_ord_105", scope: !1052, file: !1221, line: 798, type: !1082, isLocal: false, isDefinition: true, align: 32)
!1292 = !DIGlobalVariableExpression(var: !1293, expr: !DIExpression())
!1293 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_105", scope: !1052, file: !1221, line: 798, type: !1229, isLocal: true, isDefinition: true, align: 32)
!1294 = !DIGlobalVariableExpression(var: !1295, expr: !DIExpression())
!1295 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_106", scope: !1052, file: !1221, line: 802, type: !1222, isLocal: false, isDefinition: true, align: 16)
!1296 = !DIGlobalVariableExpression(var: !1297, expr: !DIExpression())
!1297 = distinct !DIGlobalVariable(name: "__device_dts_ord_106", scope: !1052, file: !1221, line: 802, type: !1082, isLocal: false, isDefinition: true, align: 32)
!1298 = !DIGlobalVariableExpression(var: !1299, expr: !DIExpression())
!1299 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_106", scope: !1052, file: !1221, line: 802, type: !1229, isLocal: true, isDefinition: true, align: 32)
!1300 = !DIGlobalVariableExpression(var: !1301, expr: !DIExpression())
!1301 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1052, file: !1221, line: 762, type: !1302, isLocal: true, isDefinition: true)
!1302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1303, line: 237, size: 128, elements: !1304)
!1303 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1304 = !{!1305, !1306, !1307}
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1302, file: !1303, line: 239, baseType: !1150, size: 32)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1302, file: !1303, line: 241, baseType: !1081, size: 32, offset: 32)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1302, file: !1303, line: 243, baseType: !1308, size: 64, offset: 64)
!1308 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1128, line: 40, baseType: !1309)
!1309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1128, line: 35, size: 64, elements: !1310)
!1310 = !{!1311, !1313}
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1309, file: !1128, line: 36, baseType: !1312, size: 32)
!1312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1127, size: 32)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1309, file: !1128, line: 37, baseType: !1312, size: 32, offset: 32)
!1314 = !DIGlobalVariableExpression(var: !1315, expr: !DIExpression())
!1315 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_97", scope: !1052, file: !1221, line: 762, type: !1090, isLocal: true, isDefinition: true, align: 8)
!1316 = !DIGlobalVariableExpression(var: !1317, expr: !DIExpression())
!1317 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1052, file: !1221, line: 766, type: !1302, isLocal: true, isDefinition: true)
!1318 = !DIGlobalVariableExpression(var: !1319, expr: !DIExpression())
!1319 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_98", scope: !1052, file: !1221, line: 766, type: !1090, isLocal: true, isDefinition: true, align: 8)
!1320 = !DIGlobalVariableExpression(var: !1321, expr: !DIExpression())
!1321 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1052, file: !1221, line: 770, type: !1302, isLocal: true, isDefinition: true)
!1322 = !DIGlobalVariableExpression(var: !1323, expr: !DIExpression())
!1323 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_99", scope: !1052, file: !1221, line: 770, type: !1090, isLocal: true, isDefinition: true, align: 8)
!1324 = !DIGlobalVariableExpression(var: !1325, expr: !DIExpression())
!1325 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1052, file: !1221, line: 774, type: !1302, isLocal: true, isDefinition: true)
!1326 = !DIGlobalVariableExpression(var: !1327, expr: !DIExpression())
!1327 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_100", scope: !1052, file: !1221, line: 774, type: !1090, isLocal: true, isDefinition: true, align: 8)
!1328 = !DIGlobalVariableExpression(var: !1329, expr: !DIExpression())
!1329 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1052, file: !1221, line: 778, type: !1302, isLocal: true, isDefinition: true)
!1330 = !DIGlobalVariableExpression(var: !1331, expr: !DIExpression())
!1331 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_24", scope: !1052, file: !1221, line: 778, type: !1090, isLocal: true, isDefinition: true, align: 8)
!1332 = !DIGlobalVariableExpression(var: !1333, expr: !DIExpression())
!1333 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1052, file: !1221, line: 782, type: !1302, isLocal: true, isDefinition: true)
!1334 = !DIGlobalVariableExpression(var: !1335, expr: !DIExpression())
!1335 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_101", scope: !1052, file: !1221, line: 782, type: !1090, isLocal: true, isDefinition: true, align: 8)
!1336 = !DIGlobalVariableExpression(var: !1337, expr: !DIExpression())
!1337 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1052, file: !1221, line: 786, type: !1302, isLocal: true, isDefinition: true)
!1338 = !DIGlobalVariableExpression(var: !1339, expr: !DIExpression())
!1339 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_102", scope: !1052, file: !1221, line: 786, type: !1090, isLocal: true, isDefinition: true, align: 8)
!1340 = !DIGlobalVariableExpression(var: !1341, expr: !DIExpression())
!1341 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1052, file: !1221, line: 790, type: !1302, isLocal: true, isDefinition: true)
!1342 = !DIGlobalVariableExpression(var: !1343, expr: !DIExpression())
!1343 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_103", scope: !1052, file: !1221, line: 790, type: !1090, isLocal: true, isDefinition: true, align: 8)
!1344 = !DIGlobalVariableExpression(var: !1345, expr: !DIExpression())
!1345 = distinct !DIGlobalVariable(name: "gpio_stm32_data_i", scope: !1052, file: !1221, line: 794, type: !1302, isLocal: true, isDefinition: true)
!1346 = !DIGlobalVariableExpression(var: !1347, expr: !DIExpression())
!1347 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_104", scope: !1052, file: !1221, line: 794, type: !1090, isLocal: true, isDefinition: true, align: 8)
!1348 = !DIGlobalVariableExpression(var: !1349, expr: !DIExpression())
!1349 = distinct !DIGlobalVariable(name: "gpio_stm32_data_j", scope: !1052, file: !1221, line: 798, type: !1302, isLocal: true, isDefinition: true)
!1350 = !DIGlobalVariableExpression(var: !1351, expr: !DIExpression())
!1351 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_105", scope: !1052, file: !1221, line: 798, type: !1090, isLocal: true, isDefinition: true, align: 8)
!1352 = !DIGlobalVariableExpression(var: !1353, expr: !DIExpression())
!1353 = distinct !DIGlobalVariable(name: "gpio_stm32_data_k", scope: !1052, file: !1221, line: 802, type: !1302, isLocal: true, isDefinition: true)
!1354 = !DIGlobalVariableExpression(var: !1355, expr: !DIExpression())
!1355 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_106", scope: !1052, file: !1221, line: 802, type: !1090, isLocal: true, isDefinition: true, align: 8)
!1356 = !DIGlobalVariableExpression(var: !1357, expr: !DIExpression())
!1357 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1052, file: !1221, line: 656, type: !1074, isLocal: true, isDefinition: true)
!1358 = !DIGlobalVariableExpression(var: !1359, expr: !DIExpression())
!1359 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1052, file: !1221, line: 766, type: !1360, isLocal: true, isDefinition: true)
!1360 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1361)
!1361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1303, line: 224, size: 160, elements: !1362)
!1362 = !{!1363, !1364, !1365, !1366}
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1361, file: !1303, line: 226, baseType: !1145, size: 32)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1361, file: !1303, line: 228, baseType: !908, size: 32, offset: 32)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1361, file: !1303, line: 230, baseType: !119, size: 32, offset: 64)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1361, file: !1303, line: 231, baseType: !1367, size: 64, offset: 96)
!1367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !904, line: 343, size: 64, elements: !1368)
!1368 = !{!1369, !1370}
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1367, file: !904, line: 344, baseType: !118, size: 32)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1367, file: !904, line: 345, baseType: !118, size: 32, offset: 32)
!1371 = !DIGlobalVariableExpression(var: !1372, expr: !DIExpression())
!1372 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1052, file: !1221, line: 770, type: !1360, isLocal: true, isDefinition: true)
!1373 = !DIGlobalVariableExpression(var: !1374, expr: !DIExpression())
!1374 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1052, file: !1221, line: 774, type: !1360, isLocal: true, isDefinition: true)
!1375 = !DIGlobalVariableExpression(var: !1376, expr: !DIExpression())
!1376 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1052, file: !1221, line: 778, type: !1360, isLocal: true, isDefinition: true)
!1377 = !DIGlobalVariableExpression(var: !1378, expr: !DIExpression())
!1378 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1052, file: !1221, line: 782, type: !1360, isLocal: true, isDefinition: true)
!1379 = !DIGlobalVariableExpression(var: !1380, expr: !DIExpression())
!1380 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1052, file: !1221, line: 786, type: !1360, isLocal: true, isDefinition: true)
!1381 = !DIGlobalVariableExpression(var: !1382, expr: !DIExpression())
!1382 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1052, file: !1221, line: 790, type: !1360, isLocal: true, isDefinition: true)
!1383 = !DIGlobalVariableExpression(var: !1384, expr: !DIExpression())
!1384 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_i", scope: !1052, file: !1221, line: 794, type: !1360, isLocal: true, isDefinition: true)
!1385 = !DIGlobalVariableExpression(var: !1386, expr: !DIExpression())
!1386 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_j", scope: !1052, file: !1221, line: 798, type: !1360, isLocal: true, isDefinition: true)
!1387 = !DIGlobalVariableExpression(var: !1388, expr: !DIExpression())
!1388 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_k", scope: !1052, file: !1221, line: 802, type: !1360, isLocal: true, isDefinition: true)
!1389 = !DIGlobalVariableExpression(var: !1390, expr: !DIExpression())
!1390 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !1391, file: !1530, line: 44, type: !1688, isLocal: false, isDefinition: true)
!1391 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1392, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1393, retainedTypes: !1426, globals: !1527, splitDebugInlining: false, nameTableKind: None)
!1392 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pi")
!1393 = !{!30, !1394, !1401, !1408, !1415, !1421, !857}
!1394 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !992, line: 47, baseType: !32, size: 32, elements: !1395)
!1395 = !{!1396, !1397, !1398, !1399, !1400}
!1396 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1397 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1398 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1399 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1400 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1401 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !992, line: 75, baseType: !32, size: 32, elements: !1402)
!1402 = !{!1403, !1404, !1405, !1406, !1407}
!1403 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1404 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1405 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1406 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1407 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1408 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !992, line: 92, baseType: !32, size: 32, elements: !1409)
!1409 = !{!1410, !1411, !1412, !1413, !1414}
!1410 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1411 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1412 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1413 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1414 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1415 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !992, line: 84, baseType: !32, size: 32, elements: !1416)
!1416 = !{!1417, !1418, !1419, !1420}
!1417 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1418 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1419 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1420 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1421 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !992, line: 107, baseType: !32, size: 32, elements: !1422)
!1422 = !{!1423, !1424, !1425}
!1423 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1424 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1425 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1426 = !{!113, !119, !1427, !186, !185, !1476, !118, !952, !1487, !199, !120, !1526}
!1427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1428, size: 32)
!1428 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1429)
!1429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !992, line: 336, size: 160, elements: !1430)
!1430 = !{!1431, !1450, !1454, !1458, !1471}
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1429, file: !992, line: 365, baseType: !1432, size: 32)
!1432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1433, size: 32)
!1433 = !DISubroutineType(types: !1434)
!1434 = !{!119, !1435, !1013}
!1435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1436, size: 32)
!1436 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1437)
!1437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !1438)
!1438 = !{!1439, !1440, !1441, !1442, !1448, !1449}
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1437, file: !334, line: 380, baseType: !278, size: 32)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1437, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1437, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1437, file: !334, line: 386, baseType: !1443, size: 32, offset: 96)
!1443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1444, size: 32)
!1444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !1445)
!1445 = !{!1446, !1447}
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1444, file: !334, line: 359, baseType: !185, size: 8)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1444, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1437, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1437, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1429, file: !992, line: 366, baseType: !1451, size: 32, offset: 32)
!1451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1452, size: 32)
!1452 = !DISubroutineType(types: !1453)
!1453 = !{null, !1435, !186}
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1429, file: !992, line: 374, baseType: !1455, size: 32, offset: 64)
!1455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1456, size: 32)
!1456 = !DISubroutineType(types: !1457)
!1457 = !{!119, !1435}
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1429, file: !992, line: 377, baseType: !1459, size: 32, offset: 96)
!1459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1460, size: 32)
!1460 = !DISubroutineType(types: !1461)
!1461 = !{!119, !1435, !1462}
!1462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1463, size: 32)
!1463 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1464)
!1464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !992, line: 122, size: 64, elements: !1465)
!1465 = !{!1466, !1467, !1468, !1469, !1470}
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1464, file: !992, line: 123, baseType: !118, size: 32)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1464, file: !992, line: 124, baseType: !185, size: 8, offset: 32)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1464, file: !992, line: 125, baseType: !185, size: 8, offset: 40)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1464, file: !992, line: 126, baseType: !185, size: 8, offset: 48)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1464, file: !992, line: 127, baseType: !185, size: 8, offset: 56)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1429, file: !992, line: 379, baseType: !1472, size: 32, offset: 128)
!1472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1473, size: 32)
!1473 = !DISubroutineType(types: !1474)
!1474 = !{!119, !1435, !1475}
!1475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1464, size: 32)
!1476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1477, size: 32)
!1477 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !310, line: 836, baseType: !1478)
!1478 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 827, size: 224, elements: !1479)
!1479 = !{!1480, !1481, !1482, !1483, !1484, !1485, !1486}
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1478, file: !310, line: 829, baseType: !314, size: 32)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1478, file: !310, line: 830, baseType: !314, size: 32, offset: 32)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1478, file: !310, line: 831, baseType: !314, size: 32, offset: 64)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1478, file: !310, line: 832, baseType: !314, size: 32, offset: 96)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1478, file: !310, line: 833, baseType: !314, size: 32, offset: 128)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1478, file: !310, line: 834, baseType: !314, size: 32, offset: 160)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1478, file: !310, line: 835, baseType: !314, size: 32, offset: 192)
!1487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1488, size: 32)
!1488 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1489)
!1489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !858, line: 100, size: 224, elements: !1490)
!1490 = !{!1491, !1496, !1497, !1506, !1511, !1516, !1521}
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1489, file: !858, line: 101, baseType: !1492, size: 32)
!1492 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !858, line: 76, baseType: !1493)
!1493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1494, size: 32)
!1494 = !DISubroutineType(types: !1495)
!1495 = !{!119, !1435, !952}
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1489, file: !858, line: 102, baseType: !1492, size: 32, offset: 32)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1489, file: !858, line: 103, baseType: !1498, size: 32, offset: 64)
!1498 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !858, line: 83, baseType: !1499)
!1499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1500, size: 32)
!1500 = !DISubroutineType(types: !1501)
!1501 = !{!119, !1435, !952, !1502, !113}
!1502 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !858, line: 72, baseType: !1503)
!1503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1504, size: 32)
!1504 = !DISubroutineType(types: !1505)
!1505 = !{null, !1435, !952, !113}
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1489, file: !858, line: 104, baseType: !1507, size: 32, offset: 96)
!1507 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !858, line: 79, baseType: !1508)
!1508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1509, size: 32)
!1509 = !DISubroutineType(types: !1510)
!1510 = !{!119, !1435, !952, !908}
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1489, file: !858, line: 105, baseType: !1512, size: 32, offset: 128)
!1512 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !858, line: 88, baseType: !1513)
!1513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1514, size: 32)
!1514 = !DISubroutineType(types: !1515)
!1515 = !{!857, !1435, !952}
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1489, file: !858, line: 106, baseType: !1517, size: 32, offset: 160)
!1517 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !858, line: 92, baseType: !1518)
!1518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1519, size: 32)
!1519 = !DISubroutineType(types: !1520)
!1520 = !{!119, !1435, !952, !978}
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1489, file: !858, line: 107, baseType: !1522, size: 32, offset: 192)
!1522 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !858, line: 96, baseType: !1523)
!1523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1524, size: 32)
!1524 = !DISubroutineType(types: !1525)
!1525 = !{!119, !1435, !952, !113}
!1526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !314, size: 32)
!1527 = !{!1389, !1528, !1534, !1536, !1543, !1545, !1547, !1549, !1551, !1553, !1555, !1557, !1559, !1561, !1563, !1565, !1567, !1569, !1571, !1573, !1575, !1577, !1621, !1624, !1626, !1629, !1632, !1634, !1640, !1642, !1644, !1646, !1648, !1650, !1652, !1654, !1656, !1658, !1660, !1662, !1664, !1666, !1668, !1670, !1672, !1674, !1676, !1678, !1680, !1682, !1684, !1686}
!1528 = !DIGlobalVariableExpression(var: !1529, expr: !DIExpression())
!1529 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_63", scope: !1391, file: !1530, line: 1914, type: !1531, isLocal: false, isDefinition: true, align: 16)
!1530 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1531 = !DICompositeType(tag: DW_TAG_array_type, baseType: !349, size: 128, elements: !1532)
!1532 = !{!1533}
!1533 = !DISubrange(count: 8)
!1534 = !DIGlobalVariableExpression(var: !1535, expr: !DIExpression())
!1535 = distinct !DIGlobalVariable(name: "__device_dts_ord_63", scope: !1391, file: !1530, line: 1914, type: !1436, isLocal: false, isDefinition: true, align: 32)
!1536 = !DIGlobalVariableExpression(var: !1537, expr: !DIExpression())
!1537 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_63", scope: !1391, file: !1530, line: 1914, type: !1538, isLocal: true, isDefinition: true, align: 32)
!1538 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1539)
!1539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !1540)
!1540 = !{!1541, !1542}
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1539, file: !325, line: 60, baseType: !1455, size: 32)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1539, file: !325, line: 65, baseType: !1435, size: 32, offset: 32)
!1543 = !DIGlobalVariableExpression(var: !1544, expr: !DIExpression())
!1544 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_49", scope: !1391, file: !1530, line: 1914, type: !1531, isLocal: false, isDefinition: true, align: 16)
!1545 = !DIGlobalVariableExpression(var: !1546, expr: !DIExpression())
!1546 = distinct !DIGlobalVariable(name: "__device_dts_ord_49", scope: !1391, file: !1530, line: 1914, type: !1436, isLocal: false, isDefinition: true, align: 32)
!1547 = !DIGlobalVariableExpression(var: !1548, expr: !DIExpression())
!1548 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_49", scope: !1391, file: !1530, line: 1914, type: !1538, isLocal: true, isDefinition: true, align: 32)
!1549 = !DIGlobalVariableExpression(var: !1550, expr: !DIExpression())
!1550 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_52", scope: !1391, file: !1530, line: 1914, type: !1531, isLocal: false, isDefinition: true, align: 16)
!1551 = !DIGlobalVariableExpression(var: !1552, expr: !DIExpression())
!1552 = distinct !DIGlobalVariable(name: "__device_dts_ord_52", scope: !1391, file: !1530, line: 1914, type: !1436, isLocal: false, isDefinition: true, align: 32)
!1553 = !DIGlobalVariableExpression(var: !1554, expr: !DIExpression())
!1554 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_52", scope: !1391, file: !1530, line: 1914, type: !1538, isLocal: true, isDefinition: true, align: 32)
!1555 = !DIGlobalVariableExpression(var: !1556, expr: !DIExpression())
!1556 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_57", scope: !1391, file: !1530, line: 1914, type: !1531, isLocal: false, isDefinition: true, align: 16)
!1557 = !DIGlobalVariableExpression(var: !1558, expr: !DIExpression())
!1558 = distinct !DIGlobalVariable(name: "__device_dts_ord_57", scope: !1391, file: !1530, line: 1914, type: !1436, isLocal: false, isDefinition: true, align: 32)
!1559 = !DIGlobalVariableExpression(var: !1560, expr: !DIExpression())
!1560 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_57", scope: !1391, file: !1530, line: 1914, type: !1538, isLocal: true, isDefinition: true, align: 32)
!1561 = !DIGlobalVariableExpression(var: !1562, expr: !DIExpression())
!1562 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_60", scope: !1391, file: !1530, line: 1914, type: !1531, isLocal: false, isDefinition: true, align: 16)
!1563 = !DIGlobalVariableExpression(var: !1564, expr: !DIExpression())
!1564 = distinct !DIGlobalVariable(name: "__device_dts_ord_60", scope: !1391, file: !1530, line: 1914, type: !1436, isLocal: false, isDefinition: true, align: 32)
!1565 = !DIGlobalVariableExpression(var: !1566, expr: !DIExpression())
!1566 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_60", scope: !1391, file: !1530, line: 1914, type: !1538, isLocal: true, isDefinition: true, align: 32)
!1567 = !DIGlobalVariableExpression(var: !1568, expr: !DIExpression())
!1568 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_63", scope: !1391, file: !1530, line: 1914, type: !1444, isLocal: true, isDefinition: true, align: 8)
!1569 = !DIGlobalVariableExpression(var: !1570, expr: !DIExpression())
!1570 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_49", scope: !1391, file: !1530, line: 1914, type: !1444, isLocal: true, isDefinition: true, align: 8)
!1571 = !DIGlobalVariableExpression(var: !1572, expr: !DIExpression())
!1572 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_52", scope: !1391, file: !1530, line: 1914, type: !1444, isLocal: true, isDefinition: true, align: 8)
!1573 = !DIGlobalVariableExpression(var: !1574, expr: !DIExpression())
!1574 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_57", scope: !1391, file: !1530, line: 1914, type: !1444, isLocal: true, isDefinition: true, align: 8)
!1575 = !DIGlobalVariableExpression(var: !1576, expr: !DIExpression())
!1576 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_60", scope: !1391, file: !1530, line: 1914, type: !1444, isLocal: true, isDefinition: true, align: 8)
!1577 = !DIGlobalVariableExpression(var: !1578, expr: !DIExpression())
!1578 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1391, file: !1530, line: 1914, type: !1579, isLocal: true, isDefinition: true)
!1579 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1580)
!1580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1581, line: 22, size: 224, elements: !1582)
!1581 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1582 = !{!1583, !1584, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598}
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1580, file: !1581, line: 24, baseType: !1476, size: 32)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1580, file: !1581, line: 26, baseType: !1585, size: 32, offset: 32)
!1585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1586, size: 32)
!1586 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1587)
!1587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !904, line: 343, size: 64, elements: !1588)
!1588 = !{!1589, !1590}
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1587, file: !904, line: 344, baseType: !118, size: 32)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1587, file: !904, line: 345, baseType: !118, size: 32, offset: 32)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1580, file: !1581, line: 28, baseType: !239, size: 32, offset: 64)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1580, file: !1581, line: 30, baseType: !345, size: 8, offset: 96)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1580, file: !1581, line: 32, baseType: !119, size: 32, offset: 128)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1580, file: !1581, line: 34, baseType: !345, size: 8, offset: 160)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1580, file: !1581, line: 36, baseType: !345, size: 8, offset: 168)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1580, file: !1581, line: 38, baseType: !345, size: 8, offset: 176)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1580, file: !1581, line: 40, baseType: !345, size: 8, offset: 184)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1580, file: !1581, line: 41, baseType: !1599, size: 32, offset: 192)
!1599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1600, size: 32)
!1600 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1601)
!1601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1602, line: 60, size: 64, elements: !1603)
!1602 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1603 = !{!1604, !1620}
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1601, file: !1602, line: 69, baseType: !1605, size: 32)
!1605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1606, size: 32)
!1606 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1607)
!1607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1602, line: 50, size: 64, elements: !1608)
!1608 = !{!1609, !1618, !1619}
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1607, file: !1602, line: 52, baseType: !1610, size: 32)
!1610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1611, size: 32)
!1611 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1612)
!1612 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1613, line: 37, baseType: !1614)
!1613 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1613, line: 32, size: 64, elements: !1615)
!1615 = !{!1616, !1617}
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1614, file: !1613, line: 34, baseType: !118, size: 32)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1614, file: !1613, line: 36, baseType: !118, size: 32, offset: 32)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1607, file: !1602, line: 54, baseType: !185, size: 8, offset: 32)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1607, file: !1602, line: 56, baseType: !185, size: 8, offset: 40)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1601, file: !1602, line: 71, baseType: !185, size: 8, offset: 32)
!1621 = !DIGlobalVariableExpression(var: !1622, expr: !DIExpression())
!1622 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1391, file: !1530, line: 1914, type: !1623, isLocal: true, isDefinition: true)
!1623 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1586, size: 64, elements: !515)
!1624 = !DIGlobalVariableExpression(var: !1625, expr: !DIExpression())
!1625 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_63", scope: !1391, file: !1530, line: 1914, type: !1600, isLocal: true, isDefinition: true)
!1626 = !DIGlobalVariableExpression(var: !1627, expr: !DIExpression())
!1627 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_63", scope: !1391, file: !1530, line: 1914, type: !1628, isLocal: true, isDefinition: true)
!1628 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1606, size: 64, elements: !515)
!1629 = !DIGlobalVariableExpression(var: !1630, expr: !DIExpression())
!1630 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_63", scope: !1391, file: !1530, line: 1914, type: !1631, isLocal: true, isDefinition: true)
!1631 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1611, size: 128, elements: !174)
!1632 = !DIGlobalVariableExpression(var: !1633, expr: !DIExpression())
!1633 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1391, file: !1530, line: 1539, type: !1428, isLocal: true, isDefinition: true)
!1634 = !DIGlobalVariableExpression(var: !1635, expr: !DIExpression())
!1635 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1391, file: !1530, line: 1914, type: !1636, isLocal: true, isDefinition: true)
!1636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1581, line: 74, size: 64, elements: !1637)
!1637 = !{!1638, !1639}
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1636, file: !1581, line: 76, baseType: !118, size: 32)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1636, file: !1581, line: 78, baseType: !1435, size: 32, offset: 32)
!1640 = !DIGlobalVariableExpression(var: !1641, expr: !DIExpression())
!1641 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_1", scope: !1391, file: !1530, line: 1914, type: !1579, isLocal: true, isDefinition: true)
!1642 = !DIGlobalVariableExpression(var: !1643, expr: !DIExpression())
!1643 = distinct !DIGlobalVariable(name: "pclken_1", scope: !1391, file: !1530, line: 1914, type: !1623, isLocal: true, isDefinition: true)
!1644 = !DIGlobalVariableExpression(var: !1645, expr: !DIExpression())
!1645 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_49", scope: !1391, file: !1530, line: 1914, type: !1600, isLocal: true, isDefinition: true)
!1646 = !DIGlobalVariableExpression(var: !1647, expr: !DIExpression())
!1647 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_49", scope: !1391, file: !1530, line: 1914, type: !1628, isLocal: true, isDefinition: true)
!1648 = !DIGlobalVariableExpression(var: !1649, expr: !DIExpression())
!1649 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_49", scope: !1391, file: !1530, line: 1914, type: !1631, isLocal: true, isDefinition: true)
!1650 = !DIGlobalVariableExpression(var: !1651, expr: !DIExpression())
!1651 = distinct !DIGlobalVariable(name: "uart_stm32_data_1", scope: !1391, file: !1530, line: 1914, type: !1636, isLocal: true, isDefinition: true)
!1652 = !DIGlobalVariableExpression(var: !1653, expr: !DIExpression())
!1653 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_2", scope: !1391, file: !1530, line: 1914, type: !1579, isLocal: true, isDefinition: true)
!1654 = !DIGlobalVariableExpression(var: !1655, expr: !DIExpression())
!1655 = distinct !DIGlobalVariable(name: "pclken_2", scope: !1391, file: !1530, line: 1914, type: !1623, isLocal: true, isDefinition: true)
!1656 = !DIGlobalVariableExpression(var: !1657, expr: !DIExpression())
!1657 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_52", scope: !1391, file: !1530, line: 1914, type: !1600, isLocal: true, isDefinition: true)
!1658 = !DIGlobalVariableExpression(var: !1659, expr: !DIExpression())
!1659 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_52", scope: !1391, file: !1530, line: 1914, type: !1628, isLocal: true, isDefinition: true)
!1660 = !DIGlobalVariableExpression(var: !1661, expr: !DIExpression())
!1661 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_52", scope: !1391, file: !1530, line: 1914, type: !1631, isLocal: true, isDefinition: true)
!1662 = !DIGlobalVariableExpression(var: !1663, expr: !DIExpression())
!1663 = distinct !DIGlobalVariable(name: "uart_stm32_data_2", scope: !1391, file: !1530, line: 1914, type: !1636, isLocal: true, isDefinition: true)
!1664 = !DIGlobalVariableExpression(var: !1665, expr: !DIExpression())
!1665 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_3", scope: !1391, file: !1530, line: 1914, type: !1579, isLocal: true, isDefinition: true)
!1666 = !DIGlobalVariableExpression(var: !1667, expr: !DIExpression())
!1667 = distinct !DIGlobalVariable(name: "pclken_3", scope: !1391, file: !1530, line: 1914, type: !1623, isLocal: true, isDefinition: true)
!1668 = !DIGlobalVariableExpression(var: !1669, expr: !DIExpression())
!1669 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_57", scope: !1391, file: !1530, line: 1914, type: !1600, isLocal: true, isDefinition: true)
!1670 = !DIGlobalVariableExpression(var: !1671, expr: !DIExpression())
!1671 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_57", scope: !1391, file: !1530, line: 1914, type: !1628, isLocal: true, isDefinition: true)
!1672 = !DIGlobalVariableExpression(var: !1673, expr: !DIExpression())
!1673 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_57", scope: !1391, file: !1530, line: 1914, type: !1631, isLocal: true, isDefinition: true)
!1674 = !DIGlobalVariableExpression(var: !1675, expr: !DIExpression())
!1675 = distinct !DIGlobalVariable(name: "uart_stm32_data_3", scope: !1391, file: !1530, line: 1914, type: !1636, isLocal: true, isDefinition: true)
!1676 = !DIGlobalVariableExpression(var: !1677, expr: !DIExpression())
!1677 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_4", scope: !1391, file: !1530, line: 1914, type: !1579, isLocal: true, isDefinition: true)
!1678 = !DIGlobalVariableExpression(var: !1679, expr: !DIExpression())
!1679 = distinct !DIGlobalVariable(name: "pclken_4", scope: !1391, file: !1530, line: 1914, type: !1623, isLocal: true, isDefinition: true)
!1680 = !DIGlobalVariableExpression(var: !1681, expr: !DIExpression())
!1681 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_60", scope: !1391, file: !1530, line: 1914, type: !1600, isLocal: true, isDefinition: true)
!1682 = !DIGlobalVariableExpression(var: !1683, expr: !DIExpression())
!1683 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_60", scope: !1391, file: !1530, line: 1914, type: !1628, isLocal: true, isDefinition: true)
!1684 = !DIGlobalVariableExpression(var: !1685, expr: !DIExpression())
!1685 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_60", scope: !1391, file: !1530, line: 1914, type: !1631, isLocal: true, isDefinition: true)
!1686 = !DIGlobalVariableExpression(var: !1687, expr: !DIExpression())
!1687 = distinct !DIGlobalVariable(name: "uart_stm32_data_4", scope: !1391, file: !1530, line: 1914, type: !1636, isLocal: true, isDefinition: true)
!1688 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1689)
!1689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !289, line: 16, size: 64, elements: !1690)
!1690 = !{!1691, !1692}
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1689, file: !289, line: 17, baseType: !278, size: 32)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1689, file: !289, line: 18, baseType: !185, size: 8, offset: 32)
!1693 = !DIGlobalVariableExpression(var: !1694, expr: !DIExpression())
!1694 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1695, file: !1773, line: 65, type: !314, isLocal: true, isDefinition: true)
!1695 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1696, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1697, retainedTypes: !1698, globals: !1770, splitDebugInlining: false, nameTableKind: None)
!1696 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pi")
!1697 = !{!602}
!1698 = !{!114, !1699, !774, !185, !118, !1707, !1738}
!1699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1700, size: 32)
!1700 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !533, line: 770, baseType: !1701)
!1701 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 764, size: 128, elements: !1702)
!1702 = !{!1703, !1704, !1705, !1706}
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1701, file: !533, line: 766, baseType: !314, size: 32)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1701, file: !533, line: 767, baseType: !314, size: 32, offset: 32)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1701, file: !533, line: 768, baseType: !314, size: 32, offset: 64)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1701, file: !533, line: 769, baseType: !537, size: 32, offset: 96)
!1707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1708, size: 32)
!1708 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !533, line: 426, baseType: !1709)
!1709 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 411, size: 28704, elements: !1710)
!1710 = !{!1711, !1713, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1728, !1733, !1737}
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1709, file: !533, line: 413, baseType: !1712, size: 256)
!1712 = !DICompositeType(tag: DW_TAG_array_type, baseType: !314, size: 256, elements: !1532)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1709, file: !533, line: 414, baseType: !1714, size: 768, offset: 256)
!1714 = !DICompositeType(tag: DW_TAG_array_type, baseType: !118, size: 768, elements: !1715)
!1715 = !{!1716}
!1716 = !DISubrange(count: 24)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1709, file: !533, line: 415, baseType: !1712, size: 256, offset: 1024)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1709, file: !533, line: 416, baseType: !1714, size: 768, offset: 1280)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1709, file: !533, line: 417, baseType: !1712, size: 256, offset: 2048)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1709, file: !533, line: 418, baseType: !1714, size: 768, offset: 2304)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1709, file: !533, line: 419, baseType: !1712, size: 256, offset: 3072)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1709, file: !533, line: 420, baseType: !1714, size: 768, offset: 3328)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1709, file: !533, line: 421, baseType: !1712, size: 256, offset: 4096)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1709, file: !533, line: 422, baseType: !1725, size: 1792, offset: 4352)
!1725 = !DICompositeType(tag: DW_TAG_array_type, baseType: !118, size: 1792, elements: !1726)
!1726 = !{!1727}
!1727 = !DISubrange(count: 56)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1709, file: !533, line: 423, baseType: !1729, size: 1920, offset: 6144)
!1729 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1730, size: 1920, elements: !1731)
!1730 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !185)
!1731 = !{!1732}
!1732 = !DISubrange(count: 240)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1709, file: !533, line: 424, baseType: !1734, size: 20608, offset: 8064)
!1734 = !DICompositeType(tag: DW_TAG_array_type, baseType: !118, size: 20608, elements: !1735)
!1735 = !{!1736}
!1736 = !DISubrange(count: 644)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1709, file: !533, line: 425, baseType: !314, size: 32, offset: 28672)
!1738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1739, size: 32)
!1739 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !533, line: 468, baseType: !1740)
!1740 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 445, size: 1120, elements: !1741)
!1741 = !{!1742, !1743, !1744, !1745, !1746, !1747, !1748, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1761, !1762, !1763, !1765, !1767, !1769}
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1740, file: !533, line: 447, baseType: !537, size: 32)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1740, file: !533, line: 448, baseType: !314, size: 32, offset: 32)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1740, file: !533, line: 449, baseType: !314, size: 32, offset: 64)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1740, file: !533, line: 450, baseType: !314, size: 32, offset: 96)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1740, file: !533, line: 451, baseType: !314, size: 32, offset: 128)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1740, file: !533, line: 452, baseType: !314, size: 32, offset: 160)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1740, file: !533, line: 453, baseType: !1749, size: 96, offset: 192)
!1749 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1730, size: 96, elements: !1750)
!1750 = !{!1751}
!1751 = !DISubrange(count: 12)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1740, file: !533, line: 454, baseType: !314, size: 32, offset: 288)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1740, file: !533, line: 455, baseType: !314, size: 32, offset: 320)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1740, file: !533, line: 456, baseType: !314, size: 32, offset: 352)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1740, file: !533, line: 457, baseType: !314, size: 32, offset: 384)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1740, file: !533, line: 458, baseType: !314, size: 32, offset: 416)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1740, file: !533, line: 459, baseType: !314, size: 32, offset: 448)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1740, file: !533, line: 460, baseType: !314, size: 32, offset: 480)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1740, file: !533, line: 461, baseType: !1760, size: 64, offset: 512)
!1760 = !DICompositeType(tag: DW_TAG_array_type, baseType: !537, size: 64, elements: !174)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1740, file: !533, line: 462, baseType: !537, size: 32, offset: 576)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1740, file: !533, line: 463, baseType: !537, size: 32, offset: 608)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1740, file: !533, line: 464, baseType: !1764, size: 128, offset: 640)
!1764 = !DICompositeType(tag: DW_TAG_array_type, baseType: !537, size: 128, elements: !716)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1740, file: !533, line: 465, baseType: !1766, size: 160, offset: 768)
!1766 = !DICompositeType(tag: DW_TAG_array_type, baseType: !537, size: 160, elements: !1223)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1740, file: !533, line: 466, baseType: !1768, size: 160, offset: 928)
!1768 = !DICompositeType(tag: DW_TAG_array_type, baseType: !118, size: 160, elements: !1223)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1740, file: !533, line: 467, baseType: !314, size: 32, offset: 1088)
!1770 = !{!1771, !1797, !1802, !1804, !1806, !1693}
!1771 = !DIGlobalVariableExpression(var: !1772, expr: !DIExpression())
!1772 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1695, file: !1773, line: 285, type: !1774, isLocal: true, isDefinition: true, align: 32)
!1773 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1774 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1775)
!1775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !1776)
!1776 = !{!1777, !1796}
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1775, file: !325, line: 60, baseType: !1778, size: 32)
!1778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1779, size: 32)
!1779 = !DISubroutineType(types: !1780)
!1780 = !{!119, !1781}
!1781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1782, size: 32)
!1782 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1783)
!1783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !1784)
!1784 = !{!1785, !1786, !1787, !1788, !1794, !1795}
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1783, file: !334, line: 380, baseType: !278, size: 32)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1783, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1783, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1783, file: !334, line: 386, baseType: !1789, size: 32, offset: 96)
!1789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1790, size: 32)
!1790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !1791)
!1791 = !{!1792, !1793}
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1790, file: !334, line: 359, baseType: !185, size: 8)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1790, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1783, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1783, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1775, file: !325, line: 65, baseType: !1781, size: 32, offset: 32)
!1797 = !DIGlobalVariableExpression(var: !1798, expr: !DIExpression())
!1798 = distinct !DIGlobalVariable(name: "lock", scope: !1695, file: !1773, line: 34, type: !1799, isLocal: true, isDefinition: true)
!1799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !1800)
!1800 = !{!1801}
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1799, file: !259, line: 52, baseType: !22, size: 32)
!1802 = !DIGlobalVariableExpression(var: !1803, expr: !DIExpression())
!1803 = distinct !DIGlobalVariable(name: "last_load", scope: !1695, file: !1773, line: 36, type: !118, isLocal: true, isDefinition: true)
!1804 = !DIGlobalVariableExpression(var: !1805, expr: !DIExpression())
!1805 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1695, file: !1773, line: 48, type: !118, isLocal: true, isDefinition: true)
!1806 = !DIGlobalVariableExpression(var: !1807, expr: !DIExpression())
!1807 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1695, file: !1773, line: 54, type: !118, isLocal: true, isDefinition: true)
!1808 = !DIGlobalVariableExpression(var: !1809, expr: !DIExpression())
!1809 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1810, file: !1892, line: 22, type: !1894, isLocal: true, isDefinition: true)
!1810 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1811, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1812, retainedTypes: !1813, globals: !1889, splitDebugInlining: false, nameTableKind: None)
!1811 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pi")
!1812 = !{!1055, !1061}
!1813 = !{!1814, !1878, !1883, !1108, !1061, !1055, !1888, !113}
!1814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1815, size: 32)
!1815 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1816)
!1816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1056, line: 523, size: 288, elements: !1817)
!1817 = !{!1818, !1837, !1841, !1845, !1849, !1850, !1851, !1855, !1874}
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1816, file: !1056, line: 524, baseType: !1819, size: 32)
!1819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1820, size: 32)
!1820 = !DISubroutineType(types: !1821)
!1821 = !{!119, !1822, !1096, !1097}
!1822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1823, size: 32)
!1823 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1824)
!1824 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !1825)
!1825 = !{!1826, !1827, !1828, !1829, !1835, !1836}
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1824, file: !334, line: 380, baseType: !278, size: 32)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1824, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1824, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1824, file: !334, line: 386, baseType: !1830, size: 32, offset: 96)
!1830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1831, size: 32)
!1831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !1832)
!1832 = !{!1833, !1834}
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1831, file: !334, line: 359, baseType: !185, size: 8)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1831, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1824, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1824, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1816, file: !1056, line: 530, baseType: !1838, size: 32, offset: 32)
!1838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1839, size: 32)
!1839 = !DISubroutineType(types: !1840)
!1840 = !{!119, !1822, !1102}
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1816, file: !1056, line: 532, baseType: !1842, size: 32, offset: 64)
!1842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1843, size: 32)
!1843 = !DISubroutineType(types: !1844)
!1844 = !{!119, !1822, !1108, !1103}
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1816, file: !1056, line: 535, baseType: !1846, size: 32, offset: 96)
!1846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1847, size: 32)
!1847 = !DISubroutineType(types: !1848)
!1848 = !{!119, !1822, !1108}
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1816, file: !1056, line: 537, baseType: !1846, size: 32, offset: 128)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1816, file: !1056, line: 539, baseType: !1846, size: 32, offset: 160)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1816, file: !1056, line: 541, baseType: !1852, size: 32, offset: 192)
!1852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1853, size: 32)
!1853 = !DISubroutineType(types: !1854)
!1854 = !{!119, !1822, !1096, !1055, !1061}
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1816, file: !1056, line: 544, baseType: !1856, size: 32, offset: 224)
!1856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1857, size: 32)
!1857 = !DISubroutineType(types: !1858)
!1858 = !{!119, !1822, !1859, !345}
!1859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1860, size: 32)
!1860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1056, line: 478, size: 96, elements: !1861)
!1861 = !{!1862, !1868, !1873}
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1860, file: !1056, line: 482, baseType: !1863, size: 32)
!1863 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1128, line: 33, baseType: !1864)
!1864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1128, line: 29, size: 32, elements: !1865)
!1865 = !{!1866}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1864, file: !1128, line: 30, baseType: !1867, size: 32)
!1867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1864, size: 32)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1860, file: !1056, line: 485, baseType: !1869, size: 32, offset: 32)
!1869 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1056, line: 464, baseType: !1870)
!1870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1871, size: 32)
!1871 = !DISubroutineType(types: !1872)
!1872 = !{null, !1822, !1859, !1108}
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1860, file: !1056, line: 493, baseType: !1108, size: 32, offset: 64)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1816, file: !1056, line: 547, baseType: !1875, size: 32, offset: 256)
!1875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1876, size: 32)
!1876 = !DISubroutineType(types: !1877)
!1877 = !{!118, !1822}
!1878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1879, size: 32)
!1879 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1880)
!1880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1056, line: 428, size: 32, elements: !1881)
!1881 = !{!1882}
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1880, file: !1056, line: 434, baseType: !1108, size: 32)
!1883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1884, size: 32)
!1884 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1885)
!1885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1056, line: 441, size: 32, elements: !1886)
!1886 = !{!1887}
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1885, file: !1056, line: 447, baseType: !1108, size: 32)
!1888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1885, size: 32)
!1889 = !{!1890, !1808}
!1890 = !DIGlobalVariableExpression(var: !1891, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1891 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1810, file: !1892, line: 37, type: !1893, isLocal: true, isDefinition: true)
!1892 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1893 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !239)
!1894 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1895, size: 352, elements: !1896)
!1895 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1822)
!1896 = !{!1897}
!1897 = !DISubrange(count: 11)
!1898 = !DIGlobalVariableExpression(var: !1899, expr: !DIExpression())
!1899 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1900, file: !1942, line: 139, type: !1947, isLocal: false, isDefinition: true)
!1900 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1901, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1902, globals: !1939, splitDebugInlining: false, nameTableKind: None)
!1901 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pi")
!1902 = !{!1903}
!1903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1904, size: 32)
!1904 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !310, line: 677, baseType: !1905)
!1905 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 643, size: 1152, elements: !1906)
!1906 = !{!1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1938}
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1905, file: !310, line: 645, baseType: !314, size: 32)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1905, file: !310, line: 646, baseType: !314, size: 32, offset: 32)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1905, file: !310, line: 647, baseType: !314, size: 32, offset: 64)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1905, file: !310, line: 648, baseType: !314, size: 32, offset: 96)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1905, file: !310, line: 649, baseType: !314, size: 32, offset: 128)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1905, file: !310, line: 650, baseType: !314, size: 32, offset: 160)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1905, file: !310, line: 651, baseType: !314, size: 32, offset: 192)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1905, file: !310, line: 652, baseType: !118, size: 32, offset: 224)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1905, file: !310, line: 653, baseType: !314, size: 32, offset: 256)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1905, file: !310, line: 654, baseType: !314, size: 32, offset: 288)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1905, file: !310, line: 655, baseType: !880, size: 64, offset: 320)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1905, file: !310, line: 656, baseType: !314, size: 32, offset: 384)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1905, file: !310, line: 657, baseType: !314, size: 32, offset: 416)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1905, file: !310, line: 658, baseType: !314, size: 32, offset: 448)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1905, file: !310, line: 659, baseType: !118, size: 32, offset: 480)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1905, file: !310, line: 660, baseType: !314, size: 32, offset: 512)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1905, file: !310, line: 661, baseType: !314, size: 32, offset: 544)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1905, file: !310, line: 662, baseType: !880, size: 64, offset: 576)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1905, file: !310, line: 663, baseType: !314, size: 32, offset: 640)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1905, file: !310, line: 664, baseType: !314, size: 32, offset: 672)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1905, file: !310, line: 665, baseType: !314, size: 32, offset: 704)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1905, file: !310, line: 666, baseType: !118, size: 32, offset: 736)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1905, file: !310, line: 667, baseType: !314, size: 32, offset: 768)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1905, file: !310, line: 668, baseType: !314, size: 32, offset: 800)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1905, file: !310, line: 669, baseType: !880, size: 64, offset: 832)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1905, file: !310, line: 670, baseType: !314, size: 32, offset: 896)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1905, file: !310, line: 671, baseType: !314, size: 32, offset: 928)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1905, file: !310, line: 672, baseType: !880, size: 64, offset: 960)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1905, file: !310, line: 673, baseType: !314, size: 32, offset: 1024)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1905, file: !310, line: 674, baseType: !314, size: 32, offset: 1056)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !1905, file: !310, line: 675, baseType: !314, size: 32, offset: 1088)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1905, file: !310, line: 676, baseType: !314, size: 32, offset: 1120)
!1939 = !{!1940, !1943, !1898}
!1940 = !DIGlobalVariableExpression(var: !1941, expr: !DIExpression())
!1941 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1900, file: !1942, line: 137, type: !118, isLocal: false, isDefinition: true)
!1942 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1943 = !DIGlobalVariableExpression(var: !1944, expr: !DIExpression())
!1944 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1900, file: !1942, line: 138, type: !1945, isLocal: false, isDefinition: true)
!1945 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1946, size: 128, elements: !267)
!1946 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !185)
!1947 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1946, size: 64, elements: !1532)
!1948 = !DIGlobalVariableExpression(var: !1949, expr: !DIExpression())
!1949 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1950, file: !1953, line: 23, type: !1954, isLocal: false, isDefinition: true)
!1950 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1951, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !297, globals: !1952, splitDebugInlining: false, nameTableKind: None)
!1951 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pi")
!1952 = !{!1948}
!1953 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1954 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !119)
!1955 = !DIGlobalVariableExpression(var: !1956, expr: !DIExpression())
!1956 = distinct !DIGlobalVariable(name: "log_const_os", scope: !1957, file: !1961, line: 37, type: !2218, isLocal: false, isDefinition: true)
!1957 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1958, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1959, retainedTypes: !1968, globals: !2041, splitDebugInlining: false, nameTableKind: None)
!1958 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pi")
!1959 = !{!1960, !30, !602}
!1960 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1961, line: 63, baseType: !32, size: 32, elements: !1962)
!1961 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1962 = !{!1963, !1964, !1965, !1966, !1967}
!1963 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1964 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1965 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1966 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1967 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1968 = !{!22, !239, !113, !119, !1969, !106, !118, !1999, !774, !185, !2024}
!1969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1970, size: 32)
!1970 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1971)
!1971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1972, line: 51, size: 64, elements: !1973)
!1972 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1973 = !{!1974, !1994}
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1971, file: !1972, line: 52, baseType: !1975, size: 32)
!1975 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1972, line: 38, baseType: !1976)
!1976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1977, size: 32)
!1977 = !DISubroutineType(types: !1978)
!1978 = !{!119, !1979, !284, !199}
!1979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1980, size: 32)
!1980 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1981)
!1981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !1982)
!1982 = !{!1983, !1984, !1985, !1986, !1992, !1993}
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1981, file: !334, line: 380, baseType: !278, size: 32)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1981, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1981, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1981, file: !334, line: 386, baseType: !1987, size: 32, offset: 96)
!1987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1988, size: 32)
!1988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !1989)
!1989 = !{!1990, !1991}
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1988, file: !334, line: 359, baseType: !185, size: 8)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1988, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1981, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1981, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1971, file: !1972, line: 53, baseType: !1995, size: 32, offset: 32)
!1995 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1972, line: 47, baseType: !1996)
!1996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1997, size: 32)
!1997 = !DISubroutineType(types: !1998)
!1998 = !{!119, !1979, !284, !199, !118}
!1999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2000, size: 32)
!2000 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !533, line: 468, baseType: !2001)
!2001 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 445, size: 1120, elements: !2002)
!2002 = !{!2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023}
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2001, file: !533, line: 447, baseType: !537, size: 32)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2001, file: !533, line: 448, baseType: !314, size: 32, offset: 32)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2001, file: !533, line: 449, baseType: !314, size: 32, offset: 64)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2001, file: !533, line: 450, baseType: !314, size: 32, offset: 96)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2001, file: !533, line: 451, baseType: !314, size: 32, offset: 128)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2001, file: !533, line: 452, baseType: !314, size: 32, offset: 160)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2001, file: !533, line: 453, baseType: !1749, size: 96, offset: 192)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2001, file: !533, line: 454, baseType: !314, size: 32, offset: 288)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2001, file: !533, line: 455, baseType: !314, size: 32, offset: 320)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2001, file: !533, line: 456, baseType: !314, size: 32, offset: 352)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2001, file: !533, line: 457, baseType: !314, size: 32, offset: 384)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2001, file: !533, line: 458, baseType: !314, size: 32, offset: 416)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2001, file: !533, line: 459, baseType: !314, size: 32, offset: 448)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2001, file: !533, line: 460, baseType: !314, size: 32, offset: 480)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2001, file: !533, line: 461, baseType: !1760, size: 64, offset: 512)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2001, file: !533, line: 462, baseType: !537, size: 32, offset: 576)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2001, file: !533, line: 463, baseType: !537, size: 32, offset: 608)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2001, file: !533, line: 464, baseType: !1764, size: 128, offset: 640)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2001, file: !533, line: 465, baseType: !1766, size: 160, offset: 768)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2001, file: !533, line: 466, baseType: !1768, size: 160, offset: 928)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2001, file: !533, line: 467, baseType: !314, size: 32, offset: 1088)
!2024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2025, size: 32)
!2025 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !533, line: 426, baseType: !2026)
!2026 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 411, size: 28704, elements: !2027)
!2027 = !{!2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039, !2040}
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2026, file: !533, line: 413, baseType: !1712, size: 256)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2026, file: !533, line: 414, baseType: !1714, size: 768, offset: 256)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2026, file: !533, line: 415, baseType: !1712, size: 256, offset: 1024)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2026, file: !533, line: 416, baseType: !1714, size: 768, offset: 1280)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2026, file: !533, line: 417, baseType: !1712, size: 256, offset: 2048)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2026, file: !533, line: 418, baseType: !1714, size: 768, offset: 2304)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2026, file: !533, line: 419, baseType: !1712, size: 256, offset: 3072)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2026, file: !533, line: 420, baseType: !1714, size: 768, offset: 3328)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2026, file: !533, line: 421, baseType: !1712, size: 256, offset: 4096)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2026, file: !533, line: 422, baseType: !1725, size: 1792, offset: 4352)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2026, file: !533, line: 423, baseType: !1729, size: 1920, offset: 6144)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2026, file: !533, line: 424, baseType: !1734, size: 20608, offset: 8064)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2026, file: !533, line: 425, baseType: !314, size: 32, offset: 28672)
!2041 = !{!1955, !2042, !2168, !2176, !2178, !2181, !2186, !2188, !2193}
!2042 = !DIGlobalVariableExpression(var: !2043, expr: !DIExpression())
!2043 = distinct !DIGlobalVariable(name: "_kernel", scope: !1957, file: !1961, line: 40, type: !2044, isLocal: false, isDefinition: true)
!2044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !179, line: 158, size: 288, elements: !2045)
!2045 = !{!2046, !2163}
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2044, file: !179, line: 159, baseType: !2047, size: 192)
!2047 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2048, size: 192, elements: !515)
!2048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !179, line: 100, size: 192, elements: !2049)
!2049 = !{!2050, !2051, !2052, !2156, !2157, !2158, !2159}
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2048, file: !179, line: 102, baseType: !118, size: 32)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2048, file: !179, line: 105, baseType: !106, size: 32, offset: 32)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2048, file: !179, line: 108, baseType: !2053, size: 32, offset: 64)
!2053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2054, size: 32)
!2054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !143, line: 245, size: 1280, elements: !2055)
!2055 = !{!2056, !2114, !2126, !2127, !2128, !2129, !2130, !2136, !2151}
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2054, file: !143, line: 247, baseType: !2057, size: 384)
!2057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !143, line: 57, size: 384, elements: !2058)
!2058 = !{!2059, !2083, !2090, !2091, !2092, !2101, !2102, !2103}
!2059 = !DIDerivedType(tag: DW_TAG_member, scope: !2057, file: !143, line: 60, baseType: !2060, size: 64)
!2060 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2057, file: !143, line: 60, size: 64, elements: !2061)
!2061 = !{!2062, !2077}
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2060, file: !143, line: 61, baseType: !2063, size: 64)
!2063 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !153, line: 49, baseType: !2064)
!2064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !2065)
!2065 = !{!2066, !2072}
!2066 = !DIDerivedType(tag: DW_TAG_member, scope: !2064, file: !153, line: 38, baseType: !2067, size: 32)
!2067 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2064, file: !153, line: 38, size: 32, elements: !2068)
!2068 = !{!2069, !2071}
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2067, file: !153, line: 39, baseType: !2070, size: 32)
!2070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2064, size: 32)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2067, file: !153, line: 40, baseType: !2070, size: 32)
!2072 = !DIDerivedType(tag: DW_TAG_member, scope: !2064, file: !153, line: 42, baseType: !2073, size: 32, offset: 32)
!2073 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2064, file: !153, line: 42, size: 32, elements: !2074)
!2074 = !{!2075, !2076}
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2073, file: !153, line: 43, baseType: !2070, size: 32)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2073, file: !153, line: 44, baseType: !2070, size: 32)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2060, file: !143, line: 62, baseType: !2078, size: 64)
!2078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !169, line: 49, size: 64, elements: !2079)
!2079 = !{!2080}
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2078, file: !169, line: 50, baseType: !2081, size: 64)
!2081 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2082, size: 64, elements: !174)
!2082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2078, size: 32)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2057, file: !143, line: 68, baseType: !2084, size: 32, offset: 64)
!2084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2085, size: 32)
!2085 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !179, line: 233, baseType: !2086)
!2086 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !179, line: 231, size: 64, elements: !2087)
!2087 = !{!2088}
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2086, file: !179, line: 232, baseType: !2089, size: 64)
!2089 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !2064)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2057, file: !143, line: 71, baseType: !185, size: 8, offset: 96)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2057, file: !143, line: 74, baseType: !185, size: 8, offset: 104)
!2092 = !DIDerivedType(tag: DW_TAG_member, scope: !2057, file: !143, line: 90, baseType: !2093, size: 16, offset: 112)
!2093 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2057, file: !143, line: 90, size: 16, elements: !2094)
!2094 = !{!2095, !2100}
!2095 = !DIDerivedType(tag: DW_TAG_member, scope: !2093, file: !143, line: 91, baseType: !2096, size: 16)
!2096 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2093, file: !143, line: 91, size: 16, elements: !2097)
!2097 = !{!2098, !2099}
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2096, file: !143, line: 96, baseType: !195, size: 8)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2096, file: !143, line: 97, baseType: !185, size: 8, offset: 8)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2093, file: !143, line: 100, baseType: !199, size: 16)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2057, file: !143, line: 107, baseType: !118, size: 32, offset: 128)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2057, file: !143, line: 127, baseType: !113, size: 32, offset: 160)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2057, file: !143, line: 131, baseType: !2104, size: 192, offset: 192)
!2104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !179, line: 244, size: 192, elements: !2105)
!2105 = !{!2106, !2107, !2113}
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2104, file: !179, line: 245, baseType: !2063, size: 64)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2104, file: !179, line: 246, baseType: !2108, size: 32, offset: 64)
!2108 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !179, line: 242, baseType: !2109)
!2109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2110, size: 32)
!2110 = !DISubroutineType(types: !2111)
!2111 = !{null, !2112}
!2112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2104, size: 32)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2104, file: !179, line: 249, baseType: !116, size: 64, offset: 128)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2054, file: !143, line: 250, baseType: !2115, size: 288, offset: 384)
!2115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !2116)
!2116 = !{!2117, !2118, !2119, !2120, !2121, !2122, !2123, !2124, !2125}
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2115, file: !216, line: 26, baseType: !118, size: 32)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2115, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2115, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2115, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2115, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2115, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2115, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2115, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2115, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2054, file: !143, line: 253, baseType: !113, size: 32, offset: 672)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2054, file: !143, line: 256, baseType: !2085, size: 64, offset: 704)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2054, file: !143, line: 279, baseType: !230, size: 256, offset: 768)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2054, file: !143, line: 294, baseType: !119, size: 32, offset: 1024)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2054, file: !143, line: 300, baseType: !2131, size: 96, offset: 1056)
!2131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !143, line: 149, size: 96, elements: !2132)
!2132 = !{!2133, !2134, !2135}
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2131, file: !143, line: 153, baseType: !22, size: 32)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2131, file: !143, line: 162, baseType: !239, size: 32, offset: 32)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2131, file: !143, line: 168, baseType: !239, size: 32, offset: 64)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2054, file: !143, line: 325, baseType: !2137, size: 32, offset: 1152)
!2137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2138, size: 32)
!2138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !245, line: 5073, size: 192, elements: !2139)
!2139 = !{!2140, !2146, !2147}
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2138, file: !245, line: 5074, baseType: !2141, size: 96)
!2141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !249, line: 56, size: 96, elements: !2142)
!2142 = !{!2143, !2144, !2145}
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2141, file: !249, line: 57, baseType: !252, size: 32)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2141, file: !249, line: 58, baseType: !113, size: 32, offset: 32)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2141, file: !249, line: 59, baseType: !239, size: 32, offset: 64)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2138, file: !245, line: 5075, baseType: !2085, size: 64, offset: 96)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2138, file: !245, line: 5076, baseType: !2148, size: 32, offset: 160)
!2148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !2149)
!2149 = !{!2150}
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2148, file: !259, line: 52, baseType: !22, size: 32)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2054, file: !143, line: 343, baseType: !2152, size: 64, offset: 1184)
!2152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !216, line: 60, size: 64, elements: !2153)
!2153 = !{!2154, !2155}
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2152, file: !216, line: 63, baseType: !118, size: 32)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2152, file: !216, line: 66, baseType: !118, size: 32, offset: 32)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2048, file: !179, line: 111, baseType: !2053, size: 32, offset: 96)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2048, file: !179, line: 124, baseType: !119, size: 32, offset: 128)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2048, file: !179, line: 127, baseType: !185, size: 8, offset: 160)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2048, file: !179, line: 153, baseType: !2160, offset: 168)
!2160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2161, line: 33, elements: !2162)
!2161 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2162 = !{}
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2044, file: !179, line: 170, baseType: !2164, size: 96, offset: 192)
!2164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !179, line: 83, size: 96, elements: !2165)
!2165 = !{!2166, !2167}
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2164, file: !179, line: 86, baseType: !2053, size: 32)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2164, file: !179, line: 90, baseType: !2089, size: 64, offset: 32)
!2168 = !DIGlobalVariableExpression(var: !2169, expr: !DIExpression())
!2169 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1957, file: !1961, line: 43, type: !2170, isLocal: false, isDefinition: true, align: 512)
!2170 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2171, size: 8704, elements: !2174)
!2171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !128, line: 47, size: 8, elements: !2172)
!2172 = !{!2173}
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2171, file: !128, line: 48, baseType: !107, size: 8)
!2174 = !{!2175}
!2175 = !DISubrange(count: 1088)
!2176 = !DIGlobalVariableExpression(var: !2177, expr: !DIExpression())
!2177 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1957, file: !1961, line: 44, type: !2054, isLocal: false, isDefinition: true)
!2178 = !DIGlobalVariableExpression(var: !2179, expr: !DIExpression())
!2179 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1957, file: !1961, line: 48, type: !2180, isLocal: false, isDefinition: true)
!2180 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2054, size: 1280, elements: !515)
!2181 = !DIGlobalVariableExpression(var: !2182, expr: !DIExpression())
!2182 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1957, file: !1961, line: 86, type: !2183, isLocal: false, isDefinition: true, align: 512)
!2183 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2171, size: 16896, elements: !2184)
!2184 = !{!516, !2185}
!2185 = !DISubrange(count: 2112)
!2186 = !DIGlobalVariableExpression(var: !2187, expr: !DIExpression())
!2187 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1957, file: !1961, line: 217, type: !345, isLocal: false, isDefinition: true)
!2188 = !DIGlobalVariableExpression(var: !2189, expr: !DIExpression())
!2189 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1957, file: !1961, line: 50, type: !2190, isLocal: true, isDefinition: true, align: 512)
!2190 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2171, size: 3072, elements: !2191)
!2191 = !{!516, !2192}
!2192 = !DISubrange(count: 384)
!2193 = !DIGlobalVariableExpression(var: !2194, expr: !DIExpression())
!2194 = distinct !DIGlobalVariable(name: "levels", scope: !2195, file: !1961, line: 232, type: !2215, isLocal: true, isDefinition: true)
!2195 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1961, file: !1961, line: 230, type: !2196, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1957, retainedNodes: !2198)
!2196 = !DISubroutineType(types: !2197)
!2197 = !{null, !1960}
!2198 = !{!2199, !2200, !2210, !2214}
!2199 = !DILocalVariable(name: "level", arg: 1, scope: !2195, file: !1961, line: 230, type: !1960)
!2200 = !DILocalVariable(name: "entry", scope: !2195, file: !1961, line: 244, type: !2201)
!2201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2202, size: 32)
!2202 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2203)
!2203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !325, line: 51, size: 64, elements: !2204)
!2204 = !{!2205, !2209}
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2203, file: !325, line: 60, baseType: !2206, size: 32)
!2206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2207, size: 32)
!2207 = !DISubroutineType(types: !2208)
!2208 = !{!119, !1979}
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2203, file: !325, line: 65, baseType: !1979, size: 32, offset: 32)
!2210 = !DILocalVariable(name: "dev", scope: !2211, file: !1961, line: 247, type: !1979)
!2211 = distinct !DILexicalBlock(scope: !2212, file: !1961, line: 246, column: 64)
!2212 = distinct !DILexicalBlock(scope: !2213, file: !1961, line: 246, column: 2)
!2213 = distinct !DILexicalBlock(scope: !2195, file: !1961, line: 246, column: 2)
!2214 = !DILocalVariable(name: "rc", scope: !2211, file: !1961, line: 248, type: !119)
!2215 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2201, size: 192, elements: !2216)
!2216 = !{!2217}
!2217 = !DISubrange(count: 6)
!2218 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2219)
!2219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !289, line: 16, size: 64, elements: !2220)
!2220 = !{!2221, !2222}
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2219, file: !289, line: 17, baseType: !278, size: 32)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2219, file: !289, line: 18, baseType: !185, size: 8, offset: 32)
!2223 = !DIGlobalVariableExpression(var: !2224, expr: !DIExpression())
!2224 = distinct !DIGlobalVariable(name: "states_str", scope: !2225, file: !2226, line: 276, type: !2350, isLocal: true, isDefinition: true)
!2225 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2226, file: !2226, line: 271, type: !2227, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !2341)
!2226 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2227 = !DISubroutineType(types: !2228)
!2228 = !{!278, !2229, !106, !239}
!2229 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !143, line: 347, baseType: !2230)
!2230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2231, size: 32)
!2231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !143, line: 245, size: 1280, elements: !2232)
!2232 = !{!2233, !2291, !2303, !2304, !2305, !2306, !2307, !2313, !2328}
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2231, file: !143, line: 247, baseType: !2234, size: 384)
!2234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !143, line: 57, size: 384, elements: !2235)
!2235 = !{!2236, !2260, !2267, !2268, !2269, !2278, !2279, !2280}
!2236 = !DIDerivedType(tag: DW_TAG_member, scope: !2234, file: !143, line: 60, baseType: !2237, size: 64)
!2237 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2234, file: !143, line: 60, size: 64, elements: !2238)
!2238 = !{!2239, !2254}
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2237, file: !143, line: 61, baseType: !2240, size: 64)
!2240 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !153, line: 49, baseType: !2241)
!2241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !2242)
!2242 = !{!2243, !2249}
!2243 = !DIDerivedType(tag: DW_TAG_member, scope: !2241, file: !153, line: 38, baseType: !2244, size: 32)
!2244 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2241, file: !153, line: 38, size: 32, elements: !2245)
!2245 = !{!2246, !2248}
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2244, file: !153, line: 39, baseType: !2247, size: 32)
!2247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2241, size: 32)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2244, file: !153, line: 40, baseType: !2247, size: 32)
!2249 = !DIDerivedType(tag: DW_TAG_member, scope: !2241, file: !153, line: 42, baseType: !2250, size: 32, offset: 32)
!2250 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2241, file: !153, line: 42, size: 32, elements: !2251)
!2251 = !{!2252, !2253}
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2250, file: !153, line: 43, baseType: !2247, size: 32)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2250, file: !153, line: 44, baseType: !2247, size: 32)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2237, file: !143, line: 62, baseType: !2255, size: 64)
!2255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !169, line: 49, size: 64, elements: !2256)
!2256 = !{!2257}
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2255, file: !169, line: 50, baseType: !2258, size: 64)
!2258 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2259, size: 64, elements: !174)
!2259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2255, size: 32)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2234, file: !143, line: 68, baseType: !2261, size: 32, offset: 64)
!2261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2262, size: 32)
!2262 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !179, line: 233, baseType: !2263)
!2263 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !179, line: 231, size: 64, elements: !2264)
!2264 = !{!2265}
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2263, file: !179, line: 232, baseType: !2266, size: 64)
!2266 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !2241)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2234, file: !143, line: 71, baseType: !185, size: 8, offset: 96)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2234, file: !143, line: 74, baseType: !185, size: 8, offset: 104)
!2269 = !DIDerivedType(tag: DW_TAG_member, scope: !2234, file: !143, line: 90, baseType: !2270, size: 16, offset: 112)
!2270 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2234, file: !143, line: 90, size: 16, elements: !2271)
!2271 = !{!2272, !2277}
!2272 = !DIDerivedType(tag: DW_TAG_member, scope: !2270, file: !143, line: 91, baseType: !2273, size: 16)
!2273 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2270, file: !143, line: 91, size: 16, elements: !2274)
!2274 = !{!2275, !2276}
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2273, file: !143, line: 96, baseType: !195, size: 8)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2273, file: !143, line: 97, baseType: !185, size: 8, offset: 8)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2270, file: !143, line: 100, baseType: !199, size: 16)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2234, file: !143, line: 107, baseType: !118, size: 32, offset: 128)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2234, file: !143, line: 127, baseType: !113, size: 32, offset: 160)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2234, file: !143, line: 131, baseType: !2281, size: 192, offset: 192)
!2281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !179, line: 244, size: 192, elements: !2282)
!2282 = !{!2283, !2284, !2290}
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2281, file: !179, line: 245, baseType: !2240, size: 64)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2281, file: !179, line: 246, baseType: !2285, size: 32, offset: 64)
!2285 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !179, line: 242, baseType: !2286)
!2286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2287, size: 32)
!2287 = !DISubroutineType(types: !2288)
!2288 = !{null, !2289}
!2289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2281, size: 32)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2281, file: !179, line: 249, baseType: !116, size: 64, offset: 128)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2231, file: !143, line: 250, baseType: !2292, size: 288, offset: 384)
!2292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !2293)
!2293 = !{!2294, !2295, !2296, !2297, !2298, !2299, !2300, !2301, !2302}
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2292, file: !216, line: 26, baseType: !118, size: 32)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2292, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2292, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2292, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2292, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2292, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2292, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2292, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2292, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2231, file: !143, line: 253, baseType: !113, size: 32, offset: 672)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2231, file: !143, line: 256, baseType: !2262, size: 64, offset: 704)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2231, file: !143, line: 279, baseType: !230, size: 256, offset: 768)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2231, file: !143, line: 294, baseType: !119, size: 32, offset: 1024)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2231, file: !143, line: 300, baseType: !2308, size: 96, offset: 1056)
!2308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !143, line: 149, size: 96, elements: !2309)
!2309 = !{!2310, !2311, !2312}
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2308, file: !143, line: 153, baseType: !22, size: 32)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2308, file: !143, line: 162, baseType: !239, size: 32, offset: 32)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2308, file: !143, line: 168, baseType: !239, size: 32, offset: 64)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2231, file: !143, line: 325, baseType: !2314, size: 32, offset: 1152)
!2314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2315, size: 32)
!2315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !245, line: 5073, size: 192, elements: !2316)
!2316 = !{!2317, !2323, !2324}
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2315, file: !245, line: 5074, baseType: !2318, size: 96)
!2318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !249, line: 56, size: 96, elements: !2319)
!2319 = !{!2320, !2321, !2322}
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2318, file: !249, line: 57, baseType: !252, size: 32)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2318, file: !249, line: 58, baseType: !113, size: 32, offset: 32)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2318, file: !249, line: 59, baseType: !239, size: 32, offset: 64)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2315, file: !245, line: 5075, baseType: !2262, size: 64, offset: 96)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2315, file: !245, line: 5076, baseType: !2325, size: 32, offset: 160)
!2325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !2326)
!2326 = !{!2327}
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2325, file: !259, line: 52, baseType: !22, size: 32)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2231, file: !143, line: 343, baseType: !2329, size: 64, offset: 1184)
!2329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !216, line: 60, size: 64, elements: !2330)
!2330 = !{!2331, !2332}
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2329, file: !216, line: 63, baseType: !118, size: 32)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2329, file: !216, line: 66, baseType: !118, size: 32, offset: 32)
!2333 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2334, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2335, globals: !2337, splitDebugInlining: false, nameTableKind: None)
!2334 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pi")
!2335 = !{!113, !278, !114, !185, !22, !119, !2336, !24, !239, !106, !118, !120}
!2336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2240, size: 32)
!2337 = !{!2223, !2338}
!2338 = !DIGlobalVariableExpression(var: !2339, expr: !DIExpression())
!2339 = distinct !DIGlobalVariable(name: "states_sz", scope: !2225, file: !2226, line: 279, type: !2340, isLocal: true, isDefinition: true)
!2340 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1893, size: 256, elements: !1532)
!2341 = !{!2342, !2343, !2344, !2345, !2346, !2347, !2348}
!2342 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2225, file: !2226, line: 271, type: !2229)
!2343 = !DILocalVariable(name: "buf", arg: 2, scope: !2225, file: !2226, line: 271, type: !106)
!2344 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2225, file: !2226, line: 271, type: !239)
!2345 = !DILocalVariable(name: "off", scope: !2225, file: !2226, line: 273, type: !239)
!2346 = !DILocalVariable(name: "bit", scope: !2225, file: !2226, line: 274, type: !185)
!2347 = !DILocalVariable(name: "thread_state", scope: !2225, file: !2226, line: 275, type: !185)
!2348 = !DILocalVariable(name: "index", scope: !2349, file: !2226, line: 293, type: !185)
!2349 = distinct !DILexicalBlock(scope: !2225, file: !2226, line: 293, column: 2)
!2350 = !DICompositeType(tag: DW_TAG_array_type, baseType: !278, size: 256, elements: !1532)
!2351 = !DIGlobalVariableExpression(var: !2352, expr: !DIExpression())
!2352 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2353, file: !2464, line: 56, type: !2451, isLocal: false, isDefinition: true)
!2353 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2354, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2355, globals: !2461, splitDebugInlining: false, nameTableKind: None)
!2354 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pi")
!2355 = !{!2356, !106, !113, !2459, !284, !114, !774, !119, !118, !120, !2460}
!2356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2357, size: 32)
!2357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !143, line: 245, size: 1280, elements: !2358)
!2358 = !{!2359, !2417, !2429, !2430, !2431, !2432, !2433, !2439, !2454}
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2357, file: !143, line: 247, baseType: !2360, size: 384)
!2360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !143, line: 57, size: 384, elements: !2361)
!2361 = !{!2362, !2386, !2393, !2394, !2395, !2404, !2405, !2406}
!2362 = !DIDerivedType(tag: DW_TAG_member, scope: !2360, file: !143, line: 60, baseType: !2363, size: 64)
!2363 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2360, file: !143, line: 60, size: 64, elements: !2364)
!2364 = !{!2365, !2380}
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2363, file: !143, line: 61, baseType: !2366, size: 64)
!2366 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !153, line: 49, baseType: !2367)
!2367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !2368)
!2368 = !{!2369, !2375}
!2369 = !DIDerivedType(tag: DW_TAG_member, scope: !2367, file: !153, line: 38, baseType: !2370, size: 32)
!2370 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2367, file: !153, line: 38, size: 32, elements: !2371)
!2371 = !{!2372, !2374}
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2370, file: !153, line: 39, baseType: !2373, size: 32)
!2373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2367, size: 32)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2370, file: !153, line: 40, baseType: !2373, size: 32)
!2375 = !DIDerivedType(tag: DW_TAG_member, scope: !2367, file: !153, line: 42, baseType: !2376, size: 32, offset: 32)
!2376 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2367, file: !153, line: 42, size: 32, elements: !2377)
!2377 = !{!2378, !2379}
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2376, file: !153, line: 43, baseType: !2373, size: 32)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2376, file: !153, line: 44, baseType: !2373, size: 32)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2363, file: !143, line: 62, baseType: !2381, size: 64)
!2381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !169, line: 49, size: 64, elements: !2382)
!2382 = !{!2383}
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2381, file: !169, line: 50, baseType: !2384, size: 64)
!2384 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2385, size: 64, elements: !174)
!2385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2381, size: 32)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2360, file: !143, line: 68, baseType: !2387, size: 32, offset: 64)
!2387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2388, size: 32)
!2388 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !179, line: 233, baseType: !2389)
!2389 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !179, line: 231, size: 64, elements: !2390)
!2390 = !{!2391}
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2389, file: !179, line: 232, baseType: !2392, size: 64)
!2392 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !2367)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2360, file: !143, line: 71, baseType: !185, size: 8, offset: 96)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2360, file: !143, line: 74, baseType: !185, size: 8, offset: 104)
!2395 = !DIDerivedType(tag: DW_TAG_member, scope: !2360, file: !143, line: 90, baseType: !2396, size: 16, offset: 112)
!2396 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2360, file: !143, line: 90, size: 16, elements: !2397)
!2397 = !{!2398, !2403}
!2398 = !DIDerivedType(tag: DW_TAG_member, scope: !2396, file: !143, line: 91, baseType: !2399, size: 16)
!2399 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2396, file: !143, line: 91, size: 16, elements: !2400)
!2400 = !{!2401, !2402}
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2399, file: !143, line: 96, baseType: !195, size: 8)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2399, file: !143, line: 97, baseType: !185, size: 8, offset: 8)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2396, file: !143, line: 100, baseType: !199, size: 16)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2360, file: !143, line: 107, baseType: !118, size: 32, offset: 128)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2360, file: !143, line: 127, baseType: !113, size: 32, offset: 160)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2360, file: !143, line: 131, baseType: !2407, size: 192, offset: 192)
!2407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !179, line: 244, size: 192, elements: !2408)
!2408 = !{!2409, !2410, !2416}
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2407, file: !179, line: 245, baseType: !2366, size: 64)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2407, file: !179, line: 246, baseType: !2411, size: 32, offset: 64)
!2411 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !179, line: 242, baseType: !2412)
!2412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2413, size: 32)
!2413 = !DISubroutineType(types: !2414)
!2414 = !{null, !2415}
!2415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2407, size: 32)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2407, file: !179, line: 249, baseType: !116, size: 64, offset: 128)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2357, file: !143, line: 250, baseType: !2418, size: 288, offset: 384)
!2418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !2419)
!2419 = !{!2420, !2421, !2422, !2423, !2424, !2425, !2426, !2427, !2428}
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2418, file: !216, line: 26, baseType: !118, size: 32)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2418, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2418, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2418, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2418, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2418, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2418, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2418, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2418, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2357, file: !143, line: 253, baseType: !113, size: 32, offset: 672)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2357, file: !143, line: 256, baseType: !2388, size: 64, offset: 704)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2357, file: !143, line: 279, baseType: !230, size: 256, offset: 768)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2357, file: !143, line: 294, baseType: !119, size: 32, offset: 1024)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2357, file: !143, line: 300, baseType: !2434, size: 96, offset: 1056)
!2434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !143, line: 149, size: 96, elements: !2435)
!2435 = !{!2436, !2437, !2438}
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2434, file: !143, line: 153, baseType: !22, size: 32)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2434, file: !143, line: 162, baseType: !239, size: 32, offset: 32)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2434, file: !143, line: 168, baseType: !239, size: 32, offset: 64)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2357, file: !143, line: 325, baseType: !2440, size: 32, offset: 1152)
!2440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2441, size: 32)
!2441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !245, line: 5073, size: 192, elements: !2442)
!2442 = !{!2443, !2449, !2450}
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2441, file: !245, line: 5074, baseType: !2444, size: 96)
!2444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !249, line: 56, size: 96, elements: !2445)
!2445 = !{!2446, !2447, !2448}
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2444, file: !249, line: 57, baseType: !252, size: 32)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2444, file: !249, line: 58, baseType: !113, size: 32, offset: 32)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2444, file: !249, line: 59, baseType: !239, size: 32, offset: 64)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2441, file: !245, line: 5075, baseType: !2388, size: 64, offset: 96)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2441, file: !245, line: 5076, baseType: !2451, size: 32, offset: 160)
!2451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !2452)
!2452 = !{!2453}
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2451, file: !259, line: 52, baseType: !22, size: 32)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2357, file: !143, line: 343, baseType: !2455, size: 64, offset: 1184)
!2455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !216, line: 60, size: 64, elements: !2456)
!2456 = !{!2457, !2458}
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2455, file: !216, line: 63, baseType: !118, size: 32)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2455, file: !216, line: 66, baseType: !118, size: 32, offset: 32)
!2459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2385, size: 32)
!2460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2366, size: 32)
!2461 = !{!2351, !2462, !2465, !2467}
!2462 = !DIGlobalVariableExpression(var: !2463, expr: !DIExpression())
!2463 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2353, file: !2464, line: 404, type: !119, isLocal: true, isDefinition: true)
!2464 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2465 = !DIGlobalVariableExpression(var: !2466, expr: !DIExpression())
!2466 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2353, file: !2464, line: 405, type: !119, isLocal: true, isDefinition: true)
!2467 = !DIGlobalVariableExpression(var: !2468, expr: !DIExpression())
!2468 = distinct !DIGlobalVariable(name: "pending_current", scope: !2353, file: !2464, line: 425, type: !2356, isLocal: true, isDefinition: true)
!2469 = !DIGlobalVariableExpression(var: !2470, expr: !DIExpression())
!2470 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2471, file: !2501, line: 19, type: !2507, isLocal: true, isDefinition: true)
!2471 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2472, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2473, globals: !2498, splitDebugInlining: false, nameTableKind: None)
!2472 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pi")
!2473 = !{!114, !113, !774, !118, !120, !119, !2474, !106, !116}
!2474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2475, size: 32)
!2475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !179, line: 244, size: 192, elements: !2476)
!2476 = !{!2477, !2492, !2497}
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2475, file: !179, line: 245, baseType: !2478, size: 64)
!2478 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !153, line: 49, baseType: !2479)
!2479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !2480)
!2480 = !{!2481, !2487}
!2481 = !DIDerivedType(tag: DW_TAG_member, scope: !2479, file: !153, line: 38, baseType: !2482, size: 32)
!2482 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2479, file: !153, line: 38, size: 32, elements: !2483)
!2483 = !{!2484, !2486}
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2482, file: !153, line: 39, baseType: !2485, size: 32)
!2485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2479, size: 32)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2482, file: !153, line: 40, baseType: !2485, size: 32)
!2487 = !DIDerivedType(tag: DW_TAG_member, scope: !2479, file: !153, line: 42, baseType: !2488, size: 32, offset: 32)
!2488 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2479, file: !153, line: 42, size: 32, elements: !2489)
!2489 = !{!2490, !2491}
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2488, file: !153, line: 43, baseType: !2485, size: 32)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2488, file: !153, line: 44, baseType: !2485, size: 32)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2475, file: !179, line: 246, baseType: !2493, size: 32, offset: 64)
!2493 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !179, line: 242, baseType: !2494)
!2494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2495, size: 32)
!2495 = !DISubroutineType(types: !2496)
!2496 = !{null, !2474}
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2475, file: !179, line: 249, baseType: !116, size: 64, offset: 128)
!2498 = !{!2499, !2469, !2502, !2504}
!2499 = !DIGlobalVariableExpression(var: !2500, expr: !DIExpression())
!2500 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2471, file: !2501, line: 15, type: !120, isLocal: true, isDefinition: true)
!2501 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2502 = !DIGlobalVariableExpression(var: !2503, expr: !DIExpression())
!2503 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2471, file: !2501, line: 25, type: !119, isLocal: true, isDefinition: true)
!2504 = !DIGlobalVariableExpression(var: !2505, expr: !DIExpression())
!2505 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2471, file: !2501, line: 17, type: !2506, isLocal: true, isDefinition: true)
!2506 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !2479)
!2507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !2508)
!2508 = !{!2509}
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2507, file: !259, line: 52, baseType: !22, size: 32)
!2510 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2511, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !297, splitDebugInlining: false, nameTableKind: None)
!2511 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pi")
!2512 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2513, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !297, splitDebugInlining: false, nameTableKind: None)
!2513 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pi")
!2514 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2515, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2516, retainedTypes: !2536, splitDebugInlining: false, nameTableKind: None)
!2515 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pi")
!2516 = !{!2517, !2525}
!2517 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2518, line: 69, baseType: !32, size: 32, elements: !2519)
!2518 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2519 = !{!2520, !2521, !2522, !2523, !2524}
!2520 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2521 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2522 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2523 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2524 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2525 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2518, line: 56, baseType: !32, size: 32, elements: !2526)
!2526 = !{!2527, !2528, !2529, !2530, !2531, !2532, !2533, !2534, !2535}
!2527 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2528 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2529 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2530 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2531 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2532 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2533 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2534 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2535 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2536 = !{!119, !2517, !2525, !2537, !196, !352, !2539, !2540, !186, !200, !278, !239, !113, !22, !32, !280, !2542, !2543, !105, !281, !117, !282, !2538, !2544, !2545, !2546, !2547}
!2537 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2518, line: 31, baseType: !2538)
!2538 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !117)
!2539 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !240, line: 329, baseType: !32)
!2540 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2518, line: 32, baseType: !2541)
!2541 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !121)
!2542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !196, size: 32)
!2543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !352, size: 32)
!2544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2538, size: 32)
!2545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !239, size: 32)
!2546 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !240, line: 145, baseType: !119)
!2547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2546, size: 32)
!2548 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2549, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !297, splitDebugInlining: false, nameTableKind: None)
!2549 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pi")
!2550 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2551, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2551 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pi/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pi")
!2552 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2553, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2554, splitDebugInlining: false, nameTableKind: None)
!2553 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pi")
!2554 = !{!278, !186, !119, !32}
!2555 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2556, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2557, retainedTypes: !297, splitDebugInlining: false, nameTableKind: None)
!2556 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pi")
!2557 = !{!2558, !30}
!2558 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2559, line: 27, baseType: !32, size: 32, elements: !2560)
!2559 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2560 = !{!2561, !2562, !2563, !2564, !2565}
!2561 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2562 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2563 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2564 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2565 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2566 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2567, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2568, retainedTypes: !2569, splitDebugInlining: false, nameTableKind: None)
!2567 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pi")
!2568 = !{!602, !2558, !30}
!2569 = !{!800, !2570, !113, !119, !774, !118, !185, !2587}
!2570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2571, size: 32)
!2571 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !533, line: 426, baseType: !2572)
!2572 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 411, size: 28704, elements: !2573)
!2573 = !{!2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581, !2582, !2583, !2584, !2585, !2586}
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2572, file: !533, line: 413, baseType: !1712, size: 256)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2572, file: !533, line: 414, baseType: !1714, size: 768, offset: 256)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2572, file: !533, line: 415, baseType: !1712, size: 256, offset: 1024)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2572, file: !533, line: 416, baseType: !1714, size: 768, offset: 1280)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2572, file: !533, line: 417, baseType: !1712, size: 256, offset: 2048)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2572, file: !533, line: 418, baseType: !1714, size: 768, offset: 2304)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2572, file: !533, line: 419, baseType: !1712, size: 256, offset: 3072)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2572, file: !533, line: 420, baseType: !1714, size: 768, offset: 3328)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2572, file: !533, line: 421, baseType: !1712, size: 256, offset: 4096)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2572, file: !533, line: 422, baseType: !1725, size: 1792, offset: 4352)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2572, file: !533, line: 423, baseType: !1729, size: 1920, offset: 6144)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2572, file: !533, line: 424, baseType: !1734, size: 20608, offset: 8064)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2572, file: !533, line: 425, baseType: !314, size: 32, offset: 28672)
!2587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2588, size: 32)
!2588 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !533, line: 468, baseType: !2589)
!2589 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 445, size: 1120, elements: !2590)
!2590 = !{!2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2609, !2610, !2611}
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2589, file: !533, line: 447, baseType: !537, size: 32)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2589, file: !533, line: 448, baseType: !314, size: 32, offset: 32)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2589, file: !533, line: 449, baseType: !314, size: 32, offset: 64)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2589, file: !533, line: 450, baseType: !314, size: 32, offset: 96)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2589, file: !533, line: 451, baseType: !314, size: 32, offset: 128)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2589, file: !533, line: 452, baseType: !314, size: 32, offset: 160)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2589, file: !533, line: 453, baseType: !1749, size: 96, offset: 192)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2589, file: !533, line: 454, baseType: !314, size: 32, offset: 288)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2589, file: !533, line: 455, baseType: !314, size: 32, offset: 320)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2589, file: !533, line: 456, baseType: !314, size: 32, offset: 352)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2589, file: !533, line: 457, baseType: !314, size: 32, offset: 384)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2589, file: !533, line: 458, baseType: !314, size: 32, offset: 416)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2589, file: !533, line: 459, baseType: !314, size: 32, offset: 448)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2589, file: !533, line: 460, baseType: !314, size: 32, offset: 480)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2589, file: !533, line: 461, baseType: !1760, size: 64, offset: 512)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2589, file: !533, line: 462, baseType: !537, size: 32, offset: 576)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2589, file: !533, line: 463, baseType: !537, size: 32, offset: 608)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2589, file: !533, line: 464, baseType: !1764, size: 128, offset: 640)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2589, file: !533, line: 465, baseType: !1766, size: 160, offset: 768)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2589, file: !533, line: 466, baseType: !1768, size: 160, offset: 928)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2589, file: !533, line: 467, baseType: !314, size: 32, offset: 1088)
!2612 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2613, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !297, splitDebugInlining: false, nameTableKind: None)
!2613 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pi")
!2614 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2615, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2616, splitDebugInlining: false, nameTableKind: None)
!2615 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pi")
!2616 = !{!113, !119, !22, !2617}
!2617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2618, size: 32)
!2618 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !533, line: 468, baseType: !2619)
!2619 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 445, size: 1120, elements: !2620)
!2620 = !{!2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640, !2641}
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2619, file: !533, line: 447, baseType: !537, size: 32)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2619, file: !533, line: 448, baseType: !314, size: 32, offset: 32)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2619, file: !533, line: 449, baseType: !314, size: 32, offset: 64)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2619, file: !533, line: 450, baseType: !314, size: 32, offset: 96)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2619, file: !533, line: 451, baseType: !314, size: 32, offset: 128)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2619, file: !533, line: 452, baseType: !314, size: 32, offset: 160)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2619, file: !533, line: 453, baseType: !1749, size: 96, offset: 192)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2619, file: !533, line: 454, baseType: !314, size: 32, offset: 288)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2619, file: !533, line: 455, baseType: !314, size: 32, offset: 320)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2619, file: !533, line: 456, baseType: !314, size: 32, offset: 352)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2619, file: !533, line: 457, baseType: !314, size: 32, offset: 384)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2619, file: !533, line: 458, baseType: !314, size: 32, offset: 416)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2619, file: !533, line: 459, baseType: !314, size: 32, offset: 448)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2619, file: !533, line: 460, baseType: !314, size: 32, offset: 480)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2619, file: !533, line: 461, baseType: !1760, size: 64, offset: 512)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2619, file: !533, line: 462, baseType: !537, size: 32, offset: 576)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2619, file: !533, line: 463, baseType: !537, size: 32, offset: 608)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2619, file: !533, line: 464, baseType: !1764, size: 128, offset: 640)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2619, file: !533, line: 465, baseType: !1766, size: 160, offset: 768)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2619, file: !533, line: 466, baseType: !1768, size: 160, offset: 928)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2619, file: !533, line: 467, baseType: !314, size: 32, offset: 1088)
!2642 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2643, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2644, splitDebugInlining: false, nameTableKind: None)
!2643 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pi")
!2644 = !{!2645, !113, !119}
!2645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2646, size: 32)
!2646 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !533, line: 468, baseType: !2647)
!2647 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 445, size: 1120, elements: !2648)
!2648 = !{!2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2658, !2659, !2660, !2661, !2662, !2663, !2664, !2665, !2666, !2667, !2668, !2669}
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2647, file: !533, line: 447, baseType: !537, size: 32)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2647, file: !533, line: 448, baseType: !314, size: 32, offset: 32)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2647, file: !533, line: 449, baseType: !314, size: 32, offset: 64)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2647, file: !533, line: 450, baseType: !314, size: 32, offset: 96)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2647, file: !533, line: 451, baseType: !314, size: 32, offset: 128)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2647, file: !533, line: 452, baseType: !314, size: 32, offset: 160)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2647, file: !533, line: 453, baseType: !1749, size: 96, offset: 192)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2647, file: !533, line: 454, baseType: !314, size: 32, offset: 288)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2647, file: !533, line: 455, baseType: !314, size: 32, offset: 320)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2647, file: !533, line: 456, baseType: !314, size: 32, offset: 352)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2647, file: !533, line: 457, baseType: !314, size: 32, offset: 384)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2647, file: !533, line: 458, baseType: !314, size: 32, offset: 416)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2647, file: !533, line: 459, baseType: !314, size: 32, offset: 448)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2647, file: !533, line: 460, baseType: !314, size: 32, offset: 480)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2647, file: !533, line: 461, baseType: !1760, size: 64, offset: 512)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2647, file: !533, line: 462, baseType: !537, size: 32, offset: 576)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2647, file: !533, line: 463, baseType: !537, size: 32, offset: 608)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2647, file: !533, line: 464, baseType: !1764, size: 128, offset: 640)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2647, file: !533, line: 465, baseType: !1766, size: 160, offset: 768)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2647, file: !533, line: 466, baseType: !1768, size: 160, offset: 928)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2647, file: !533, line: 467, baseType: !314, size: 32, offset: 1088)
!2670 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2671, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2672, splitDebugInlining: false, nameTableKind: None)
!2671 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pi")
!2672 = !{!2673, !118, !113, !119}
!2673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2674, size: 32)
!2674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2675, line: 98, size: 256, elements: !2676)
!2675 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2676 = !{!2677, !2682, !2687, !2692, !2697, !2702, !2707, !2712}
!2677 = !DIDerivedType(tag: DW_TAG_member, scope: !2674, file: !2675, line: 99, baseType: !2678, size: 32)
!2678 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2674, file: !2675, line: 99, size: 32, elements: !2679)
!2679 = !{!2680, !2681}
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2678, file: !2675, line: 99, baseType: !118, size: 32)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2678, file: !2675, line: 99, baseType: !118, size: 32)
!2682 = !DIDerivedType(tag: DW_TAG_member, scope: !2674, file: !2675, line: 100, baseType: !2683, size: 32, offset: 32)
!2683 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2674, file: !2675, line: 100, size: 32, elements: !2684)
!2684 = !{!2685, !2686}
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2683, file: !2675, line: 100, baseType: !118, size: 32)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2683, file: !2675, line: 100, baseType: !118, size: 32)
!2687 = !DIDerivedType(tag: DW_TAG_member, scope: !2674, file: !2675, line: 101, baseType: !2688, size: 32, offset: 64)
!2688 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2674, file: !2675, line: 101, size: 32, elements: !2689)
!2689 = !{!2690, !2691}
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2688, file: !2675, line: 101, baseType: !118, size: 32)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2688, file: !2675, line: 101, baseType: !118, size: 32)
!2692 = !DIDerivedType(tag: DW_TAG_member, scope: !2674, file: !2675, line: 102, baseType: !2693, size: 32, offset: 96)
!2693 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2674, file: !2675, line: 102, size: 32, elements: !2694)
!2694 = !{!2695, !2696}
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2693, file: !2675, line: 102, baseType: !118, size: 32)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2693, file: !2675, line: 102, baseType: !118, size: 32)
!2697 = !DIDerivedType(tag: DW_TAG_member, scope: !2674, file: !2675, line: 103, baseType: !2698, size: 32, offset: 128)
!2698 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2674, file: !2675, line: 103, size: 32, elements: !2699)
!2699 = !{!2700, !2701}
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2698, file: !2675, line: 103, baseType: !118, size: 32)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2698, file: !2675, line: 103, baseType: !118, size: 32)
!2702 = !DIDerivedType(tag: DW_TAG_member, scope: !2674, file: !2675, line: 104, baseType: !2703, size: 32, offset: 160)
!2703 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2674, file: !2675, line: 104, size: 32, elements: !2704)
!2704 = !{!2705, !2706}
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2703, file: !2675, line: 104, baseType: !118, size: 32)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2703, file: !2675, line: 104, baseType: !118, size: 32)
!2707 = !DIDerivedType(tag: DW_TAG_member, scope: !2674, file: !2675, line: 105, baseType: !2708, size: 32, offset: 192)
!2708 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2674, file: !2675, line: 105, size: 32, elements: !2709)
!2709 = !{!2710, !2711}
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2708, file: !2675, line: 105, baseType: !118, size: 32)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2708, file: !2675, line: 105, baseType: !118, size: 32)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2674, file: !2675, line: 106, baseType: !118, size: 32, offset: 224)
!2713 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2714, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2557, retainedTypes: !2715, splitDebugInlining: false, nameTableKind: None)
!2714 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pi")
!2715 = !{!2716, !113, !119, !2741, !2784, !118}
!2716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2717, size: 32)
!2717 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !533, line: 468, baseType: !2718)
!2718 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 445, size: 1120, elements: !2719)
!2719 = !{!2720, !2721, !2722, !2723, !2724, !2725, !2726, !2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740}
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2718, file: !533, line: 447, baseType: !537, size: 32)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2718, file: !533, line: 448, baseType: !314, size: 32, offset: 32)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2718, file: !533, line: 449, baseType: !314, size: 32, offset: 64)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2718, file: !533, line: 450, baseType: !314, size: 32, offset: 96)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2718, file: !533, line: 451, baseType: !314, size: 32, offset: 128)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2718, file: !533, line: 452, baseType: !314, size: 32, offset: 160)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2718, file: !533, line: 453, baseType: !1749, size: 96, offset: 192)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2718, file: !533, line: 454, baseType: !314, size: 32, offset: 288)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2718, file: !533, line: 455, baseType: !314, size: 32, offset: 320)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2718, file: !533, line: 456, baseType: !314, size: 32, offset: 352)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2718, file: !533, line: 457, baseType: !314, size: 32, offset: 384)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2718, file: !533, line: 458, baseType: !314, size: 32, offset: 416)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2718, file: !533, line: 459, baseType: !314, size: 32, offset: 448)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2718, file: !533, line: 460, baseType: !314, size: 32, offset: 480)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2718, file: !533, line: 461, baseType: !1760, size: 64, offset: 512)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2718, file: !533, line: 462, baseType: !537, size: 32, offset: 576)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2718, file: !533, line: 463, baseType: !537, size: 32, offset: 608)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2718, file: !533, line: 464, baseType: !1764, size: 128, offset: 640)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2718, file: !533, line: 465, baseType: !1766, size: 160, offset: 768)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2718, file: !533, line: 466, baseType: !1768, size: 160, offset: 928)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2718, file: !533, line: 467, baseType: !314, size: 32, offset: 1088)
!2741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2742, size: 32)
!2742 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2675, line: 141, baseType: !2743)
!2743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2675, line: 97, size: 256, elements: !2744)
!2744 = !{!2745}
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2743, file: !2675, line: 107, baseType: !2746, size: 256)
!2746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2675, line: 98, size: 256, elements: !2747)
!2747 = !{!2748, !2753, !2758, !2763, !2768, !2773, !2778, !2783}
!2748 = !DIDerivedType(tag: DW_TAG_member, scope: !2746, file: !2675, line: 99, baseType: !2749, size: 32)
!2749 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2746, file: !2675, line: 99, size: 32, elements: !2750)
!2750 = !{!2751, !2752}
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2749, file: !2675, line: 99, baseType: !118, size: 32)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2749, file: !2675, line: 99, baseType: !118, size: 32)
!2753 = !DIDerivedType(tag: DW_TAG_member, scope: !2746, file: !2675, line: 100, baseType: !2754, size: 32, offset: 32)
!2754 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2746, file: !2675, line: 100, size: 32, elements: !2755)
!2755 = !{!2756, !2757}
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2754, file: !2675, line: 100, baseType: !118, size: 32)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2754, file: !2675, line: 100, baseType: !118, size: 32)
!2758 = !DIDerivedType(tag: DW_TAG_member, scope: !2746, file: !2675, line: 101, baseType: !2759, size: 32, offset: 64)
!2759 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2746, file: !2675, line: 101, size: 32, elements: !2760)
!2760 = !{!2761, !2762}
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2759, file: !2675, line: 101, baseType: !118, size: 32)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2759, file: !2675, line: 101, baseType: !118, size: 32)
!2763 = !DIDerivedType(tag: DW_TAG_member, scope: !2746, file: !2675, line: 102, baseType: !2764, size: 32, offset: 96)
!2764 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2746, file: !2675, line: 102, size: 32, elements: !2765)
!2765 = !{!2766, !2767}
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2764, file: !2675, line: 102, baseType: !118, size: 32)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2764, file: !2675, line: 102, baseType: !118, size: 32)
!2768 = !DIDerivedType(tag: DW_TAG_member, scope: !2746, file: !2675, line: 103, baseType: !2769, size: 32, offset: 128)
!2769 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2746, file: !2675, line: 103, size: 32, elements: !2770)
!2770 = !{!2771, !2772}
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2769, file: !2675, line: 103, baseType: !118, size: 32)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2769, file: !2675, line: 103, baseType: !118, size: 32)
!2773 = !DIDerivedType(tag: DW_TAG_member, scope: !2746, file: !2675, line: 104, baseType: !2774, size: 32, offset: 160)
!2774 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2746, file: !2675, line: 104, size: 32, elements: !2775)
!2775 = !{!2776, !2777}
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2774, file: !2675, line: 104, baseType: !118, size: 32)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2774, file: !2675, line: 104, baseType: !118, size: 32)
!2778 = !DIDerivedType(tag: DW_TAG_member, scope: !2746, file: !2675, line: 105, baseType: !2779, size: 32, offset: 192)
!2779 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2746, file: !2675, line: 105, size: 32, elements: !2780)
!2780 = !{!2781, !2782}
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2779, file: !2675, line: 105, baseType: !118, size: 32)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2779, file: !2675, line: 105, baseType: !118, size: 32)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2746, file: !2675, line: 106, baseType: !118, size: 32, offset: 224)
!2784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !199, size: 32)
!2785 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2786, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1697, retainedTypes: !2787, splitDebugInlining: false, nameTableKind: None)
!2786 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pi")
!2787 = !{!800, !774, !185, !118, !2788, !2805}
!2788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2789, size: 32)
!2789 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !533, line: 426, baseType: !2790)
!2790 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 411, size: 28704, elements: !2791)
!2791 = !{!2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804}
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2790, file: !533, line: 413, baseType: !1712, size: 256)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2790, file: !533, line: 414, baseType: !1714, size: 768, offset: 256)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2790, file: !533, line: 415, baseType: !1712, size: 256, offset: 1024)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2790, file: !533, line: 416, baseType: !1714, size: 768, offset: 1280)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2790, file: !533, line: 417, baseType: !1712, size: 256, offset: 2048)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2790, file: !533, line: 418, baseType: !1714, size: 768, offset: 2304)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2790, file: !533, line: 419, baseType: !1712, size: 256, offset: 3072)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2790, file: !533, line: 420, baseType: !1714, size: 768, offset: 3328)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2790, file: !533, line: 421, baseType: !1712, size: 256, offset: 4096)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2790, file: !533, line: 422, baseType: !1725, size: 1792, offset: 4352)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2790, file: !533, line: 423, baseType: !1729, size: 1920, offset: 6144)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2790, file: !533, line: 424, baseType: !1734, size: 20608, offset: 8064)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2790, file: !533, line: 425, baseType: !314, size: 32, offset: 28672)
!2805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2806, size: 32)
!2806 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !533, line: 468, baseType: !2807)
!2807 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 445, size: 1120, elements: !2808)
!2808 = !{!2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829}
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2807, file: !533, line: 447, baseType: !537, size: 32)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2807, file: !533, line: 448, baseType: !314, size: 32, offset: 32)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2807, file: !533, line: 449, baseType: !314, size: 32, offset: 64)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2807, file: !533, line: 450, baseType: !314, size: 32, offset: 96)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2807, file: !533, line: 451, baseType: !314, size: 32, offset: 128)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2807, file: !533, line: 452, baseType: !314, size: 32, offset: 160)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2807, file: !533, line: 453, baseType: !1749, size: 96, offset: 192)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2807, file: !533, line: 454, baseType: !314, size: 32, offset: 288)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2807, file: !533, line: 455, baseType: !314, size: 32, offset: 320)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2807, file: !533, line: 456, baseType: !314, size: 32, offset: 352)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2807, file: !533, line: 457, baseType: !314, size: 32, offset: 384)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2807, file: !533, line: 458, baseType: !314, size: 32, offset: 416)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2807, file: !533, line: 459, baseType: !314, size: 32, offset: 448)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2807, file: !533, line: 460, baseType: !314, size: 32, offset: 480)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2807, file: !533, line: 461, baseType: !1760, size: 64, offset: 512)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2807, file: !533, line: 462, baseType: !537, size: 32, offset: 576)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2807, file: !533, line: 463, baseType: !537, size: 32, offset: 608)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2807, file: !533, line: 464, baseType: !1764, size: 128, offset: 640)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2807, file: !533, line: 465, baseType: !1766, size: 160, offset: 768)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2807, file: !533, line: 466, baseType: !1768, size: 160, offset: 928)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2807, file: !533, line: 467, baseType: !314, size: 32, offset: 1088)
!2830 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2831, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2832, splitDebugInlining: false, nameTableKind: None)
!2831 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pi")
!2832 = !{!2833, !113, !119}
!2833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2834, size: 32)
!2834 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !533, line: 468, baseType: !2835)
!2835 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 445, size: 1120, elements: !2836)
!2836 = !{!2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848, !2849, !2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857}
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2835, file: !533, line: 447, baseType: !537, size: 32)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2835, file: !533, line: 448, baseType: !314, size: 32, offset: 32)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2835, file: !533, line: 449, baseType: !314, size: 32, offset: 64)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2835, file: !533, line: 450, baseType: !314, size: 32, offset: 96)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2835, file: !533, line: 451, baseType: !314, size: 32, offset: 128)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2835, file: !533, line: 452, baseType: !314, size: 32, offset: 160)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2835, file: !533, line: 453, baseType: !1749, size: 96, offset: 192)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2835, file: !533, line: 454, baseType: !314, size: 32, offset: 288)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2835, file: !533, line: 455, baseType: !314, size: 32, offset: 320)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2835, file: !533, line: 456, baseType: !314, size: 32, offset: 352)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2835, file: !533, line: 457, baseType: !314, size: 32, offset: 384)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2835, file: !533, line: 458, baseType: !314, size: 32, offset: 416)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2835, file: !533, line: 459, baseType: !314, size: 32, offset: 448)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2835, file: !533, line: 460, baseType: !314, size: 32, offset: 480)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2835, file: !533, line: 461, baseType: !1760, size: 64, offset: 512)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2835, file: !533, line: 462, baseType: !537, size: 32, offset: 576)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2835, file: !533, line: 463, baseType: !537, size: 32, offset: 608)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2835, file: !533, line: 464, baseType: !1764, size: 128, offset: 640)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2835, file: !533, line: 465, baseType: !1766, size: 160, offset: 768)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2835, file: !533, line: 466, baseType: !1768, size: 160, offset: 928)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2835, file: !533, line: 467, baseType: !314, size: 32, offset: 1088)
!2858 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2859, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2860, splitDebugInlining: false, nameTableKind: None)
!2859 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pi")
!2860 = !{!107, !106, !239, !1013, !2861, !186, !113}
!2861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2862, size: 32)
!2862 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !186)
!2863 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2864, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2865, splitDebugInlining: false, nameTableKind: None)
!2864 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/sprintf.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pi")
!2865 = !{!119, !113}
!2866 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2867, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2868, splitDebugInlining: false, nameTableKind: None)
!2867 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pi")
!2868 = !{!2869}
!2869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2870, size: 32)
!2870 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !310, line: 677, baseType: !2871)
!2871 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 643, size: 1152, elements: !2872)
!2872 = !{!2873, !2874, !2875, !2876, !2877, !2878, !2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899, !2900, !2901, !2902, !2903, !2904}
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2871, file: !310, line: 645, baseType: !314, size: 32)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2871, file: !310, line: 646, baseType: !314, size: 32, offset: 32)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2871, file: !310, line: 647, baseType: !314, size: 32, offset: 64)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2871, file: !310, line: 648, baseType: !314, size: 32, offset: 96)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2871, file: !310, line: 649, baseType: !314, size: 32, offset: 128)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2871, file: !310, line: 650, baseType: !314, size: 32, offset: 160)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2871, file: !310, line: 651, baseType: !314, size: 32, offset: 192)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2871, file: !310, line: 652, baseType: !118, size: 32, offset: 224)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2871, file: !310, line: 653, baseType: !314, size: 32, offset: 256)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2871, file: !310, line: 654, baseType: !314, size: 32, offset: 288)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2871, file: !310, line: 655, baseType: !880, size: 64, offset: 320)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2871, file: !310, line: 656, baseType: !314, size: 32, offset: 384)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2871, file: !310, line: 657, baseType: !314, size: 32, offset: 416)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2871, file: !310, line: 658, baseType: !314, size: 32, offset: 448)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2871, file: !310, line: 659, baseType: !118, size: 32, offset: 480)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2871, file: !310, line: 660, baseType: !314, size: 32, offset: 512)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2871, file: !310, line: 661, baseType: !314, size: 32, offset: 544)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2871, file: !310, line: 662, baseType: !880, size: 64, offset: 576)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2871, file: !310, line: 663, baseType: !314, size: 32, offset: 640)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2871, file: !310, line: 664, baseType: !314, size: 32, offset: 672)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2871, file: !310, line: 665, baseType: !314, size: 32, offset: 704)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2871, file: !310, line: 666, baseType: !118, size: 32, offset: 736)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2871, file: !310, line: 667, baseType: !314, size: 32, offset: 768)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2871, file: !310, line: 668, baseType: !314, size: 32, offset: 800)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2871, file: !310, line: 669, baseType: !880, size: 64, offset: 832)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2871, file: !310, line: 670, baseType: !314, size: 32, offset: 896)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2871, file: !310, line: 671, baseType: !314, size: 32, offset: 928)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2871, file: !310, line: 672, baseType: !880, size: 64, offset: 960)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2871, file: !310, line: 673, baseType: !314, size: 32, offset: 1024)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2871, file: !310, line: 674, baseType: !314, size: 32, offset: 1056)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !2871, file: !310, line: 675, baseType: !314, size: 32, offset: 1088)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2871, file: !310, line: 676, baseType: !314, size: 32, offset: 1120)
!2905 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2906, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2906 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pi")
!2907 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2908, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2909, retainedTypes: !2925, splitDebugInlining: false, nameTableKind: None)
!2908 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pi")
!2909 = !{!2910, !2917, !2921}
!2910 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2911, line: 38, baseType: !32, size: 32, elements: !2912)
!2911 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2912 = !{!2913, !2914, !2915, !2916}
!2913 = !DIEnumerator(name: "HAL_OK", value: 0)
!2914 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2915 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2916 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2917 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !853, line: 184, baseType: !32, size: 32, elements: !2918)
!2918 = !{!2919, !2920}
!2919 = !DIEnumerator(name: "RESET", value: 0)
!2920 = !DIEnumerator(name: "SET", value: 1)
!2921 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !853, line: 190, baseType: !32, size: 32, elements: !2922)
!2922 = !{!2923, !2924}
!2923 = !DIEnumerator(name: "DISABLE", value: 0)
!2924 = !DIEnumerator(name: "ENABLE", value: 1)
!2925 = !{!113, !2926, !185, !118, !1526, !2962, !2968, !2979, !199, !2980, !120}
!2926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2927, size: 32)
!2927 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !310, line: 677, baseType: !2928)
!2928 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 643, size: 1152, elements: !2929)
!2929 = !{!2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937, !2938, !2939, !2940, !2941, !2942, !2943, !2944, !2945, !2946, !2947, !2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961}
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2928, file: !310, line: 645, baseType: !314, size: 32)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2928, file: !310, line: 646, baseType: !314, size: 32, offset: 32)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2928, file: !310, line: 647, baseType: !314, size: 32, offset: 64)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2928, file: !310, line: 648, baseType: !314, size: 32, offset: 96)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2928, file: !310, line: 649, baseType: !314, size: 32, offset: 128)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2928, file: !310, line: 650, baseType: !314, size: 32, offset: 160)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2928, file: !310, line: 651, baseType: !314, size: 32, offset: 192)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2928, file: !310, line: 652, baseType: !118, size: 32, offset: 224)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2928, file: !310, line: 653, baseType: !314, size: 32, offset: 256)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2928, file: !310, line: 654, baseType: !314, size: 32, offset: 288)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2928, file: !310, line: 655, baseType: !880, size: 64, offset: 320)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2928, file: !310, line: 656, baseType: !314, size: 32, offset: 384)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2928, file: !310, line: 657, baseType: !314, size: 32, offset: 416)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2928, file: !310, line: 658, baseType: !314, size: 32, offset: 448)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2928, file: !310, line: 659, baseType: !118, size: 32, offset: 480)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2928, file: !310, line: 660, baseType: !314, size: 32, offset: 512)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2928, file: !310, line: 661, baseType: !314, size: 32, offset: 544)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2928, file: !310, line: 662, baseType: !880, size: 64, offset: 576)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2928, file: !310, line: 663, baseType: !314, size: 32, offset: 640)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2928, file: !310, line: 664, baseType: !314, size: 32, offset: 672)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2928, file: !310, line: 665, baseType: !314, size: 32, offset: 704)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2928, file: !310, line: 666, baseType: !118, size: 32, offset: 736)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2928, file: !310, line: 667, baseType: !314, size: 32, offset: 768)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2928, file: !310, line: 668, baseType: !314, size: 32, offset: 800)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2928, file: !310, line: 669, baseType: !880, size: 64, offset: 832)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2928, file: !310, line: 670, baseType: !314, size: 32, offset: 896)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2928, file: !310, line: 671, baseType: !314, size: 32, offset: 928)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2928, file: !310, line: 672, baseType: !880, size: 64, offset: 960)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2928, file: !310, line: 673, baseType: !314, size: 32, offset: 1024)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2928, file: !310, line: 674, baseType: !314, size: 32, offset: 1056)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !2928, file: !310, line: 675, baseType: !314, size: 32, offset: 1088)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2928, file: !310, line: 676, baseType: !314, size: 32, offset: 1120)
!2962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2963, size: 32)
!2963 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !310, line: 637, baseType: !2964)
!2964 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 633, size: 64, elements: !2965)
!2965 = !{!2966, !2967}
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2964, file: !310, line: 635, baseType: !314, size: 32)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2964, file: !310, line: 636, baseType: !314, size: 32, offset: 32)
!2968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2969, size: 32)
!2969 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !310, line: 501, baseType: !2970)
!2970 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 492, size: 224, elements: !2971)
!2971 = !{!2972, !2973, !2974, !2975, !2976, !2977, !2978}
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2970, file: !310, line: 494, baseType: !314, size: 32)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2970, file: !310, line: 495, baseType: !314, size: 32, offset: 32)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2970, file: !310, line: 496, baseType: !314, size: 32, offset: 64)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2970, file: !310, line: 497, baseType: !314, size: 32, offset: 96)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2970, file: !310, line: 498, baseType: !314, size: 32, offset: 128)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2970, file: !310, line: 499, baseType: !314, size: 32, offset: 160)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2970, file: !310, line: 500, baseType: !314, size: 32, offset: 192)
!2979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1730, size: 32)
!2980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2981, size: 32)
!2981 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !310, line: 583, baseType: !2982)
!2982 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 572, size: 320, elements: !2983)
!2983 = !{!2984, !2985, !2986, !2987, !2988, !2989, !2990, !2991, !2992}
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !2982, file: !310, line: 574, baseType: !314, size: 32)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !2982, file: !310, line: 575, baseType: !314, size: 32, offset: 32)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !2982, file: !310, line: 576, baseType: !314, size: 32, offset: 64)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !2982, file: !310, line: 577, baseType: !314, size: 32, offset: 96)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !2982, file: !310, line: 578, baseType: !314, size: 32, offset: 128)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !2982, file: !310, line: 579, baseType: !314, size: 32, offset: 160)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !2982, file: !310, line: 580, baseType: !314, size: 32, offset: 192)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !2982, file: !310, line: 581, baseType: !314, size: 32, offset: 224)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !2982, file: !310, line: 582, baseType: !1167, size: 64, offset: 256)
!2993 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2994, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2995, retainedTypes: !2996, splitDebugInlining: false, nameTableKind: None)
!2994 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pi")
!2995 = !{!852}
!2996 = !{!2997, !118, !3005, !3011, !3022}
!2997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2998, size: 32)
!2998 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !533, line: 770, baseType: !2999)
!2999 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 764, size: 128, elements: !3000)
!3000 = !{!3001, !3002, !3003, !3004}
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2999, file: !533, line: 766, baseType: !314, size: 32)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2999, file: !533, line: 767, baseType: !314, size: 32, offset: 32)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2999, file: !533, line: 768, baseType: !314, size: 32, offset: 64)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2999, file: !533, line: 769, baseType: !537, size: 32, offset: 96)
!3005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3006, size: 32)
!3006 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !310, line: 637, baseType: !3007)
!3007 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 633, size: 64, elements: !3008)
!3008 = !{!3009, !3010}
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3007, file: !310, line: 635, baseType: !314, size: 32)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3007, file: !310, line: 636, baseType: !314, size: 32, offset: 32)
!3011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3012, size: 32)
!3012 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !310, line: 501, baseType: !3013)
!3013 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 492, size: 224, elements: !3014)
!3014 = !{!3015, !3016, !3017, !3018, !3019, !3020, !3021}
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3013, file: !310, line: 494, baseType: !314, size: 32)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3013, file: !310, line: 495, baseType: !314, size: 32, offset: 32)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3013, file: !310, line: 496, baseType: !314, size: 32, offset: 64)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3013, file: !310, line: 497, baseType: !314, size: 32, offset: 96)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3013, file: !310, line: 498, baseType: !314, size: 32, offset: 128)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3013, file: !310, line: 499, baseType: !314, size: 32, offset: 160)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3013, file: !310, line: 500, baseType: !314, size: 32, offset: 192)
!3022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3023, size: 32)
!3023 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !310, line: 677, baseType: !3024)
!3024 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 643, size: 1152, elements: !3025)
!3025 = !{!3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037, !3038, !3039, !3040, !3041, !3042, !3043, !3044, !3045, !3046, !3047, !3048, !3049, !3050, !3051, !3052, !3053, !3054, !3055, !3056, !3057}
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3024, file: !310, line: 645, baseType: !314, size: 32)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3024, file: !310, line: 646, baseType: !314, size: 32, offset: 32)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3024, file: !310, line: 647, baseType: !314, size: 32, offset: 64)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3024, file: !310, line: 648, baseType: !314, size: 32, offset: 96)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3024, file: !310, line: 649, baseType: !314, size: 32, offset: 128)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3024, file: !310, line: 650, baseType: !314, size: 32, offset: 160)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3024, file: !310, line: 651, baseType: !314, size: 32, offset: 192)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3024, file: !310, line: 652, baseType: !118, size: 32, offset: 224)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3024, file: !310, line: 653, baseType: !314, size: 32, offset: 256)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3024, file: !310, line: 654, baseType: !314, size: 32, offset: 288)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3024, file: !310, line: 655, baseType: !880, size: 64, offset: 320)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3024, file: !310, line: 656, baseType: !314, size: 32, offset: 384)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3024, file: !310, line: 657, baseType: !314, size: 32, offset: 416)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3024, file: !310, line: 658, baseType: !314, size: 32, offset: 448)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3024, file: !310, line: 659, baseType: !118, size: 32, offset: 480)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3024, file: !310, line: 660, baseType: !314, size: 32, offset: 512)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3024, file: !310, line: 661, baseType: !314, size: 32, offset: 544)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3024, file: !310, line: 662, baseType: !880, size: 64, offset: 576)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3024, file: !310, line: 663, baseType: !314, size: 32, offset: 640)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3024, file: !310, line: 664, baseType: !314, size: 32, offset: 672)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3024, file: !310, line: 665, baseType: !314, size: 32, offset: 704)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3024, file: !310, line: 666, baseType: !118, size: 32, offset: 736)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3024, file: !310, line: 667, baseType: !314, size: 32, offset: 768)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3024, file: !310, line: 668, baseType: !314, size: 32, offset: 800)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3024, file: !310, line: 669, baseType: !880, size: 64, offset: 832)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3024, file: !310, line: 670, baseType: !314, size: 32, offset: 896)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3024, file: !310, line: 671, baseType: !314, size: 32, offset: 928)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3024, file: !310, line: 672, baseType: !880, size: 64, offset: 960)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3024, file: !310, line: 673, baseType: !314, size: 32, offset: 1024)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3024, file: !310, line: 674, baseType: !314, size: 32, offset: 1056)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !3024, file: !310, line: 675, baseType: !314, size: 32, offset: 1088)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3024, file: !310, line: 676, baseType: !314, size: 32, offset: 1120)
!3058 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3059, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3060, splitDebugInlining: false, nameTableKind: None)
!3059 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pi")
!3060 = !{!113, !239}
!3061 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3062, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3063, retainedTypes: !297, splitDebugInlining: false, nameTableKind: None)
!3062 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pi")
!3063 = !{!3064, !3071, !2558, !30}
!3064 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3065, line: 14, baseType: !32, size: 32, elements: !3066)
!3065 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3066 = !{!3067, !3068, !3069, !3070}
!3067 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3068 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3069 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3070 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3071 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3065, line: 42, baseType: !32, size: 32, elements: !3072)
!3072 = !{!3073, !3074, !3075, !3076, !3077, !3078}
!3073 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3074 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3075 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3076 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3077 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3078 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3079 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3080, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !297, splitDebugInlining: false, nameTableKind: None)
!3080 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pi")
!3081 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3082, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3083, splitDebugInlining: false, nameTableKind: None)
!3082 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pi")
!3083 = !{!22, !113, !119}
!3084 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3085, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !297, splitDebugInlining: false, nameTableKind: None)
!3085 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pi")
!3086 = !{!"Ubuntu clang version 14.0.6"}
!3087 = !{i32 7, !"Dwarf Version", i32 4}
!3088 = !{i32 2, !"Debug Info Version", i32 3}
!3089 = !{i32 1, !"wchar_size", i32 4}
!3090 = !{i32 1, !"min_enum_size", i32 4}
!3091 = !{i32 1, !"branch-target-enforcement", i32 0}
!3092 = !{i32 1, !"sign-return-address", i32 0}
!3093 = !{i32 1, !"sign-return-address-all", i32 0}
!3094 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3095 = !{i32 7, !"frame-pointer", i32 2}
!3096 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3097, file: !3097, line: 26, type: !3098, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2510, retainedNodes: !2162)
!3097 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3098 = !DISubroutineType(types: !3099)
!3099 = !{null}
!3100 = !DILocation(line: 28, column: 1, scope: !3096)
!3101 = !{i64 2155758745, i64 2155758765, i64 2155758828}
!3102 = !DILocation(line: 29, column: 1, scope: !3096)
!3103 = !{i64 2155759160, i64 2155759180, i64 2155759243}
!3104 = !DILocation(line: 30, column: 1, scope: !3096)
!3105 = !{i64 2155759579, i64 2155759599, i64 2155759662}
!3106 = !DILocation(line: 31, column: 1, scope: !3096)
!3107 = !{i64 2155759998, i64 2155760018, i64 2155760081}
!3108 = !DILocation(line: 33, column: 1, scope: !3096)
!3109 = !{i64 2155760290, i64 2155760310, i64 2155760373}
!3110 = !DILocation(line: 35, column: 1, scope: !3096)
!3111 = !{i64 2155760615, i64 2155760635, i64 2155760698}
!3112 = !DILocation(line: 50, column: 1, scope: !3096)
!3113 = !{i64 2155761042, i64 2155761062, i64 2155761125}
!3114 = !DILocation(line: 54, column: 1, scope: !3096)
!3115 = !{i64 2155761481, i64 2155761501, i64 2155761564}
!3116 = !DILocation(line: 61, column: 1, scope: !3096)
!3117 = !{i64 2155761798, i64 2155761818, i64 2155761881}
!3118 = !DILocation(line: 63, column: 1, scope: !3096)
!3119 = !{i64 2155762178, i64 2155762198, i64 2155762261}
!3120 = !DILocation(line: 64, column: 1, scope: !3096)
!3121 = !{i64 2155762700, i64 2155762720, i64 2155762783}
!3122 = !DILocation(line: 65, column: 1, scope: !3096)
!3123 = !{i64 2155763198, i64 2155763218, i64 2155763281}
!3124 = !DILocation(line: 66, column: 1, scope: !3096)
!3125 = !{i64 2155763680, i64 2155763700, i64 2155763763}
!3126 = !DILocation(line: 67, column: 1, scope: !3096)
!3127 = !{i64 2155764187, i64 2155764207, i64 2155764270}
!3128 = !DILocation(line: 68, column: 1, scope: !3096)
!3129 = !{i64 2155764675, i64 2155764695, i64 2155764758}
!3130 = !DILocation(line: 70, column: 1, scope: !3096)
!3131 = !{i64 2155765143, i64 2155765163, i64 2155765226}
!3132 = !DILocation(line: 71, column: 1, scope: !3096)
!3133 = !{i64 2155765585, i64 2155765605, i64 2155765668}
!3134 = !DILocation(line: 72, column: 1, scope: !3096)
!3135 = !{i64 2155766043, i64 2155766063, i64 2155766126}
!3136 = !DILocation(line: 79, column: 1, scope: !3096)
!3137 = !{i64 2155770558, i64 2155770578, i64 2155770641}
!3138 = !DILocation(line: 80, column: 1, scope: !3096)
!3139 = !{i64 2155771069, i64 2155771089, i64 2155771152}
!3140 = !DILocation(line: 82, column: 1, scope: !3096)
!3141 = !{i64 2155771560, i64 2155771580, i64 2155771643}
!3142 = !DILocation(line: 97, column: 1, scope: !3096)
!3143 = !{i64 2155771897, i64 2155771917, i64 2155771980}
!3144 = !DILocation(line: 99, column: 1, scope: !3096)
!3145 = !{i64 2155772115, i64 2155772135, i64 2155772198}
!3146 = !DILocation(line: 102, column: 1, scope: !3096)
!3147 = !{i64 2155772372, i64 2155772392, i64 2155772455}
!3148 = !DILocation(line: 105, column: 1, scope: !3096)
!3149 = !{i64 2155772612, i64 2155772632, i64 2155772695}
!3150 = !DILocation(line: 115, column: 1, scope: !3096)
!3151 = !{i64 2155772951, i64 2155772971, i64 2155773034}
!3152 = !DILocation(line: 118, column: 1, scope: !3096)
!3153 = !{i64 2155773295, i64 2155773315, i64 2155773378}
!3154 = !DILocation(line: 32, column: 1, scope: !3155)
!3155 = !DILexicalBlockFile(scope: !3096, file: !3156, discriminator: 0)
!3156 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3157 = !{i64 2155773651, i64 2155773671, i64 2155773734}
!3158 = !DILocation(line: 33, column: 1, scope: !3155)
!3159 = !{i64 2155774163, i64 2155774183, i64 2155774246}
!3160 = !DILocation(line: 53, column: 1, scope: !3155)
!3161 = !{i64 2155774671, i64 2155774691, i64 2155774754}
!3162 = !DILocation(line: 54, column: 1, scope: !3155)
!3163 = !{i64 2155775089, i64 2155775109, i64 2155775172}
!3164 = !DILocation(line: 55, column: 1, scope: !3155)
!3165 = !{i64 2155775507, i64 2155775527, i64 2155775590}
!3166 = !DILocation(line: 56, column: 1, scope: !3155)
!3167 = !{i64 2155775925, i64 2155775945, i64 2155776008}
!3168 = !DILocation(line: 57, column: 1, scope: !3155)
!3169 = !{i64 2155776343, i64 2155776363, i64 2155776426}
!3170 = !DILocation(line: 58, column: 1, scope: !3155)
!3171 = !{i64 2155776761, i64 2155776781, i64 2155776844}
!3172 = !DILocation(line: 59, column: 1, scope: !3155)
!3173 = !{i64 2155777179, i64 2155777199, i64 2155777262}
!3174 = !DILocation(line: 60, column: 1, scope: !3155)
!3175 = !{i64 2155777603, i64 2155777623, i64 2155777686}
!3176 = !DILocation(line: 61, column: 1, scope: !3155)
!3177 = !{i64 2155777920, i64 2155777940, i64 2155778003}
!3178 = !DILocation(line: 70, column: 1, scope: !3155)
!3179 = !{i64 2155778149, i64 2155778169, i64 2155778232}
!3180 = !DILocation(line: 72, column: 1, scope: !3155)
!3181 = !{i64 2155778481, i64 2155778501, i64 2155778564}
!3182 = !DILocation(line: 73, column: 1, scope: !3155)
!3183 = !{i64 2155778931, i64 2155778951, i64 2155779014}
!3184 = !DILocation(line: 74, column: 1, scope: !3155)
!3185 = !{i64 2155779381, i64 2155779401, i64 2155779464}
!3186 = !DILocation(line: 75, column: 1, scope: !3155)
!3187 = !{i64 2155779831, i64 2155779851, i64 2155779914}
!3188 = !DILocation(line: 76, column: 1, scope: !3155)
!3189 = !{i64 2155784342, i64 2155784362, i64 2155784425}
!3190 = !DILocation(line: 77, column: 1, scope: !3155)
!3191 = !{i64 2155784792, i64 2155784812, i64 2155784875}
!3192 = !DILocation(line: 78, column: 1, scope: !3155)
!3193 = !{i64 2155785242, i64 2155785262, i64 2155785325}
!3194 = !DILocation(line: 79, column: 1, scope: !3155)
!3195 = !{i64 2155785692, i64 2155785712, i64 2155785775}
!3196 = !DILocation(line: 80, column: 1, scope: !3155)
!3197 = !{i64 2155786145, i64 2155786165, i64 2155786228}
!3198 = !DILocation(line: 84, column: 1, scope: !3155)
!3199 = !{i64 2155786477, i64 2155786497, i64 2155786560}
!3200 = !DILocation(line: 91, column: 1, scope: !3155)
!3201 = !{i64 2155786874, i64 2155786894, i64 2155786957}
!3202 = !DILocation(line: 93, column: 1, scope: !3155)
!3203 = !{i64 2155787241, i64 2155787261, i64 2155787324}
!3204 = !DILocation(line: 106, column: 1, scope: !3155)
!3205 = !{i64 2155787511, i64 2155787531, i64 2155787594}
!3206 = !DILocation(line: 11, column: 1, scope: !3207)
!3207 = !DILexicalBlockFile(scope: !3096, file: !3208, discriminator: 0)
!3208 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3209 = distinct !DISubprogram(name: "test_thread", scope: !125, file: !125, line: 33, type: !111, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3210)
!3210 = !{!3211, !3212, !3213, !3214, !3215, !3216, !3220, !3221, !3222, !3223, !3227}
!3211 = !DILocalVariable(name: "arg1", arg: 1, scope: !3209, file: !125, line: 33, type: !113)
!3212 = !DILocalVariable(name: "arg2", arg: 2, scope: !3209, file: !125, line: 33, type: !113)
!3213 = !DILocalVariable(name: "arg3", arg: 3, scope: !3209, file: !125, line: 33, type: !113)
!3214 = !DILocalVariable(name: "counter", scope: !3209, file: !125, line: 35, type: !102)
!3215 = !DILocalVariable(name: "buffer", scope: !3209, file: !125, line: 36, type: !106)
!3216 = !DILocalVariable(name: "array", scope: !3209, file: !125, line: 52, type: !3217)
!3217 = !DICompositeType(tag: DW_TAG_array_type, baseType: !119, size: 26912, elements: !3218)
!3218 = !{!3219}
!3219 = !DISubrange(count: 841)
!3220 = !DILocalVariable(name: "carry", scope: !3209, file: !125, line: 53, type: !119)
!3221 = !DILocalVariable(name: "i", scope: !3209, file: !125, line: 54, type: !119)
!3222 = !DILocalVariable(name: "j", scope: !3209, file: !125, line: 54, type: !119)
!3223 = !DILocalVariable(name: "sum", scope: !3224, file: !125, line: 61, type: !119)
!3224 = distinct !DILexicalBlock(scope: !3225, file: !125, line: 60, column: 35)
!3225 = distinct !DILexicalBlock(scope: !3226, file: !125, line: 60, column: 2)
!3226 = distinct !DILexicalBlock(scope: !3209, file: !125, line: 60, column: 2)
!3227 = !DILocalVariable(name: "value", scope: !3224, file: !125, line: 61, type: !119)
!3228 = !DILocation(line: 0, scope: !3209)
!3229 = !DILocation(line: 52, column: 2, scope: !3209)
!3230 = !DILocation(line: 52, column: 6, scope: !3209)
!3231 = !DILocation(line: 56, column: 2, scope: !3232)
!3232 = distinct !DILexicalBlock(scope: !3209, file: !125, line: 56, column: 2)
!3233 = !DILocation(line: 57, column: 3, scope: !3234)
!3234 = distinct !DILexicalBlock(scope: !3235, file: !125, line: 56, column: 31)
!3235 = distinct !DILexicalBlock(scope: !3232, file: !125, line: 56, column: 2)
!3236 = !DILocation(line: 57, column: 12, scope: !3234)
!3237 = !DILocation(line: 56, column: 27, scope: !3235)
!3238 = !DILocation(line: 56, column: 16, scope: !3235)
!3239 = distinct !{!3239, !3231, !3240}
!3240 = !DILocation(line: 58, column: 2, scope: !3232)
!3241 = !DILocation(line: 0, scope: !3224)
!3242 = !DILocation(line: 63, column: 3, scope: !3243)
!3243 = distinct !DILexicalBlock(scope: !3224, file: !125, line: 63, column: 3)
!3244 = !DILocation(line: 64, column: 14, scope: !3245)
!3245 = distinct !DILexicalBlock(scope: !3246, file: !125, line: 63, column: 27)
!3246 = distinct !DILexicalBlock(scope: !3243, file: !125, line: 63, column: 3)
!3247 = !DILocation(line: 64, column: 31, scope: !3245)
!3248 = !DILocation(line: 64, column: 29, scope: !3245)
!3249 = !DILocation(line: 64, column: 18, scope: !3245)
!3250 = !DILocation(line: 65, column: 24, scope: !3245)
!3251 = !DILocation(line: 65, column: 28, scope: !3245)
!3252 = !DILocation(line: 66, column: 8, scope: !3245)
!3253 = !DILocation(line: 65, column: 13, scope: !3245)
!3254 = !DILocation(line: 63, column: 22, scope: !3246)
!3255 = !DILocation(line: 63, column: 17, scope: !3246)
!3256 = distinct !{!3256, !3242, !3257}
!3257 = !DILocation(line: 67, column: 3, scope: !3243)
!3258 = !DILocation(line: 69, column: 23, scope: !3224)
!3259 = !DILocation(line: 69, column: 17, scope: !3224)
!3260 = !DILocation(line: 73, column: 3, scope: !3224)
!3261 = !DILocation(line: 74, column: 10, scope: !3224)
!3262 = !DILocation(line: 60, column: 28, scope: !3225)
!3263 = !DILocation(line: 60, column: 21, scope: !3225)
!3264 = !DILocation(line: 60, column: 2, scope: !3226)
!3265 = distinct !{!3265, !3264, !3266}
!3266 = !DILocation(line: 75, column: 2, scope: !3226)
!3267 = !DILocation(line: 35, column: 22, scope: !3209)
!3268 = !DILocation(line: 77, column: 2, scope: !3209)
!3269 = !DILocation(line: 78, column: 1, scope: !3209)
!3270 = distinct !DISubprogram(name: "atomic_dec", scope: !3271, file: !3271, line: 141, type: !3272, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3275)
!3271 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic_builtin.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3272 = !DISubroutineType(types: !3273)
!3273 = !{!3274, !102}
!3274 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_val_t", file: !104, line: 23, baseType: !103)
!3275 = !{!3276}
!3276 = !DILocalVariable(name: "target", arg: 1, scope: !3270, file: !3271, line: 141, type: !102)
!3277 = !DILocation(line: 0, scope: !3270)
!3278 = !DILocation(line: 143, column: 9, scope: !3270)
!3279 = !DILocation(line: 143, column: 2, scope: !3270)
!3280 = distinct !DISubprogram(name: "atomic_sub", scope: !3271, file: !3271, line: 105, type: !3281, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3283)
!3281 = !DISubroutineType(types: !3282)
!3282 = !{!3274, !102, !3274}
!3283 = !{!3284, !3285}
!3284 = !DILocalVariable(name: "target", arg: 1, scope: !3280, file: !3271, line: 105, type: !102)
!3285 = !DILocalVariable(name: "value", arg: 2, scope: !3280, file: !3271, line: 105, type: !3274)
!3286 = !DILocation(line: 0, scope: !3280)
!3287 = !DILocation(line: 107, column: 9, scope: !3280)
!3288 = !DILocation(line: 107, column: 2, scope: !3280)
!3289 = distinct !DISubprogram(name: "main", scope: !125, file: !125, line: 80, type: !3098, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3290)
!3290 = !{!3291, !3292, !3293, !3294, !3295}
!3291 = !DILocalVariable(name: "start_time", scope: !3289, file: !125, line: 82, type: !118)
!3292 = !DILocalVariable(name: "stop_time", scope: !3289, file: !125, line: 82, type: !118)
!3293 = !DILocalVariable(name: "cycles_spent", scope: !3289, file: !125, line: 82, type: !118)
!3294 = !DILocalVariable(name: "nanoseconds_spent", scope: !3289, file: !125, line: 82, type: !118)
!3295 = !DILocalVariable(name: "i", scope: !3289, file: !125, line: 83, type: !119)
!3296 = !DILocation(line: 85, column: 2, scope: !3289)
!3297 = !DILocation(line: 89, column: 15, scope: !3289)
!3298 = !DILocation(line: 0, scope: !3289)
!3299 = !DILocation(line: 91, column: 2, scope: !3300)
!3300 = distinct !DILexicalBlock(scope: !3289, file: !125, line: 91, column: 2)
!3301 = !DILocation(line: 99, column: 9, scope: !3289)
!3302 = !DILocation(line: 99, column: 2, scope: !3289)
!3303 = !DILocation(line: 92, column: 20, scope: !3304)
!3304 = distinct !DILexicalBlock(scope: !3305, file: !125, line: 91, column: 36)
!3305 = distinct !DILexicalBlock(scope: !3300, file: !125, line: 91, column: 2)
!3306 = !DILocation(line: 92, column: 32, scope: !3304)
!3307 = !DILocation(line: 94, column: 37, scope: !3304)
!3308 = !DILocation(line: 92, column: 3, scope: !3304)
!3309 = !DILocation(line: 91, column: 32, scope: !3305)
!3310 = !DILocation(line: 91, column: 16, scope: !3305)
!3311 = distinct !{!3311, !3299, !3312}
!3312 = !DILocation(line: 96, column: 2, scope: !3300)
!3313 = !DILocation(line: 100, column: 3, scope: !3314)
!3314 = distinct !DILexicalBlock(scope: !3289, file: !125, line: 99, column: 18)
!3315 = distinct !{!3315, !3302, !3316}
!3316 = !DILocation(line: 101, column: 2, scope: !3289)
!3317 = !DILocation(line: 104, column: 14, scope: !3289)
!3318 = !DILocation(line: 109, column: 2, scope: !3319)
!3319 = distinct !DILexicalBlock(scope: !3289, file: !125, line: 109, column: 2)
!3320 = !DILocation(line: 110, column: 56, scope: !3321)
!3321 = distinct !DILexicalBlock(scope: !3322, file: !125, line: 109, column: 36)
!3322 = distinct !DILexicalBlock(scope: !3319, file: !125, line: 109, column: 2)
!3323 = !DILocation(line: 110, column: 3, scope: !3321)
!3324 = !DILocation(line: 109, column: 32, scope: !3322)
!3325 = !DILocation(line: 109, column: 16, scope: !3322)
!3326 = distinct !{!3326, !3318, !3327}
!3327 = !DILocation(line: 111, column: 2, scope: !3319)
!3328 = !DILocation(line: 106, column: 27, scope: !3289)
!3329 = !DILocation(line: 107, column: 52, scope: !3289)
!3330 = !DILocation(line: 107, column: 32, scope: !3289)
!3331 = !DILocation(line: 107, column: 22, scope: !3289)
!3332 = !DILocation(line: 114, column: 45, scope: !3289)
!3333 = !DILocation(line: 113, column: 2, scope: !3289)
!3334 = !DILocation(line: 115, column: 1, scope: !3289)
!3335 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !245, file: !245, line: 1675, type: !3336, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2162)
!3336 = !DISubroutineType(types: !3337)
!3337 = !{!118}
!3338 = !DILocation(line: 1677, column: 9, scope: !3335)
!3339 = !DILocation(line: 1677, column: 2, scope: !3335)
!3340 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3341, file: !3341, line: 403, type: !3342, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3344)
!3341 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3342 = !DISubroutineType(types: !3343)
!3343 = !{!120, !120}
!3344 = !{!3345}
!3345 = !DILocalVariable(name: "t", arg: 1, scope: !3340, file: !3341, line: 403, type: !120)
!3346 = !DILocation(line: 0, scope: !3340)
!3347 = !DILocation(line: 406, column: 2, scope: !3340)
!3348 = distinct !DISubprogram(name: "k_thread_create", scope: !3349, file: !3349, line: 24, type: !3350, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3360)
!3349 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pi")
!3350 = !DISubroutineType(types: !3351)
!3351 = !{!3352, !3353, !3354, !239, !108, !113, !113, !113, !119, !118, !3356}
!3352 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !143, line: 347, baseType: !3353)
!3353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !142, size: 32)
!3354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3355, size: 32)
!3355 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !109, line: 44, baseType: !127)
!3356 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !115, line: 67, baseType: !3357)
!3357 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !115, line: 65, size: 64, elements: !3358)
!3358 = !{!3359}
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3357, file: !115, line: 66, baseType: !114, size: 64)
!3360 = !{!3361, !3362, !3363, !3364, !3365, !3366, !3367, !3368, !3369, !3370}
!3361 = !DILocalVariable(name: "new_thread", arg: 1, scope: !3348, file: !3349, line: 24, type: !3353)
!3362 = !DILocalVariable(name: "stack", arg: 2, scope: !3348, file: !3349, line: 24, type: !3354)
!3363 = !DILocalVariable(name: "stack_size", arg: 3, scope: !3348, file: !3349, line: 24, type: !239)
!3364 = !DILocalVariable(name: "entry", arg: 4, scope: !3348, file: !3349, line: 24, type: !108)
!3365 = !DILocalVariable(name: "p1", arg: 5, scope: !3348, file: !3349, line: 24, type: !113)
!3366 = !DILocalVariable(name: "p2", arg: 6, scope: !3348, file: !3349, line: 24, type: !113)
!3367 = !DILocalVariable(name: "p3", arg: 7, scope: !3348, file: !3349, line: 24, type: !113)
!3368 = !DILocalVariable(name: "prio", arg: 8, scope: !3348, file: !3349, line: 24, type: !119)
!3369 = !DILocalVariable(name: "options", arg: 9, scope: !3348, file: !3349, line: 24, type: !118)
!3370 = !DILocalVariable(name: "delay", arg: 10, scope: !3348, file: !3349, line: 24, type: !3356)
!3371 = !DILocation(line: 0, scope: !3348)
!3372 = !DILocation(line: 49, column: 2, scope: !3373)
!3373 = distinct !DILexicalBlock(scope: !3348, file: !3349, line: 49, column: 2)
!3374 = !{i64 2155444495}
!3375 = !DILocation(line: 50, column: 9, scope: !3348)
!3376 = !DILocation(line: 50, column: 2, scope: !3348)
!3377 = distinct !DISubprogram(name: "k_sleep", scope: !3349, file: !3349, line: 91, type: !3378, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3380)
!3378 = !DISubroutineType(types: !3379)
!3379 = !{!774, !3356}
!3380 = !{!3381}
!3381 = !DILocalVariable(name: "timeout", arg: 1, scope: !3377, file: !3349, line: 91, type: !3356)
!3382 = !DILocation(line: 0, scope: !3377)
!3383 = !DILocation(line: 99, column: 2, scope: !3384)
!3384 = distinct !DILexicalBlock(scope: !3377, file: !3349, line: 99, column: 2)
!3385 = !{i64 2155444699}
!3386 = !DILocation(line: 100, column: 9, scope: !3377)
!3387 = !DILocation(line: 100, column: 2, scope: !3377)
!3388 = distinct !DISubprogram(name: "k_cyc_to_ns_floor64", scope: !3341, file: !3341, line: 935, type: !3342, scopeLine: 936, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3389)
!3389 = !{!3390}
!3390 = !DILocalVariable(name: "t", arg: 1, scope: !3388, file: !3341, line: 935, type: !120)
!3391 = !DILocation(line: 0, scope: !3388)
!3392 = !DILocalVariable(name: "t", arg: 1, scope: !3393, file: !3341, line: 102, type: !120)
!3393 = distinct !DISubprogram(name: "z_tmcvt", scope: !3341, file: !3341, line: 102, type: !3394, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3396)
!3394 = !DISubroutineType(types: !3395)
!3395 = !{!120, !120, !118, !118, !345, !345, !345, !345}
!3396 = !{!3392, !3397, !3398, !3399, !3400, !3401, !3402, !3403, !3404, !3405, !3406}
!3397 = !DILocalVariable(name: "from_hz", arg: 2, scope: !3393, file: !3341, line: 102, type: !118)
!3398 = !DILocalVariable(name: "to_hz", arg: 3, scope: !3393, file: !3341, line: 103, type: !118)
!3399 = !DILocalVariable(name: "const_hz", arg: 4, scope: !3393, file: !3341, line: 103, type: !345)
!3400 = !DILocalVariable(name: "result32", arg: 5, scope: !3393, file: !3341, line: 104, type: !345)
!3401 = !DILocalVariable(name: "round_up", arg: 6, scope: !3393, file: !3341, line: 104, type: !345)
!3402 = !DILocalVariable(name: "round_off", arg: 7, scope: !3393, file: !3341, line: 105, type: !345)
!3403 = !DILocalVariable(name: "mul_ratio", scope: !3393, file: !3341, line: 107, type: !345)
!3404 = !DILocalVariable(name: "div_ratio", scope: !3393, file: !3341, line: 109, type: !345)
!3405 = !DILocalVariable(name: "off", scope: !3393, file: !3341, line: 116, type: !120)
!3406 = !DILocalVariable(name: "rdivisor", scope: !3407, file: !3341, line: 119, type: !118)
!3407 = distinct !DILexicalBlock(scope: !3408, file: !3341, line: 118, column: 18)
!3408 = distinct !DILexicalBlock(scope: !3393, file: !3341, line: 118, column: 6)
!3409 = !DILocation(line: 0, scope: !3393, inlinedAt: !3410)
!3410 = distinct !DILocation(line: 938, column: 9, scope: !3388)
!3411 = !DILocation(line: 161, column: 14, scope: !3412, inlinedAt: !3410)
!3412 = distinct !DILexicalBlock(scope: !3413, file: !3341, line: 157, column: 10)
!3413 = distinct !DILexicalBlock(scope: !3414, file: !3341, line: 150, column: 14)
!3414 = distinct !DILexicalBlock(scope: !3415, file: !3341, line: 148, column: 7)
!3415 = distinct !DILexicalBlock(scope: !3416, file: !3341, line: 147, column: 9)
!3416 = distinct !DILexicalBlock(scope: !3417, file: !3341, line: 141, column: 13)
!3417 = distinct !DILexicalBlock(scope: !3393, file: !3341, line: 134, column: 6)
!3418 = !DILocation(line: 161, column: 25, scope: !3412, inlinedAt: !3410)
!3419 = !DILocation(line: 161, column: 50, scope: !3412, inlinedAt: !3410)
!3420 = !DILocation(line: 161, column: 65, scope: !3412, inlinedAt: !3410)
!3421 = !DILocation(line: 161, column: 33, scope: !3412, inlinedAt: !3410)
!3422 = !DILocation(line: 938, column: 2, scope: !3388)
!3423 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !3424, file: !3424, line: 24, type: !3336, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2162)
!3424 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3425 = !DILocation(line: 26, column: 9, scope: !3423)
!3426 = !DILocation(line: 26, column: 2, scope: !3423)
!3427 = distinct !DISubprogram(name: "cbvprintf_package", scope: !286, file: !286, line: 233, type: !3428, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !3437)
!3428 = !DISubroutineType(types: !3429)
!3429 = !{!119, !113, !239, !118, !278, !3430}
!3430 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3431, line: 99, baseType: !3432)
!3431 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3432 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3431, line: 40, baseType: !3433)
!3433 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !286, baseType: !3434)
!3434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3435)
!3435 = !{!3436}
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3434, file: !286, line: 18, baseType: !113, size: 32)
!3437 = !{!3438, !3439, !3440, !3441, !3442, !3443, !3444, !3445, !3446, !3447, !3449, !3450, !3451, !3452, !3453, !3454, !3455, !3456, !3457, !3458, !3459, !3460, !3473, !3482, !3485, !3486, !3489, !3492, !3495, !3498, !3504}
!3438 = !DILocalVariable(name: "packaged", arg: 1, scope: !3427, file: !286, line: 233, type: !113)
!3439 = !DILocalVariable(name: "len", arg: 2, scope: !3427, file: !286, line: 233, type: !239)
!3440 = !DILocalVariable(name: "flags", arg: 3, scope: !3427, file: !286, line: 233, type: !118)
!3441 = !DILocalVariable(name: "fmt", arg: 4, scope: !3427, file: !286, line: 234, type: !278)
!3442 = !DILocalVariable(name: "ap", arg: 5, scope: !3427, file: !286, line: 234, type: !3430)
!3443 = !DILocalVariable(name: "buf0", scope: !3427, file: !286, line: 247, type: !284)
!3444 = !DILocalVariable(name: "buf", scope: !3427, file: !286, line: 248, type: !284)
!3445 = !DILocalVariable(name: "size", scope: !3427, file: !286, line: 249, type: !32)
!3446 = !DILocalVariable(name: "align", scope: !3427, file: !286, line: 250, type: !32)
!3447 = !DILocalVariable(name: "str_ptr_pos", scope: !3427, file: !286, line: 251, type: !3448)
!3448 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 128, elements: !267)
!3449 = !DILocalVariable(name: "str_ptr_arg", scope: !3427, file: !286, line: 252, type: !3448)
!3450 = !DILocalVariable(name: "s_idx", scope: !3427, file: !286, line: 253, type: !32)
!3451 = !DILocalVariable(name: "s_rw_cnt", scope: !3427, file: !286, line: 254, type: !32)
!3452 = !DILocalVariable(name: "s_ro_cnt", scope: !3427, file: !286, line: 255, type: !32)
!3453 = !DILocalVariable(name: "arg_idx", scope: !3427, file: !286, line: 256, type: !119)
!3454 = !DILocalVariable(name: "i", scope: !3427, file: !286, line: 257, type: !32)
!3455 = !DILocalVariable(name: "s", scope: !3427, file: !286, line: 258, type: !278)
!3456 = !DILocalVariable(name: "parsing", scope: !3427, file: !286, line: 259, type: !345)
!3457 = !DILocalVariable(name: "rws_pos_en", scope: !3427, file: !286, line: 263, type: !345)
!3458 = !DILocalVariable(name: "fros_cnt", scope: !3427, file: !286, line: 268, type: !119)
!3459 = !DILocalVariable(name: "is_str_arg", scope: !3427, file: !286, line: 269, type: !345)
!3460 = !DILocalVariable(name: "pkg_hdr", scope: !3427, file: !286, line: 270, type: !3461)
!3461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3462, size: 32)
!3462 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !3463, line: 78, size: 32, elements: !3464)
!3463 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3464 = !{!3465, !3472}
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !3462, file: !3463, line: 80, baseType: !3466, size: 32)
!3466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !3463, line: 45, size: 32, elements: !3467)
!3467 = !{!3468, !3469, !3470, !3471}
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3466, file: !3463, line: 47, baseType: !185, size: 8)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !3466, file: !3463, line: 50, baseType: !185, size: 8, offset: 8)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !3466, file: !3463, line: 53, baseType: !185, size: 8, offset: 16)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !3466, file: !3463, line: 56, baseType: !185, size: 8, offset: 24)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !3462, file: !3463, line: 82, baseType: !113, size: 32)
!3473 = !DILocalVariable(name: "v", scope: !3474, file: !286, line: 567, type: !3478)
!3474 = distinct !DILexicalBlock(scope: !3475, file: !286, line: 562, column: 14)
!3475 = distinct !DILexicalBlock(scope: !3476, file: !286, line: 481, column: 18)
!3476 = distinct !DILexicalBlock(scope: !3477, file: !286, line: 466, column: 3)
!3477 = distinct !DILexicalBlock(scope: !3427, file: !286, line: 343, column: 15)
!3478 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3427, file: !286, line: 567, size: 64, elements: !3479)
!3479 = !{!3480, !3481}
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3478, file: !286, line: 567, baseType: !276, size: 64)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !3478, file: !286, line: 567, baseType: !274, size: 64)
!3482 = !DILocalVariable(name: "is_ro", scope: !3483, file: !286, line: 620, type: !345)
!3483 = distinct !DILexicalBlock(scope: !3484, file: !286, line: 613, column: 19)
!3484 = distinct !DILexicalBlock(scope: !3477, file: !286, line: 613, column: 7)
!3485 = !DILocalVariable(name: "do_ro", scope: !3483, file: !286, line: 621, type: !345)
!3486 = !DILocalVariable(name: "s_ptr_idx", scope: !3487, file: !286, line: 626, type: !118)
!3487 = distinct !DILexicalBlock(scope: !3488, file: !286, line: 625, column: 11)
!3488 = distinct !DILexicalBlock(scope: !3483, file: !286, line: 623, column: 8)
!3489 = !DILocalVariable(name: "v", scope: !3490, file: !286, line: 684, type: !119)
!3490 = distinct !DILexicalBlock(scope: !3491, file: !286, line: 683, column: 35)
!3491 = distinct !DILexicalBlock(scope: !3484, file: !286, line: 683, column: 14)
!3492 = !DILocalVariable(name: "v", scope: !3493, file: !286, line: 691, type: !105)
!3493 = distinct !DILexicalBlock(scope: !3494, file: !286, line: 690, column: 36)
!3494 = distinct !DILexicalBlock(scope: !3491, file: !286, line: 690, column: 14)
!3495 = !DILocalVariable(name: "v", scope: !3496, file: !286, line: 698, type: !117)
!3496 = distinct !DILexicalBlock(scope: !3497, file: !286, line: 697, column: 41)
!3497 = distinct !DILexicalBlock(scope: !3494, file: !286, line: 697, column: 14)
!3498 = !DILocalVariable(name: "pos", scope: !3499, file: !286, line: 762, type: !185)
!3499 = distinct !DILexicalBlock(scope: !3500, file: !286, line: 757, column: 31)
!3500 = distinct !DILexicalBlock(scope: !3501, file: !286, line: 757, column: 3)
!3501 = distinct !DILexicalBlock(scope: !3502, file: !286, line: 757, column: 3)
!3502 = distinct !DILexicalBlock(scope: !3503, file: !286, line: 756, column: 16)
!3503 = distinct !DILexicalBlock(scope: !3427, file: !286, line: 756, column: 6)
!3504 = !DILabel(scope: !3483, name: "process_string", file: !286, line: 615)
!3505 = !DILocation(line: 0, scope: !3427)
!3506 = !DILocation(line: 251, column: 2, scope: !3427)
!3507 = !DILocation(line: 251, column: 10, scope: !3427)
!3508 = !DILocation(line: 252, column: 2, scope: !3427)
!3509 = !DILocation(line: 252, column: 10, scope: !3427)
!3510 = !DILocation(line: 263, column: 29, scope: !3427)
!3511 = !DILocation(line: 263, column: 21, scope: !3427)
!3512 = !DILocation(line: 268, column: 21, scope: !3427)
!3513 = !DILocation(line: 268, column: 19, scope: !3427)
!3514 = !DILocation(line: 273, column: 6, scope: !3515)
!3515 = distinct !DILexicalBlock(scope: !3427, file: !286, line: 273, column: 6)
!3516 = !DILocation(line: 273, column: 26, scope: !3515)
!3517 = !DILocation(line: 273, column: 6, scope: !3427)
!3518 = !DILocation(line: 297, column: 6, scope: !3427)
!3519 = !DILocation(line: 305, column: 11, scope: !3520)
!3520 = distinct !DILexicalBlock(scope: !3427, file: !286, line: 305, column: 6)
!3521 = !DILocation(line: 305, column: 6, scope: !3427)
!3522 = !DILocation(line: 327, column: 19, scope: !3523)
!3523 = distinct !DILexicalBlock(scope: !3427, file: !286, line: 327, column: 6)
!3524 = !DILocation(line: 327, column: 22, scope: !3523)
!3525 = !DILocation(line: 327, column: 33, scope: !3523)
!3526 = !DILocation(line: 327, column: 50, scope: !3523)
!3527 = !DILocation(line: 327, column: 6, scope: !3427)
!3528 = !DILocation(line: 338, column: 9, scope: !3427)
!3529 = !DILocation(line: 341, column: 2, scope: !3427)
!3530 = !DILocation(line: 472, column: 8, scope: !3476)
!3531 = !DILocation(line: 473, column: 14, scope: !3532)
!3532 = distinct !DILexicalBlock(scope: !3533, file: !286, line: 473, column: 9)
!3533 = distinct !DILexicalBlock(scope: !3534, file: !286, line: 472, column: 18)
!3534 = distinct !DILexicalBlock(scope: !3476, file: !286, line: 472, column: 8)
!3535 = !DILocation(line: 473, column: 9, scope: !3533)
!3536 = !DILocation(line: 479, column: 5, scope: !3533)
!3537 = !DILocation(line: 468, column: 9, scope: !3538)
!3538 = distinct !DILexicalBlock(scope: !3476, file: !286, line: 468, column: 8)
!3539 = !DILocation(line: 468, column: 8, scope: !3538)
!3540 = !DILocation(line: 468, column: 15, scope: !3538)
!3541 = !DILocation(line: 468, column: 8, scope: !3476)
!3542 = distinct !{!3542, !3543, !3544}
!3543 = !DILocation(line: 343, column: 2, scope: !3427)
!3544 = !DILocation(line: 712, column: 2, scope: !3427)
!3545 = !DILocation(line: 481, column: 4, scope: !3476)
!3546 = !DILocation(line: 484, column: 12, scope: !3475)
!3547 = !DILocation(line: 485, column: 5, scope: !3475)
!3548 = !DILocation(line: 505, column: 5, scope: !3475)
!3549 = !DILocation(line: 518, column: 5, scope: !3475)
!3550 = !DILocation(line: 523, column: 5, scope: !3475)
!3551 = !DILocation(line: 532, column: 9, scope: !3552)
!3552 = distinct !DILexicalBlock(scope: !3475, file: !286, line: 532, column: 9)
!3553 = !DILocation(line: 532, column: 17, scope: !3552)
!3554 = !DILocation(line: 532, column: 9, scope: !3475)
!3555 = !DILocation(line: 533, column: 10, scope: !3556)
!3556 = distinct !DILexicalBlock(scope: !3557, file: !286, line: 533, column: 10)
!3557 = distinct !DILexicalBlock(scope: !3552, file: !286, line: 532, column: 25)
!3558 = !DILocation(line: 533, column: 18, scope: !3556)
!3559 = !DILocation(line: 0, scope: !3560)
!3560 = distinct !DILexicalBlock(scope: !3474, file: !286, line: 569, column: 9)
!3561 = !DILocation(line: 0, scope: !3474)
!3562 = !DILocation(line: 579, column: 20, scope: !3474)
!3563 = !DILocation(line: 579, column: 11, scope: !3474)
!3564 = !DILocation(line: 580, column: 9, scope: !3474)
!3565 = !DILocation(line: 582, column: 21, scope: !3566)
!3566 = distinct !DILexicalBlock(scope: !3567, file: !286, line: 582, column: 10)
!3567 = distinct !DILexicalBlock(scope: !3568, file: !286, line: 580, column: 23)
!3568 = distinct !DILexicalBlock(scope: !3474, file: !286, line: 580, column: 9)
!3569 = !DILocation(line: 582, column: 28, scope: !3566)
!3570 = !DILocation(line: 582, column: 10, scope: !3567)
!3571 = !DILocation(line: 0, scope: !3572)
!3572 = distinct !DILexicalBlock(scope: !3573, file: !286, line: 587, column: 17)
!3573 = distinct !DILexicalBlock(scope: !3567, file: !286, line: 585, column: 10)
!3574 = !DILocation(line: 593, column: 9, scope: !3474)
!3575 = !DILocation(line: 600, column: 5, scope: !3475)
!3576 = !DILocation(line: 605, column: 18, scope: !3477)
!3577 = !DILocation(line: 605, column: 9, scope: !3477)
!3578 = !DILocation(line: 608, column: 20, scope: !3579)
!3579 = distinct !DILexicalBlock(scope: !3477, file: !286, line: 608, column: 7)
!3580 = !DILocation(line: 608, column: 23, scope: !3579)
!3581 = !DILocation(line: 608, column: 34, scope: !3579)
!3582 = !DILocation(line: 608, column: 41, scope: !3579)
!3583 = !DILocation(line: 608, column: 7, scope: !3477)
!3584 = !DILocation(line: 613, column: 7, scope: !3477)
!3585 = !DILocation(line: 614, column: 8, scope: !3483)
!3586 = !DILocation(line: 614, column: 4, scope: !3483)
!3587 = !DILocation(line: 256, column: 6, scope: !3427)
!3588 = !DILocation(line: 254, column: 15, scope: !3427)
!3589 = !DILocation(line: 320, column: 7, scope: !3590)
!3590 = distinct !DILexicalBlock(scope: !3520, file: !286, line: 305, column: 20)
!3591 = !DILocation(line: 615, column: 1, scope: !3483)
!3592 = !DILocation(line: 616, column: 8, scope: !3483)
!3593 = !DILocation(line: 617, column: 5, scope: !3594)
!3594 = distinct !DILexicalBlock(scope: !3595, file: !286, line: 616, column: 22)
!3595 = distinct !DILexicalBlock(scope: !3483, file: !286, line: 616, column: 8)
!3596 = !DILocation(line: 617, column: 25, scope: !3594)
!3597 = !DILocation(line: 618, column: 4, scope: !3594)
!3598 = !DILocation(line: 620, column: 26, scope: !3483)
!3599 = !DILocation(line: 620, column: 29, scope: !3483)
!3600 = !DILocation(line: 620, column: 17, scope: !3483)
!3601 = !DILocation(line: 620, column: 43, scope: !3483)
!3602 = !DILocation(line: 0, scope: !3483)
!3603 = !DILocation(line: 623, column: 14, scope: !3488)
!3604 = !DILocation(line: 626, column: 26, scope: !3487)
!3605 = !DILocation(line: 626, column: 37, scope: !3487)
!3606 = !DILocation(line: 0, scope: !3487)
!3607 = !DILocation(line: 634, column: 15, scope: !3608)
!3608 = distinct !DILexicalBlock(scope: !3487, file: !286, line: 634, column: 9)
!3609 = !DILocation(line: 635, column: 6, scope: !3610)
!3610 = distinct !DILexicalBlock(scope: !3611, file: !286, line: 635, column: 6)
!3611 = distinct !DILexicalBlock(scope: !3612, file: !286, line: 635, column: 6)
!3612 = distinct !DILexicalBlock(scope: !3613, file: !286, line: 635, column: 6)
!3613 = distinct !DILexicalBlock(scope: !3608, file: !286, line: 634, column: 44)
!3614 = !DILocation(line: 639, column: 15, scope: !3615)
!3615 = distinct !DILexicalBlock(scope: !3487, file: !286, line: 639, column: 9)
!3616 = !DILocation(line: 639, column: 9, scope: !3487)
!3617 = !DILocation(line: 640, column: 6, scope: !3618)
!3618 = distinct !DILexicalBlock(scope: !3619, file: !286, line: 640, column: 6)
!3619 = distinct !DILexicalBlock(scope: !3620, file: !286, line: 640, column: 6)
!3620 = distinct !DILexicalBlock(scope: !3621, file: !286, line: 640, column: 6)
!3621 = distinct !DILexicalBlock(scope: !3615, file: !286, line: 639, column: 43)
!3622 = !DILocation(line: 644, column: 9, scope: !3487)
!3623 = !DILocation(line: 649, column: 27, scope: !3624)
!3624 = distinct !DILexicalBlock(scope: !3625, file: !286, line: 644, column: 23)
!3625 = distinct !DILexicalBlock(scope: !3487, file: !286, line: 644, column: 9)
!3626 = !DILocation(line: 649, column: 6, scope: !3624)
!3627 = !DILocation(line: 649, column: 25, scope: !3624)
!3628 = !DILocation(line: 650, column: 27, scope: !3624)
!3629 = !DILocation(line: 650, column: 6, scope: !3624)
!3630 = !DILocation(line: 650, column: 25, scope: !3624)
!3631 = !DILocation(line: 651, column: 10, scope: !3624)
!3632 = !DILocation(line: 653, column: 26, scope: !3633)
!3633 = distinct !DILexicalBlock(scope: !3634, file: !286, line: 651, column: 17)
!3634 = distinct !DILexicalBlock(scope: !3624, file: !286, line: 651, column: 10)
!3635 = !DILocation(line: 654, column: 15, scope: !3633)
!3636 = !DILocation(line: 655, column: 6, scope: !3633)
!3637 = !DILocation(line: 656, column: 15, scope: !3638)
!3638 = distinct !DILexicalBlock(scope: !3634, file: !286, line: 655, column: 13)
!3639 = !DILocation(line: 658, column: 16, scope: !3625)
!3640 = !DILocation(line: 663, column: 10, scope: !3641)
!3641 = distinct !DILexicalBlock(scope: !3642, file: !286, line: 658, column: 23)
!3642 = distinct !DILexicalBlock(scope: !3625, file: !286, line: 658, column: 16)
!3643 = !DILocation(line: 664, column: 5, scope: !3641)
!3644 = !DILocation(line: 664, column: 16, scope: !3642)
!3645 = !DILocation(line: 669, column: 10, scope: !3646)
!3646 = distinct !DILexicalBlock(scope: !3647, file: !286, line: 664, column: 28)
!3647 = distinct !DILexicalBlock(scope: !3642, file: !286, line: 664, column: 16)
!3648 = !DILocation(line: 670, column: 5, scope: !3646)
!3649 = !DILocation(line: 675, column: 13, scope: !3650)
!3650 = distinct !DILexicalBlock(scope: !3647, file: !286, line: 670, column: 12)
!3651 = !DILocation(line: 675, column: 27, scope: !3650)
!3652 = !DILocation(line: 675, column: 10, scope: !3650)
!3653 = !DILocation(line: 678, column: 10, scope: !3487)
!3654 = !DILocation(line: 680, column: 8, scope: !3483)
!3655 = !DILocation(line: 683, column: 14, scope: !3484)
!3656 = !DILocation(line: 684, column: 12, scope: !3490)
!3657 = !DILocation(line: 0, scope: !3490)
!3658 = !DILocation(line: 686, column: 8, scope: !3490)
!3659 = !DILocation(line: 687, column: 5, scope: !3660)
!3660 = distinct !DILexicalBlock(scope: !3661, file: !286, line: 686, column: 22)
!3661 = distinct !DILexicalBlock(scope: !3490, file: !286, line: 686, column: 8)
!3662 = !DILocation(line: 687, column: 17, scope: !3660)
!3663 = !DILocation(line: 688, column: 4, scope: !3660)
!3664 = !DILocation(line: 698, column: 18, scope: !3496)
!3665 = !DILocation(line: 0, scope: !3496)
!3666 = !DILocation(line: 700, column: 8, scope: !3496)
!3667 = !DILocation(line: 704, column: 6, scope: !3668)
!3668 = distinct !DILexicalBlock(scope: !3669, file: !286, line: 703, column: 12)
!3669 = distinct !DILexicalBlock(scope: !3670, file: !286, line: 701, column: 9)
!3670 = distinct !DILexicalBlock(scope: !3671, file: !286, line: 700, column: 22)
!3671 = distinct !DILexicalBlock(scope: !3496, file: !286, line: 700, column: 8)
!3672 = !DILocation(line: 704, column: 24, scope: !3668)
!3673 = !DILocation(line: 706, column: 4, scope: !3670)
!3674 = !DILocation(line: 709, column: 4, scope: !3675)
!3675 = distinct !DILexicalBlock(scope: !3676, file: !286, line: 709, column: 4)
!3676 = distinct !DILexicalBlock(scope: !3677, file: !286, line: 709, column: 4)
!3677 = distinct !DILexicalBlock(scope: !3678, file: !286, line: 709, column: 4)
!3678 = distinct !DILexicalBlock(scope: !3497, file: !286, line: 708, column: 10)
!3679 = !DILocation(line: 0, scope: !3491)
!3680 = !DILocation(line: 0, scope: !3477)
!3681 = !DILocation(line: 720, column: 6, scope: !3682)
!3682 = distinct !DILexicalBlock(scope: !3427, file: !286, line: 720, column: 6)
!3683 = !DILocation(line: 720, column: 17, scope: !3682)
!3684 = !DILocation(line: 720, column: 31, scope: !3682)
!3685 = !DILocation(line: 720, column: 6, scope: !3427)
!3686 = !DILocation(line: 721, column: 3, scope: !3687)
!3687 = distinct !DILexicalBlock(scope: !3688, file: !286, line: 721, column: 3)
!3688 = distinct !DILexicalBlock(scope: !3689, file: !286, line: 721, column: 3)
!3689 = distinct !DILexicalBlock(scope: !3690, file: !286, line: 721, column: 3)
!3690 = distinct !DILexicalBlock(scope: !3682, file: !286, line: 720, column: 38)
!3691 = !DILocation(line: 729, column: 6, scope: !3427)
!3692 = !DILocation(line: 730, column: 21, scope: !3693)
!3693 = distinct !DILexicalBlock(scope: !3694, file: !286, line: 729, column: 20)
!3694 = distinct !DILexicalBlock(scope: !3427, file: !286, line: 729, column: 6)
!3695 = !DILocation(line: 730, column: 27, scope: !3693)
!3696 = !DILocation(line: 730, column: 3, scope: !3693)
!3697 = !DILocation(line: 737, column: 22, scope: !3427)
!3698 = !DILocation(line: 737, column: 20, scope: !3427)
!3699 = !DILocation(line: 0, scope: !3700)
!3700 = distinct !DILexicalBlock(scope: !3427, file: !286, line: 739, column: 6)
!3701 = !DILocation(line: 745, column: 17, scope: !3702)
!3702 = distinct !DILexicalBlock(scope: !3700, file: !286, line: 743, column: 9)
!3703 = !DILocation(line: 745, column: 25, scope: !3702)
!3704 = !DILocation(line: 746, column: 17, scope: !3702)
!3705 = !DILocation(line: 746, column: 28, scope: !3702)
!3706 = !DILocation(line: 749, column: 29, scope: !3427)
!3707 = !DILocation(line: 749, column: 16, scope: !3427)
!3708 = !DILocation(line: 749, column: 27, scope: !3427)
!3709 = !DILocation(line: 756, column: 6, scope: !3503)
!3710 = !DILocation(line: 756, column: 6, scope: !3427)
!3711 = !DILocation(line: 757, column: 3, scope: !3501)
!3712 = !DILocation(line: 758, column: 10, scope: !3713)
!3713 = distinct !DILexicalBlock(scope: !3499, file: !286, line: 758, column: 8)
!3714 = !DILocation(line: 758, column: 25, scope: !3713)
!3715 = !DILocation(line: 758, column: 8, scope: !3499)
!3716 = !DILocation(line: 0, scope: !3499)
!3717 = !DILocation(line: 765, column: 8, scope: !3718)
!3718 = distinct !DILexicalBlock(scope: !3499, file: !286, line: 765, column: 8)
!3719 = !DILocation(line: 765, column: 19, scope: !3718)
!3720 = !DILocation(line: 765, column: 23, scope: !3718)
!3721 = !DILocation(line: 765, column: 8, scope: !3499)
!3722 = !DILocation(line: 762, column: 33, scope: !3499)
!3723 = !DILocation(line: 769, column: 8, scope: !3499)
!3724 = !DILocation(line: 769, column: 11, scope: !3499)
!3725 = !DILocation(line: 757, column: 27, scope: !3500)
!3726 = !DILocation(line: 757, column: 17, scope: !3500)
!3727 = distinct !{!3727, !3711, !3728}
!3728 = !DILocation(line: 770, column: 3, scope: !3501)
!3729 = !DILocation(line: 774, column: 16, scope: !3730)
!3730 = distinct !DILexicalBlock(scope: !3731, file: !286, line: 774, column: 2)
!3731 = distinct !DILexicalBlock(scope: !3427, file: !286, line: 774, column: 2)
!3732 = !DILocation(line: 774, column: 2, scope: !3731)
!3733 = !DILocation(line: 776, column: 16, scope: !3734)
!3734 = distinct !DILexicalBlock(scope: !3735, file: !286, line: 776, column: 7)
!3735 = distinct !DILexicalBlock(scope: !3730, file: !286, line: 774, column: 30)
!3736 = !DILocation(line: 776, column: 19, scope: !3734)
!3737 = !DILocation(line: 776, column: 34, scope: !3734)
!3738 = !DILocation(line: 776, column: 7, scope: !3735)
!3739 = !DILocation(line: 780, column: 7, scope: !3735)
!3740 = !DILocation(line: 782, column: 13, scope: !3741)
!3741 = distinct !DILexicalBlock(scope: !3742, file: !286, line: 780, column: 19)
!3742 = distinct !DILexicalBlock(scope: !3735, file: !286, line: 780, column: 7)
!3743 = !DILocation(line: 782, column: 8, scope: !3741)
!3744 = !DILocation(line: 782, column: 11, scope: !3741)
!3745 = !DILocation(line: 783, column: 3, scope: !3741)
!3746 = !DILocation(line: 785, column: 26, scope: !3747)
!3747 = distinct !DILexicalBlock(scope: !3742, file: !286, line: 783, column: 10)
!3748 = !DILocation(line: 785, column: 41, scope: !3747)
!3749 = !DILocation(line: 785, column: 24, scope: !3747)
!3750 = !DILocation(line: 785, column: 8, scope: !3747)
!3751 = !DILocation(line: 787, column: 52, scope: !3747)
!3752 = !DILocation(line: 789, column: 11, scope: !3747)
!3753 = !DILocation(line: 789, column: 21, scope: !3747)
!3754 = !DILocation(line: 0, scope: !3742)
!3755 = !DILocation(line: 793, column: 7, scope: !3756)
!3756 = distinct !DILexicalBlock(scope: !3735, file: !286, line: 793, column: 7)
!3757 = !DILocation(line: 793, column: 18, scope: !3756)
!3758 = !DILocation(line: 793, column: 22, scope: !3756)
!3759 = !DILocation(line: 793, column: 29, scope: !3756)
!3760 = !DILocation(line: 793, column: 7, scope: !3735)
!3761 = !DILocation(line: 797, column: 12, scope: !3735)
!3762 = !DILocation(line: 797, column: 7, scope: !3735)
!3763 = !DILocation(line: 797, column: 10, scope: !3735)
!3764 = !DILocation(line: 799, column: 3, scope: !3735)
!3765 = !DILocation(line: 800, column: 7, scope: !3735)
!3766 = !DILocation(line: 801, column: 2, scope: !3735)
!3767 = !DILocation(line: 338, column: 4, scope: !3427)
!3768 = !DILocation(line: 774, column: 26, scope: !3730)
!3769 = distinct !{!3769, !3732, !3770}
!3770 = !DILocation(line: 801, column: 2, scope: !3731)
!3771 = !DILocation(line: 808, column: 9, scope: !3427)
!3772 = !DILocation(line: 808, column: 2, scope: !3427)
!3773 = !DILocation(line: 813, column: 1, scope: !3427)
!3774 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !286, file: !286, line: 33, type: !3775, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !3777)
!3775 = !DISubroutineType(types: !3776)
!3776 = !{!345, !278}
!3777 = !{!3778}
!3778 = !DILocalVariable(name: "addr", arg: 1, scope: !3774, file: !286, line: 33, type: !278)
!3779 = !DILocation(line: 0, scope: !3774)
!3780 = !DILocation(line: 41, column: 9, scope: !3774)
!3781 = !DILocation(line: 41, column: 2, scope: !3774)
!3782 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !3783, file: !3783, line: 24, type: !3784, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !3786)
!3783 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3784 = !DISubroutineType(types: !3785)
!3785 = !{!345, !13}
!3786 = !{!3787}
!3787 = !DILocalVariable(name: "addr", arg: 1, scope: !3782, file: !3783, line: 24, type: !13)
!3788 = !DILocation(line: 0, scope: !3782)
!3789 = !DILocation(line: 49, column: 30, scope: !3782)
!3790 = !DILocation(line: 49, column: 57, scope: !3782)
!3791 = !DILocation(line: 49, column: 2, scope: !3782)
!3792 = distinct !DISubprogram(name: "cbprintf_package", scope: !286, file: !286, line: 815, type: !3793, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !3795)
!3793 = !DISubroutineType(types: !3794)
!3794 = !{!119, !113, !239, !118, !278, null}
!3795 = !{!3796, !3797, !3798, !3799, !3800, !3801}
!3796 = !DILocalVariable(name: "packaged", arg: 1, scope: !3792, file: !286, line: 815, type: !113)
!3797 = !DILocalVariable(name: "len", arg: 2, scope: !3792, file: !286, line: 815, type: !239)
!3798 = !DILocalVariable(name: "flags", arg: 3, scope: !3792, file: !286, line: 815, type: !118)
!3799 = !DILocalVariable(name: "format", arg: 4, scope: !3792, file: !286, line: 816, type: !278)
!3800 = !DILocalVariable(name: "ap", scope: !3792, file: !286, line: 818, type: !3430)
!3801 = !DILocalVariable(name: "ret", scope: !3792, file: !286, line: 819, type: !119)
!3802 = !DILocation(line: 0, scope: !3792)
!3803 = !DILocation(line: 818, column: 2, scope: !3792)
!3804 = !DILocation(line: 818, column: 10, scope: !3792)
!3805 = !DILocation(line: 821, column: 2, scope: !3792)
!3806 = !DILocation(line: 822, column: 8, scope: !3792)
!3807 = !DILocation(line: 823, column: 2, scope: !3792)
!3808 = !DILocation(line: 825, column: 1, scope: !3792)
!3809 = !DILocation(line: 824, column: 2, scope: !3792)
!3810 = distinct !DISubprogram(name: "cbpprintf_external", scope: !286, file: !286, line: 827, type: !3811, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !3821)
!3811 = !DISubroutineType(types: !3812)
!3812 = !{!119, !3813, !3817, !113, !113}
!3813 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3463, line: 297, baseType: !3814)
!3814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3815, size: 32)
!3815 = !DISubroutineType(types: !3816)
!3816 = !{!119, null}
!3817 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !3463, line: 328, baseType: !3818)
!3818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3819, size: 32)
!3819 = !DISubroutineType(types: !3820)
!3820 = !{!119, !3813, !113, !278, !3430}
!3821 = !{!3822, !3823, !3824, !3825, !3826, !3827, !3833, !3834, !3835, !3836, !3837, !3838, !3839, !3840}
!3822 = !DILocalVariable(name: "out", arg: 1, scope: !3810, file: !286, line: 827, type: !3813)
!3823 = !DILocalVariable(name: "formatter", arg: 2, scope: !3810, file: !286, line: 828, type: !3817)
!3824 = !DILocalVariable(name: "ctx", arg: 3, scope: !3810, file: !286, line: 829, type: !113)
!3825 = !DILocalVariable(name: "packaged", arg: 4, scope: !3810, file: !286, line: 829, type: !113)
!3826 = !DILocalVariable(name: "buf", scope: !3810, file: !286, line: 831, type: !284)
!3827 = !DILocalVariable(name: "hdr", scope: !3810, file: !286, line: 832, type: !3828)
!3828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3829, size: 32)
!3829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !3463, line: 96, size: 64, elements: !3830)
!3830 = !{!3831, !3832}
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !3829, file: !3463, line: 98, baseType: !3462, size: 32)
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !3829, file: !3463, line: 101, baseType: !106, size: 32, offset: 32)
!3833 = !DILocalVariable(name: "s", scope: !3810, file: !286, line: 833, type: !106)
!3834 = !DILocalVariable(name: "ps", scope: !3810, file: !286, line: 833, type: !283)
!3835 = !DILocalVariable(name: "i", scope: !3810, file: !286, line: 834, type: !32)
!3836 = !DILocalVariable(name: "args_size", scope: !3810, file: !286, line: 834, type: !32)
!3837 = !DILocalVariable(name: "s_nbr", scope: !3810, file: !286, line: 834, type: !32)
!3838 = !DILocalVariable(name: "ros_nbr", scope: !3810, file: !286, line: 834, type: !32)
!3839 = !DILocalVariable(name: "rws_nbr", scope: !3810, file: !286, line: 834, type: !32)
!3840 = !DILocalVariable(name: "s_idx", scope: !3810, file: !286, line: 834, type: !32)
!3841 = !DILocation(line: 0, scope: !3810)
!3842 = !DILocation(line: 836, column: 10, scope: !3843)
!3843 = distinct !DILexicalBlock(scope: !3810, file: !286, line: 836, column: 6)
!3844 = !DILocation(line: 836, column: 6, scope: !3810)
!3845 = !DILocation(line: 842, column: 28, scope: !3810)
!3846 = !DILocation(line: 842, column: 14, scope: !3810)
!3847 = !DILocation(line: 852, column: 16, scope: !3848)
!3848 = distinct !DILexicalBlock(scope: !3849, file: !286, line: 852, column: 2)
!3849 = distinct !DILexicalBlock(scope: !3810, file: !286, line: 852, column: 2)
!3850 = !DILocation(line: 852, column: 2, scope: !3849)
!3851 = !DILocation(line: 841, column: 28, scope: !3810)
!3852 = !DILocation(line: 841, column: 14, scope: !3810)
!3853 = !DILocation(line: 841, column: 32, scope: !3810)
!3854 = !DILocation(line: 847, column: 19, scope: !3810)
!3855 = !DILocation(line: 843, column: 28, scope: !3810)
!3856 = !DILocation(line: 843, column: 14, scope: !3810)
!3857 = !DILocation(line: 847, column: 31, scope: !3810)
!3858 = !DILocation(line: 844, column: 28, scope: !3810)
!3859 = !DILocation(line: 844, column: 14, scope: !3810)
!3860 = !DILocation(line: 847, column: 45, scope: !3810)
!3861 = !DILocation(line: 847, column: 41, scope: !3810)
!3862 = !DILocation(line: 854, column: 24, scope: !3863)
!3863 = distinct !DILexicalBlock(scope: !3848, file: !286, line: 852, column: 30)
!3864 = !DILocation(line: 854, column: 11, scope: !3863)
!3865 = !DILocation(line: 855, column: 30, scope: !3863)
!3866 = !DILocation(line: 855, column: 22, scope: !3863)
!3867 = !DILocation(line: 855, column: 8, scope: !3863)
!3868 = !DILocation(line: 857, column: 7, scope: !3863)
!3869 = !DILocation(line: 859, column: 8, scope: !3863)
!3870 = !DILocation(line: 859, column: 18, scope: !3863)
!3871 = !DILocation(line: 859, column: 5, scope: !3863)
!3872 = !DILocation(line: 852, column: 26, scope: !3848)
!3873 = distinct !{!3873, !3850, !3874}
!3874 = !DILocation(line: 860, column: 2, scope: !3849)
!3875 = !DILocation(line: 863, column: 6, scope: !3810)
!3876 = !DILocation(line: 866, column: 56, scope: !3810)
!3877 = !DILocation(line: 866, column: 9, scope: !3810)
!3878 = !DILocation(line: 866, column: 2, scope: !3810)
!3879 = !DILocation(line: 867, column: 1, scope: !3810)
!3880 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !286, file: !286, line: 179, type: !3881, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !3883)
!3881 = !DISubroutineType(types: !3882)
!3882 = !{!119, !3813, !3817, !113, !278, !113}
!3883 = !{!3884, !3885, !3886, !3887, !3888, !3889}
!3884 = !DILocalVariable(name: "out", arg: 1, scope: !3880, file: !286, line: 179, type: !3813)
!3885 = !DILocalVariable(name: "formatter", arg: 2, scope: !3880, file: !286, line: 180, type: !3817)
!3886 = !DILocalVariable(name: "ctx", arg: 3, scope: !3880, file: !286, line: 181, type: !113)
!3887 = !DILocalVariable(name: "fmt", arg: 4, scope: !3880, file: !286, line: 182, type: !278)
!3888 = !DILocalVariable(name: "buf", arg: 5, scope: !3880, file: !286, line: 182, type: !113)
!3889 = !DILocalVariable(name: "u", scope: !3880, file: !286, line: 187, type: !3890)
!3890 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3880, file: !286, line: 184, size: 32, elements: !3891)
!3891 = !{!3892, !3893}
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !3890, file: !286, line: 185, baseType: !3430, size: 32)
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3890, file: !286, line: 186, baseType: !113, size: 32)
!3894 = !DILocation(line: 0, scope: !3880)
!3895 = !DILocation(line: 191, column: 9, scope: !3880)
!3896 = !DILocation(line: 191, column: 2, scope: !3880)
!3897 = distinct !DISubprogram(name: "is_ptr", scope: !286, file: !286, line: 881, type: !3898, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !3900)
!3898 = !DISubroutineType(types: !3899)
!3899 = !{!345, !278, !119}
!3900 = !{!3901, !3902, !3903, !3904, !3905}
!3901 = !DILocalVariable(name: "fmt", arg: 1, scope: !3897, file: !286, line: 881, type: !278)
!3902 = !DILocalVariable(name: "n", arg: 2, scope: !3897, file: !286, line: 881, type: !119)
!3903 = !DILocalVariable(name: "c", scope: !3897, file: !286, line: 883, type: !107)
!3904 = !DILocalVariable(name: "mod", scope: !3897, file: !286, line: 884, type: !345)
!3905 = !DILocalVariable(name: "cnt", scope: !3897, file: !286, line: 885, type: !119)
!3906 = !DILocation(line: 0, scope: !3897)
!3907 = !DILocation(line: 887, column: 14, scope: !3897)
!3908 = !DILocation(line: 887, column: 22, scope: !3897)
!3909 = !DILocation(line: 887, column: 2, scope: !3897)
!3910 = !DILocation(line: 887, column: 18, scope: !3897)
!3911 = !DILocation(line: 888, column: 7, scope: !3912)
!3912 = distinct !DILexicalBlock(scope: !3897, file: !286, line: 887, column: 31)
!3913 = !DILocation(line: 889, column: 12, scope: !3914)
!3914 = distinct !DILexicalBlock(scope: !3915, file: !286, line: 889, column: 8)
!3915 = distinct !DILexicalBlock(scope: !3916, file: !286, line: 888, column: 12)
!3916 = distinct !DILexicalBlock(scope: !3912, file: !286, line: 888, column: 7)
!3917 = !DILocation(line: 889, column: 8, scope: !3915)
!3918 = !DILocation(line: 890, column: 11, scope: !3919)
!3919 = distinct !DILexicalBlock(scope: !3920, file: !286, line: 890, column: 9)
!3920 = distinct !DILexicalBlock(scope: !3914, file: !286, line: 889, column: 18)
!3921 = !DILocation(line: 890, column: 9, scope: !3920)
!3922 = !DILocation(line: 892, column: 16, scope: !3923)
!3923 = distinct !DILexicalBlock(scope: !3919, file: !286, line: 892, column: 16)
!3924 = !DILocation(line: 892, column: 16, scope: !3919)
!3925 = !DILocation(line: 895, column: 15, scope: !3926)
!3926 = distinct !DILexicalBlock(scope: !3914, file: !286, line: 895, column: 15)
!3927 = !DILocation(line: 895, column: 15, scope: !3914)
!3928 = !DILocation(line: 900, column: 9, scope: !3929)
!3929 = distinct !DILexicalBlock(scope: !3912, file: !286, line: 900, column: 7)
!3930 = !DILocation(line: 900, column: 7, scope: !3912)
!3931 = distinct !{!3931, !3909, !3932}
!3932 = !DILocation(line: 903, column: 2, scope: !3897)
!3933 = !DILocation(line: 906, column: 1, scope: !3897)
!3934 = distinct !DISubprogram(name: "is_fmt_spec", scope: !286, file: !286, line: 873, type: !3935, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !3937)
!3935 = !DISubroutineType(types: !3936)
!3936 = !{!345, !107}
!3937 = !{!3938}
!3938 = !DILocalVariable(name: "c", arg: 1, scope: !3934, file: !286, line: 873, type: !107)
!3939 = !DILocation(line: 0, scope: !3934)
!3940 = !DILocation(line: 875, column: 19, scope: !3934)
!3941 = !DILocation(line: 875, column: 2, scope: !3934)
!3942 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !286, file: !286, line: 908, type: !3943, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !3949)
!3943 = !DISubroutineType(types: !3944)
!3944 = !{!119, !113, !239, !3945, !113, !118, !2784, !239}
!3945 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !3463, line: 308, baseType: !3946)
!3946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3947, size: 32)
!3947 = !DISubroutineType(types: !3948)
!3948 = !{!119, !13, !239, !113}
!3949 = !{!3950, !3951, !3952, !3953, !3954, !3955, !3956, !3957, !3958, !3959, !3960, !3961, !3962, !3963, !3964, !3965, !3967, !3968, !3969, !3970, !3971, !3977, !3980, !3981, !3982, !3984, !3987, !3988, !3989, !3990, !3991, !3992, !3993, !3994, !3995, !3996, !3997, !3998, !4000, !4003, !4004, !4005, !4006, !4007, !4008, !4010, !4013, !4014, !4015}
!3950 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !3942, file: !286, line: 908, type: !113)
!3951 = !DILocalVariable(name: "in_len", arg: 2, scope: !3942, file: !286, line: 909, type: !239)
!3952 = !DILocalVariable(name: "cb", arg: 3, scope: !3942, file: !286, line: 910, type: !3945)
!3953 = !DILocalVariable(name: "ctx", arg: 4, scope: !3942, file: !286, line: 911, type: !113)
!3954 = !DILocalVariable(name: "flags", arg: 5, scope: !3942, file: !286, line: 912, type: !118)
!3955 = !DILocalVariable(name: "strl", arg: 6, scope: !3942, file: !286, line: 913, type: !2784)
!3956 = !DILocalVariable(name: "strl_len", arg: 7, scope: !3942, file: !286, line: 914, type: !239)
!3957 = !DILocalVariable(name: "buf", scope: !3942, file: !286, line: 918, type: !284)
!3958 = !DILocalVariable(name: "buf32", scope: !3942, file: !286, line: 919, type: !908)
!3959 = !DILocalVariable(name: "args_size", scope: !3942, file: !286, line: 920, type: !32)
!3960 = !DILocalVariable(name: "ros_nbr", scope: !3942, file: !286, line: 920, type: !32)
!3961 = !DILocalVariable(name: "rws_nbr", scope: !3942, file: !286, line: 920, type: !32)
!3962 = !DILocalVariable(name: "fmt_present", scope: !3942, file: !286, line: 921, type: !345)
!3963 = !DILocalVariable(name: "rw_cpy", scope: !3942, file: !286, line: 922, type: !345)
!3964 = !DILocalVariable(name: "ro_cpy", scope: !3942, file: !286, line: 923, type: !345)
!3965 = !DILocalVariable(name: "in_desc", scope: !3942, file: !286, line: 924, type: !3966)
!3966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3466, size: 32)
!3967 = !DILocalVariable(name: "out_len", scope: !3942, file: !286, line: 960, type: !119)
!3968 = !DILocalVariable(name: "fmt", scope: !3942, file: !286, line: 965, type: !278)
!3969 = !DILocalVariable(name: "str_pos", scope: !3942, file: !286, line: 966, type: !284)
!3970 = !DILocalVariable(name: "strl_cnt", scope: !3942, file: !286, line: 967, type: !239)
!3971 = !DILocalVariable(name: "i", scope: !3972, file: !286, line: 973, type: !119)
!3972 = distinct !DILexicalBlock(scope: !3973, file: !286, line: 973, column: 4)
!3973 = distinct !DILexicalBlock(scope: !3974, file: !286, line: 972, column: 15)
!3974 = distinct !DILexicalBlock(scope: !3975, file: !286, line: 972, column: 7)
!3975 = distinct !DILexicalBlock(scope: !3976, file: !286, line: 970, column: 18)
!3976 = distinct !DILexicalBlock(scope: !3942, file: !286, line: 970, column: 6)
!3977 = !DILocalVariable(name: "str", scope: !3978, file: !286, line: 974, type: !278)
!3978 = distinct !DILexicalBlock(scope: !3979, file: !286, line: 973, column: 38)
!3979 = distinct !DILexicalBlock(scope: !3972, file: !286, line: 973, column: 4)
!3980 = !DILocalVariable(name: "len", scope: !3978, file: !286, line: 975, type: !119)
!3981 = !DILocalVariable(name: "drop_ro_str_pos", scope: !3975, file: !286, line: 990, type: !345)
!3982 = !DILocalVariable(name: "i", scope: !3983, file: !286, line: 995, type: !119)
!3983 = distinct !DILexicalBlock(scope: !3975, file: !286, line: 995, column: 3)
!3984 = !DILocalVariable(name: "arg_idx", scope: !3985, file: !286, line: 996, type: !185)
!3985 = distinct !DILexicalBlock(scope: !3986, file: !286, line: 995, column: 37)
!3986 = distinct !DILexicalBlock(scope: !3983, file: !286, line: 995, column: 3)
!3987 = !DILocalVariable(name: "arg_pos", scope: !3985, file: !286, line: 997, type: !185)
!3988 = !DILocalVariable(name: "str", scope: !3985, file: !286, line: 998, type: !278)
!3989 = !DILocalVariable(name: "is_ro", scope: !3985, file: !286, line: 999, type: !345)
!3990 = !DILocalVariable(name: "len", scope: !3985, file: !286, line: 1000, type: !119)
!3991 = !DILocalVariable(name: "out_desc", scope: !3942, file: !286, line: 1038, type: !3466)
!3992 = !DILocalVariable(name: "cpy_str_pos", scope: !3942, file: !286, line: 1040, type: !3448)
!3993 = !DILocalVariable(name: "keep_str_pos", scope: !3942, file: !286, line: 1042, type: !3448)
!3994 = !DILocalVariable(name: "scpy_cnt", scope: !3942, file: !286, line: 1043, type: !185)
!3995 = !DILocalVariable(name: "keep_cnt", scope: !3942, file: !286, line: 1044, type: !185)
!3996 = !DILocalVariable(name: "dst", scope: !3942, file: !286, line: 1045, type: !284)
!3997 = !DILocalVariable(name: "rv", scope: !3942, file: !286, line: 1046, type: !119)
!3998 = !DILocalVariable(name: "i", scope: !3999, file: !286, line: 1074, type: !119)
!3999 = distinct !DILexicalBlock(scope: !3942, file: !286, line: 1074, column: 2)
!4000 = !DILocalVariable(name: "arg_idx", scope: !4001, file: !286, line: 1075, type: !185)
!4001 = distinct !DILexicalBlock(scope: !4002, file: !286, line: 1074, column: 36)
!4002 = distinct !DILexicalBlock(scope: !3999, file: !286, line: 1074, column: 2)
!4003 = !DILocalVariable(name: "arg_pos", scope: !4001, file: !286, line: 1076, type: !185)
!4004 = !DILocalVariable(name: "str", scope: !4001, file: !286, line: 1077, type: !278)
!4005 = !DILocalVariable(name: "is_ro", scope: !4001, file: !286, line: 1078, type: !345)
!4006 = !DILocalVariable(name: "in_desc_backup", scope: !3942, file: !286, line: 1114, type: !3466)
!4007 = !DILocalVariable(name: "strs_len", scope: !3942, file: !286, line: 1134, type: !239)
!4008 = !DILocalVariable(name: "i", scope: !4009, file: !286, line: 1143, type: !119)
!4009 = distinct !DILexicalBlock(scope: !3942, file: !286, line: 1143, column: 2)
!4010 = !DILocalVariable(name: "loc", scope: !4011, file: !286, line: 1144, type: !185)
!4011 = distinct !DILexicalBlock(scope: !4012, file: !286, line: 1143, column: 37)
!4012 = distinct !DILexicalBlock(scope: !4009, file: !286, line: 1143, column: 2)
!4013 = !DILocalVariable(name: "str", scope: !4011, file: !286, line: 1145, type: !278)
!4014 = !DILocalVariable(name: "str_len", scope: !4011, file: !286, line: 1146, type: !199)
!4015 = !DILabel(scope: !4016, name: "calculate_string_length", file: !286, line: 1021)
!4016 = distinct !DILexicalBlock(scope: !4017, file: !286, line: 1020, column: 56)
!4017 = distinct !DILexicalBlock(scope: !4018, file: !286, line: 1020, column: 15)
!4018 = distinct !DILexicalBlock(scope: !3985, file: !286, line: 1014, column: 8)
!4019 = !DILocation(line: 0, scope: !3942)
!4020 = !DILocation(line: 916, column: 2, scope: !4021)
!4021 = distinct !DILexicalBlock(scope: !4022, file: !286, line: 916, column: 2)
!4022 = distinct !DILexicalBlock(scope: !3942, file: !286, line: 916, column: 2)
!4023 = !DILocation(line: 916, column: 2, scope: !4022)
!4024 = !DILocation(line: 916, column: 2, scope: !4025)
!4025 = distinct !DILexicalBlock(scope: !4021, file: !286, line: 916, column: 2)
!4026 = !DILocation(line: 919, column: 20, scope: !3942)
!4027 = !DILocation(line: 921, column: 27, scope: !3942)
!4028 = !DILocation(line: 921, column: 21, scope: !3942)
!4029 = !DILocation(line: 926, column: 18, scope: !3942)
!4030 = !DILocation(line: 926, column: 11, scope: !3942)
!4031 = !DILocation(line: 926, column: 34, scope: !3942)
!4032 = !DILocation(line: 931, column: 21, scope: !3942)
!4033 = !DILocation(line: 931, column: 12, scope: !3942)
!4034 = !DILocation(line: 932, column: 11, scope: !3942)
!4035 = !DILocation(line: 932, column: 19, scope: !3942)
!4036 = !DILocation(line: 938, column: 21, scope: !3942)
!4037 = !DILocation(line: 938, column: 12, scope: !3942)
!4038 = !DILocation(line: 939, column: 19, scope: !3942)
!4039 = !DILocation(line: 939, column: 23, scope: !3942)
!4040 = !DILocation(line: 946, column: 14, scope: !4041)
!4041 = distinct !DILexicalBlock(scope: !3942, file: !286, line: 946, column: 6)
!4042 = !DILocation(line: 947, column: 7, scope: !4043)
!4043 = distinct !DILexicalBlock(scope: !4044, file: !286, line: 947, column: 7)
!4044 = distinct !DILexicalBlock(scope: !4041, file: !286, line: 946, column: 26)
!4045 = !DILocation(line: 947, column: 7, scope: !4044)
!4046 = !DILocation(line: 948, column: 4, scope: !4047)
!4047 = distinct !DILexicalBlock(scope: !4043, file: !286, line: 947, column: 11)
!4048 = !DILocation(line: 949, column: 3, scope: !4047)
!4049 = !DILocation(line: 958, column: 23, scope: !3942)
!4050 = !DILocation(line: 958, column: 14, scope: !3942)
!4051 = !DILocation(line: 958, column: 27, scope: !3942)
!4052 = !DILocation(line: 965, column: 41, scope: !3942)
!4053 = !DILocation(line: 965, column: 20, scope: !3942)
!4054 = !DILocation(line: 966, column: 22, scope: !3942)
!4055 = !DILocation(line: 970, column: 9, scope: !3976)
!4056 = !DILocation(line: 970, column: 6, scope: !3942)
!4057 = !DILocation(line: 972, column: 7, scope: !3975)
!4058 = !DILocation(line: 0, scope: !3972)
!4059 = !DILocation(line: 973, column: 4, scope: !3972)
!4060 = !DILocation(line: 974, column: 46, scope: !3978)
!4061 = !DILocation(line: 974, column: 40, scope: !3978)
!4062 = !DILocation(line: 974, column: 23, scope: !3978)
!4063 = !DILocation(line: 0, scope: !3978)
!4064 = !DILocation(line: 975, column: 15, scope: !3978)
!4065 = !DILocation(line: 978, column: 14, scope: !4066)
!4066 = distinct !DILexicalBlock(scope: !3978, file: !286, line: 978, column: 9)
!4067 = !DILocation(line: 979, column: 25, scope: !4068)
!4068 = distinct !DILexicalBlock(scope: !4066, file: !286, line: 978, column: 38)
!4069 = !DILocation(line: 979, column: 19, scope: !4068)
!4070 = !DILocation(line: 979, column: 6, scope: !4068)
!4071 = !DILocation(line: 979, column: 23, scope: !4068)
!4072 = !DILocation(line: 980, column: 5, scope: !4068)
!4073 = !DILocation(line: 981, column: 13, scope: !3978)
!4074 = !DILocation(line: 982, column: 12, scope: !3978)
!4075 = !DILocation(line: 973, column: 34, scope: !3979)
!4076 = !DILocation(line: 973, column: 22, scope: !3979)
!4077 = distinct !{!4077, !4059, !4078}
!4078 = !DILocation(line: 983, column: 4, scope: !3972)
!4079 = !DILocation(line: 985, column: 16, scope: !4080)
!4080 = distinct !DILexicalBlock(scope: !4081, file: !286, line: 985, column: 8)
!4081 = distinct !DILexicalBlock(scope: !3974, file: !286, line: 984, column: 10)
!4082 = !DILocation(line: 967, column: 9, scope: !3942)
!4083 = !DILocation(line: 971, column: 11, scope: !3975)
!4084 = !DILocation(line: 0, scope: !3975)
!4085 = !DILocation(line: 0, scope: !3983)
!4086 = !DILocation(line: 995, column: 21, scope: !3986)
!4087 = !DILocation(line: 995, column: 3, scope: !3983)
!4088 = !DILocation(line: 990, column: 34, scope: !3975)
!4089 = !DILocation(line: 990, column: 26, scope: !3975)
!4090 = !DILocation(line: 996, column: 30, scope: !3985)
!4091 = !DILocation(line: 0, scope: !3985)
!4092 = !DILocation(line: 997, column: 30, scope: !3985)
!4093 = !DILocation(line: 997, column: 22, scope: !3985)
!4094 = !DILocation(line: 998, column: 39, scope: !3985)
!4095 = !DILocation(line: 998, column: 22, scope: !3985)
!4096 = !DILocation(line: 999, column: 17, scope: !3985)
!4097 = !DILocation(line: 1002, column: 20, scope: !4098)
!4098 = distinct !DILexicalBlock(scope: !3985, file: !286, line: 1002, column: 8)
!4099 = !DILocation(line: 996, column: 22, scope: !3985)
!4100 = !DILocation(line: 1002, column: 35, scope: !4098)
!4101 = !DILocation(line: 1002, column: 23, scope: !4098)
!4102 = !DILocation(line: 1002, column: 8, scope: !3985)
!4103 = !DILocation(line: 1003, column: 5, scope: !4104)
!4104 = distinct !DILexicalBlock(scope: !4105, file: !286, line: 1003, column: 5)
!4105 = distinct !DILexicalBlock(scope: !4106, file: !286, line: 1003, column: 5)
!4106 = distinct !DILexicalBlock(scope: !4107, file: !286, line: 1003, column: 5)
!4107 = distinct !DILexicalBlock(scope: !4108, file: !286, line: 1003, column: 5)
!4108 = distinct !DILexicalBlock(scope: !4098, file: !286, line: 1002, column: 45)
!4109 = !DILocation(line: 1010, column: 13, scope: !4108)
!4110 = !DILocation(line: 1011, column: 5, scope: !4108)
!4111 = !DILocation(line: 1014, column: 8, scope: !3985)
!4112 = !DILocation(line: 1015, column: 9, scope: !4113)
!4113 = distinct !DILexicalBlock(scope: !4018, file: !286, line: 1014, column: 15)
!4114 = !DILocation(line: 1018, column: 14, scope: !4115)
!4115 = distinct !DILexicalBlock(scope: !4116, file: !286, line: 1017, column: 12)
!4116 = distinct !DILexicalBlock(scope: !4113, file: !286, line: 1015, column: 9)
!4117 = !DILocation(line: 1020, column: 4, scope: !4113)
!4118 = !DILocation(line: 1020, column: 15, scope: !4018)
!4119 = !DILocation(line: 1021, column: 1, scope: !4016)
!4120 = !DILocation(line: 1022, column: 11, scope: !4016)
!4121 = !DILocation(line: 1025, column: 14, scope: !4122)
!4122 = distinct !DILexicalBlock(scope: !4016, file: !286, line: 1025, column: 9)
!4123 = !DILocation(line: 1026, column: 25, scope: !4124)
!4124 = distinct !DILexicalBlock(scope: !4122, file: !286, line: 1025, column: 38)
!4125 = !DILocation(line: 1026, column: 19, scope: !4124)
!4126 = !DILocation(line: 1026, column: 6, scope: !4124)
!4127 = !DILocation(line: 1026, column: 23, scope: !4124)
!4128 = !DILocation(line: 1027, column: 5, scope: !4124)
!4129 = !DILocation(line: 1031, column: 21, scope: !4016)
!4130 = !DILocation(line: 1031, column: 13, scope: !4016)
!4131 = !DILocation(line: 1032, column: 4, scope: !4016)
!4132 = !DILocation(line: 995, column: 33, scope: !3986)
!4133 = distinct !{!4133, !4087, !4134}
!4134 = !DILocation(line: 1033, column: 3, scope: !3983)
!4135 = !DILocation(line: 1040, column: 10, scope: !3942)
!4136 = !DILocation(line: 1042, column: 10, scope: !3942)
!4137 = !DILocation(line: 1052, column: 6, scope: !3942)
!4138 = !DILocation(line: 1055, column: 9, scope: !4139)
!4139 = distinct !DILexicalBlock(scope: !4140, file: !286, line: 1052, column: 14)
!4140 = distinct !DILexicalBlock(scope: !3942, file: !286, line: 1052, column: 6)
!4141 = !DILocation(line: 1056, column: 2, scope: !4139)
!4142 = !DILocation(line: 1056, column: 21, scope: !4143)
!4143 = distinct !DILexicalBlock(scope: !4140, file: !286, line: 1056, column: 13)
!4144 = !DILocation(line: 1066, column: 3, scope: !4145)
!4145 = distinct !DILexicalBlock(scope: !4146, file: !286, line: 1065, column: 11)
!4146 = distinct !DILexicalBlock(scope: !3942, file: !286, line: 1065, column: 6)
!4147 = !DILocation(line: 1067, column: 2, scope: !4145)
!4148 = !DILocation(line: 1068, column: 10, scope: !3942)
!4149 = !DILocation(line: 0, scope: !3999)
!4150 = !DILocation(line: 1074, column: 20, scope: !4002)
!4151 = !DILocation(line: 1074, column: 2, scope: !3999)
!4152 = !DILocation(line: 1110, column: 24, scope: !3942)
!4153 = !DILocation(line: 1053, column: 12, scope: !4139)
!4154 = !DILocation(line: 1054, column: 12, scope: !4139)
!4155 = !DILocation(line: 1108, column: 30, scope: !3942)
!4156 = !DILocation(line: 1108, column: 40, scope: !3942)
!4157 = !DILocation(line: 1108, column: 38, scope: !3942)
!4158 = !DILocation(line: 1109, column: 31, scope: !3942)
!4159 = !DILocation(line: 1109, column: 24, scope: !3942)
!4160 = !DILocation(line: 1110, column: 31, scope: !3942)
!4161 = !DILocation(line: 1114, column: 31, scope: !3942)
!4162 = !DILocation(line: 1114, column: 48, scope: !3942)
!4163 = !DILocation(line: 1115, column: 13, scope: !3942)
!4164 = !DILocation(line: 1118, column: 7, scope: !3942)
!4165 = !DILocation(line: 1119, column: 9, scope: !4166)
!4166 = distinct !DILexicalBlock(scope: !3942, file: !286, line: 1119, column: 6)
!4167 = !DILocation(line: 1119, column: 6, scope: !3942)
!4168 = !DILocation(line: 1075, column: 29, scope: !4001)
!4169 = !DILocation(line: 1075, column: 21, scope: !4001)
!4170 = !DILocation(line: 0, scope: !4001)
!4171 = !DILocation(line: 1076, column: 29, scope: !4001)
!4172 = !DILocation(line: 1076, column: 21, scope: !4001)
!4173 = !DILocation(line: 1077, column: 38, scope: !4001)
!4174 = !DILocation(line: 1077, column: 21, scope: !4001)
!4175 = !DILocation(line: 1078, column: 16, scope: !4001)
!4176 = !DILocation(line: 1080, column: 19, scope: !4177)
!4177 = distinct !DILexicalBlock(scope: !4001, file: !286, line: 1080, column: 7)
!4178 = !DILocation(line: 1080, column: 34, scope: !4177)
!4179 = !DILocation(line: 1080, column: 22, scope: !4177)
!4180 = !DILocation(line: 1080, column: 7, scope: !4001)
!4181 = !DILocation(line: 1084, column: 7, scope: !4001)
!4182 = !DILocation(line: 1085, column: 8, scope: !4183)
!4183 = distinct !DILexicalBlock(scope: !4184, file: !286, line: 1084, column: 14)
!4184 = distinct !DILexicalBlock(scope: !4001, file: !286, line: 1084, column: 7)
!4185 = !DILocation(line: 1086, column: 5, scope: !4186)
!4186 = distinct !DILexicalBlock(scope: !4187, file: !286, line: 1086, column: 5)
!4187 = distinct !DILexicalBlock(scope: !4188, file: !286, line: 1086, column: 5)
!4188 = distinct !DILexicalBlock(scope: !4189, file: !286, line: 1085, column: 49)
!4189 = distinct !DILexicalBlock(scope: !4183, file: !286, line: 1085, column: 8)
!4190 = !DILocation(line: 1086, column: 5, scope: !4187)
!4191 = !DILocation(line: 1086, column: 5, scope: !4192)
!4192 = distinct !DILexicalBlock(scope: !4186, file: !286, line: 1086, column: 5)
!4193 = !DILocation(line: 1087, column: 25, scope: !4188)
!4194 = !DILocation(line: 1087, column: 5, scope: !4188)
!4195 = !DILocation(line: 1088, column: 4, scope: !4188)
!4196 = !DILocation(line: 1088, column: 15, scope: !4189)
!4197 = !DILocation(line: 1089, column: 5, scope: !4198)
!4198 = distinct !DILexicalBlock(scope: !4199, file: !286, line: 1089, column: 5)
!4199 = distinct !DILexicalBlock(scope: !4200, file: !286, line: 1089, column: 5)
!4200 = distinct !DILexicalBlock(scope: !4201, file: !286, line: 1088, column: 61)
!4201 = distinct !DILexicalBlock(scope: !4189, file: !286, line: 1088, column: 15)
!4202 = !DILocation(line: 1089, column: 5, scope: !4199)
!4203 = !DILocation(line: 1089, column: 5, scope: !4204)
!4204 = distinct !DILexicalBlock(scope: !4198, file: !286, line: 1089, column: 5)
!4205 = !DILocation(line: 1090, column: 26, scope: !4200)
!4206 = !DILocation(line: 1090, column: 5, scope: !4200)
!4207 = !DILocation(line: 1091, column: 4, scope: !4200)
!4208 = !DILocation(line: 1095, column: 8, scope: !4209)
!4209 = distinct !DILexicalBlock(scope: !4184, file: !286, line: 1094, column: 10)
!4210 = !DILocation(line: 1096, column: 5, scope: !4211)
!4211 = distinct !DILexicalBlock(scope: !4212, file: !286, line: 1096, column: 5)
!4212 = distinct !DILexicalBlock(scope: !4213, file: !286, line: 1096, column: 5)
!4213 = distinct !DILexicalBlock(scope: !4214, file: !286, line: 1095, column: 49)
!4214 = distinct !DILexicalBlock(scope: !4209, file: !286, line: 1095, column: 8)
!4215 = !DILocation(line: 1096, column: 5, scope: !4212)
!4216 = !DILocation(line: 1096, column: 5, scope: !4217)
!4217 = distinct !DILexicalBlock(scope: !4211, file: !286, line: 1096, column: 5)
!4218 = !DILocation(line: 1097, column: 25, scope: !4213)
!4219 = !DILocation(line: 1097, column: 5, scope: !4213)
!4220 = !DILocation(line: 1098, column: 4, scope: !4213)
!4221 = !DILocation(line: 1099, column: 5, scope: !4222)
!4222 = distinct !DILexicalBlock(scope: !4223, file: !286, line: 1099, column: 5)
!4223 = distinct !DILexicalBlock(scope: !4224, file: !286, line: 1099, column: 5)
!4224 = distinct !DILexicalBlock(scope: !4214, file: !286, line: 1098, column: 11)
!4225 = !DILocation(line: 1099, column: 5, scope: !4223)
!4226 = !DILocation(line: 1099, column: 5, scope: !4227)
!4227 = distinct !DILexicalBlock(scope: !4222, file: !286, line: 1099, column: 5)
!4228 = !DILocation(line: 1100, column: 26, scope: !4224)
!4229 = !DILocation(line: 1100, column: 5, scope: !4224)
!4230 = !DILocation(line: 1100, column: 30, scope: !4224)
!4231 = !DILocation(line: 1101, column: 26, scope: !4224)
!4232 = !DILocation(line: 1101, column: 5, scope: !4224)
!4233 = !DILocation(line: 0, scope: !4184)
!4234 = !DILocation(line: 1074, column: 32, scope: !4002)
!4235 = distinct !{!4235, !4151, !4236}
!4236 = !DILocation(line: 1104, column: 2, scope: !3999)
!4237 = !DILocation(line: 1124, column: 13, scope: !3942)
!4238 = !DILocation(line: 1127, column: 10, scope: !3942)
!4239 = !DILocation(line: 1127, column: 7, scope: !3942)
!4240 = !DILocation(line: 1128, column: 9, scope: !4241)
!4241 = distinct !DILexicalBlock(scope: !3942, file: !286, line: 1128, column: 6)
!4242 = !DILocation(line: 1128, column: 6, scope: !3942)
!4243 = !DILocation(line: 1134, column: 27, scope: !3942)
!4244 = !DILocation(line: 1136, column: 7, scope: !3942)
!4245 = !DILocation(line: 1137, column: 9, scope: !4246)
!4246 = distinct !DILexicalBlock(scope: !3942, file: !286, line: 1137, column: 6)
!4247 = !DILocation(line: 1137, column: 6, scope: !3942)
!4248 = !DILocation(line: 1131, column: 10, scope: !3942)
!4249 = !DILocation(line: 1140, column: 10, scope: !3942)
!4250 = !DILocation(line: 0, scope: !4009)
!4251 = !DILocation(line: 1143, column: 20, scope: !4012)
!4252 = !DILocation(line: 1143, column: 2, scope: !4009)
!4253 = !DILocation(line: 1144, column: 3, scope: !4011)
!4254 = !DILocation(line: 1144, column: 17, scope: !4011)
!4255 = !DILocation(line: 0, scope: !4011)
!4256 = !DILocation(line: 1144, column: 11, scope: !4011)
!4257 = !DILocation(line: 1145, column: 38, scope: !4011)
!4258 = !DILocation(line: 1145, column: 21, scope: !4011)
!4259 = !DILocation(line: 1146, column: 22, scope: !4011)
!4260 = !DILocation(line: 1146, column: 29, scope: !4011)
!4261 = !DILocation(line: 1148, column: 8, scope: !4011)
!4262 = !DILocation(line: 1149, column: 10, scope: !4263)
!4263 = distinct !DILexicalBlock(scope: !4011, file: !286, line: 1149, column: 7)
!4264 = !DILocation(line: 1149, column: 7, scope: !4011)
!4265 = !DILocation(line: 1154, column: 8, scope: !4011)
!4266 = !DILocation(line: 1155, column: 10, scope: !4267)
!4267 = distinct !DILexicalBlock(scope: !4011, file: !286, line: 1155, column: 7)
!4268 = !DILocation(line: 1155, column: 7, scope: !4011)
!4269 = !DILocation(line: 1159, column: 2, scope: !4012)
!4270 = !DILocation(line: 1152, column: 11, scope: !4011)
!4271 = !DILocation(line: 1158, column: 11, scope: !4011)
!4272 = !DILocation(line: 1143, column: 33, scope: !4012)
!4273 = distinct !{!4273, !4252, !4274}
!4274 = !DILocation(line: 1159, column: 2, scope: !4009)
!4275 = !DILocation(line: 1162, column: 8, scope: !3942)
!4276 = !DILocation(line: 1164, column: 2, scope: !3942)
!4277 = !DILocation(line: 1165, column: 1, scope: !3942)
!4278 = distinct !DISubprogram(name: "get_package_len", scope: !286, file: !286, line: 196, type: !4279, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !4281)
!4279 = !DISubroutineType(types: !4280)
!4280 = !{!239, !113}
!4281 = !{!4282, !4283, !4284, !4285, !4286, !4287, !4288}
!4282 = !DILocalVariable(name: "packaged", arg: 1, scope: !4278, file: !286, line: 196, type: !113)
!4283 = !DILocalVariable(name: "buf", scope: !4278, file: !286, line: 200, type: !284)
!4284 = !DILocalVariable(name: "start", scope: !4278, file: !286, line: 201, type: !284)
!4285 = !DILocalVariable(name: "args_size", scope: !4278, file: !286, line: 202, type: !32)
!4286 = !DILocalVariable(name: "s_nbr", scope: !4278, file: !286, line: 202, type: !32)
!4287 = !DILocalVariable(name: "ros_nbr", scope: !4278, file: !286, line: 202, type: !32)
!4288 = !DILocalVariable(name: "i", scope: !4289, file: !286, line: 215, type: !119)
!4289 = distinct !DILexicalBlock(scope: !4278, file: !286, line: 215, column: 2)
!4290 = !DILocation(line: 0, scope: !4278)
!4291 = !DILocation(line: 198, column: 2, scope: !4292)
!4292 = distinct !DILexicalBlock(scope: !4293, file: !286, line: 198, column: 2)
!4293 = distinct !DILexicalBlock(scope: !4278, file: !286, line: 198, column: 2)
!4294 = !DILocation(line: 198, column: 2, scope: !4293)
!4295 = !DILocation(line: 198, column: 2, scope: !4296)
!4296 = distinct !DILexicalBlock(scope: !4292, file: !286, line: 198, column: 2)
!4297 = !DILocation(line: 204, column: 14, scope: !4278)
!4298 = !DILocation(line: 204, column: 21, scope: !4278)
!4299 = !DILocation(line: 205, column: 14, scope: !4278)
!4300 = !DILocation(line: 206, column: 14, scope: !4278)
!4301 = !DILocation(line: 209, column: 6, scope: !4278)
!4302 = !DILocation(line: 212, column: 6, scope: !4278)
!4303 = !DILocation(line: 0, scope: !4289)
!4304 = !DILocation(line: 215, column: 20, scope: !4305)
!4305 = distinct !DILexicalBlock(scope: !4289, file: !286, line: 215, column: 2)
!4306 = !DILocation(line: 215, column: 2, scope: !4289)
!4307 = !DILocation(line: 220, column: 33, scope: !4278)
!4308 = !DILocation(line: 220, column: 2, scope: !4278)
!4309 = !DILocation(line: 216, column: 6, scope: !4310)
!4310 = distinct !DILexicalBlock(scope: !4305, file: !286, line: 215, column: 34)
!4311 = !DILocation(line: 217, column: 10, scope: !4310)
!4312 = !DILocation(line: 217, column: 36, scope: !4310)
!4313 = !DILocation(line: 217, column: 7, scope: !4310)
!4314 = !DILocation(line: 215, column: 30, scope: !4305)
!4315 = distinct !{!4315, !4306, !4316}
!4316 = !DILocation(line: 218, column: 2, scope: !4289)
!4317 = distinct !DISubprogram(name: "append_string", scope: !286, file: !286, line: 223, type: !4318, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !4320)
!4318 = !DISubroutineType(types: !4319)
!4319 = !{!119, !3945, !113, !278, !199}
!4320 = !{!4321, !4322, !4323, !4324}
!4321 = !DILocalVariable(name: "cb", arg: 1, scope: !4317, file: !286, line: 223, type: !3945)
!4322 = !DILocalVariable(name: "ctx", arg: 2, scope: !4317, file: !286, line: 223, type: !113)
!4323 = !DILocalVariable(name: "str", arg: 3, scope: !4317, file: !286, line: 223, type: !278)
!4324 = !DILocalVariable(name: "strl", arg: 4, scope: !4317, file: !286, line: 223, type: !199)
!4325 = !DILocation(line: 0, scope: !4317)
!4326 = !DILocation(line: 225, column: 9, scope: !4327)
!4327 = distinct !DILexicalBlock(scope: !4317, file: !286, line: 225, column: 6)
!4328 = !DILocation(line: 225, column: 6, scope: !4317)
!4329 = !DILocation(line: 226, column: 14, scope: !4330)
!4330 = distinct !DILexicalBlock(scope: !4327, file: !286, line: 225, column: 18)
!4331 = !DILocation(line: 226, column: 12, scope: !4330)
!4332 = !DILocation(line: 226, column: 3, scope: !4330)
!4333 = !DILocation(line: 229, column: 14, scope: !4317)
!4334 = !DILocation(line: 229, column: 9, scope: !4317)
!4335 = !DILocation(line: 229, column: 27, scope: !4317)
!4336 = !DILocation(line: 229, column: 39, scope: !4317)
!4337 = !DILocation(line: 230, column: 17, scope: !4317)
!4338 = !DILocation(line: 230, column: 9, scope: !4317)
!4339 = !DILocation(line: 230, column: 2, scope: !4317)
!4340 = !DILocation(line: 231, column: 1, scope: !4317)
!4341 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !299, file: !299, line: 45, type: !301, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !4342)
!4342 = !{!4343}
!4343 = !DILocalVariable(name: "c", arg: 1, scope: !4341, file: !299, line: 45, type: !119)
!4344 = !DILocation(line: 0, scope: !4341)
!4345 = !DILocation(line: 50, column: 2, scope: !4341)
!4346 = distinct !DISubprogram(name: "__printk_hook_install", scope: !299, file: !299, line: 63, type: !4347, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !4349)
!4347 = !DISubroutineType(types: !4348)
!4348 = !{null, !300}
!4349 = !{!4350}
!4350 = !DILocalVariable(name: "fn", arg: 1, scope: !4346, file: !299, line: 63, type: !300)
!4351 = !DILocation(line: 0, scope: !4346)
!4352 = !DILocation(line: 65, column: 12, scope: !4346)
!4353 = !DILocation(line: 66, column: 1, scope: !4346)
!4354 = distinct !DISubprogram(name: "__printk_get_hook", scope: !299, file: !299, line: 76, type: !4355, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !2162)
!4355 = !DISubroutineType(types: !4356)
!4356 = !{!113}
!4357 = !DILocation(line: 78, column: 9, scope: !4354)
!4358 = !DILocation(line: 78, column: 2, scope: !4354)
!4359 = distinct !DISubprogram(name: "vprintk", scope: !299, file: !299, line: 113, type: !4360, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !4368)
!4360 = !DISubroutineType(types: !4361)
!4361 = !{null, !278, !4362}
!4362 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3431, line: 99, baseType: !4363)
!4363 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3431, line: 40, baseType: !4364)
!4364 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !299, baseType: !4365)
!4365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4366)
!4366 = !{!4367}
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4365, file: !299, line: 79, baseType: !113, size: 32)
!4368 = !{!4369, !4370, !4371}
!4369 = !DILocalVariable(name: "fmt", arg: 1, scope: !4359, file: !299, line: 113, type: !278)
!4370 = !DILocalVariable(name: "ap", arg: 2, scope: !4359, file: !299, line: 113, type: !4362)
!4371 = !DILocalVariable(name: "ctx", scope: !4372, file: !299, line: 121, type: !4374)
!4372 = distinct !DILexicalBlock(scope: !4373, file: !299, line: 120, column: 27)
!4373 = distinct !DILexicalBlock(scope: !4359, file: !299, line: 120, column: 6)
!4374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !299, line: 81, size: 32, elements: !4375)
!4375 = !{!4376, !4377}
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !4374, file: !299, line: 85, baseType: !32, size: 32)
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4374, file: !299, line: 86, baseType: !4378, offset: 32)
!4378 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, elements: !4379)
!4379 = !{!4380}
!4380 = !DISubrange(count: 0)
!4381 = !DILocation(line: 0, scope: !4359)
!4382 = !DILocation(line: 148, column: 3, scope: !4383)
!4383 = distinct !DILexicalBlock(scope: !4373, file: !299, line: 138, column: 9)
!4384 = !DILocation(line: 155, column: 1, scope: !4359)
!4385 = distinct !DISubprogram(name: "char_out", scope: !299, file: !299, line: 107, type: !4386, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !4388)
!4386 = !DISubroutineType(types: !4387)
!4387 = !{!119, !119, !113}
!4388 = !{!4389, !4390}
!4389 = !DILocalVariable(name: "c", arg: 1, scope: !4385, file: !299, line: 107, type: !119)
!4390 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !4385, file: !299, line: 107, type: !113)
!4391 = !DILocation(line: 0, scope: !4385)
!4392 = !DILocation(line: 110, column: 9, scope: !4385)
!4393 = !DILocation(line: 110, column: 2, scope: !4385)
!4394 = distinct !DISubprogram(name: "cbvprintf", scope: !3463, file: !3463, line: 739, type: !4395, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !4397)
!4395 = !DISubroutineType(types: !4396)
!4396 = !{!119, !3813, !113, !278, !4362}
!4397 = !{!4398, !4399, !4400, !4401}
!4398 = !DILocalVariable(name: "out", arg: 1, scope: !4394, file: !3463, line: 739, type: !3813)
!4399 = !DILocalVariable(name: "ctx", arg: 2, scope: !4394, file: !3463, line: 739, type: !113)
!4400 = !DILocalVariable(name: "format", arg: 3, scope: !4394, file: !3463, line: 739, type: !278)
!4401 = !DILocalVariable(name: "ap", arg: 4, scope: !4394, file: !3463, line: 739, type: !4362)
!4402 = !DILocation(line: 0, scope: !4394)
!4403 = !DILocation(line: 741, column: 9, scope: !4394)
!4404 = !DILocation(line: 741, column: 2, scope: !4394)
!4405 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !299, file: !299, line: 157, type: !4406, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !4408)
!4406 = !DISubroutineType(types: !4407)
!4407 = !{null, !106, !239}
!4408 = !{!4409, !4410, !4411}
!4409 = !DILocalVariable(name: "c", arg: 1, scope: !4405, file: !299, line: 157, type: !106)
!4410 = !DILocalVariable(name: "n", arg: 2, scope: !4405, file: !299, line: 157, type: !239)
!4411 = !DILocalVariable(name: "i", scope: !4405, file: !299, line: 159, type: !239)
!4412 = !DILocation(line: 0, scope: !4405)
!4413 = !DILocation(line: 164, column: 16, scope: !4414)
!4414 = distinct !DILexicalBlock(scope: !4415, file: !299, line: 164, column: 2)
!4415 = distinct !DILexicalBlock(scope: !4405, file: !299, line: 164, column: 2)
!4416 = !DILocation(line: 164, column: 2, scope: !4415)
!4417 = !DILocation(line: 165, column: 3, scope: !4418)
!4418 = distinct !DILexicalBlock(scope: !4414, file: !299, line: 164, column: 26)
!4419 = !DILocation(line: 165, column: 13, scope: !4418)
!4420 = !DILocation(line: 164, column: 22, scope: !4414)
!4421 = distinct !{!4421, !4416, !4422}
!4422 = !DILocation(line: 166, column: 2, scope: !4415)
!4423 = !DILocation(line: 171, column: 1, scope: !4405)
!4424 = distinct !DISubprogram(name: "printk", scope: !299, file: !299, line: 203, type: !4425, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !4427)
!4425 = !DISubroutineType(types: !4426)
!4426 = !{null, !278, null}
!4427 = !{!4428, !4429}
!4428 = !DILocalVariable(name: "fmt", arg: 1, scope: !4424, file: !299, line: 203, type: !278)
!4429 = !DILocalVariable(name: "ap", scope: !4424, file: !299, line: 205, type: !4362)
!4430 = !DILocation(line: 0, scope: !4424)
!4431 = !DILocation(line: 205, column: 2, scope: !4424)
!4432 = !DILocation(line: 205, column: 10, scope: !4424)
!4433 = !DILocation(line: 207, column: 2, scope: !4424)
!4434 = !DILocation(line: 209, column: 2, scope: !4424)
!4435 = !DILocation(line: 211, column: 2, scope: !4424)
!4436 = !DILocation(line: 212, column: 1, scope: !4424)
!4437 = distinct !DISubprogram(name: "snprintk", scope: !299, file: !299, line: 239, type: !4438, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !4440)
!4438 = !DISubroutineType(types: !4439)
!4439 = !{!119, !106, !239, !278, null}
!4440 = !{!4441, !4442, !4443, !4444, !4445}
!4441 = !DILocalVariable(name: "str", arg: 1, scope: !4437, file: !299, line: 239, type: !106)
!4442 = !DILocalVariable(name: "size", arg: 2, scope: !4437, file: !299, line: 239, type: !239)
!4443 = !DILocalVariable(name: "fmt", arg: 3, scope: !4437, file: !299, line: 239, type: !278)
!4444 = !DILocalVariable(name: "ap", scope: !4437, file: !299, line: 241, type: !4362)
!4445 = !DILocalVariable(name: "ret", scope: !4437, file: !299, line: 242, type: !119)
!4446 = !DILocation(line: 0, scope: !4437)
!4447 = !DILocation(line: 241, column: 2, scope: !4437)
!4448 = !DILocation(line: 241, column: 10, scope: !4437)
!4449 = !DILocation(line: 244, column: 2, scope: !4437)
!4450 = !DILocation(line: 245, column: 8, scope: !4437)
!4451 = !DILocation(line: 246, column: 2, scope: !4437)
!4452 = !DILocation(line: 249, column: 1, scope: !4437)
!4453 = !DILocation(line: 248, column: 2, scope: !4437)
!4454 = distinct !DISubprogram(name: "vsnprintk", scope: !299, file: !299, line: 251, type: !4455, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !4457)
!4455 = !DISubroutineType(types: !4456)
!4456 = !{!119, !106, !239, !278, !4362}
!4457 = !{!4458, !4459, !4460, !4461, !4462}
!4458 = !DILocalVariable(name: "str", arg: 1, scope: !4454, file: !299, line: 251, type: !106)
!4459 = !DILocalVariable(name: "size", arg: 2, scope: !4454, file: !299, line: 251, type: !239)
!4460 = !DILocalVariable(name: "fmt", arg: 3, scope: !4454, file: !299, line: 251, type: !278)
!4461 = !DILocalVariable(name: "ap", arg: 4, scope: !4454, file: !299, line: 251, type: !4362)
!4462 = !DILocalVariable(name: "ctx", scope: !4454, file: !299, line: 253, type: !4463)
!4463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !299, line: 217, size: 96, elements: !4464)
!4464 = !{!4465, !4466, !4467}
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4463, file: !299, line: 218, baseType: !106, size: 32)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4463, file: !299, line: 219, baseType: !119, size: 32, offset: 32)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4463, file: !299, line: 220, baseType: !119, size: 32, offset: 64)
!4468 = !DILocation(line: 0, scope: !4454)
!4469 = !DILocation(line: 253, column: 2, scope: !4454)
!4470 = !DILocation(line: 253, column: 21, scope: !4454)
!4471 = !DILocation(line: 253, column: 27, scope: !4454)
!4472 = !DILocation(line: 255, column: 2, scope: !4454)
!4473 = !DILocation(line: 257, column: 10, scope: !4474)
!4474 = distinct !DILexicalBlock(scope: !4454, file: !299, line: 257, column: 6)
!4475 = !DILocation(line: 257, column: 22, scope: !4474)
!4476 = !DILocation(line: 257, column: 16, scope: !4474)
!4477 = !DILocation(line: 257, column: 6, scope: !4454)
!4478 = !DILocation(line: 258, column: 3, scope: !4479)
!4479 = distinct !DILexicalBlock(scope: !4474, file: !299, line: 257, column: 27)
!4480 = !DILocation(line: 258, column: 18, scope: !4479)
!4481 = !DILocation(line: 259, column: 2, scope: !4479)
!4482 = !DILocation(line: 262, column: 1, scope: !4454)
!4483 = !DILocation(line: 261, column: 2, scope: !4454)
!4484 = distinct !DISubprogram(name: "str_out", scope: !299, file: !299, line: 223, type: !4485, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !295, retainedNodes: !4488)
!4485 = !DISubroutineType(types: !4486)
!4486 = !{!119, !119, !4487}
!4487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4463, size: 32)
!4488 = !{!4489, !4490}
!4489 = !DILocalVariable(name: "c", arg: 1, scope: !4484, file: !299, line: 223, type: !119)
!4490 = !DILocalVariable(name: "ctx", arg: 2, scope: !4484, file: !299, line: 223, type: !4487)
!4491 = !DILocation(line: 0, scope: !4484)
!4492 = !DILocation(line: 225, column: 11, scope: !4493)
!4493 = distinct !DILexicalBlock(scope: !4484, file: !299, line: 225, column: 6)
!4494 = !DILocation(line: 225, column: 15, scope: !4493)
!4495 = !DILocation(line: 0, scope: !4493)
!4496 = !DILocation(line: 225, column: 23, scope: !4493)
!4497 = !DILocation(line: 225, column: 45, scope: !4493)
!4498 = !DILocation(line: 225, column: 37, scope: !4493)
!4499 = !DILocation(line: 225, column: 6, scope: !4484)
!4500 = !DILocation(line: 226, column: 8, scope: !4501)
!4501 = distinct !DILexicalBlock(scope: !4493, file: !299, line: 225, column: 50)
!4502 = !DILocation(line: 226, column: 13, scope: !4501)
!4503 = !DILocation(line: 227, column: 3, scope: !4501)
!4504 = !DILocation(line: 230, column: 29, scope: !4505)
!4505 = distinct !DILexicalBlock(scope: !4484, file: !299, line: 230, column: 6)
!4506 = !DILocation(line: 230, column: 17, scope: !4505)
!4507 = !DILocation(line: 230, column: 6, scope: !4484)
!4508 = !DILocation(line: 231, column: 22, scope: !4509)
!4509 = distinct !DILexicalBlock(scope: !4505, file: !299, line: 230, column: 34)
!4510 = !DILocation(line: 231, column: 3, scope: !4509)
!4511 = !DILocation(line: 231, column: 26, scope: !4509)
!4512 = !DILocation(line: 232, column: 2, scope: !4509)
!4513 = !DILocation(line: 233, column: 28, scope: !4514)
!4514 = distinct !DILexicalBlock(scope: !4505, file: !299, line: 232, column: 9)
!4515 = !DILocation(line: 233, column: 22, scope: !4514)
!4516 = !DILocation(line: 233, column: 3, scope: !4514)
!4517 = !DILocation(line: 233, column: 26, scope: !4514)
!4518 = !DILocation(line: 237, column: 1, scope: !4484)
!4519 = distinct !DISubprogram(name: "z_thread_entry", scope: !4520, file: !4520, line: 30, type: !4521, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !4523)
!4520 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4521 = !DISubroutineType(types: !4522)
!4522 = !{null, !108, !113, !113, !113}
!4523 = !{!4524, !4525, !4526, !4527}
!4524 = !DILocalVariable(name: "entry", arg: 1, scope: !4519, file: !4520, line: 30, type: !108)
!4525 = !DILocalVariable(name: "p1", arg: 2, scope: !4519, file: !4520, line: 31, type: !113)
!4526 = !DILocalVariable(name: "p2", arg: 3, scope: !4519, file: !4520, line: 31, type: !113)
!4527 = !DILocalVariable(name: "p3", arg: 4, scope: !4519, file: !4520, line: 31, type: !113)
!4528 = !DILocation(line: 0, scope: !4519)
!4529 = !DILocation(line: 36, column: 2, scope: !4519)
!4530 = !DILocation(line: 38, column: 17, scope: !4519)
!4531 = !DILocation(line: 38, column: 2, scope: !4519)
!4532 = !DILocation(line: 45, column: 2, scope: !4519)
!4533 = distinct !DISubprogram(name: "k_current_get", scope: !245, file: !245, line: 530, type: !4534, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !2162)
!4534 = !DISubroutineType(types: !4535)
!4535 = !{!4536}
!4536 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !143, line: 347, baseType: !4537)
!4537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4538, size: 32)
!4538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !143, line: 245, size: 1280, elements: !4539)
!4539 = !{!4540, !4598, !4610, !4611, !4612, !4613, !4614, !4620, !4635}
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4538, file: !143, line: 247, baseType: !4541, size: 384)
!4541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !143, line: 57, size: 384, elements: !4542)
!4542 = !{!4543, !4567, !4574, !4575, !4576, !4585, !4586, !4587}
!4543 = !DIDerivedType(tag: DW_TAG_member, scope: !4541, file: !143, line: 60, baseType: !4544, size: 64)
!4544 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4541, file: !143, line: 60, size: 64, elements: !4545)
!4545 = !{!4546, !4561}
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !4544, file: !143, line: 61, baseType: !4547, size: 64)
!4547 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !153, line: 49, baseType: !4548)
!4548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !4549)
!4549 = !{!4550, !4556}
!4550 = !DIDerivedType(tag: DW_TAG_member, scope: !4548, file: !153, line: 38, baseType: !4551, size: 32)
!4551 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4548, file: !153, line: 38, size: 32, elements: !4552)
!4552 = !{!4553, !4555}
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4551, file: !153, line: 39, baseType: !4554, size: 32)
!4554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4548, size: 32)
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4551, file: !153, line: 40, baseType: !4554, size: 32)
!4556 = !DIDerivedType(tag: DW_TAG_member, scope: !4548, file: !153, line: 42, baseType: !4557, size: 32, offset: 32)
!4557 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4548, file: !153, line: 42, size: 32, elements: !4558)
!4558 = !{!4559, !4560}
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4557, file: !153, line: 43, baseType: !4554, size: 32)
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4557, file: !153, line: 44, baseType: !4554, size: 32)
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !4544, file: !143, line: 62, baseType: !4562, size: 64)
!4562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !169, line: 49, size: 64, elements: !4563)
!4563 = !{!4564}
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4562, file: !169, line: 50, baseType: !4565, size: 64)
!4565 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4566, size: 64, elements: !174)
!4566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4562, size: 32)
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !4541, file: !143, line: 68, baseType: !4568, size: 32, offset: 64)
!4568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4569, size: 32)
!4569 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !179, line: 233, baseType: !4570)
!4570 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !179, line: 231, size: 64, elements: !4571)
!4571 = !{!4572}
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !4570, file: !179, line: 232, baseType: !4573, size: 64)
!4573 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !4548)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !4541, file: !143, line: 71, baseType: !185, size: 8, offset: 96)
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !4541, file: !143, line: 74, baseType: !185, size: 8, offset: 104)
!4576 = !DIDerivedType(tag: DW_TAG_member, scope: !4541, file: !143, line: 90, baseType: !4577, size: 16, offset: 112)
!4577 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4541, file: !143, line: 90, size: 16, elements: !4578)
!4578 = !{!4579, !4584}
!4579 = !DIDerivedType(tag: DW_TAG_member, scope: !4577, file: !143, line: 91, baseType: !4580, size: 16)
!4580 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4577, file: !143, line: 91, size: 16, elements: !4581)
!4581 = !{!4582, !4583}
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4580, file: !143, line: 96, baseType: !195, size: 8)
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !4580, file: !143, line: 97, baseType: !185, size: 8, offset: 8)
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !4577, file: !143, line: 100, baseType: !199, size: 16)
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !4541, file: !143, line: 107, baseType: !118, size: 32, offset: 128)
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !4541, file: !143, line: 127, baseType: !113, size: 32, offset: 160)
!4587 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4541, file: !143, line: 131, baseType: !4588, size: 192, offset: 192)
!4588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !179, line: 244, size: 192, elements: !4589)
!4589 = !{!4590, !4591, !4597}
!4590 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4588, file: !179, line: 245, baseType: !4547, size: 64)
!4591 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4588, file: !179, line: 246, baseType: !4592, size: 32, offset: 64)
!4592 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !179, line: 242, baseType: !4593)
!4593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4594, size: 32)
!4594 = !DISubroutineType(types: !4595)
!4595 = !{null, !4596}
!4596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4588, size: 32)
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !4588, file: !179, line: 249, baseType: !116, size: 64, offset: 128)
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !4538, file: !143, line: 250, baseType: !4599, size: 288, offset: 384)
!4599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !4600)
!4600 = !{!4601, !4602, !4603, !4604, !4605, !4606, !4607, !4608, !4609}
!4601 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4599, file: !216, line: 26, baseType: !118, size: 32)
!4602 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4599, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4599, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4599, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4599, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4599, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!4607 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4599, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!4608 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4599, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!4609 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4599, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!4610 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !4538, file: !143, line: 253, baseType: !113, size: 32, offset: 672)
!4611 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !4538, file: !143, line: 256, baseType: !4569, size: 64, offset: 704)
!4612 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4538, file: !143, line: 279, baseType: !230, size: 256, offset: 768)
!4613 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !4538, file: !143, line: 294, baseType: !119, size: 32, offset: 1024)
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !4538, file: !143, line: 300, baseType: !4615, size: 96, offset: 1056)
!4615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !143, line: 149, size: 96, elements: !4616)
!4616 = !{!4617, !4618, !4619}
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4615, file: !143, line: 153, baseType: !22, size: 32)
!4618 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4615, file: !143, line: 162, baseType: !239, size: 32, offset: 32)
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !4615, file: !143, line: 168, baseType: !239, size: 32, offset: 64)
!4620 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !4538, file: !143, line: 325, baseType: !4621, size: 32, offset: 1152)
!4621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4622, size: 32)
!4622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !245, line: 5073, size: 192, elements: !4623)
!4623 = !{!4624, !4630, !4631}
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4622, file: !245, line: 5074, baseType: !4625, size: 96)
!4625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !249, line: 56, size: 96, elements: !4626)
!4626 = !{!4627, !4628, !4629}
!4627 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4625, file: !249, line: 57, baseType: !252, size: 32)
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4625, file: !249, line: 58, baseType: !113, size: 32, offset: 32)
!4629 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4625, file: !249, line: 59, baseType: !239, size: 32, offset: 64)
!4630 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !4622, file: !245, line: 5075, baseType: !4569, size: 64, offset: 96)
!4631 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4622, file: !245, line: 5076, baseType: !4632, size: 32, offset: 160)
!4632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !4633)
!4633 = !{!4634}
!4634 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !4632, file: !259, line: 52, baseType: !22, size: 32)
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4538, file: !143, line: 343, baseType: !4636, size: 64, offset: 1184)
!4636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !216, line: 60, size: 64, elements: !4637)
!4637 = !{!4638, !4639}
!4638 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !4636, file: !216, line: 63, baseType: !118, size: 32)
!4639 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !4636, file: !216, line: 66, baseType: !118, size: 32, offset: 32)
!4640 = !DILocation(line: 535, column: 9, scope: !4533)
!4641 = !DILocation(line: 535, column: 2, scope: !4533)
!4642 = distinct !DISubprogram(name: "k_thread_abort", scope: !3349, file: !3349, line: 188, type: !4643, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !4645)
!4643 = !DISubroutineType(types: !4644)
!4644 = !{null, !4536}
!4645 = !{!4646}
!4646 = !DILocalVariable(name: "thread", arg: 1, scope: !4642, file: !3349, line: 188, type: !4536)
!4647 = !DILocation(line: 0, scope: !4642)
!4648 = !DILocation(line: 197, column: 2, scope: !4649)
!4649 = distinct !DILexicalBlock(scope: !4642, file: !3349, line: 197, column: 2)
!4650 = !{i64 2155443351}
!4651 = !DILocation(line: 198, column: 2, scope: !4642)
!4652 = !DILocation(line: 199, column: 1, scope: !4642)
!4653 = distinct !DISubprogram(name: "z_current_get", scope: !3349, file: !3349, line: 173, type: !4534, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !2162)
!4654 = !DILocation(line: 180, column: 2, scope: !4655)
!4655 = distinct !DILexicalBlock(scope: !4653, file: !3349, line: 180, column: 2)
!4656 = !{i64 2155443283}
!4657 = !DILocation(line: 181, column: 9, scope: !4653)
!4658 = !DILocation(line: 181, column: 2, scope: !4653)
!4659 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2518, file: !2518, line: 1338, type: !4660, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !4668)
!4660 = !DISubroutineType(types: !4661)
!4661 = !{!119, !3813, !113, !278, !4662, !118}
!4662 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3431, line: 99, baseType: !4663)
!4663 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3431, line: 40, baseType: !4664)
!4664 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2518, baseType: !4665)
!4665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4666)
!4666 = !{!4667}
!4667 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4665, file: !2518, baseType: !113, size: 32)
!4668 = !{!4669, !4670, !4671, !4672, !4673, !4674, !4678, !4679, !4680, !4682, !4687, !4730, !4733, !4736, !4737, !4738, !4739, !4740, !4741, !4742, !4745, !4746, !4747, !4751, !4754, !4756, !4759, !4760, !4761, !4766, !4772, !4775, !4779, !4785, !4789, !4792, !4794, !4797}
!4669 = !DILocalVariable(name: "out", arg: 1, scope: !4659, file: !2518, line: 1338, type: !3813)
!4670 = !DILocalVariable(name: "ctx", arg: 2, scope: !4659, file: !2518, line: 1338, type: !113)
!4671 = !DILocalVariable(name: "fp", arg: 3, scope: !4659, file: !2518, line: 1338, type: !278)
!4672 = !DILocalVariable(name: "ap", arg: 4, scope: !4659, file: !2518, line: 1339, type: !4662)
!4673 = !DILocalVariable(name: "flags", arg: 5, scope: !4659, file: !2518, line: 1339, type: !118)
!4674 = !DILocalVariable(name: "buf", scope: !4659, file: !2518, line: 1341, type: !4675)
!4675 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, size: 176, elements: !4676)
!4676 = !{!4677}
!4677 = !DISubrange(count: 22)
!4678 = !DILocalVariable(name: "count", scope: !4659, file: !2518, line: 1342, type: !239)
!4679 = !DILocalVariable(name: "sint", scope: !4659, file: !2518, line: 1343, type: !2537)
!4680 = !DILocalVariable(name: "tagged_ap", scope: !4659, file: !2518, line: 1345, type: !4681)
!4681 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !345)
!4682 = !DILocalVariable(name: "rc", scope: !4683, file: !2518, line: 1377, type: !119)
!4683 = distinct !DILexicalBlock(scope: !4684, file: !2518, line: 1377, column: 4)
!4684 = distinct !DILexicalBlock(scope: !4685, file: !2518, line: 1376, column: 19)
!4685 = distinct !DILexicalBlock(scope: !4686, file: !2518, line: 1376, column: 7)
!4686 = distinct !DILexicalBlock(scope: !4659, file: !2518, line: 1375, column: 19)
!4687 = !DILocalVariable(name: "state", scope: !4686, file: !2518, line: 1395, type: !4688)
!4688 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4659, file: !2518, line: 1392, size: 192, elements: !4689)
!4689 = !{!4690, !4698}
!4690 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4688, file: !2518, line: 1393, baseType: !4691, size: 64)
!4691 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2518, line: 166, size: 64, elements: !4692)
!4692 = !{!4693, !4694, !4695, !4696, !4697}
!4693 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4691, file: !2518, line: 168, baseType: !2537, size: 64)
!4694 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4691, file: !2518, line: 171, baseType: !2540, size: 64)
!4695 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4691, file: !2518, line: 174, baseType: !276, size: 64)
!4696 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4691, file: !2518, line: 177, baseType: !274, size: 64)
!4697 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4691, file: !2518, line: 180, baseType: !113, size: 32)
!4698 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4688, file: !2518, line: 1394, baseType: !4699, size: 96, offset: 64)
!4699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2518, line: 189, size: 96, elements: !4700)
!4700 = !{!4701, !4702, !4703, !4704, !4705, !4706, !4707, !4708, !4709, !4710, !4711, !4712, !4713, !4714, !4715, !4716, !4717, !4718, !4719, !4720, !4725}
!4701 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4699, file: !2518, line: 191, baseType: !345, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4702 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4699, file: !2518, line: 194, baseType: !345, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4703 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4699, file: !2518, line: 197, baseType: !345, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4704 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4699, file: !2518, line: 200, baseType: !345, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4705 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4699, file: !2518, line: 203, baseType: !345, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4706 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4699, file: !2518, line: 206, baseType: !345, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4707 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4699, file: !2518, line: 209, baseType: !345, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4708 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4699, file: !2518, line: 212, baseType: !345, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4709 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4699, file: !2518, line: 219, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4710 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4699, file: !2518, line: 222, baseType: !345, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4711 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4699, file: !2518, line: 229, baseType: !345, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4712 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4699, file: !2518, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4713 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4699, file: !2518, line: 238, baseType: !345, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4714 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4699, file: !2518, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4715 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4699, file: !2518, line: 244, baseType: !345, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4716 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4699, file: !2518, line: 247, baseType: !345, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4717 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4699, file: !2518, line: 252, baseType: !345, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4718 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4699, file: !2518, line: 257, baseType: !345, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4719 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4699, file: !2518, line: 260, baseType: !186, size: 8, offset: 24)
!4720 = !DIDerivedType(tag: DW_TAG_member, scope: !4699, file: !2518, line: 262, baseType: !4721, size: 32, offset: 32)
!4721 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4699, file: !2518, line: 262, size: 32, elements: !4722)
!4722 = !{!4723, !4724}
!4723 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4721, file: !2518, line: 267, baseType: !119, size: 32)
!4724 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4721, file: !2518, line: 289, baseType: !119, size: 32)
!4725 = !DIDerivedType(tag: DW_TAG_member, scope: !4699, file: !2518, line: 292, baseType: !4726, size: 32, offset: 64)
!4726 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4699, file: !2518, line: 292, size: 32, elements: !4727)
!4727 = !{!4728, !4729}
!4728 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4726, file: !2518, line: 297, baseType: !119, size: 32)
!4729 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4726, file: !2518, line: 306, baseType: !119, size: 32)
!4730 = !DILocalVariable(name: "conv", scope: !4686, file: !2518, line: 1400, type: !4731)
!4731 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4732)
!4732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4699, size: 32)
!4733 = !DILocalVariable(name: "value", scope: !4686, file: !2518, line: 1401, type: !4734)
!4734 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4735)
!4735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4691, size: 32)
!4736 = !DILocalVariable(name: "sp", scope: !4686, file: !2518, line: 1402, type: !278)
!4737 = !DILocalVariable(name: "width", scope: !4686, file: !2518, line: 1403, type: !119)
!4738 = !DILocalVariable(name: "precision", scope: !4686, file: !2518, line: 1404, type: !119)
!4739 = !DILocalVariable(name: "bps", scope: !4686, file: !2518, line: 1405, type: !278)
!4740 = !DILocalVariable(name: "bpe", scope: !4686, file: !2518, line: 1406, type: !278)
!4741 = !DILocalVariable(name: "sign", scope: !4686, file: !2518, line: 1407, type: !107)
!4742 = !DILocalVariable(name: "arg", scope: !4743, file: !2518, line: 1432, type: !119)
!4743 = distinct !DILexicalBlock(scope: !4744, file: !2518, line: 1431, column: 24)
!4744 = distinct !DILexicalBlock(scope: !4686, file: !2518, line: 1431, column: 7)
!4745 = !DILocalVariable(name: "specifier_cat", scope: !4686, file: !2518, line: 1468, type: !2517)
!4746 = !DILocalVariable(name: "length_mod", scope: !4686, file: !2518, line: 1470, type: !2525)
!4747 = !DILocalVariable(name: "rc", scope: !4748, file: !2518, line: 1575, type: !119)
!4748 = distinct !DILexicalBlock(scope: !4749, file: !2518, line: 1575, column: 4)
!4749 = distinct !DILexicalBlock(scope: !4750, file: !2518, line: 1574, column: 43)
!4750 = distinct !DILexicalBlock(scope: !4686, file: !2518, line: 1574, column: 7)
!4751 = !DILocalVariable(name: "rc", scope: !4752, file: !2518, line: 1584, type: !119)
!4752 = distinct !DILexicalBlock(scope: !4753, file: !2518, line: 1584, column: 4)
!4753 = distinct !DILexicalBlock(scope: !4686, file: !2518, line: 1582, column: 28)
!4754 = !DILocalVariable(name: "len", scope: !4755, file: !2518, line: 1589, type: !239)
!4755 = distinct !DILexicalBlock(scope: !4753, file: !2518, line: 1586, column: 13)
!4756 = !DILocalVariable(name: "len", scope: !4757, file: !2518, line: 1641, type: !239)
!4757 = distinct !DILexicalBlock(scope: !4758, file: !2518, line: 1640, column: 24)
!4758 = distinct !DILexicalBlock(scope: !4753, file: !2518, line: 1640, column: 8)
!4759 = !DILocalVariable(name: "nj_len", scope: !4686, file: !2518, line: 1722, type: !239)
!4760 = !DILocalVariable(name: "pad_len", scope: !4686, file: !2518, line: 1723, type: !119)
!4761 = !DILocalVariable(name: "pad", scope: !4762, file: !2518, line: 1751, type: !107)
!4762 = distinct !DILexicalBlock(scope: !4763, file: !2518, line: 1750, column: 26)
!4763 = distinct !DILexicalBlock(scope: !4764, file: !2518, line: 1750, column: 8)
!4764 = distinct !DILexicalBlock(scope: !4765, file: !2518, line: 1747, column: 18)
!4765 = distinct !DILexicalBlock(scope: !4686, file: !2518, line: 1747, column: 7)
!4766 = !DILocalVariable(name: "rc", scope: !4767, file: !2518, line: 1758, type: !119)
!4767 = distinct !DILexicalBlock(scope: !4768, file: !2518, line: 1758, column: 7)
!4768 = distinct !DILexicalBlock(scope: !4769, file: !2518, line: 1757, column: 21)
!4769 = distinct !DILexicalBlock(scope: !4770, file: !2518, line: 1757, column: 10)
!4770 = distinct !DILexicalBlock(scope: !4771, file: !2518, line: 1756, column: 26)
!4771 = distinct !DILexicalBlock(scope: !4762, file: !2518, line: 1756, column: 9)
!4772 = !DILocalVariable(name: "rc", scope: !4773, file: !2518, line: 1765, type: !119)
!4773 = distinct !DILexicalBlock(scope: !4774, file: !2518, line: 1765, column: 6)
!4774 = distinct !DILexicalBlock(scope: !4762, file: !2518, line: 1764, column: 25)
!4775 = !DILocalVariable(name: "rc", scope: !4776, file: !2518, line: 1774, type: !119)
!4776 = distinct !DILexicalBlock(scope: !4777, file: !2518, line: 1774, column: 4)
!4777 = distinct !DILexicalBlock(scope: !4778, file: !2518, line: 1773, column: 18)
!4778 = distinct !DILexicalBlock(scope: !4686, file: !2518, line: 1773, column: 7)
!4779 = !DILocalVariable(name: "rc", scope: !4780, file: !2518, line: 1819, type: !119)
!4780 = distinct !DILexicalBlock(scope: !4781, file: !2518, line: 1819, column: 5)
!4781 = distinct !DILexicalBlock(scope: !4782, file: !2518, line: 1818, column: 44)
!4782 = distinct !DILexicalBlock(scope: !4783, file: !2518, line: 1818, column: 8)
!4783 = distinct !DILexicalBlock(scope: !4784, file: !2518, line: 1817, column: 10)
!4784 = distinct !DILexicalBlock(scope: !4686, file: !2518, line: 1777, column: 7)
!4785 = !DILocalVariable(name: "rc", scope: !4786, file: !2518, line: 1823, type: !119)
!4786 = distinct !DILexicalBlock(scope: !4787, file: !2518, line: 1823, column: 5)
!4787 = distinct !DILexicalBlock(scope: !4788, file: !2518, line: 1822, column: 26)
!4788 = distinct !DILexicalBlock(scope: !4783, file: !2518, line: 1822, column: 8)
!4789 = !DILocalVariable(name: "rc", scope: !4790, file: !2518, line: 1828, type: !119)
!4790 = distinct !DILexicalBlock(scope: !4791, file: !2518, line: 1828, column: 5)
!4791 = distinct !DILexicalBlock(scope: !4783, file: !2518, line: 1827, column: 26)
!4792 = !DILocalVariable(name: "rc", scope: !4793, file: !2518, line: 1831, type: !119)
!4793 = distinct !DILexicalBlock(scope: !4783, file: !2518, line: 1831, column: 4)
!4794 = !DILocalVariable(name: "rc", scope: !4795, file: !2518, line: 1836, type: !119)
!4795 = distinct !DILexicalBlock(scope: !4796, file: !2518, line: 1836, column: 4)
!4796 = distinct !DILexicalBlock(scope: !4686, file: !2518, line: 1835, column: 21)
!4797 = !DILabel(scope: !4753, name: "prec_int_pad0", file: !2518, line: 1634)
!4798 = !DILocation(line: 0, scope: !4659)
!4799 = !DILocation(line: 1341, column: 2, scope: !4659)
!4800 = !DILocation(line: 1341, column: 7, scope: !4659)
!4801 = !DILocation(line: 1375, column: 2, scope: !4659)
!4802 = !DILocation(line: 1342, column: 9, scope: !4659)
!4803 = !DILocation(line: 1375, column: 9, scope: !4659)
!4804 = !DILocation(line: 1377, column: 4, scope: !4683)
!4805 = !DILocation(line: 0, scope: !4683)
!4806 = !DILocation(line: 1377, column: 4, scope: !4807)
!4807 = distinct !DILexicalBlock(scope: !4683, file: !2518, line: 1377, column: 4)
!4808 = distinct !{!4808, !4801, !4809}
!4809 = !DILocation(line: 1839, column: 2, scope: !4659)
!4810 = !DILocation(line: 1392, column: 3, scope: !4686)
!4811 = !DILocation(line: 1395, column: 5, scope: !4686)
!4812 = !DILocation(line: 0, scope: !4686)
!4813 = !DILocation(line: 1409, column: 8, scope: !4686)
!4814 = !DILocation(line: 1414, column: 13, scope: !4815)
!4815 = distinct !DILexicalBlock(scope: !4686, file: !2518, line: 1414, column: 7)
!4816 = !DILocation(line: 1414, column: 7, scope: !4686)
!4817 = !DILocation(line: 1415, column: 12, scope: !4818)
!4818 = distinct !DILexicalBlock(scope: !4815, file: !2518, line: 1414, column: 25)
!4819 = !DILocation(line: 1417, column: 14, scope: !4820)
!4820 = distinct !DILexicalBlock(scope: !4818, file: !2518, line: 1417, column: 8)
!4821 = !DILocation(line: 1417, column: 8, scope: !4818)
!4822 = !DILocation(line: 1418, column: 21, scope: !4823)
!4823 = distinct !DILexicalBlock(scope: !4820, file: !2518, line: 1417, column: 19)
!4824 = !DILocation(line: 1419, column: 13, scope: !4823)
!4825 = !DILocation(line: 1420, column: 4, scope: !4823)
!4826 = !DILocation(line: 1421, column: 20, scope: !4827)
!4827 = distinct !DILexicalBlock(scope: !4815, file: !2518, line: 1421, column: 14)
!4828 = !DILocation(line: 1421, column: 14, scope: !4815)
!4829 = !DILocation(line: 1431, column: 13, scope: !4744)
!4830 = !DILocation(line: 1431, column: 7, scope: !4686)
!4831 = !DILocation(line: 1432, column: 14, scope: !4743)
!4832 = !DILocation(line: 0, scope: !4743)
!4833 = !DILocation(line: 1434, column: 12, scope: !4834)
!4834 = distinct !DILexicalBlock(scope: !4743, file: !2518, line: 1434, column: 8)
!4835 = !DILocation(line: 1434, column: 8, scope: !4743)
!4836 = !DILocation(line: 1435, column: 24, scope: !4837)
!4837 = distinct !DILexicalBlock(scope: !4834, file: !2518, line: 1434, column: 17)
!4838 = !DILocation(line: 1436, column: 4, scope: !4837)
!4839 = !DILocation(line: 1439, column: 20, scope: !4840)
!4840 = distinct !DILexicalBlock(scope: !4744, file: !2518, line: 1439, column: 14)
!4841 = !DILocation(line: 1439, column: 14, scope: !4744)
!4842 = !DILocation(line: 1469, column: 37, scope: !4686)
!4843 = !DILocation(line: 1448, column: 20, scope: !4686)
!4844 = !DILocation(line: 1449, column: 22, scope: !4686)
!4845 = !DILocation(line: 1471, column: 34, scope: !4686)
!4846 = !DILocation(line: 1478, column: 7, scope: !4686)
!4847 = !DILocation(line: 1479, column: 4, scope: !4848)
!4848 = distinct !DILexicalBlock(scope: !4849, file: !2518, line: 1478, column: 40)
!4849 = distinct !DILexicalBlock(scope: !4686, file: !2518, line: 1478, column: 7)
!4850 = !DILocation(line: 1484, column: 19, scope: !4851)
!4851 = distinct !DILexicalBlock(scope: !4848, file: !2518, line: 1479, column: 24)
!4852 = !DILocation(line: 1484, column: 17, scope: !4851)
!4853 = !DILocation(line: 1485, column: 5, scope: !4851)
!4854 = !DILocation(line: 1492, column: 20, scope: !4855)
!4855 = distinct !DILexicalBlock(scope: !4856, file: !2518, line: 1491, column: 12)
!4856 = distinct !DILexicalBlock(scope: !4851, file: !2518, line: 1487, column: 9)
!4857 = !DILocation(line: 1492, column: 18, scope: !4855)
!4858 = !DILocation(line: 1494, column: 5, scope: !4851)
!4859 = !DILocation(line: 1497, column: 23, scope: !4851)
!4860 = !DILocation(line: 1496, column: 17, scope: !4851)
!4861 = !DILocation(line: 1498, column: 5, scope: !4851)
!4862 = !DILocation(line: 1501, column: 23, scope: !4851)
!4863 = !DILocation(line: 1500, column: 17, scope: !4851)
!4864 = !DILocation(line: 1502, column: 5, scope: !4851)
!4865 = !DILocation(line: 1513, column: 23, scope: !4851)
!4866 = !DILocation(line: 1513, column: 6, scope: !4851)
!4867 = !DILocation(line: 1512, column: 17, scope: !4851)
!4868 = !DILocation(line: 1514, column: 5, scope: !4851)
!4869 = !DILocation(line: 0, scope: !4851)
!4870 = !DILocation(line: 1516, column: 8, scope: !4848)
!4871 = !DILocation(line: 1517, column: 19, scope: !4872)
!4872 = distinct !DILexicalBlock(scope: !4873, file: !2518, line: 1516, column: 33)
!4873 = distinct !DILexicalBlock(scope: !4848, file: !2518, line: 1516, column: 8)
!4874 = !DILocation(line: 1517, column: 17, scope: !4872)
!4875 = !DILocation(line: 1518, column: 4, scope: !4872)
!4876 = !DILocation(line: 1519, column: 19, scope: !4877)
!4877 = distinct !DILexicalBlock(scope: !4878, file: !2518, line: 1518, column: 39)
!4878 = distinct !DILexicalBlock(scope: !4873, file: !2518, line: 1518, column: 15)
!4879 = !DILocation(line: 1519, column: 17, scope: !4877)
!4880 = !DILocation(line: 1520, column: 4, scope: !4877)
!4881 = !DILocation(line: 1522, column: 4, scope: !4882)
!4882 = distinct !DILexicalBlock(scope: !4883, file: !2518, line: 1521, column: 47)
!4883 = distinct !DILexicalBlock(scope: !4849, file: !2518, line: 1521, column: 14)
!4884 = !DILocation(line: 1527, column: 19, scope: !4885)
!4885 = distinct !DILexicalBlock(scope: !4882, file: !2518, line: 1522, column: 24)
!4886 = !DILocation(line: 1527, column: 17, scope: !4885)
!4887 = !DILocation(line: 1528, column: 5, scope: !4885)
!4888 = !DILocation(line: 0, scope: !4889)
!4889 = distinct !DILexicalBlock(scope: !4885, file: !2518, line: 1530, column: 9)
!4890 = !DILocation(line: 1540, column: 23, scope: !4885)
!4891 = !DILocation(line: 1539, column: 17, scope: !4885)
!4892 = !DILocation(line: 1542, column: 5, scope: !4885)
!4893 = !DILocation(line: 1545, column: 23, scope: !4885)
!4894 = !DILocation(line: 1544, column: 17, scope: !4885)
!4895 = !DILocation(line: 1547, column: 5, scope: !4885)
!4896 = !DILocation(line: 1551, column: 23, scope: !4885)
!4897 = !DILocation(line: 1551, column: 6, scope: !4885)
!4898 = !DILocation(line: 1550, column: 17, scope: !4885)
!4899 = !DILocation(line: 1552, column: 5, scope: !4885)
!4900 = !DILocation(line: 0, scope: !4885)
!4901 = !DILocation(line: 1554, column: 8, scope: !4882)
!4902 = !DILocation(line: 1555, column: 19, scope: !4903)
!4903 = distinct !DILexicalBlock(scope: !4904, file: !2518, line: 1554, column: 33)
!4904 = distinct !DILexicalBlock(scope: !4882, file: !2518, line: 1554, column: 8)
!4905 = !DILocation(line: 1555, column: 17, scope: !4903)
!4906 = !DILocation(line: 1556, column: 4, scope: !4903)
!4907 = !DILocation(line: 1557, column: 19, scope: !4908)
!4908 = distinct !DILexicalBlock(scope: !4909, file: !2518, line: 1556, column: 39)
!4909 = distinct !DILexicalBlock(scope: !4904, file: !2518, line: 1556, column: 15)
!4910 = !DILocation(line: 1557, column: 17, scope: !4908)
!4911 = !DILocation(line: 1558, column: 4, scope: !4908)
!4912 = !DILocation(line: 0, scope: !4913)
!4913 = distinct !DILexicalBlock(scope: !4914, file: !2518, line: 1560, column: 8)
!4914 = distinct !DILexicalBlock(scope: !4915, file: !2518, line: 1559, column: 45)
!4915 = distinct !DILexicalBlock(scope: !4883, file: !2518, line: 1559, column: 14)
!4916 = !DILocation(line: 1566, column: 17, scope: !4917)
!4917 = distinct !DILexicalBlock(scope: !4918, file: !2518, line: 1565, column: 46)
!4918 = distinct !DILexicalBlock(scope: !4915, file: !2518, line: 1565, column: 14)
!4919 = !DILocation(line: 1566, column: 15, scope: !4917)
!4920 = !DILocation(line: 1567, column: 3, scope: !4917)
!4921 = !DILocation(line: 1574, column: 21, scope: !4750)
!4922 = !DILocation(line: 1575, column: 4, scope: !4748)
!4923 = !DILocation(line: 0, scope: !4748)
!4924 = !DILocation(line: 1575, column: 4, scope: !4925)
!4925 = distinct !DILexicalBlock(scope: !4748, file: !2518, line: 1575, column: 4)
!4926 = !DILocation(line: 1582, column: 17, scope: !4686)
!4927 = !DILocation(line: 1582, column: 3, scope: !4686)
!4928 = !DILocation(line: 1584, column: 4, scope: !4752)
!4929 = !DILocation(line: 0, scope: !4752)
!4930 = !DILocation(line: 1584, column: 4, scope: !4931)
!4931 = distinct !DILexicalBlock(scope: !4752, file: !2518, line: 1584, column: 4)
!4932 = !DILocation(line: 1587, column: 31, scope: !4755)
!4933 = !DILocation(line: 1591, column: 18, scope: !4934)
!4934 = distinct !DILexicalBlock(scope: !4755, file: !2518, line: 1591, column: 8)
!4935 = !DILocation(line: 1591, column: 8, scope: !4755)
!4936 = !DILocation(line: 1592, column: 11, scope: !4937)
!4937 = distinct !DILexicalBlock(scope: !4934, file: !2518, line: 1591, column: 24)
!4938 = !DILocation(line: 0, scope: !4755)
!4939 = !DILocation(line: 1593, column: 4, scope: !4937)
!4940 = !DILocation(line: 1594, column: 11, scope: !4941)
!4941 = distinct !DILexicalBlock(scope: !4934, file: !2518, line: 1593, column: 11)
!4942 = !DILocation(line: 1604, column: 51, scope: !4753)
!4943 = !DILocation(line: 1604, column: 13, scope: !4753)
!4944 = !DILocation(line: 1604, column: 11, scope: !4753)
!4945 = !DILocation(line: 1606, column: 4, scope: !4753)
!4946 = !DILocation(line: 1609, column: 14, scope: !4947)
!4947 = distinct !DILexicalBlock(scope: !4753, file: !2518, line: 1609, column: 8)
!4948 = !DILocation(line: 1609, column: 8, scope: !4753)
!4949 = !DILocation(line: 1619, column: 18, scope: !4753)
!4950 = !DILocation(line: 1620, column: 13, scope: !4951)
!4951 = distinct !DILexicalBlock(scope: !4753, file: !2518, line: 1620, column: 8)
!4952 = !DILocation(line: 1620, column: 8, scope: !4753)
!4953 = !DILocation(line: 1622, column: 36, scope: !4954)
!4954 = distinct !DILexicalBlock(scope: !4951, file: !2518, line: 1620, column: 18)
!4955 = !DILocation(line: 1622, column: 17, scope: !4954)
!4956 = !DILocation(line: 1623, column: 4, scope: !4954)
!4957 = !DILocation(line: 1632, column: 29, scope: !4753)
!4958 = !DILocation(line: 1632, column: 10, scope: !4753)
!4959 = !DILocation(line: 1632, column: 4, scope: !4753)
!4960 = !DILocation(line: 1407, column: 8, scope: !4686)
!4961 = !DILocation(line: 0, scope: !4753)
!4962 = !DILocation(line: 1634, column: 3, scope: !4753)
!4963 = !DILocation(line: 1640, column: 18, scope: !4758)
!4964 = !DILocation(line: 1640, column: 8, scope: !4753)
!4965 = !DILocation(line: 1729, column: 13, scope: !4966)
!4966 = distinct !DILexicalBlock(scope: !4686, file: !2518, line: 1729, column: 7)
!4967 = !DILocation(line: 1641, column: 22, scope: !4757)
!4968 = !DILocation(line: 0, scope: !4757)
!4969 = !DILocation(line: 1646, column: 21, scope: !4757)
!4970 = !DILocation(line: 1649, column: 13, scope: !4971)
!4971 = distinct !DILexicalBlock(scope: !4757, file: !2518, line: 1649, column: 9)
!4972 = !DILocation(line: 1649, column: 9, scope: !4757)
!4973 = !DILocation(line: 1650, column: 35, scope: !4974)
!4974 = distinct !DILexicalBlock(scope: !4971, file: !2518, line: 1649, column: 34)
!4975 = !DILocation(line: 1650, column: 23, scope: !4974)
!4976 = !DILocation(line: 1651, column: 5, scope: !4974)
!4977 = !DILocation(line: 1660, column: 15, scope: !4978)
!4978 = distinct !DILexicalBlock(scope: !4753, file: !2518, line: 1660, column: 8)
!4979 = !DILocation(line: 1660, column: 19, scope: !4978)
!4980 = !DILocation(line: 1660, column: 8, scope: !4753)
!4981 = !DILocation(line: 1661, column: 23, scope: !4982)
!4982 = distinct !DILexicalBlock(scope: !4978, file: !2518, line: 1660, column: 28)
!4983 = !DILocation(line: 1661, column: 11, scope: !4982)
!4984 = !DILocation(line: 1665, column: 22, scope: !4982)
!4985 = !DILocation(line: 1666, column: 21, scope: !4982)
!4986 = !DILocation(line: 1668, column: 5, scope: !4982)
!4987 = !DILocation(line: 1677, column: 30, scope: !4988)
!4988 = distinct !DILexicalBlock(scope: !4989, file: !2518, line: 1676, column: 49)
!4989 = distinct !DILexicalBlock(scope: !4753, file: !2518, line: 1676, column: 8)
!4990 = !DILocation(line: 1677, column: 5, scope: !4988)
!4991 = !DILocation(line: 1680, column: 4, scope: !4753)
!4992 = !DILocation(line: 0, scope: !4934)
!4993 = !DILocation(line: 1597, column: 14, scope: !4755)
!4994 = !DILocation(line: 1699, column: 11, scope: !4995)
!4995 = distinct !DILexicalBlock(scope: !4686, file: !2518, line: 1699, column: 7)
!4996 = !DILocation(line: 1699, column: 7, scope: !4686)
!4997 = !DILocation(line: 1725, column: 7, scope: !4998)
!4998 = distinct !DILexicalBlock(scope: !4686, file: !2518, line: 1725, column: 7)
!4999 = !DILocation(line: 1725, column: 12, scope: !4998)
!5000 = !DILocation(line: 1747, column: 13, scope: !4765)
!5001 = !DILocation(line: 1747, column: 7, scope: !4686)
!5002 = !DILocation(line: 1722, column: 24, scope: !4686)
!5003 = !DILocation(line: 1725, column: 7, scope: !4686)
!5004 = !DILocation(line: 1729, column: 7, scope: !4686)
!5005 = !DILocation(line: 1736, column: 13, scope: !5006)
!5006 = distinct !DILexicalBlock(scope: !4686, file: !2518, line: 1736, column: 7)
!5007 = !DILocation(line: 1735, column: 19, scope: !4686)
!5008 = !DILocation(line: 1736, column: 7, scope: !4686)
!5009 = !DILocation(line: 1748, column: 10, scope: !4764)
!5010 = !DILocation(line: 1750, column: 15, scope: !4763)
!5011 = !DILocation(line: 1750, column: 8, scope: !4764)
!5012 = !DILocation(line: 0, scope: !4762)
!5013 = !DILocation(line: 1756, column: 15, scope: !4771)
!5014 = !DILocation(line: 1756, column: 9, scope: !4762)
!5015 = !DILocation(line: 1758, column: 7, scope: !4767)
!5016 = !DILocation(line: 0, scope: !4767)
!5017 = !DILocation(line: 1758, column: 7, scope: !5018)
!5018 = distinct !DILexicalBlock(scope: !4767, file: !2518, line: 1758, column: 7)
!5019 = !DILocation(line: 1764, column: 5, scope: !4762)
!5020 = !DILocation(line: 0, scope: !4764)
!5021 = !DILocation(line: 1764, column: 20, scope: !4762)
!5022 = !DILocation(line: 1764, column: 17, scope: !4762)
!5023 = !DILocation(line: 1765, column: 6, scope: !4773)
!5024 = !DILocation(line: 0, scope: !4773)
!5025 = !DILocation(line: 1765, column: 6, scope: !5026)
!5026 = distinct !DILexicalBlock(scope: !4773, file: !2518, line: 1765, column: 6)
!5027 = distinct !{!5027, !5019, !5028}
!5028 = !DILocation(line: 1766, column: 5, scope: !4762)
!5029 = !DILocation(line: 1773, column: 12, scope: !4778)
!5030 = !DILocation(line: 1773, column: 7, scope: !4686)
!5031 = !DILocation(line: 1773, column: 7, scope: !4778)
!5032 = !DILocation(line: 1774, column: 4, scope: !4776)
!5033 = !DILocation(line: 0, scope: !4776)
!5034 = !DILocation(line: 1774, column: 4, scope: !5035)
!5035 = distinct !DILexicalBlock(scope: !4776, file: !2518, line: 1774, column: 4)
!5036 = !DILocation(line: 1818, column: 8, scope: !4782)
!5037 = !DILocation(line: 1818, column: 27, scope: !4782)
!5038 = !DILocation(line: 1818, column: 25, scope: !4782)
!5039 = !DILocation(line: 1818, column: 8, scope: !4783)
!5040 = !DILocation(line: 1819, column: 5, scope: !4780)
!5041 = !DILocation(line: 0, scope: !4780)
!5042 = !DILocation(line: 1819, column: 5, scope: !5043)
!5043 = distinct !DILexicalBlock(scope: !4780, file: !2518, line: 1819, column: 5)
!5044 = !DILocation(line: 1822, column: 14, scope: !4788)
!5045 = !DILocation(line: 1822, column: 8, scope: !4783)
!5046 = !DILocation(line: 1823, column: 5, scope: !4786)
!5047 = !DILocation(line: 0, scope: !4786)
!5048 = !DILocation(line: 1823, column: 5, scope: !5049)
!5049 = distinct !DILexicalBlock(scope: !4786, file: !2518, line: 1823, column: 5)
!5050 = !DILocation(line: 1826, column: 20, scope: !4783)
!5051 = !DILocation(line: 1827, column: 4, scope: !4783)
!5052 = !DILocation(line: 0, scope: !4783)
!5053 = !DILocation(line: 1827, column: 21, scope: !4783)
!5054 = !DILocation(line: 1827, column: 18, scope: !4783)
!5055 = !DILocation(line: 1828, column: 5, scope: !4790)
!5056 = !DILocation(line: 0, scope: !4790)
!5057 = !DILocation(line: 1828, column: 5, scope: !5058)
!5058 = distinct !DILexicalBlock(scope: !4790, file: !2518, line: 1828, column: 5)
!5059 = distinct !{!5059, !5051, !5060}
!5060 = !DILocation(line: 1829, column: 4, scope: !4783)
!5061 = !DILocation(line: 1831, column: 4, scope: !4793)
!5062 = !DILocation(line: 0, scope: !4793)
!5063 = !DILocation(line: 1831, column: 4, scope: !5064)
!5064 = distinct !DILexicalBlock(scope: !4793, file: !2518, line: 1831, column: 4)
!5065 = !DILocation(line: 1835, column: 16, scope: !4686)
!5066 = !DILocation(line: 1835, column: 3, scope: !4686)
!5067 = !DILocation(line: 1836, column: 4, scope: !4795)
!5068 = !DILocation(line: 0, scope: !4795)
!5069 = !DILocation(line: 1836, column: 4, scope: !5070)
!5070 = distinct !DILexicalBlock(scope: !4795, file: !2518, line: 1836, column: 4)
!5071 = !DILocation(line: 1837, column: 4, scope: !4796)
!5072 = distinct !{!5072, !5066, !5073}
!5073 = !DILocation(line: 1838, column: 3, scope: !4686)
!5074 = !DILocation(line: 1844, column: 1, scope: !4659)
!5075 = distinct !DISubprogram(name: "extract_conversion", scope: !2518, file: !2518, line: 642, type: !5076, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !5078)
!5076 = !DISubroutineType(types: !5077)
!5077 = !{!278, !4732, !278}
!5078 = !{!5079, !5080}
!5079 = !DILocalVariable(name: "conv", arg: 1, scope: !5075, file: !2518, line: 642, type: !4732)
!5080 = !DILocalVariable(name: "sp", arg: 2, scope: !5075, file: !2518, line: 643, type: !278)
!5081 = !DILocation(line: 0, scope: !5075)
!5082 = !DILocation(line: 645, column: 10, scope: !5075)
!5083 = !DILocation(line: 653, column: 2, scope: !5075)
!5084 = !DILocation(line: 654, column: 6, scope: !5085)
!5085 = distinct !DILexicalBlock(scope: !5075, file: !2518, line: 654, column: 6)
!5086 = !DILocation(line: 654, column: 10, scope: !5085)
!5087 = !DILocation(line: 654, column: 6, scope: !5075)
!5088 = !DILocation(line: 655, column: 24, scope: !5089)
!5089 = distinct !DILexicalBlock(scope: !5085, file: !2518, line: 654, column: 18)
!5090 = !DILocation(line: 655, column: 19, scope: !5089)
!5091 = !DILocation(line: 656, column: 3, scope: !5089)
!5092 = !DILocation(line: 659, column: 7, scope: !5075)
!5093 = !DILocation(line: 660, column: 7, scope: !5075)
!5094 = !DILocation(line: 661, column: 7, scope: !5075)
!5095 = !DILocation(line: 662, column: 7, scope: !5075)
!5096 = !DILocation(line: 663, column: 7, scope: !5075)
!5097 = !DILocation(line: 665, column: 2, scope: !5075)
!5098 = !DILocation(line: 666, column: 1, scope: !5075)
!5099 = distinct !DISubprogram(name: "outs", scope: !2518, file: !2518, line: 1319, type: !5100, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !5102)
!5100 = !DISubroutineType(types: !5101)
!5101 = !{!119, !3813, !113, !278, !278}
!5102 = !{!5103, !5104, !5105, !5106, !5107, !5108}
!5103 = !DILocalVariable(name: "out", arg: 1, scope: !5099, file: !2518, line: 1319, type: !3813)
!5104 = !DILocalVariable(name: "ctx", arg: 2, scope: !5099, file: !2518, line: 1320, type: !113)
!5105 = !DILocalVariable(name: "sp", arg: 3, scope: !5099, file: !2518, line: 1321, type: !278)
!5106 = !DILocalVariable(name: "ep", arg: 4, scope: !5099, file: !2518, line: 1322, type: !278)
!5107 = !DILocalVariable(name: "count", scope: !5099, file: !2518, line: 1324, type: !239)
!5108 = !DILocalVariable(name: "rc", scope: !5109, file: !2518, line: 1327, type: !119)
!5109 = distinct !DILexicalBlock(scope: !5099, file: !2518, line: 1326, column: 45)
!5110 = !DILocation(line: 0, scope: !5099)
!5111 = !DILocation(line: 1326, column: 2, scope: !5099)
!5112 = !DILocation(line: 1324, column: 9, scope: !5099)
!5113 = !DILocation(line: 1326, column: 13, scope: !5099)
!5114 = !DILocation(line: 1326, column: 19, scope: !5099)
!5115 = !DILocation(line: 1327, column: 21, scope: !5109)
!5116 = !DILocation(line: 1326, column: 36, scope: !5099)
!5117 = !DILocation(line: 1326, column: 39, scope: !5099)
!5118 = !DILocation(line: 1327, column: 24, scope: !5109)
!5119 = !DILocation(line: 1327, column: 16, scope: !5109)
!5120 = !DILocation(line: 1327, column: 12, scope: !5109)
!5121 = !DILocation(line: 0, scope: !5109)
!5122 = !DILocation(line: 1329, column: 10, scope: !5123)
!5123 = distinct !DILexicalBlock(scope: !5109, file: !2518, line: 1329, column: 7)
!5124 = !DILocation(line: 1329, column: 7, scope: !5109)
!5125 = distinct !{!5125, !5111, !5126}
!5126 = !DILocation(line: 1333, column: 2, scope: !5099)
!5127 = !DILocation(line: 1336, column: 1, scope: !5099)
!5128 = distinct !DISubprogram(name: "encode_uint", scope: !2518, file: !2518, line: 788, type: !5129, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !5131)
!5129 = !DISubroutineType(types: !5130)
!5130 = !{!106, !2540, !4732, !106, !278}
!5131 = !{!5132, !5133, !5134, !5135, !5136, !5137, !5139, !5140}
!5132 = !DILocalVariable(name: "value", arg: 1, scope: !5128, file: !2518, line: 788, type: !2540)
!5133 = !DILocalVariable(name: "conv", arg: 2, scope: !5128, file: !2518, line: 789, type: !4732)
!5134 = !DILocalVariable(name: "bps", arg: 3, scope: !5128, file: !2518, line: 790, type: !106)
!5135 = !DILocalVariable(name: "bpe", arg: 4, scope: !5128, file: !2518, line: 791, type: !278)
!5136 = !DILocalVariable(name: "upcase", scope: !5128, file: !2518, line: 793, type: !345)
!5137 = !DILocalVariable(name: "radix", scope: !5128, file: !2518, line: 794, type: !5138)
!5138 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!5139 = !DILocalVariable(name: "bp", scope: !5128, file: !2518, line: 795, type: !106)
!5140 = !DILocalVariable(name: "lsv", scope: !5141, file: !2518, line: 798, type: !32)
!5141 = distinct !DILexicalBlock(scope: !5128, file: !2518, line: 797, column: 5)
!5142 = !DILocation(line: 0, scope: !5128)
!5143 = !DILocation(line: 793, column: 35, scope: !5128)
!5144 = !DILocation(line: 793, column: 24, scope: !5128)
!5145 = !DILocation(line: 793, column: 16, scope: !5128)
!5146 = !DILocation(line: 794, column: 29, scope: !5128)
!5147 = !DILocation(line: 795, column: 24, scope: !5128)
!5148 = !DILocation(line: 795, column: 17, scope: !5128)
!5149 = !DILocation(line: 797, column: 2, scope: !5128)
!5150 = !DILocation(line: 802, column: 9, scope: !5141)
!5151 = !DILocation(line: 798, column: 22, scope: !5141)
!5152 = !DILocation(line: 0, scope: !5141)
!5153 = !DILocation(line: 800, column: 16, scope: !5141)
!5154 = !DILocation(line: 800, column: 11, scope: !5141)
!5155 = !DILocation(line: 800, column: 4, scope: !5141)
!5156 = !DILocation(line: 800, column: 9, scope: !5141)
!5157 = !DILocation(line: 803, column: 18, scope: !5128)
!5158 = !DILocation(line: 803, column: 24, scope: !5128)
!5159 = !DILocation(line: 803, column: 2, scope: !5141)
!5160 = distinct !{!5160, !5149, !5161}
!5161 = !DILocation(line: 803, column: 37, scope: !5128)
!5162 = !DILocation(line: 808, column: 12, scope: !5163)
!5163 = distinct !DILexicalBlock(scope: !5128, file: !2518, line: 808, column: 6)
!5164 = !DILocation(line: 808, column: 6, scope: !5128)
!5165 = !DILocation(line: 809, column: 7, scope: !5166)
!5166 = distinct !DILexicalBlock(scope: !5163, file: !2518, line: 808, column: 23)
!5167 = !DILocation(line: 813, column: 3, scope: !5168)
!5168 = distinct !DILexicalBlock(scope: !5169, file: !2518, line: 811, column: 27)
!5169 = distinct !DILexicalBlock(scope: !5170, file: !2518, line: 811, column: 14)
!5170 = distinct !DILexicalBlock(scope: !5166, file: !2518, line: 809, column: 7)
!5171 = !DILocation(line: 0, scope: !5170)
!5172 = !DILocation(line: 818, column: 2, scope: !5128)
!5173 = distinct !DISubprogram(name: "store_count", scope: !2518, file: !2518, line: 1280, type: !5174, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !5178)
!5174 = !DISubroutineType(types: !5175)
!5175 = !{null, !5176, !113, !119}
!5176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5177, size: 32)
!5177 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4699)
!5178 = !{!5179, !5180, !5181}
!5179 = !DILocalVariable(name: "conv", arg: 1, scope: !5173, file: !2518, line: 1280, type: !5176)
!5180 = !DILocalVariable(name: "dp", arg: 2, scope: !5173, file: !2518, line: 1281, type: !113)
!5181 = !DILocalVariable(name: "count", arg: 3, scope: !5173, file: !2518, line: 1282, type: !119)
!5182 = !DILocation(line: 0, scope: !5173)
!5183 = !DILocation(line: 1284, column: 38, scope: !5173)
!5184 = !DILocation(line: 1284, column: 2, scope: !5173)
!5185 = !DILocation(line: 1286, column: 4, scope: !5186)
!5186 = distinct !DILexicalBlock(scope: !5173, file: !2518, line: 1284, column: 50)
!5187 = !DILocation(line: 1286, column: 14, scope: !5186)
!5188 = !DILocation(line: 1287, column: 3, scope: !5186)
!5189 = !DILocation(line: 1289, column: 24, scope: !5186)
!5190 = !DILocation(line: 1289, column: 22, scope: !5186)
!5191 = !DILocation(line: 1290, column: 3, scope: !5186)
!5192 = !DILocation(line: 1292, column: 18, scope: !5186)
!5193 = !DILocation(line: 1292, column: 4, scope: !5186)
!5194 = !DILocation(line: 1292, column: 16, scope: !5186)
!5195 = !DILocation(line: 1293, column: 3, scope: !5186)
!5196 = !DILocation(line: 1295, column: 4, scope: !5186)
!5197 = !DILocation(line: 1295, column: 15, scope: !5186)
!5198 = !DILocation(line: 1296, column: 3, scope: !5186)
!5199 = !DILocation(line: 1298, column: 22, scope: !5186)
!5200 = !DILocation(line: 1298, column: 4, scope: !5186)
!5201 = !DILocation(line: 1298, column: 20, scope: !5186)
!5202 = !DILocation(line: 1299, column: 3, scope: !5186)
!5203 = !DILocation(line: 1301, column: 21, scope: !5186)
!5204 = !DILocation(line: 1301, column: 4, scope: !5186)
!5205 = !DILocation(line: 1301, column: 19, scope: !5186)
!5206 = !DILocation(line: 1302, column: 3, scope: !5186)
!5207 = !DILocation(line: 1304, column: 4, scope: !5186)
!5208 = !DILocation(line: 1304, column: 17, scope: !5186)
!5209 = !DILocation(line: 1305, column: 3, scope: !5186)
!5210 = !DILocation(line: 1307, column: 4, scope: !5186)
!5211 = !DILocation(line: 1307, column: 20, scope: !5186)
!5212 = !DILocation(line: 1308, column: 3, scope: !5186)
!5213 = !DILocation(line: 1316, column: 1, scope: !5173)
!5214 = distinct !DISubprogram(name: "isupper", scope: !5215, file: !5215, line: 16, type: !301, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !5216)
!5215 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5216 = !{!5217}
!5217 = !DILocalVariable(name: "a", arg: 1, scope: !5214, file: !5215, line: 16, type: !119)
!5218 = !DILocation(line: 0, scope: !5214)
!5219 = !DILocation(line: 18, column: 29, scope: !5214)
!5220 = !DILocation(line: 18, column: 45, scope: !5214)
!5221 = !DILocation(line: 18, column: 2, scope: !5214)
!5222 = distinct !DISubprogram(name: "conversion_radix", scope: !2518, file: !2518, line: 761, type: !5223, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !5225)
!5223 = !DISubroutineType(types: !5224)
!5224 = !{!239, !107}
!5225 = !{!5226}
!5226 = !DILocalVariable(name: "specifier", arg: 1, scope: !5222, file: !2518, line: 761, type: !107)
!5227 = !DILocation(line: 0, scope: !5222)
!5228 = !DILocation(line: 763, column: 2, scope: !5222)
!5229 = !DILocation(line: 770, column: 3, scope: !5230)
!5230 = distinct !DILexicalBlock(scope: !5222, file: !2518, line: 763, column: 21)
!5231 = !DILocation(line: 774, column: 3, scope: !5230)
!5232 = !DILocation(line: 0, scope: !5230)
!5233 = !DILocation(line: 776, column: 1, scope: !5222)
!5234 = distinct !DISubprogram(name: "extract_flags", scope: !2518, file: !2518, line: 339, type: !5076, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !5235)
!5235 = !{!5236, !5237, !5238}
!5236 = !DILocalVariable(name: "conv", arg: 1, scope: !5234, file: !2518, line: 339, type: !4732)
!5237 = !DILocalVariable(name: "sp", arg: 2, scope: !5234, file: !2518, line: 340, type: !278)
!5238 = !DILocalVariable(name: "loop", scope: !5234, file: !2518, line: 342, type: !345)
!5239 = !DILocation(line: 0, scope: !5234)
!5240 = !DILocation(line: 344, column: 2, scope: !5234)
!5241 = !DILocation(line: 345, column: 11, scope: !5242)
!5242 = distinct !DILexicalBlock(scope: !5234, file: !2518, line: 344, column: 5)
!5243 = !DILocation(line: 345, column: 3, scope: !5242)
!5244 = !DILocation(line: 351, column: 4, scope: !5245)
!5245 = distinct !DILexicalBlock(scope: !5242, file: !2518, line: 345, column: 16)
!5246 = !DILocation(line: 354, column: 4, scope: !5245)
!5247 = !DILocation(line: 357, column: 4, scope: !5245)
!5248 = !DILocation(line: 360, column: 4, scope: !5245)
!5249 = !DILocation(line: 0, scope: !5245)
!5250 = !DILocation(line: 370, column: 12, scope: !5251)
!5251 = distinct !DILexicalBlock(scope: !5234, file: !2518, line: 370, column: 6)
!5252 = !DILocation(line: 370, column: 22, scope: !5251)
!5253 = !DILocation(line: 371, column: 19, scope: !5254)
!5254 = distinct !DILexicalBlock(scope: !5251, file: !2518, line: 370, column: 42)
!5255 = !DILocation(line: 372, column: 2, scope: !5254)
!5256 = !DILocation(line: 376, column: 2, scope: !5234)
!5257 = distinct !DISubprogram(name: "extract_width", scope: !2518, file: !2518, line: 388, type: !5076, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !5258)
!5258 = !{!5259, !5260, !5261, !5262}
!5259 = !DILocalVariable(name: "conv", arg: 1, scope: !5257, file: !2518, line: 388, type: !4732)
!5260 = !DILocalVariable(name: "sp", arg: 2, scope: !5257, file: !2518, line: 389, type: !278)
!5261 = !DILocalVariable(name: "wp", scope: !5257, file: !2518, line: 398, type: !278)
!5262 = !DILocalVariable(name: "width", scope: !5257, file: !2518, line: 399, type: !239)
!5263 = !DILocation(line: 0, scope: !5257)
!5264 = !DILocation(line: 391, column: 8, scope: !5257)
!5265 = !DILocation(line: 391, column: 22, scope: !5257)
!5266 = !DILocation(line: 393, column: 6, scope: !5267)
!5267 = distinct !DILexicalBlock(scope: !5257, file: !2518, line: 393, column: 6)
!5268 = !DILocation(line: 393, column: 10, scope: !5267)
!5269 = !DILocation(line: 393, column: 6, scope: !5257)
!5270 = !DILocation(line: 394, column: 20, scope: !5271)
!5271 = distinct !DILexicalBlock(scope: !5267, file: !2518, line: 393, column: 18)
!5272 = !DILocation(line: 395, column: 10, scope: !5271)
!5273 = !DILocation(line: 395, column: 3, scope: !5271)
!5274 = !DILocation(line: 399, column: 17, scope: !5257)
!5275 = !DILocation(line: 401, column: 6, scope: !5276)
!5276 = distinct !DILexicalBlock(scope: !5257, file: !2518, line: 401, column: 6)
!5277 = !DILocation(line: 401, column: 9, scope: !5276)
!5278 = !DILocation(line: 401, column: 6, scope: !5257)
!5279 = !DILocation(line: 402, column: 23, scope: !5280)
!5280 = distinct !DILexicalBlock(scope: !5276, file: !2518, line: 401, column: 16)
!5281 = !DILocation(line: 403, column: 9, scope: !5280)
!5282 = !DILocation(line: 403, column: 21, scope: !5280)
!5283 = !DILocation(line: 405, column: 11, scope: !5280)
!5284 = !DILocation(line: 404, column: 21, scope: !5280)
!5285 = !DILocation(line: 406, column: 2, scope: !5280)
!5286 = !DILocation(line: 409, column: 1, scope: !5257)
!5287 = distinct !DISubprogram(name: "extract_prec", scope: !2518, file: !2518, line: 420, type: !5076, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !5288)
!5288 = !{!5289, !5290, !5291}
!5289 = !DILocalVariable(name: "conv", arg: 1, scope: !5287, file: !2518, line: 420, type: !4732)
!5290 = !DILocalVariable(name: "sp", arg: 2, scope: !5287, file: !2518, line: 421, type: !278)
!5291 = !DILocalVariable(name: "prec", scope: !5287, file: !2518, line: 435, type: !239)
!5292 = !DILocation(line: 0, scope: !5287)
!5293 = !DILocation(line: 423, column: 24, scope: !5287)
!5294 = !DILocation(line: 423, column: 28, scope: !5287)
!5295 = !DILocation(line: 423, column: 8, scope: !5287)
!5296 = !DILocation(line: 423, column: 21, scope: !5287)
!5297 = !DILocation(line: 425, column: 6, scope: !5287)
!5298 = !DILocation(line: 428, column: 2, scope: !5287)
!5299 = !DILocation(line: 430, column: 6, scope: !5300)
!5300 = distinct !DILexicalBlock(scope: !5287, file: !2518, line: 430, column: 6)
!5301 = !DILocation(line: 430, column: 10, scope: !5300)
!5302 = !DILocation(line: 430, column: 6, scope: !5287)
!5303 = !DILocation(line: 431, column: 19, scope: !5304)
!5304 = distinct !DILexicalBlock(scope: !5300, file: !2518, line: 430, column: 18)
!5305 = !DILocation(line: 432, column: 10, scope: !5304)
!5306 = !DILocation(line: 432, column: 3, scope: !5304)
!5307 = !DILocation(line: 435, column: 16, scope: !5287)
!5308 = !DILocation(line: 437, column: 8, scope: !5287)
!5309 = !DILocation(line: 437, column: 19, scope: !5287)
!5310 = !DILocation(line: 439, column: 10, scope: !5287)
!5311 = !DILocation(line: 438, column: 20, scope: !5287)
!5312 = !DILocation(line: 441, column: 9, scope: !5287)
!5313 = !DILocation(line: 442, column: 1, scope: !5287)
!5314 = distinct !DISubprogram(name: "extract_length", scope: !2518, file: !2518, line: 453, type: !5076, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !5315)
!5315 = !{!5316, !5317}
!5316 = !DILocalVariable(name: "conv", arg: 1, scope: !5314, file: !2518, line: 453, type: !4732)
!5317 = !DILocalVariable(name: "sp", arg: 2, scope: !5314, file: !2518, line: 454, type: !278)
!5318 = !DILocation(line: 0, scope: !5314)
!5319 = !DILocation(line: 456, column: 10, scope: !5314)
!5320 = !DILocation(line: 456, column: 2, scope: !5314)
!5321 = !DILocation(line: 458, column: 8, scope: !5322)
!5322 = distinct !DILexicalBlock(scope: !5323, file: !2518, line: 458, column: 7)
!5323 = distinct !DILexicalBlock(scope: !5314, file: !2518, line: 456, column: 15)
!5324 = !DILocation(line: 458, column: 7, scope: !5322)
!5325 = !DILocation(line: 458, column: 13, scope: !5322)
!5326 = !DILocation(line: 0, scope: !5322)
!5327 = !DILocation(line: 458, column: 7, scope: !5323)
!5328 = !DILocation(line: 459, column: 21, scope: !5329)
!5329 = distinct !DILexicalBlock(scope: !5322, file: !2518, line: 458, column: 21)
!5330 = !DILocation(line: 460, column: 4, scope: !5329)
!5331 = !DILocation(line: 461, column: 3, scope: !5329)
!5332 = !DILocation(line: 462, column: 21, scope: !5333)
!5333 = distinct !DILexicalBlock(scope: !5322, file: !2518, line: 461, column: 10)
!5334 = !DILocation(line: 466, column: 8, scope: !5335)
!5335 = distinct !DILexicalBlock(scope: !5323, file: !2518, line: 466, column: 7)
!5336 = !DILocation(line: 466, column: 7, scope: !5335)
!5337 = !DILocation(line: 466, column: 13, scope: !5335)
!5338 = !DILocation(line: 0, scope: !5335)
!5339 = !DILocation(line: 466, column: 7, scope: !5323)
!5340 = !DILocation(line: 467, column: 21, scope: !5341)
!5341 = distinct !DILexicalBlock(scope: !5335, file: !2518, line: 466, column: 21)
!5342 = !DILocation(line: 468, column: 4, scope: !5341)
!5343 = !DILocation(line: 469, column: 3, scope: !5341)
!5344 = !DILocation(line: 470, column: 21, scope: !5345)
!5345 = distinct !DILexicalBlock(scope: !5335, file: !2518, line: 469, column: 10)
!5346 = !DILocation(line: 474, column: 9, scope: !5323)
!5347 = !DILocation(line: 474, column: 20, scope: !5323)
!5348 = !DILocation(line: 475, column: 3, scope: !5323)
!5349 = !DILocation(line: 476, column: 3, scope: !5323)
!5350 = !DILocation(line: 478, column: 9, scope: !5323)
!5351 = !DILocation(line: 478, column: 20, scope: !5323)
!5352 = !DILocation(line: 479, column: 3, scope: !5323)
!5353 = !DILocation(line: 480, column: 3, scope: !5323)
!5354 = !DILocation(line: 482, column: 9, scope: !5323)
!5355 = !DILocation(line: 482, column: 20, scope: !5323)
!5356 = !DILocation(line: 483, column: 3, scope: !5323)
!5357 = !DILocation(line: 484, column: 3, scope: !5323)
!5358 = !DILocation(line: 486, column: 9, scope: !5323)
!5359 = !DILocation(line: 486, column: 20, scope: !5323)
!5360 = !DILocation(line: 487, column: 3, scope: !5323)
!5361 = !DILocation(line: 492, column: 21, scope: !5323)
!5362 = !DILocation(line: 493, column: 3, scope: !5323)
!5363 = !DILocation(line: 495, column: 9, scope: !5323)
!5364 = !DILocation(line: 495, column: 20, scope: !5323)
!5365 = !DILocation(line: 496, column: 3, scope: !5323)
!5366 = !DILocation(line: 498, column: 2, scope: !5314)
!5367 = distinct !DISubprogram(name: "extract_specifier", scope: !2518, file: !2518, line: 513, type: !5076, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !5368)
!5368 = !{!5369, !5370, !5371, !5372}
!5369 = !DILocalVariable(name: "conv", arg: 1, scope: !5367, file: !2518, line: 513, type: !4732)
!5370 = !DILocalVariable(name: "sp", arg: 2, scope: !5367, file: !2518, line: 514, type: !278)
!5371 = !DILocalVariable(name: "unsupported", scope: !5367, file: !2518, line: 516, type: !345)
!5372 = !DILabel(scope: !5373, name: "int_conv", file: !2518, line: 526)
!5373 = distinct !DILexicalBlock(scope: !5367, file: !2518, line: 520, column: 27)
!5374 = !DILocation(line: 0, scope: !5367)
!5375 = !DILocation(line: 518, column: 20, scope: !5367)
!5376 = !DILocation(line: 518, column: 8, scope: !5367)
!5377 = !DILocation(line: 518, column: 18, scope: !5367)
!5378 = !DILocation(line: 520, column: 2, scope: !5367)
!5379 = !DILocation(line: 525, column: 3, scope: !5373)
!5380 = !DILocation(line: 0, scope: !5373)
!5381 = !DILocation(line: 526, column: 1, scope: !5373)
!5382 = !DILocation(line: 528, column: 24, scope: !5383)
!5383 = distinct !DILexicalBlock(scope: !5373, file: !2518, line: 528, column: 7)
!5384 = !DILocation(line: 528, column: 7, scope: !5373)
!5385 = !DILocation(line: 535, column: 23, scope: !5386)
!5386 = distinct !DILexicalBlock(scope: !5373, file: !2518, line: 535, column: 7)
!5387 = !DILocation(line: 535, column: 7, scope: !5373)
!5388 = !DILocation(line: 536, column: 36, scope: !5389)
!5389 = distinct !DILexicalBlock(scope: !5386, file: !2518, line: 535, column: 31)
!5390 = !DILocation(line: 537, column: 3, scope: !5389)
!5391 = !DILocation(line: 570, column: 9, scope: !5373)
!5392 = !DILocation(line: 570, column: 23, scope: !5373)
!5393 = !DILocation(line: 575, column: 4, scope: !5394)
!5394 = distinct !DILexicalBlock(scope: !5395, file: !2518, line: 573, column: 48)
!5395 = distinct !DILexicalBlock(scope: !5373, file: !2518, line: 573, column: 7)
!5396 = !DILocation(line: 603, column: 9, scope: !5373)
!5397 = !DILocation(line: 603, column: 23, scope: !5373)
!5398 = !DILocation(line: 605, column: 24, scope: !5399)
!5399 = distinct !DILexicalBlock(scope: !5373, file: !2518, line: 605, column: 7)
!5400 = !DILocation(line: 605, column: 7, scope: !5373)
!5401 = !DILocation(line: 612, column: 9, scope: !5373)
!5402 = !DILocation(line: 612, column: 23, scope: !5373)
!5403 = !DILocation(line: 619, column: 24, scope: !5404)
!5404 = distinct !DILexicalBlock(scope: !5373, file: !2518, line: 619, column: 7)
!5405 = !DILocation(line: 619, column: 7, scope: !5373)
!5406 = !DILocation(line: 625, column: 9, scope: !5373)
!5407 = !DILocation(line: 625, column: 17, scope: !5373)
!5408 = !DILocation(line: 626, column: 3, scope: !5373)
!5409 = !DILocation(line: 629, column: 20, scope: !5367)
!5410 = !DILocation(line: 629, column: 8, scope: !5367)
!5411 = !DILocation(line: 518, column: 23, scope: !5367)
!5412 = !DILocation(line: 631, column: 2, scope: !5367)
!5413 = distinct !DISubprogram(name: "extract_decimal", scope: !2518, file: !2518, line: 318, type: !5414, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !5416)
!5414 = !DISubroutineType(types: !5415)
!5415 = !{!239, !277}
!5416 = !{!5417, !5418, !5419}
!5417 = !DILocalVariable(name: "str", arg: 1, scope: !5413, file: !2518, line: 318, type: !277)
!5418 = !DILocalVariable(name: "sp", scope: !5413, file: !2518, line: 320, type: !278)
!5419 = !DILocalVariable(name: "val", scope: !5413, file: !2518, line: 321, type: !239)
!5420 = !DILocation(line: 0, scope: !5413)
!5421 = !DILocation(line: 320, column: 19, scope: !5413)
!5422 = !DILocation(line: 323, column: 37, scope: !5413)
!5423 = !DILocation(line: 323, column: 17, scope: !5413)
!5424 = !DILocation(line: 323, column: 9, scope: !5413)
!5425 = !DILocation(line: 323, column: 2, scope: !5413)
!5426 = !DILocation(line: 324, column: 13, scope: !5427)
!5427 = distinct !DILexicalBlock(scope: !5413, file: !2518, line: 323, column: 43)
!5428 = !DILocation(line: 324, column: 24, scope: !5427)
!5429 = !DILocation(line: 324, column: 19, scope: !5427)
!5430 = !DILocation(line: 324, column: 27, scope: !5427)
!5431 = distinct !{!5431, !5425, !5432}
!5432 = !DILocation(line: 325, column: 2, scope: !5413)
!5433 = !DILocation(line: 326, column: 7, scope: !5413)
!5434 = !DILocation(line: 327, column: 2, scope: !5413)
!5435 = distinct !DISubprogram(name: "isdigit", scope: !5215, file: !5215, line: 43, type: !301, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !5436)
!5436 = !{!5437}
!5437 = !DILocalVariable(name: "a", arg: 1, scope: !5435, file: !5215, line: 43, type: !119)
!5438 = !DILocation(line: 0, scope: !5435)
!5439 = !DILocation(line: 45, column: 29, scope: !5435)
!5440 = !DILocation(line: 45, column: 45, scope: !5435)
!5441 = !DILocation(line: 45, column: 2, scope: !5435)
!5442 = distinct !DISubprogram(name: "assert_post_action", scope: !5443, file: !5443, line: 26, type: !5444, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2548, retainedNodes: !5446)
!5443 = !DIFile(filename: "zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5444 = !DISubroutineType(types: !5445)
!5445 = !{null, !278, !32}
!5446 = !{!5447, !5448}
!5447 = !DILocalVariable(name: "file", arg: 1, scope: !5442, file: !5443, line: 26, type: !278)
!5448 = !DILocalVariable(name: "line", arg: 2, scope: !5442, file: !5443, line: 26, type: !32)
!5449 = !DILocation(line: 0, scope: !5442)
!5450 = !DILocation(line: 43, column: 2, scope: !5451)
!5451 = distinct !DILexicalBlock(scope: !5442, file: !5443, line: 43, column: 2)
!5452 = !{i64 2155448695, i64 2155448711, i64 2155448737, i64 2155448765, i64 2155448785}
!5453 = !DILocation(line: 44, column: 1, scope: !5442)
!5454 = distinct !DISubprogram(name: "assert_print", scope: !5443, file: !5443, line: 46, type: !4425, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2548, retainedNodes: !5455)
!5455 = !{!5456, !5457}
!5456 = !DILocalVariable(name: "fmt", arg: 1, scope: !5454, file: !5443, line: 46, type: !278)
!5457 = !DILocalVariable(name: "ap", scope: !5454, file: !5443, line: 48, type: !5458)
!5458 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3431, line: 99, baseType: !5459)
!5459 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3431, line: 40, baseType: !5460)
!5460 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !5443, baseType: !5461)
!5461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5462)
!5462 = !{!5463}
!5463 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5461, file: !5443, line: 48, baseType: !113, size: 32)
!5464 = !DILocation(line: 0, scope: !5454)
!5465 = !DILocation(line: 48, column: 2, scope: !5454)
!5466 = !DILocation(line: 48, column: 10, scope: !5454)
!5467 = !DILocation(line: 50, column: 2, scope: !5454)
!5468 = !DILocation(line: 52, column: 2, scope: !5454)
!5469 = !DILocation(line: 54, column: 2, scope: !5454)
!5470 = !DILocation(line: 55, column: 1, scope: !5454)
!5471 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5472, file: !5472, line: 9, type: !3098, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !2162)
!5472 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pi")
!5473 = !DILocation(line: 11, column: 1, scope: !5471)
!5474 = !{i64 2147565364, i64 2147565407, i64 2147565447}
!5475 = !DILocation(line: 12, column: 1, scope: !5471)
!5476 = !{i64 2147569591, i64 2147569634, i64 2147569674}
!5477 = !DILocation(line: 13, column: 1, scope: !5471)
!5478 = !{i64 2147569800, i64 2147569843, i64 2147569883}
!5479 = !DILocation(line: 14, column: 1, scope: !5471)
!5480 = !{i64 2147569969, i64 2147570012, i64 2147570052}
!5481 = !DILocation(line: 15, column: 1, scope: !5471)
!5482 = !{i64 2147570132, i64 2147570175, i64 2147570215}
!5483 = !DILocation(line: 16, column: 1, scope: !5471)
!5484 = !{i64 2147570316, i64 2147570359, i64 2147570399}
!5485 = !DILocation(line: 17, column: 1, scope: !5471)
!5486 = !{i64 2147570495, i64 2147570538, i64 2147570578}
!5487 = !DILocation(line: 18, column: 1, scope: !5471)
!5488 = !{i64 2147570738, i64 2147570781, i64 2147570821}
!5489 = !DILocation(line: 19, column: 1, scope: !5471)
!5490 = !{i64 2147570973, i64 2147571016, i64 2147571056}
!5491 = !DILocation(line: 20, column: 1, scope: !5471)
!5492 = !{i64 2147571160, i64 2147571203, i64 2147571243}
!5493 = !DILocation(line: 21, column: 1, scope: !5471)
!5494 = !{i64 2147571376, i64 2147571419, i64 2147571459}
!5495 = !DILocation(line: 22, column: 1, scope: !5471)
!5496 = !{i64 2147571579, i64 2147571622, i64 2147571662}
!5497 = !DILocation(line: 23, column: 1, scope: !5471)
!5498 = !{i64 2147571782, i64 2147571825, i64 2147571865}
!5499 = !DILocation(line: 24, column: 1, scope: !5471)
!5500 = !{i64 2147571957, i64 2147572000, i64 2147572040}
!5501 = !DILocation(line: 25, column: 1, scope: !5471)
!5502 = !{i64 2147572165, i64 2147572208, i64 2147572248}
!5503 = !DILocation(line: 26, column: 1, scope: !5471)
!5504 = !{i64 2147572369, i64 2147572412, i64 2147572452}
!5505 = !DILocation(line: 27, column: 1, scope: !5471)
!5506 = !{i64 2147572562, i64 2147572605, i64 2147572645}
!5507 = !DILocation(line: 28, column: 1, scope: !5471)
!5508 = !{i64 2147572764, i64 2147572807, i64 2147572847}
!5509 = !DILocation(line: 29, column: 1, scope: !5471)
!5510 = !{i64 2147572963, i64 2147573006, i64 2147573046}
!5511 = !DILocation(line: 30, column: 1, scope: !5471)
!5512 = !{i64 2147573190, i64 2147573233, i64 2147573273}
!5513 = !DILocation(line: 31, column: 1, scope: !5471)
!5514 = !{i64 2147573392, i64 2147573435, i64 2147573475}
!5515 = !DILocation(line: 32, column: 1, scope: !5471)
!5516 = !{i64 2147573607, i64 2147573650, i64 2147573690}
!5517 = !DILocation(line: 33, column: 1, scope: !5471)
!5518 = !{i64 2147573824, i64 2147573867, i64 2147573907}
!5519 = !DILocation(line: 34, column: 1, scope: !5471)
!5520 = !{i64 2147573996, i64 2147574039, i64 2147574079}
!5521 = !DILocation(line: 35, column: 1, scope: !5471)
!5522 = !{i64 2147574198, i64 2147574241, i64 2147574281}
!5523 = !DILocation(line: 36, column: 1, scope: !5471)
!5524 = !{i64 2147574424, i64 2147574467, i64 2147574507}
!5525 = !DILocation(line: 37, column: 1, scope: !5471)
!5526 = !{i64 2147574623, i64 2147574666, i64 2147574706}
!5527 = !DILocation(line: 38, column: 1, scope: !5471)
!5528 = !{i64 2147574798, i64 2147574841, i64 2147574881}
!5529 = !DILocation(line: 39, column: 1, scope: !5471)
!5530 = !{i64 2147575051, i64 2147575094, i64 2147575134}
!5531 = !DILocation(line: 40, column: 1, scope: !5471)
!5532 = !{i64 2147575292, i64 2147575335, i64 2147575375}
!5533 = !DILocation(line: 41, column: 1, scope: !5471)
!5534 = !{i64 2147575527, i64 2147575570, i64 2147575610}
!5535 = !DILocation(line: 42, column: 1, scope: !5471)
!5536 = !{i64 2147575753, i64 2147575796, i64 2147575836}
!5537 = !DILocation(line: 43, column: 1, scope: !5471)
!5538 = !{i64 2147575979, i64 2147576022, i64 2147576062}
!5539 = !DILocation(line: 44, column: 1, scope: !5471)
!5540 = !{i64 2147576214, i64 2147576257, i64 2147576297}
!5541 = !DILocation(line: 45, column: 1, scope: !5471)
!5542 = !{i64 2147576449, i64 2147576492, i64 2147576532}
!5543 = !DILocation(line: 46, column: 1, scope: !5471)
!5544 = !{i64 2147576684, i64 2147576727, i64 2147576767}
!5545 = !DILocation(line: 47, column: 1, scope: !5471)
!5546 = !{i64 2147576922, i64 2147576965, i64 2147577005}
!5547 = !DILocation(line: 48, column: 1, scope: !5471)
!5548 = !{i64 2147577196, i64 2147577239, i64 2147577279}
!5549 = !DILocation(line: 49, column: 1, scope: !5471)
!5550 = !{i64 2147577434, i64 2147577477, i64 2147577517}
!5551 = !DILocation(line: 50, column: 1, scope: !5471)
!5552 = !{i64 2147577687, i64 2147577730, i64 2147577770}
!5553 = !DILocation(line: 51, column: 1, scope: !5471)
!5554 = !{i64 2147577931, i64 2147577974, i64 2147578014}
!5555 = !DILocation(line: 52, column: 1, scope: !5471)
!5556 = !{i64 2147578181, i64 2147578224, i64 2147578264}
!5557 = !DILocation(line: 53, column: 1, scope: !5471)
!5558 = !{i64 2147582483, i64 2147582526, i64 2147582566}
!5559 = !DILocation(line: 54, column: 1, scope: !5471)
!5560 = !{i64 2147582730, i64 2147582773, i64 2147582813}
!5561 = !DILocation(line: 55, column: 1, scope: !5471)
!5562 = !{i64 2147582965, i64 2147583008, i64 2147583048}
!5563 = !DILocation(line: 56, column: 1, scope: !5471)
!5564 = !{i64 2147583200, i64 2147583243, i64 2147583283}
!5565 = !DILocation(line: 57, column: 1, scope: !5471)
!5566 = !{i64 2147583435, i64 2147583478, i64 2147583518}
!5567 = !DILocation(line: 58, column: 1, scope: !5471)
!5568 = !{i64 2147583670, i64 2147583713, i64 2147583753}
!5569 = !DILocation(line: 59, column: 1, scope: !5471)
!5570 = !{i64 2147583914, i64 2147583957, i64 2147583997}
!5571 = !DILocation(line: 60, column: 1, scope: !5471)
!5572 = !{i64 2147584152, i64 2147584195, i64 2147584235}
!5573 = !DILocation(line: 61, column: 1, scope: !5471)
!5574 = !{i64 2147584393, i64 2147584436, i64 2147584476}
!5575 = !DILocation(line: 62, column: 1, scope: !5471)
!5576 = !{i64 2147584673, i64 2147584716, i64 2147584756}
!5577 = !DILocation(line: 63, column: 1, scope: !5471)
!5578 = !{i64 2147584932, i64 2147584975, i64 2147585015}
!5579 = !DILocation(line: 64, column: 1, scope: !5471)
!5580 = !{i64 2147585170, i64 2147585213, i64 2147585253}
!5581 = !DILocation(line: 65, column: 1, scope: !5471)
!5582 = !{i64 2147585429, i64 2147585472, i64 2147585512}
!5583 = !DILocation(line: 66, column: 1, scope: !5471)
!5584 = !{i64 2147585658, i64 2147585701, i64 2147585741}
!5585 = !DILocation(line: 67, column: 1, scope: !5471)
!5586 = !{i64 2147585866, i64 2147585909, i64 2147585949}
!5587 = !DILocation(line: 68, column: 1, scope: !5471)
!5588 = !{i64 2147586077, i64 2147586120, i64 2147586160}
!5589 = !DILocation(line: 69, column: 1, scope: !5471)
!5590 = !{i64 2147586312, i64 2147586355, i64 2147586395}
!5591 = !DILocation(line: 70, column: 1, scope: !5471)
!5592 = !{i64 2147586541, i64 2147586584, i64 2147586624}
!5593 = !DILocation(line: 71, column: 1, scope: !5471)
!5594 = !{i64 2147586758, i64 2147586801, i64 2147586841}
!5595 = !DILocation(line: 72, column: 1, scope: !5471)
!5596 = !{i64 2147586987, i64 2147587030, i64 2147587070}
!5597 = !DILocation(line: 73, column: 1, scope: !5471)
!5598 = !{i64 2147587225, i64 2147587268, i64 2147587308}
!5599 = !DILocation(line: 74, column: 1, scope: !5471)
!5600 = !{i64 2147587457, i64 2147587500, i64 2147587540}
!5601 = !DILocation(line: 75, column: 1, scope: !5471)
!5602 = !{i64 2147587683, i64 2147587726, i64 2147587766}
!5603 = !DILocation(line: 76, column: 1, scope: !5471)
!5604 = !{i64 2147587900, i64 2147587943, i64 2147587983}
!5605 = !DILocation(line: 77, column: 1, scope: !5471)
!5606 = !{i64 2147588132, i64 2147588175, i64 2147588215}
!5607 = !DILocation(line: 78, column: 1, scope: !5471)
!5608 = !{i64 2147588358, i64 2147588401, i64 2147588441}
!5609 = !DILocation(line: 79, column: 1, scope: !5471)
!5610 = !{i64 2147588572, i64 2147588615, i64 2147588655}
!5611 = !DILocation(line: 80, column: 1, scope: !5471)
!5612 = !{i64 2147588792, i64 2147588835, i64 2147588875}
!5613 = !DILocation(line: 81, column: 1, scope: !5471)
!5614 = !{i64 2147589024, i64 2147589067, i64 2147589107}
!5615 = !DILocation(line: 82, column: 1, scope: !5471)
!5616 = !{i64 2147589232, i64 2147589275, i64 2147589315}
!5617 = !DILocation(line: 83, column: 1, scope: !5471)
!5618 = !{i64 2147589437, i64 2147589480, i64 2147589520}
!5619 = !DILocation(line: 84, column: 1, scope: !5471)
!5620 = !{i64 2147589654, i64 2147589697, i64 2147589737}
!5621 = !DILocation(line: 85, column: 1, scope: !5471)
!5622 = !{i64 2147589868, i64 2147589911, i64 2147589951}
!5623 = !DILocation(line: 86, column: 1, scope: !5471)
!5624 = !{i64 2147590094, i64 2147590137, i64 2147590177}
!5625 = !DILocation(line: 87, column: 1, scope: !5471)
!5626 = !{i64 2147590314, i64 2147590357, i64 2147590397}
!5627 = !DILocation(line: 88, column: 1, scope: !5471)
!5628 = !{i64 2147594580, i64 2147594623, i64 2147594663}
!5629 = !DILocation(line: 89, column: 1, scope: !5471)
!5630 = !{i64 2147594812, i64 2147594855, i64 2147594895}
!5631 = !DILocation(line: 90, column: 1, scope: !5471)
!5632 = !{i64 2147595047, i64 2147595090, i64 2147595130}
!5633 = !DILocation(line: 91, column: 1, scope: !5471)
!5634 = !{i64 2147595297, i64 2147595340, i64 2147595380}
!5635 = !DILocation(line: 92, column: 1, scope: !5471)
!5636 = !{i64 2147595547, i64 2147595590, i64 2147595630}
!5637 = !DILocation(line: 93, column: 1, scope: !5471)
!5638 = !{i64 2147595785, i64 2147595828, i64 2147595868}
!5639 = !DILocation(line: 94, column: 1, scope: !5471)
!5640 = !{i64 2147595996, i64 2147596039, i64 2147596079}
!5641 = !DILocation(line: 95, column: 1, scope: !5471)
!5642 = !{i64 2147596213, i64 2147596256, i64 2147596296}
!5643 = !DILocation(line: 96, column: 1, scope: !5471)
!5644 = !{i64 2147596409, i64 2147596452, i64 2147596492}
!5645 = !DILocation(line: 97, column: 1, scope: !5471)
!5646 = !{i64 2147596611, i64 2147596654, i64 2147596694}
!5647 = !DILocation(line: 98, column: 1, scope: !5471)
!5648 = !{i64 2147596804, i64 2147596847, i64 2147596887}
!5649 = !DILocation(line: 99, column: 1, scope: !5471)
!5650 = !{i64 2147597012, i64 2147597055, i64 2147597095}
!5651 = !DILocation(line: 100, column: 1, scope: !5471)
!5652 = !{i64 2147597208, i64 2147597251, i64 2147597291}
!5653 = !DILocation(line: 101, column: 1, scope: !5471)
!5654 = !{i64 2147597419, i64 2147597462, i64 2147597502}
!5655 = !DILocation(line: 102, column: 1, scope: !5471)
!5656 = !{i64 2147597630, i64 2147597673, i64 2147597713}
!5657 = !DILocation(line: 103, column: 1, scope: !5471)
!5658 = !{i64 2147597829, i64 2147597872, i64 2147597912}
!5659 = !DILocation(line: 104, column: 1, scope: !5471)
!5660 = !{i64 2147598004, i64 2147598047, i64 2147598087}
!5661 = !DILocation(line: 105, column: 1, scope: !5471)
!5662 = !{i64 2147598188, i64 2147598231, i64 2147598271}
!5663 = !DILocation(line: 106, column: 1, scope: !5471)
!5664 = !{i64 2147598390, i64 2147598433, i64 2147598473}
!5665 = !DILocation(line: 107, column: 1, scope: !5471)
!5666 = !{i64 2147598571, i64 2147598614, i64 2147598654}
!5667 = !DILocation(line: 108, column: 1, scope: !5471)
!5668 = !{i64 2147598770, i64 2147598813, i64 2147598853}
!5669 = !DILocation(line: 109, column: 1, scope: !5471)
!5670 = !{i64 2147598975, i64 2147599018, i64 2147599058}
!5671 = !DILocation(line: 110, column: 1, scope: !5471)
!5672 = !{i64 2147599168, i64 2147599211, i64 2147599251}
!5673 = !DILocation(line: 111, column: 1, scope: !5471)
!5674 = !{i64 2147599334, i64 2147599377, i64 2147599417}
!5675 = !DILocation(line: 112, column: 1, scope: !5471)
!5676 = !{i64 2147599518, i64 2147599561, i64 2147599601}
!5677 = !DILocation(line: 113, column: 1, scope: !5471)
!5678 = !{i64 2147599708, i64 2147599751, i64 2147599791}
!5679 = !DILocation(line: 114, column: 1, scope: !5471)
!5680 = !{i64 2147599892, i64 2147599935, i64 2147599975}
!5681 = !DILocation(line: 115, column: 1, scope: !5471)
!5682 = !{i64 2147600106, i64 2147600149, i64 2147600189}
!5683 = !DILocation(line: 116, column: 1, scope: !5471)
!5684 = !{i64 2147600317, i64 2147600360, i64 2147600400}
!5685 = !DILocation(line: 117, column: 1, scope: !5471)
!5686 = !{i64 2147600540, i64 2147600583, i64 2147600623}
!5687 = !DILocation(line: 118, column: 1, scope: !5471)
!5688 = !{i64 2147600724, i64 2147600767, i64 2147600807}
!5689 = !DILocation(line: 119, column: 1, scope: !5471)
!5690 = !{i64 2147600938, i64 2147600981, i64 2147601021}
!5691 = !DILocation(line: 120, column: 1, scope: !5471)
!5692 = !{i64 2147601104, i64 2147601147, i64 2147601187}
!5693 = !DILocation(line: 121, column: 1, scope: !5471)
!5694 = !{i64 2147601285, i64 2147601328, i64 2147601368}
!5695 = !DILocation(line: 122, column: 1, scope: !5471)
!5696 = !{i64 2147601478, i64 2147601521, i64 2147601561}
!5697 = !DILocation(line: 123, column: 1, scope: !5471)
!5698 = !{i64 2147601704, i64 2147601747, i64 2147601787}
!5699 = !DILocation(line: 124, column: 1, scope: !5471)
!5700 = !{i64 2147601918, i64 2147601961, i64 2147602001}
!5701 = !DILocation(line: 125, column: 1, scope: !5471)
!5702 = !{i64 2147602144, i64 2147602187, i64 2147602227}
!5703 = !DILocation(line: 126, column: 1, scope: !5471)
!5704 = !{i64 2147602361, i64 2147602404, i64 2147602444}
!5705 = !DILocation(line: 127, column: 1, scope: !5471)
!5706 = !{i64 2147602638, i64 2147602681, i64 2147602721}
!5707 = !DILocation(line: 128, column: 1, scope: !5471)
!5708 = !{i64 2147602864, i64 2147602907, i64 2147602947}
!5709 = !DILocation(line: 129, column: 1, scope: !5471)
!5710 = !{i64 2147603072, i64 2147603115, i64 2147603155}
!5711 = !DILocation(line: 130, column: 1, scope: !5471)
!5712 = !{i64 2147603268, i64 2147603311, i64 2147603351}
!5713 = !DILocation(line: 131, column: 1, scope: !5471)
!5714 = !{i64 2147603533, i64 2147603576, i64 2147603616}
!5715 = !DILocation(line: 132, column: 1, scope: !5471)
!5716 = !{i64 2147607808, i64 2147607851, i64 2147607891}
!5717 = !DILocation(line: 133, column: 1, scope: !5471)
!5718 = !{i64 2147607983, i64 2147608026, i64 2147608066}
!5719 = !DILocation(line: 134, column: 1, scope: !5471)
!5720 = !{i64 2147608237, i64 2147608280, i64 2147608320}
!5721 = !DILocation(line: 135, column: 1, scope: !5471)
!5722 = !{i64 2147608436, i64 2147608479, i64 2147608519}
!5723 = !DILocation(line: 136, column: 1, scope: !5471)
!5724 = !{i64 2147608678, i64 2147608721, i64 2147608761}
!5725 = !DILocation(line: 137, column: 1, scope: !5471)
!5726 = !{i64 2147608841, i64 2147608884, i64 2147608924}
!5727 = !DILocation(line: 138, column: 1, scope: !5471)
!5728 = !{i64 2147609028, i64 2147609071, i64 2147609111}
!5729 = !DILocation(line: 139, column: 1, scope: !5471)
!5730 = !{i64 2147609236, i64 2147609279, i64 2147609319}
!5731 = !DILocation(line: 140, column: 1, scope: !5471)
!5732 = !{i64 2147609432, i64 2147609475, i64 2147609515}
!5733 = !DILocation(line: 141, column: 1, scope: !5471)
!5734 = !{i64 2147609625, i64 2147609668, i64 2147609708}
!5735 = !DILocation(line: 142, column: 1, scope: !5471)
!5736 = !{i64 2147609808, i64 2147609851, i64 2147609891}
!5737 = !DILocation(line: 143, column: 1, scope: !5471)
!5738 = !{i64 2147610022, i64 2147610065, i64 2147610105}
!5739 = !DILocation(line: 144, column: 1, scope: !5471)
!5740 = !{i64 2147610233, i64 2147610276, i64 2147610316}
!5741 = !DILocation(line: 145, column: 1, scope: !5471)
!5742 = !{i64 2147610453, i64 2147610496, i64 2147610536}
!5743 = !DILocation(line: 146, column: 1, scope: !5471)
!5744 = !{i64 2147610660, i64 2147610703, i64 2147610743}
!5745 = !DILocation(line: 147, column: 1, scope: !5471)
!5746 = !{i64 2147610933, i64 2147610976, i64 2147611016}
!5747 = !DILocation(line: 148, column: 1, scope: !5471)
!5748 = !{i64 2147611181, i64 2147611224, i64 2147611264}
!5749 = !DILocation(line: 149, column: 1, scope: !5471)
!5750 = !{i64 2147611380, i64 2147611423, i64 2147611463}
!5751 = !DILocation(line: 150, column: 1, scope: !5471)
!5752 = !{i64 2147611615, i64 2147611658, i64 2147611698}
!5753 = !DILocation(line: 151, column: 1, scope: !5471)
!5754 = !{i64 2147611865, i64 2147611908, i64 2147611948}
!5755 = !DILocation(line: 152, column: 1, scope: !5471)
!5756 = !{i64 2147612067, i64 2147612110, i64 2147612150}
!5757 = !DILocation(line: 153, column: 1, scope: !5471)
!5758 = !{i64 2147612290, i64 2147612333, i64 2147612373}
!5759 = !DILocation(line: 154, column: 1, scope: !5471)
!5760 = !{i64 2147612504, i64 2147612547, i64 2147612587}
!5761 = !DILocation(line: 155, column: 1, scope: !5471)
!5762 = !{i64 2147612748, i64 2147612791, i64 2147612831}
!5763 = !DILocation(line: 156, column: 1, scope: !5471)
!5764 = !{i64 2147612977, i64 2147613020, i64 2147613060}
!5765 = !DILocation(line: 157, column: 1, scope: !5471)
!5766 = !{i64 2147613206, i64 2147613249, i64 2147613289}
!5767 = !DILocation(line: 158, column: 1, scope: !5471)
!5768 = !{i64 2147613414, i64 2147613457, i64 2147613497}
!5769 = !DILocation(line: 159, column: 1, scope: !5471)
!5770 = !{i64 2147613652, i64 2147613695, i64 2147613735}
!5771 = !DILocation(line: 160, column: 1, scope: !5471)
!5772 = !{i64 2147613878, i64 2147613921, i64 2147613961}
!5773 = !DILocation(line: 161, column: 1, scope: !5471)
!5774 = !{i64 2147614137, i64 2147614180, i64 2147614220}
!5775 = !DILocation(line: 162, column: 1, scope: !5471)
!5776 = !{i64 2147614357, i64 2147614400, i64 2147614440}
!5777 = !DILocation(line: 163, column: 1, scope: !5471)
!5778 = !{i64 2147614589, i64 2147614632, i64 2147614672}
!5779 = !DILocation(line: 164, column: 1, scope: !5471)
!5780 = !{i64 2147614830, i64 2147614873, i64 2147614913}
!5781 = !DILocation(line: 165, column: 1, scope: !5471)
!5782 = !{i64 2147615071, i64 2147615114, i64 2147615154}
!5783 = !DILocation(line: 166, column: 1, scope: !5471)
!5784 = !{i64 2147615294, i64 2147615337, i64 2147615377}
!5785 = !DILocation(line: 167, column: 1, scope: !5471)
!5786 = !{i64 2147615511, i64 2147615554, i64 2147615594}
!5787 = !DILocation(line: 168, column: 1, scope: !5471)
!5788 = !{i64 2147615752, i64 2147615795, i64 2147615835}
!5789 = !DILocation(line: 169, column: 1, scope: !5471)
!5790 = !{i64 2147615939, i64 2147615982, i64 2147616022}
!5791 = !DILocation(line: 170, column: 1, scope: !5471)
!5792 = !{i64 2147616126, i64 2147616169, i64 2147616209}
!5793 = !DILocation(line: 171, column: 1, scope: !5471)
!5794 = !{i64 2147616289, i64 2147616332, i64 2147616372}
!5795 = !DILocation(line: 172, column: 1, scope: !5471)
!5796 = !{i64 2147620555, i64 2147620598, i64 2147620638}
!5797 = !DILocation(line: 173, column: 1, scope: !5471)
!5798 = !{i64 2147620748, i64 2147620791, i64 2147620831}
!5799 = !DILocation(line: 174, column: 1, scope: !5471)
!5800 = !{i64 2147621007, i64 2147621050, i64 2147621090}
!5801 = !DILocation(line: 175, column: 1, scope: !5471)
!5802 = !{i64 2147621230, i64 2147621273, i64 2147621313}
!5803 = !DILocation(line: 176, column: 1, scope: !5471)
!5804 = !{i64 2147621459, i64 2147621502, i64 2147621542}
!5805 = !DILocation(line: 177, column: 1, scope: !5471)
!5806 = !{i64 2147621673, i64 2147621716, i64 2147621756}
!5807 = !DILocation(line: 178, column: 1, scope: !5471)
!5808 = !{i64 2147621875, i64 2147621918, i64 2147621958}
!5809 = !DILocation(line: 179, column: 1, scope: !5471)
!5810 = !{i64 2147622071, i64 2147622114, i64 2147622154}
!5811 = !DILocation(line: 180, column: 1, scope: !5471)
!5812 = !{i64 2147622283, i64 2147622326, i64 2147622366}
!5813 = !DILocation(line: 181, column: 1, scope: !5471)
!5814 = !{i64 2147622504, i64 2147622547, i64 2147622587}
!5815 = !DILocation(line: 182, column: 1, scope: !5471)
!5816 = !{i64 2147622719, i64 2147622762, i64 2147622802}
!5817 = !DILocation(line: 183, column: 1, scope: !5471)
!5818 = !{i64 2147622909, i64 2147622952, i64 2147622992}
!5819 = !DILocation(line: 184, column: 1, scope: !5471)
!5820 = !{i64 2147623108, i64 2147623151, i64 2147623191}
!5821 = !DILocation(line: 185, column: 1, scope: !5471)
!5822 = !{i64 2147623313, i64 2147623356, i64 2147623396}
!5823 = !DILocation(line: 186, column: 1, scope: !5471)
!5824 = !{i64 2147623533, i64 2147623576, i64 2147623616}
!5825 = !DILocation(line: 187, column: 1, scope: !5471)
!5826 = !{i64 2147623734, i64 2147623777, i64 2147623817}
!5827 = !DILocation(line: 188, column: 1, scope: !5471)
!5828 = !{i64 2147623933, i64 2147623976, i64 2147624016}
!5829 = !DILocation(line: 189, column: 1, scope: !5471)
!5830 = !{i64 2147624138, i64 2147624181, i64 2147624221}
!5831 = !DILocation(line: 190, column: 1, scope: !5471)
!5832 = !{i64 2147624307, i64 2147624350, i64 2147624390}
!5833 = !DILocation(line: 191, column: 1, scope: !5471)
!5834 = !{i64 2147624491, i64 2147624534, i64 2147624574}
!5835 = !DILocation(line: 192, column: 1, scope: !5471)
!5836 = !{i64 2147624675, i64 2147624718, i64 2147624758}
!5837 = !DILocation(line: 193, column: 1, scope: !5471)
!5838 = !{i64 2147624862, i64 2147624905, i64 2147624945}
!5839 = !DILocation(line: 194, column: 1, scope: !5471)
!5840 = !{i64 2147625046, i64 2147625089, i64 2147625129}
!5841 = !DILocation(line: 195, column: 1, scope: !5471)
!5842 = !{i64 2147625233, i64 2147625276, i64 2147625316}
!5843 = !DILocation(line: 196, column: 1, scope: !5471)
!5844 = !{i64 2147625445, i64 2147625488, i64 2147625528}
!5845 = !DILocation(line: 197, column: 1, scope: !5471)
!5846 = !{i64 2147625683, i64 2147625726, i64 2147625766}
!5847 = !DILocation(line: 198, column: 1, scope: !5471)
!5848 = !{i64 2147625913, i64 2147625956, i64 2147625996}
!5849 = !DILocation(line: 199, column: 1, scope: !5471)
!5850 = !{i64 2147626142, i64 2147626185, i64 2147626225}
!5851 = !DILocation(line: 200, column: 1, scope: !5471)
!5852 = !{i64 2147626329, i64 2147626372, i64 2147626412}
!5853 = !DILocation(line: 201, column: 1, scope: !5471)
!5854 = !{i64 2147626525, i64 2147626568, i64 2147626608}
!5855 = !DILocation(line: 202, column: 1, scope: !5471)
!5856 = !{i64 2147626733, i64 2147626776, i64 2147626816}
!5857 = !DILocation(line: 203, column: 1, scope: !5471)
!5858 = !{i64 2147626945, i64 2147626988, i64 2147627028}
!5859 = !DILocation(line: 204, column: 1, scope: !5471)
!5860 = !{i64 2147627144, i64 2147627187, i64 2147627227}
!5861 = !DILocation(line: 205, column: 1, scope: !5471)
!5862 = !{i64 2147627382, i64 2147627425, i64 2147627465}
!5863 = !DILocation(line: 206, column: 1, scope: !5471)
!5864 = !{i64 2147627578, i64 2147627621, i64 2147627661}
!5865 = !DILocation(line: 207, column: 1, scope: !5471)
!5866 = !{i64 2147627780, i64 2147627823, i64 2147627863}
!5867 = !DILocation(line: 208, column: 1, scope: !5471)
!5868 = !{i64 2147627973, i64 2147628016, i64 2147628056}
!5869 = !DILocation(line: 209, column: 1, scope: !5471)
!5870 = !{i64 2147628207, i64 2147628250, i64 2147628290}
!5871 = !DILocation(line: 210, column: 1, scope: !5471)
!5872 = !{i64 2147628370, i64 2147628413, i64 2147628453}
!5873 = !DILocation(line: 211, column: 1, scope: !5471)
!5874 = !{i64 2147628609, i64 2147628652, i64 2147628692}
!5875 = !DILocation(line: 212, column: 1, scope: !5471)
!5876 = !{i64 2147628848, i64 2147628891, i64 2147628931}
!5877 = !DILocation(line: 213, column: 1, scope: !5471)
!5878 = !{i64 2147629084, i64 2147629127, i64 2147629167}
!5879 = !DILocation(line: 214, column: 1, scope: !5471)
!5880 = !{i64 2147629314, i64 2147629357, i64 2147629397}
!5881 = !DILocation(line: 215, column: 1, scope: !5471)
!5882 = !{i64 2147629501, i64 2147629544, i64 2147629584}
!5883 = !DILocation(line: 216, column: 1, scope: !5471)
!5884 = !{i64 2147633761, i64 2147633804, i64 2147633844}
!5885 = !DILocation(line: 217, column: 1, scope: !5471)
!5886 = !{i64 2147634032, i64 2147634075, i64 2147634115}
!5887 = !DILocation(line: 218, column: 1, scope: !5471)
!5888 = !{i64 2147634207, i64 2147634250, i64 2147634290}
!5889 = !DILocation(line: 219, column: 1, scope: !5471)
!5890 = !{i64 2147634441, i64 2147634484, i64 2147634524}
!5891 = !DILocation(line: 220, column: 1, scope: !5471)
!5892 = !{i64 2147634649, i64 2147634692, i64 2147634732}
!5893 = !DILocation(line: 221, column: 1, scope: !5471)
!5894 = !{i64 2147634867, i64 2147634910, i64 2147634950}
!5895 = !DILocation(line: 222, column: 1, scope: !5471)
!5896 = !{i64 2147635057, i64 2147635100, i64 2147635140}
!5897 = !DILocation(line: 223, column: 1, scope: !5471)
!5898 = !{i64 2147635289, i64 2147635332, i64 2147635372}
!5899 = !DILocation(line: 224, column: 1, scope: !5471)
!5900 = !{i64 2147635509, i64 2147635552, i64 2147635592}
!5901 = !DILocation(line: 225, column: 1, scope: !5471)
!5902 = !{i64 2147635705, i64 2147635748, i64 2147635788}
!5903 = !DILocation(line: 226, column: 1, scope: !5471)
!5904 = !{i64 2147635911, i64 2147635954, i64 2147635994}
!5905 = !DILocation(line: 227, column: 1, scope: !5471)
!5906 = !{i64 2147636116, i64 2147636159, i64 2147636199}
!5907 = !DILocation(line: 228, column: 1, scope: !5471)
!5908 = !{i64 2147636342, i64 2147636385, i64 2147636425}
!5909 = !DILocation(line: 229, column: 1, scope: !5471)
!5910 = !{i64 2147636550, i64 2147636593, i64 2147636633}
!5911 = !DILocation(line: 230, column: 1, scope: !5471)
!5912 = !{i64 2147636746, i64 2147636789, i64 2147636829}
!5913 = !DILocation(line: 231, column: 1, scope: !5471)
!5914 = !{i64 2147636978, i64 2147637021, i64 2147637061}
!5915 = !DILocation(line: 232, column: 1, scope: !5471)
!5916 = !{i64 2147637162, i64 2147637205, i64 2147637245}
!5917 = !DILocation(line: 233, column: 1, scope: !5471)
!5918 = !{i64 2147637371, i64 2147637414, i64 2147637454}
!5919 = !DILocation(line: 234, column: 1, scope: !5471)
!5920 = !{i64 2147637579, i64 2147637622, i64 2147637662}
!5921 = !DILocation(line: 235, column: 1, scope: !5471)
!5922 = !{i64 2147637775, i64 2147637818, i64 2147637858}
!5923 = !DILocation(line: 236, column: 1, scope: !5471)
!5924 = !{i64 2147637959, i64 2147638002, i64 2147638042}
!5925 = !DILocation(line: 237, column: 1, scope: !5471)
!5926 = !{i64 2147638185, i64 2147638228, i64 2147638268}
!5927 = !DILocation(line: 238, column: 1, scope: !5471)
!5928 = !{i64 2147638411, i64 2147638454, i64 2147638494}
!5929 = !DILocation(line: 239, column: 1, scope: !5471)
!5930 = !{i64 2147638637, i64 2147638680, i64 2147638720}
!5931 = !DILocation(line: 240, column: 1, scope: !5471)
!5932 = !{i64 2147638863, i64 2147638906, i64 2147638946}
!5933 = !DILocation(line: 241, column: 1, scope: !5471)
!5934 = !{i64 2147639089, i64 2147639132, i64 2147639172}
!5935 = !DILocation(line: 242, column: 1, scope: !5471)
!5936 = !{i64 2147639321, i64 2147639364, i64 2147639404}
!5937 = !DILocation(line: 243, column: 1, scope: !5471)
!5938 = !{i64 2147639559, i64 2147639602, i64 2147639642}
!5939 = !DILocation(line: 244, column: 1, scope: !5471)
!5940 = !{i64 2147639779, i64 2147639822, i64 2147639862}
!5941 = !DILocation(line: 245, column: 1, scope: !5471)
!5942 = !{i64 2147640023, i64 2147640066, i64 2147640106}
!5943 = !DILocation(line: 246, column: 1, scope: !5471)
!5944 = !{i64 2147640264, i64 2147640307, i64 2147640347}
!5945 = !DILocation(line: 247, column: 1, scope: !5471)
!5946 = !{i64 2147640499, i64 2147640542, i64 2147640582}
!5947 = !DILocation(line: 248, column: 1, scope: !5471)
!5948 = !{i64 2147640731, i64 2147640774, i64 2147640814}
!5949 = !DILocation(line: 249, column: 1, scope: !5471)
!5950 = !{i64 2147640933, i64 2147640976, i64 2147641016}
!5951 = !DILocation(line: 250, column: 1, scope: !5471)
!5952 = !{i64 2147641183, i64 2147641226, i64 2147641266}
!5953 = !DILocation(line: 251, column: 1, scope: !5471)
!5954 = !{i64 2147641421, i64 2147641464, i64 2147641504}
!5955 = !DILocation(line: 252, column: 1, scope: !5471)
!5956 = !{i64 2147641629, i64 2147641672, i64 2147641712}
!5957 = !DILocation(line: 253, column: 1, scope: !5471)
!5958 = !{i64 2147641825, i64 2147641868, i64 2147641908}
!5959 = !DILocation(line: 254, column: 1, scope: !5471)
!5960 = !{i64 2147642009, i64 2147642052, i64 2147642092}
!5961 = !DILocation(line: 255, column: 1, scope: !5471)
!5962 = !{i64 2147642226, i64 2147642269, i64 2147642309}
!5963 = !DILocation(line: 256, column: 1, scope: !5471)
!5964 = !{i64 2147642431, i64 2147642474, i64 2147642514}
!5965 = !DILocation(line: 257, column: 1, scope: !5471)
!5966 = !{i64 2147646727, i64 2147646770, i64 2147646810}
!5967 = !DILocation(line: 258, column: 1, scope: !5471)
!5968 = !{i64 2147646950, i64 2147646993, i64 2147647033}
!5969 = !DILocation(line: 259, column: 1, scope: !5471)
!5970 = !{i64 2147647174, i64 2147647217, i64 2147647257}
!5971 = !DILocation(line: 260, column: 1, scope: !5471)
!5972 = !{i64 2147647412, i64 2147647455, i64 2147647495}
!5973 = !DILocation(line: 261, column: 1, scope: !5471)
!5974 = !{i64 2147647650, i64 2147647693, i64 2147647733}
!5975 = !DILocation(line: 262, column: 1, scope: !5471)
!5976 = !{i64 2147647867, i64 2147647910, i64 2147647950}
!5977 = !DILocation(line: 263, column: 1, scope: !5471)
!5978 = !{i64 2147648072, i64 2147648115, i64 2147648155}
!5979 = !DILocation(line: 264, column: 1, scope: !5471)
!5980 = !{i64 2147648265, i64 2147648308, i64 2147648348}
!5981 = !DILocation(line: 265, column: 1, scope: !5471)
!5982 = !{i64 2147648518, i64 2147648561, i64 2147648601}
!5983 = !DILocation(line: 266, column: 1, scope: !5471)
!5984 = !{i64 2147648726, i64 2147648769, i64 2147648809}
!5985 = !DILocation(line: 267, column: 1, scope: !5471)
!5986 = !{i64 2147648922, i64 2147648965, i64 2147649005}
!5987 = !DILocation(line: 268, column: 1, scope: !5471)
!5988 = !{i64 2147649136, i64 2147649179, i64 2147649219}
!5989 = !DILocation(line: 269, column: 1, scope: !5471)
!5990 = !{i64 2147649344, i64 2147649387, i64 2147649427}
!5991 = !DILocation(line: 270, column: 1, scope: !5471)
!5992 = !{i64 2147649534, i64 2147649577, i64 2147649617}
!5993 = !DILocation(line: 271, column: 1, scope: !5471)
!5994 = !{i64 2147649748, i64 2147649791, i64 2147649831}
!5995 = !DILocation(line: 272, column: 1, scope: !5471)
!5996 = !{i64 2147650010, i64 2147650053, i64 2147650093}
!5997 = !DILocation(line: 273, column: 1, scope: !5471)
!5998 = !{i64 2147650221, i64 2147650264, i64 2147650304}
!5999 = !DILocation(line: 274, column: 1, scope: !5471)
!6000 = !{i64 2147650465, i64 2147650508, i64 2147650548}
!6001 = !DILocation(line: 275, column: 1, scope: !5471)
!6002 = !{i64 2147650676, i64 2147650719, i64 2147650759}
!6003 = !DILocation(line: 276, column: 1, scope: !5471)
!6004 = !{i64 2147650905, i64 2147650948, i64 2147650988}
!6005 = !DILocation(line: 277, column: 1, scope: !5471)
!6006 = !{i64 2147651170, i64 2147651213, i64 2147651253}
!6007 = !DILocation(line: 278, column: 1, scope: !5471)
!6008 = !{i64 2147651375, i64 2147651418, i64 2147651458}
!6009 = !DILocation(line: 279, column: 1, scope: !5471)
!6010 = !{i64 2147651571, i64 2147651614, i64 2147651654}
!6011 = !DILocation(line: 280, column: 1, scope: !5471)
!6012 = !{i64 2147651794, i64 2147651837, i64 2147651877}
!6013 = !DILocation(line: 281, column: 1, scope: !5471)
!6014 = !{i64 2147651957, i64 2147652000, i64 2147652040}
!6015 = !DILocation(line: 282, column: 1, scope: !5471)
!6016 = !{i64 2147652162, i64 2147652205, i64 2147652245}
!6017 = !DILocation(line: 283, column: 1, scope: !5471)
!6018 = !{i64 2147652382, i64 2147652425, i64 2147652465}
!6019 = !DILocation(line: 284, column: 1, scope: !5471)
!6020 = !{i64 2147652596, i64 2147652639, i64 2147652679}
!6021 = !DILocation(line: 285, column: 1, scope: !5471)
!6022 = !{i64 2147652840, i64 2147652883, i64 2147652923}
!6023 = !DILocation(line: 286, column: 1, scope: !5471)
!6024 = !{i64 2147653072, i64 2147653115, i64 2147653155}
!6025 = !DILocation(line: 287, column: 1, scope: !5471)
!6026 = !{i64 2147653286, i64 2147653329, i64 2147653369}
!6027 = !DILocation(line: 288, column: 1, scope: !5471)
!6028 = !{i64 2147653497, i64 2147653540, i64 2147653580}
!6029 = !DILocation(line: 289, column: 1, scope: !5471)
!6030 = !{i64 2147653690, i64 2147653733, i64 2147653773}
!6031 = !DILocation(line: 290, column: 1, scope: !5471)
!6032 = !{i64 2147653889, i64 2147653932, i64 2147653972}
!6033 = !DILocation(line: 291, column: 1, scope: !5471)
!6034 = !{i64 2147654061, i64 2147654104, i64 2147654144}
!6035 = !DILocation(line: 292, column: 1, scope: !5471)
!6036 = !{i64 2147654254, i64 2147654297, i64 2147654337}
!6037 = !DILocation(line: 293, column: 1, scope: !5471)
!6038 = !{i64 2147654426, i64 2147654469, i64 2147654509}
!6039 = !DILocation(line: 294, column: 1, scope: !5471)
!6040 = !{i64 2147654616, i64 2147654659, i64 2147654699}
!6041 = !DILocation(line: 295, column: 1, scope: !5471)
!6042 = !{i64 2147654809, i64 2147654852, i64 2147654892}
!6043 = !DILocation(line: 296, column: 1, scope: !5471)
!6044 = !{i64 2147655005, i64 2147655048, i64 2147655088}
!6045 = !DILocation(line: 297, column: 1, scope: !5471)
!6046 = !{i64 2147655168, i64 2147655211, i64 2147655251}
!6047 = !DILocation(line: 298, column: 1, scope: !5471)
!6048 = !{i64 2147655370, i64 2147655413, i64 2147655453}
!6049 = !DILocation(line: 299, column: 1, scope: !5471)
!6050 = !{i64 2147659642, i64 2147659685, i64 2147659725}
!6051 = !DILocation(line: 300, column: 1, scope: !5471)
!6052 = !{i64 2147659847, i64 2147659890, i64 2147659930}
!6053 = !DILocation(line: 301, column: 1, scope: !5471)
!6054 = !{i64 2147660055, i64 2147660098, i64 2147660138}
!6055 = !DILocation(line: 302, column: 1, scope: !5471)
!6056 = !{i64 2147660248, i64 2147660291, i64 2147660331}
!6057 = !DILocation(line: 303, column: 1, scope: !5471)
!6058 = !{i64 2147660435, i64 2147660478, i64 2147660518}
!6059 = !DILocation(line: 304, column: 1, scope: !5471)
!6060 = !{i64 2147660601, i64 2147660644, i64 2147660684}
!6061 = !DILocation(line: 305, column: 1, scope: !5471)
!6062 = !{i64 2147660828, i64 2147660871, i64 2147660911}
!6063 = !DILocation(line: 306, column: 1, scope: !5471)
!6064 = !{i64 2147661045, i64 2147661088, i64 2147661128}
!6065 = !DILocation(line: 307, column: 1, scope: !5471)
!6066 = !{i64 2147661271, i64 2147661314, i64 2147661354}
!6067 = !DILocation(line: 308, column: 1, scope: !5471)
!6068 = !{i64 2147661476, i64 2147661519, i64 2147661559}
!6069 = !DILocation(line: 309, column: 1, scope: !5471)
!6070 = !{i64 2147661693, i64 2147661736, i64 2147661776}
!6071 = !DILocation(line: 310, column: 1, scope: !5471)
!6072 = !{i64 2147661985, i64 2147662028, i64 2147662068}
!6073 = !DILocation(line: 311, column: 1, scope: !5471)
!6074 = !{i64 2147662217, i64 2147662260, i64 2147662300}
!6075 = !DILocation(line: 312, column: 1, scope: !5471)
!6076 = !{i64 2147662434, i64 2147662477, i64 2147662517}
!6077 = !DILocation(line: 313, column: 1, scope: !5471)
!6078 = !{i64 2147662641, i64 2147662684, i64 2147662724}
!6079 = !DILocation(line: 314, column: 1, scope: !5471)
!6080 = !{i64 2147662842, i64 2147662885, i64 2147662925}
!6081 = !DILocation(line: 315, column: 1, scope: !5471)
!6082 = !{i64 2147663074, i64 2147663117, i64 2147663157}
!6083 = !DILocation(line: 316, column: 1, scope: !5471)
!6084 = !{i64 2147663282, i64 2147663325, i64 2147663365}
!6085 = !DILocation(line: 317, column: 1, scope: !5471)
!6086 = !{i64 2147663472, i64 2147663515, i64 2147663555}
!6087 = !DILocation(line: 318, column: 1, scope: !5471)
!6088 = !{i64 2147663698, i64 2147663741, i64 2147663781}
!6089 = !DILocation(line: 319, column: 1, scope: !5471)
!6090 = !{i64 2147663887, i64 2147663930, i64 2147663970}
!6091 = !DILocation(line: 320, column: 1, scope: !5471)
!6092 = !{i64 2147664158, i64 2147664201, i64 2147664241}
!6093 = !DILocation(line: 321, column: 1, scope: !5471)
!6094 = !{i64 2147664378, i64 2147664421, i64 2147664461}
!6095 = !DILocation(line: 322, column: 1, scope: !5471)
!6096 = !{i64 2147664631, i64 2147664674, i64 2147664714}
!6097 = !DILocation(line: 323, column: 1, scope: !5471)
!6098 = !{i64 2147664839, i64 2147664882, i64 2147664922}
!6099 = !DILocation(line: 324, column: 1, scope: !5471)
!6100 = !{i64 2147665071, i64 2147665114, i64 2147665154}
!6101 = !DILocation(line: 325, column: 1, scope: !5471)
!6102 = !{i64 2147665282, i64 2147665325, i64 2147665365}
!6103 = !DILocation(line: 326, column: 1, scope: !5471)
!6104 = !{i64 2147665472, i64 2147665515, i64 2147665555}
!6105 = !DILocation(line: 327, column: 1, scope: !5471)
!6106 = !{i64 2147665686, i64 2147665729, i64 2147665769}
!6107 = !DILocation(line: 328, column: 1, scope: !5471)
!6108 = !{i64 2147665885, i64 2147665928, i64 2147665968}
!6109 = !DILocation(line: 329, column: 1, scope: !5471)
!6110 = !{i64 2147666072, i64 2147666115, i64 2147666155}
!6111 = !DILocation(line: 330, column: 1, scope: !5471)
!6112 = !{i64 2147666280, i64 2147666323, i64 2147666363}
!6113 = !DILocation(line: 331, column: 1, scope: !5471)
!6114 = !{i64 2147666509, i64 2147666552, i64 2147666592}
!6115 = !DILocation(line: 332, column: 1, scope: !5471)
!6116 = !{i64 2147666711, i64 2147666754, i64 2147666794}
!6117 = !DILocation(line: 333, column: 1, scope: !5471)
!6118 = !{i64 2147666910, i64 2147666953, i64 2147666993}
!6119 = !DILocation(line: 334, column: 1, scope: !5471)
!6120 = !{i64 2147667127, i64 2147667170, i64 2147667210}
!6121 = !DILocation(line: 336, column: 1, scope: !5471)
!6122 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !322, file: !322, line: 30, type: !329, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !305, retainedNodes: !6123)
!6123 = !{!6124, !6125}
!6124 = !DILocalVariable(name: "arg", arg: 1, scope: !6122, file: !322, line: 30, type: !331)
!6125 = !DILocalVariable(name: "key", scope: !6122, file: !322, line: 32, type: !118)
!6126 = !DILocation(line: 0, scope: !6122)
!6127 = !DILocation(line: 37, column: 2, scope: !6122)
!6128 = !DILocation(line: 38, column: 2, scope: !6122)
!6129 = !DILocation(line: 55, column: 2, scope: !6130, inlinedAt: !6137)
!6130 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6131, file: !6131, line: 42, type: !6132, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !305, retainedNodes: !6134)
!6131 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6132 = !DISubroutineType(types: !6133)
!6133 = !{!32}
!6134 = !{!6135, !6136}
!6135 = !DILocalVariable(name: "key", scope: !6130, file: !6131, line: 44, type: !32)
!6136 = !DILocalVariable(name: "tmp", scope: !6130, file: !6131, line: 53, type: !32)
!6137 = distinct !DILocation(line: 40, column: 8, scope: !6122)
!6138 = !{i64 2509937}
!6139 = !DILocation(line: 0, scope: !6130, inlinedAt: !6137)
!6140 = !DILocalVariable(name: "key", arg: 1, scope: !6141, file: !6131, line: 84, type: !32)
!6141 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6131, file: !6131, line: 84, type: !6142, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !305, retainedNodes: !6144)
!6142 = !DISubroutineType(types: !6143)
!6143 = !{null, !32}
!6144 = !{!6140}
!6145 = !DILocation(line: 0, scope: !6141, inlinedAt: !6146)
!6146 = distinct !DILocation(line: 47, column: 2, scope: !6122)
!6147 = !DILocation(line: 95, column: 2, scope: !6141, inlinedAt: !6146)
!6148 = !{i64 2510754}
!6149 = !DILocation(line: 51, column: 18, scope: !6122)
!6150 = !DILocation(line: 53, column: 2, scope: !6122)
!6151 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !6152, file: !6152, line: 1609, type: !3098, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !305, retainedNodes: !2162)
!6152 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6153 = !DILocation(line: 1611, column: 3, scope: !6151)
!6154 = !DILocation(line: 1612, column: 1, scope: !6151)
!6155 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !6152, file: !6152, line: 1629, type: !3098, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !305, retainedNodes: !2162)
!6156 = !DILocation(line: 1631, column: 3, scope: !6155)
!6157 = !DILocation(line: 1632, column: 1, scope: !6155)
!6158 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !359, file: !359, line: 26, type: !365, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !356, retainedNodes: !6159)
!6159 = !{!6160}
!6160 = !DILocalVariable(name: "dev", arg: 1, scope: !6158, file: !359, line: 26, type: !367)
!6161 = !DILocation(line: 0, scope: !6158)
!6162 = !DILocation(line: 68, column: 2, scope: !6158)
!6163 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !6164, file: !6164, line: 14, type: !4425, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2552, retainedNodes: !6165)
!6164 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6165 = !{!6166, !6167}
!6166 = !DILocalVariable(name: "fmt", arg: 1, scope: !6163, file: !6164, line: 14, type: !278)
!6167 = !DILocalVariable(name: "ap", scope: !6163, file: !6164, line: 16, type: !6168)
!6168 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3431, line: 99, baseType: !6169)
!6169 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3431, line: 40, baseType: !6170)
!6170 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !6164, baseType: !6171)
!6171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !6172)
!6172 = !{!6173}
!6173 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !6171, file: !6164, line: 16, baseType: !113, size: 32)
!6174 = !DILocation(line: 0, scope: !6163)
!6175 = !DILocation(line: 16, column: 2, scope: !6163)
!6176 = !DILocation(line: 16, column: 10, scope: !6163)
!6177 = !DILocation(line: 18, column: 2, scope: !6163)
!6178 = !DILocation(line: 19, column: 2, scope: !6163)
!6179 = !DILocation(line: 20, column: 2, scope: !6163)
!6180 = !DILocation(line: 21, column: 1, scope: !6163)
!6181 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !6164, file: !6164, line: 23, type: !6182, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2552, retainedNodes: !6184)
!6182 = !DISubroutineType(types: !6183)
!6183 = !{null, !278, !6168}
!6184 = !{!6185, !6186}
!6185 = !DILocalVariable(name: "fmt", arg: 1, scope: !6181, file: !6164, line: 23, type: !278)
!6186 = !DILocalVariable(name: "ap", arg: 2, scope: !6181, file: !6164, line: 23, type: !6168)
!6187 = !DILocation(line: 0, scope: !6181)
!6188 = !DILocation(line: 25, column: 2, scope: !6181)
!6189 = !DILocation(line: 26, column: 1, scope: !6181)
!6190 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !6164, file: !6164, line: 52, type: !6191, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2552, retainedNodes: !6193)
!6191 = !DISubroutineType(types: !6192)
!6192 = !{null, !119, !13, !239}
!6193 = !{!6194, !6195, !6196, !6197}
!6194 = !DILocalVariable(name: "level", arg: 1, scope: !6190, file: !6164, line: 52, type: !119)
!6195 = !DILocalVariable(name: "data", arg: 2, scope: !6190, file: !6164, line: 52, type: !13)
!6196 = !DILocalVariable(name: "size", arg: 3, scope: !6190, file: !6164, line: 52, type: !239)
!6197 = !DILocalVariable(name: "data_buffer", scope: !6190, file: !6164, line: 54, type: !278)
!6198 = !DILocation(line: 0, scope: !6190)
!6199 = !DILocation(line: 55, column: 14, scope: !6190)
!6200 = !DILocation(line: 55, column: 2, scope: !6190)
!6201 = !DILocation(line: 56, column: 3, scope: !6202)
!6202 = distinct !DILexicalBlock(scope: !6190, file: !6164, line: 55, column: 20)
!6203 = !DILocation(line: 57, column: 3, scope: !6202)
!6204 = !DILocation(line: 59, column: 7, scope: !6202)
!6205 = distinct !{!6205, !6200, !6206}
!6206 = !DILocation(line: 65, column: 2, scope: !6190)
!6207 = !DILocation(line: 66, column: 1, scope: !6190)
!6208 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !6209, file: !6209, line: 175, type: !6210, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2552, retainedNodes: !6212)
!6209 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6210 = !DISubroutineType(types: !6211)
!6211 = !{!107, !119}
!6212 = !{!6213}
!6213 = !DILocalVariable(name: "level", arg: 1, scope: !6208, file: !6209, line: 175, type: !119)
!6214 = !DILocation(line: 0, scope: !6208)
!6215 = !DILocation(line: 177, column: 2, scope: !6208)
!6216 = !DILocation(line: 189, column: 1, scope: !6208)
!6217 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !6164, file: !6164, line: 28, type: !6218, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2552, retainedNodes: !6220)
!6218 = !DISubroutineType(types: !6219)
!6219 = !{null, !278, !239}
!6220 = !{!6221, !6222, !6223, !6225, !6227}
!6221 = !DILocalVariable(name: "data", arg: 1, scope: !6217, file: !6164, line: 28, type: !278)
!6222 = !DILocalVariable(name: "length", arg: 2, scope: !6217, file: !6164, line: 28, type: !239)
!6223 = !DILocalVariable(name: "i", scope: !6224, file: !6164, line: 30, type: !239)
!6224 = distinct !DILexicalBlock(scope: !6217, file: !6164, line: 30, column: 2)
!6225 = !DILocalVariable(name: "i", scope: !6226, file: !6164, line: 40, type: !239)
!6226 = distinct !DILexicalBlock(scope: !6217, file: !6164, line: 40, column: 2)
!6227 = !DILocalVariable(name: "c", scope: !6228, file: !6164, line: 42, type: !186)
!6228 = distinct !DILexicalBlock(scope: !6229, file: !6164, line: 41, column: 19)
!6229 = distinct !DILexicalBlock(scope: !6230, file: !6164, line: 41, column: 7)
!6230 = distinct !DILexicalBlock(scope: !6231, file: !6164, line: 40, column: 54)
!6231 = distinct !DILexicalBlock(scope: !6226, file: !6164, line: 40, column: 2)
!6232 = !DILocation(line: 0, scope: !6217)
!6233 = !DILocation(line: 0, scope: !6224)
!6234 = !DILocation(line: 30, column: 2, scope: !6224)
!6235 = !DILocation(line: 38, column: 2, scope: !6217)
!6236 = !DILocation(line: 0, scope: !6226)
!6237 = !DILocation(line: 40, column: 2, scope: !6226)
!6238 = !DILocation(line: 31, column: 9, scope: !6239)
!6239 = distinct !DILexicalBlock(scope: !6240, file: !6164, line: 31, column: 7)
!6240 = distinct !DILexicalBlock(scope: !6241, file: !6164, line: 30, column: 54)
!6241 = distinct !DILexicalBlock(scope: !6224, file: !6164, line: 30, column: 2)
!6242 = !DILocation(line: 31, column: 7, scope: !6240)
!6243 = !DILocation(line: 32, column: 35, scope: !6244)
!6244 = distinct !DILexicalBlock(scope: !6239, file: !6164, line: 31, column: 19)
!6245 = !DILocation(line: 32, column: 20, scope: !6244)
!6246 = !DILocation(line: 32, column: 4, scope: !6244)
!6247 = !DILocation(line: 33, column: 3, scope: !6244)
!6248 = !DILocation(line: 34, column: 4, scope: !6249)
!6249 = distinct !DILexicalBlock(scope: !6239, file: !6164, line: 33, column: 10)
!6250 = !DILocation(line: 30, column: 50, scope: !6241)
!6251 = !DILocation(line: 30, column: 24, scope: !6241)
!6252 = distinct !{!6252, !6234, !6253}
!6253 = !DILocation(line: 36, column: 2, scope: !6224)
!6254 = !DILocation(line: 49, column: 2, scope: !6217)
!6255 = !DILocation(line: 50, column: 1, scope: !6217)
!6256 = !DILocation(line: 41, column: 9, scope: !6229)
!6257 = !DILocation(line: 41, column: 7, scope: !6230)
!6258 = !DILocation(line: 42, column: 22, scope: !6228)
!6259 = !DILocation(line: 0, scope: !6228)
!6260 = !DILocation(line: 44, column: 25, scope: !6228)
!6261 = !DILocation(line: 44, column: 17, scope: !6228)
!6262 = !DILocation(line: 44, column: 33, scope: !6228)
!6263 = !DILocation(line: 44, column: 4, scope: !6228)
!6264 = !DILocation(line: 45, column: 3, scope: !6228)
!6265 = !DILocation(line: 46, column: 4, scope: !6266)
!6266 = distinct !DILexicalBlock(scope: !6229, file: !6164, line: 45, column: 10)
!6267 = !DILocation(line: 40, column: 50, scope: !6231)
!6268 = !DILocation(line: 40, column: 24, scope: !6231)
!6269 = distinct !{!6269, !6237, !6270}
!6270 = !DILocation(line: 48, column: 2, scope: !6226)
!6271 = distinct !DISubprogram(name: "isprint", scope: !5215, file: !5215, line: 37, type: !301, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2552, retainedNodes: !6272)
!6272 = !{!6273}
!6273 = !DILocalVariable(name: "c", arg: 1, scope: !6271, file: !5215, line: 37, type: !119)
!6274 = !DILocation(line: 0, scope: !6271)
!6275 = !DILocation(line: 39, column: 38, scope: !6271)
!6276 = !DILocation(line: 39, column: 2, scope: !6271)
!6277 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6278, file: !6278, line: 57, type: !6279, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !6325)
!6278 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6279 = !DISubroutineType(types: !6280)
!6280 = !{null, !32, !6281}
!6281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6282, size: 32)
!6282 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6283)
!6283 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2675, line: 141, baseType: !6284)
!6284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2675, line: 97, size: 256, elements: !6285)
!6285 = !{!6286}
!6286 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6284, file: !2675, line: 107, baseType: !6287, size: 256)
!6287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2675, line: 98, size: 256, elements: !6288)
!6288 = !{!6289, !6294, !6299, !6304, !6309, !6314, !6319, !6324}
!6289 = !DIDerivedType(tag: DW_TAG_member, scope: !6287, file: !2675, line: 99, baseType: !6290, size: 32)
!6290 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6287, file: !2675, line: 99, size: 32, elements: !6291)
!6291 = !{!6292, !6293}
!6292 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6290, file: !2675, line: 99, baseType: !118, size: 32)
!6293 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6290, file: !2675, line: 99, baseType: !118, size: 32)
!6294 = !DIDerivedType(tag: DW_TAG_member, scope: !6287, file: !2675, line: 100, baseType: !6295, size: 32, offset: 32)
!6295 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6287, file: !2675, line: 100, size: 32, elements: !6296)
!6296 = !{!6297, !6298}
!6297 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6295, file: !2675, line: 100, baseType: !118, size: 32)
!6298 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6295, file: !2675, line: 100, baseType: !118, size: 32)
!6299 = !DIDerivedType(tag: DW_TAG_member, scope: !6287, file: !2675, line: 101, baseType: !6300, size: 32, offset: 64)
!6300 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6287, file: !2675, line: 101, size: 32, elements: !6301)
!6301 = !{!6302, !6303}
!6302 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6300, file: !2675, line: 101, baseType: !118, size: 32)
!6303 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6300, file: !2675, line: 101, baseType: !118, size: 32)
!6304 = !DIDerivedType(tag: DW_TAG_member, scope: !6287, file: !2675, line: 102, baseType: !6305, size: 32, offset: 96)
!6305 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6287, file: !2675, line: 102, size: 32, elements: !6306)
!6306 = !{!6307, !6308}
!6307 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6305, file: !2675, line: 102, baseType: !118, size: 32)
!6308 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6305, file: !2675, line: 102, baseType: !118, size: 32)
!6309 = !DIDerivedType(tag: DW_TAG_member, scope: !6287, file: !2675, line: 103, baseType: !6310, size: 32, offset: 128)
!6310 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6287, file: !2675, line: 103, size: 32, elements: !6311)
!6311 = !{!6312, !6313}
!6312 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6310, file: !2675, line: 103, baseType: !118, size: 32)
!6313 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6310, file: !2675, line: 103, baseType: !118, size: 32)
!6314 = !DIDerivedType(tag: DW_TAG_member, scope: !6287, file: !2675, line: 104, baseType: !6315, size: 32, offset: 160)
!6315 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6287, file: !2675, line: 104, size: 32, elements: !6316)
!6316 = !{!6317, !6318}
!6317 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6315, file: !2675, line: 104, baseType: !118, size: 32)
!6318 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6315, file: !2675, line: 104, baseType: !118, size: 32)
!6319 = !DIDerivedType(tag: DW_TAG_member, scope: !6287, file: !2675, line: 105, baseType: !6320, size: 32, offset: 192)
!6320 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6287, file: !2675, line: 105, size: 32, elements: !6321)
!6321 = !{!6322, !6323}
!6322 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6320, file: !2675, line: 105, baseType: !118, size: 32)
!6323 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6320, file: !2675, line: 105, baseType: !118, size: 32)
!6324 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6287, file: !2675, line: 106, baseType: !118, size: 32, offset: 224)
!6325 = !{!6326, !6327}
!6326 = !DILocalVariable(name: "reason", arg: 1, scope: !6277, file: !6278, line: 57, type: !32)
!6327 = !DILocalVariable(name: "esf", arg: 2, scope: !6277, file: !6278, line: 57, type: !6281)
!6328 = !DILocation(line: 0, scope: !6277)
!6329 = !DILocation(line: 60, column: 10, scope: !6330)
!6330 = distinct !DILexicalBlock(scope: !6277, file: !6278, line: 60, column: 6)
!6331 = !DILocation(line: 60, column: 6, scope: !6277)
!6332 = !DILocation(line: 61, column: 3, scope: !6333)
!6333 = distinct !DILexicalBlock(scope: !6330, file: !6278, line: 60, column: 19)
!6334 = !DILocation(line: 62, column: 2, scope: !6333)
!6335 = !DILocation(line: 63, column: 2, scope: !6277)
!6336 = !DILocation(line: 64, column: 1, scope: !6277)
!6337 = distinct !DISubprogram(name: "esf_dump", scope: !6278, file: !6278, line: 20, type: !6338, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !6340)
!6338 = !DISubroutineType(types: !6339)
!6339 = !{null, !6281}
!6340 = !{!6341}
!6341 = !DILocalVariable(name: "esf", arg: 1, scope: !6337, file: !6278, line: 20, type: !6281)
!6342 = !DILocation(line: 0, scope: !6337)
!6343 = !DILocation(line: 22, column: 2, scope: !6344)
!6344 = distinct !DILexicalBlock(scope: !6345, file: !6278, line: 22, column: 2)
!6345 = distinct !DILexicalBlock(scope: !6346, file: !6278, line: 22, column: 2)
!6346 = distinct !DILexicalBlock(scope: !6347, file: !6278, line: 22, column: 2)
!6347 = distinct !DILexicalBlock(scope: !6337, file: !6278, line: 22, column: 2)
!6348 = !DILocation(line: 24, column: 2, scope: !6349)
!6349 = distinct !DILexicalBlock(scope: !6350, file: !6278, line: 24, column: 2)
!6350 = distinct !DILexicalBlock(scope: !6351, file: !6278, line: 24, column: 2)
!6351 = distinct !DILexicalBlock(scope: !6352, file: !6278, line: 24, column: 2)
!6352 = distinct !DILexicalBlock(scope: !6337, file: !6278, line: 24, column: 2)
!6353 = !DILocation(line: 26, column: 2, scope: !6354)
!6354 = distinct !DILexicalBlock(scope: !6355, file: !6278, line: 26, column: 2)
!6355 = distinct !DILexicalBlock(scope: !6356, file: !6278, line: 26, column: 2)
!6356 = distinct !DILexicalBlock(scope: !6357, file: !6278, line: 26, column: 2)
!6357 = distinct !DILexicalBlock(scope: !6337, file: !6278, line: 26, column: 2)
!6358 = !DILocation(line: 53, column: 2, scope: !6359)
!6359 = distinct !DILexicalBlock(scope: !6360, file: !6278, line: 53, column: 2)
!6360 = distinct !DILexicalBlock(scope: !6361, file: !6278, line: 53, column: 2)
!6361 = distinct !DILexicalBlock(scope: !6362, file: !6278, line: 53, column: 2)
!6362 = distinct !DILexicalBlock(scope: !6337, file: !6278, line: 53, column: 2)
!6363 = !DILocation(line: 55, column: 1, scope: !6337)
!6364 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6278, file: !6278, line: 82, type: !6365, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !6380)
!6365 = !DISubroutineType(types: !6366)
!6366 = !{null, !6281, !6367}
!6367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6368, size: 32)
!6368 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !216, line: 37, baseType: !6369)
!6369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !6370)
!6370 = !{!6371, !6372, !6373, !6374, !6375, !6376, !6377, !6378, !6379}
!6371 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6369, file: !216, line: 26, baseType: !118, size: 32)
!6372 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6369, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!6373 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6369, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!6374 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6369, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!6375 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6369, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!6376 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6369, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!6377 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6369, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!6378 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6369, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!6379 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6369, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!6380 = !{!6381, !6382, !6383}
!6381 = !DILocalVariable(name: "esf", arg: 1, scope: !6364, file: !6278, line: 82, type: !6281)
!6382 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6364, file: !6278, line: 82, type: !6367)
!6383 = !DILocalVariable(name: "reason", scope: !6364, file: !6278, line: 88, type: !32)
!6384 = !DILocation(line: 0, scope: !6364)
!6385 = !DILocation(line: 88, column: 35, scope: !6364)
!6386 = !DILocation(line: 108, column: 2, scope: !6364)
!6387 = !DILocation(line: 131, column: 1, scope: !6364)
!6388 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6278, file: !6278, line: 133, type: !6389, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2555, retainedNodes: !6391)
!6389 = !DISubroutineType(types: !6390)
!6390 = !{null, !113}
!6391 = !{!6392, !6393, !6394}
!6392 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6388, file: !6278, line: 133, type: !113)
!6393 = !DILocalVariable(name: "ssf_contents", scope: !6388, file: !6278, line: 135, type: !908)
!6394 = !DILocalVariable(name: "oops_esf", scope: !6388, file: !6278, line: 136, type: !6283)
!6395 = !DILocation(line: 0, scope: !6388)
!6396 = !DILocation(line: 136, column: 2, scope: !6388)
!6397 = !DILocation(line: 136, column: 15, scope: !6388)
!6398 = !DILocation(line: 139, column: 22, scope: !6388)
!6399 = !DILocation(line: 139, column: 17, scope: !6388)
!6400 = !DILocation(line: 139, column: 20, scope: !6388)
!6401 = !DILocation(line: 141, column: 2, scope: !6388)
!6402 = !DILocation(line: 142, column: 2, scope: !6388)
!6403 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6404, file: !6404, line: 40, type: !6142, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !6405)
!6404 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6405 = !{!6406}
!6406 = !DILocalVariable(name: "irq", arg: 1, scope: !6403, file: !6404, line: 40, type: !32)
!6407 = !DILocation(line: 0, scope: !6403)
!6408 = !DILocation(line: 42, column: 2, scope: !6403)
!6409 = !DILocation(line: 43, column: 1, scope: !6403)
!6410 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !533, file: !533, line: 1684, type: !6411, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !6413)
!6411 = !DISubroutineType(types: !6412)
!6412 = !{null, !800}
!6413 = !{!6414}
!6414 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6410, file: !533, line: 1684, type: !800)
!6415 = !DILocation(line: 0, scope: !6410)
!6416 = !DILocation(line: 1686, column: 23, scope: !6417)
!6417 = distinct !DILexicalBlock(scope: !6410, file: !533, line: 1686, column: 7)
!6418 = !DILocation(line: 1686, column: 7, scope: !6410)
!6419 = !DILocation(line: 1688, column: 5, scope: !6420)
!6420 = distinct !DILexicalBlock(scope: !6417, file: !533, line: 1687, column: 3)
!6421 = !{i64 2151642760}
!6422 = !DILocation(line: 1689, column: 81, scope: !6420)
!6423 = !DILocation(line: 1689, column: 60, scope: !6420)
!6424 = !DILocation(line: 1689, column: 34, scope: !6420)
!6425 = !DILocation(line: 1689, column: 5, scope: !6420)
!6426 = !DILocation(line: 1689, column: 43, scope: !6420)
!6427 = !DILocation(line: 1690, column: 5, scope: !6420)
!6428 = !{i64 2151642874}
!6429 = !DILocation(line: 1691, column: 3, scope: !6420)
!6430 = !DILocation(line: 1692, column: 1, scope: !6410)
!6431 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6404, file: !6404, line: 45, type: !6142, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !6432)
!6432 = !{!6433}
!6433 = !DILocalVariable(name: "irq", arg: 1, scope: !6431, file: !6404, line: 45, type: !32)
!6434 = !DILocation(line: 0, scope: !6431)
!6435 = !DILocation(line: 47, column: 2, scope: !6431)
!6436 = !DILocation(line: 48, column: 1, scope: !6431)
!6437 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !533, file: !533, line: 1722, type: !6411, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !6438)
!6438 = !{!6439}
!6439 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6437, file: !533, line: 1722, type: !800)
!6440 = !DILocation(line: 0, scope: !6437)
!6441 = !DILocation(line: 1724, column: 23, scope: !6442)
!6442 = distinct !DILexicalBlock(scope: !6437, file: !533, line: 1724, column: 7)
!6443 = !DILocation(line: 1724, column: 7, scope: !6437)
!6444 = !DILocation(line: 1726, column: 81, scope: !6445)
!6445 = distinct !DILexicalBlock(scope: !6442, file: !533, line: 1725, column: 3)
!6446 = !DILocation(line: 1726, column: 60, scope: !6445)
!6447 = !DILocation(line: 1726, column: 34, scope: !6445)
!6448 = !DILocation(line: 1726, column: 5, scope: !6445)
!6449 = !DILocation(line: 1726, column: 43, scope: !6445)
!6450 = !DILocation(line: 271, column: 3, scope: !6451, inlinedAt: !6453)
!6451 = distinct !DISubprogram(name: "__DSB", scope: !6452, file: !6452, line: 269, type: !3098, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !2162)
!6452 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6453 = distinct !DILocation(line: 1727, column: 5, scope: !6445)
!6454 = !{i64 4097143}
!6455 = !DILocation(line: 260, column: 3, scope: !6456, inlinedAt: !6457)
!6456 = distinct !DISubprogram(name: "__ISB", scope: !6452, file: !6452, line: 258, type: !3098, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !2162)
!6457 = distinct !DILocation(line: 1728, column: 5, scope: !6445)
!6458 = !{i64 4096860}
!6459 = !DILocation(line: 1729, column: 3, scope: !6445)
!6460 = !DILocation(line: 1730, column: 1, scope: !6437)
!6461 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6404, file: !6404, line: 50, type: !6462, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !6464)
!6462 = !DISubroutineType(types: !6463)
!6463 = !{!119, !32}
!6464 = !{!6465}
!6465 = !DILocalVariable(name: "irq", arg: 1, scope: !6461, file: !6404, line: 50, type: !32)
!6466 = !DILocation(line: 0, scope: !6461)
!6467 = !DILocation(line: 52, column: 20, scope: !6461)
!6468 = !DILocation(line: 52, column: 9, scope: !6461)
!6469 = !DILocation(line: 52, column: 41, scope: !6461)
!6470 = !DILocation(line: 52, column: 39, scope: !6461)
!6471 = !DILocation(line: 52, column: 2, scope: !6461)
!6472 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6404, file: !6404, line: 64, type: !6473, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !6475)
!6473 = !DISubroutineType(types: !6474)
!6474 = !{null, !32, !32, !118}
!6475 = !{!6476, !6477, !6478}
!6476 = !DILocalVariable(name: "irq", arg: 1, scope: !6472, file: !6404, line: 64, type: !32)
!6477 = !DILocalVariable(name: "prio", arg: 2, scope: !6472, file: !6404, line: 64, type: !32)
!6478 = !DILocalVariable(name: "flags", arg: 3, scope: !6472, file: !6404, line: 64, type: !118)
!6479 = !DILocation(line: 0, scope: !6472)
!6480 = !DILocation(line: 83, column: 8, scope: !6481)
!6481 = distinct !DILexicalBlock(scope: !6482, file: !6404, line: 82, column: 9)
!6482 = distinct !DILexicalBlock(scope: !6472, file: !6404, line: 76, column: 6)
!6483 = !DILocation(line: 91, column: 2, scope: !6484)
!6484 = distinct !DILexicalBlock(scope: !6485, file: !6404, line: 91, column: 2)
!6485 = distinct !DILexicalBlock(scope: !6472, file: !6404, line: 91, column: 2)
!6486 = !DILocation(line: 91, column: 2, scope: !6485)
!6487 = !DILocation(line: 91, column: 2, scope: !6488)
!6488 = distinct !DILexicalBlock(scope: !6484, file: !6404, line: 91, column: 2)
!6489 = !DILocation(line: 95, column: 2, scope: !6472)
!6490 = !DILocation(line: 96, column: 1, scope: !6472)
!6491 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !533, file: !533, line: 1814, type: !6492, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !6494)
!6492 = !DISubroutineType(types: !6493)
!6493 = !{null, !800, !118}
!6494 = !{!6495, !6496}
!6495 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6491, file: !533, line: 1814, type: !800)
!6496 = !DILocalVariable(name: "priority", arg: 2, scope: !6491, file: !533, line: 1814, type: !118)
!6497 = !DILocation(line: 0, scope: !6491)
!6498 = !DILocation(line: 0, scope: !6499)
!6499 = distinct !DILexicalBlock(scope: !6491, file: !533, line: 1816, column: 7)
!6500 = !DILocation(line: 1816, column: 7, scope: !6491)
!6501 = !DILocation(line: 1824, column: 1, scope: !6491)
!6502 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6404, file: !6404, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !6503)
!6503 = !{!6504}
!6504 = !DILocalVariable(name: "unused", arg: 1, scope: !6502, file: !6404, line: 155, type: !13)
!6505 = !DILocation(line: 0, scope: !6502)
!6506 = !DILocation(line: 159, column: 2, scope: !6502)
!6507 = !DILocation(line: 160, column: 1, scope: !6502)
!6508 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6509, file: !6509, line: 87, type: !3098, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2612, retainedNodes: !2162)
!6509 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6510 = !DILocation(line: 89, column: 2, scope: !6508)
!6511 = !DILocation(line: 90, column: 2, scope: !6508)
!6512 = !DILocation(line: 91, column: 1, scope: !6508)
!6513 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6509, file: !6509, line: 23, type: !3098, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2162)
!6514 = !DISubprogram(name: "z_arm_int_exit", scope: !6515, file: !6515, line: 153, type: !3098, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2162)
!6515 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6516 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6517, file: !6517, line: 256, type: !3098, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2614, retainedNodes: !2162)
!6517 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6518 = !DILocation(line: 258, column: 2, scope: !6516)
!6519 = !DILocation(line: 260, column: 2, scope: !6516)
!6520 = !DILocation(line: 262, column: 2, scope: !6516)
!6521 = !DILocation(line: 263, column: 2, scope: !6516)
!6522 = !DILocation(line: 267, column: 2, scope: !6516)
!6523 = !DILocation(line: 268, column: 2, scope: !6516)
!6524 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6517, file: !6517, line: 53, type: !3098, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2614, retainedNodes: !2162)
!6525 = !DILocation(line: 55, column: 12, scope: !6524)
!6526 = !DILocation(line: 271, column: 3, scope: !6527, inlinedAt: !6528)
!6527 = distinct !DISubprogram(name: "__DSB", scope: !6452, file: !6452, line: 269, type: !3098, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2614, retainedNodes: !2162)
!6528 = distinct !DILocation(line: 56, column: 2, scope: !6524)
!6529 = !{i64 4095814}
!6530 = !DILocation(line: 260, column: 3, scope: !6531, inlinedAt: !6532)
!6531 = distinct !DISubprogram(name: "__ISB", scope: !6452, file: !6452, line: 258, type: !3098, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2614, retainedNodes: !2162)
!6532 = distinct !DILocation(line: 57, column: 2, scope: !6524)
!6533 = !{i64 4095531}
!6534 = !DILocation(line: 58, column: 1, scope: !6524)
!6535 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !6517, file: !6517, line: 96, type: !3098, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2614, retainedNodes: !2162)
!6536 = !DILocation(line: 103, column: 13, scope: !6535)
!6537 = !DILocation(line: 975, column: 3, scope: !6538, inlinedAt: !6541)
!6538 = distinct !DISubprogram(name: "__get_CONTROL", scope: !6452, file: !6452, line: 971, type: !3336, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2614, retainedNodes: !6539)
!6539 = !{!6540}
!6540 = !DILocalVariable(name: "result", scope: !6538, file: !6452, line: 973, type: !118)
!6541 = distinct !DILocation(line: 189, column: 16, scope: !6535)
!6542 = !{i64 4116644}
!6543 = !DILocation(line: 0, scope: !6538, inlinedAt: !6541)
!6544 = !DILocation(line: 189, column: 32, scope: !6535)
!6545 = !DILocalVariable(name: "control", arg: 1, scope: !6546, file: !6452, line: 1001, type: !118)
!6546 = distinct !DISubprogram(name: "__set_CONTROL", scope: !6452, file: !6452, line: 1001, type: !6547, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2614, retainedNodes: !6549)
!6547 = !DISubroutineType(types: !6548)
!6548 = !{null, !118}
!6549 = !{!6545}
!6550 = !DILocation(line: 0, scope: !6546, inlinedAt: !6551)
!6551 = distinct !DILocation(line: 189, column: 2, scope: !6535)
!6552 = !DILocation(line: 1003, column: 3, scope: !6546, inlinedAt: !6551)
!6553 = !{i64 4117364}
!6554 = !DILocation(line: 260, column: 3, scope: !6531, inlinedAt: !6555)
!6555 = distinct !DILocation(line: 1004, column: 3, scope: !6546, inlinedAt: !6551)
!6556 = !DILocation(line: 191, column: 1, scope: !6535)
!6557 = distinct !DISubprogram(name: "arch_swap", scope: !6558, file: !6558, line: 33, type: !6462, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2642, retainedNodes: !6559)
!6558 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6559 = !{!6560}
!6560 = !DILocalVariable(name: "key", arg: 1, scope: !6557, file: !6558, line: 33, type: !32)
!6561 = !DILocation(line: 0, scope: !6557)
!6562 = !DILocation(line: 36, column: 2, scope: !6557)
!6563 = !DILocation(line: 36, column: 17, scope: !6557)
!6564 = !DILocation(line: 36, column: 25, scope: !6557)
!6565 = !DILocation(line: 37, column: 37, scope: !6557)
!6566 = !DILocation(line: 37, column: 17, scope: !6557)
!6567 = !DILocation(line: 37, column: 35, scope: !6557)
!6568 = !DILocation(line: 41, column: 12, scope: !6557)
!6569 = !DILocalVariable(name: "key", arg: 1, scope: !6570, file: !6131, line: 84, type: !32)
!6570 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6131, file: !6131, line: 84, type: !6142, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2642, retainedNodes: !6571)
!6571 = !{!6569}
!6572 = !DILocation(line: 0, scope: !6570, inlinedAt: !6573)
!6573 = distinct !DILocation(line: 44, column: 2, scope: !6557)
!6574 = !DILocation(line: 95, column: 2, scope: !6570, inlinedAt: !6573)
!6575 = !{i64 2596658}
!6576 = !DILocation(line: 53, column: 9, scope: !6557)
!6577 = !DILocation(line: 53, column: 24, scope: !6557)
!6578 = !DILocation(line: 53, column: 2, scope: !6557)
!6579 = distinct !DISubprogram(name: "arch_new_thread", scope: !6580, file: !6580, line: 56, type: !6581, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2670, retainedNodes: !6691)
!6580 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6581 = !DISubroutineType(types: !6582)
!6582 = !{null, !6583, !6686, !106, !108, !113, !113, !113}
!6583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6584, size: 32)
!6584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !143, line: 245, size: 1280, elements: !6585)
!6585 = !{!6586, !6644, !6656, !6657, !6658, !6659, !6660, !6666, !6681}
!6586 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6584, file: !143, line: 247, baseType: !6587, size: 384)
!6587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !143, line: 57, size: 384, elements: !6588)
!6588 = !{!6589, !6613, !6620, !6621, !6622, !6631, !6632, !6633}
!6589 = !DIDerivedType(tag: DW_TAG_member, scope: !6587, file: !143, line: 60, baseType: !6590, size: 64)
!6590 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6587, file: !143, line: 60, size: 64, elements: !6591)
!6591 = !{!6592, !6607}
!6592 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6590, file: !143, line: 61, baseType: !6593, size: 64)
!6593 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !153, line: 49, baseType: !6594)
!6594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !6595)
!6595 = !{!6596, !6602}
!6596 = !DIDerivedType(tag: DW_TAG_member, scope: !6594, file: !153, line: 38, baseType: !6597, size: 32)
!6597 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6594, file: !153, line: 38, size: 32, elements: !6598)
!6598 = !{!6599, !6601}
!6599 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6597, file: !153, line: 39, baseType: !6600, size: 32)
!6600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6594, size: 32)
!6601 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6597, file: !153, line: 40, baseType: !6600, size: 32)
!6602 = !DIDerivedType(tag: DW_TAG_member, scope: !6594, file: !153, line: 42, baseType: !6603, size: 32, offset: 32)
!6603 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6594, file: !153, line: 42, size: 32, elements: !6604)
!6604 = !{!6605, !6606}
!6605 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6603, file: !153, line: 43, baseType: !6600, size: 32)
!6606 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6603, file: !153, line: 44, baseType: !6600, size: 32)
!6607 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6590, file: !143, line: 62, baseType: !6608, size: 64)
!6608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !169, line: 49, size: 64, elements: !6609)
!6609 = !{!6610}
!6610 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6608, file: !169, line: 50, baseType: !6611, size: 64)
!6611 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6612, size: 64, elements: !174)
!6612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6608, size: 32)
!6613 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6587, file: !143, line: 68, baseType: !6614, size: 32, offset: 64)
!6614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6615, size: 32)
!6615 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !179, line: 233, baseType: !6616)
!6616 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !179, line: 231, size: 64, elements: !6617)
!6617 = !{!6618}
!6618 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6616, file: !179, line: 232, baseType: !6619, size: 64)
!6619 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !6594)
!6620 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6587, file: !143, line: 71, baseType: !185, size: 8, offset: 96)
!6621 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6587, file: !143, line: 74, baseType: !185, size: 8, offset: 104)
!6622 = !DIDerivedType(tag: DW_TAG_member, scope: !6587, file: !143, line: 90, baseType: !6623, size: 16, offset: 112)
!6623 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6587, file: !143, line: 90, size: 16, elements: !6624)
!6624 = !{!6625, !6630}
!6625 = !DIDerivedType(tag: DW_TAG_member, scope: !6623, file: !143, line: 91, baseType: !6626, size: 16)
!6626 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6623, file: !143, line: 91, size: 16, elements: !6627)
!6627 = !{!6628, !6629}
!6628 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6626, file: !143, line: 96, baseType: !195, size: 8)
!6629 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6626, file: !143, line: 97, baseType: !185, size: 8, offset: 8)
!6630 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6623, file: !143, line: 100, baseType: !199, size: 16)
!6631 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6587, file: !143, line: 107, baseType: !118, size: 32, offset: 128)
!6632 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6587, file: !143, line: 127, baseType: !113, size: 32, offset: 160)
!6633 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6587, file: !143, line: 131, baseType: !6634, size: 192, offset: 192)
!6634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !179, line: 244, size: 192, elements: !6635)
!6635 = !{!6636, !6637, !6643}
!6636 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6634, file: !179, line: 245, baseType: !6593, size: 64)
!6637 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6634, file: !179, line: 246, baseType: !6638, size: 32, offset: 64)
!6638 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !179, line: 242, baseType: !6639)
!6639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6640, size: 32)
!6640 = !DISubroutineType(types: !6641)
!6641 = !{null, !6642}
!6642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6634, size: 32)
!6643 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6634, file: !179, line: 249, baseType: !116, size: 64, offset: 128)
!6644 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6584, file: !143, line: 250, baseType: !6645, size: 288, offset: 384)
!6645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !6646)
!6646 = !{!6647, !6648, !6649, !6650, !6651, !6652, !6653, !6654, !6655}
!6647 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6645, file: !216, line: 26, baseType: !118, size: 32)
!6648 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6645, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!6649 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6645, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!6650 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6645, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!6651 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6645, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!6652 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6645, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!6653 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6645, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!6654 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6645, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!6655 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6645, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!6656 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6584, file: !143, line: 253, baseType: !113, size: 32, offset: 672)
!6657 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6584, file: !143, line: 256, baseType: !6615, size: 64, offset: 704)
!6658 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6584, file: !143, line: 279, baseType: !230, size: 256, offset: 768)
!6659 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6584, file: !143, line: 294, baseType: !119, size: 32, offset: 1024)
!6660 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6584, file: !143, line: 300, baseType: !6661, size: 96, offset: 1056)
!6661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !143, line: 149, size: 96, elements: !6662)
!6662 = !{!6663, !6664, !6665}
!6663 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6661, file: !143, line: 153, baseType: !22, size: 32)
!6664 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6661, file: !143, line: 162, baseType: !239, size: 32, offset: 32)
!6665 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6661, file: !143, line: 168, baseType: !239, size: 32, offset: 64)
!6666 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6584, file: !143, line: 325, baseType: !6667, size: 32, offset: 1152)
!6667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6668, size: 32)
!6668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !245, line: 5073, size: 192, elements: !6669)
!6669 = !{!6670, !6676, !6677}
!6670 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6668, file: !245, line: 5074, baseType: !6671, size: 96)
!6671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !249, line: 56, size: 96, elements: !6672)
!6672 = !{!6673, !6674, !6675}
!6673 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6671, file: !249, line: 57, baseType: !252, size: 32)
!6674 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6671, file: !249, line: 58, baseType: !113, size: 32, offset: 32)
!6675 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6671, file: !249, line: 59, baseType: !239, size: 32, offset: 64)
!6676 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6668, file: !245, line: 5075, baseType: !6615, size: 64, offset: 96)
!6677 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6668, file: !245, line: 5076, baseType: !6678, size: 32, offset: 160)
!6678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !6679)
!6679 = !{!6680}
!6680 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !6678, file: !259, line: 52, baseType: !22, size: 32)
!6681 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6584, file: !143, line: 343, baseType: !6682, size: 64, offset: 1184)
!6682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !216, line: 60, size: 64, elements: !6683)
!6683 = !{!6684, !6685}
!6684 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6682, file: !216, line: 63, baseType: !118, size: 32)
!6685 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6682, file: !216, line: 66, baseType: !118, size: 32, offset: 32)
!6686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6687, size: 32)
!6687 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !109, line: 44, baseType: !6688)
!6688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !128, line: 47, size: 8, elements: !6689)
!6689 = !{!6690}
!6690 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6688, file: !128, line: 48, baseType: !107, size: 8)
!6691 = !{!6692, !6693, !6694, !6695, !6696, !6697, !6698, !6699}
!6692 = !DILocalVariable(name: "thread", arg: 1, scope: !6579, file: !6580, line: 56, type: !6583)
!6693 = !DILocalVariable(name: "stack", arg: 2, scope: !6579, file: !6580, line: 56, type: !6686)
!6694 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6579, file: !6580, line: 57, type: !106)
!6695 = !DILocalVariable(name: "entry", arg: 4, scope: !6579, file: !6580, line: 57, type: !108)
!6696 = !DILocalVariable(name: "p1", arg: 5, scope: !6579, file: !6580, line: 58, type: !113)
!6697 = !DILocalVariable(name: "p2", arg: 6, scope: !6579, file: !6580, line: 58, type: !113)
!6698 = !DILocalVariable(name: "p3", arg: 7, scope: !6579, file: !6580, line: 58, type: !113)
!6699 = !DILocalVariable(name: "iframe", scope: !6579, file: !6580, line: 60, type: !2673)
!6700 = !DILocation(line: 0, scope: !6579)
!6701 = !DILocation(line: 85, column: 11, scope: !6579)
!6702 = !DILocation(line: 93, column: 10, scope: !6579)
!6703 = !DILocation(line: 98, column: 13, scope: !6579)
!6704 = !DILocation(line: 100, column: 15, scope: !6579)
!6705 = !DILocation(line: 100, column: 10, scope: !6579)
!6706 = !DILocation(line: 100, column: 13, scope: !6579)
!6707 = !DILocation(line: 101, column: 15, scope: !6579)
!6708 = !DILocation(line: 101, column: 10, scope: !6579)
!6709 = !DILocation(line: 101, column: 13, scope: !6579)
!6710 = !DILocation(line: 102, column: 15, scope: !6579)
!6711 = !DILocation(line: 102, column: 10, scope: !6579)
!6712 = !DILocation(line: 102, column: 13, scope: !6579)
!6713 = !DILocation(line: 103, column: 15, scope: !6579)
!6714 = !DILocation(line: 103, column: 10, scope: !6579)
!6715 = !DILocation(line: 103, column: 13, scope: !6579)
!6716 = !DILocation(line: 106, column: 10, scope: !6579)
!6717 = !DILocation(line: 106, column: 15, scope: !6579)
!6718 = !DILocation(line: 122, column: 29, scope: !6579)
!6719 = !DILocation(line: 122, column: 23, scope: !6579)
!6720 = !DILocation(line: 122, column: 27, scope: !6579)
!6721 = !DILocation(line: 123, column: 15, scope: !6579)
!6722 = !DILocation(line: 123, column: 23, scope: !6579)
!6723 = !DILocation(line: 143, column: 1, scope: !6579)
!6724 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6580, file: !6580, line: 385, type: !6725, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2670, retainedNodes: !6728)
!6725 = !DISubroutineType(types: !6726)
!6726 = !{!118, !6727, !6727}
!6727 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !118)
!6728 = !{!6729, !6730, !6731, !6734}
!6729 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !6724, file: !6580, line: 385, type: !6727)
!6730 = !DILocalVariable(name: "psp", arg: 2, scope: !6724, file: !6580, line: 385, type: !6727)
!6731 = !DILocalVariable(name: "thread", scope: !6724, file: !6580, line: 388, type: !6732)
!6732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6733, size: 32)
!6733 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6584)
!6734 = !DILocalVariable(name: "guard_len", scope: !6724, file: !6580, line: 405, type: !118)
!6735 = !DILocation(line: 0, scope: !6724)
!6736 = !DILocation(line: 388, column: 34, scope: !6724)
!6737 = !DILocation(line: 390, column: 13, scope: !6738)
!6738 = distinct !DILexicalBlock(scope: !6724, file: !6580, line: 390, column: 6)
!6739 = !DILocation(line: 390, column: 6, scope: !6724)
!6740 = !DILocation(line: 438, column: 6, scope: !6741)
!6741 = distinct !DILexicalBlock(scope: !6724, file: !6580, line: 438, column: 6)
!6742 = !DILocation(line: 438, column: 6, scope: !6724)
!6743 = !DILocation(line: 442, column: 3, scope: !6744)
!6744 = distinct !DILexicalBlock(scope: !6741, file: !6580, line: 440, column: 22)
!6745 = !DILocation(line: 455, column: 1, scope: !6724)
!6746 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6580, file: !6580, line: 530, type: !6747, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2670, retainedNodes: !6749)
!6747 = !DISubroutineType(types: !6748)
!6748 = !{null, !6583, !106, !108}
!6749 = !{!6750, !6751, !6752}
!6750 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6746, file: !6580, line: 530, type: !6583)
!6751 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6746, file: !6580, line: 530, type: !106)
!6752 = !DILocalVariable(name: "_main", arg: 3, scope: !6746, file: !6580, line: 531, type: !108)
!6753 = !DILocation(line: 0, scope: !6746)
!6754 = !DILocation(line: 535, column: 11, scope: !6746)
!6755 = !DILocation(line: 560, column: 2, scope: !6746)
!6756 = !DILocation(line: 576, column: 2, scope: !6746)
!6757 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6758 = !DILocation(line: 603, column: 2, scope: !6746)
!6759 = distinct !DISubprogram(name: "z_arm_fault", scope: !6760, file: !6760, line: 1036, type: !6761, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !6776)
!6760 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6761 = !DISubroutineType(types: !6762)
!6762 = !{null, !118, !118, !118, !6763}
!6763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6764, size: 32)
!6764 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !216, line: 37, baseType: !6765)
!6765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !6766)
!6766 = !{!6767, !6768, !6769, !6770, !6771, !6772, !6773, !6774, !6775}
!6767 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6765, file: !216, line: 26, baseType: !118, size: 32)
!6768 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6765, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!6769 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6765, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!6770 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6765, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!6771 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6765, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!6772 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6765, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!6773 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6765, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!6774 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6765, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!6775 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6765, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!6776 = !{!6777, !6778, !6779, !6780, !6781, !6782, !6783, !6784, !6785, !6786}
!6777 = !DILocalVariable(name: "msp", arg: 1, scope: !6759, file: !6760, line: 1036, type: !118)
!6778 = !DILocalVariable(name: "psp", arg: 2, scope: !6759, file: !6760, line: 1036, type: !118)
!6779 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6759, file: !6760, line: 1036, type: !118)
!6780 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6759, file: !6760, line: 1037, type: !6763)
!6781 = !DILocalVariable(name: "reason", scope: !6759, file: !6760, line: 1039, type: !118)
!6782 = !DILocalVariable(name: "fault", scope: !6759, file: !6760, line: 1040, type: !119)
!6783 = !DILocalVariable(name: "recoverable", scope: !6759, file: !6760, line: 1041, type: !345)
!6784 = !DILocalVariable(name: "nested_exc", scope: !6759, file: !6760, line: 1041, type: !345)
!6785 = !DILocalVariable(name: "esf", scope: !6759, file: !6760, line: 1042, type: !2741)
!6786 = !DILocalVariable(name: "esf_copy", scope: !6759, file: !6760, line: 1047, type: !2742)
!6787 = !DILocation(line: 0, scope: !6759)
!6788 = !DILocation(line: 1040, column: 19, scope: !6759)
!6789 = !DILocation(line: 1041, column: 2, scope: !6759)
!6790 = !DILocation(line: 1047, column: 2, scope: !6759)
!6791 = !DILocation(line: 1047, column: 15, scope: !6759)
!6792 = !DILocalVariable(name: "key", arg: 1, scope: !6793, file: !6131, line: 84, type: !32)
!6793 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6131, file: !6131, line: 84, type: !6142, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !6794)
!6794 = !{!6792}
!6795 = !DILocation(line: 0, scope: !6793, inlinedAt: !6796)
!6796 = distinct !DILocation(line: 1050, column: 2, scope: !6759)
!6797 = !DILocation(line: 95, column: 2, scope: !6793, inlinedAt: !6796)
!6798 = !{i64 2629902}
!6799 = !DILocation(line: 1055, column: 9, scope: !6759)
!6800 = !DILocation(line: 1056, column: 2, scope: !6801)
!6801 = distinct !DILexicalBlock(scope: !6802, file: !6760, line: 1056, column: 2)
!6802 = distinct !DILexicalBlock(scope: !6759, file: !6760, line: 1056, column: 2)
!6803 = !DILocation(line: 1056, column: 2, scope: !6802)
!6804 = !DILocation(line: 1056, column: 2, scope: !6805)
!6805 = distinct !DILexicalBlock(scope: !6801, file: !6760, line: 1056, column: 2)
!6806 = !DILocation(line: 1040, column: 24, scope: !6759)
!6807 = !DILocation(line: 1063, column: 11, scope: !6759)
!6808 = !DILocation(line: 1064, column: 6, scope: !6809)
!6809 = distinct !DILexicalBlock(scope: !6759, file: !6760, line: 1064, column: 6)
!6810 = !{i8 0, i8 2}
!6811 = !DILocation(line: 1064, column: 6, scope: !6759)
!6812 = !DILocation(line: 1070, column: 20, scope: !6759)
!6813 = !DILocation(line: 1070, column: 2, scope: !6759)
!6814 = !DILocation(line: 1089, column: 6, scope: !6815)
!6815 = distinct !DILexicalBlock(scope: !6759, file: !6760, line: 1089, column: 6)
!6816 = !DILocation(line: 0, scope: !6815)
!6817 = !DILocation(line: 1089, column: 6, scope: !6759)
!6818 = !DILocation(line: 1090, column: 28, scope: !6819)
!6819 = distinct !DILexicalBlock(scope: !6820, file: !6760, line: 1090, column: 7)
!6820 = distinct !DILexicalBlock(scope: !6815, file: !6760, line: 1089, column: 18)
!6821 = !DILocation(line: 1090, column: 44, scope: !6819)
!6822 = !DILocation(line: 1090, column: 7, scope: !6820)
!6823 = !DILocation(line: 1091, column: 24, scope: !6824)
!6824 = distinct !DILexicalBlock(scope: !6819, file: !6760, line: 1090, column: 50)
!6825 = !DILocation(line: 1092, column: 3, scope: !6824)
!6826 = !DILocation(line: 1094, column: 23, scope: !6827)
!6827 = distinct !DILexicalBlock(scope: !6815, file: !6760, line: 1093, column: 9)
!6828 = !DILocation(line: 1097, column: 2, scope: !6759)
!6829 = !DILocation(line: 1098, column: 1, scope: !6759)
!6830 = distinct !DISubprogram(name: "get_esf", scope: !6760, file: !6760, line: 894, type: !6831, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !6834)
!6831 = !DISubroutineType(types: !6832)
!6832 = !{!2741, !118, !118, !118, !6833}
!6833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !345, size: 32)
!6834 = !{!6835, !6836, !6837, !6838, !6839, !6840}
!6835 = !DILocalVariable(name: "msp", arg: 1, scope: !6830, file: !6760, line: 894, type: !118)
!6836 = !DILocalVariable(name: "psp", arg: 2, scope: !6830, file: !6760, line: 894, type: !118)
!6837 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6830, file: !6760, line: 894, type: !118)
!6838 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6830, file: !6760, line: 895, type: !6833)
!6839 = !DILocalVariable(name: "alternative_state_exc", scope: !6830, file: !6760, line: 897, type: !345)
!6840 = !DILocalVariable(name: "ptr_esf", scope: !6830, file: !6760, line: 898, type: !2741)
!6841 = !DILocation(line: 0, scope: !6830)
!6842 = !DILocation(line: 900, column: 14, scope: !6830)
!6843 = !DILocation(line: 902, column: 49, scope: !6844)
!6844 = distinct !DILexicalBlock(scope: !6830, file: !6760, line: 902, column: 6)
!6845 = !DILocation(line: 902, column: 6, scope: !6830)
!6846 = !DILocation(line: 983, column: 44, scope: !6847)
!6847 = distinct !DILexicalBlock(scope: !6830, file: !6760, line: 983, column: 6)
!6848 = !DILocation(line: 985, column: 3, scope: !6849)
!6849 = distinct !DILexicalBlock(scope: !6850, file: !6760, line: 985, column: 3)
!6850 = distinct !DILexicalBlock(scope: !6851, file: !6760, line: 985, column: 3)
!6851 = distinct !DILexicalBlock(scope: !6852, file: !6760, line: 985, column: 3)
!6852 = distinct !DILexicalBlock(scope: !6853, file: !6760, line: 985, column: 3)
!6853 = distinct !DILexicalBlock(scope: !6847, file: !6760, line: 984, column: 47)
!6854 = !DILocation(line: 986, column: 3, scope: !6853)
!6855 = !DILocation(line: 983, column: 18, scope: !6847)
!6856 = !DILocation(line: 991, column: 7, scope: !6857)
!6857 = distinct !DILexicalBlock(scope: !6858, file: !6760, line: 990, column: 30)
!6858 = distinct !DILexicalBlock(scope: !6830, file: !6760, line: 990, column: 6)
!6859 = !DILocation(line: 998, column: 16, scope: !6860)
!6860 = distinct !DILexicalBlock(scope: !6861, file: !6760, line: 995, column: 10)
!6861 = distinct !DILexicalBlock(scope: !6857, file: !6760, line: 991, column: 7)
!6862 = !DILocation(line: 1002, column: 2, scope: !6830)
!6863 = !DILocation(line: 1003, column: 1, scope: !6830)
!6864 = distinct !DISubprogram(name: "fault_handle", scope: !6760, file: !6760, line: 786, type: !6865, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !6867)
!6865 = !DISubroutineType(types: !6866)
!6866 = !{!118, !2741, !119, !6833}
!6867 = !{!6868, !6869, !6870, !6871}
!6868 = !DILocalVariable(name: "esf", arg: 1, scope: !6864, file: !6760, line: 786, type: !2741)
!6869 = !DILocalVariable(name: "fault", arg: 2, scope: !6864, file: !6760, line: 786, type: !119)
!6870 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6864, file: !6760, line: 786, type: !6833)
!6871 = !DILocalVariable(name: "reason", scope: !6864, file: !6760, line: 788, type: !118)
!6872 = !DILocation(line: 0, scope: !6864)
!6873 = !DILocation(line: 790, column: 15, scope: !6864)
!6874 = !DILocation(line: 792, column: 2, scope: !6864)
!6875 = !DILocation(line: 794, column: 12, scope: !6876)
!6876 = distinct !DILexicalBlock(scope: !6864, file: !6760, line: 792, column: 17)
!6877 = !DILocation(line: 795, column: 3, scope: !6876)
!6878 = !DILocation(line: 800, column: 12, scope: !6876)
!6879 = !DILocation(line: 801, column: 3, scope: !6876)
!6880 = !DILocation(line: 803, column: 12, scope: !6876)
!6881 = !DILocation(line: 804, column: 3, scope: !6876)
!6882 = !DILocation(line: 806, column: 12, scope: !6876)
!6883 = !DILocation(line: 807, column: 3, scope: !6876)
!6884 = !DILocation(line: 814, column: 3, scope: !6876)
!6885 = !DILocation(line: 815, column: 3, scope: !6876)
!6886 = !DILocation(line: 820, column: 3, scope: !6876)
!6887 = !DILocation(line: 821, column: 3, scope: !6876)
!6888 = !DILocation(line: 829, column: 2, scope: !6864)
!6889 = distinct !DISubprogram(name: "hard_fault", scope: !6760, file: !6760, line: 709, type: !6890, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !6892)
!6890 = !DISubroutineType(types: !6891)
!6891 = !{!118, !2741, !6833}
!6892 = !{!6893, !6894, !6895}
!6893 = !DILocalVariable(name: "esf", arg: 1, scope: !6889, file: !6760, line: 709, type: !2741)
!6894 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6889, file: !6760, line: 709, type: !6833)
!6895 = !DILocalVariable(name: "reason", scope: !6889, file: !6760, line: 711, type: !118)
!6896 = !DILocation(line: 0, scope: !6889)
!6897 = !DILocation(line: 713, column: 2, scope: !6898)
!6898 = distinct !DILexicalBlock(scope: !6899, file: !6760, line: 713, column: 2)
!6899 = distinct !DILexicalBlock(scope: !6900, file: !6760, line: 713, column: 2)
!6900 = distinct !DILexicalBlock(scope: !6901, file: !6760, line: 713, column: 2)
!6901 = distinct !DILexicalBlock(scope: !6889, file: !6760, line: 713, column: 2)
!6902 = !DILocation(line: 732, column: 15, scope: !6889)
!6903 = !DILocation(line: 734, column: 12, scope: !6904)
!6904 = distinct !DILexicalBlock(scope: !6889, file: !6760, line: 734, column: 6)
!6905 = !DILocation(line: 734, column: 17, scope: !6904)
!6906 = !DILocation(line: 734, column: 41, scope: !6904)
!6907 = !DILocation(line: 734, column: 6, scope: !6889)
!6908 = !DILocation(line: 735, column: 3, scope: !6909)
!6909 = distinct !DILexicalBlock(scope: !6910, file: !6760, line: 735, column: 3)
!6910 = distinct !DILexicalBlock(scope: !6911, file: !6760, line: 735, column: 3)
!6911 = distinct !DILexicalBlock(scope: !6912, file: !6760, line: 735, column: 3)
!6912 = distinct !DILexicalBlock(scope: !6913, file: !6760, line: 735, column: 3)
!6913 = distinct !DILexicalBlock(scope: !6904, file: !6760, line: 734, column: 47)
!6914 = !DILocation(line: 736, column: 2, scope: !6913)
!6915 = !DILocation(line: 736, column: 19, scope: !6916)
!6916 = distinct !DILexicalBlock(scope: !6904, file: !6760, line: 736, column: 13)
!6917 = !DILocation(line: 736, column: 49, scope: !6916)
!6918 = !DILocation(line: 736, column: 13, scope: !6904)
!6919 = !DILocation(line: 737, column: 3, scope: !6920)
!6920 = distinct !DILexicalBlock(scope: !6921, file: !6760, line: 737, column: 3)
!6921 = distinct !DILexicalBlock(scope: !6922, file: !6760, line: 737, column: 3)
!6922 = distinct !DILexicalBlock(scope: !6923, file: !6760, line: 737, column: 3)
!6923 = distinct !DILexicalBlock(scope: !6924, file: !6760, line: 737, column: 3)
!6924 = distinct !DILexicalBlock(scope: !6916, file: !6760, line: 736, column: 55)
!6925 = !DILocation(line: 738, column: 2, scope: !6924)
!6926 = !DILocation(line: 738, column: 19, scope: !6927)
!6927 = distinct !DILexicalBlock(scope: !6916, file: !6760, line: 738, column: 13)
!6928 = !DILocation(line: 738, column: 24, scope: !6927)
!6929 = !DILocation(line: 738, column: 47, scope: !6927)
!6930 = !DILocation(line: 738, column: 13, scope: !6916)
!6931 = !DILocation(line: 739, column: 3, scope: !6932)
!6932 = distinct !DILexicalBlock(scope: !6933, file: !6760, line: 739, column: 3)
!6933 = distinct !DILexicalBlock(scope: !6934, file: !6760, line: 739, column: 3)
!6934 = distinct !DILexicalBlock(scope: !6935, file: !6760, line: 739, column: 3)
!6935 = distinct !DILexicalBlock(scope: !6936, file: !6760, line: 739, column: 3)
!6936 = distinct !DILexicalBlock(scope: !6927, file: !6760, line: 738, column: 53)
!6937 = !DILocation(line: 740, column: 7, scope: !6938)
!6938 = distinct !DILexicalBlock(scope: !6936, file: !6760, line: 740, column: 7)
!6939 = !DILocation(line: 740, column: 7, scope: !6936)
!6940 = !DILocation(line: 741, column: 4, scope: !6941)
!6941 = distinct !DILexicalBlock(scope: !6942, file: !6760, line: 741, column: 4)
!6942 = distinct !DILexicalBlock(scope: !6943, file: !6760, line: 741, column: 4)
!6943 = distinct !DILexicalBlock(scope: !6944, file: !6760, line: 741, column: 4)
!6944 = distinct !DILexicalBlock(scope: !6945, file: !6760, line: 741, column: 4)
!6945 = distinct !DILexicalBlock(scope: !6938, file: !6760, line: 740, column: 38)
!6946 = !DILocation(line: 742, column: 24, scope: !6945)
!6947 = !DILocation(line: 743, column: 3, scope: !6945)
!6948 = !DILocation(line: 743, column: 20, scope: !6949)
!6949 = distinct !DILexicalBlock(scope: !6938, file: !6760, line: 743, column: 14)
!6950 = !DILocation(line: 743, column: 25, scope: !6949)
!6951 = !DILocation(line: 743, column: 52, scope: !6949)
!6952 = !DILocation(line: 743, column: 14, scope: !6938)
!6953 = !DILocation(line: 744, column: 13, scope: !6954)
!6954 = distinct !DILexicalBlock(scope: !6949, file: !6760, line: 743, column: 58)
!6955 = !DILocation(line: 745, column: 3, scope: !6954)
!6956 = !DILocation(line: 745, column: 20, scope: !6957)
!6957 = distinct !DILexicalBlock(scope: !6949, file: !6760, line: 745, column: 14)
!6958 = !DILocation(line: 745, column: 25, scope: !6957)
!6959 = !DILocation(line: 745, column: 52, scope: !6957)
!6960 = !DILocation(line: 745, column: 14, scope: !6949)
!6961 = !DILocation(line: 746, column: 13, scope: !6962)
!6962 = distinct !DILexicalBlock(scope: !6957, file: !6760, line: 745, column: 58)
!6963 = !DILocation(line: 747, column: 3, scope: !6962)
!6964 = !DILocation(line: 747, column: 20, scope: !6965)
!6965 = distinct !DILexicalBlock(scope: !6957, file: !6760, line: 747, column: 14)
!6966 = !DILocation(line: 747, column: 52, scope: !6965)
!6967 = !DILocation(line: 747, column: 14, scope: !6957)
!6968 = !DILocation(line: 748, column: 13, scope: !6969)
!6969 = distinct !DILexicalBlock(scope: !6965, file: !6760, line: 747, column: 58)
!6970 = !DILocation(line: 754, column: 4, scope: !6971)
!6971 = distinct !DILexicalBlock(scope: !6972, file: !6760, line: 754, column: 4)
!6972 = distinct !DILexicalBlock(scope: !6973, file: !6760, line: 754, column: 4)
!6973 = distinct !DILexicalBlock(scope: !6974, file: !6760, line: 754, column: 4)
!6974 = distinct !DILexicalBlock(scope: !6965, file: !6760, line: 753, column: 10)
!6975 = !DILocation(line: 758, column: 3, scope: !6976)
!6976 = distinct !DILexicalBlock(scope: !6977, file: !6760, line: 758, column: 3)
!6977 = distinct !DILexicalBlock(scope: !6978, file: !6760, line: 758, column: 3)
!6978 = distinct !DILexicalBlock(scope: !6979, file: !6760, line: 758, column: 3)
!6979 = distinct !DILexicalBlock(scope: !6927, file: !6760, line: 757, column: 9)
!6980 = !DILocation(line: 766, column: 2, scope: !6889)
!6981 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6760, file: !6760, line: 229, type: !6865, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !6982)
!6982 = !{!6983, !6984, !6985, !6986, !6987, !6988, !6991}
!6983 = !DILocalVariable(name: "esf", arg: 1, scope: !6981, file: !6760, line: 229, type: !2741)
!6984 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6981, file: !6760, line: 229, type: !119)
!6985 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6981, file: !6760, line: 230, type: !6833)
!6986 = !DILocalVariable(name: "reason", scope: !6981, file: !6760, line: 232, type: !118)
!6987 = !DILocalVariable(name: "mmfar", scope: !6981, file: !6760, line: 233, type: !118)
!6988 = !DILocalVariable(name: "temp", scope: !6989, file: !6760, line: 254, type: !118)
!6989 = distinct !DILexicalBlock(scope: !6990, file: !6760, line: 244, column: 48)
!6990 = distinct !DILexicalBlock(scope: !6981, file: !6760, line: 244, column: 6)
!6991 = !DILocalVariable(name: "min_stack_ptr", scope: !6992, file: !6760, line: 309, type: !118)
!6992 = distinct !DILexicalBlock(scope: !6993, file: !6760, line: 308, column: 43)
!6993 = distinct !DILexicalBlock(scope: !6994, file: !6760, line: 308, column: 7)
!6994 = distinct !DILexicalBlock(scope: !6995, file: !6760, line: 289, column: 40)
!6995 = distinct !DILexicalBlock(scope: !6981, file: !6760, line: 288, column: 6)
!6996 = !DILocation(line: 0, scope: !6981)
!6997 = !DILocation(line: 235, column: 2, scope: !6998)
!6998 = distinct !DILexicalBlock(scope: !6999, file: !6760, line: 235, column: 2)
!6999 = distinct !DILexicalBlock(scope: !7000, file: !6760, line: 235, column: 2)
!7000 = distinct !DILexicalBlock(scope: !7001, file: !6760, line: 235, column: 2)
!7001 = distinct !DILexicalBlock(scope: !6981, file: !6760, line: 235, column: 2)
!7002 = !DILocation(line: 237, column: 12, scope: !7003)
!7003 = distinct !DILexicalBlock(scope: !6981, file: !6760, line: 237, column: 6)
!7004 = !DILocation(line: 237, column: 17, scope: !7003)
!7005 = !DILocation(line: 237, column: 41, scope: !7003)
!7006 = !DILocation(line: 237, column: 6, scope: !6981)
!7007 = !DILocation(line: 238, column: 3, scope: !7008)
!7008 = distinct !DILexicalBlock(scope: !7009, file: !6760, line: 238, column: 3)
!7009 = distinct !DILexicalBlock(scope: !7010, file: !6760, line: 238, column: 3)
!7010 = distinct !DILexicalBlock(scope: !7011, file: !6760, line: 238, column: 3)
!7011 = distinct !DILexicalBlock(scope: !7012, file: !6760, line: 238, column: 3)
!7012 = distinct !DILexicalBlock(scope: !7003, file: !6760, line: 237, column: 47)
!7013 = !DILocation(line: 240, column: 2, scope: !7012)
!7014 = !DILocation(line: 241, column: 12, scope: !7015)
!7015 = distinct !DILexicalBlock(scope: !6981, file: !6760, line: 241, column: 6)
!7016 = !DILocation(line: 241, column: 17, scope: !7015)
!7017 = !DILocation(line: 241, column: 43, scope: !7015)
!7018 = !DILocation(line: 241, column: 6, scope: !6981)
!7019 = !DILocation(line: 242, column: 3, scope: !7020)
!7020 = distinct !DILexicalBlock(scope: !7021, file: !6760, line: 242, column: 3)
!7021 = distinct !DILexicalBlock(scope: !7022, file: !6760, line: 242, column: 3)
!7022 = distinct !DILexicalBlock(scope: !7023, file: !6760, line: 242, column: 3)
!7023 = distinct !DILexicalBlock(scope: !7024, file: !6760, line: 242, column: 3)
!7024 = distinct !DILexicalBlock(scope: !7015, file: !6760, line: 241, column: 49)
!7025 = !DILocation(line: 243, column: 2, scope: !7024)
!7026 = !DILocation(line: 244, column: 12, scope: !6990)
!7027 = !DILocation(line: 244, column: 17, scope: !6990)
!7028 = !DILocation(line: 244, column: 42, scope: !6990)
!7029 = !DILocation(line: 244, column: 6, scope: !6981)
!7030 = !DILocation(line: 245, column: 3, scope: !7031)
!7031 = distinct !DILexicalBlock(scope: !7032, file: !6760, line: 245, column: 3)
!7032 = distinct !DILexicalBlock(scope: !7033, file: !6760, line: 245, column: 3)
!7033 = distinct !DILexicalBlock(scope: !7034, file: !6760, line: 245, column: 3)
!7034 = distinct !DILexicalBlock(scope: !6989, file: !6760, line: 245, column: 3)
!7035 = !DILocation(line: 254, column: 24, scope: !6989)
!7036 = !DILocation(line: 0, scope: !6989)
!7037 = !DILocation(line: 256, column: 13, scope: !7038)
!7038 = distinct !DILexicalBlock(scope: !6989, file: !6760, line: 256, column: 7)
!7039 = !DILocation(line: 256, column: 18, scope: !7038)
!7040 = !DILocation(line: 256, column: 44, scope: !7038)
!7041 = !DILocation(line: 256, column: 7, scope: !6989)
!7042 = !DILocation(line: 258, column: 4, scope: !7043)
!7043 = distinct !DILexicalBlock(scope: !7044, file: !6760, line: 258, column: 4)
!7044 = distinct !DILexicalBlock(scope: !7045, file: !6760, line: 258, column: 4)
!7045 = distinct !DILexicalBlock(scope: !7046, file: !6760, line: 258, column: 4)
!7046 = distinct !DILexicalBlock(scope: !7047, file: !6760, line: 258, column: 4)
!7047 = distinct !DILexicalBlock(scope: !7038, file: !6760, line: 256, column: 50)
!7048 = !DILocation(line: 259, column: 24, scope: !7049)
!7049 = distinct !DILexicalBlock(scope: !7047, file: !6760, line: 259, column: 8)
!7050 = !DILocation(line: 259, column: 8, scope: !7047)
!7051 = !DILocation(line: 261, column: 15, scope: !7052)
!7052 = distinct !DILexicalBlock(scope: !7049, file: !6760, line: 259, column: 30)
!7053 = !DILocation(line: 262, column: 4, scope: !7052)
!7054 = !DILocation(line: 265, column: 12, scope: !7055)
!7055 = distinct !DILexicalBlock(scope: !6981, file: !6760, line: 265, column: 6)
!7056 = !DILocation(line: 265, column: 17, scope: !7055)
!7057 = !DILocation(line: 265, column: 42, scope: !7055)
!7058 = !DILocation(line: 265, column: 6, scope: !6981)
!7059 = !DILocation(line: 266, column: 3, scope: !7060)
!7060 = distinct !DILexicalBlock(scope: !7061, file: !6760, line: 266, column: 3)
!7061 = distinct !DILexicalBlock(scope: !7062, file: !6760, line: 266, column: 3)
!7062 = distinct !DILexicalBlock(scope: !7063, file: !6760, line: 266, column: 3)
!7063 = distinct !DILexicalBlock(scope: !7064, file: !6760, line: 266, column: 3)
!7064 = distinct !DILexicalBlock(scope: !7055, file: !6760, line: 265, column: 48)
!7065 = !DILocation(line: 267, column: 2, scope: !7064)
!7066 = !DILocation(line: 269, column: 12, scope: !7067)
!7067 = distinct !DILexicalBlock(scope: !6981, file: !6760, line: 269, column: 6)
!7068 = !DILocation(line: 269, column: 17, scope: !7067)
!7069 = !DILocation(line: 269, column: 41, scope: !7067)
!7070 = !DILocation(line: 269, column: 6, scope: !6981)
!7071 = !DILocation(line: 270, column: 3, scope: !7072)
!7072 = distinct !DILexicalBlock(scope: !7073, file: !6760, line: 270, column: 3)
!7073 = distinct !DILexicalBlock(scope: !7074, file: !6760, line: 270, column: 3)
!7074 = distinct !DILexicalBlock(scope: !7075, file: !6760, line: 270, column: 3)
!7075 = distinct !DILexicalBlock(scope: !7076, file: !6760, line: 270, column: 3)
!7076 = distinct !DILexicalBlock(scope: !7067, file: !6760, line: 269, column: 47)
!7077 = !DILocation(line: 272, column: 2, scope: !7076)
!7078 = !DILocation(line: 288, column: 12, scope: !6995)
!7079 = !DILocation(line: 288, column: 17, scope: !6995)
!7080 = !DILocation(line: 288, column: 41, scope: !6995)
!7081 = !DILocation(line: 289, column: 9, scope: !6995)
!7082 = !DILocation(line: 289, column: 14, scope: !6995)
!7083 = !DILocation(line: 288, column: 6, scope: !6981)
!7084 = !DILocation(line: 308, column: 12, scope: !6993)
!7085 = !DILocation(line: 308, column: 17, scope: !6993)
!7086 = !DILocation(line: 308, column: 7, scope: !6994)
!7087 = !DILocation(line: 310, column: 6, scope: !6992)
!7088 = !DILocation(line: 309, column: 29, scope: !6992)
!7089 = !DILocation(line: 0, scope: !6992)
!7090 = !DILocation(line: 312, column: 8, scope: !7091)
!7091 = distinct !DILexicalBlock(scope: !6992, file: !6760, line: 312, column: 8)
!7092 = !DILocation(line: 312, column: 8, scope: !6992)
!7093 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !7094, file: !6452, line: 1099, type: !118)
!7094 = distinct !DISubprogram(name: "__set_PSP", scope: !6452, file: !6452, line: 1099, type: !6547, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !7095)
!7095 = !{!7093}
!7096 = !DILocation(line: 0, scope: !7094, inlinedAt: !7097)
!7097 = distinct !DILocation(line: 338, column: 5, scope: !7098)
!7098 = distinct !DILexicalBlock(scope: !7091, file: !6760, line: 312, column: 23)
!7099 = !DILocation(line: 1101, column: 3, scope: !7094, inlinedAt: !7097)
!7100 = !{i64 4146783}
!7101 = !DILocation(line: 341, column: 4, scope: !7098)
!7102 = !DILocation(line: 342, column: 5, scope: !7103)
!7103 = distinct !DILexicalBlock(scope: !7104, file: !6760, line: 342, column: 5)
!7104 = distinct !DILexicalBlock(scope: !7105, file: !6760, line: 342, column: 5)
!7105 = distinct !DILexicalBlock(scope: !7091, file: !6760, line: 341, column: 11)
!7106 = !DILocation(line: 342, column: 5, scope: !7104)
!7107 = !DILocation(line: 342, column: 5, scope: !7108)
!7108 = distinct !DILexicalBlock(scope: !7103, file: !6760, line: 342, column: 5)
!7109 = !DILocation(line: 360, column: 12, scope: !7110)
!7110 = distinct !DILexicalBlock(scope: !6981, file: !6760, line: 360, column: 6)
!7111 = !DILocation(line: 360, column: 17, scope: !7110)
!7112 = !DILocation(line: 360, column: 41, scope: !7110)
!7113 = !DILocation(line: 360, column: 6, scope: !6981)
!7114 = !DILocation(line: 361, column: 14, scope: !7115)
!7115 = distinct !DILexicalBlock(scope: !7110, file: !6760, line: 360, column: 47)
!7116 = !DILocation(line: 362, column: 2, scope: !7115)
!7117 = !DILocation(line: 366, column: 12, scope: !6981)
!7118 = !DILocation(line: 369, column: 15, scope: !6981)
!7119 = !DILocation(line: 371, column: 2, scope: !6981)
!7120 = distinct !DISubprogram(name: "bus_fault", scope: !6760, file: !6760, line: 383, type: !7121, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !7123)
!7121 = !DISubroutineType(types: !7122)
!7122 = !{!119, !2741, !119, !6833}
!7123 = !{!7124, !7125, !7126, !7127, !7128}
!7124 = !DILocalVariable(name: "esf", arg: 1, scope: !7120, file: !6760, line: 383, type: !2741)
!7125 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7120, file: !6760, line: 383, type: !119)
!7126 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7120, file: !6760, line: 383, type: !6833)
!7127 = !DILocalVariable(name: "reason", scope: !7120, file: !6760, line: 385, type: !118)
!7128 = !DILocalVariable(name: "bfar", scope: !7129, file: !6760, line: 405, type: !118)
!7129 = distinct !DILexicalBlock(scope: !7130, file: !6760, line: 395, column: 42)
!7130 = distinct !DILexicalBlock(scope: !7120, file: !6760, line: 395, column: 6)
!7131 = !DILocation(line: 0, scope: !7120)
!7132 = !DILocation(line: 387, column: 2, scope: !7133)
!7133 = distinct !DILexicalBlock(scope: !7134, file: !6760, line: 387, column: 2)
!7134 = distinct !DILexicalBlock(scope: !7135, file: !6760, line: 387, column: 2)
!7135 = distinct !DILexicalBlock(scope: !7136, file: !6760, line: 387, column: 2)
!7136 = distinct !DILexicalBlock(scope: !7120, file: !6760, line: 387, column: 2)
!7137 = !DILocation(line: 389, column: 11, scope: !7138)
!7138 = distinct !DILexicalBlock(scope: !7120, file: !6760, line: 389, column: 6)
!7139 = !DILocation(line: 389, column: 16, scope: !7138)
!7140 = !DILocation(line: 389, column: 6, scope: !7120)
!7141 = !DILocation(line: 390, column: 3, scope: !7142)
!7142 = distinct !DILexicalBlock(scope: !7143, file: !6760, line: 390, column: 3)
!7143 = distinct !DILexicalBlock(scope: !7144, file: !6760, line: 390, column: 3)
!7144 = distinct !DILexicalBlock(scope: !7145, file: !6760, line: 390, column: 3)
!7145 = distinct !DILexicalBlock(scope: !7146, file: !6760, line: 390, column: 3)
!7146 = distinct !DILexicalBlock(scope: !7138, file: !6760, line: 389, column: 39)
!7147 = !DILocation(line: 391, column: 2, scope: !7146)
!7148 = !DILocation(line: 392, column: 11, scope: !7149)
!7149 = distinct !DILexicalBlock(scope: !7120, file: !6760, line: 392, column: 6)
!7150 = !DILocation(line: 392, column: 16, scope: !7149)
!7151 = !DILocation(line: 392, column: 6, scope: !7120)
!7152 = !DILocation(line: 393, column: 3, scope: !7153)
!7153 = distinct !DILexicalBlock(scope: !7154, file: !6760, line: 393, column: 3)
!7154 = distinct !DILexicalBlock(scope: !7155, file: !6760, line: 393, column: 3)
!7155 = distinct !DILexicalBlock(scope: !7156, file: !6760, line: 393, column: 3)
!7156 = distinct !DILexicalBlock(scope: !7157, file: !6760, line: 393, column: 3)
!7157 = distinct !DILexicalBlock(scope: !7149, file: !6760, line: 392, column: 41)
!7158 = !DILocation(line: 394, column: 2, scope: !7157)
!7159 = !DILocation(line: 395, column: 11, scope: !7130)
!7160 = !DILocation(line: 395, column: 16, scope: !7130)
!7161 = !DILocation(line: 395, column: 6, scope: !7120)
!7162 = !DILocation(line: 396, column: 3, scope: !7163)
!7163 = distinct !DILexicalBlock(scope: !7164, file: !6760, line: 396, column: 3)
!7164 = distinct !DILexicalBlock(scope: !7165, file: !6760, line: 396, column: 3)
!7165 = distinct !DILexicalBlock(scope: !7166, file: !6760, line: 396, column: 3)
!7166 = distinct !DILexicalBlock(scope: !7129, file: !6760, line: 396, column: 3)
!7167 = !DILocation(line: 405, column: 3, scope: !7129)
!7168 = !DILocation(line: 0, scope: !7129)
!7169 = !DILocation(line: 407, column: 13, scope: !7170)
!7170 = distinct !DILexicalBlock(scope: !7129, file: !6760, line: 407, column: 7)
!7171 = !DILocation(line: 407, column: 18, scope: !7170)
!7172 = !DILocation(line: 407, column: 44, scope: !7170)
!7173 = !DILocation(line: 407, column: 7, scope: !7129)
!7174 = !DILocation(line: 408, column: 4, scope: !7175)
!7175 = distinct !DILexicalBlock(scope: !7176, file: !6760, line: 408, column: 4)
!7176 = distinct !DILexicalBlock(scope: !7177, file: !6760, line: 408, column: 4)
!7177 = distinct !DILexicalBlock(scope: !7178, file: !6760, line: 408, column: 4)
!7178 = distinct !DILexicalBlock(scope: !7179, file: !6760, line: 408, column: 4)
!7179 = distinct !DILexicalBlock(scope: !7170, file: !6760, line: 407, column: 50)
!7180 = !DILocation(line: 409, column: 24, scope: !7181)
!7181 = distinct !DILexicalBlock(scope: !7179, file: !6760, line: 409, column: 8)
!7182 = !DILocation(line: 409, column: 8, scope: !7179)
!7183 = !DILocation(line: 411, column: 15, scope: !7184)
!7184 = distinct !DILexicalBlock(scope: !7181, file: !6760, line: 409, column: 30)
!7185 = !DILocation(line: 412, column: 4, scope: !7184)
!7186 = !DILocation(line: 415, column: 11, scope: !7187)
!7187 = distinct !DILexicalBlock(scope: !7120, file: !6760, line: 415, column: 6)
!7188 = !DILocation(line: 415, column: 16, scope: !7187)
!7189 = !DILocation(line: 415, column: 6, scope: !7120)
!7190 = !DILocation(line: 416, column: 3, scope: !7191)
!7191 = distinct !DILexicalBlock(scope: !7192, file: !6760, line: 416, column: 3)
!7192 = distinct !DILexicalBlock(scope: !7193, file: !6760, line: 416, column: 3)
!7193 = distinct !DILexicalBlock(scope: !7194, file: !6760, line: 416, column: 3)
!7194 = distinct !DILexicalBlock(scope: !7195, file: !6760, line: 416, column: 3)
!7195 = distinct !DILexicalBlock(scope: !7187, file: !6760, line: 415, column: 44)
!7196 = !DILocation(line: 417, column: 2, scope: !7195)
!7197 = !DILocation(line: 418, column: 12, scope: !7198)
!7198 = distinct !DILexicalBlock(scope: !7120, file: !6760, line: 418, column: 6)
!7199 = !DILocation(line: 418, column: 17, scope: !7198)
!7200 = !DILocation(line: 418, column: 41, scope: !7198)
!7201 = !DILocation(line: 418, column: 6, scope: !7120)
!7202 = !DILocation(line: 423, column: 18, scope: !7203)
!7203 = distinct !DILexicalBlock(scope: !7198, file: !6760, line: 423, column: 13)
!7204 = !DILocation(line: 423, column: 23, scope: !7203)
!7205 = !DILocation(line: 423, column: 13, scope: !7198)
!7206 = !DILocation(line: 0, scope: !7198)
!7207 = !DILocation(line: 524, column: 12, scope: !7120)
!7208 = !DILocation(line: 526, column: 15, scope: !7120)
!7209 = !DILocation(line: 528, column: 2, scope: !7120)
!7210 = distinct !DISubprogram(name: "usage_fault", scope: !6760, file: !6760, line: 539, type: !7211, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !7215)
!7211 = !DISubroutineType(types: !7212)
!7212 = !{!118, !7213}
!7213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7214, size: 32)
!7214 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2742)
!7215 = !{!7216, !7217}
!7216 = !DILocalVariable(name: "esf", arg: 1, scope: !7210, file: !6760, line: 539, type: !7213)
!7217 = !DILocalVariable(name: "reason", scope: !7210, file: !6760, line: 541, type: !118)
!7218 = !DILocation(line: 0, scope: !7210)
!7219 = !DILocation(line: 543, column: 2, scope: !7220)
!7220 = distinct !DILexicalBlock(scope: !7221, file: !6760, line: 543, column: 2)
!7221 = distinct !DILexicalBlock(scope: !7222, file: !6760, line: 543, column: 2)
!7222 = distinct !DILexicalBlock(scope: !7223, file: !6760, line: 543, column: 2)
!7223 = distinct !DILexicalBlock(scope: !7210, file: !6760, line: 543, column: 2)
!7224 = !DILocation(line: 546, column: 12, scope: !7225)
!7225 = distinct !DILexicalBlock(scope: !7210, file: !6760, line: 546, column: 6)
!7226 = !DILocation(line: 546, column: 17, scope: !7225)
!7227 = !DILocation(line: 546, column: 43, scope: !7225)
!7228 = !DILocation(line: 546, column: 6, scope: !7210)
!7229 = !DILocation(line: 547, column: 3, scope: !7230)
!7230 = distinct !DILexicalBlock(scope: !7231, file: !6760, line: 547, column: 3)
!7231 = distinct !DILexicalBlock(scope: !7232, file: !6760, line: 547, column: 3)
!7232 = distinct !DILexicalBlock(scope: !7233, file: !6760, line: 547, column: 3)
!7233 = distinct !DILexicalBlock(scope: !7234, file: !6760, line: 547, column: 3)
!7234 = distinct !DILexicalBlock(scope: !7225, file: !6760, line: 546, column: 49)
!7235 = !DILocation(line: 548, column: 2, scope: !7234)
!7236 = !DILocation(line: 549, column: 12, scope: !7237)
!7237 = distinct !DILexicalBlock(scope: !7210, file: !6760, line: 549, column: 6)
!7238 = !DILocation(line: 549, column: 17, scope: !7237)
!7239 = !DILocation(line: 549, column: 43, scope: !7237)
!7240 = !DILocation(line: 549, column: 6, scope: !7210)
!7241 = !DILocation(line: 550, column: 3, scope: !7242)
!7242 = distinct !DILexicalBlock(scope: !7243, file: !6760, line: 550, column: 3)
!7243 = distinct !DILexicalBlock(scope: !7244, file: !6760, line: 550, column: 3)
!7244 = distinct !DILexicalBlock(scope: !7245, file: !6760, line: 550, column: 3)
!7245 = distinct !DILexicalBlock(scope: !7246, file: !6760, line: 550, column: 3)
!7246 = distinct !DILexicalBlock(scope: !7237, file: !6760, line: 549, column: 49)
!7247 = !DILocation(line: 551, column: 2, scope: !7246)
!7248 = !DILocation(line: 567, column: 12, scope: !7249)
!7249 = distinct !DILexicalBlock(scope: !7210, file: !6760, line: 567, column: 6)
!7250 = !DILocation(line: 567, column: 17, scope: !7249)
!7251 = !DILocation(line: 567, column: 38, scope: !7249)
!7252 = !DILocation(line: 567, column: 6, scope: !7210)
!7253 = !DILocation(line: 568, column: 3, scope: !7254)
!7254 = distinct !DILexicalBlock(scope: !7255, file: !6760, line: 568, column: 3)
!7255 = distinct !DILexicalBlock(scope: !7256, file: !6760, line: 568, column: 3)
!7256 = distinct !DILexicalBlock(scope: !7257, file: !6760, line: 568, column: 3)
!7257 = distinct !DILexicalBlock(scope: !7258, file: !6760, line: 568, column: 3)
!7258 = distinct !DILexicalBlock(scope: !7249, file: !6760, line: 567, column: 44)
!7259 = !DILocation(line: 569, column: 2, scope: !7258)
!7260 = !DILocation(line: 570, column: 12, scope: !7261)
!7261 = distinct !DILexicalBlock(scope: !7210, file: !6760, line: 570, column: 6)
!7262 = !DILocation(line: 570, column: 17, scope: !7261)
!7263 = !DILocation(line: 570, column: 39, scope: !7261)
!7264 = !DILocation(line: 570, column: 6, scope: !7210)
!7265 = !DILocation(line: 571, column: 3, scope: !7266)
!7266 = distinct !DILexicalBlock(scope: !7267, file: !6760, line: 571, column: 3)
!7267 = distinct !DILexicalBlock(scope: !7268, file: !6760, line: 571, column: 3)
!7268 = distinct !DILexicalBlock(scope: !7269, file: !6760, line: 571, column: 3)
!7269 = distinct !DILexicalBlock(scope: !7270, file: !6760, line: 571, column: 3)
!7270 = distinct !DILexicalBlock(scope: !7261, file: !6760, line: 570, column: 45)
!7271 = !DILocation(line: 572, column: 2, scope: !7270)
!7272 = !DILocation(line: 573, column: 12, scope: !7273)
!7273 = distinct !DILexicalBlock(scope: !7210, file: !6760, line: 573, column: 6)
!7274 = !DILocation(line: 573, column: 17, scope: !7273)
!7275 = !DILocation(line: 573, column: 42, scope: !7273)
!7276 = !DILocation(line: 573, column: 6, scope: !7210)
!7277 = !DILocation(line: 574, column: 3, scope: !7278)
!7278 = distinct !DILexicalBlock(scope: !7279, file: !6760, line: 574, column: 3)
!7279 = distinct !DILexicalBlock(scope: !7280, file: !6760, line: 574, column: 3)
!7280 = distinct !DILexicalBlock(scope: !7281, file: !6760, line: 574, column: 3)
!7281 = distinct !DILexicalBlock(scope: !7282, file: !6760, line: 574, column: 3)
!7282 = distinct !DILexicalBlock(scope: !7273, file: !6760, line: 573, column: 48)
!7283 = !DILocation(line: 575, column: 2, scope: !7282)
!7284 = !DILocation(line: 576, column: 12, scope: !7285)
!7285 = distinct !DILexicalBlock(scope: !7210, file: !6760, line: 576, column: 6)
!7286 = !DILocation(line: 576, column: 17, scope: !7285)
!7287 = !DILocation(line: 576, column: 44, scope: !7285)
!7288 = !DILocation(line: 576, column: 6, scope: !7210)
!7289 = !DILocation(line: 577, column: 3, scope: !7290)
!7290 = distinct !DILexicalBlock(scope: !7291, file: !6760, line: 577, column: 3)
!7291 = distinct !DILexicalBlock(scope: !7292, file: !6760, line: 577, column: 3)
!7292 = distinct !DILexicalBlock(scope: !7293, file: !6760, line: 577, column: 3)
!7293 = distinct !DILexicalBlock(scope: !7294, file: !6760, line: 577, column: 3)
!7294 = distinct !DILexicalBlock(scope: !7285, file: !6760, line: 576, column: 50)
!7295 = !DILocation(line: 578, column: 2, scope: !7294)
!7296 = !DILocation(line: 581, column: 12, scope: !7210)
!7297 = !DILocation(line: 583, column: 2, scope: !7210)
!7298 = distinct !DISubprogram(name: "debug_monitor", scope: !6760, file: !6760, line: 632, type: !7299, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !7301)
!7299 = !DISubroutineType(types: !7300)
!7300 = !{null, !2741, !6833}
!7301 = !{!7302, !7303}
!7302 = !DILocalVariable(name: "esf", arg: 1, scope: !7298, file: !6760, line: 632, type: !2741)
!7303 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7298, file: !6760, line: 632, type: !6833)
!7304 = !DILocation(line: 0, scope: !7298)
!7305 = !DILocation(line: 634, column: 15, scope: !7298)
!7306 = !DILocation(line: 636, column: 2, scope: !7307)
!7307 = distinct !DILexicalBlock(scope: !7308, file: !6760, line: 636, column: 2)
!7308 = distinct !DILexicalBlock(scope: !7309, file: !6760, line: 636, column: 2)
!7309 = distinct !DILexicalBlock(scope: !7310, file: !6760, line: 636, column: 2)
!7310 = distinct !DILexicalBlock(scope: !7298, file: !6760, line: 636, column: 2)
!7311 = !DILocation(line: 652, column: 1, scope: !7298)
!7312 = distinct !DISubprogram(name: "reserved_exception", scope: !6760, file: !6760, line: 776, type: !7313, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !7315)
!7313 = !DISubroutineType(types: !7314)
!7314 = !{null, !7213, !119}
!7315 = !{!7316, !7317}
!7316 = !DILocalVariable(name: "esf", arg: 1, scope: !7312, file: !6760, line: 776, type: !7213)
!7317 = !DILocalVariable(name: "fault", arg: 2, scope: !7312, file: !6760, line: 776, type: !119)
!7318 = !DILocation(line: 0, scope: !7312)
!7319 = !DILocation(line: 780, column: 2, scope: !7320)
!7320 = distinct !DILexicalBlock(scope: !7321, file: !6760, line: 780, column: 2)
!7321 = distinct !DILexicalBlock(scope: !7322, file: !6760, line: 780, column: 2)
!7322 = distinct !DILexicalBlock(scope: !7323, file: !6760, line: 780, column: 2)
!7323 = distinct !DILexicalBlock(scope: !7312, file: !6760, line: 780, column: 2)
!7324 = !DILocation(line: 783, column: 1, scope: !7312)
!7325 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6760, file: !6760, line: 658, type: !7326, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !7328)
!7326 = !DISubroutineType(types: !7327)
!7327 = !{!345, !2741}
!7328 = !{!7329, !7330, !7331}
!7329 = !DILocalVariable(name: "esf", arg: 1, scope: !7325, file: !6760, line: 658, type: !2741)
!7330 = !DILocalVariable(name: "ret_addr", scope: !7325, file: !6760, line: 660, type: !2784)
!7331 = !DILocalVariable(name: "fault_insn", scope: !7325, file: !6760, line: 686, type: !199)
!7332 = !DILocation(line: 0, scope: !7325)
!7333 = !DILocation(line: 660, column: 46, scope: !7325)
!7334 = !DILocation(line: 660, column: 23, scope: !7325)
!7335 = !DILocation(line: 682, column: 11, scope: !7325)
!7336 = !DILocation(line: 271, column: 3, scope: !7337, inlinedAt: !7338)
!7337 = distinct !DISubprogram(name: "__DSB", scope: !6452, file: !6452, line: 269, type: !3098, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !2162)
!7338 = distinct !DILocation(line: 683, column: 2, scope: !7325)
!7339 = !{i64 4122918}
!7340 = !DILocation(line: 260, column: 3, scope: !7341, inlinedAt: !7342)
!7341 = distinct !DISubprogram(name: "__ISB", scope: !6452, file: !6452, line: 258, type: !3098, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !2162)
!7342 = distinct !DILocation(line: 684, column: 2, scope: !7325)
!7343 = !{i64 4122635}
!7344 = !DILocation(line: 686, column: 35, scope: !7325)
!7345 = !DILocation(line: 686, column: 24, scope: !7325)
!7346 = !DILocation(line: 688, column: 11, scope: !7325)
!7347 = !DILocation(line: 271, column: 3, scope: !7337, inlinedAt: !7348)
!7348 = distinct !DILocation(line: 689, column: 2, scope: !7325)
!7349 = !DILocation(line: 260, column: 3, scope: !7341, inlinedAt: !7350)
!7350 = distinct !DILocation(line: 690, column: 2, scope: !7325)
!7351 = !DILocation(line: 693, column: 45, scope: !7352)
!7352 = distinct !DILexicalBlock(scope: !7325, file: !6760, line: 693, column: 6)
!7353 = !DILocation(line: 699, column: 1, scope: !7325)
!7354 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6760, file: !6760, line: 1107, type: !3098, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !2162)
!7355 = !DILocation(line: 1111, column: 11, scope: !7354)
!7356 = !DILocation(line: 1136, column: 1, scope: !7354)
!7357 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !7358, file: !7358, line: 26, type: !3098, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !7359)
!7358 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7359 = !{!7360}
!7360 = !DILocalVariable(name: "irq", scope: !7357, file: !7358, line: 28, type: !119)
!7361 = !DILocation(line: 0, scope: !7357)
!7362 = !DILocation(line: 30, column: 2, scope: !7363)
!7363 = distinct !DILexicalBlock(scope: !7357, file: !7358, line: 30, column: 2)
!7364 = !DILocation(line: 31, column: 3, scope: !7365)
!7365 = distinct !DILexicalBlock(scope: !7366, file: !7358, line: 30, column: 39)
!7366 = distinct !DILexicalBlock(scope: !7363, file: !7358, line: 30, column: 2)
!7367 = !DILocation(line: 30, column: 35, scope: !7366)
!7368 = !DILocation(line: 30, column: 13, scope: !7366)
!7369 = distinct !{!7369, !7362, !7370}
!7370 = !DILocation(line: 32, column: 2, scope: !7363)
!7371 = !DILocation(line: 33, column: 1, scope: !7357)
!7372 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !533, file: !533, line: 1814, type: !6492, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2785, retainedNodes: !7373)
!7373 = !{!7374, !7375}
!7374 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7372, file: !533, line: 1814, type: !800)
!7375 = !DILocalVariable(name: "priority", arg: 2, scope: !7372, file: !533, line: 1814, type: !118)
!7376 = !DILocation(line: 0, scope: !7372)
!7377 = !DILocation(line: 1816, column: 7, scope: !7372)
!7378 = !DILocation(line: 0, scope: !7379)
!7379 = distinct !DILexicalBlock(scope: !7372, file: !533, line: 1816, column: 7)
!7380 = !DILocation(line: 1824, column: 1, scope: !7372)
!7381 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !7382, file: !7382, line: 27, type: !7383, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2830, retainedNodes: !7489)
!7382 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7383 = !DISubroutineType(types: !7384)
!7384 = !{null, !7385}
!7385 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !143, line: 347, baseType: !7386)
!7386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7387, size: 32)
!7387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !143, line: 245, size: 1280, elements: !7388)
!7388 = !{!7389, !7447, !7459, !7460, !7461, !7462, !7463, !7469, !7484}
!7389 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7387, file: !143, line: 247, baseType: !7390, size: 384)
!7390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !143, line: 57, size: 384, elements: !7391)
!7391 = !{!7392, !7416, !7423, !7424, !7425, !7434, !7435, !7436}
!7392 = !DIDerivedType(tag: DW_TAG_member, scope: !7390, file: !143, line: 60, baseType: !7393, size: 64)
!7393 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7390, file: !143, line: 60, size: 64, elements: !7394)
!7394 = !{!7395, !7410}
!7395 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7393, file: !143, line: 61, baseType: !7396, size: 64)
!7396 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !153, line: 49, baseType: !7397)
!7397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !7398)
!7398 = !{!7399, !7405}
!7399 = !DIDerivedType(tag: DW_TAG_member, scope: !7397, file: !153, line: 38, baseType: !7400, size: 32)
!7400 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7397, file: !153, line: 38, size: 32, elements: !7401)
!7401 = !{!7402, !7404}
!7402 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7400, file: !153, line: 39, baseType: !7403, size: 32)
!7403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7397, size: 32)
!7404 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7400, file: !153, line: 40, baseType: !7403, size: 32)
!7405 = !DIDerivedType(tag: DW_TAG_member, scope: !7397, file: !153, line: 42, baseType: !7406, size: 32, offset: 32)
!7406 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7397, file: !153, line: 42, size: 32, elements: !7407)
!7407 = !{!7408, !7409}
!7408 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7406, file: !153, line: 43, baseType: !7403, size: 32)
!7409 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7406, file: !153, line: 44, baseType: !7403, size: 32)
!7410 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7393, file: !143, line: 62, baseType: !7411, size: 64)
!7411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !169, line: 49, size: 64, elements: !7412)
!7412 = !{!7413}
!7413 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7411, file: !169, line: 50, baseType: !7414, size: 64)
!7414 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7415, size: 64, elements: !174)
!7415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7411, size: 32)
!7416 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7390, file: !143, line: 68, baseType: !7417, size: 32, offset: 64)
!7417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7418, size: 32)
!7418 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !179, line: 233, baseType: !7419)
!7419 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !179, line: 231, size: 64, elements: !7420)
!7420 = !{!7421}
!7421 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7419, file: !179, line: 232, baseType: !7422, size: 64)
!7422 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !7397)
!7423 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7390, file: !143, line: 71, baseType: !185, size: 8, offset: 96)
!7424 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7390, file: !143, line: 74, baseType: !185, size: 8, offset: 104)
!7425 = !DIDerivedType(tag: DW_TAG_member, scope: !7390, file: !143, line: 90, baseType: !7426, size: 16, offset: 112)
!7426 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7390, file: !143, line: 90, size: 16, elements: !7427)
!7427 = !{!7428, !7433}
!7428 = !DIDerivedType(tag: DW_TAG_member, scope: !7426, file: !143, line: 91, baseType: !7429, size: 16)
!7429 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7426, file: !143, line: 91, size: 16, elements: !7430)
!7430 = !{!7431, !7432}
!7431 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7429, file: !143, line: 96, baseType: !195, size: 8)
!7432 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7429, file: !143, line: 97, baseType: !185, size: 8, offset: 8)
!7433 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7426, file: !143, line: 100, baseType: !199, size: 16)
!7434 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7390, file: !143, line: 107, baseType: !118, size: 32, offset: 128)
!7435 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7390, file: !143, line: 127, baseType: !113, size: 32, offset: 160)
!7436 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7390, file: !143, line: 131, baseType: !7437, size: 192, offset: 192)
!7437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !179, line: 244, size: 192, elements: !7438)
!7438 = !{!7439, !7440, !7446}
!7439 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7437, file: !179, line: 245, baseType: !7396, size: 64)
!7440 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7437, file: !179, line: 246, baseType: !7441, size: 32, offset: 64)
!7441 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !179, line: 242, baseType: !7442)
!7442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7443, size: 32)
!7443 = !DISubroutineType(types: !7444)
!7444 = !{null, !7445}
!7445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7437, size: 32)
!7446 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7437, file: !179, line: 249, baseType: !116, size: 64, offset: 128)
!7447 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7387, file: !143, line: 250, baseType: !7448, size: 288, offset: 384)
!7448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !7449)
!7449 = !{!7450, !7451, !7452, !7453, !7454, !7455, !7456, !7457, !7458}
!7450 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7448, file: !216, line: 26, baseType: !118, size: 32)
!7451 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7448, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!7452 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7448, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!7453 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7448, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!7454 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7448, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!7455 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7448, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!7456 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7448, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!7457 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7448, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!7458 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7448, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!7459 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7387, file: !143, line: 253, baseType: !113, size: 32, offset: 672)
!7460 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7387, file: !143, line: 256, baseType: !7418, size: 64, offset: 704)
!7461 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7387, file: !143, line: 279, baseType: !230, size: 256, offset: 768)
!7462 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7387, file: !143, line: 294, baseType: !119, size: 32, offset: 1024)
!7463 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7387, file: !143, line: 300, baseType: !7464, size: 96, offset: 1056)
!7464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !143, line: 149, size: 96, elements: !7465)
!7465 = !{!7466, !7467, !7468}
!7466 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7464, file: !143, line: 153, baseType: !22, size: 32)
!7467 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7464, file: !143, line: 162, baseType: !239, size: 32, offset: 32)
!7468 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7464, file: !143, line: 168, baseType: !239, size: 32, offset: 64)
!7469 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7387, file: !143, line: 325, baseType: !7470, size: 32, offset: 1152)
!7470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7471, size: 32)
!7471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !245, line: 5073, size: 192, elements: !7472)
!7472 = !{!7473, !7479, !7480}
!7473 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7471, file: !245, line: 5074, baseType: !7474, size: 96)
!7474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !249, line: 56, size: 96, elements: !7475)
!7475 = !{!7476, !7477, !7478}
!7476 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7474, file: !249, line: 57, baseType: !252, size: 32)
!7477 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7474, file: !249, line: 58, baseType: !113, size: 32, offset: 32)
!7478 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7474, file: !249, line: 59, baseType: !239, size: 32, offset: 64)
!7479 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7471, file: !245, line: 5075, baseType: !7418, size: 64, offset: 96)
!7480 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7471, file: !245, line: 5076, baseType: !7481, size: 32, offset: 160)
!7481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !7482)
!7482 = !{!7483}
!7483 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !7481, file: !259, line: 52, baseType: !22, size: 32)
!7484 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7387, file: !143, line: 343, baseType: !7485, size: 64, offset: 1184)
!7485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !216, line: 60, size: 64, elements: !7486)
!7486 = !{!7487, !7488}
!7487 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7485, file: !216, line: 63, baseType: !118, size: 32)
!7488 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7485, file: !216, line: 66, baseType: !118, size: 32, offset: 32)
!7489 = !{!7490}
!7490 = !DILocalVariable(name: "thread", arg: 1, scope: !7381, file: !7382, line: 27, type: !7385)
!7491 = !DILocation(line: 0, scope: !7381)
!7492 = !DILocation(line: 29, column: 6, scope: !7493)
!7493 = distinct !DILexicalBlock(scope: !7381, file: !7382, line: 29, column: 6)
!7494 = !DILocation(line: 29, column: 15, scope: !7493)
!7495 = !DILocation(line: 29, column: 6, scope: !7381)
!7496 = !DILocation(line: 1031, column: 3, scope: !7497, inlinedAt: !7500)
!7497 = distinct !DISubprogram(name: "__get_IPSR", scope: !6452, file: !6452, line: 1027, type: !3336, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2830, retainedNodes: !7498)
!7498 = !{!7499}
!7499 = !DILocalVariable(name: "result", scope: !7497, file: !6452, line: 1029, type: !118)
!7500 = distinct !DILocation(line: 48, column: 10, scope: !7501, inlinedAt: !7505)
!7501 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7502, file: !7502, line: 46, type: !7503, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2830, retainedNodes: !2162)
!7502 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7503 = !DISubroutineType(types: !7504)
!7504 = !{!345}
!7505 = distinct !DILocation(line: 30, column: 7, scope: !7506)
!7506 = distinct !DILexicalBlock(scope: !7507, file: !7382, line: 30, column: 7)
!7507 = distinct !DILexicalBlock(scope: !7493, file: !7382, line: 29, column: 26)
!7508 = !{i64 4111766}
!7509 = !DILocation(line: 0, scope: !7497, inlinedAt: !7500)
!7510 = !DILocation(line: 48, column: 9, scope: !7501, inlinedAt: !7505)
!7511 = !DILocation(line: 30, column: 7, scope: !7507)
!7512 = !DILocation(line: 42, column: 14, scope: !7513)
!7513 = distinct !DILexicalBlock(scope: !7506, file: !7382, line: 30, column: 25)
!7514 = !DILocation(line: 48, column: 15, scope: !7513)
!7515 = !DILocation(line: 49, column: 3, scope: !7513)
!7516 = !DILocation(line: 52, column: 2, scope: !7381)
!7517 = !DILocation(line: 53, column: 1, scope: !7381)
!7518 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !392, file: !392, line: 127, type: !3098, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !385, retainedNodes: !2162)
!7519 = !DILocation(line: 134, column: 2, scope: !7518)
!7520 = !DILocation(line: 156, column: 1, scope: !7518)
!7521 = !DILocation(line: 0, scope: !391)
!7522 = !DILocation(line: 289, column: 36, scope: !7523)
!7523 = distinct !DILexicalBlock(scope: !391, file: !392, line: 285, column: 2)
!7524 = !DILocation(line: 289, column: 42, scope: !7523)
!7525 = !DILocation(line: 300, column: 36, scope: !391)
!7526 = !DILocation(line: 301, column: 35, scope: !391)
!7527 = !DILocation(line: 302, column: 37, scope: !391)
!7528 = !DILocation(line: 311, column: 2, scope: !391)
!7529 = !DILocation(line: 316, column: 1, scope: !391)
!7530 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !561, file: !561, line: 180, type: !3098, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !2162)
!7531 = !DILocation(line: 188, column: 12, scope: !7530)
!7532 = !DILocation(line: 271, column: 3, scope: !7533, inlinedAt: !7534)
!7533 = distinct !DISubprogram(name: "__DSB", scope: !6452, file: !6452, line: 269, type: !3098, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !2162)
!7534 = distinct !DILocation(line: 192, column: 2, scope: !7530)
!7535 = !{i64 4308266}
!7536 = !DILocation(line: 260, column: 3, scope: !7537, inlinedAt: !7538)
!7537 = distinct !DISubprogram(name: "__ISB", scope: !6452, file: !6452, line: 258, type: !3098, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !2162)
!7538 = distinct !DILocation(line: 193, column: 2, scope: !7530)
!7539 = !{i64 4307983}
!7540 = !DILocation(line: 194, column: 1, scope: !7530)
!7541 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !561, file: !561, line: 199, type: !3098, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !2162)
!7542 = !DILocation(line: 282, column: 3, scope: !7543, inlinedAt: !7544)
!7543 = distinct !DISubprogram(name: "__DMB", scope: !6452, file: !6452, line: 280, type: !3098, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !2162)
!7544 = distinct !DILocation(line: 202, column: 2, scope: !7541)
!7545 = !{i64 4308542}
!7546 = !DILocation(line: 205, column: 12, scope: !7541)
!7547 = !DILocation(line: 206, column: 1, scope: !7541)
!7548 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !561, file: !561, line: 275, type: !7549, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7562)
!7549 = !DISubroutineType(types: !7550)
!7550 = !{null, !7551, !1946, !6727, !6727}
!7551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7552, size: 32)
!7552 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7553)
!7553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !505, line: 52, size: 96, elements: !7554)
!7554 = !{!7555, !7556, !7557}
!7555 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7553, file: !505, line: 53, baseType: !22, size: 32)
!7556 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7553, file: !505, line: 54, baseType: !239, size: 32, offset: 32)
!7557 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7553, file: !505, line: 55, baseType: !7558, size: 32, offset: 64)
!7558 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !511, line: 151, baseType: !7559)
!7559 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !511, line: 149, size: 32, elements: !7560)
!7560 = !{!7561}
!7561 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !7559, file: !511, line: 150, baseType: !118, size: 32)
!7562 = !{!7563, !7564, !7565, !7566}
!7563 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7548, file: !561, line: 276, type: !7551)
!7564 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7548, file: !561, line: 276, type: !1946)
!7565 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !7548, file: !561, line: 277, type: !6727)
!7566 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7548, file: !561, line: 277, type: !6727)
!7567 = !DILocation(line: 0, scope: !7548)
!7568 = !DILocation(line: 279, column: 6, scope: !7569)
!7569 = distinct !DILexicalBlock(scope: !7548, file: !561, line: 279, column: 6)
!7570 = !DILocation(line: 280, column: 57, scope: !7569)
!7571 = !DILocation(line: 279, column: 6, scope: !7548)
!7572 = !DILocation(line: 282, column: 3, scope: !7573)
!7573 = distinct !DILexicalBlock(scope: !7574, file: !561, line: 282, column: 3)
!7574 = distinct !DILexicalBlock(scope: !7575, file: !561, line: 282, column: 3)
!7575 = distinct !DILexicalBlock(scope: !7576, file: !561, line: 282, column: 3)
!7576 = distinct !DILexicalBlock(scope: !7569, file: !561, line: 280, column: 69)
!7577 = !DILocation(line: 285, column: 1, scope: !7548)
!7578 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !7579, file: !7579, line: 220, type: !7580, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7582)
!7579 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7580 = !DISubroutineType(types: !7581)
!7581 = !{!119, !7551, !1946, !6727, !6727}
!7582 = !{!7583, !7584, !7585, !7586, !7587}
!7583 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7578, file: !7579, line: 221, type: !7551)
!7584 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7578, file: !7579, line: 221, type: !1946)
!7585 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !7578, file: !7579, line: 222, type: !6727)
!7586 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7578, file: !7579, line: 223, type: !6727)
!7587 = !DILocalVariable(name: "mpu_reg_index", scope: !7578, file: !7579, line: 225, type: !119)
!7588 = !DILocation(line: 0, scope: !7578)
!7589 = !DILocation(line: 225, column: 22, scope: !7578)
!7590 = !DILocation(line: 233, column: 18, scope: !7578)
!7591 = !DILocation(line: 236, column: 23, scope: !7578)
!7592 = !DILocation(line: 236, column: 21, scope: !7578)
!7593 = !DILocation(line: 238, column: 2, scope: !7578)
!7594 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !561, file: !561, line: 105, type: !7595, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7597)
!7595 = !DISubroutineType(types: !7596)
!7596 = !{!119, !7551, !185, !185, !345}
!7597 = !{!7598, !7599, !7600, !7601, !7602, !7603}
!7598 = !DILocalVariable(name: "regions", arg: 1, scope: !7594, file: !561, line: 106, type: !7551)
!7599 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7594, file: !561, line: 106, type: !185)
!7600 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !7594, file: !561, line: 106, type: !185)
!7601 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !7594, file: !561, line: 107, type: !345)
!7602 = !DILocalVariable(name: "i", scope: !7594, file: !561, line: 109, type: !119)
!7603 = !DILocalVariable(name: "reg_index", scope: !7594, file: !561, line: 110, type: !119)
!7604 = !DILocation(line: 0, scope: !7594)
!7605 = !DILocation(line: 110, column: 18, scope: !7594)
!7606 = !DILocation(line: 112, column: 16, scope: !7607)
!7607 = distinct !DILexicalBlock(scope: !7608, file: !561, line: 112, column: 2)
!7608 = distinct !DILexicalBlock(scope: !7594, file: !561, line: 112, column: 2)
!7609 = !DILocation(line: 112, column: 2, scope: !7608)
!7610 = !DILocation(line: 113, column: 7, scope: !7611)
!7611 = distinct !DILexicalBlock(scope: !7612, file: !561, line: 113, column: 7)
!7612 = distinct !DILexicalBlock(scope: !7607, file: !561, line: 112, column: 36)
!7613 = !DILocation(line: 113, column: 18, scope: !7611)
!7614 = !DILocation(line: 113, column: 23, scope: !7611)
!7615 = !DILocation(line: 113, column: 7, scope: !7612)
!7616 = !DILocation(line: 118, column: 23, scope: !7617)
!7617 = distinct !DILexicalBlock(scope: !7612, file: !561, line: 118, column: 7)
!7618 = !DILocation(line: 119, column: 7, scope: !7617)
!7619 = !DILocation(line: 118, column: 7, scope: !7612)
!7620 = !DILocation(line: 120, column: 4, scope: !7621)
!7621 = distinct !DILexicalBlock(scope: !7622, file: !561, line: 120, column: 4)
!7622 = distinct !DILexicalBlock(scope: !7623, file: !561, line: 120, column: 4)
!7623 = distinct !DILexicalBlock(scope: !7624, file: !561, line: 120, column: 4)
!7624 = distinct !DILexicalBlock(scope: !7625, file: !561, line: 120, column: 4)
!7625 = distinct !DILexicalBlock(scope: !7617, file: !561, line: 119, column: 45)
!7626 = !DILocation(line: 121, column: 4, scope: !7625)
!7627 = !DILocation(line: 124, column: 36, scope: !7612)
!7628 = !DILocation(line: 124, column: 15, scope: !7612)
!7629 = !DILocation(line: 126, column: 17, scope: !7630)
!7630 = distinct !DILexicalBlock(scope: !7612, file: !561, line: 126, column: 7)
!7631 = !DILocation(line: 126, column: 7, scope: !7612)
!7632 = !DILocation(line: 131, column: 12, scope: !7612)
!7633 = !DILocation(line: 132, column: 2, scope: !7612)
!7634 = !DILocation(line: 112, column: 32, scope: !7607)
!7635 = distinct !{!7635, !7609, !7636}
!7636 = !DILocation(line: 132, column: 2, scope: !7608)
!7637 = !DILocation(line: 135, column: 1, scope: !7594)
!7638 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !7579, file: !7579, line: 63, type: !7639, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7641)
!7639 = !DISubroutineType(types: !7640)
!7640 = !{!119, !7551}
!7641 = !{!7642, !7643}
!7642 = !DILocalVariable(name: "part", arg: 1, scope: !7638, file: !7579, line: 63, type: !7551)
!7643 = !DILocalVariable(name: "partition_is_valid", scope: !7638, file: !7579, line: 70, type: !119)
!7644 = !DILocation(line: 0, scope: !7638)
!7645 = !DILocation(line: 71, column: 11, scope: !7638)
!7646 = !DILocation(line: 71, column: 37, scope: !7638)
!7647 = !{i32 0, i32 33}
!7648 = !DILocation(line: 72, column: 3, scope: !7638)
!7649 = !DILocation(line: 71, column: 30, scope: !7638)
!7650 = !DILocation(line: 75, column: 11, scope: !7638)
!7651 = !DILocation(line: 75, column: 17, scope: !7638)
!7652 = !DILocation(line: 75, column: 38, scope: !7638)
!7653 = !DILocation(line: 77, column: 2, scope: !7638)
!7654 = distinct !DISubprogram(name: "mpu_configure_region", scope: !561, file: !561, line: 79, type: !7655, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7657)
!7655 = !DISubroutineType(types: !7656)
!7656 = !{!119, !1946, !7551}
!7657 = !{!7658, !7659, !7660}
!7658 = !DILocalVariable(name: "index", arg: 1, scope: !7654, file: !561, line: 79, type: !1946)
!7659 = !DILocalVariable(name: "new_region", arg: 2, scope: !7654, file: !561, line: 80, type: !7551)
!7660 = !DILocalVariable(name: "region_conf", scope: !7654, file: !561, line: 82, type: !550)
!7661 = !DILocation(line: 0, scope: !7654)
!7662 = !DILocation(line: 82, column: 2, scope: !7654)
!7663 = !DILocation(line: 82, column: 24, scope: !7654)
!7664 = !DILocation(line: 87, column: 33, scope: !7654)
!7665 = !DILocation(line: 87, column: 14, scope: !7654)
!7666 = !DILocation(line: 87, column: 19, scope: !7654)
!7667 = !DILocation(line: 91, column: 55, scope: !7654)
!7668 = !DILocation(line: 92, column: 16, scope: !7654)
!7669 = !DILocation(line: 92, column: 53, scope: !7654)
!7670 = !DILocation(line: 91, column: 2, scope: !7654)
!7671 = !DILocation(line: 95, column: 9, scope: !7654)
!7672 = !DILocation(line: 97, column: 1, scope: !7654)
!7673 = !DILocation(line: 95, column: 2, scope: !7654)
!7674 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !7579, file: !7579, line: 113, type: !7675, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7680)
!7675 = !DISubroutineType(types: !7676)
!7676 = !{null, !7677, !7678, !118, !118}
!7677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !556, size: 32)
!7678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7679, size: 32)
!7679 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7558)
!7680 = !{!7681, !7682, !7683, !7684}
!7681 = !DILocalVariable(name: "p_attr", arg: 1, scope: !7674, file: !7579, line: 114, type: !7677)
!7682 = !DILocalVariable(name: "attr", arg: 2, scope: !7674, file: !7579, line: 115, type: !7678)
!7683 = !DILocalVariable(name: "base", arg: 3, scope: !7674, file: !7579, line: 115, type: !118)
!7684 = !DILocalVariable(name: "size", arg: 4, scope: !7674, file: !7579, line: 115, type: !118)
!7685 = !DILocation(line: 0, scope: !7674)
!7686 = !DILocation(line: 127, column: 23, scope: !7674)
!7687 = !DILocation(line: 127, column: 35, scope: !7674)
!7688 = !DILocation(line: 127, column: 33, scope: !7674)
!7689 = !DILocation(line: 127, column: 10, scope: !7674)
!7690 = !DILocation(line: 127, column: 15, scope: !7674)
!7691 = !DILocation(line: 129, column: 1, scope: !7674)
!7692 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !561, file: !561, line: 57, type: !7693, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7695)
!7693 = !DISubroutineType(types: !7694)
!7694 = !{!119, !1946, !548}
!7695 = !{!7696, !7697}
!7696 = !DILocalVariable(name: "index", arg: 1, scope: !7692, file: !561, line: 57, type: !1946)
!7697 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7692, file: !561, line: 58, type: !548)
!7698 = !DILocation(line: 0, scope: !7692)
!7699 = !DILocation(line: 61, column: 6, scope: !7700)
!7700 = distinct !DILexicalBlock(scope: !7692, file: !561, line: 61, column: 6)
!7701 = !DILocation(line: 61, column: 12, scope: !7700)
!7702 = !DILocation(line: 61, column: 6, scope: !7692)
!7703 = !DILocation(line: 64, column: 3, scope: !7704)
!7704 = distinct !DILexicalBlock(scope: !7705, file: !561, line: 64, column: 3)
!7705 = distinct !DILexicalBlock(scope: !7706, file: !561, line: 64, column: 3)
!7706 = distinct !DILexicalBlock(scope: !7707, file: !561, line: 64, column: 3)
!7707 = distinct !DILexicalBlock(scope: !7708, file: !561, line: 64, column: 3)
!7708 = distinct !DILexicalBlock(scope: !7700, file: !561, line: 61, column: 40)
!7709 = !DILocation(line: 65, column: 3, scope: !7708)
!7710 = !DILocation(line: 71, column: 2, scope: !7692)
!7711 = !DILocation(line: 73, column: 2, scope: !7692)
!7712 = !DILocation(line: 74, column: 1, scope: !7692)
!7713 = distinct !DISubprogram(name: "region_init", scope: !7579, file: !7579, line: 29, type: !7714, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7716)
!7714 = !DISubroutineType(types: !7715)
!7715 = !{null, !6727, !548}
!7716 = !{!7717, !7718}
!7717 = !DILocalVariable(name: "index", arg: 1, scope: !7713, file: !7579, line: 29, type: !6727)
!7718 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7713, file: !7579, line: 30, type: !548)
!7719 = !DILocation(line: 0, scope: !7713)
!7720 = !DILocation(line: 33, column: 2, scope: !7713)
!7721 = !DILocation(line: 47, column: 28, scope: !7713)
!7722 = !DILocation(line: 47, column: 33, scope: !7713)
!7723 = !DILocation(line: 48, column: 26, scope: !7713)
!7724 = !DILocation(line: 47, column: 12, scope: !7713)
!7725 = !DILocation(line: 49, column: 32, scope: !7713)
!7726 = !DILocation(line: 49, column: 37, scope: !7713)
!7727 = !DILocation(line: 49, column: 12, scope: !7713)
!7728 = !DILocation(line: 53, column: 1, scope: !7713)
!7729 = distinct !DISubprogram(name: "set_region_number", scope: !7730, file: !7730, line: 32, type: !6547, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7731)
!7730 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7731 = !{!7732}
!7732 = !DILocalVariable(name: "index", arg: 1, scope: !7729, file: !7730, line: 32, type: !118)
!7733 = !DILocation(line: 0, scope: !7729)
!7734 = !DILocation(line: 34, column: 11, scope: !7729)
!7735 = !DILocation(line: 35, column: 1, scope: !7729)
!7736 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !7579, file: !7579, line: 88, type: !7737, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7739)
!7737 = !DISubroutineType(types: !7738)
!7738 = !{!118, !118}
!7739 = !{!7740}
!7740 = !DILocalVariable(name: "size", arg: 1, scope: !7736, file: !7579, line: 88, type: !118)
!7741 = !DILocation(line: 0, scope: !7736)
!7742 = !DILocation(line: 91, column: 11, scope: !7743)
!7743 = distinct !DILexicalBlock(scope: !7736, file: !7579, line: 91, column: 6)
!7744 = !DILocation(line: 91, column: 6, scope: !7736)
!7745 = !DILocation(line: 100, column: 11, scope: !7746)
!7746 = distinct !DILexicalBlock(scope: !7736, file: !7579, line: 100, column: 6)
!7747 = !DILocation(line: 100, column: 6, scope: !7736)
!7748 = !DILocation(line: 104, column: 35, scope: !7736)
!7749 = !DILocation(line: 104, column: 16, scope: !7736)
!7750 = !DILocation(line: 104, column: 50, scope: !7736)
!7751 = !DILocation(line: 104, column: 72, scope: !7736)
!7752 = !DILocation(line: 104, column: 2, scope: !7736)
!7753 = !DILocation(line: 106, column: 1, scope: !7736)
!7754 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !561, file: !561, line: 307, type: !7755, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7757)
!7755 = !DISubroutineType(types: !7756)
!7756 = !{null, !7551, !185}
!7757 = !{!7758, !7759}
!7758 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7754, file: !561, line: 308, type: !7551)
!7759 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7754, file: !561, line: 308, type: !185)
!7760 = !DILocation(line: 0, scope: !7754)
!7761 = !DILocation(line: 310, column: 6, scope: !7762)
!7762 = distinct !DILexicalBlock(scope: !7754, file: !561, line: 310, column: 6)
!7763 = !DILocation(line: 311, column: 3, scope: !7762)
!7764 = !DILocation(line: 310, column: 6, scope: !7754)
!7765 = !DILocation(line: 313, column: 3, scope: !7766)
!7766 = distinct !DILexicalBlock(scope: !7767, file: !561, line: 313, column: 3)
!7767 = distinct !DILexicalBlock(scope: !7768, file: !561, line: 313, column: 3)
!7768 = distinct !DILexicalBlock(scope: !7769, file: !561, line: 313, column: 3)
!7769 = distinct !DILexicalBlock(scope: !7762, file: !561, line: 311, column: 15)
!7770 = !DILocation(line: 316, column: 1, scope: !7754)
!7771 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !7579, file: !7579, line: 249, type: !7772, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7774)
!7772 = !DISubroutineType(types: !7773)
!7773 = !{!119, !7551, !185}
!7774 = !{!7775, !7776, !7777, !7778}
!7775 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7771, file: !7579, line: 250, type: !7551)
!7776 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7771, file: !7579, line: 250, type: !185)
!7777 = !DILocalVariable(name: "mpu_reg_index", scope: !7771, file: !7579, line: 252, type: !119)
!7778 = !DILocalVariable(name: "i", scope: !7779, file: !7579, line: 264, type: !119)
!7779 = distinct !DILexicalBlock(scope: !7780, file: !7579, line: 264, column: 3)
!7780 = distinct !DILexicalBlock(scope: !7781, file: !7579, line: 261, column: 32)
!7781 = distinct !DILexicalBlock(scope: !7771, file: !7579, line: 261, column: 6)
!7782 = !DILocation(line: 0, scope: !7771)
!7783 = !DILocation(line: 252, column: 22, scope: !7771)
!7784 = !DILocation(line: 258, column: 18, scope: !7771)
!7785 = !DILocation(line: 261, column: 20, scope: !7781)
!7786 = !DILocation(line: 261, column: 6, scope: !7771)
!7787 = !DILocation(line: 0, scope: !7779)
!7788 = !DILocation(line: 265, column: 4, scope: !7789)
!7789 = distinct !DILexicalBlock(scope: !7790, file: !7579, line: 264, column: 59)
!7790 = distinct !DILexicalBlock(scope: !7779, file: !7579, line: 264, column: 3)
!7791 = !DILocation(line: 264, column: 55, scope: !7790)
!7792 = !DILocation(line: 264, column: 33, scope: !7790)
!7793 = !DILocation(line: 264, column: 3, scope: !7779)
!7794 = distinct !{!7794, !7793, !7795}
!7795 = !DILocation(line: 266, column: 3, scope: !7779)
!7796 = !DILocation(line: 269, column: 2, scope: !7771)
!7797 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7798, file: !7798, line: 218, type: !6547, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7799)
!7798 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7799 = !{!7800}
!7800 = !DILocalVariable(name: "rnr", arg: 1, scope: !7797, file: !7798, line: 218, type: !118)
!7801 = !DILocation(line: 0, scope: !7797)
!7802 = !DILocation(line: 220, column: 12, scope: !7797)
!7803 = !DILocation(line: 221, column: 13, scope: !7797)
!7804 = !DILocation(line: 222, column: 1, scope: !7797)
!7805 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !561, file: !561, line: 326, type: !7806, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7808)
!7806 = !DISubroutineType(types: !7807)
!7807 = !{!119}
!7808 = !{!7809}
!7809 = !DILocalVariable(name: "r_index", scope: !7805, file: !561, line: 328, type: !118)
!7810 = !DILocation(line: 330, column: 17, scope: !7811)
!7811 = distinct !DILexicalBlock(scope: !7805, file: !561, line: 330, column: 6)
!7812 = !DILocation(line: 330, column: 29, scope: !7811)
!7813 = !DILocation(line: 330, column: 6, scope: !7805)
!7814 = !DILocation(line: 337, column: 3, scope: !7815)
!7815 = distinct !DILexicalBlock(scope: !7816, file: !561, line: 337, column: 3)
!7816 = distinct !DILexicalBlock(scope: !7817, file: !561, line: 337, column: 3)
!7817 = distinct !DILexicalBlock(scope: !7818, file: !561, line: 337, column: 3)
!7818 = distinct !DILexicalBlock(scope: !7811, file: !561, line: 330, column: 50)
!7819 = !DILocation(line: 347, column: 2, scope: !7805)
!7820 = !DILocation(line: 0, scope: !7805)
!7821 = !DILocation(line: 364, column: 29, scope: !7822)
!7822 = distinct !DILexicalBlock(scope: !7823, file: !561, line: 364, column: 2)
!7823 = distinct !DILexicalBlock(scope: !7805, file: !561, line: 364, column: 2)
!7824 = !DILocation(line: 364, column: 2, scope: !7823)
!7825 = !DILocation(line: 365, column: 25, scope: !7826)
!7826 = distinct !DILexicalBlock(scope: !7822, file: !561, line: 364, column: 66)
!7827 = !DILocation(line: 365, column: 3, scope: !7826)
!7828 = !DILocation(line: 364, column: 62, scope: !7822)
!7829 = distinct !{!7829, !7824, !7830}
!7830 = !DILocation(line: 366, column: 2, scope: !7823)
!7831 = !DILocation(line: 369, column: 23, scope: !7805)
!7832 = !DILocation(line: 369, column: 21, scope: !7805)
!7833 = !DILocation(line: 372, column: 2, scope: !7805)
!7834 = !DILocation(line: 433, column: 2, scope: !7835)
!7835 = distinct !DILexicalBlock(scope: !7836, file: !561, line: 433, column: 2)
!7836 = distinct !DILexicalBlock(scope: !7805, file: !561, line: 433, column: 2)
!7837 = !DILocation(line: 433, column: 2, scope: !7836)
!7838 = !DILocation(line: 433, column: 2, scope: !7839)
!7839 = distinct !DILexicalBlock(scope: !7835, file: !561, line: 433, column: 2)
!7840 = !DILocation(line: 444, column: 1, scope: !7805)
!7841 = distinct !DISubprogram(name: "strcpy", scope: !7842, file: !7842, line: 20, type: !7843, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !7847)
!7842 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7843 = !DISubroutineType(types: !7844)
!7844 = !{!106, !7845, !7846}
!7845 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !106)
!7846 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !278)
!7847 = !{!7848, !7849, !7850}
!7848 = !DILocalVariable(name: "d", arg: 1, scope: !7841, file: !7842, line: 20, type: !7845)
!7849 = !DILocalVariable(name: "s", arg: 2, scope: !7841, file: !7842, line: 20, type: !7846)
!7850 = !DILocalVariable(name: "dest", scope: !7841, file: !7842, line: 22, type: !106)
!7851 = !DILocation(line: 0, scope: !7841)
!7852 = !DILocation(line: 24, column: 9, scope: !7841)
!7853 = !DILocation(line: 24, column: 12, scope: !7841)
!7854 = !DILocation(line: 24, column: 2, scope: !7841)
!7855 = !DILocation(line: 25, column: 6, scope: !7856)
!7856 = distinct !DILexicalBlock(scope: !7841, file: !7842, line: 24, column: 21)
!7857 = !DILocation(line: 26, column: 4, scope: !7856)
!7858 = !DILocation(line: 27, column: 4, scope: !7856)
!7859 = distinct !{!7859, !7854, !7860}
!7860 = !DILocation(line: 28, column: 2, scope: !7841)
!7861 = !DILocation(line: 30, column: 5, scope: !7841)
!7862 = !DILocation(line: 32, column: 2, scope: !7841)
!7863 = distinct !DISubprogram(name: "strncpy", scope: !7842, file: !7842, line: 42, type: !7864, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !7866)
!7864 = !DISubroutineType(types: !7865)
!7865 = !{!106, !7845, !7846, !239}
!7866 = !{!7867, !7868, !7869, !7870}
!7867 = !DILocalVariable(name: "d", arg: 1, scope: !7863, file: !7842, line: 42, type: !7845)
!7868 = !DILocalVariable(name: "s", arg: 2, scope: !7863, file: !7842, line: 42, type: !7846)
!7869 = !DILocalVariable(name: "n", arg: 3, scope: !7863, file: !7842, line: 42, type: !239)
!7870 = !DILocalVariable(name: "dest", scope: !7863, file: !7842, line: 44, type: !106)
!7871 = !DILocation(line: 0, scope: !7863)
!7872 = !DILocation(line: 46, column: 12, scope: !7863)
!7873 = !DILocation(line: 46, column: 17, scope: !7863)
!7874 = !DILocation(line: 46, column: 20, scope: !7863)
!7875 = !DILocation(line: 46, column: 23, scope: !7863)
!7876 = !DILocation(line: 46, column: 2, scope: !7863)
!7877 = !DILocation(line: 47, column: 6, scope: !7878)
!7878 = distinct !DILexicalBlock(scope: !7863, file: !7842, line: 46, column: 32)
!7879 = !DILocation(line: 48, column: 4, scope: !7878)
!7880 = !DILocation(line: 49, column: 4, scope: !7878)
!7881 = !DILocation(line: 50, column: 4, scope: !7878)
!7882 = distinct !{!7882, !7876, !7883}
!7883 = !DILocation(line: 51, column: 2, scope: !7863)
!7884 = !DILocation(line: 54, column: 6, scope: !7885)
!7885 = distinct !DILexicalBlock(scope: !7863, file: !7842, line: 53, column: 16)
!7886 = !DILocation(line: 55, column: 4, scope: !7885)
!7887 = !DILocation(line: 56, column: 4, scope: !7885)
!7888 = !DILocation(line: 53, column: 11, scope: !7863)
!7889 = !DILocation(line: 53, column: 2, scope: !7863)
!7890 = distinct !{!7890, !7889, !7891}
!7891 = !DILocation(line: 57, column: 2, scope: !7863)
!7892 = !DILocation(line: 59, column: 2, scope: !7863)
!7893 = distinct !DISubprogram(name: "strchr", scope: !7842, file: !7842, line: 69, type: !7894, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !7896)
!7894 = !DISubroutineType(types: !7895)
!7895 = !{!106, !278, !119}
!7896 = !{!7897, !7898, !7899}
!7897 = !DILocalVariable(name: "s", arg: 1, scope: !7893, file: !7842, line: 69, type: !278)
!7898 = !DILocalVariable(name: "c", arg: 2, scope: !7893, file: !7842, line: 69, type: !119)
!7899 = !DILocalVariable(name: "tmp", scope: !7893, file: !7842, line: 71, type: !107)
!7900 = !DILocation(line: 0, scope: !7893)
!7901 = !DILocation(line: 73, column: 2, scope: !7893)
!7902 = !DILocation(line: 73, column: 10, scope: !7893)
!7903 = !DILocation(line: 73, column: 13, scope: !7893)
!7904 = !DILocation(line: 73, column: 21, scope: !7893)
!7905 = !DILocation(line: 74, column: 4, scope: !7906)
!7906 = distinct !DILexicalBlock(scope: !7893, file: !7842, line: 73, column: 38)
!7907 = distinct !{!7907, !7901, !7908}
!7908 = !DILocation(line: 75, column: 2, scope: !7893)
!7909 = !DILocation(line: 77, column: 9, scope: !7893)
!7910 = !DILocation(line: 77, column: 2, scope: !7893)
!7911 = distinct !DISubprogram(name: "strrchr", scope: !7842, file: !7842, line: 87, type: !7894, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !7912)
!7912 = !{!7913, !7914, !7915}
!7913 = !DILocalVariable(name: "s", arg: 1, scope: !7911, file: !7842, line: 87, type: !278)
!7914 = !DILocalVariable(name: "c", arg: 2, scope: !7911, file: !7842, line: 87, type: !119)
!7915 = !DILocalVariable(name: "match", scope: !7911, file: !7842, line: 89, type: !106)
!7916 = !DILocation(line: 0, scope: !7911)
!7917 = !DILocation(line: 91, column: 2, scope: !7911)
!7918 = !DILocation(line: 92, column: 7, scope: !7919)
!7919 = distinct !DILexicalBlock(scope: !7920, file: !7842, line: 92, column: 7)
!7920 = distinct !DILexicalBlock(scope: !7911, file: !7842, line: 91, column: 5)
!7921 = !DILocation(line: 92, column: 10, scope: !7919)
!7922 = !DILocation(line: 92, column: 7, scope: !7920)
!7923 = !DILocation(line: 95, column: 13, scope: !7911)
!7924 = !DILocation(line: 95, column: 2, scope: !7920)
!7925 = distinct !{!7925, !7917, !7926}
!7926 = !DILocation(line: 95, column: 15, scope: !7911)
!7927 = !DILocation(line: 97, column: 2, scope: !7911)
!7928 = distinct !DISubprogram(name: "strlen", scope: !7842, file: !7842, line: 107, type: !7929, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !7931)
!7929 = !DISubroutineType(types: !7930)
!7930 = !{!239, !278}
!7931 = !{!7932, !7933}
!7932 = !DILocalVariable(name: "s", arg: 1, scope: !7928, file: !7842, line: 107, type: !278)
!7933 = !DILocalVariable(name: "n", scope: !7928, file: !7842, line: 109, type: !239)
!7934 = !DILocation(line: 0, scope: !7928)
!7935 = !DILocation(line: 111, column: 9, scope: !7928)
!7936 = !DILocation(line: 111, column: 12, scope: !7928)
!7937 = !DILocation(line: 111, column: 2, scope: !7928)
!7938 = !DILocation(line: 112, column: 4, scope: !7939)
!7939 = distinct !DILexicalBlock(scope: !7928, file: !7842, line: 111, column: 21)
!7940 = !DILocation(line: 113, column: 4, scope: !7939)
!7941 = distinct !{!7941, !7937, !7942}
!7942 = !DILocation(line: 114, column: 2, scope: !7928)
!7943 = !DILocation(line: 116, column: 2, scope: !7928)
!7944 = distinct !DISubprogram(name: "strnlen", scope: !7842, file: !7842, line: 126, type: !7945, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !7947)
!7945 = !DISubroutineType(types: !7946)
!7946 = !{!239, !278, !239}
!7947 = !{!7948, !7949, !7950}
!7948 = !DILocalVariable(name: "s", arg: 1, scope: !7944, file: !7842, line: 126, type: !278)
!7949 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7944, file: !7842, line: 126, type: !239)
!7950 = !DILocalVariable(name: "n", scope: !7944, file: !7842, line: 128, type: !239)
!7951 = !DILocation(line: 0, scope: !7944)
!7952 = !DILocation(line: 130, column: 9, scope: !7944)
!7953 = !DILocation(line: 130, column: 12, scope: !7944)
!7954 = !DILocation(line: 130, column: 20, scope: !7944)
!7955 = !DILocation(line: 130, column: 2, scope: !7944)
!7956 = !DILocation(line: 131, column: 4, scope: !7957)
!7957 = distinct !DILexicalBlock(scope: !7944, file: !7842, line: 130, column: 35)
!7958 = !DILocation(line: 132, column: 4, scope: !7957)
!7959 = distinct !{!7959, !7955, !7960}
!7960 = !DILocation(line: 133, column: 2, scope: !7944)
!7961 = !DILocation(line: 135, column: 2, scope: !7944)
!7962 = distinct !DISubprogram(name: "strcmp", scope: !7842, file: !7842, line: 145, type: !7963, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !7965)
!7963 = !DISubroutineType(types: !7964)
!7964 = !{!119, !278, !278}
!7965 = !{!7966, !7967}
!7966 = !DILocalVariable(name: "s1", arg: 1, scope: !7962, file: !7842, line: 145, type: !278)
!7967 = !DILocalVariable(name: "s2", arg: 2, scope: !7962, file: !7842, line: 145, type: !278)
!7968 = !DILocation(line: 0, scope: !7962)
!7969 = !DILocation(line: 147, column: 10, scope: !7962)
!7970 = !DILocation(line: 147, column: 17, scope: !7962)
!7971 = !DILocation(line: 147, column: 14, scope: !7962)
!7972 = !DILocation(line: 147, column: 22, scope: !7962)
!7973 = !DILocation(line: 148, column: 5, scope: !7974)
!7974 = distinct !DILexicalBlock(scope: !7962, file: !7842, line: 147, column: 40)
!7975 = !DILocation(line: 149, column: 5, scope: !7974)
!7976 = distinct !{!7976, !7977, !7978}
!7977 = !DILocation(line: 147, column: 2, scope: !7962)
!7978 = !DILocation(line: 150, column: 2, scope: !7962)
!7979 = !DILocation(line: 152, column: 9, scope: !7962)
!7980 = !DILocation(line: 152, column: 15, scope: !7962)
!7981 = !DILocation(line: 152, column: 13, scope: !7962)
!7982 = !DILocation(line: 152, column: 2, scope: !7962)
!7983 = distinct !DISubprogram(name: "strncmp", scope: !7842, file: !7842, line: 162, type: !7984, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !7986)
!7984 = !DISubroutineType(types: !7985)
!7985 = !{!119, !278, !278, !239}
!7986 = !{!7987, !7988, !7989}
!7987 = !DILocalVariable(name: "s1", arg: 1, scope: !7983, file: !7842, line: 162, type: !278)
!7988 = !DILocalVariable(name: "s2", arg: 2, scope: !7983, file: !7842, line: 162, type: !278)
!7989 = !DILocalVariable(name: "n", arg: 3, scope: !7983, file: !7842, line: 162, type: !239)
!7990 = !DILocation(line: 0, scope: !7983)
!7991 = !DILocation(line: 164, column: 17, scope: !7983)
!7992 = !DILocation(line: 164, column: 21, scope: !7983)
!7993 = !DILocation(line: 164, column: 28, scope: !7983)
!7994 = !DILocation(line: 164, column: 25, scope: !7983)
!7995 = !DILocation(line: 164, column: 33, scope: !7983)
!7996 = !DILocation(line: 165, column: 5, scope: !7997)
!7997 = distinct !DILexicalBlock(scope: !7983, file: !7842, line: 164, column: 51)
!7998 = !DILocation(line: 166, column: 5, scope: !7997)
!7999 = !DILocation(line: 167, column: 4, scope: !7997)
!8000 = distinct !{!8000, !8001, !8002}
!8001 = !DILocation(line: 164, column: 2, scope: !7983)
!8002 = !DILocation(line: 168, column: 2, scope: !7983)
!8003 = !DILocation(line: 170, column: 25, scope: !7983)
!8004 = !DILocation(line: 170, column: 31, scope: !7983)
!8005 = !DILocation(line: 170, column: 29, scope: !7983)
!8006 = !DILocation(line: 170, column: 9, scope: !7983)
!8007 = !DILocation(line: 170, column: 2, scope: !7983)
!8008 = distinct !DISubprogram(name: "strtok_r", scope: !7842, file: !7842, line: 180, type: !8009, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !8011)
!8009 = !DISubroutineType(types: !8010)
!8010 = !{!106, !106, !278, !283}
!8011 = !{!8012, !8013, !8014, !8015, !8016}
!8012 = !DILocalVariable(name: "str", arg: 1, scope: !8008, file: !7842, line: 180, type: !106)
!8013 = !DILocalVariable(name: "sep", arg: 2, scope: !8008, file: !7842, line: 180, type: !278)
!8014 = !DILocalVariable(name: "state", arg: 3, scope: !8008, file: !7842, line: 180, type: !283)
!8015 = !DILocalVariable(name: "start", scope: !8008, file: !7842, line: 182, type: !106)
!8016 = !DILocalVariable(name: "end", scope: !8008, file: !7842, line: 182, type: !106)
!8017 = !DILocation(line: 0, scope: !8008)
!8018 = !DILocation(line: 184, column: 10, scope: !8008)
!8019 = !DILocation(line: 184, column: 22, scope: !8008)
!8020 = !DILocation(line: 187, column: 9, scope: !8008)
!8021 = !DILocation(line: 187, column: 16, scope: !8008)
!8022 = !DILocation(line: 187, column: 19, scope: !8008)
!8023 = !DILocation(line: 187, column: 2, scope: !8008)
!8024 = !DILocation(line: 188, column: 8, scope: !8025)
!8025 = distinct !DILexicalBlock(scope: !8008, file: !7842, line: 187, column: 40)
!8026 = distinct !{!8026, !8023, !8027}
!8027 = !DILocation(line: 189, column: 2, scope: !8008)
!8028 = !DILocation(line: 198, column: 9, scope: !8008)
!8029 = !DILocation(line: 198, column: 18, scope: !8008)
!8030 = !DILocation(line: 198, column: 17, scope: !8008)
!8031 = !DILocation(line: 198, column: 2, scope: !8008)
!8032 = !DILocation(line: 199, column: 6, scope: !8033)
!8033 = distinct !DILexicalBlock(scope: !8008, file: !7842, line: 198, column: 37)
!8034 = !DILocation(line: 198, column: 14, scope: !8008)
!8035 = distinct !{!8035, !8031, !8036}
!8036 = !DILocation(line: 200, column: 2, scope: !8008)
!8037 = !DILocation(line: 203, column: 8, scope: !8038)
!8038 = distinct !DILexicalBlock(scope: !8039, file: !7842, line: 202, column: 20)
!8039 = distinct !DILexicalBlock(scope: !8008, file: !7842, line: 202, column: 6)
!8040 = !DILocation(line: 204, column: 16, scope: !8038)
!8041 = !DILocation(line: 205, column: 2, scope: !8038)
!8042 = !DILocation(line: 210, column: 1, scope: !8008)
!8043 = distinct !DISubprogram(name: "strcat", scope: !7842, file: !7842, line: 212, type: !7843, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !8044)
!8044 = !{!8045, !8046}
!8045 = !DILocalVariable(name: "dest", arg: 1, scope: !8043, file: !7842, line: 212, type: !7845)
!8046 = !DILocalVariable(name: "src", arg: 2, scope: !8043, file: !7842, line: 212, type: !7846)
!8047 = !DILocation(line: 0, scope: !8043)
!8048 = !DILocation(line: 214, column: 16, scope: !8043)
!8049 = !DILocation(line: 214, column: 14, scope: !8043)
!8050 = !DILocation(line: 214, column: 2, scope: !8043)
!8051 = !DILocation(line: 215, column: 2, scope: !8043)
!8052 = distinct !DISubprogram(name: "strncat", scope: !7842, file: !7842, line: 218, type: !7864, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !8053)
!8053 = !{!8054, !8055, !8056, !8057, !8058}
!8054 = !DILocalVariable(name: "dest", arg: 1, scope: !8052, file: !7842, line: 218, type: !7845)
!8055 = !DILocalVariable(name: "src", arg: 2, scope: !8052, file: !7842, line: 218, type: !7846)
!8056 = !DILocalVariable(name: "n", arg: 3, scope: !8052, file: !7842, line: 219, type: !239)
!8057 = !DILocalVariable(name: "orig_dest", scope: !8052, file: !7842, line: 221, type: !106)
!8058 = !DILocalVariable(name: "len", scope: !8052, file: !7842, line: 222, type: !239)
!8059 = !DILocation(line: 0, scope: !8052)
!8060 = !DILocation(line: 222, column: 15, scope: !8052)
!8061 = !DILocation(line: 224, column: 7, scope: !8052)
!8062 = !DILocation(line: 225, column: 14, scope: !8052)
!8063 = !DILocation(line: 225, column: 19, scope: !8052)
!8064 = !DILocation(line: 225, column: 11, scope: !8052)
!8065 = !DILocation(line: 225, column: 23, scope: !8052)
!8066 = !DILocation(line: 225, column: 28, scope: !8052)
!8067 = !DILocation(line: 225, column: 2, scope: !8052)
!8068 = !DILocation(line: 226, column: 17, scope: !8069)
!8069 = distinct !DILexicalBlock(scope: !8052, file: !7842, line: 225, column: 38)
!8070 = !DILocation(line: 226, column: 8, scope: !8069)
!8071 = !DILocation(line: 226, column: 11, scope: !8069)
!8072 = distinct !{!8072, !8067, !8073}
!8073 = !DILocation(line: 227, column: 2, scope: !8052)
!8074 = !DILocation(line: 228, column: 8, scope: !8052)
!8075 = !DILocation(line: 230, column: 2, scope: !8052)
!8076 = distinct !DISubprogram(name: "memcmp", scope: !7842, file: !7842, line: 239, type: !8077, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !8079)
!8077 = !DISubroutineType(types: !8078)
!8078 = !{!119, !13, !13, !239}
!8079 = !{!8080, !8081, !8082, !8083, !8084}
!8080 = !DILocalVariable(name: "m1", arg: 1, scope: !8076, file: !7842, line: 239, type: !13)
!8081 = !DILocalVariable(name: "m2", arg: 2, scope: !8076, file: !7842, line: 239, type: !13)
!8082 = !DILocalVariable(name: "n", arg: 3, scope: !8076, file: !7842, line: 239, type: !239)
!8083 = !DILocalVariable(name: "c1", scope: !8076, file: !7842, line: 241, type: !278)
!8084 = !DILocalVariable(name: "c2", scope: !8076, file: !7842, line: 242, type: !278)
!8085 = !DILocation(line: 0, scope: !8076)
!8086 = !DILocation(line: 244, column: 7, scope: !8087)
!8087 = distinct !DILexicalBlock(scope: !8076, file: !7842, line: 244, column: 6)
!8088 = !DILocation(line: 244, column: 6, scope: !8076)
!8089 = !DILocation(line: 248, column: 10, scope: !8076)
!8090 = !DILocation(line: 248, column: 14, scope: !8076)
!8091 = !DILocation(line: 248, column: 19, scope: !8076)
!8092 = !DILocation(line: 248, column: 2, scope: !8076)
!8093 = !DILocation(line: 248, column: 23, scope: !8076)
!8094 = !DILocation(line: 248, column: 30, scope: !8076)
!8095 = !DILocation(line: 248, column: 27, scope: !8076)
!8096 = !DILocation(line: 249, column: 5, scope: !8097)
!8097 = distinct !DILexicalBlock(scope: !8076, file: !7842, line: 248, column: 36)
!8098 = !DILocation(line: 250, column: 5, scope: !8097)
!8099 = distinct !{!8099, !8092, !8100}
!8100 = !DILocation(line: 251, column: 2, scope: !8076)
!8101 = !DILocation(line: 253, column: 9, scope: !8076)
!8102 = !DILocation(line: 253, column: 15, scope: !8076)
!8103 = !DILocation(line: 253, column: 13, scope: !8076)
!8104 = !DILocation(line: 253, column: 2, scope: !8076)
!8105 = !DILocation(line: 254, column: 1, scope: !8076)
!8106 = distinct !DISubprogram(name: "memmove", scope: !7842, file: !7842, line: 263, type: !8107, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !8109)
!8107 = !DISubroutineType(types: !8108)
!8108 = !{!113, !113, !13, !239}
!8109 = !{!8110, !8111, !8112, !8113, !8114}
!8110 = !DILocalVariable(name: "d", arg: 1, scope: !8106, file: !7842, line: 263, type: !113)
!8111 = !DILocalVariable(name: "s", arg: 2, scope: !8106, file: !7842, line: 263, type: !13)
!8112 = !DILocalVariable(name: "n", arg: 3, scope: !8106, file: !7842, line: 263, type: !239)
!8113 = !DILocalVariable(name: "dest", scope: !8106, file: !7842, line: 265, type: !106)
!8114 = !DILocalVariable(name: "src", scope: !8106, file: !7842, line: 266, type: !278)
!8115 = !DILocation(line: 0, scope: !8106)
!8116 = !DILocation(line: 268, column: 21, scope: !8117)
!8117 = distinct !DILexicalBlock(scope: !8106, file: !7842, line: 268, column: 6)
!8118 = !DILocation(line: 268, column: 28, scope: !8117)
!8119 = !DILocation(line: 268, column: 6, scope: !8106)
!8120 = !DILocation(line: 280, column: 12, scope: !8121)
!8121 = distinct !DILexicalBlock(scope: !8117, file: !7842, line: 278, column: 9)
!8122 = !DILocation(line: 280, column: 3, scope: !8121)
!8123 = !DILocation(line: 275, column: 5, scope: !8124)
!8124 = distinct !DILexicalBlock(scope: !8125, file: !7842, line: 274, column: 17)
!8125 = distinct !DILexicalBlock(scope: !8117, file: !7842, line: 268, column: 33)
!8126 = !DILocation(line: 276, column: 14, scope: !8124)
!8127 = !DILocation(line: 276, column: 4, scope: !8124)
!8128 = !DILocation(line: 276, column: 12, scope: !8124)
!8129 = !DILocation(line: 274, column: 12, scope: !8125)
!8130 = !DILocation(line: 274, column: 3, scope: !8125)
!8131 = distinct !{!8131, !8130, !8132}
!8132 = !DILocation(line: 277, column: 3, scope: !8125)
!8133 = !DILocation(line: 281, column: 12, scope: !8134)
!8134 = distinct !DILexicalBlock(scope: !8121, file: !7842, line: 280, column: 17)
!8135 = !DILocation(line: 281, column: 10, scope: !8134)
!8136 = !DILocation(line: 282, column: 8, scope: !8134)
!8137 = !DILocation(line: 283, column: 7, scope: !8134)
!8138 = !DILocation(line: 284, column: 5, scope: !8134)
!8139 = distinct !{!8139, !8122, !8140}
!8140 = !DILocation(line: 285, column: 3, scope: !8121)
!8141 = !DILocation(line: 288, column: 2, scope: !8106)
!8142 = distinct !DISubprogram(name: "memcpy", scope: !7842, file: !7842, line: 298, type: !8143, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !8147)
!8143 = !DISubroutineType(types: !8144)
!8144 = !{!113, !8145, !8146, !239}
!8145 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !113)
!8146 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!8147 = !{!8148, !8149, !8150, !8151, !8152}
!8148 = !DILocalVariable(name: "d", arg: 1, scope: !8142, file: !7842, line: 298, type: !8145)
!8149 = !DILocalVariable(name: "s", arg: 2, scope: !8142, file: !7842, line: 298, type: !8146)
!8150 = !DILocalVariable(name: "n", arg: 3, scope: !8142, file: !7842, line: 298, type: !239)
!8151 = !DILocalVariable(name: "d_byte", scope: !8142, file: !7842, line: 302, type: !1013)
!8152 = !DILocalVariable(name: "s_byte", scope: !8142, file: !7842, line: 303, type: !2861)
!8153 = !DILocation(line: 0, scope: !8142)
!8154 = !DILocation(line: 337, column: 11, scope: !8142)
!8155 = !DILocation(line: 337, column: 2, scope: !8142)
!8156 = !DILocation(line: 338, column: 25, scope: !8157)
!8157 = distinct !DILexicalBlock(scope: !8142, file: !7842, line: 337, column: 16)
!8158 = !DILocation(line: 338, column: 17, scope: !8157)
!8159 = !DILocation(line: 338, column: 11, scope: !8157)
!8160 = !DILocation(line: 338, column: 15, scope: !8157)
!8161 = !DILocation(line: 339, column: 4, scope: !8157)
!8162 = distinct !{!8162, !8155, !8163}
!8163 = !DILocation(line: 340, column: 2, scope: !8142)
!8164 = !DILocation(line: 342, column: 2, scope: !8142)
!8165 = distinct !DISubprogram(name: "memset", scope: !7842, file: !7842, line: 352, type: !8166, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !8168)
!8166 = !DISubroutineType(types: !8167)
!8167 = !{!113, !113, !119, !239}
!8168 = !{!8169, !8170, !8171, !8172, !8173}
!8169 = !DILocalVariable(name: "buf", arg: 1, scope: !8165, file: !7842, line: 352, type: !113)
!8170 = !DILocalVariable(name: "c", arg: 2, scope: !8165, file: !7842, line: 352, type: !119)
!8171 = !DILocalVariable(name: "n", arg: 3, scope: !8165, file: !7842, line: 352, type: !239)
!8172 = !DILocalVariable(name: "d_byte", scope: !8165, file: !7842, line: 356, type: !1013)
!8173 = !DILocalVariable(name: "c_byte", scope: !8165, file: !7842, line: 357, type: !186)
!8174 = !DILocation(line: 0, scope: !8165)
!8175 = !DILocation(line: 357, column: 25, scope: !8165)
!8176 = !DILocation(line: 389, column: 11, scope: !8165)
!8177 = !DILocation(line: 389, column: 2, scope: !8165)
!8178 = !DILocation(line: 390, column: 11, scope: !8179)
!8179 = distinct !DILexicalBlock(scope: !8165, file: !7842, line: 389, column: 16)
!8180 = !DILocation(line: 390, column: 15, scope: !8179)
!8181 = !DILocation(line: 391, column: 4, scope: !8179)
!8182 = distinct !{!8182, !8177, !8183}
!8183 = !DILocation(line: 392, column: 2, scope: !8165)
!8184 = !DILocation(line: 394, column: 2, scope: !8165)
!8185 = distinct !DISubprogram(name: "memchr", scope: !7842, file: !7842, line: 404, type: !8186, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2858, retainedNodes: !8188)
!8186 = !DISubroutineType(types: !8187)
!8187 = !{!113, !13, !119, !239}
!8188 = !{!8189, !8190, !8191, !8192}
!8189 = !DILocalVariable(name: "s", arg: 1, scope: !8185, file: !7842, line: 404, type: !13)
!8190 = !DILocalVariable(name: "c", arg: 2, scope: !8185, file: !7842, line: 404, type: !119)
!8191 = !DILocalVariable(name: "n", arg: 3, scope: !8185, file: !7842, line: 404, type: !239)
!8192 = !DILocalVariable(name: "p", scope: !8193, file: !7842, line: 407, type: !2861)
!8193 = distinct !DILexicalBlock(scope: !8194, file: !7842, line: 406, column: 14)
!8194 = distinct !DILexicalBlock(scope: !8185, file: !7842, line: 406, column: 6)
!8195 = !DILocation(line: 0, scope: !8185)
!8196 = !DILocation(line: 406, column: 8, scope: !8194)
!8197 = !DILocation(line: 406, column: 6, scope: !8185)
!8198 = !DILocation(line: 409, column: 3, scope: !8193)
!8199 = !DILocation(line: 0, scope: !8193)
!8200 = !DILocation(line: 410, column: 8, scope: !8201)
!8201 = distinct !DILexicalBlock(scope: !8202, file: !7842, line: 410, column: 8)
!8202 = distinct !DILexicalBlock(scope: !8193, file: !7842, line: 409, column: 6)
!8203 = !DILocation(line: 410, column: 13, scope: !8201)
!8204 = !DILocation(line: 410, column: 8, scope: !8202)
!8205 = distinct !{!8205, !8198, !8206}
!8206 = !DILocation(line: 414, column: 20, scope: !8193)
!8207 = !DILocation(line: 417, column: 2, scope: !8185)
!8208 = !DILocation(line: 418, column: 1, scope: !8185)
!8209 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !571, file: !571, line: 23, type: !4347, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !8210)
!8210 = !{!8211}
!8211 = !DILocalVariable(name: "hook", arg: 1, scope: !8209, file: !571, line: 23, type: !300)
!8212 = !DILocation(line: 0, scope: !8209)
!8213 = !DILocation(line: 25, column: 15, scope: !8209)
!8214 = !DILocation(line: 26, column: 1, scope: !8209)
!8215 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !571, file: !571, line: 14, type: !301, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !8216)
!8216 = !{!8217}
!8217 = !DILocalVariable(name: "c", arg: 1, scope: !8215, file: !571, line: 14, type: !119)
!8218 = !DILocation(line: 0, scope: !8215)
!8219 = !DILocation(line: 18, column: 2, scope: !8215)
!8220 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !571, file: !571, line: 28, type: !8221, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !8223)
!8221 = !DISubroutineType(types: !8222)
!8222 = !{!119, !119, !567}
!8223 = !{!8224, !8225}
!8224 = !DILocalVariable(name: "c", arg: 1, scope: !8220, file: !571, line: 28, type: !119)
!8225 = !DILocalVariable(name: "stream", arg: 2, scope: !8220, file: !571, line: 28, type: !567)
!8226 = !DILocation(line: 0, scope: !8220)
!8227 = !DILocation(line: 30, column: 27, scope: !8220)
!8228 = !DILocation(line: 30, column: 50, scope: !8220)
!8229 = !DILocation(line: 30, column: 9, scope: !8220)
!8230 = !DILocation(line: 30, column: 2, scope: !8220)
!8231 = distinct !DISubprogram(name: "fputc", scope: !571, file: !571, line: 41, type: !8221, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !8232)
!8232 = !{!8233, !8234}
!8233 = !DILocalVariable(name: "c", arg: 1, scope: !8231, file: !571, line: 41, type: !119)
!8234 = !DILocalVariable(name: "stream", arg: 2, scope: !8231, file: !571, line: 41, type: !567)
!8235 = !DILocation(line: 0, scope: !8231)
!8236 = !DILocation(line: 43, column: 9, scope: !8231)
!8237 = !DILocation(line: 43, column: 2, scope: !8231)
!8238 = distinct !DISubprogram(name: "zephyr_fputc", scope: !8239, file: !8239, line: 72, type: !8221, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !8240)
!8239 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pi")
!8240 = !{!8241, !8242}
!8241 = !DILocalVariable(name: "c", arg: 1, scope: !8238, file: !8239, line: 72, type: !119)
!8242 = !DILocalVariable(name: "stream", arg: 2, scope: !8238, file: !8239, line: 72, type: !567)
!8243 = !DILocation(line: 0, scope: !8238)
!8244 = !DILocation(line: 81, column: 2, scope: !8245)
!8245 = distinct !DILexicalBlock(scope: !8238, file: !8239, line: 81, column: 2)
!8246 = !{i64 2155508816}
!8247 = !DILocation(line: 82, column: 9, scope: !8238)
!8248 = !DILocation(line: 82, column: 2, scope: !8238)
!8249 = distinct !DISubprogram(name: "fputs", scope: !571, file: !571, line: 46, type: !8250, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !8253)
!8250 = !DISubroutineType(types: !8251)
!8251 = !{!119, !7846, !8252}
!8252 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !567)
!8253 = !{!8254, !8255, !8256, !8257}
!8254 = !DILocalVariable(name: "s", arg: 1, scope: !8249, file: !571, line: 46, type: !7846)
!8255 = !DILocalVariable(name: "stream", arg: 2, scope: !8249, file: !571, line: 46, type: !8252)
!8256 = !DILocalVariable(name: "len", scope: !8249, file: !571, line: 48, type: !119)
!8257 = !DILocalVariable(name: "ret", scope: !8249, file: !571, line: 49, type: !119)
!8258 = !DILocation(line: 0, scope: !8249)
!8259 = !DILocation(line: 48, column: 12, scope: !8249)
!8260 = !DILocation(line: 51, column: 8, scope: !8249)
!8261 = !DILocation(line: 53, column: 13, scope: !8249)
!8262 = !DILocation(line: 53, column: 9, scope: !8249)
!8263 = !DILocation(line: 53, column: 2, scope: !8249)
!8264 = distinct !DISubprogram(name: "fwrite", scope: !571, file: !571, line: 99, type: !8265, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !8267)
!8265 = !DISubroutineType(types: !8266)
!8266 = !{!239, !8146, !239, !239, !8252}
!8267 = !{!8268, !8269, !8270, !8271}
!8268 = !DILocalVariable(name: "ptr", arg: 1, scope: !8264, file: !571, line: 99, type: !8146)
!8269 = !DILocalVariable(name: "size", arg: 2, scope: !8264, file: !571, line: 99, type: !239)
!8270 = !DILocalVariable(name: "nitems", arg: 3, scope: !8264, file: !571, line: 99, type: !239)
!8271 = !DILocalVariable(name: "stream", arg: 4, scope: !8264, file: !571, line: 100, type: !8252)
!8272 = !DILocation(line: 0, scope: !8264)
!8273 = !DILocation(line: 102, column: 9, scope: !8264)
!8274 = !DILocation(line: 102, column: 2, scope: !8264)
!8275 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !8239, file: !8239, line: 96, type: !8265, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !8276)
!8276 = !{!8277, !8278, !8279, !8280}
!8277 = !DILocalVariable(name: "ptr", arg: 1, scope: !8275, file: !8239, line: 96, type: !8146)
!8278 = !DILocalVariable(name: "size", arg: 2, scope: !8275, file: !8239, line: 96, type: !239)
!8279 = !DILocalVariable(name: "nitems", arg: 3, scope: !8275, file: !8239, line: 96, type: !239)
!8280 = !DILocalVariable(name: "stream", arg: 4, scope: !8275, file: !8239, line: 96, type: !8252)
!8281 = !DILocation(line: 0, scope: !8275)
!8282 = !DILocation(line: 107, column: 2, scope: !8283)
!8283 = distinct !DILexicalBlock(scope: !8275, file: !8239, line: 107, column: 2)
!8284 = !{i64 2155508920}
!8285 = !DILocation(line: 108, column: 9, scope: !8275)
!8286 = !DILocation(line: 108, column: 2, scope: !8275)
!8287 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !571, file: !571, line: 56, type: !8265, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !8288)
!8288 = !{!8289, !8290, !8291, !8292, !8293, !8294, !8295, !8296}
!8289 = !DILocalVariable(name: "ptr", arg: 1, scope: !8287, file: !571, line: 56, type: !8146)
!8290 = !DILocalVariable(name: "size", arg: 2, scope: !8287, file: !571, line: 56, type: !239)
!8291 = !DILocalVariable(name: "nitems", arg: 3, scope: !8287, file: !571, line: 57, type: !239)
!8292 = !DILocalVariable(name: "stream", arg: 4, scope: !8287, file: !571, line: 57, type: !8252)
!8293 = !DILocalVariable(name: "i", scope: !8287, file: !571, line: 59, type: !239)
!8294 = !DILocalVariable(name: "j", scope: !8287, file: !571, line: 60, type: !239)
!8295 = !DILocalVariable(name: "p", scope: !8287, file: !571, line: 61, type: !2861)
!8296 = !DILabel(scope: !8287, name: "done", file: !571, line: 82)
!8297 = !DILocation(line: 0, scope: !8287)
!8298 = !DILocation(line: 63, column: 14, scope: !8299)
!8299 = distinct !DILexicalBlock(scope: !8287, file: !571, line: 63, column: 6)
!8300 = !DILocation(line: 63, column: 24, scope: !8299)
!8301 = !DILocation(line: 72, column: 3, scope: !8302)
!8302 = distinct !DILexicalBlock(scope: !8287, file: !571, line: 70, column: 5)
!8303 = !DILocation(line: 0, scope: !8302)
!8304 = !DILocation(line: 73, column: 8, scope: !8305)
!8305 = distinct !DILexicalBlock(scope: !8306, file: !571, line: 73, column: 8)
!8306 = distinct !DILexicalBlock(scope: !8302, file: !571, line: 72, column: 6)
!8307 = !DILocation(line: 73, column: 29, scope: !8305)
!8308 = !DILocation(line: 73, column: 27, scope: !8305)
!8309 = !DILocation(line: 73, column: 21, scope: !8305)
!8310 = !DILocation(line: 73, column: 33, scope: !8305)
!8311 = !DILocation(line: 73, column: 8, scope: !8306)
!8312 = !DILocation(line: 76, column: 5, scope: !8306)
!8313 = !DILocation(line: 77, column: 14, scope: !8302)
!8314 = !DILocation(line: 77, column: 3, scope: !8306)
!8315 = distinct !{!8315, !8301, !8316}
!8316 = !DILocation(line: 77, column: 17, scope: !8302)
!8317 = !DILocation(line: 79, column: 4, scope: !8302)
!8318 = !DILocation(line: 80, column: 13, scope: !8287)
!8319 = !DILocation(line: 80, column: 2, scope: !8302)
!8320 = distinct !{!8320, !8321, !8322}
!8321 = !DILocation(line: 70, column: 2, scope: !8287)
!8322 = !DILocation(line: 80, column: 16, scope: !8287)
!8323 = !DILocation(line: 82, column: 1, scope: !8287)
!8324 = !DILocation(line: 83, column: 17, scope: !8287)
!8325 = !DILocation(line: 83, column: 2, scope: !8287)
!8326 = !DILocation(line: 84, column: 1, scope: !8287)
!8327 = distinct !DISubprogram(name: "puts", scope: !571, file: !571, line: 106, type: !8328, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !564, retainedNodes: !8330)
!8328 = !DISubroutineType(types: !8329)
!8329 = !{!119, !278}
!8330 = !{!8331}
!8331 = !DILocalVariable(name: "s", arg: 1, scope: !8327, file: !571, line: 106, type: !278)
!8332 = !DILocation(line: 0, scope: !8327)
!8333 = !DILocation(line: 108, column: 6, scope: !8334)
!8334 = distinct !DILexicalBlock(scope: !8327, file: !571, line: 108, column: 6)
!8335 = !DILocation(line: 108, column: 23, scope: !8334)
!8336 = !DILocation(line: 108, column: 6, scope: !8327)
!8337 = !DILocation(line: 112, column: 9, scope: !8327)
!8338 = !DILocation(line: 112, column: 29, scope: !8327)
!8339 = !DILocation(line: 112, column: 2, scope: !8327)
!8340 = !DILocation(line: 113, column: 1, scope: !8327)
!8341 = distinct !DISubprogram(name: "snprintf", scope: !8342, file: !8342, line: 28, type: !8343, scopeLine: 30, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2863, retainedNodes: !8345)
!8342 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/sprintf.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8343 = !DISubroutineType(types: !8344)
!8344 = !{!119, !7845, !239, !7846, null}
!8345 = !{!8346, !8347, !8348, !8349, !8356, !8361, !8362}
!8346 = !DILocalVariable(name: "str", arg: 1, scope: !8341, file: !8342, line: 28, type: !7845)
!8347 = !DILocalVariable(name: "len", arg: 2, scope: !8341, file: !8342, line: 28, type: !239)
!8348 = !DILocalVariable(name: "format", arg: 3, scope: !8341, file: !8342, line: 29, type: !7846)
!8349 = !DILocalVariable(name: "vargs", scope: !8341, file: !8342, line: 31, type: !8350)
!8350 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3431, line: 99, baseType: !8351)
!8351 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3431, line: 40, baseType: !8352)
!8352 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !8342, baseType: !8353)
!8353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !8354)
!8354 = !{!8355}
!8355 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !8353, file: !8342, line: 31, baseType: !113, size: 32)
!8356 = !DILocalVariable(name: "p", scope: !8341, file: !8342, line: 33, type: !8357)
!8357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "emitter", file: !8342, line: 13, size: 64, elements: !8358)
!8358 = !{!8359, !8360}
!8359 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !8357, file: !8342, line: 14, baseType: !106, size: 32)
!8360 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8357, file: !8342, line: 15, baseType: !119, size: 32, offset: 32)
!8361 = !DILocalVariable(name: "r", scope: !8341, file: !8342, line: 34, type: !119)
!8362 = !DILocalVariable(name: "dummy", scope: !8341, file: !8342, line: 35, type: !107)
!8363 = !DILocation(line: 0, scope: !8341)
!8364 = !DILocation(line: 31, column: 2, scope: !8341)
!8365 = !DILocation(line: 31, column: 10, scope: !8341)
!8366 = !DILocation(line: 33, column: 2, scope: !8341)
!8367 = !DILocation(line: 33, column: 17, scope: !8341)
!8368 = !DILocation(line: 35, column: 2, scope: !8341)
!8369 = !DILocation(line: 37, column: 10, scope: !8370)
!8370 = distinct !DILexicalBlock(scope: !8341, file: !8342, line: 37, column: 6)
!8371 = !DILocation(line: 37, column: 6, scope: !8341)
!8372 = !DILocation(line: 41, column: 4, scope: !8341)
!8373 = !DILocation(line: 41, column: 8, scope: !8341)
!8374 = !DILocation(line: 42, column: 4, scope: !8341)
!8375 = !DILocation(line: 42, column: 8, scope: !8341)
!8376 = !DILocation(line: 44, column: 2, scope: !8341)
!8377 = !DILocation(line: 45, column: 6, scope: !8341)
!8378 = !DILocation(line: 46, column: 2, scope: !8341)
!8379 = !DILocation(line: 48, column: 6, scope: !8341)
!8380 = !DILocation(line: 48, column: 11, scope: !8341)
!8381 = !DILocation(line: 50, column: 1, scope: !8341)
!8382 = !DILocation(line: 49, column: 2, scope: !8341)
!8383 = distinct !DISubprogram(name: "cbvprintf", scope: !3463, file: !3463, line: 739, type: !8384, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2863, retainedNodes: !8386)
!8384 = !DISubroutineType(types: !8385)
!8385 = !{!119, !3813, !113, !278, !8350}
!8386 = !{!8387, !8388, !8389, !8390}
!8387 = !DILocalVariable(name: "out", arg: 1, scope: !8383, file: !3463, line: 739, type: !3813)
!8388 = !DILocalVariable(name: "ctx", arg: 2, scope: !8383, file: !3463, line: 739, type: !113)
!8389 = !DILocalVariable(name: "format", arg: 3, scope: !8383, file: !3463, line: 739, type: !278)
!8390 = !DILocalVariable(name: "ap", arg: 4, scope: !8383, file: !3463, line: 739, type: !8350)
!8391 = !DILocation(line: 0, scope: !8383)
!8392 = !DILocation(line: 741, column: 9, scope: !8383)
!8393 = !DILocation(line: 741, column: 2, scope: !8383)
!8394 = distinct !DISubprogram(name: "sprintf_out", scope: !8342, file: !8342, line: 18, type: !8395, scopeLine: 19, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2863, retainedNodes: !8398)
!8395 = !DISubroutineType(types: !8396)
!8396 = !{!119, !119, !8397}
!8397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8357, size: 32)
!8398 = !{!8399, !8400}
!8399 = !DILocalVariable(name: "c", arg: 1, scope: !8394, file: !8342, line: 18, type: !119)
!8400 = !DILocalVariable(name: "p", arg: 2, scope: !8394, file: !8342, line: 18, type: !8397)
!8401 = !DILocation(line: 0, scope: !8394)
!8402 = !DILocation(line: 20, column: 9, scope: !8403)
!8403 = distinct !DILexicalBlock(scope: !8394, file: !8342, line: 20, column: 6)
!8404 = !DILocation(line: 20, column: 13, scope: !8403)
!8405 = !DILocation(line: 20, column: 6, scope: !8394)
!8406 = !DILocation(line: 21, column: 15, scope: !8407)
!8407 = distinct !DILexicalBlock(scope: !8403, file: !8342, line: 20, column: 18)
!8408 = !DILocation(line: 21, column: 8, scope: !8407)
!8409 = !DILocation(line: 21, column: 13, scope: !8407)
!8410 = !DILocation(line: 22, column: 10, scope: !8407)
!8411 = !DILocation(line: 23, column: 10, scope: !8407)
!8412 = !DILocation(line: 24, column: 2, scope: !8407)
!8413 = !DILocation(line: 25, column: 2, scope: !8394)
!8414 = distinct !DISubprogram(name: "sprintf", scope: !8342, file: !8342, line: 52, type: !8415, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2863, retainedNodes: !8417)
!8415 = !DISubroutineType(types: !8416)
!8416 = !{!119, !7845, !7846, null}
!8417 = !{!8418, !8419, !8420, !8421, !8422}
!8418 = !DILocalVariable(name: "str", arg: 1, scope: !8414, file: !8342, line: 52, type: !7845)
!8419 = !DILocalVariable(name: "format", arg: 2, scope: !8414, file: !8342, line: 52, type: !7846)
!8420 = !DILocalVariable(name: "vargs", scope: !8414, file: !8342, line: 54, type: !8350)
!8421 = !DILocalVariable(name: "p", scope: !8414, file: !8342, line: 56, type: !8357)
!8422 = !DILocalVariable(name: "r", scope: !8414, file: !8342, line: 57, type: !119)
!8423 = !DILocation(line: 0, scope: !8414)
!8424 = !DILocation(line: 54, column: 2, scope: !8414)
!8425 = !DILocation(line: 54, column: 10, scope: !8414)
!8426 = !DILocation(line: 56, column: 2, scope: !8414)
!8427 = !DILocation(line: 56, column: 17, scope: !8414)
!8428 = !DILocation(line: 59, column: 4, scope: !8414)
!8429 = !DILocation(line: 59, column: 8, scope: !8414)
!8430 = !DILocation(line: 60, column: 4, scope: !8414)
!8431 = !DILocation(line: 60, column: 8, scope: !8414)
!8432 = !DILocation(line: 62, column: 2, scope: !8414)
!8433 = !DILocation(line: 63, column: 6, scope: !8414)
!8434 = !DILocation(line: 64, column: 2, scope: !8414)
!8435 = !DILocation(line: 66, column: 6, scope: !8414)
!8436 = !DILocation(line: 66, column: 11, scope: !8414)
!8437 = !DILocation(line: 68, column: 1, scope: !8414)
!8438 = !DILocation(line: 67, column: 2, scope: !8414)
!8439 = distinct !DISubprogram(name: "vsnprintf", scope: !8342, file: !8342, line: 70, type: !8440, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2863, retainedNodes: !8442)
!8440 = !DISubroutineType(types: !8441)
!8441 = !{!119, !7845, !239, !7846, !8350}
!8442 = !{!8443, !8444, !8445, !8446, !8447, !8448, !8449}
!8443 = !DILocalVariable(name: "str", arg: 1, scope: !8439, file: !8342, line: 70, type: !7845)
!8444 = !DILocalVariable(name: "len", arg: 2, scope: !8439, file: !8342, line: 70, type: !239)
!8445 = !DILocalVariable(name: "format", arg: 3, scope: !8439, file: !8342, line: 71, type: !7846)
!8446 = !DILocalVariable(name: "vargs", arg: 4, scope: !8439, file: !8342, line: 71, type: !8350)
!8447 = !DILocalVariable(name: "p", scope: !8439, file: !8342, line: 73, type: !8357)
!8448 = !DILocalVariable(name: "r", scope: !8439, file: !8342, line: 74, type: !119)
!8449 = !DILocalVariable(name: "dummy", scope: !8439, file: !8342, line: 75, type: !107)
!8450 = !DILocation(line: 0, scope: !8439)
!8451 = !DILocation(line: 73, column: 2, scope: !8439)
!8452 = !DILocation(line: 73, column: 17, scope: !8439)
!8453 = !DILocation(line: 75, column: 2, scope: !8439)
!8454 = !DILocation(line: 77, column: 10, scope: !8455)
!8455 = distinct !DILexicalBlock(scope: !8439, file: !8342, line: 77, column: 6)
!8456 = !DILocation(line: 77, column: 6, scope: !8439)
!8457 = !DILocation(line: 81, column: 4, scope: !8439)
!8458 = !DILocation(line: 81, column: 8, scope: !8439)
!8459 = !DILocation(line: 82, column: 4, scope: !8439)
!8460 = !DILocation(line: 82, column: 8, scope: !8439)
!8461 = !DILocation(line: 84, column: 6, scope: !8439)
!8462 = !DILocation(line: 86, column: 6, scope: !8439)
!8463 = !DILocation(line: 86, column: 11, scope: !8439)
!8464 = !DILocation(line: 88, column: 1, scope: !8439)
!8465 = !DILocation(line: 87, column: 2, scope: !8439)
!8466 = distinct !DISubprogram(name: "vsprintf", scope: !8342, file: !8342, line: 90, type: !8467, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2863, retainedNodes: !8469)
!8467 = !DISubroutineType(types: !8468)
!8468 = !{!119, !7845, !7846, !8350}
!8469 = !{!8470, !8471, !8472, !8473, !8474}
!8470 = !DILocalVariable(name: "str", arg: 1, scope: !8466, file: !8342, line: 90, type: !7845)
!8471 = !DILocalVariable(name: "format", arg: 2, scope: !8466, file: !8342, line: 90, type: !7846)
!8472 = !DILocalVariable(name: "vargs", arg: 3, scope: !8466, file: !8342, line: 91, type: !8350)
!8473 = !DILocalVariable(name: "p", scope: !8466, file: !8342, line: 93, type: !8357)
!8474 = !DILocalVariable(name: "r", scope: !8466, file: !8342, line: 94, type: !119)
!8475 = !DILocation(line: 0, scope: !8466)
!8476 = !DILocation(line: 93, column: 2, scope: !8466)
!8477 = !DILocation(line: 93, column: 17, scope: !8466)
!8478 = !DILocation(line: 96, column: 4, scope: !8466)
!8479 = !DILocation(line: 96, column: 8, scope: !8466)
!8480 = !DILocation(line: 97, column: 4, scope: !8466)
!8481 = !DILocation(line: 97, column: 8, scope: !8466)
!8482 = !DILocation(line: 99, column: 6, scope: !8466)
!8483 = !DILocation(line: 101, column: 6, scope: !8466)
!8484 = !DILocation(line: 101, column: 11, scope: !8466)
!8485 = !DILocation(line: 103, column: 1, scope: !8466)
!8486 = !DILocation(line: 102, column: 2, scope: !8466)
!8487 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !714, file: !714, line: 368, type: !767, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8488)
!8488 = !{!8489}
!8489 = !DILocalVariable(name: "dev", arg: 1, scope: !8487, file: !714, line: 368, type: !743)
!8490 = !DILocation(line: 0, scope: !8487)
!8491 = !DILocation(line: 370, column: 2, scope: !8487)
!8492 = !DILocation(line: 371, column: 1, scope: !8487)
!8493 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !714, file: !714, line: 243, type: !8494, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8496)
!8494 = !DISubroutineType(types: !8495)
!8495 = !{null, !119, !119, !743}
!8496 = !{!8497, !8498, !8499, !8500, !8502}
!8497 = !DILocalVariable(name: "min", arg: 1, scope: !8493, file: !714, line: 243, type: !119)
!8498 = !DILocalVariable(name: "max", arg: 2, scope: !8493, file: !714, line: 243, type: !119)
!8499 = !DILocalVariable(name: "dev", arg: 3, scope: !8493, file: !714, line: 243, type: !743)
!8500 = !DILocalVariable(name: "data", scope: !8493, file: !714, line: 245, type: !8501)
!8501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !747, size: 32)
!8502 = !DILocalVariable(name: "line", scope: !8493, file: !714, line: 246, type: !119)
!8503 = !DILocation(line: 0, scope: !8493)
!8504 = !DILocation(line: 245, column: 38, scope: !8493)
!8505 = !DILocation(line: 249, column: 24, scope: !8506)
!8506 = distinct !DILexicalBlock(scope: !8507, file: !714, line: 249, column: 2)
!8507 = distinct !DILexicalBlock(scope: !8493, file: !714, line: 249, column: 2)
!8508 = !DILocation(line: 249, column: 2, scope: !8507)
!8509 = !DILocation(line: 251, column: 7, scope: !8510)
!8510 = distinct !DILexicalBlock(scope: !8511, file: !714, line: 251, column: 7)
!8511 = distinct !DILexicalBlock(scope: !8506, file: !714, line: 249, column: 39)
!8512 = !DILocation(line: 251, column: 7, scope: !8511)
!8513 = !DILocation(line: 253, column: 4, scope: !8514)
!8514 = distinct !DILexicalBlock(scope: !8510, file: !714, line: 251, column: 36)
!8515 = !DILocation(line: 256, column: 24, scope: !8516)
!8516 = distinct !DILexicalBlock(scope: !8514, file: !714, line: 256, column: 8)
!8517 = !DILocation(line: 256, column: 9, scope: !8516)
!8518 = !DILocation(line: 256, column: 8, scope: !8514)
!8519 = !DILocation(line: 260, column: 43, scope: !8514)
!8520 = !DILocation(line: 260, column: 4, scope: !8514)
!8521 = !DILocation(line: 261, column: 3, scope: !8514)
!8522 = !DILocation(line: 249, column: 35, scope: !8506)
!8523 = distinct !{!8523, !8508, !8524}
!8524 = !DILocation(line: 262, column: 2, scope: !8507)
!8525 = !DILocation(line: 263, column: 1, scope: !8493)
!8526 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !714, file: !714, line: 158, type: !301, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8527)
!8527 = !{!8528}
!8528 = !DILocalVariable(name: "line", arg: 1, scope: !8526, file: !714, line: 158, type: !119)
!8529 = !DILocation(line: 0, scope: !8526)
!8530 = !DILocation(line: 170, column: 38, scope: !8531)
!8531 = distinct !DILexicalBlock(scope: !8532, file: !714, line: 160, column: 17)
!8532 = distinct !DILexicalBlock(scope: !8526, file: !714, line: 160, column: 6)
!8533 = !DILocation(line: 170, column: 10, scope: !8531)
!8534 = !DILocation(line: 176, column: 1, scope: !8526)
!8535 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !714, file: !714, line: 183, type: !8536, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8538)
!8536 = !DISubroutineType(types: !8537)
!8537 = !{null, !119}
!8538 = !{!8539}
!8539 = !DILocalVariable(name: "line", arg: 1, scope: !8535, file: !714, line: 183, type: !119)
!8540 = !DILocation(line: 0, scope: !8535)
!8541 = !DILocation(line: 195, column: 28, scope: !8542)
!8542 = distinct !DILexicalBlock(scope: !8543, file: !714, line: 185, column: 17)
!8543 = distinct !DILexicalBlock(scope: !8535, file: !714, line: 185, column: 6)
!8544 = !DILocation(line: 195, column: 3, scope: !8542)
!8545 = !DILocation(line: 200, column: 1, scope: !8535)
!8546 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !8547, file: !8547, line: 910, type: !6547, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8548)
!8547 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8548 = !{!8549}
!8549 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8546, file: !8547, line: 910, type: !118)
!8550 = !DILocation(line: 0, scope: !8546)
!8551 = !DILocation(line: 912, column: 3, scope: !8546)
!8552 = !DILocation(line: 913, column: 1, scope: !8546)
!8553 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !8547, file: !8547, line: 834, type: !7737, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8554)
!8554 = !{!8555}
!8555 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8553, file: !8547, line: 834, type: !118)
!8556 = !DILocation(line: 0, scope: !8553)
!8557 = !DILocation(line: 836, column: 11, scope: !8553)
!8558 = !DILocation(line: 836, column: 40, scope: !8553)
!8559 = !DILocation(line: 836, column: 3, scope: !8553)
!8560 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !714, file: !714, line: 304, type: !767, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8561)
!8561 = !{!8562}
!8562 = !DILocalVariable(name: "dev", arg: 1, scope: !8560, file: !714, line: 304, type: !743)
!8563 = !DILocation(line: 0, scope: !8560)
!8564 = !DILocation(line: 306, column: 2, scope: !8560)
!8565 = !DILocation(line: 307, column: 1, scope: !8560)
!8566 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !714, file: !714, line: 299, type: !767, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8567)
!8567 = !{!8568}
!8568 = !DILocalVariable(name: "dev", arg: 1, scope: !8566, file: !714, line: 299, type: !743)
!8569 = !DILocation(line: 0, scope: !8566)
!8570 = !DILocation(line: 301, column: 2, scope: !8566)
!8571 = !DILocation(line: 302, column: 1, scope: !8566)
!8572 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !714, file: !714, line: 294, type: !767, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8573)
!8573 = !{!8574}
!8574 = !DILocalVariable(name: "dev", arg: 1, scope: !8572, file: !714, line: 294, type: !743)
!8575 = !DILocation(line: 0, scope: !8572)
!8576 = !DILocation(line: 296, column: 2, scope: !8572)
!8577 = !DILocation(line: 297, column: 1, scope: !8572)
!8578 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !714, file: !714, line: 397, type: !767, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8579)
!8579 = !{!8580}
!8580 = !DILocalVariable(name: "dev", arg: 1, scope: !8578, file: !714, line: 397, type: !743)
!8581 = !DILocation(line: 0, scope: !8578)
!8582 = !DILocation(line: 399, column: 2, scope: !8578)
!8583 = !DILocation(line: 400, column: 1, scope: !8578)
!8584 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !714, file: !714, line: 392, type: !767, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8585)
!8585 = !{!8586}
!8586 = !DILocalVariable(name: "dev", arg: 1, scope: !8584, file: !714, line: 392, type: !743)
!8587 = !DILocation(line: 0, scope: !8584)
!8588 = !DILocation(line: 394, column: 2, scope: !8584)
!8589 = !DILocation(line: 395, column: 1, scope: !8584)
!8590 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !714, file: !714, line: 289, type: !767, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8591)
!8591 = !{!8592}
!8592 = !DILocalVariable(name: "dev", arg: 1, scope: !8590, file: !714, line: 289, type: !743)
!8593 = !DILocation(line: 0, scope: !8590)
!8594 = !DILocation(line: 291, column: 2, scope: !8590)
!8595 = !DILocation(line: 292, column: 1, scope: !8590)
!8596 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !714, file: !714, line: 387, type: !767, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8597)
!8597 = !{!8598}
!8598 = !DILocalVariable(name: "dev", arg: 1, scope: !8596, file: !714, line: 387, type: !743)
!8599 = !DILocation(line: 0, scope: !8596)
!8600 = !DILocation(line: 389, column: 2, scope: !8596)
!8601 = !DILocation(line: 390, column: 1, scope: !8596)
!8602 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !714, file: !714, line: 382, type: !767, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8603)
!8603 = !{!8604}
!8604 = !DILocalVariable(name: "dev", arg: 1, scope: !8602, file: !714, line: 382, type: !743)
!8605 = !DILocation(line: 0, scope: !8602)
!8606 = !DILocation(line: 384, column: 2, scope: !8602)
!8607 = !DILocation(line: 385, column: 1, scope: !8602)
!8608 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !714, file: !714, line: 373, type: !767, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8609)
!8609 = !{!8610}
!8610 = !DILocalVariable(name: "dev", arg: 1, scope: !8608, file: !714, line: 373, type: !743)
!8611 = !DILocation(line: 0, scope: !8608)
!8612 = !DILocation(line: 375, column: 2, scope: !8608)
!8613 = !DILocation(line: 376, column: 1, scope: !8608)
!8614 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !714, file: !714, line: 284, type: !767, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8615)
!8615 = !{!8616}
!8616 = !DILocalVariable(name: "dev", arg: 1, scope: !8614, file: !714, line: 284, type: !743)
!8617 = !DILocation(line: 0, scope: !8614)
!8618 = !DILocation(line: 286, column: 2, scope: !8614)
!8619 = !DILocation(line: 287, column: 1, scope: !8614)
!8620 = distinct !DISubprogram(name: "stm32_exti_init", scope: !714, file: !714, line: 416, type: !741, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8621)
!8621 = !{!8622}
!8622 = !DILocalVariable(name: "dev", arg: 1, scope: !8620, file: !714, line: 416, type: !743)
!8623 = !DILocation(line: 0, scope: !8620)
!8624 = !DILocation(line: 418, column: 2, scope: !8620)
!8625 = !DILocation(line: 420, column: 2, scope: !8620)
!8626 = !DILocation(line: 0, scope: !766)
!8627 = !DILocation(line: 493, column: 2, scope: !8628)
!8628 = distinct !DILexicalBlock(scope: !766, file: !714, line: 493, column: 2)
!8629 = !DILocation(line: 497, column: 2, scope: !8630)
!8630 = distinct !DILexicalBlock(scope: !766, file: !714, line: 497, column: 2)
!8631 = !DILocation(line: 507, column: 2, scope: !8632)
!8632 = distinct !DILexicalBlock(scope: !766, file: !714, line: 507, column: 2)
!8633 = !DILocation(line: 512, column: 2, scope: !8634)
!8634 = distinct !DILexicalBlock(scope: !766, file: !714, line: 512, column: 2)
!8635 = !DILocation(line: 516, column: 2, scope: !8636)
!8636 = distinct !DILexicalBlock(scope: !766, file: !714, line: 516, column: 2)
!8637 = !DILocation(line: 523, column: 2, scope: !8638)
!8638 = distinct !DILexicalBlock(scope: !766, file: !714, line: 523, column: 2)
!8639 = !DILocation(line: 527, column: 2, scope: !8640)
!8640 = distinct !DILexicalBlock(scope: !766, file: !714, line: 527, column: 2)
!8641 = !DILocation(line: 581, column: 2, scope: !8642)
!8642 = distinct !DILexicalBlock(scope: !766, file: !714, line: 581, column: 2)
!8643 = !DILocation(line: 586, column: 2, scope: !8644)
!8644 = distinct !DILexicalBlock(scope: !766, file: !714, line: 586, column: 2)
!8645 = !DILocation(line: 591, column: 2, scope: !8646)
!8646 = distinct !DILexicalBlock(scope: !766, file: !714, line: 591, column: 2)
!8647 = !DILocation(line: 595, column: 2, scope: !8648)
!8648 = distinct !DILexicalBlock(scope: !766, file: !714, line: 595, column: 2)
!8649 = !DILocation(line: 607, column: 1, scope: !766)
!8650 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !714, file: !714, line: 112, type: !8536, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8651)
!8651 = !{!8652, !8653}
!8652 = !DILocalVariable(name: "line", arg: 1, scope: !8650, file: !714, line: 112, type: !119)
!8653 = !DILocalVariable(name: "irqnum", scope: !8650, file: !714, line: 114, type: !119)
!8654 = !DILocation(line: 0, scope: !8650)
!8655 = !DILocation(line: 122, column: 13, scope: !8656)
!8656 = distinct !DILexicalBlock(scope: !8650, file: !714, line: 122, column: 6)
!8657 = !DILocation(line: 122, column: 6, scope: !8650)
!8658 = !DILocation(line: 123, column: 3, scope: !8659)
!8659 = distinct !DILexicalBlock(scope: !8660, file: !714, line: 123, column: 3)
!8660 = distinct !DILexicalBlock(scope: !8661, file: !714, line: 123, column: 3)
!8661 = distinct !DILexicalBlock(scope: !8662, file: !714, line: 123, column: 3)
!8662 = distinct !DILexicalBlock(scope: !8656, file: !714, line: 122, column: 22)
!8663 = !DILocation(line: 121, column: 11, scope: !8650)
!8664 = !DILocation(line: 130, column: 26, scope: !8650)
!8665 = !DILocation(line: 130, column: 2, scope: !8650)
!8666 = !DILocation(line: 134, column: 2, scope: !8650)
!8667 = !DILocation(line: 135, column: 1, scope: !8650)
!8668 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !8547, file: !8547, line: 268, type: !6547, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8669)
!8669 = !{!8670}
!8670 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8668, file: !8547, line: 268, type: !118)
!8671 = !DILocation(line: 0, scope: !8668)
!8672 = !DILocation(line: 270, column: 3, scope: !8668)
!8673 = !DILocation(line: 271, column: 1, scope: !8668)
!8674 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !714, file: !714, line: 137, type: !8536, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8675)
!8675 = !{!8676}
!8676 = !DILocalVariable(name: "line", arg: 1, scope: !8674, file: !714, line: 137, type: !119)
!8677 = !DILocation(line: 0, scope: !8674)
!8678 = !DILocation(line: 141, column: 11, scope: !8679)
!8679 = distinct !DILexicalBlock(scope: !8674, file: !714, line: 141, column: 6)
!8680 = !DILocation(line: 141, column: 6, scope: !8674)
!8681 = !DILocation(line: 145, column: 28, scope: !8682)
!8682 = distinct !DILexicalBlock(scope: !8679, file: !714, line: 141, column: 17)
!8683 = !DILocation(line: 145, column: 3, scope: !8682)
!8684 = !DILocation(line: 147, column: 2, scope: !8682)
!8685 = !DILocation(line: 151, column: 1, scope: !8674)
!8686 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !8547, file: !8547, line: 309, type: !6547, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8687)
!8687 = !{!8688}
!8688 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8686, file: !8547, line: 309, type: !118)
!8689 = !DILocation(line: 0, scope: !8686)
!8690 = !DILocation(line: 311, column: 3, scope: !8686)
!8691 = !DILocation(line: 312, column: 1, scope: !8686)
!8692 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !714, file: !714, line: 202, type: !8693, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8695)
!8693 = !DISubroutineType(types: !8694)
!8694 = !{null, !119, !119}
!8695 = !{!8696, !8697}
!8696 = !DILocalVariable(name: "line", arg: 1, scope: !8692, file: !714, line: 202, type: !119)
!8697 = !DILocalVariable(name: "trigger", arg: 2, scope: !8692, file: !714, line: 202, type: !119)
!8698 = !DILocation(line: 0, scope: !8692)
!8699 = !DILocation(line: 211, column: 2, scope: !8692)
!8700 = !DILocation(line: 213, column: 36, scope: !8701)
!8701 = distinct !DILexicalBlock(scope: !8692, file: !714, line: 211, column: 19)
!8702 = !DILocation(line: 213, column: 3, scope: !8701)
!8703 = !DILocation(line: 214, column: 3, scope: !8701)
!8704 = !DILocation(line: 215, column: 3, scope: !8701)
!8705 = !DILocation(line: 217, column: 35, scope: !8701)
!8706 = !DILocation(line: 217, column: 3, scope: !8701)
!8707 = !DILocation(line: 218, column: 3, scope: !8701)
!8708 = !DILocation(line: 219, column: 3, scope: !8701)
!8709 = !DILocation(line: 221, column: 36, scope: !8701)
!8710 = !DILocation(line: 221, column: 3, scope: !8701)
!8711 = !DILocation(line: 222, column: 3, scope: !8701)
!8712 = !DILocation(line: 223, column: 3, scope: !8701)
!8713 = !DILocation(line: 225, column: 35, scope: !8701)
!8714 = !DILocation(line: 225, column: 3, scope: !8701)
!8715 = !DILocation(line: 226, column: 3, scope: !8701)
!8716 = !DILocation(line: 227, column: 3, scope: !8701)
!8717 = !DILocation(line: 232, column: 1, scope: !8692)
!8718 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !8547, file: !8547, line: 573, type: !6547, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8719)
!8719 = !{!8720}
!8720 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8718, file: !8547, line: 573, type: !118)
!8721 = !DILocation(line: 0, scope: !8718)
!8722 = !DILocation(line: 575, column: 3, scope: !8718)
!8723 = !DILocation(line: 577, column: 1, scope: !8718)
!8724 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !8547, file: !8547, line: 703, type: !6547, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8725)
!8725 = !{!8726}
!8726 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8724, file: !8547, line: 703, type: !118)
!8727 = !DILocation(line: 0, scope: !8724)
!8728 = !DILocation(line: 705, column: 3, scope: !8724)
!8729 = !DILocation(line: 706, column: 1, scope: !8724)
!8730 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !8547, file: !8547, line: 529, type: !6547, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8731)
!8731 = !{!8732}
!8732 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8730, file: !8547, line: 529, type: !118)
!8733 = !DILocation(line: 0, scope: !8730)
!8734 = !DILocation(line: 531, column: 3, scope: !8730)
!8735 = !DILocation(line: 533, column: 1, scope: !8730)
!8736 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !8547, file: !8547, line: 661, type: !6547, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8737)
!8737 = !{!8738}
!8738 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8736, file: !8547, line: 661, type: !118)
!8739 = !DILocation(line: 0, scope: !8736)
!8740 = !DILocation(line: 663, column: 3, scope: !8736)
!8741 = !DILocation(line: 664, column: 1, scope: !8736)
!8742 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !714, file: !714, line: 433, type: !8743, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8745)
!8743 = !DISubroutineType(types: !8744)
!8744 = !{!119, !119, !754, !113}
!8745 = !{!8746, !8747, !8748, !8749, !8751}
!8746 = !DILocalVariable(name: "line", arg: 1, scope: !8742, file: !714, line: 433, type: !119)
!8747 = !DILocalVariable(name: "cb", arg: 2, scope: !8742, file: !714, line: 433, type: !754)
!8748 = !DILocalVariable(name: "arg", arg: 3, scope: !8742, file: !714, line: 433, type: !113)
!8749 = !DILocalVariable(name: "dev", scope: !8742, file: !714, line: 435, type: !8750)
!8750 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !743)
!8751 = !DILocalVariable(name: "data", scope: !8742, file: !714, line: 436, type: !8501)
!8752 = !DILocation(line: 0, scope: !8742)
!8753 = !DILocation(line: 438, column: 21, scope: !8754)
!8754 = distinct !DILexicalBlock(scope: !8742, file: !714, line: 438, column: 6)
!8755 = !DILocation(line: 438, column: 6, scope: !8754)
!8756 = !DILocation(line: 438, column: 6, scope: !8742)
!8757 = !DILocation(line: 442, column: 20, scope: !8742)
!8758 = !DILocation(line: 443, column: 17, scope: !8742)
!8759 = !DILocation(line: 443, column: 22, scope: !8742)
!8760 = !DILocation(line: 445, column: 2, scope: !8742)
!8761 = !DILocation(line: 446, column: 1, scope: !8742)
!8762 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !714, file: !714, line: 448, type: !8536, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !8763)
!8763 = !{!8764, !8765, !8766}
!8764 = !DILocalVariable(name: "line", arg: 1, scope: !8762, file: !714, line: 448, type: !119)
!8765 = !DILocalVariable(name: "dev", scope: !8762, file: !714, line: 450, type: !8750)
!8766 = !DILocalVariable(name: "data", scope: !8762, file: !714, line: 451, type: !8501)
!8767 = !DILocation(line: 0, scope: !8762)
!8768 = !DILocation(line: 453, column: 17, scope: !8762)
!8769 = !DILocation(line: 453, column: 20, scope: !8762)
!8770 = !DILocation(line: 454, column: 17, scope: !8762)
!8771 = !DILocation(line: 454, column: 22, scope: !8762)
!8772 = !DILocation(line: 455, column: 1, scope: !8762)
!8773 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !912, file: !912, line: 183, type: !950, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !8774)
!8774 = !{!8775, !8776, !8777, !8778, !8779}
!8775 = !DILocalVariable(name: "dev", arg: 1, scope: !8773, file: !912, line: 183, type: !941)
!8776 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8773, file: !912, line: 184, type: !952)
!8777 = !DILocalVariable(name: "pclken", scope: !8773, file: !912, line: 186, type: !902)
!8778 = !DILocalVariable(name: "reg", scope: !8773, file: !912, line: 187, type: !1526)
!8779 = !DILocalVariable(name: "reg_val", scope: !8773, file: !912, line: 188, type: !118)
!8780 = !DILocation(line: 0, scope: !8773)
!8781 = !DILocation(line: 192, column: 6, scope: !8782)
!8782 = distinct !DILexicalBlock(scope: !8773, file: !912, line: 192, column: 6)
!8783 = !DILocation(line: 192, column: 6, scope: !8773)
!8784 = !DILocation(line: 197, column: 52, scope: !8773)
!8785 = !DILocation(line: 197, column: 8, scope: !8773)
!8786 = !DILocation(line: 198, column: 12, scope: !8773)
!8787 = !DILocation(line: 199, column: 21, scope: !8773)
!8788 = !DILocation(line: 199, column: 10, scope: !8773)
!8789 = !DILocation(line: 200, column: 7, scope: !8773)
!8790 = !DILocation(line: 202, column: 2, scope: !8773)
!8791 = !DILocation(line: 203, column: 1, scope: !8773)
!8792 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !912, file: !912, line: 205, type: !950, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !8793)
!8793 = !{!8794, !8795, !8796, !8797, !8798}
!8794 = !DILocalVariable(name: "dev", arg: 1, scope: !8792, file: !912, line: 205, type: !941)
!8795 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8792, file: !912, line: 206, type: !952)
!8796 = !DILocalVariable(name: "pclken", scope: !8792, file: !912, line: 208, type: !902)
!8797 = !DILocalVariable(name: "reg", scope: !8792, file: !912, line: 209, type: !1526)
!8798 = !DILocalVariable(name: "reg_val", scope: !8792, file: !912, line: 210, type: !118)
!8799 = !DILocation(line: 0, scope: !8792)
!8800 = !DILocation(line: 214, column: 6, scope: !8801)
!8801 = distinct !DILexicalBlock(scope: !8792, file: !912, line: 214, column: 6)
!8802 = !DILocation(line: 214, column: 6, scope: !8792)
!8803 = !DILocation(line: 219, column: 52, scope: !8792)
!8804 = !DILocation(line: 219, column: 8, scope: !8792)
!8805 = !DILocation(line: 220, column: 12, scope: !8792)
!8806 = !DILocation(line: 221, column: 22, scope: !8792)
!8807 = !DILocation(line: 221, column: 13, scope: !8792)
!8808 = !DILocation(line: 221, column: 10, scope: !8792)
!8809 = !DILocation(line: 222, column: 7, scope: !8792)
!8810 = !DILocation(line: 224, column: 2, scope: !8792)
!8811 = !DILocation(line: 225, column: 1, scope: !8792)
!8812 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !912, file: !912, line: 262, type: !966, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !8813)
!8813 = !{!8814, !8815, !8816, !8817, !8818, !8819, !8820, !8821}
!8814 = !DILocalVariable(name: "clock", arg: 1, scope: !8812, file: !912, line: 262, type: !941)
!8815 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8812, file: !912, line: 263, type: !952)
!8816 = !DILocalVariable(name: "rate", arg: 3, scope: !8812, file: !912, line: 264, type: !908)
!8817 = !DILocalVariable(name: "pclken", scope: !8812, file: !912, line: 266, type: !902)
!8818 = !DILocalVariable(name: "ahb_clock", scope: !8812, file: !912, line: 273, type: !118)
!8819 = !DILocalVariable(name: "apb1_clock", scope: !8812, file: !912, line: 274, type: !118)
!8820 = !DILocalVariable(name: "apb2_clock", scope: !8812, file: !912, line: 276, type: !118)
!8821 = !DILocalVariable(name: "ahb3_clock", scope: !8812, file: !912, line: 286, type: !118)
!8822 = !DILocation(line: 0, scope: !8812)
!8823 = !DILocation(line: 273, column: 23, scope: !8812)
!8824 = !DILocation(line: 299, column: 18, scope: !8812)
!8825 = !DILocation(line: 299, column: 2, scope: !8812)
!8826 = !DILocation(line: 274, column: 24, scope: !8812)
!8827 = !DILocation(line: 319, column: 3, scope: !8828)
!8828 = distinct !DILexicalBlock(scope: !8812, file: !912, line: 299, column: 23)
!8829 = !DILocation(line: 276, column: 24, scope: !8812)
!8830 = !DILocation(line: 323, column: 3, scope: !8828)
!8831 = !DILocation(line: 346, column: 33, scope: !8828)
!8832 = !DILocation(line: 346, column: 11, scope: !8828)
!8833 = !DILocation(line: 350, column: 3, scope: !8828)
!8834 = !DILocation(line: 354, column: 33, scope: !8828)
!8835 = !DILocation(line: 354, column: 11, scope: !8828)
!8836 = !DILocation(line: 358, column: 3, scope: !8828)
!8837 = !DILocation(line: 374, column: 3, scope: !8828)
!8838 = !DILocation(line: 379, column: 3, scope: !8828)
!8839 = !DILocation(line: 0, scope: !8828)
!8840 = !DILocation(line: 396, column: 1, scope: !8812)
!8841 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !912, file: !912, line: 227, type: !982, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !8842)
!8842 = !{!8843, !8844, !8845, !8846, !8847, !8848, !8849, !8850}
!8843 = !DILocalVariable(name: "dev", arg: 1, scope: !8841, file: !912, line: 227, type: !941)
!8844 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8841, file: !912, line: 228, type: !952)
!8845 = !DILocalVariable(name: "data", arg: 3, scope: !8841, file: !912, line: 229, type: !113)
!8846 = !DILocalVariable(name: "pclken", scope: !8841, file: !912, line: 233, type: !902)
!8847 = !DILocalVariable(name: "reg", scope: !8841, file: !912, line: 234, type: !1526)
!8848 = !DILocalVariable(name: "reg_val", scope: !8841, file: !912, line: 235, type: !118)
!8849 = !DILocalVariable(name: "dt_val", scope: !8841, file: !912, line: 235, type: !118)
!8850 = !DILocalVariable(name: "err", scope: !8841, file: !912, line: 236, type: !119)
!8851 = !DILocation(line: 0, scope: !8841)
!8852 = !DILocation(line: 241, column: 30, scope: !8841)
!8853 = !DILocation(line: 241, column: 8, scope: !8841)
!8854 = !DILocation(line: 242, column: 10, scope: !8855)
!8855 = distinct !DILexicalBlock(scope: !8841, file: !912, line: 242, column: 6)
!8856 = !DILocation(line: 242, column: 6, scope: !8841)
!8857 = !DILocation(line: 247, column: 11, scope: !8841)
!8858 = !DILocation(line: 248, column: 6, scope: !8841)
!8859 = !DILocation(line: 247, column: 44, scope: !8841)
!8860 = !DILocation(line: 250, column: 6, scope: !8841)
!8861 = !DILocation(line: 249, column: 52, scope: !8841)
!8862 = !DILocation(line: 249, column: 8, scope: !8841)
!8863 = !DILocation(line: 251, column: 12, scope: !8841)
!8864 = !DILocation(line: 252, column: 10, scope: !8841)
!8865 = !DILocation(line: 253, column: 7, scope: !8841)
!8866 = !DILocation(line: 255, column: 2, scope: !8841)
!8867 = !DILocation(line: 260, column: 1, scope: !8841)
!8868 = distinct !DISubprogram(name: "enabled_clock", scope: !912, file: !912, line: 100, type: !8869, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !8871)
!8869 = !DISubroutineType(types: !8870)
!8870 = !{!119, !118}
!8871 = !{!8872, !8873}
!8872 = !DILocalVariable(name: "src_clk", arg: 1, scope: !8868, file: !912, line: 100, type: !118)
!8873 = !DILocalVariable(name: "r", scope: !8868, file: !912, line: 102, type: !119)
!8874 = !DILocation(line: 0, scope: !8868)
!8875 = !DILocation(line: 104, column: 2, scope: !8868)
!8876 = !DILocation(line: 180, column: 2, scope: !8868)
!8877 = !DILocation(line: 181, column: 1, scope: !8868)
!8878 = distinct !DISubprogram(name: "get_bus_clock", scope: !912, file: !912, line: 79, type: !8879, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !8881)
!8879 = !DISubroutineType(types: !8880)
!8880 = !{!118, !118, !118}
!8881 = !{!8882, !8883}
!8882 = !DILocalVariable(name: "clock", arg: 1, scope: !8878, file: !912, line: 79, type: !118)
!8883 = !DILocalVariable(name: "prescaler", arg: 2, scope: !8878, file: !912, line: 79, type: !118)
!8884 = !DILocation(line: 0, scope: !8878)
!8885 = !DILocation(line: 81, column: 15, scope: !8878)
!8886 = !DILocation(line: 81, column: 2, scope: !8878)
!8887 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !912, file: !912, line: 68, type: !8888, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !8890)
!8888 = !DISubroutineType(types: !8889)
!8889 = !{!118, !118, !119, !119, !119}
!8890 = !{!8891, !8892, !8893, !8894}
!8891 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !8887, file: !912, line: 68, type: !118)
!8892 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !8887, file: !912, line: 69, type: !119)
!8893 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !8887, file: !912, line: 70, type: !119)
!8894 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !8887, file: !912, line: 71, type: !119)
!8895 = !DILocation(line: 0, scope: !8887)
!8896 = !DILocation(line: 75, column: 22, scope: !8887)
!8897 = !DILocation(line: 76, column: 13, scope: !8887)
!8898 = !DILocation(line: 75, column: 34, scope: !8887)
!8899 = !DILocation(line: 75, column: 2, scope: !8887)
!8900 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !912, file: !912, line: 641, type: !939, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !8901)
!8901 = !{!8902, !8903, !8904}
!8902 = !DILocalVariable(name: "dev", arg: 1, scope: !8900, file: !912, line: 641, type: !941)
!8903 = !DILocalVariable(name: "old_flash_freq", scope: !8900, file: !912, line: 664, type: !118)
!8904 = !DILocalVariable(name: "new_flash_freq", scope: !8900, file: !912, line: 665, type: !118)
!8905 = !DILocation(line: 0, scope: !8900)
!8906 = !DILocation(line: 646, column: 2, scope: !8900)
!8907 = !DILocation(line: 667, column: 19, scope: !8900)
!8908 = !DILocation(line: 674, column: 21, scope: !8909)
!8909 = distinct !DILexicalBlock(scope: !8900, file: !912, line: 674, column: 6)
!8910 = !DILocation(line: 674, column: 6, scope: !8900)
!8911 = !DILocation(line: 675, column: 3, scope: !8912)
!8912 = distinct !DILexicalBlock(scope: !8909, file: !912, line: 674, column: 59)
!8913 = !DILocation(line: 676, column: 2, scope: !8912)
!8914 = !DILocation(line: 680, column: 2, scope: !8900)
!8915 = !DILocation(line: 683, column: 2, scope: !8900)
!8916 = !DILocation(line: 690, column: 3, scope: !8917)
!8917 = distinct !DILexicalBlock(scope: !8918, file: !912, line: 689, column: 9)
!8918 = distinct !DILexicalBlock(scope: !8900, file: !912, line: 685, column: 6)
!8919 = !DILocation(line: 695, column: 2, scope: !8900)
!8920 = !DILocation(line: 696, column: 2, scope: !8900)
!8921 = !DILocation(line: 696, column: 9, scope: !8900)
!8922 = !DILocation(line: 696, column: 34, scope: !8900)
!8923 = distinct !{!8923, !8920, !8924}
!8924 = !DILocation(line: 697, column: 2, scope: !8900)
!8925 = !DILocation(line: 720, column: 21, scope: !8926)
!8926 = distinct !DILexicalBlock(scope: !8900, file: !912, line: 720, column: 6)
!8927 = !DILocation(line: 720, column: 6, scope: !8900)
!8928 = !DILocation(line: 721, column: 3, scope: !8929)
!8929 = distinct !DILexicalBlock(scope: !8926, file: !912, line: 720, column: 60)
!8930 = !DILocation(line: 722, column: 2, scope: !8929)
!8931 = !DILocation(line: 725, column: 18, scope: !8900)
!8932 = !DILocation(line: 728, column: 2, scope: !8900)
!8933 = !DILocation(line: 730, column: 2, scope: !8900)
!8934 = !DILocation(line: 745, column: 2, scope: !8900)
!8935 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !8936, file: !8936, line: 3275, type: !3336, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !2162)
!8936 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8937 = !DILocation(line: 3277, column: 21, scope: !8935)
!8938 = !DILocation(line: 3277, column: 3, scope: !8935)
!8939 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !912, file: !912, line: 507, type: !3098, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !2162)
!8940 = !DILocation(line: 516, column: 4, scope: !8941)
!8941 = distinct !DILexicalBlock(scope: !8942, file: !912, line: 515, column: 10)
!8942 = distinct !DILexicalBlock(scope: !8943, file: !912, line: 513, column: 7)
!8943 = distinct !DILexicalBlock(scope: !8944, file: !912, line: 510, column: 37)
!8944 = distinct !DILexicalBlock(scope: !8939, file: !912, line: 510, column: 6)
!8945 = !DILocation(line: 526, column: 3, scope: !8943)
!8946 = !DILocation(line: 527, column: 3, scope: !8943)
!8947 = !DILocation(line: 527, column: 10, scope: !8943)
!8948 = !DILocation(line: 527, column: 31, scope: !8943)
!8949 = distinct !{!8949, !8946, !8950}
!8950 = !DILocation(line: 529, column: 3, scope: !8943)
!8951 = !DILocation(line: 627, column: 1, scope: !8939)
!8952 = distinct !DISubprogram(name: "set_up_plls", scope: !912, file: !912, line: 448, type: !3098, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !2162)
!8953 = !DILocation(line: 460, column: 6, scope: !8954)
!8954 = distinct !DILexicalBlock(scope: !8952, file: !912, line: 460, column: 6)
!8955 = !DILocation(line: 460, column: 31, scope: !8954)
!8956 = !DILocation(line: 460, column: 6, scope: !8952)
!8957 = !DILocation(line: 461, column: 3, scope: !8958)
!8958 = distinct !DILexicalBlock(scope: !8954, file: !912, line: 460, column: 67)
!8959 = !DILocation(line: 462, column: 3, scope: !8958)
!8960 = !DILocation(line: 463, column: 2, scope: !8958)
!8961 = !DILocation(line: 464, column: 2, scope: !8952)
!8962 = !DILocation(line: 488, column: 2, scope: !8952)
!8963 = !DILocation(line: 492, column: 2, scope: !8952)
!8964 = !DILocation(line: 496, column: 2, scope: !8952)
!8965 = !DILocation(line: 499, column: 2, scope: !8952)
!8966 = !DILocation(line: 500, column: 2, scope: !8952)
!8967 = !DILocation(line: 500, column: 9, scope: !8952)
!8968 = !DILocation(line: 500, column: 30, scope: !8952)
!8969 = distinct !{!8969, !8966, !8970}
!8970 = !DILocation(line: 502, column: 2, scope: !8952)
!8971 = !DILocation(line: 505, column: 1, scope: !8952)
!8972 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8936, file: !8936, line: 3224, type: !6547, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !8973)
!8973 = !{!8974}
!8974 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8972, file: !8936, line: 3224, type: !118)
!8975 = !DILocation(line: 0, scope: !8972)
!8976 = !DILocation(line: 3226, column: 3, scope: !8972)
!8977 = !DILocation(line: 3227, column: 1, scope: !8972)
!8978 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8936, file: !8936, line: 3188, type: !6547, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !8979)
!8979 = !{!8980}
!8980 = !DILocalVariable(name: "Source", arg: 1, scope: !8978, file: !8936, line: 3188, type: !118)
!8981 = !DILocation(line: 0, scope: !8978)
!8982 = !DILocation(line: 3190, column: 3, scope: !8978)
!8983 = !DILocation(line: 3191, column: 1, scope: !8978)
!8984 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8936, file: !8936, line: 3204, type: !3336, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !2162)
!8985 = !DILocation(line: 3206, column: 21, scope: !8984)
!8986 = !DILocation(line: 3206, column: 3, scope: !8984)
!8987 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8936, file: !8936, line: 3240, type: !6547, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !8988)
!8988 = !{!8989}
!8989 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8987, file: !8936, line: 3240, type: !118)
!8990 = !DILocation(line: 0, scope: !8987)
!8991 = !DILocation(line: 3242, column: 3, scope: !8987)
!8992 = !DILocation(line: 3243, column: 1, scope: !8987)
!8993 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8936, file: !8936, line: 3256, type: !6547, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !8994)
!8994 = !{!8995}
!8995 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8993, file: !8936, line: 3256, type: !118)
!8996 = !DILocation(line: 0, scope: !8993)
!8997 = !DILocation(line: 3258, column: 3, scope: !8993)
!8998 = !DILocation(line: 3259, column: 1, scope: !8993)
!8999 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !912, file: !912, line: 409, type: !3098, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !2162)
!9000 = !DILocation(line: 412, column: 6, scope: !9001)
!9001 = distinct !DILexicalBlock(scope: !8999, file: !912, line: 412, column: 6)
!9002 = !DILocation(line: 412, column: 27, scope: !9001)
!9003 = !DILocation(line: 412, column: 6, scope: !8999)
!9004 = !DILocation(line: 414, column: 3, scope: !9005)
!9005 = distinct !DILexicalBlock(scope: !9001, file: !912, line: 412, column: 33)
!9006 = !DILocation(line: 415, column: 3, scope: !9005)
!9007 = !DILocation(line: 415, column: 10, scope: !9005)
!9008 = !DILocation(line: 415, column: 31, scope: !9005)
!9009 = distinct !{!9009, !9006, !9010}
!9010 = !DILocation(line: 417, column: 3, scope: !9005)
!9011 = !DILocation(line: 421, column: 2, scope: !8999)
!9012 = !DILocation(line: 422, column: 2, scope: !8999)
!9013 = !DILocation(line: 422, column: 9, scope: !8999)
!9014 = !DILocation(line: 422, column: 34, scope: !8999)
!9015 = distinct !{!9015, !9012, !9016}
!9016 = !DILocation(line: 423, column: 2, scope: !8999)
!9017 = !DILocation(line: 424, column: 1, scope: !8999)
!9018 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !8936, file: !8936, line: 4195, type: !3098, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !2162)
!9019 = !DILocation(line: 4197, column: 3, scope: !9018)
!9020 = !DILocation(line: 4198, column: 1, scope: !9018)
!9021 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8936, file: !8936, line: 4184, type: !3098, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !2162)
!9022 = !DILocation(line: 4186, column: 3, scope: !9021)
!9023 = !DILocation(line: 4187, column: 1, scope: !9021)
!9024 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8936, file: !8936, line: 4205, type: !3336, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !2162)
!9025 = !DILocation(line: 4207, column: 11, scope: !9024)
!9026 = !DILocation(line: 4207, column: 44, scope: !9024)
!9027 = !DILocation(line: 4207, column: 3, scope: !9024)
!9028 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8936, file: !8936, line: 3007, type: !3336, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !2162)
!9029 = !DILocation(line: 3009, column: 11, scope: !9028)
!9030 = !DILocation(line: 3009, column: 44, scope: !9028)
!9031 = !DILocation(line: 3009, column: 3, scope: !9028)
!9032 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8936, file: !8936, line: 2987, type: !3098, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !2162)
!9033 = !DILocation(line: 2989, column: 3, scope: !9032)
!9034 = !DILocation(line: 2990, column: 1, scope: !9032)
!9035 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8936, file: !8936, line: 2939, type: !3098, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !2162)
!9036 = !DILocation(line: 2941, column: 3, scope: !9035)
!9037 = !DILocation(line: 2942, column: 1, scope: !9035)
!9038 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8936, file: !8936, line: 2949, type: !3098, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !2162)
!9039 = !DILocation(line: 2951, column: 3, scope: !9038)
!9040 = !DILocation(line: 2952, column: 1, scope: !9038)
!9041 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8936, file: !8936, line: 2969, type: !3336, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !849, retainedNodes: !2162)
!9042 = !DILocation(line: 2971, column: 11, scope: !9041)
!9043 = !DILocation(line: 2971, column: 44, scope: !9041)
!9044 = !DILocation(line: 2971, column: 3, scope: !9041)
!9045 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !9046, file: !9046, line: 40, type: !3336, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2866, retainedNodes: !2162)
!9046 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9047 = !DILocation(line: 45, column: 3, scope: !9048)
!9048 = distinct !DILexicalBlock(scope: !9049, file: !9046, line: 44, column: 44)
!9049 = distinct !DILexicalBlock(scope: !9050, file: !9046, line: 44, column: 13)
!9050 = distinct !DILexicalBlock(scope: !9045, file: !9046, line: 42, column: 6)
!9051 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !9046, file: !9046, line: 56, type: !3098, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2866, retainedNodes: !2162)
!9052 = !DILocation(line: 58, column: 2, scope: !9051)
!9053 = !DILocation(line: 62, column: 1, scope: !9051)
!9054 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8936, file: !8936, line: 4304, type: !9055, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2866, retainedNodes: !9057)
!9055 = !DISubroutineType(types: !9056)
!9056 = !{null, !118, !118, !118, !118}
!9057 = !{!9058, !9059, !9060, !9061}
!9058 = !DILocalVariable(name: "Source", arg: 1, scope: !9054, file: !8936, line: 4304, type: !118)
!9059 = !DILocalVariable(name: "PLLM", arg: 2, scope: !9054, file: !8936, line: 4304, type: !118)
!9060 = !DILocalVariable(name: "PLLN", arg: 3, scope: !9054, file: !8936, line: 4304, type: !118)
!9061 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !9054, file: !8936, line: 4304, type: !118)
!9062 = !DILocation(line: 0, scope: !9054)
!9063 = !DILocation(line: 4306, column: 3, scope: !9054)
!9064 = !DILocation(line: 4308, column: 3, scope: !9054)
!9065 = !DILocation(line: 4312, column: 1, scope: !9054)
!9066 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !9046, file: !9046, line: 69, type: !3098, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2866, retainedNodes: !2162)
!9067 = !DILocation(line: 72, column: 2, scope: !9066)
!9068 = !DILocation(line: 73, column: 1, scope: !9066)
!9069 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !9070, file: !9070, line: 1185, type: !6547, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2866, retainedNodes: !9071)
!9070 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9071 = !{!9072, !9073}
!9072 = !DILocalVariable(name: "Periphs", arg: 1, scope: !9069, file: !9070, line: 1185, type: !118)
!9073 = !DILocalVariable(name: "tmpreg", scope: !9069, file: !9070, line: 1187, type: !314)
!9074 = !DILocation(line: 0, scope: !9069)
!9075 = !DILocation(line: 1187, column: 3, scope: !9069)
!9076 = !DILocation(line: 1187, column: 17, scope: !9069)
!9077 = !DILocation(line: 1188, column: 3, scope: !9069)
!9078 = !DILocation(line: 1190, column: 12, scope: !9069)
!9079 = !DILocation(line: 1190, column: 10, scope: !9069)
!9080 = !DILocation(line: 1191, column: 9, scope: !9069)
!9081 = !DILocation(line: 1192, column: 1, scope: !9069)
!9082 = distinct !DISubprogram(name: "uart_console_init", scope: !1043, file: !1043, line: 588, type: !1020, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !9083)
!9083 = !{!9084}
!9084 = !DILocalVariable(name: "arg", arg: 1, scope: !9082, file: !1043, line: 588, type: !998)
!9085 = !DILocation(line: 0, scope: !9082)
!9086 = !DILocation(line: 593, column: 7, scope: !9087)
!9087 = distinct !DILexicalBlock(scope: !9082, file: !1043, line: 593, column: 6)
!9088 = !DILocation(line: 593, column: 6, scope: !9082)
!9089 = !DILocation(line: 597, column: 2, scope: !9082)
!9090 = !DILocation(line: 599, column: 2, scope: !9082)
!9091 = !DILocation(line: 600, column: 1, scope: !9082)
!9092 = distinct !DISubprogram(name: "device_is_ready", scope: !9093, file: !9093, line: 47, type: !9094, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !9096)
!9093 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pi")
!9094 = !DISubroutineType(types: !9095)
!9095 = !{!345, !998}
!9096 = !{!9097}
!9097 = !DILocalVariable(name: "dev", arg: 1, scope: !9092, file: !9093, line: 47, type: !998)
!9098 = !DILocation(line: 0, scope: !9092)
!9099 = !DILocation(line: 55, column: 2, scope: !9100)
!9100 = distinct !DILexicalBlock(scope: !9092, file: !9093, line: 55, column: 2)
!9101 = !{i64 2155684652}
!9102 = !DILocation(line: 56, column: 9, scope: !9092)
!9103 = !DILocation(line: 56, column: 2, scope: !9092)
!9104 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1043, file: !1043, line: 573, type: !3098, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !2162)
!9105 = !DILocation(line: 576, column: 2, scope: !9104)
!9106 = !DILocation(line: 579, column: 2, scope: !9104)
!9107 = !DILocation(line: 581, column: 1, scope: !9104)
!9108 = distinct !DISubprogram(name: "console_out", scope: !1043, file: !1043, line: 77, type: !301, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !9109)
!9109 = !{!9110}
!9110 = !DILocalVariable(name: "c", arg: 1, scope: !9108, file: !1043, line: 77, type: !119)
!9111 = !DILocation(line: 0, scope: !9108)
!9112 = !DILocation(line: 89, column: 11, scope: !9113)
!9113 = distinct !DILexicalBlock(scope: !9108, file: !1043, line: 89, column: 6)
!9114 = !DILocation(line: 89, column: 6, scope: !9108)
!9115 = !DILocation(line: 90, column: 3, scope: !9116)
!9116 = distinct !DILexicalBlock(scope: !9113, file: !1043, line: 89, column: 17)
!9117 = !DILocation(line: 91, column: 2, scope: !9116)
!9118 = !DILocation(line: 92, column: 34, scope: !9108)
!9119 = !DILocation(line: 92, column: 2, scope: !9108)
!9120 = !DILocation(line: 94, column: 2, scope: !9108)
!9121 = distinct !DISubprogram(name: "uart_poll_out", scope: !9122, file: !9122, line: 95, type: !1016, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !9123)
!9122 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pi")
!9123 = !{!9124, !9125}
!9124 = !DILocalVariable(name: "dev", arg: 1, scope: !9121, file: !9122, line: 95, type: !998)
!9125 = !DILocalVariable(name: "out_char", arg: 2, scope: !9121, file: !9122, line: 95, type: !186)
!9126 = !DILocation(line: 0, scope: !9121)
!9127 = !DILocation(line: 105, column: 2, scope: !9128)
!9128 = distinct !DILexicalBlock(scope: !9121, file: !9122, line: 105, column: 2)
!9129 = !{i64 2155768043}
!9130 = !DILocation(line: 106, column: 2, scope: !9121)
!9131 = !DILocation(line: 107, column: 1, scope: !9121)
!9132 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !992, file: !992, line: 574, type: !1016, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !9133)
!9133 = !{!9134, !9135, !9136}
!9134 = !DILocalVariable(name: "dev", arg: 1, scope: !9132, file: !992, line: 574, type: !998)
!9135 = !DILocalVariable(name: "out_char", arg: 2, scope: !9132, file: !992, line: 575, type: !186)
!9136 = !DILocalVariable(name: "api", scope: !9132, file: !992, line: 577, type: !989)
!9137 = !DILocation(line: 0, scope: !9132)
!9138 = !DILocation(line: 578, column: 40, scope: !9132)
!9139 = !DILocation(line: 580, column: 7, scope: !9132)
!9140 = !DILocation(line: 580, column: 2, scope: !9132)
!9141 = !DILocation(line: 581, column: 1, scope: !9132)
!9142 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !334, file: !334, line: 730, type: !9094, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !9143)
!9143 = !{!9144}
!9144 = !DILocalVariable(name: "dev", arg: 1, scope: !9142, file: !334, line: 730, type: !998)
!9145 = !DILocation(line: 0, scope: !9142)
!9146 = !DILocation(line: 732, column: 9, scope: !9142)
!9147 = !DILocation(line: 732, column: 2, scope: !9142)
!9148 = distinct !DISubprogram(name: "uart_register_input", scope: !1043, file: !1043, line: 560, type: !9149, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !9196)
!9149 = !DISubroutineType(types: !9150)
!9150 = !{null, !9151, !9151, !9193}
!9151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9152, size: 32)
!9152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !245, line: 2208, size: 160, elements: !9153)
!9153 = !{!9154}
!9154 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !9152, file: !245, line: 2209, baseType: !9155, size: 160)
!9155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !245, line: 1709, size: 160, elements: !9156)
!9156 = !{!9157, !9170, !9174}
!9157 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !9155, file: !245, line: 1710, baseType: !9158, size: 64)
!9158 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !9159, line: 46, baseType: !9160)
!9159 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !9159, line: 41, size: 64, elements: !9161)
!9161 = !{!9162, !9169}
!9162 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9160, file: !9159, line: 42, baseType: !9163, size: 32)
!9163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9164, size: 32)
!9164 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !9159, line: 39, baseType: !9165)
!9165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !9159, line: 35, size: 32, elements: !9166)
!9166 = !{!9167}
!9167 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !9165, file: !9159, line: 36, baseType: !9168, size: 32)
!9168 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !9159, line: 32, baseType: !118)
!9169 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9160, file: !9159, line: 43, baseType: !9163, size: 32, offset: 32)
!9170 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9155, file: !245, line: 1711, baseType: !9171, size: 32, offset: 64)
!9171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !9172)
!9172 = !{!9173}
!9173 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !9171, file: !259, line: 52, baseType: !22, size: 32)
!9174 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9155, file: !245, line: 1712, baseType: !9175, size: 64, offset: 96)
!9175 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !179, line: 233, baseType: !9176)
!9176 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !179, line: 231, size: 64, elements: !9177)
!9177 = !{!9178}
!9178 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9176, file: !179, line: 232, baseType: !9179, size: 64)
!9179 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !9180)
!9180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !9181)
!9181 = !{!9182, !9188}
!9182 = !DIDerivedType(tag: DW_TAG_member, scope: !9180, file: !153, line: 38, baseType: !9183, size: 32)
!9183 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9180, file: !153, line: 38, size: 32, elements: !9184)
!9184 = !{!9185, !9187}
!9185 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9183, file: !153, line: 39, baseType: !9186, size: 32)
!9186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9180, size: 32)
!9187 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9183, file: !153, line: 40, baseType: !9186, size: 32)
!9188 = !DIDerivedType(tag: DW_TAG_member, scope: !9180, file: !153, line: 42, baseType: !9189, size: 32, offset: 32)
!9189 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9180, file: !153, line: 42, size: 32, elements: !9190)
!9190 = !{!9191, !9192}
!9191 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9189, file: !153, line: 43, baseType: !9186, size: 32)
!9192 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9189, file: !153, line: 44, baseType: !9186, size: 32)
!9193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9194, size: 32)
!9194 = !DISubroutineType(types: !9195)
!9195 = !{!185, !106, !185}
!9196 = !{!9197, !9198, !9199}
!9197 = !DILocalVariable(name: "avail", arg: 1, scope: !9148, file: !1043, line: 560, type: !9151)
!9198 = !DILocalVariable(name: "lines", arg: 2, scope: !9148, file: !1043, line: 560, type: !9151)
!9199 = !DILocalVariable(name: "completion", arg: 3, scope: !9148, file: !1043, line: 561, type: !9193)
!9200 = !DILocation(line: 0, scope: !9148)
!9201 = !DILocation(line: 566, column: 1, scope: !9148)
!9202 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1221, file: !1221, line: 523, type: !1079, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9203)
!9203 = !{!9204, !9205, !9206, !9207, !9208}
!9204 = !DILocalVariable(name: "dev", arg: 1, scope: !9202, file: !1221, line: 523, type: !1081)
!9205 = !DILocalVariable(name: "pin", arg: 2, scope: !9202, file: !1221, line: 524, type: !1096)
!9206 = !DILocalVariable(name: "flags", arg: 3, scope: !9202, file: !1221, line: 524, type: !1097)
!9207 = !DILocalVariable(name: "err", scope: !9202, file: !1221, line: 526, type: !119)
!9208 = !DILocalVariable(name: "pincfg", scope: !9202, file: !1221, line: 527, type: !119)
!9209 = !DILocation(line: 0, scope: !9202)
!9210 = !DILocation(line: 527, column: 2, scope: !9202)
!9211 = !DILocation(line: 532, column: 8, scope: !9202)
!9212 = !DILocation(line: 533, column: 10, scope: !9213)
!9213 = distinct !DILexicalBlock(scope: !9202, file: !1221, line: 533, column: 6)
!9214 = !DILocation(line: 533, column: 6, scope: !9202)
!9215 = !DILocation(line: 543, column: 13, scope: !9216)
!9216 = distinct !DILexicalBlock(scope: !9202, file: !1221, line: 543, column: 6)
!9217 = !DILocation(line: 543, column: 28, scope: !9216)
!9218 = !DILocation(line: 543, column: 6, scope: !9202)
!9219 = !DILocation(line: 544, column: 14, scope: !9220)
!9220 = distinct !DILexicalBlock(scope: !9221, file: !1221, line: 544, column: 7)
!9221 = distinct !DILexicalBlock(scope: !9216, file: !1221, line: 543, column: 34)
!9222 = !DILocation(line: 544, column: 39, scope: !9220)
!9223 = !DILocation(line: 544, column: 7, scope: !9221)
!9224 = !DILocation(line: 545, column: 38, scope: !9225)
!9225 = distinct !DILexicalBlock(scope: !9220, file: !1221, line: 544, column: 45)
!9226 = !DILocation(line: 545, column: 4, scope: !9225)
!9227 = !DILocation(line: 546, column: 3, scope: !9225)
!9228 = !DILocation(line: 546, column: 21, scope: !9229)
!9229 = distinct !DILexicalBlock(scope: !9220, file: !1221, line: 546, column: 14)
!9230 = !DILocation(line: 546, column: 45, scope: !9229)
!9231 = !DILocation(line: 546, column: 14, scope: !9220)
!9232 = !DILocation(line: 547, column: 40, scope: !9233)
!9233 = distinct !DILexicalBlock(scope: !9229, file: !1221, line: 546, column: 51)
!9234 = !DILocation(line: 547, column: 4, scope: !9233)
!9235 = !DILocation(line: 548, column: 3, scope: !9233)
!9236 = !DILocation(line: 551, column: 32, scope: !9202)
!9237 = !DILocation(line: 551, column: 37, scope: !9202)
!9238 = !DILocation(line: 551, column: 2, scope: !9202)
!9239 = !DILocation(line: 554, column: 6, scope: !9202)
!9240 = !DILocation(line: 562, column: 1, scope: !9202)
!9241 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1221, file: !1221, line: 410, type: !9242, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9244)
!9242 = !DISubroutineType(types: !9243)
!9243 = !{!119, !1081, !908}
!9244 = !{!9245, !9246, !9247, !9249}
!9245 = !DILocalVariable(name: "dev", arg: 1, scope: !9241, file: !1221, line: 410, type: !1081)
!9246 = !DILocalVariable(name: "value", arg: 2, scope: !9241, file: !1221, line: 410, type: !908)
!9247 = !DILocalVariable(name: "cfg", scope: !9241, file: !1221, line: 412, type: !9248)
!9248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1360, size: 32)
!9249 = !DILocalVariable(name: "gpio", scope: !9241, file: !1221, line: 413, type: !1154)
!9250 = !DILocation(line: 0, scope: !9241)
!9251 = !DILocation(line: 412, column: 45, scope: !9241)
!9252 = !DILocation(line: 413, column: 44, scope: !9241)
!9253 = !DILocation(line: 415, column: 11, scope: !9241)
!9254 = !DILocation(line: 415, column: 9, scope: !9241)
!9255 = !DILocation(line: 417, column: 2, scope: !9241)
!9256 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1221, file: !1221, line: 420, type: !1106, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9257)
!9257 = !{!9258, !9259, !9260, !9261, !9262, !9263}
!9258 = !DILocalVariable(name: "dev", arg: 1, scope: !9256, file: !1221, line: 420, type: !1081)
!9259 = !DILocalVariable(name: "mask", arg: 2, scope: !9256, file: !1221, line: 421, type: !1108)
!9260 = !DILocalVariable(name: "value", arg: 3, scope: !9256, file: !1221, line: 422, type: !1103)
!9261 = !DILocalVariable(name: "cfg", scope: !9256, file: !1221, line: 424, type: !9248)
!9262 = !DILocalVariable(name: "gpio", scope: !9256, file: !1221, line: 425, type: !1154)
!9263 = !DILocalVariable(name: "port_value", scope: !9256, file: !1221, line: 426, type: !118)
!9264 = !DILocation(line: 0, scope: !9256)
!9265 = !DILocation(line: 424, column: 45, scope: !9256)
!9266 = !DILocation(line: 425, column: 44, scope: !9256)
!9267 = !DILocation(line: 430, column: 15, scope: !9256)
!9268 = !DILocation(line: 431, column: 46, scope: !9256)
!9269 = !DILocation(line: 431, column: 44, scope: !9256)
!9270 = !DILocation(line: 431, column: 61, scope: !9256)
!9271 = !DILocation(line: 431, column: 53, scope: !9256)
!9272 = !DILocation(line: 431, column: 2, scope: !9256)
!9273 = !DILocation(line: 435, column: 2, scope: !9256)
!9274 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1221, file: !1221, line: 438, type: !1111, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9275)
!9275 = !{!9276, !9277, !9278, !9279}
!9276 = !DILocalVariable(name: "dev", arg: 1, scope: !9274, file: !1221, line: 438, type: !1081)
!9277 = !DILocalVariable(name: "pins", arg: 2, scope: !9274, file: !1221, line: 439, type: !1108)
!9278 = !DILocalVariable(name: "cfg", scope: !9274, file: !1221, line: 441, type: !9248)
!9279 = !DILocalVariable(name: "gpio", scope: !9274, file: !1221, line: 442, type: !1154)
!9280 = !DILocation(line: 0, scope: !9274)
!9281 = !DILocation(line: 441, column: 45, scope: !9274)
!9282 = !DILocation(line: 442, column: 44, scope: !9274)
!9283 = !DILocation(line: 448, column: 2, scope: !9274)
!9284 = !DILocation(line: 450, column: 2, scope: !9274)
!9285 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1221, file: !1221, line: 453, type: !1111, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9286)
!9286 = !{!9287, !9288, !9289, !9290}
!9287 = !DILocalVariable(name: "dev", arg: 1, scope: !9285, file: !1221, line: 453, type: !1081)
!9288 = !DILocalVariable(name: "pins", arg: 2, scope: !9285, file: !1221, line: 454, type: !1108)
!9289 = !DILocalVariable(name: "cfg", scope: !9285, file: !1221, line: 456, type: !9248)
!9290 = !DILocalVariable(name: "gpio", scope: !9285, file: !1221, line: 457, type: !1154)
!9291 = !DILocation(line: 0, scope: !9285)
!9292 = !DILocation(line: 456, column: 45, scope: !9285)
!9293 = !DILocation(line: 457, column: 44, scope: !9285)
!9294 = !DILocation(line: 467, column: 2, scope: !9285)
!9295 = !DILocation(line: 470, column: 2, scope: !9285)
!9296 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1221, file: !1221, line: 473, type: !1111, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9297)
!9297 = !{!9298, !9299, !9300, !9301}
!9298 = !DILocalVariable(name: "dev", arg: 1, scope: !9296, file: !1221, line: 473, type: !1081)
!9299 = !DILocalVariable(name: "pins", arg: 2, scope: !9296, file: !1221, line: 474, type: !1108)
!9300 = !DILocalVariable(name: "cfg", scope: !9296, file: !1221, line: 476, type: !9248)
!9301 = !DILocalVariable(name: "gpio", scope: !9296, file: !1221, line: 477, type: !1154)
!9302 = !DILocation(line: 0, scope: !9296)
!9303 = !DILocation(line: 476, column: 45, scope: !9296)
!9304 = !DILocation(line: 477, column: 44, scope: !9296)
!9305 = !DILocation(line: 484, column: 2, scope: !9296)
!9306 = !DILocation(line: 487, column: 2, scope: !9296)
!9307 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1221, file: !1221, line: 594, type: !1117, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9308)
!9308 = !{!9309, !9310, !9311, !9312, !9313, !9314, !9316, !9317, !9318}
!9309 = !DILocalVariable(name: "dev", arg: 1, scope: !9307, file: !1221, line: 594, type: !1081)
!9310 = !DILocalVariable(name: "pin", arg: 2, scope: !9307, file: !1221, line: 595, type: !1096)
!9311 = !DILocalVariable(name: "mode", arg: 3, scope: !9307, file: !1221, line: 596, type: !1055)
!9312 = !DILocalVariable(name: "trig", arg: 4, scope: !9307, file: !1221, line: 597, type: !1061)
!9313 = !DILocalVariable(name: "cfg", scope: !9307, file: !1221, line: 599, type: !9248)
!9314 = !DILocalVariable(name: "data", scope: !9307, file: !1221, line: 600, type: !9315)
!9315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1302, size: 32)
!9316 = !DILocalVariable(name: "edge", scope: !9307, file: !1221, line: 601, type: !119)
!9317 = !DILocalVariable(name: "err", scope: !9307, file: !1221, line: 602, type: !119)
!9318 = !DILabel(scope: !9307, name: "exit", file: !1221, line: 643)
!9319 = !DILocation(line: 0, scope: !9307)
!9320 = !DILocation(line: 599, column: 45, scope: !9307)
!9321 = !DILocation(line: 604, column: 6, scope: !9307)
!9322 = !DILocation(line: 605, column: 34, scope: !9323)
!9323 = distinct !DILexicalBlock(scope: !9324, file: !1221, line: 605, column: 7)
!9324 = distinct !DILexicalBlock(scope: !9325, file: !1221, line: 604, column: 38)
!9325 = distinct !DILexicalBlock(scope: !9307, file: !1221, line: 604, column: 6)
!9326 = !DILocation(line: 605, column: 7, scope: !9323)
!9327 = !DILocation(line: 605, column: 47, scope: !9323)
!9328 = !DILocation(line: 605, column: 39, scope: !9323)
!9329 = !DILocation(line: 605, column: 7, scope: !9324)
!9330 = !DILocation(line: 606, column: 4, scope: !9331)
!9331 = distinct !DILexicalBlock(scope: !9323, file: !1221, line: 605, column: 53)
!9332 = !DILocation(line: 607, column: 4, scope: !9331)
!9333 = !DILocation(line: 608, column: 4, scope: !9331)
!9334 = !DILocation(line: 609, column: 3, scope: !9331)
!9335 = !DILocation(line: 600, column: 38, scope: !9307)
!9336 = !DILocation(line: 620, column: 30, scope: !9337)
!9337 = distinct !DILexicalBlock(scope: !9307, file: !1221, line: 620, column: 6)
!9338 = !DILocation(line: 620, column: 6, scope: !9337)
!9339 = !DILocation(line: 620, column: 57, scope: !9337)
!9340 = !DILocation(line: 620, column: 6, scope: !9307)
!9341 = !DILocation(line: 625, column: 29, scope: !9307)
!9342 = !DILocation(line: 625, column: 2, scope: !9307)
!9343 = !DILocation(line: 627, column: 2, scope: !9307)
!9344 = !DILocation(line: 630, column: 3, scope: !9345)
!9345 = distinct !DILexicalBlock(scope: !9307, file: !1221, line: 627, column: 16)
!9346 = !DILocation(line: 633, column: 3, scope: !9345)
!9347 = !DILocation(line: 636, column: 3, scope: !9345)
!9348 = !DILocation(line: 639, column: 2, scope: !9307)
!9349 = !DILocation(line: 641, column: 2, scope: !9307)
!9350 = !DILocation(line: 643, column: 1, scope: !9307)
!9351 = !DILocation(line: 644, column: 2, scope: !9307)
!9352 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1221, file: !1221, line: 647, type: !1121, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9353)
!9353 = !{!9354, !9355, !9356, !9357}
!9354 = !DILocalVariable(name: "dev", arg: 1, scope: !9352, file: !1221, line: 647, type: !1081)
!9355 = !DILocalVariable(name: "callback", arg: 2, scope: !9352, file: !1221, line: 648, type: !1123)
!9356 = !DILocalVariable(name: "set", arg: 3, scope: !9352, file: !1221, line: 649, type: !345)
!9357 = !DILocalVariable(name: "data", scope: !9352, file: !1221, line: 651, type: !9315)
!9358 = !DILocation(line: 0, scope: !9352)
!9359 = !DILocation(line: 651, column: 38, scope: !9352)
!9360 = !DILocation(line: 653, column: 37, scope: !9352)
!9361 = !DILocation(line: 653, column: 9, scope: !9352)
!9362 = !DILocation(line: 653, column: 2, scope: !9352)
!9363 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !9364, file: !9364, line: 38, type: !9365, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9368)
!9364 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9365 = !DISubroutineType(types: !9366)
!9366 = !{!119, !9367, !1123, !345}
!9367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1308, size: 32)
!9368 = !{!9369, !9370, !9371}
!9369 = !DILocalVariable(name: "callbacks", arg: 1, scope: !9363, file: !9364, line: 38, type: !9367)
!9370 = !DILocalVariable(name: "callback", arg: 2, scope: !9363, file: !9364, line: 39, type: !1123)
!9371 = !DILocalVariable(name: "set", arg: 3, scope: !9363, file: !9364, line: 40, type: !345)
!9372 = !DILocation(line: 0, scope: !9363)
!9373 = !DILocation(line: 42, column: 2, scope: !9374)
!9374 = distinct !DILexicalBlock(scope: !9375, file: !9364, line: 42, column: 2)
!9375 = distinct !DILexicalBlock(scope: !9363, file: !9364, line: 42, column: 2)
!9376 = !DILocation(line: 42, column: 2, scope: !9375)
!9377 = !DILocation(line: 42, column: 2, scope: !9378)
!9378 = distinct !DILexicalBlock(scope: !9374, file: !9364, line: 42, column: 2)
!9379 = !DILocation(line: 43, column: 2, scope: !9380)
!9380 = distinct !DILexicalBlock(scope: !9381, file: !9364, line: 43, column: 2)
!9381 = distinct !DILexicalBlock(scope: !9363, file: !9364, line: 43, column: 2)
!9382 = !DILocation(line: 43, column: 2, scope: !9381)
!9383 = !DILocation(line: 43, column: 2, scope: !9384)
!9384 = distinct !DILexicalBlock(scope: !9380, file: !9364, line: 43, column: 2)
!9385 = !DILocation(line: 45, column: 7, scope: !9386)
!9386 = distinct !DILexicalBlock(scope: !9363, file: !9364, line: 45, column: 6)
!9387 = !DILocation(line: 45, column: 6, scope: !9363)
!9388 = !DILocation(line: 46, column: 56, scope: !9389)
!9389 = distinct !DILexicalBlock(scope: !9390, file: !9364, line: 46, column: 7)
!9390 = distinct !DILexicalBlock(scope: !9386, file: !9364, line: 45, column: 38)
!9391 = !DILocation(line: 46, column: 8, scope: !9389)
!9392 = !DILocation(line: 46, column: 7, scope: !9390)
!9393 = !DILocation(line: 51, column: 13, scope: !9386)
!9394 = !DILocation(line: 56, column: 43, scope: !9395)
!9395 = distinct !DILexicalBlock(scope: !9396, file: !9364, line: 55, column: 11)
!9396 = distinct !DILexicalBlock(scope: !9363, file: !9364, line: 55, column: 6)
!9397 = !DILocation(line: 56, column: 3, scope: !9395)
!9398 = !DILocation(line: 57, column: 2, scope: !9395)
!9399 = !DILocation(line: 60, column: 1, scope: !9363)
!9400 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1128, file: !1128, line: 261, type: !9401, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9403)
!9401 = !DISubroutineType(types: !9402)
!9402 = !{!345, !9367}
!9403 = !{!9404}
!9404 = !DILocalVariable(name: "list", arg: 1, scope: !9400, file: !1128, line: 261, type: !9367)
!9405 = !DILocation(line: 0, scope: !9400)
!9406 = !DILocation(line: 261, column: 1, scope: !9400)
!9407 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1128, file: !1128, line: 417, type: !9408, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9410)
!9408 = !DISubroutineType(types: !9409)
!9409 = !{!345, !9367, !1312}
!9410 = !{!9411, !9412, !9413, !9414}
!9411 = !DILocalVariable(name: "list", arg: 1, scope: !9407, file: !1128, line: 417, type: !9367)
!9412 = !DILocalVariable(name: "node", arg: 2, scope: !9407, file: !1128, line: 417, type: !1312)
!9413 = !DILocalVariable(name: "prev", scope: !9407, file: !1128, line: 417, type: !1312)
!9414 = !DILocalVariable(name: "test", scope: !9407, file: !1128, line: 417, type: !1312)
!9415 = !DILocation(line: 0, scope: !9407)
!9416 = !DILocation(line: 417, column: 1, scope: !9417)
!9417 = distinct !DILexicalBlock(scope: !9407, file: !1128, line: 417, column: 1)
!9418 = !DILocation(line: 417, column: 1, scope: !9419)
!9419 = distinct !DILexicalBlock(scope: !9417, file: !1128, line: 417, column: 1)
!9420 = !DILocation(line: 417, column: 1, scope: !9421)
!9421 = distinct !DILexicalBlock(scope: !9422, file: !1128, line: 417, column: 1)
!9422 = distinct !DILexicalBlock(scope: !9419, file: !1128, line: 417, column: 1)
!9423 = !DILocation(line: 417, column: 1, scope: !9422)
!9424 = distinct !{!9424, !9416, !9416}
!9425 = !DILocation(line: 417, column: 1, scope: !9426)
!9426 = distinct !DILexicalBlock(scope: !9421, file: !1128, line: 417, column: 1)
!9427 = !DILocation(line: 417, column: 1, scope: !9407)
!9428 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1128, file: !1128, line: 298, type: !9429, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9431)
!9429 = !DISubroutineType(types: !9430)
!9430 = !{null, !9367, !1312}
!9431 = !{!9432, !9433}
!9432 = !DILocalVariable(name: "list", arg: 1, scope: !9428, file: !1128, line: 298, type: !9367)
!9433 = !DILocalVariable(name: "node", arg: 2, scope: !9428, file: !1128, line: 298, type: !1312)
!9434 = !DILocation(line: 0, scope: !9428)
!9435 = !DILocation(line: 298, column: 1, scope: !9428)
!9436 = !DILocation(line: 298, column: 1, scope: !9437)
!9437 = distinct !DILexicalBlock(scope: !9428, file: !1128, line: 298, column: 1)
!9438 = !DILocation(line: 298, column: 1, scope: !9439)
!9439 = distinct !DILexicalBlock(scope: !9437, file: !1128, line: 298, column: 1)
!9440 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1128, file: !1128, line: 231, type: !9441, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9443)
!9441 = !DISubroutineType(types: !9442)
!9442 = !{!1312, !9367}
!9443 = !{!9444}
!9444 = !DILocalVariable(name: "list", arg: 1, scope: !9440, file: !1128, line: 231, type: !9367)
!9445 = !DILocation(line: 0, scope: !9440)
!9446 = !DILocation(line: 233, column: 15, scope: !9440)
!9447 = !DILocation(line: 233, column: 2, scope: !9440)
!9448 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1128, file: !1128, line: 209, type: !9449, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9451)
!9449 = !DISubroutineType(types: !9450)
!9450 = !{null, !1312, !1312}
!9451 = !{!9452, !9453}
!9452 = !DILocalVariable(name: "parent", arg: 1, scope: !9448, file: !1128, line: 209, type: !1312)
!9453 = !DILocalVariable(name: "child", arg: 2, scope: !9448, file: !1128, line: 209, type: !1312)
!9454 = !DILocation(line: 0, scope: !9448)
!9455 = !DILocation(line: 211, column: 10, scope: !9448)
!9456 = !DILocation(line: 211, column: 15, scope: !9448)
!9457 = !DILocation(line: 212, column: 1, scope: !9448)
!9458 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1128, file: !1128, line: 214, type: !9429, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9459)
!9459 = !{!9460, !9461}
!9460 = !DILocalVariable(name: "list", arg: 1, scope: !9458, file: !1128, line: 214, type: !9367)
!9461 = !DILocalVariable(name: "node", arg: 2, scope: !9458, file: !1128, line: 214, type: !1312)
!9462 = !DILocation(line: 0, scope: !9458)
!9463 = !DILocation(line: 216, column: 8, scope: !9458)
!9464 = !DILocation(line: 216, column: 13, scope: !9458)
!9465 = !DILocation(line: 217, column: 1, scope: !9458)
!9466 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1128, file: !1128, line: 243, type: !9441, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9467)
!9467 = !{!9468}
!9468 = !DILocalVariable(name: "list", arg: 1, scope: !9466, file: !1128, line: 243, type: !9367)
!9469 = !DILocation(line: 0, scope: !9466)
!9470 = !DILocation(line: 245, column: 15, scope: !9466)
!9471 = !DILocation(line: 245, column: 2, scope: !9466)
!9472 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1128, file: !1128, line: 219, type: !9429, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9473)
!9473 = !{!9474, !9475}
!9474 = !DILocalVariable(name: "list", arg: 1, scope: !9472, file: !1128, line: 219, type: !9367)
!9475 = !DILocalVariable(name: "node", arg: 2, scope: !9472, file: !1128, line: 219, type: !1312)
!9476 = !DILocation(line: 0, scope: !9472)
!9477 = !DILocation(line: 221, column: 8, scope: !9472)
!9478 = !DILocation(line: 221, column: 13, scope: !9472)
!9479 = !DILocation(line: 222, column: 1, scope: !9472)
!9480 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1128, file: !1128, line: 401, type: !9481, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9483)
!9481 = !DISubroutineType(types: !9482)
!9482 = !{null, !9367, !1312, !1312}
!9483 = !{!9484, !9485, !9486}
!9484 = !DILocalVariable(name: "list", arg: 1, scope: !9480, file: !1128, line: 401, type: !9367)
!9485 = !DILocalVariable(name: "prev_node", arg: 2, scope: !9480, file: !1128, line: 401, type: !1312)
!9486 = !DILocalVariable(name: "node", arg: 3, scope: !9480, file: !1128, line: 401, type: !1312)
!9487 = !DILocation(line: 0, scope: !9480)
!9488 = !DILocation(line: 401, column: 1, scope: !9489)
!9489 = distinct !DILexicalBlock(scope: !9480, file: !1128, line: 401, column: 1)
!9490 = !DILocation(line: 0, scope: !9489)
!9491 = !DILocation(line: 401, column: 1, scope: !9480)
!9492 = !DILocation(line: 401, column: 1, scope: !9493)
!9493 = distinct !DILexicalBlock(scope: !9489, file: !1128, line: 401, column: 1)
!9494 = !DILocation(line: 401, column: 1, scope: !9495)
!9495 = distinct !DILexicalBlock(scope: !9493, file: !1128, line: 401, column: 1)
!9496 = !DILocation(line: 401, column: 1, scope: !9497)
!9497 = distinct !DILexicalBlock(scope: !9495, file: !1128, line: 401, column: 1)
!9498 = !DILocation(line: 401, column: 1, scope: !9499)
!9499 = distinct !DILexicalBlock(scope: !9489, file: !1128, line: 401, column: 1)
!9500 = !DILocation(line: 401, column: 1, scope: !9501)
!9501 = distinct !DILexicalBlock(scope: !9499, file: !1128, line: 401, column: 1)
!9502 = !DILocation(line: 401, column: 1, scope: !9503)
!9503 = distinct !DILexicalBlock(scope: !9501, file: !1128, line: 401, column: 1)
!9504 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1128, file: !1128, line: 285, type: !9505, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9507)
!9505 = !DISubroutineType(types: !9506)
!9506 = !{!1312, !1312}
!9507 = !{!9508}
!9508 = !DILocalVariable(name: "node", arg: 1, scope: !9504, file: !1128, line: 285, type: !1312)
!9509 = !DILocation(line: 0, scope: !9504)
!9510 = !DILocation(line: 285, column: 1, scope: !9504)
!9511 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1128, file: !1128, line: 274, type: !9505, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9512)
!9512 = !{!9513}
!9513 = !DILocalVariable(name: "node", arg: 1, scope: !9511, file: !1128, line: 274, type: !1312)
!9514 = !DILocation(line: 0, scope: !9511)
!9515 = !DILocation(line: 274, column: 1, scope: !9511)
!9516 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1128, file: !1128, line: 204, type: !9505, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9517)
!9517 = !{!9518}
!9518 = !DILocalVariable(name: "node", arg: 1, scope: !9516, file: !1128, line: 204, type: !1312)
!9519 = !DILocation(line: 0, scope: !9516)
!9520 = !DILocation(line: 206, column: 15, scope: !9516)
!9521 = !DILocation(line: 206, column: 2, scope: !9516)
!9522 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1221, file: !1221, line: 342, type: !301, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9523)
!9523 = !{!9524, !9525, !9526}
!9524 = !DILocalVariable(name: "pin", arg: 1, scope: !9522, file: !1221, line: 342, type: !119)
!9525 = !DILocalVariable(name: "line", scope: !9522, file: !1221, line: 344, type: !118)
!9526 = !DILocalVariable(name: "port", scope: !9522, file: !1221, line: 345, type: !119)
!9527 = !DILocation(line: 0, scope: !9522)
!9528 = !DILocation(line: 344, column: 18, scope: !9522)
!9529 = !{i32 983040, i32 0}
!9530 = !DILocation(line: 356, column: 9, scope: !9522)
!9531 = !DILocation(line: 370, column: 2, scope: !9522)
!9532 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1221, file: !1221, line: 37, type: !757, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9533)
!9533 = !{!9534, !9535, !9536}
!9534 = !DILocalVariable(name: "line", arg: 1, scope: !9532, file: !1221, line: 37, type: !119)
!9535 = !DILocalVariable(name: "arg", arg: 2, scope: !9532, file: !1221, line: 37, type: !113)
!9536 = !DILocalVariable(name: "data", scope: !9532, file: !1221, line: 39, type: !9315)
!9537 = !DILocation(line: 0, scope: !9532)
!9538 = !DILocation(line: 41, column: 29, scope: !9532)
!9539 = !DILocation(line: 41, column: 39, scope: !9532)
!9540 = !DILocation(line: 41, column: 44, scope: !9532)
!9541 = !DILocation(line: 41, column: 2, scope: !9532)
!9542 = !DILocation(line: 42, column: 1, scope: !9532)
!9543 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1221, file: !1221, line: 376, type: !9544, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9546)
!9544 = !DISubroutineType(types: !9545)
!9545 = !{!119, !119, !119}
!9546 = !{!9547, !9548, !9549, !9551, !9552}
!9547 = !DILocalVariable(name: "port", arg: 1, scope: !9543, file: !1221, line: 376, type: !119)
!9548 = !DILocalVariable(name: "pin", arg: 2, scope: !9543, file: !1221, line: 376, type: !119)
!9549 = !DILocalVariable(name: "clk", scope: !9543, file: !1221, line: 386, type: !9550)
!9550 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1081)
!9551 = !DILocalVariable(name: "pclken", scope: !9543, file: !1221, line: 387, type: !1367)
!9552 = !DILocalVariable(name: "ret", scope: !9543, file: !1221, line: 396, type: !119)
!9553 = !DILocation(line: 0, scope: !9543)
!9554 = !DILocation(line: 387, column: 2, scope: !9543)
!9555 = !DILocation(line: 387, column: 22, scope: !9543)
!9556 = !DILocation(line: 399, column: 8, scope: !9543)
!9557 = !DILocation(line: 400, column: 10, scope: !9558)
!9558 = distinct !DILexicalBlock(scope: !9543, file: !1221, line: 400, column: 6)
!9559 = !DILocation(line: 400, column: 6, scope: !9543)
!9560 = !DILocation(line: 405, column: 2, scope: !9543)
!9561 = !DILocation(line: 407, column: 2, scope: !9543)
!9562 = !DILocation(line: 408, column: 1, scope: !9543)
!9563 = distinct !DISubprogram(name: "clock_control_on", scope: !858, file: !858, line: 123, type: !1186, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9564)
!9564 = !{!9565, !9566, !9567}
!9565 = !DILocalVariable(name: "dev", arg: 1, scope: !9563, file: !858, line: 123, type: !1081)
!9566 = !DILocalVariable(name: "sys", arg: 2, scope: !9563, file: !858, line: 124, type: !952)
!9567 = !DILocalVariable(name: "api", scope: !9563, file: !858, line: 126, type: !1179)
!9568 = !DILocation(line: 0, scope: !9563)
!9569 = !DILocation(line: 127, column: 49, scope: !9563)
!9570 = !DILocation(line: 129, column: 14, scope: !9563)
!9571 = !DILocation(line: 129, column: 9, scope: !9563)
!9572 = !DILocation(line: 129, column: 2, scope: !9563)
!9573 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1221, file: !1221, line: 311, type: !8693, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9574)
!9574 = !{!9575, !9576, !9577}
!9575 = !DILocalVariable(name: "port", arg: 1, scope: !9573, file: !1221, line: 311, type: !119)
!9576 = !DILocalVariable(name: "pin", arg: 2, scope: !9573, file: !1221, line: 311, type: !119)
!9577 = !DILocalVariable(name: "line", scope: !9573, file: !1221, line: 313, type: !118)
!9578 = !DILocation(line: 0, scope: !9573)
!9579 = !DILocation(line: 313, column: 18, scope: !9573)
!9580 = !DILocation(line: 337, column: 2, scope: !9573)
!9581 = !DILocation(line: 340, column: 1, scope: !9573)
!9582 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1221, file: !1221, line: 295, type: !9583, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9585)
!9583 = !DISubroutineType(types: !9584)
!9584 = !{!118, !119}
!9585 = !{!9586}
!9586 = !DILocalVariable(name: "pin", arg: 1, scope: !9582, file: !1221, line: 295, type: !119)
!9587 = !DILocation(line: 0, scope: !9582)
!9588 = !DILocation(line: 307, column: 46, scope: !9582)
!9589 = !DILocation(line: 307, column: 27, scope: !9582)
!9590 = !DILocation(line: 307, column: 32, scope: !9582)
!9591 = !DILocation(line: 307, column: 14, scope: !9582)
!9592 = !DILocation(line: 307, column: 39, scope: !9582)
!9593 = !DILocation(line: 307, column: 2, scope: !9582)
!9594 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !6152, file: !6152, line: 671, type: !9595, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9597)
!9595 = !DISubroutineType(types: !9596)
!9596 = !{null, !118, !118}
!9597 = !{!9598, !9599}
!9598 = !DILocalVariable(name: "Port", arg: 1, scope: !9594, file: !6152, line: 671, type: !118)
!9599 = !DILocalVariable(name: "Line", arg: 2, scope: !9594, file: !6152, line: 671, type: !118)
!9600 = !DILocation(line: 0, scope: !9594)
!9601 = !DILocation(line: 673, column: 3, scope: !9594)
!9602 = !DILocalVariable(name: "value", arg: 1, scope: !9603, file: !6452, line: 373, type: !118)
!9603 = distinct !DISubprogram(name: "__RBIT", scope: !6452, file: !6452, line: 373, type: !7737, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9604)
!9604 = !{!9602, !9605}
!9605 = !DILocalVariable(name: "result", scope: !9603, file: !6452, line: 375, type: !118)
!9606 = !DILocation(line: 0, scope: !9603, inlinedAt: !9607)
!9607 = distinct !DILocation(line: 673, column: 3, scope: !9594)
!9608 = !DILocation(line: 380, column: 4, scope: !9603, inlinedAt: !9607)
!9609 = !{i64 4119066}
!9610 = !DILocalVariable(name: "value", arg: 1, scope: !9611, file: !6452, line: 403, type: !118)
!9611 = distinct !DISubprogram(name: "__CLZ", scope: !6452, file: !6452, line: 403, type: !9612, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9614)
!9612 = !DISubroutineType(types: !9613)
!9613 = !{!185, !118}
!9614 = !{!9610}
!9615 = !DILocation(line: 0, scope: !9611, inlinedAt: !9616)
!9616 = distinct !DILocation(line: 673, column: 3, scope: !9594)
!9617 = !DILocation(line: 414, column: 7, scope: !9611, inlinedAt: !9616)
!9618 = !DILocation(line: 674, column: 1, scope: !9594)
!9619 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !9364, file: !9364, line: 69, type: !9620, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9622)
!9620 = !DISubroutineType(types: !9621)
!9621 = !{null, !9367, !1081, !118}
!9622 = !{!9623, !9624, !9625, !9626, !9627}
!9623 = !DILocalVariable(name: "list", arg: 1, scope: !9619, file: !9364, line: 69, type: !9367)
!9624 = !DILocalVariable(name: "port", arg: 2, scope: !9619, file: !9364, line: 70, type: !1081)
!9625 = !DILocalVariable(name: "pins", arg: 3, scope: !9619, file: !9364, line: 71, type: !118)
!9626 = !DILocalVariable(name: "cb", scope: !9619, file: !9364, line: 73, type: !1123)
!9627 = !DILocalVariable(name: "tmp", scope: !9619, file: !9364, line: 73, type: !1123)
!9628 = !DILocation(line: 0, scope: !9619)
!9629 = !DILocation(line: 75, column: 2, scope: !9630)
!9630 = distinct !DILexicalBlock(scope: !9619, file: !9364, line: 75, column: 2)
!9631 = !DILocation(line: 0, scope: !9630)
!9632 = !DILocation(line: 76, column: 11, scope: !9633)
!9633 = distinct !DILexicalBlock(scope: !9634, file: !9364, line: 76, column: 7)
!9634 = distinct !DILexicalBlock(scope: !9635, file: !9364, line: 75, column: 57)
!9635 = distinct !DILexicalBlock(scope: !9630, file: !9364, line: 75, column: 2)
!9636 = !DILocation(line: 76, column: 20, scope: !9633)
!9637 = !DILocation(line: 76, column: 7, scope: !9634)
!9638 = !DILocation(line: 77, column: 4, scope: !9639)
!9639 = distinct !DILexicalBlock(scope: !9640, file: !9364, line: 77, column: 4)
!9640 = distinct !DILexicalBlock(scope: !9641, file: !9364, line: 77, column: 4)
!9641 = distinct !DILexicalBlock(scope: !9633, file: !9364, line: 76, column: 28)
!9642 = !DILocation(line: 77, column: 4, scope: !9640)
!9643 = !DILocation(line: 77, column: 4, scope: !9644)
!9644 = distinct !DILexicalBlock(scope: !9639, file: !9364, line: 77, column: 4)
!9645 = !DILocation(line: 78, column: 4, scope: !9641)
!9646 = !DILocation(line: 79, column: 3, scope: !9641)
!9647 = !DILocation(line: 75, column: 2, scope: !9635)
!9648 = !DILocation(line: 81, column: 1, scope: !9619)
!9649 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !6152, file: !6152, line: 710, type: !7737, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9650)
!9650 = !{!9651}
!9651 = !DILocalVariable(name: "Line", arg: 1, scope: !9649, file: !6152, line: 710, type: !118)
!9652 = !DILocation(line: 0, scope: !9649)
!9653 = !DILocation(line: 712, column: 21, scope: !9649)
!9654 = !DILocation(line: 0, scope: !9603, inlinedAt: !9655)
!9655 = distinct !DILocation(line: 712, column: 76, scope: !9649)
!9656 = !DILocation(line: 380, column: 4, scope: !9603, inlinedAt: !9655)
!9657 = !DILocation(line: 0, scope: !9611, inlinedAt: !9658)
!9658 = distinct !DILocation(line: 712, column: 76, scope: !9649)
!9659 = !DILocation(line: 414, column: 7, scope: !9611, inlinedAt: !9658)
!9660 = !DILocation(line: 712, column: 73, scope: !9649)
!9661 = !DILocation(line: 712, column: 3, scope: !9649)
!9662 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !9663, file: !9663, line: 910, type: !9664, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9666)
!9663 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9664 = !DISubroutineType(types: !9665)
!9665 = !{null, !1154, !118}
!9666 = !{!9667, !9668}
!9667 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9662, file: !9663, line: 910, type: !1154)
!9668 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9662, file: !9663, line: 910, type: !118)
!9669 = !DILocation(line: 0, scope: !9662)
!9670 = !DILocation(line: 912, column: 3, scope: !9662)
!9671 = !DILocation(line: 913, column: 1, scope: !9662)
!9672 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !9663, file: !9663, line: 823, type: !9673, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9675)
!9673 = !DISubroutineType(types: !9674)
!9674 = !{!118, !1154}
!9675 = !{!9676}
!9676 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9672, file: !9663, line: 823, type: !1154)
!9677 = !DILocation(line: 0, scope: !9672)
!9678 = !DILocation(line: 825, column: 21, scope: !9672)
!9679 = !DILocation(line: 825, column: 3, scope: !9672)
!9680 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !9663, file: !9663, line: 812, type: !9664, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9681)
!9681 = !{!9682, !9683}
!9682 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9680, file: !9663, line: 812, type: !1154)
!9683 = !DILocalVariable(name: "PortValue", arg: 2, scope: !9680, file: !9663, line: 812, type: !118)
!9684 = !DILocation(line: 0, scope: !9680)
!9685 = !DILocation(line: 814, column: 3, scope: !9680)
!9686 = !DILocation(line: 815, column: 1, scope: !9680)
!9687 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !9663, file: !9663, line: 771, type: !9673, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9688)
!9688 = !{!9689}
!9689 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9687, file: !9663, line: 771, type: !1154)
!9690 = !DILocation(line: 0, scope: !9687)
!9691 = !DILocation(line: 773, column: 21, scope: !9687)
!9692 = !DILocation(line: 773, column: 3, scope: !9687)
!9693 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1221, file: !1221, line: 47, type: !9694, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9696)
!9694 = !DISubroutineType(types: !9695)
!9695 = !{!119, !1097, !280}
!9696 = !{!9697, !9698}
!9697 = !DILocalVariable(name: "flags", arg: 1, scope: !9693, file: !1221, line: 47, type: !1097)
!9698 = !DILocalVariable(name: "pincfg", arg: 2, scope: !9693, file: !1221, line: 47, type: !280)
!9699 = !DILocation(line: 0, scope: !9693)
!9700 = !DILocation(line: 50, column: 13, scope: !9701)
!9701 = distinct !DILexicalBlock(scope: !9693, file: !1221, line: 50, column: 6)
!9702 = !DILocation(line: 50, column: 28, scope: !9701)
!9703 = !DILocation(line: 50, column: 6, scope: !9693)
!9704 = !DILocation(line: 53, column: 11, scope: !9705)
!9705 = distinct !DILexicalBlock(scope: !9701, file: !1221, line: 50, column: 34)
!9706 = !DILocation(line: 55, column: 14, scope: !9707)
!9707 = distinct !DILexicalBlock(scope: !9705, file: !1221, line: 55, column: 7)
!9708 = !DILocation(line: 55, column: 35, scope: !9707)
!9709 = !DILocation(line: 55, column: 7, scope: !9705)
!9710 = !DILocation(line: 56, column: 14, scope: !9711)
!9711 = distinct !DILexicalBlock(scope: !9712, file: !1221, line: 56, column: 8)
!9712 = distinct !DILexicalBlock(scope: !9707, file: !1221, line: 55, column: 41)
!9713 = !DILocation(line: 56, column: 8, scope: !9712)
!9714 = !DILocation(line: 0, scope: !9707)
!9715 = !DILocation(line: 66, column: 14, scope: !9716)
!9716 = distinct !DILexicalBlock(scope: !9705, file: !1221, line: 66, column: 7)
!9717 = !DILocation(line: 66, column: 30, scope: !9716)
!9718 = !DILocation(line: 66, column: 7, scope: !9705)
!9719 = !DILocation(line: 67, column: 12, scope: !9720)
!9720 = distinct !DILexicalBlock(scope: !9716, file: !1221, line: 66, column: 36)
!9721 = !DILocation(line: 68, column: 3, scope: !9720)
!9722 = !DILocation(line: 68, column: 21, scope: !9723)
!9723 = distinct !DILexicalBlock(scope: !9716, file: !1221, line: 68, column: 14)
!9724 = !DILocation(line: 68, column: 39, scope: !9723)
!9725 = !DILocation(line: 68, column: 14, scope: !9716)
!9726 = !DILocation(line: 69, column: 12, scope: !9727)
!9727 = distinct !DILexicalBlock(scope: !9723, file: !1221, line: 68, column: 45)
!9728 = !DILocation(line: 70, column: 3, scope: !9727)
!9729 = !DILocation(line: 72, column: 21, scope: !9730)
!9730 = distinct !DILexicalBlock(scope: !9701, file: !1221, line: 72, column: 14)
!9731 = !DILocation(line: 72, column: 35, scope: !9730)
!9732 = !DILocation(line: 72, column: 14, scope: !9701)
!9733 = !DILocation(line: 77, column: 14, scope: !9734)
!9734 = distinct !DILexicalBlock(scope: !9735, file: !1221, line: 77, column: 7)
!9735 = distinct !DILexicalBlock(scope: !9730, file: !1221, line: 72, column: 41)
!9736 = !DILocation(line: 77, column: 30, scope: !9734)
!9737 = !DILocation(line: 77, column: 7, scope: !9735)
!9738 = !DILocation(line: 0, scope: !9701)
!9739 = !DILocation(line: 90, column: 1, scope: !9693)
!9740 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1221, file: !1221, line: 157, type: !9741, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9743)
!9741 = !DISubroutineType(types: !9742)
!9742 = !{null, !1081, !119, !119, !119}
!9743 = !{!9744, !9745, !9746, !9747, !9748, !9749, !9750, !9751, !9752, !9753, !9754}
!9744 = !DILocalVariable(name: "dev", arg: 1, scope: !9740, file: !1221, line: 157, type: !1081)
!9745 = !DILocalVariable(name: "pin", arg: 2, scope: !9740, file: !1221, line: 157, type: !119)
!9746 = !DILocalVariable(name: "conf", arg: 3, scope: !9740, file: !1221, line: 158, type: !119)
!9747 = !DILocalVariable(name: "func", arg: 4, scope: !9740, file: !1221, line: 158, type: !119)
!9748 = !DILocalVariable(name: "cfg", scope: !9740, file: !1221, line: 160, type: !9248)
!9749 = !DILocalVariable(name: "gpio", scope: !9740, file: !1221, line: 161, type: !1154)
!9750 = !DILocalVariable(name: "pin_ll", scope: !9740, file: !1221, line: 163, type: !119)
!9751 = !DILocalVariable(name: "mode", scope: !9740, file: !1221, line: 227, type: !32)
!9752 = !DILocalVariable(name: "otype", scope: !9740, file: !1221, line: 227, type: !32)
!9753 = !DILocalVariable(name: "ospeed", scope: !9740, file: !1221, line: 227, type: !32)
!9754 = !DILocalVariable(name: "pupd", scope: !9740, file: !1221, line: 227, type: !32)
!9755 = !DILocation(line: 0, scope: !9740)
!9756 = !DILocation(line: 160, column: 45, scope: !9740)
!9757 = !DILocation(line: 161, column: 44, scope: !9740)
!9758 = !DILocation(line: 163, column: 15, scope: !9740)
!9759 = !DILocation(line: 229, column: 14, scope: !9740)
!9760 = !DILocation(line: 246, column: 47, scope: !9740)
!9761 = !DILocation(line: 246, column: 2, scope: !9740)
!9762 = !DILocation(line: 248, column: 43, scope: !9740)
!9763 = !DILocation(line: 248, column: 2, scope: !9740)
!9764 = !DILocation(line: 250, column: 40, scope: !9740)
!9765 = !DILocation(line: 250, column: 2, scope: !9740)
!9766 = !DILocation(line: 252, column: 11, scope: !9767)
!9767 = distinct !DILexicalBlock(scope: !9740, file: !1221, line: 252, column: 6)
!9768 = !DILocation(line: 252, column: 6, scope: !9740)
!9769 = !DILocation(line: 253, column: 11, scope: !9770)
!9770 = distinct !DILexicalBlock(scope: !9771, file: !1221, line: 253, column: 7)
!9771 = distinct !DILexicalBlock(scope: !9767, file: !1221, line: 252, column: 36)
!9772 = !DILocation(line: 253, column: 7, scope: !9771)
!9773 = !DILocation(line: 254, column: 4, scope: !9774)
!9774 = distinct !DILexicalBlock(scope: !9770, file: !1221, line: 253, column: 16)
!9775 = !DILocation(line: 255, column: 3, scope: !9774)
!9776 = !DILocation(line: 256, column: 4, scope: !9777)
!9777 = distinct !DILexicalBlock(scope: !9770, file: !1221, line: 255, column: 10)
!9778 = !DILocation(line: 260, column: 40, scope: !9740)
!9779 = !DILocation(line: 260, column: 2, scope: !9740)
!9780 = !DILocation(line: 265, column: 1, scope: !9740)
!9781 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1221, file: !1221, line: 137, type: !9583, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9782)
!9782 = !{!9783, !9784}
!9783 = !DILocalVariable(name: "pin", arg: 1, scope: !9781, file: !1221, line: 137, type: !119)
!9784 = !DILocalVariable(name: "pinval", scope: !9781, file: !1221, line: 139, type: !118)
!9785 = !DILocation(line: 0, scope: !9781)
!9786 = !DILocation(line: 149, column: 13, scope: !9781)
!9787 = !DILocation(line: 151, column: 2, scope: !9781)
!9788 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !9663, file: !9663, line: 342, type: !9789, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9791)
!9789 = !DISubroutineType(types: !9790)
!9790 = !{null, !1154, !118, !118}
!9791 = !{!9792, !9793, !9794}
!9792 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9788, file: !9663, line: 342, type: !1154)
!9793 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9788, file: !9663, line: 342, type: !118)
!9794 = !DILocalVariable(name: "OutputType", arg: 3, scope: !9788, file: !9663, line: 342, type: !118)
!9795 = !DILocation(line: 0, scope: !9788)
!9796 = !DILocation(line: 344, column: 3, scope: !9788)
!9797 = !DILocation(line: 345, column: 1, scope: !9788)
!9798 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !9663, file: !9663, line: 413, type: !9789, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9799)
!9799 = !{!9800, !9801, !9802}
!9800 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9798, file: !9663, line: 413, type: !1154)
!9801 = !DILocalVariable(name: "Pin", arg: 2, scope: !9798, file: !9663, line: 413, type: !118)
!9802 = !DILocalVariable(name: "Speed", arg: 3, scope: !9798, file: !9663, line: 413, type: !118)
!9803 = !DILocation(line: 0, scope: !9798)
!9804 = !DILocation(line: 415, column: 3, scope: !9798)
!9805 = !DILocation(line: 0, scope: !9603, inlinedAt: !9806)
!9806 = distinct !DILocation(line: 415, column: 3, scope: !9798)
!9807 = !DILocation(line: 380, column: 4, scope: !9603, inlinedAt: !9806)
!9808 = !DILocation(line: 0, scope: !9611, inlinedAt: !9809)
!9809 = distinct !DILocation(line: 415, column: 3, scope: !9798)
!9810 = !DILocation(line: 414, column: 7, scope: !9611, inlinedAt: !9809)
!9811 = !DILocation(line: 0, scope: !9603, inlinedAt: !9812)
!9812 = distinct !DILocation(line: 415, column: 3, scope: !9798)
!9813 = !DILocation(line: 0, scope: !9611, inlinedAt: !9814)
!9814 = distinct !DILocation(line: 415, column: 3, scope: !9798)
!9815 = !DILocation(line: 417, column: 1, scope: !9798)
!9816 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !9663, file: !9663, line: 484, type: !9789, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9817)
!9817 = !{!9818, !9819, !9820}
!9818 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9816, file: !9663, line: 484, type: !1154)
!9819 = !DILocalVariable(name: "Pin", arg: 2, scope: !9816, file: !9663, line: 484, type: !118)
!9820 = !DILocalVariable(name: "Pull", arg: 3, scope: !9816, file: !9663, line: 484, type: !118)
!9821 = !DILocation(line: 0, scope: !9816)
!9822 = !DILocation(line: 486, column: 3, scope: !9816)
!9823 = !DILocation(line: 0, scope: !9603, inlinedAt: !9824)
!9824 = distinct !DILocation(line: 486, column: 3, scope: !9816)
!9825 = !DILocation(line: 380, column: 4, scope: !9603, inlinedAt: !9824)
!9826 = !DILocation(line: 0, scope: !9611, inlinedAt: !9827)
!9827 = distinct !DILocation(line: 486, column: 3, scope: !9816)
!9828 = !DILocation(line: 414, column: 7, scope: !9611, inlinedAt: !9827)
!9829 = !DILocation(line: 0, scope: !9603, inlinedAt: !9830)
!9830 = distinct !DILocation(line: 486, column: 3, scope: !9816)
!9831 = !DILocation(line: 0, scope: !9611, inlinedAt: !9832)
!9832 = distinct !DILocation(line: 486, column: 3, scope: !9816)
!9833 = !DILocation(line: 487, column: 1, scope: !9816)
!9834 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !9663, file: !9663, line: 556, type: !9789, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9835)
!9835 = !{!9836, !9837, !9838}
!9836 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9834, file: !9663, line: 556, type: !1154)
!9837 = !DILocalVariable(name: "Pin", arg: 2, scope: !9834, file: !9663, line: 556, type: !118)
!9838 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9834, file: !9663, line: 556, type: !118)
!9839 = !DILocation(line: 0, scope: !9834)
!9840 = !DILocation(line: 558, column: 3, scope: !9834)
!9841 = !DILocation(line: 0, scope: !9603, inlinedAt: !9842)
!9842 = distinct !DILocation(line: 558, column: 3, scope: !9834)
!9843 = !DILocation(line: 380, column: 4, scope: !9603, inlinedAt: !9842)
!9844 = !DILocation(line: 0, scope: !9611, inlinedAt: !9845)
!9845 = distinct !DILocation(line: 558, column: 3, scope: !9834)
!9846 = !DILocation(line: 414, column: 7, scope: !9611, inlinedAt: !9845)
!9847 = !DILocation(line: 0, scope: !9603, inlinedAt: !9848)
!9848 = distinct !DILocation(line: 558, column: 3, scope: !9834)
!9849 = !DILocation(line: 0, scope: !9611, inlinedAt: !9850)
!9850 = distinct !DILocation(line: 558, column: 3, scope: !9834)
!9851 = !DILocation(line: 560, column: 1, scope: !9834)
!9852 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !9663, file: !9663, line: 633, type: !9789, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9853)
!9853 = !{!9854, !9855, !9856}
!9854 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9852, file: !9663, line: 633, type: !1154)
!9855 = !DILocalVariable(name: "Pin", arg: 2, scope: !9852, file: !9663, line: 633, type: !118)
!9856 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9852, file: !9663, line: 633, type: !118)
!9857 = !DILocation(line: 0, scope: !9852)
!9858 = !DILocation(line: 635, column: 3, scope: !9852)
!9859 = !DILocation(line: 0, scope: !9603, inlinedAt: !9860)
!9860 = distinct !DILocation(line: 635, column: 3, scope: !9852)
!9861 = !DILocation(line: 380, column: 4, scope: !9603, inlinedAt: !9860)
!9862 = !DILocation(line: 0, scope: !9611, inlinedAt: !9863)
!9863 = distinct !DILocation(line: 635, column: 3, scope: !9852)
!9864 = !DILocation(line: 414, column: 7, scope: !9611, inlinedAt: !9863)
!9865 = !DILocation(line: 0, scope: !9603, inlinedAt: !9866)
!9866 = distinct !DILocation(line: 635, column: 3, scope: !9852)
!9867 = !DILocation(line: 0, scope: !9611, inlinedAt: !9868)
!9868 = distinct !DILocation(line: 635, column: 3, scope: !9852)
!9869 = !DILocation(line: 637, column: 1, scope: !9852)
!9870 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !9663, file: !9663, line: 273, type: !9789, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9871)
!9871 = !{!9872, !9873, !9874}
!9872 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9870, file: !9663, line: 273, type: !1154)
!9873 = !DILocalVariable(name: "Pin", arg: 2, scope: !9870, file: !9663, line: 273, type: !118)
!9874 = !DILocalVariable(name: "Mode", arg: 3, scope: !9870, file: !9663, line: 273, type: !118)
!9875 = !DILocation(line: 0, scope: !9870)
!9876 = !DILocation(line: 275, column: 3, scope: !9870)
!9877 = !DILocation(line: 0, scope: !9603, inlinedAt: !9878)
!9878 = distinct !DILocation(line: 275, column: 3, scope: !9870)
!9879 = !DILocation(line: 380, column: 4, scope: !9603, inlinedAt: !9878)
!9880 = !DILocation(line: 0, scope: !9611, inlinedAt: !9881)
!9881 = distinct !DILocation(line: 275, column: 3, scope: !9870)
!9882 = !DILocation(line: 414, column: 7, scope: !9611, inlinedAt: !9881)
!9883 = !DILocation(line: 0, scope: !9603, inlinedAt: !9884)
!9884 = distinct !DILocation(line: 275, column: 3, scope: !9870)
!9885 = !DILocation(line: 0, scope: !9611, inlinedAt: !9886)
!9886 = distinct !DILocation(line: 275, column: 3, scope: !9870)
!9887 = !DILocation(line: 276, column: 1, scope: !9870)
!9888 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1221, file: !1221, line: 698, type: !1234, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9889)
!9889 = !{!9890, !9891, !9892}
!9890 = !DILocalVariable(name: "dev", arg: 1, scope: !9888, file: !1221, line: 698, type: !1081)
!9891 = !DILocalVariable(name: "data", scope: !9888, file: !1221, line: 700, type: !9315)
!9892 = !DILocalVariable(name: "ret", scope: !9888, file: !1221, line: 701, type: !119)
!9893 = !DILocation(line: 0, scope: !9888)
!9894 = !DILocation(line: 700, column: 38, scope: !9888)
!9895 = !DILocation(line: 703, column: 8, scope: !9888)
!9896 = !DILocation(line: 703, column: 12, scope: !9888)
!9897 = !DILocation(line: 705, column: 7, scope: !9898)
!9898 = distinct !DILexicalBlock(scope: !9888, file: !1221, line: 705, column: 6)
!9899 = !DILocation(line: 705, column: 6, scope: !9888)
!9900 = !DILocation(line: 722, column: 8, scope: !9888)
!9901 = !DILocation(line: 723, column: 10, scope: !9902)
!9902 = distinct !DILexicalBlock(scope: !9888, file: !1221, line: 723, column: 6)
!9903 = !DILocation(line: 723, column: 6, scope: !9888)
!9904 = !DILocation(line: 731, column: 1, scope: !9888)
!9905 = distinct !DISubprogram(name: "device_is_ready", scope: !9093, file: !9093, line: 47, type: !9906, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9908)
!9906 = !DISubroutineType(types: !9907)
!9907 = !{!345, !1081}
!9908 = !{!9909}
!9909 = !DILocalVariable(name: "dev", arg: 1, scope: !9905, file: !9093, line: 47, type: !1081)
!9910 = !DILocation(line: 0, scope: !9905)
!9911 = !DILocation(line: 55, column: 2, scope: !9912)
!9912 = distinct !DILexicalBlock(scope: !9905, file: !9093, line: 55, column: 2)
!9913 = !{i64 2155675859}
!9914 = !DILocation(line: 56, column: 9, scope: !9905)
!9915 = !DILocation(line: 56, column: 2, scope: !9905)
!9916 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1221, file: !1221, line: 270, type: !9917, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9919)
!9917 = !DISubroutineType(types: !9918)
!9918 = !{!119, !1081, !345}
!9919 = !{!9920, !9921, !9922, !9923, !9924}
!9920 = !DILocalVariable(name: "dev", arg: 1, scope: !9916, file: !1221, line: 270, type: !1081)
!9921 = !DILocalVariable(name: "on", arg: 2, scope: !9916, file: !1221, line: 270, type: !345)
!9922 = !DILocalVariable(name: "cfg", scope: !9916, file: !1221, line: 272, type: !9248)
!9923 = !DILocalVariable(name: "ret", scope: !9916, file: !1221, line: 273, type: !119)
!9924 = !DILocalVariable(name: "clk", scope: !9916, file: !1221, line: 278, type: !9550)
!9925 = !DILocation(line: 0, scope: !9916)
!9926 = !DILocation(line: 272, column: 45, scope: !9916)
!9927 = !DILocation(line: 282, column: 38, scope: !9928)
!9928 = distinct !DILexicalBlock(scope: !9929, file: !1221, line: 280, column: 10)
!9929 = distinct !DILexicalBlock(scope: !9916, file: !1221, line: 280, column: 6)
!9930 = !DILocation(line: 282, column: 6, scope: !9928)
!9931 = !DILocation(line: 281, column: 9, scope: !9928)
!9932 = !DILocation(line: 293, column: 1, scope: !9916)
!9933 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !334, file: !334, line: 730, type: !9906, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9934)
!9934 = !{!9935}
!9935 = !DILocalVariable(name: "dev", arg: 1, scope: !9933, file: !334, line: 730, type: !1081)
!9936 = !DILocation(line: 0, scope: !9933)
!9937 = !DILocation(line: 732, column: 9, scope: !9933)
!9938 = !DILocation(line: 732, column: 2, scope: !9933)
!9939 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1221, file: !1221, line: 496, type: !9940, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1052, retainedNodes: !9942)
!9940 = !DISubroutineType(types: !9941)
!9941 = !{!119, !1081, !119, !119, !119}
!9942 = !{!9943, !9944, !9945, !9946, !9947, !9948}
!9943 = !DILocalVariable(name: "dev", arg: 1, scope: !9939, file: !1221, line: 496, type: !1081)
!9944 = !DILocalVariable(name: "pin", arg: 2, scope: !9939, file: !1221, line: 496, type: !119)
!9945 = !DILocalVariable(name: "conf", arg: 3, scope: !9939, file: !1221, line: 496, type: !119)
!9946 = !DILocalVariable(name: "func", arg: 4, scope: !9939, file: !1221, line: 496, type: !119)
!9947 = !DILocalVariable(name: "ret", scope: !9939, file: !1221, line: 498, type: !119)
!9948 = !DILocalVariable(name: "gpio_out", scope: !9949, file: !1221, line: 508, type: !118)
!9949 = distinct !DILexicalBlock(scope: !9950, file: !1221, line: 507, column: 27)
!9950 = distinct !DILexicalBlock(scope: !9939, file: !1221, line: 507, column: 6)
!9951 = !DILocation(line: 0, scope: !9939)
!9952 = !DILocation(line: 505, column: 2, scope: !9939)
!9953 = !DILocation(line: 507, column: 11, scope: !9950)
!9954 = !DILocation(line: 507, column: 6, scope: !9939)
!9955 = !DILocation(line: 508, column: 28, scope: !9949)
!9956 = !DILocation(line: 0, scope: !9949)
!9957 = !DILocation(line: 510, column: 16, scope: !9958)
!9958 = distinct !DILexicalBlock(scope: !9949, file: !1221, line: 510, column: 7)
!9959 = !DILocation(line: 0, scope: !9958)
!9960 = !DILocation(line: 510, column: 7, scope: !9949)
!9961 = !DILocation(line: 511, column: 4, scope: !9962)
!9962 = distinct !DILexicalBlock(scope: !9958, file: !1221, line: 510, column: 32)
!9963 = !DILocation(line: 512, column: 3, scope: !9962)
!9964 = !DILocation(line: 513, column: 4, scope: !9965)
!9965 = distinct !DILexicalBlock(scope: !9966, file: !1221, line: 512, column: 39)
!9966 = distinct !DILexicalBlock(scope: !9958, file: !1221, line: 512, column: 14)
!9967 = !DILocation(line: 514, column: 3, scope: !9965)
!9968 = !DILocation(line: 518, column: 1, scope: !9939)
!9969 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1530, file: !1530, line: 526, type: !1433, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !9970)
!9970 = !{!9971, !9972, !9973}
!9971 = !DILocalVariable(name: "dev", arg: 1, scope: !9969, file: !1530, line: 526, type: !1435)
!9972 = !DILocalVariable(name: "c", arg: 2, scope: !9969, file: !1530, line: 526, type: !1013)
!9973 = !DILocalVariable(name: "config", scope: !9969, file: !1530, line: 528, type: !9974)
!9974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1579, size: 32)
!9975 = !DILocation(line: 0, scope: !9969)
!9976 = !DILocation(line: 528, column: 48, scope: !9969)
!9977 = !DILocation(line: 531, column: 40, scope: !9978)
!9978 = distinct !DILexicalBlock(scope: !9969, file: !1530, line: 531, column: 6)
!9979 = !DILocation(line: 531, column: 6, scope: !9978)
!9980 = !DILocation(line: 531, column: 6, scope: !9969)
!9981 = !DILocation(line: 532, column: 34, scope: !9982)
!9982 = distinct !DILexicalBlock(scope: !9978, file: !1530, line: 531, column: 48)
!9983 = !DILocation(line: 532, column: 3, scope: !9982)
!9984 = !DILocation(line: 533, column: 2, scope: !9982)
!9985 = !DILocation(line: 539, column: 42, scope: !9986)
!9986 = distinct !DILexicalBlock(scope: !9969, file: !1530, line: 539, column: 6)
!9987 = !DILocation(line: 539, column: 7, scope: !9986)
!9988 = !DILocation(line: 539, column: 6, scope: !9969)
!9989 = !DILocation(line: 543, column: 52, scope: !9969)
!9990 = !DILocation(line: 543, column: 22, scope: !9969)
!9991 = !DILocation(line: 543, column: 5, scope: !9969)
!9992 = !DILocation(line: 545, column: 2, scope: !9969)
!9993 = !DILocation(line: 546, column: 1, scope: !9969)
!9994 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1530, file: !1530, line: 548, type: !1452, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !9995)
!9995 = !{!9996, !9997, !9998, !9999}
!9996 = !DILocalVariable(name: "dev", arg: 1, scope: !9994, file: !1530, line: 548, type: !1435)
!9997 = !DILocalVariable(name: "c", arg: 2, scope: !9994, file: !1530, line: 549, type: !186)
!9998 = !DILocalVariable(name: "config", scope: !9994, file: !1530, line: 551, type: !9974)
!9999 = !DILocalVariable(name: "key", scope: !9994, file: !1530, line: 555, type: !32)
!10000 = !DILocation(line: 0, scope: !9994)
!10001 = !DILocation(line: 551, column: 48, scope: !9994)
!10002 = !DILocation(line: 562, column: 2, scope: !9994)
!10003 = !DILocation(line: 563, column: 41, scope: !10004)
!10004 = distinct !DILexicalBlock(scope: !10005, file: !1530, line: 563, column: 7)
!10005 = distinct !DILexicalBlock(scope: !9994, file: !1530, line: 562, column: 12)
!10006 = !DILocation(line: 563, column: 7, scope: !10004)
!10007 = !DILocation(line: 563, column: 7, scope: !10005)
!10008 = !DILocation(line: 55, column: 2, scope: !10009, inlinedAt: !10013)
!10009 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6131, file: !6131, line: 42, type: !6132, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10010)
!10010 = !{!10011, !10012}
!10011 = !DILocalVariable(name: "key", scope: !10009, file: !6131, line: 44, type: !32)
!10012 = !DILocalVariable(name: "tmp", scope: !10009, file: !6131, line: 53, type: !32)
!10013 = distinct !DILocation(line: 564, column: 10, scope: !10014)
!10014 = distinct !DILexicalBlock(scope: !10004, file: !1530, line: 563, column: 49)
!10015 = !{i64 2646259}
!10016 = !DILocation(line: 0, scope: !10009, inlinedAt: !10013)
!10017 = !DILocation(line: 565, column: 42, scope: !10018)
!10018 = distinct !DILexicalBlock(scope: !10014, file: !1530, line: 565, column: 8)
!10019 = !DILocation(line: 565, column: 8, scope: !10018)
!10020 = !DILocation(line: 565, column: 8, scope: !10014)
!10021 = !DILocalVariable(name: "key", arg: 1, scope: !10022, file: !6131, line: 84, type: !32)
!10022 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6131, file: !6131, line: 84, type: !6142, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10023)
!10023 = !{!10021}
!10024 = !DILocation(line: 0, scope: !10022, inlinedAt: !10025)
!10025 = distinct !DILocation(line: 568, column: 4, scope: !10014)
!10026 = !DILocation(line: 95, column: 2, scope: !10022, inlinedAt: !10025)
!10027 = !{i64 2647076}
!10028 = !DILocation(line: 569, column: 3, scope: !10014)
!10029 = distinct !{!10029, !10002, !10030}
!10030 = !DILocation(line: 570, column: 2, scope: !9994)
!10031 = !DILocation(line: 592, column: 33, scope: !9994)
!10032 = !DILocation(line: 592, column: 2, scope: !9994)
!10033 = !DILocation(line: 0, scope: !10022, inlinedAt: !10034)
!10034 = distinct !DILocation(line: 593, column: 2, scope: !9994)
!10035 = !DILocation(line: 95, column: 2, scope: !10022, inlinedAt: !10034)
!10036 = !DILocation(line: 594, column: 1, scope: !9994)
!10037 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1530, file: !1530, line: 596, type: !1456, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10038)
!10038 = !{!10039, !10040, !10041}
!10039 = !DILocalVariable(name: "dev", arg: 1, scope: !10037, file: !1530, line: 596, type: !1435)
!10040 = !DILocalVariable(name: "config", scope: !10037, file: !1530, line: 598, type: !9974)
!10041 = !DILocalVariable(name: "err", scope: !10037, file: !1530, line: 599, type: !118)
!10042 = !DILocation(line: 0, scope: !10037)
!10043 = !DILocation(line: 598, column: 48, scope: !10037)
!10044 = !DILocation(line: 606, column: 40, scope: !10045)
!10045 = distinct !DILexicalBlock(scope: !10037, file: !1530, line: 606, column: 6)
!10046 = !DILocation(line: 606, column: 6, scope: !10045)
!10047 = !DILocation(line: 606, column: 6, scope: !10037)
!10048 = !DILocation(line: 610, column: 39, scope: !10049)
!10049 = distinct !DILexicalBlock(scope: !10037, file: !1530, line: 610, column: 6)
!10050 = !DILocation(line: 610, column: 6, scope: !10049)
!10051 = !DILocation(line: 610, column: 6, scope: !10037)
!10052 = !DILocation(line: 614, column: 39, scope: !10053)
!10053 = distinct !DILexicalBlock(scope: !10037, file: !1530, line: 614, column: 6)
!10054 = !DILocation(line: 614, column: 6, scope: !10053)
!10055 = !DILocation(line: 614, column: 6, scope: !10037)
!10056 = !DILocation(line: 619, column: 40, scope: !10057)
!10057 = distinct !DILexicalBlock(scope: !10037, file: !1530, line: 619, column: 6)
!10058 = !DILocation(line: 619, column: 6, scope: !10057)
!10059 = !DILocation(line: 619, column: 6, scope: !10037)
!10060 = !DILocation(line: 623, column: 10, scope: !10061)
!10061 = distinct !DILexicalBlock(scope: !10037, file: !1530, line: 623, column: 6)
!10062 = !DILocation(line: 623, column: 6, scope: !10037)
!10063 = !DILocation(line: 624, column: 34, scope: !10064)
!10064 = distinct !DILexicalBlock(scope: !10061, file: !1530, line: 623, column: 24)
!10065 = !DILocation(line: 624, column: 3, scope: !10064)
!10066 = !DILocation(line: 625, column: 2, scope: !10064)
!10067 = !DILocation(line: 632, column: 10, scope: !10068)
!10068 = distinct !DILexicalBlock(scope: !10037, file: !1530, line: 632, column: 6)
!10069 = !DILocation(line: 632, column: 6, scope: !10037)
!10070 = !DILocation(line: 633, column: 34, scope: !10071)
!10071 = distinct !DILexicalBlock(scope: !10068, file: !1530, line: 632, column: 32)
!10072 = !DILocation(line: 633, column: 3, scope: !10071)
!10073 = !DILocation(line: 634, column: 2, scope: !10071)
!10074 = !DILocation(line: 636, column: 10, scope: !10075)
!10075 = distinct !DILexicalBlock(scope: !10037, file: !1530, line: 636, column: 6)
!10076 = !DILocation(line: 636, column: 6, scope: !10037)
!10077 = !DILocation(line: 637, column: 33, scope: !10078)
!10078 = distinct !DILexicalBlock(scope: !10075, file: !1530, line: 636, column: 31)
!10079 = !DILocation(line: 637, column: 3, scope: !10078)
!10080 = !DILocation(line: 638, column: 2, scope: !10078)
!10081 = !DILocation(line: 640, column: 10, scope: !10082)
!10082 = distinct !DILexicalBlock(scope: !10037, file: !1530, line: 640, column: 6)
!10083 = !DILocation(line: 640, column: 6, scope: !10037)
!10084 = !DILocation(line: 641, column: 33, scope: !10085)
!10085 = distinct !DILexicalBlock(scope: !10082, file: !1530, line: 640, column: 32)
!10086 = !DILocation(line: 641, column: 3, scope: !10085)
!10087 = !DILocation(line: 642, column: 2, scope: !10085)
!10088 = !DILocation(line: 646, column: 32, scope: !10037)
!10089 = !DILocation(line: 646, column: 2, scope: !10037)
!10090 = !DILocation(line: 648, column: 2, scope: !10037)
!10091 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1530, file: !1530, line: 419, type: !1460, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10092)
!10092 = !{!10093, !10094, !10095, !10096, !10098, !10099, !10100, !10101}
!10093 = !DILocalVariable(name: "dev", arg: 1, scope: !10091, file: !1530, line: 419, type: !1435)
!10094 = !DILocalVariable(name: "cfg", arg: 2, scope: !10091, file: !1530, line: 420, type: !1462)
!10095 = !DILocalVariable(name: "config", scope: !10091, file: !1530, line: 422, type: !9974)
!10096 = !DILocalVariable(name: "data", scope: !10091, file: !1530, line: 423, type: !10097)
!10097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 32)
!10098 = !DILocalVariable(name: "parity", scope: !10091, file: !1530, line: 424, type: !6727)
!10099 = !DILocalVariable(name: "stopbits", scope: !10091, file: !1530, line: 425, type: !6727)
!10100 = !DILocalVariable(name: "databits", scope: !10091, file: !1530, line: 426, type: !6727)
!10101 = !DILocalVariable(name: "flowctrl", scope: !10091, file: !1530, line: 428, type: !6727)
!10102 = !DILocation(line: 0, scope: !10091)
!10103 = !DILocation(line: 422, column: 48, scope: !10091)
!10104 = !DILocation(line: 423, column: 38, scope: !10091)
!10105 = !DILocation(line: 424, column: 56, scope: !10091)
!10106 = !DILocation(line: 424, column: 51, scope: !10091)
!10107 = !DILocation(line: 424, column: 26, scope: !10091)
!10108 = !DILocation(line: 425, column: 60, scope: !10091)
!10109 = !DILocation(line: 425, column: 55, scope: !10091)
!10110 = !DILocation(line: 425, column: 28, scope: !10091)
!10111 = !DILocation(line: 426, column: 60, scope: !10091)
!10112 = !DILocation(line: 426, column: 55, scope: !10091)
!10113 = !DILocation(line: 426, column: 28, scope: !10091)
!10114 = !DILocation(line: 428, column: 58, scope: !10091)
!10115 = !DILocation(line: 428, column: 53, scope: !10091)
!10116 = !DILocation(line: 428, column: 28, scope: !10091)
!10117 = !DILocation(line: 431, column: 44, scope: !10118)
!10118 = distinct !DILexicalBlock(scope: !10091, file: !1530, line: 431, column: 6)
!10119 = !DILocation(line: 438, column: 22, scope: !10120)
!10120 = distinct !DILexicalBlock(scope: !10091, file: !1530, line: 437, column: 6)
!10121 = !DILocation(line: 437, column: 6, scope: !10091)
!10122 = !DILocation(line: 448, column: 6, scope: !10091)
!10123 = !DILocation(line: 465, column: 47, scope: !10124)
!10124 = distinct !DILexicalBlock(scope: !10091, file: !1530, line: 465, column: 6)
!10125 = !DILocation(line: 475, column: 21, scope: !10126)
!10126 = distinct !DILexicalBlock(scope: !10091, file: !1530, line: 475, column: 6)
!10127 = !DILocation(line: 475, column: 6, scope: !10091)
!10128 = !DILocation(line: 476, column: 8, scope: !10129)
!10129 = distinct !DILexicalBlock(scope: !10130, file: !1530, line: 476, column: 7)
!10130 = distinct !DILexicalBlock(scope: !10126, file: !1530, line: 475, column: 49)
!10131 = !DILocation(line: 477, column: 34, scope: !10129)
!10132 = !DILocation(line: 476, column: 7, scope: !10130)
!10133 = !DILocation(line: 482, column: 27, scope: !10091)
!10134 = !DILocation(line: 482, column: 2, scope: !10091)
!10135 = !DILocation(line: 484, column: 16, scope: !10136)
!10136 = distinct !DILexicalBlock(scope: !10091, file: !1530, line: 484, column: 6)
!10137 = !DILocation(line: 484, column: 13, scope: !10136)
!10138 = !DILocation(line: 484, column: 6, scope: !10091)
!10139 = !DILocation(line: 485, column: 3, scope: !10140)
!10140 = distinct !DILexicalBlock(scope: !10136, file: !1530, line: 484, column: 44)
!10141 = !DILocation(line: 486, column: 2, scope: !10140)
!10142 = !DILocation(line: 488, column: 18, scope: !10143)
!10143 = distinct !DILexicalBlock(scope: !10091, file: !1530, line: 488, column: 6)
!10144 = !DILocation(line: 488, column: 15, scope: !10143)
!10145 = !DILocation(line: 488, column: 6, scope: !10091)
!10146 = !DILocation(line: 489, column: 3, scope: !10147)
!10147 = distinct !DILexicalBlock(scope: !10143, file: !1530, line: 488, column: 48)
!10148 = !DILocation(line: 490, column: 2, scope: !10147)
!10149 = !DILocation(line: 492, column: 18, scope: !10150)
!10150 = distinct !DILexicalBlock(scope: !10091, file: !1530, line: 492, column: 6)
!10151 = !DILocation(line: 492, column: 15, scope: !10150)
!10152 = !DILocation(line: 492, column: 6, scope: !10091)
!10153 = !DILocation(line: 493, column: 3, scope: !10154)
!10154 = distinct !DILexicalBlock(scope: !10150, file: !1530, line: 492, column: 48)
!10155 = !DILocation(line: 494, column: 2, scope: !10154)
!10156 = !DILocation(line: 496, column: 18, scope: !10157)
!10157 = distinct !DILexicalBlock(scope: !10091, file: !1530, line: 496, column: 6)
!10158 = !DILocation(line: 496, column: 15, scope: !10157)
!10159 = !DILocation(line: 496, column: 6, scope: !10091)
!10160 = !DILocation(line: 497, column: 3, scope: !10161)
!10161 = distinct !DILexicalBlock(scope: !10157, file: !1530, line: 496, column: 46)
!10162 = !DILocation(line: 498, column: 2, scope: !10161)
!10163 = !DILocation(line: 500, column: 11, scope: !10164)
!10164 = distinct !DILexicalBlock(scope: !10091, file: !1530, line: 500, column: 6)
!10165 = !DILocation(line: 500, column: 29, scope: !10164)
!10166 = !DILocation(line: 500, column: 20, scope: !10164)
!10167 = !DILocation(line: 500, column: 6, scope: !10091)
!10168 = !DILocation(line: 501, column: 3, scope: !10169)
!10169 = distinct !DILexicalBlock(scope: !10164, file: !1530, line: 500, column: 40)
!10170 = !DILocation(line: 502, column: 26, scope: !10169)
!10171 = !DILocation(line: 502, column: 19, scope: !10169)
!10172 = !DILocation(line: 503, column: 2, scope: !10169)
!10173 = !DILocation(line: 505, column: 26, scope: !10091)
!10174 = !DILocation(line: 505, column: 2, scope: !10091)
!10175 = !DILocation(line: 506, column: 2, scope: !10091)
!10176 = !DILocation(line: 507, column: 1, scope: !10091)
!10177 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1530, file: !1530, line: 509, type: !1473, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10178)
!10178 = !{!10179, !10180, !10181}
!10179 = !DILocalVariable(name: "dev", arg: 1, scope: !10177, file: !1530, line: 509, type: !1435)
!10180 = !DILocalVariable(name: "cfg", arg: 2, scope: !10177, file: !1530, line: 510, type: !1475)
!10181 = !DILocalVariable(name: "data", scope: !10177, file: !1530, line: 512, type: !10097)
!10182 = !DILocation(line: 0, scope: !10177)
!10183 = !DILocation(line: 512, column: 38, scope: !10177)
!10184 = !DILocation(line: 514, column: 24, scope: !10177)
!10185 = !DILocation(line: 514, column: 7, scope: !10177)
!10186 = !DILocation(line: 514, column: 16, scope: !10177)
!10187 = !DILocation(line: 515, column: 41, scope: !10177)
!10188 = !{i32 0, i32 1537}
!10189 = !DILocation(line: 515, column: 16, scope: !10177)
!10190 = !DILocation(line: 515, column: 7, scope: !10177)
!10191 = !DILocation(line: 515, column: 14, scope: !10177)
!10192 = !DILocation(line: 517, column: 3, scope: !10177)
!10193 = !{i32 0, i32 12289}
!10194 = !DILocation(line: 516, column: 19, scope: !10177)
!10195 = !DILocation(line: 516, column: 7, scope: !10177)
!10196 = !DILocation(line: 516, column: 17, scope: !10177)
!10197 = !DILocation(line: 519, column: 3, scope: !10177)
!10198 = !DILocation(line: 519, column: 33, scope: !10177)
!10199 = !DILocation(line: 518, column: 19, scope: !10177)
!10200 = !DILocation(line: 518, column: 7, scope: !10177)
!10201 = !DILocation(line: 518, column: 17, scope: !10177)
!10202 = !DILocation(line: 521, column: 3, scope: !10177)
!10203 = !{i32 0, i32 769}
!10204 = !DILocation(line: 520, column: 19, scope: !10177)
!10205 = !DILocation(line: 520, column: 7, scope: !10177)
!10206 = !DILocation(line: 520, column: 17, scope: !10177)
!10207 = !DILocation(line: 522, column: 2, scope: !10177)
!10208 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1530, file: !1530, line: 205, type: !10209, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10211)
!10209 = !DISubroutineType(types: !10210)
!10210 = !{!118, !1435}
!10211 = !{!10212, !10213}
!10212 = !DILocalVariable(name: "dev", arg: 1, scope: !10208, file: !1530, line: 205, type: !1435)
!10213 = !DILocalVariable(name: "config", scope: !10208, file: !1530, line: 207, type: !9974)
!10214 = !DILocation(line: 0, scope: !10208)
!10215 = !DILocation(line: 207, column: 48, scope: !10208)
!10216 = !DILocation(line: 209, column: 36, scope: !10208)
!10217 = !DILocation(line: 209, column: 9, scope: !10208)
!10218 = !DILocation(line: 209, column: 2, scope: !10208)
!10219 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1530, file: !1530, line: 270, type: !10220, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10222)
!10220 = !DISubroutineType(types: !10221)
!10221 = !{!1401, !118}
!10222 = !{!10223}
!10223 = !DILocalVariable(name: "parity", arg: 1, scope: !10219, file: !1530, line: 270, type: !118)
!10224 = !DILocation(line: 0, scope: !10219)
!10225 = !DILocation(line: 272, column: 2, scope: !10219)
!10226 = !DILocation(line: 281, column: 1, scope: !10219)
!10227 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1530, file: !1530, line: 220, type: !10209, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10228)
!10228 = !{!10229, !10230}
!10229 = !DILocalVariable(name: "dev", arg: 1, scope: !10227, file: !1530, line: 220, type: !1435)
!10230 = !DILocalVariable(name: "config", scope: !10227, file: !1530, line: 222, type: !9974)
!10231 = !DILocation(line: 0, scope: !10227)
!10232 = !DILocation(line: 222, column: 48, scope: !10227)
!10233 = !DILocation(line: 224, column: 44, scope: !10227)
!10234 = !DILocation(line: 224, column: 9, scope: !10227)
!10235 = !DILocation(line: 224, column: 2, scope: !10227)
!10236 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1530, file: !1530, line: 304, type: !10237, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10239)
!10237 = !DISubroutineType(types: !10238)
!10238 = !{!1415, !118}
!10239 = !{!10240}
!10240 = !DILocalVariable(name: "sb", arg: 1, scope: !10236, file: !1530, line: 304, type: !118)
!10241 = !DILocation(line: 0, scope: !10236)
!10242 = !DILocation(line: 306, column: 2, scope: !10236)
!10243 = !DILocation(line: 0, scope: !10244)
!10244 = distinct !DILexicalBlock(scope: !10236, file: !1530, line: 306, column: 14)
!10245 = !DILocation(line: 323, column: 1, scope: !10236)
!10246 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1530, file: !1530, line: 235, type: !10209, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10247)
!10247 = !{!10248, !10249}
!10248 = !DILocalVariable(name: "dev", arg: 1, scope: !10246, file: !1530, line: 235, type: !1435)
!10249 = !DILocalVariable(name: "config", scope: !10246, file: !1530, line: 237, type: !9974)
!10250 = !DILocation(line: 0, scope: !10246)
!10251 = !DILocation(line: 237, column: 48, scope: !10246)
!10252 = !DILocation(line: 239, column: 39, scope: !10246)
!10253 = !DILocation(line: 239, column: 9, scope: !10246)
!10254 = !DILocation(line: 239, column: 2, scope: !10246)
!10255 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1530, file: !1530, line: 355, type: !10256, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10258)
!10256 = !DISubroutineType(types: !10257)
!10257 = !{!1408, !118, !118}
!10258 = !{!10259, !10260}
!10259 = !DILocalVariable(name: "db", arg: 1, scope: !10255, file: !1530, line: 355, type: !118)
!10260 = !DILocalVariable(name: "p", arg: 2, scope: !10255, file: !1530, line: 356, type: !118)
!10261 = !DILocation(line: 0, scope: !10255)
!10262 = !DILocation(line: 358, column: 2, scope: !10255)
!10263 = !DILocation(line: 384, column: 1, scope: !10255)
!10264 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1530, file: !1530, line: 250, type: !10209, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10265)
!10265 = !{!10266, !10267}
!10266 = !DILocalVariable(name: "dev", arg: 1, scope: !10264, file: !1530, line: 250, type: !1435)
!10267 = !DILocalVariable(name: "config", scope: !10264, file: !1530, line: 252, type: !9974)
!10268 = !DILocation(line: 0, scope: !10264)
!10269 = !DILocation(line: 252, column: 48, scope: !10264)
!10270 = !DILocation(line: 254, column: 40, scope: !10264)
!10271 = !DILocation(line: 254, column: 9, scope: !10264)
!10272 = !DILocation(line: 254, column: 2, scope: !10264)
!10273 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1530, file: !1530, line: 409, type: !10274, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10276)
!10274 = !DISubroutineType(types: !10275)
!10275 = !{!1421, !118}
!10276 = !{!10277}
!10277 = !DILocalVariable(name: "fc", arg: 1, scope: !10273, file: !1530, line: 409, type: !118)
!10278 = !DILocation(line: 0, scope: !10273)
!10279 = !DILocation(line: 411, column: 9, scope: !10280)
!10280 = distinct !DILexicalBlock(scope: !10273, file: !1530, line: 411, column: 6)
!10281 = !DILocation(line: 416, column: 1, scope: !10273)
!10282 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !10283, file: !10283, line: 967, type: !10284, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10286)
!10283 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10284 = !DISubroutineType(types: !10285)
!10285 = !{!118, !1476}
!10286 = !{!10287}
!10287 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10282, file: !10283, line: 967, type: !1476)
!10288 = !DILocation(line: 0, scope: !10282)
!10289 = !DILocation(line: 969, column: 21, scope: !10282)
!10290 = !DILocation(line: 969, column: 3, scope: !10282)
!10291 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !10283, file: !10283, line: 601, type: !10284, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10292)
!10292 = !{!10293}
!10293 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10291, file: !10283, line: 601, type: !1476)
!10294 = !DILocation(line: 0, scope: !10291)
!10295 = !DILocation(line: 603, column: 21, scope: !10291)
!10296 = !DILocation(line: 603, column: 3, scope: !10291)
!10297 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !10283, file: !10283, line: 820, type: !10284, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10298)
!10298 = !{!10299}
!10299 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10297, file: !10283, line: 820, type: !1476)
!10300 = !DILocation(line: 0, scope: !10297)
!10301 = !DILocation(line: 822, column: 21, scope: !10297)
!10302 = !DILocation(line: 822, column: 3, scope: !10297)
!10303 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !10283, file: !10283, line: 547, type: !10284, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10304)
!10304 = !{!10305}
!10305 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10303, file: !10283, line: 547, type: !1476)
!10306 = !DILocation(line: 0, scope: !10303)
!10307 = !DILocation(line: 549, column: 21, scope: !10303)
!10308 = !DILocation(line: 549, column: 3, scope: !10303)
!10309 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1530, file: !1530, line: 257, type: !10310, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10312)
!10310 = !DISubroutineType(types: !10311)
!10311 = !{!118, !1401}
!10312 = !{!10313}
!10313 = !DILocalVariable(name: "parity", arg: 1, scope: !10309, file: !1530, line: 257, type: !1401)
!10314 = !DILocation(line: 0, scope: !10309)
!10315 = !DILocation(line: 259, column: 2, scope: !10309)
!10316 = !DILocation(line: 268, column: 1, scope: !10309)
!10317 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1530, file: !1530, line: 283, type: !10318, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10320)
!10318 = !DISubroutineType(types: !10319)
!10319 = !{!118, !1415}
!10320 = !{!10321}
!10321 = !DILocalVariable(name: "sb", arg: 1, scope: !10317, file: !1530, line: 283, type: !1415)
!10322 = !DILocation(line: 0, scope: !10317)
!10323 = !DILocation(line: 285, column: 2, scope: !10317)
!10324 = !DILocation(line: 0, scope: !10325)
!10325 = distinct !DILexicalBlock(scope: !10317, file: !1530, line: 285, column: 14)
!10326 = !DILocation(line: 302, column: 1, scope: !10317)
!10327 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1530, file: !1530, line: 325, type: !10328, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10330)
!10328 = !DISubroutineType(types: !10329)
!10329 = !{!118, !1408, !1401}
!10330 = !{!10331, !10332}
!10331 = !DILocalVariable(name: "db", arg: 1, scope: !10327, file: !1530, line: 325, type: !1408)
!10332 = !DILocalVariable(name: "p", arg: 2, scope: !10327, file: !1530, line: 326, type: !1401)
!10333 = !DILocation(line: 0, scope: !10327)
!10334 = !DILocation(line: 328, column: 2, scope: !10327)
!10335 = !DILocation(line: 353, column: 1, scope: !10327)
!10336 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1530, file: !1530, line: 393, type: !10337, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10339)
!10337 = !DISubroutineType(types: !10338)
!10338 = !{!118, !1421}
!10339 = !{!10340}
!10340 = !DILocalVariable(name: "fc", arg: 1, scope: !10336, file: !1530, line: 393, type: !1421)
!10341 = !DILocation(line: 0, scope: !10336)
!10342 = !DILocation(line: 395, column: 9, scope: !10343)
!10343 = distinct !DILexicalBlock(scope: !10336, file: !1530, line: 395, column: 6)
!10344 = !DILocation(line: 400, column: 1, scope: !10336)
!10345 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !10283, file: !10283, line: 424, type: !10346, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10348)
!10346 = !DISubroutineType(types: !10347)
!10347 = !{null, !1476}
!10348 = !{!10349}
!10349 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10345, file: !10283, line: 424, type: !1476)
!10350 = !DILocation(line: 0, scope: !10345)
!10351 = !DILocation(line: 426, column: 3, scope: !10345)
!10352 = !DILocation(line: 427, column: 1, scope: !10345)
!10353 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1530, file: !1530, line: 197, type: !10354, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10356)
!10354 = !DISubroutineType(types: !10355)
!10355 = !{null, !1435, !118}
!10356 = !{!10357, !10358, !10359}
!10357 = !DILocalVariable(name: "dev", arg: 1, scope: !10353, file: !1530, line: 197, type: !1435)
!10358 = !DILocalVariable(name: "parity", arg: 2, scope: !10353, file: !1530, line: 198, type: !118)
!10359 = !DILocalVariable(name: "config", scope: !10353, file: !1530, line: 200, type: !9974)
!10360 = !DILocation(line: 0, scope: !10353)
!10361 = !DILocation(line: 200, column: 48, scope: !10353)
!10362 = !DILocation(line: 202, column: 29, scope: !10353)
!10363 = !DILocation(line: 202, column: 2, scope: !10353)
!10364 = !DILocation(line: 203, column: 1, scope: !10353)
!10365 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1530, file: !1530, line: 212, type: !10354, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10366)
!10366 = !{!10367, !10368, !10369}
!10367 = !DILocalVariable(name: "dev", arg: 1, scope: !10365, file: !1530, line: 212, type: !1435)
!10368 = !DILocalVariable(name: "stopbits", arg: 2, scope: !10365, file: !1530, line: 213, type: !118)
!10369 = !DILocalVariable(name: "config", scope: !10365, file: !1530, line: 215, type: !9974)
!10370 = !DILocation(line: 0, scope: !10365)
!10371 = !DILocation(line: 215, column: 48, scope: !10365)
!10372 = !DILocation(line: 217, column: 37, scope: !10365)
!10373 = !DILocation(line: 217, column: 2, scope: !10365)
!10374 = !DILocation(line: 218, column: 1, scope: !10365)
!10375 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1530, file: !1530, line: 227, type: !10354, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10376)
!10376 = !{!10377, !10378, !10379}
!10377 = !DILocalVariable(name: "dev", arg: 1, scope: !10375, file: !1530, line: 227, type: !1435)
!10378 = !DILocalVariable(name: "databits", arg: 2, scope: !10375, file: !1530, line: 228, type: !118)
!10379 = !DILocalVariable(name: "config", scope: !10375, file: !1530, line: 230, type: !9974)
!10380 = !DILocation(line: 0, scope: !10375)
!10381 = !DILocation(line: 230, column: 48, scope: !10375)
!10382 = !DILocation(line: 232, column: 32, scope: !10375)
!10383 = !DILocation(line: 232, column: 2, scope: !10375)
!10384 = !DILocation(line: 233, column: 1, scope: !10375)
!10385 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1530, file: !1530, line: 242, type: !10354, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10386)
!10386 = !{!10387, !10388, !10389}
!10387 = !DILocalVariable(name: "dev", arg: 1, scope: !10385, file: !1530, line: 242, type: !1435)
!10388 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !10385, file: !1530, line: 243, type: !118)
!10389 = !DILocalVariable(name: "config", scope: !10385, file: !1530, line: 245, type: !9974)
!10390 = !DILocation(line: 0, scope: !10385)
!10391 = !DILocation(line: 245, column: 48, scope: !10385)
!10392 = !DILocation(line: 247, column: 33, scope: !10385)
!10393 = !DILocation(line: 247, column: 2, scope: !10385)
!10394 = !DILocation(line: 248, column: 1, scope: !10385)
!10395 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1530, file: !1530, line: 107, type: !10354, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10396)
!10396 = !{!10397, !10398, !10399, !10400, !10401}
!10397 = !DILocalVariable(name: "dev", arg: 1, scope: !10395, file: !1530, line: 107, type: !1435)
!10398 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !10395, file: !1530, line: 107, type: !118)
!10399 = !DILocalVariable(name: "config", scope: !10395, file: !1530, line: 109, type: !9974)
!10400 = !DILocalVariable(name: "data", scope: !10395, file: !1530, line: 110, type: !10097)
!10401 = !DILocalVariable(name: "clock_rate", scope: !10395, file: !1530, line: 112, type: !118)
!10402 = !DILocation(line: 0, scope: !10395)
!10403 = !DILocation(line: 109, column: 48, scope: !10395)
!10404 = !DILocation(line: 110, column: 38, scope: !10395)
!10405 = !DILocation(line: 112, column: 2, scope: !10395)
!10406 = !DILocation(line: 123, column: 36, scope: !10407)
!10407 = distinct !DILexicalBlock(scope: !10408, file: !1530, line: 123, column: 7)
!10408 = distinct !DILexicalBlock(scope: !10409, file: !1530, line: 122, column: 9)
!10409 = distinct !DILexicalBlock(scope: !10395, file: !1530, line: 115, column: 6)
!10410 = !DILocation(line: 124, column: 42, scope: !10407)
!10411 = !DILocation(line: 123, column: 7, scope: !10407)
!10412 = !DILocation(line: 125, column: 22, scope: !10407)
!10413 = !DILocation(line: 123, column: 7, scope: !10408)
!10414 = !DILocation(line: 126, column: 4, scope: !10415)
!10415 = distinct !DILexicalBlock(scope: !10416, file: !1530, line: 126, column: 4)
!10416 = distinct !DILexicalBlock(scope: !10417, file: !1530, line: 126, column: 4)
!10417 = distinct !DILexicalBlock(scope: !10418, file: !1530, line: 126, column: 4)
!10418 = distinct !DILexicalBlock(scope: !10419, file: !1530, line: 126, column: 4)
!10419 = distinct !DILexicalBlock(scope: !10407, file: !1530, line: 125, column: 27)
!10420 = !DILocation(line: 127, column: 4, scope: !10419)
!10421 = !DILocation(line: 176, column: 36, scope: !10395)
!10422 = !DILocation(line: 176, column: 3, scope: !10395)
!10423 = !DILocation(line: 179, column: 32, scope: !10395)
!10424 = !DILocation(line: 180, column: 10, scope: !10395)
!10425 = !DILocation(line: 179, column: 3, scope: !10395)
!10426 = !DILocation(line: 189, column: 3, scope: !10427)
!10427 = distinct !DILexicalBlock(scope: !10428, file: !1530, line: 189, column: 3)
!10428 = distinct !DILexicalBlock(scope: !10395, file: !1530, line: 189, column: 3)
!10429 = !DILocation(line: 189, column: 3, scope: !10428)
!10430 = !DILocation(line: 189, column: 3, scope: !10431)
!10431 = distinct !DILexicalBlock(scope: !10427, file: !1530, line: 189, column: 3)
!10432 = !DILocation(line: 195, column: 1, scope: !10395)
!10433 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !10283, file: !10283, line: 410, type: !10346, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10434)
!10434 = !{!10435}
!10435 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10433, file: !10283, line: 410, type: !1476)
!10436 = !DILocation(line: 0, scope: !10433)
!10437 = !DILocation(line: 412, column: 3, scope: !10433)
!10438 = !DILocation(line: 413, column: 1, scope: !10433)
!10439 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !858, file: !858, line: 216, type: !1509, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10440)
!10440 = !{!10441, !10442, !10443, !10444}
!10441 = !DILocalVariable(name: "dev", arg: 1, scope: !10439, file: !858, line: 216, type: !1435)
!10442 = !DILocalVariable(name: "sys", arg: 2, scope: !10439, file: !858, line: 217, type: !952)
!10443 = !DILocalVariable(name: "rate", arg: 3, scope: !10439, file: !858, line: 218, type: !908)
!10444 = !DILocalVariable(name: "api", scope: !10439, file: !858, line: 220, type: !1487)
!10445 = !DILocation(line: 0, scope: !10439)
!10446 = !DILocation(line: 221, column: 49, scope: !10439)
!10447 = !DILocation(line: 223, column: 11, scope: !10448)
!10448 = distinct !DILexicalBlock(scope: !10439, file: !858, line: 223, column: 6)
!10449 = !DILocation(line: 223, column: 20, scope: !10448)
!10450 = !DILocation(line: 223, column: 6, scope: !10439)
!10451 = !DILocation(line: 227, column: 9, scope: !10439)
!10452 = !DILocation(line: 227, column: 2, scope: !10439)
!10453 = !DILocation(line: 228, column: 1, scope: !10439)
!10454 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !6209, file: !6209, line: 175, type: !6210, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10455)
!10455 = !{!10456}
!10456 = !DILocalVariable(name: "level", arg: 1, scope: !10454, file: !6209, line: 175, type: !119)
!10457 = !DILocation(line: 0, scope: !10454)
!10458 = !DILocation(line: 177, column: 2, scope: !10454)
!10459 = !DILocation(line: 189, column: 1, scope: !10454)
!10460 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !10283, file: !10283, line: 615, type: !10461, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10463)
!10461 = !DISubroutineType(types: !10462)
!10462 = !{null, !1476, !118}
!10463 = !{!10464, !10465}
!10464 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10460, file: !10283, line: 615, type: !1476)
!10465 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !10460, file: !10283, line: 615, type: !118)
!10466 = !DILocation(line: 0, scope: !10460)
!10467 = !DILocation(line: 617, column: 3, scope: !10460)
!10468 = !DILocation(line: 618, column: 1, scope: !10460)
!10469 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !10283, file: !10283, line: 1020, type: !10470, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10472)
!10470 = !DISubroutineType(types: !10471)
!10471 = !{null, !1476, !118, !118, !118}
!10472 = !{!10473, !10474, !10475, !10476}
!10473 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10469, file: !10283, line: 1020, type: !1476)
!10474 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !10469, file: !10283, line: 1020, type: !118)
!10475 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !10469, file: !10283, line: 1020, type: !118)
!10476 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !10469, file: !10283, line: 1021, type: !118)
!10477 = !DILocation(line: 0, scope: !10469)
!10478 = !DILocation(line: 1029, column: 30, scope: !10479)
!10479 = distinct !DILexicalBlock(scope: !10480, file: !10283, line: 1028, column: 3)
!10480 = distinct !DILexicalBlock(scope: !10469, file: !10283, line: 1023, column: 7)
!10481 = !DILocation(line: 1029, column: 19, scope: !10479)
!10482 = !DILocation(line: 1029, column: 13, scope: !10479)
!10483 = !DILocation(line: 1029, column: 17, scope: !10479)
!10484 = !DILocation(line: 1031, column: 1, scope: !10469)
!10485 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !10283, file: !10283, line: 949, type: !10461, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10486)
!10486 = !{!10487, !10488}
!10487 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10485, file: !10283, line: 949, type: !1476)
!10488 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !10485, file: !10283, line: 949, type: !118)
!10489 = !DILocation(line: 0, scope: !10485)
!10490 = !DILocation(line: 951, column: 3, scope: !10485)
!10491 = !DILocation(line: 952, column: 1, scope: !10485)
!10492 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !10283, file: !10283, line: 588, type: !10461, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10493)
!10493 = !{!10494, !10495}
!10494 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10492, file: !10283, line: 588, type: !1476)
!10495 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10492, file: !10283, line: 588, type: !118)
!10496 = !DILocation(line: 0, scope: !10492)
!10497 = !DILocation(line: 590, column: 3, scope: !10492)
!10498 = !DILocation(line: 591, column: 1, scope: !10492)
!10499 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !10283, file: !10283, line: 805, type: !10461, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10500)
!10500 = !{!10501, !10502}
!10501 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10499, file: !10283, line: 805, type: !1476)
!10502 = !DILocalVariable(name: "StopBits", arg: 2, scope: !10499, file: !10283, line: 805, type: !118)
!10503 = !DILocation(line: 0, scope: !10499)
!10504 = !DILocation(line: 807, column: 3, scope: !10499)
!10505 = !DILocation(line: 808, column: 1, scope: !10499)
!10506 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !10283, file: !10283, line: 532, type: !10461, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10507)
!10507 = !{!10508, !10509}
!10508 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10506, file: !10283, line: 532, type: !1476)
!10509 = !DILocalVariable(name: "Parity", arg: 2, scope: !10506, file: !10283, line: 532, type: !118)
!10510 = !DILocation(line: 0, scope: !10506)
!10511 = !DILocation(line: 534, column: 3, scope: !10506)
!10512 = !DILocation(line: 535, column: 1, scope: !10506)
!10513 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !10283, file: !10283, line: 1770, type: !10284, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10514)
!10514 = !{!10515}
!10515 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10513, file: !10283, line: 1770, type: !1476)
!10516 = !DILocation(line: 0, scope: !10513)
!10517 = !DILocation(line: 1772, column: 11, scope: !10513)
!10518 = !DILocation(line: 1772, column: 46, scope: !10513)
!10519 = !DILocation(line: 1772, column: 3, scope: !10513)
!10520 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !10283, file: !10283, line: 1737, type: !10284, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10521)
!10521 = !{!10522}
!10522 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10520, file: !10283, line: 1737, type: !1476)
!10523 = !DILocation(line: 0, scope: !10520)
!10524 = !DILocation(line: 1739, column: 11, scope: !10520)
!10525 = !DILocation(line: 1739, column: 3, scope: !10520)
!10526 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !10283, file: !10283, line: 1748, type: !10284, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10527)
!10527 = !{!10528}
!10528 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10526, file: !10283, line: 1748, type: !1476)
!10529 = !DILocation(line: 0, scope: !10526)
!10530 = !DILocation(line: 1750, column: 11, scope: !10526)
!10531 = !DILocation(line: 1750, column: 45, scope: !10526)
!10532 = !DILocation(line: 1750, column: 3, scope: !10526)
!10533 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !10283, file: !10283, line: 1827, type: !10284, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10534)
!10534 = !{!10535}
!10535 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10533, file: !10283, line: 1827, type: !1476)
!10536 = !DILocation(line: 0, scope: !10533)
!10537 = !DILocation(line: 1829, column: 11, scope: !10533)
!10538 = !DILocation(line: 1829, column: 46, scope: !10533)
!10539 = !DILocation(line: 1829, column: 3, scope: !10533)
!10540 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !10283, file: !10283, line: 1992, type: !10346, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10541)
!10541 = !{!10542}
!10542 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10540, file: !10283, line: 1992, type: !1476)
!10543 = !DILocation(line: 0, scope: !10540)
!10544 = !DILocation(line: 1994, column: 3, scope: !10540)
!10545 = !DILocation(line: 1995, column: 1, scope: !10540)
!10546 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !10283, file: !10283, line: 1934, type: !10346, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10547)
!10547 = !{!10548, !10549}
!10548 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10546, file: !10283, line: 1934, type: !1476)
!10549 = !DILocalVariable(name: "tmpreg", scope: !10546, file: !10283, line: 1936, type: !314)
!10550 = !DILocation(line: 0, scope: !10546)
!10551 = !DILocation(line: 1936, column: 3, scope: !10546)
!10552 = !DILocation(line: 1936, column: 17, scope: !10546)
!10553 = !DILocation(line: 1937, column: 20, scope: !10546)
!10554 = !DILocation(line: 1937, column: 10, scope: !10546)
!10555 = !DILocation(line: 1938, column: 10, scope: !10546)
!10556 = !DILocation(line: 1939, column: 20, scope: !10546)
!10557 = !DILocation(line: 1939, column: 10, scope: !10546)
!10558 = !DILocation(line: 1940, column: 10, scope: !10546)
!10559 = !DILocation(line: 1941, column: 1, scope: !10546)
!10560 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !10283, file: !10283, line: 1877, type: !10346, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10561)
!10561 = !{!10562, !10563}
!10562 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10560, file: !10283, line: 1877, type: !1476)
!10563 = !DILocalVariable(name: "tmpreg", scope: !10560, file: !10283, line: 1879, type: !314)
!10564 = !DILocation(line: 0, scope: !10560)
!10565 = !DILocation(line: 1879, column: 3, scope: !10560)
!10566 = !DILocation(line: 1879, column: 17, scope: !10560)
!10567 = !DILocation(line: 1880, column: 20, scope: !10560)
!10568 = !DILocation(line: 1880, column: 10, scope: !10560)
!10569 = !DILocation(line: 1881, column: 10, scope: !10560)
!10570 = !DILocation(line: 1882, column: 20, scope: !10560)
!10571 = !DILocation(line: 1882, column: 10, scope: !10560)
!10572 = !DILocation(line: 1883, column: 10, scope: !10560)
!10573 = !DILocation(line: 1884, column: 1, scope: !10560)
!10574 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !10283, file: !10283, line: 1896, type: !10346, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10575)
!10575 = !{!10576, !10577}
!10576 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10574, file: !10283, line: 1896, type: !1476)
!10577 = !DILocalVariable(name: "tmpreg", scope: !10574, file: !10283, line: 1898, type: !314)
!10578 = !DILocation(line: 0, scope: !10574)
!10579 = !DILocation(line: 1898, column: 3, scope: !10574)
!10580 = !DILocation(line: 1898, column: 17, scope: !10574)
!10581 = !DILocation(line: 1899, column: 20, scope: !10574)
!10582 = !DILocation(line: 1899, column: 10, scope: !10574)
!10583 = !DILocation(line: 1900, column: 10, scope: !10574)
!10584 = !DILocation(line: 1901, column: 20, scope: !10574)
!10585 = !DILocation(line: 1901, column: 10, scope: !10574)
!10586 = !DILocation(line: 1902, column: 10, scope: !10574)
!10587 = !DILocation(line: 1903, column: 1, scope: !10574)
!10588 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !10283, file: !10283, line: 1915, type: !10346, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10589)
!10589 = !{!10590, !10591}
!10590 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10588, file: !10283, line: 1915, type: !1476)
!10591 = !DILocalVariable(name: "tmpreg", scope: !10588, file: !10283, line: 1917, type: !314)
!10592 = !DILocation(line: 0, scope: !10588)
!10593 = !DILocation(line: 1917, column: 3, scope: !10588)
!10594 = !DILocation(line: 1917, column: 17, scope: !10588)
!10595 = !DILocation(line: 1918, column: 20, scope: !10588)
!10596 = !DILocation(line: 1918, column: 10, scope: !10588)
!10597 = !DILocation(line: 1919, column: 10, scope: !10588)
!10598 = !DILocation(line: 1920, column: 20, scope: !10588)
!10599 = !DILocation(line: 1920, column: 10, scope: !10588)
!10600 = !DILocation(line: 1921, column: 10, scope: !10588)
!10601 = !DILocation(line: 1922, column: 1, scope: !10588)
!10602 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !10283, file: !10283, line: 1814, type: !10284, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10603)
!10603 = !{!10604}
!10604 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10602, file: !10283, line: 1814, type: !1476)
!10605 = !DILocation(line: 0, scope: !10602)
!10606 = !DILocation(line: 1816, column: 11, scope: !10602)
!10607 = !DILocation(line: 1816, column: 46, scope: !10602)
!10608 = !DILocation(line: 1816, column: 3, scope: !10602)
!10609 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !10283, file: !10283, line: 2426, type: !10610, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10612)
!10610 = !DISubroutineType(types: !10611)
!10611 = !{null, !1476, !185}
!10612 = !{!10613, !10614}
!10613 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10609, file: !10283, line: 2426, type: !1476)
!10614 = !DILocalVariable(name: "Value", arg: 2, scope: !10609, file: !10283, line: 2426, type: !185)
!10615 = !DILocation(line: 0, scope: !10609)
!10616 = !DILocation(line: 2428, column: 16, scope: !10609)
!10617 = !DILocation(line: 2428, column: 11, scope: !10609)
!10618 = !DILocation(line: 2428, column: 14, scope: !10609)
!10619 = !DILocation(line: 2429, column: 1, scope: !10609)
!10620 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !10283, file: !10283, line: 1792, type: !10284, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10621)
!10621 = !{!10622}
!10622 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10620, file: !10283, line: 1792, type: !1476)
!10623 = !DILocation(line: 0, scope: !10620)
!10624 = !DILocation(line: 1794, column: 11, scope: !10620)
!10625 = !DILocation(line: 1794, column: 47, scope: !10620)
!10626 = !DILocation(line: 1794, column: 3, scope: !10620)
!10627 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !10283, file: !10283, line: 2403, type: !10628, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10630)
!10628 = !DISubroutineType(types: !10629)
!10629 = !{!185, !1476}
!10630 = !{!10631}
!10631 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10627, file: !10283, line: 2403, type: !1476)
!10632 = !DILocation(line: 0, scope: !10627)
!10633 = !DILocation(line: 2405, column: 20, scope: !10627)
!10634 = !DILocation(line: 2405, column: 10, scope: !10627)
!10635 = !DILocation(line: 2405, column: 3, scope: !10627)
!10636 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1530, file: !1530, line: 1583, type: !1456, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10637)
!10637 = !{!10638, !10639, !10640, !10641, !10642, !10643}
!10638 = !DILocalVariable(name: "dev", arg: 1, scope: !10636, file: !1530, line: 1583, type: !1435)
!10639 = !DILocalVariable(name: "config", scope: !10636, file: !1530, line: 1585, type: !9974)
!10640 = !DILocalVariable(name: "data", scope: !10636, file: !1530, line: 1586, type: !10097)
!10641 = !DILocalVariable(name: "ll_parity", scope: !10636, file: !1530, line: 1587, type: !118)
!10642 = !DILocalVariable(name: "ll_datawidth", scope: !10636, file: !1530, line: 1588, type: !118)
!10643 = !DILocalVariable(name: "err", scope: !10636, file: !1530, line: 1589, type: !119)
!10644 = !DILocation(line: 0, scope: !10636)
!10645 = !DILocation(line: 1585, column: 48, scope: !10636)
!10646 = !DILocation(line: 1586, column: 38, scope: !10636)
!10647 = !DILocation(line: 1591, column: 2, scope: !10636)
!10648 = !DILocation(line: 1593, column: 29, scope: !10649)
!10649 = distinct !DILexicalBlock(scope: !10636, file: !1530, line: 1593, column: 6)
!10650 = !DILocation(line: 1593, column: 7, scope: !10649)
!10651 = !DILocation(line: 1593, column: 6, scope: !10636)
!10652 = !DILocation(line: 1594, column: 3, scope: !10653)
!10653 = distinct !DILexicalBlock(scope: !10654, file: !1530, line: 1594, column: 3)
!10654 = distinct !DILexicalBlock(scope: !10655, file: !1530, line: 1594, column: 3)
!10655 = distinct !DILexicalBlock(scope: !10656, file: !1530, line: 1594, column: 3)
!10656 = distinct !DILexicalBlock(scope: !10657, file: !1530, line: 1594, column: 3)
!10657 = distinct !DILexicalBlock(scope: !10649, file: !1530, line: 1593, column: 37)
!10658 = !DILocation(line: 1595, column: 3, scope: !10657)
!10659 = !DILocation(line: 1599, column: 31, scope: !10636)
!10660 = !DILocation(line: 1599, column: 71, scope: !10636)
!10661 = !DILocation(line: 1599, column: 8, scope: !10636)
!10662 = !DILocation(line: 1600, column: 10, scope: !10663)
!10663 = distinct !DILexicalBlock(scope: !10636, file: !1530, line: 1600, column: 6)
!10664 = !DILocation(line: 1600, column: 6, scope: !10636)
!10665 = !DILocation(line: 1601, column: 3, scope: !10666)
!10666 = distinct !DILexicalBlock(scope: !10667, file: !1530, line: 1601, column: 3)
!10667 = distinct !DILexicalBlock(scope: !10668, file: !1530, line: 1601, column: 3)
!10668 = distinct !DILexicalBlock(scope: !10669, file: !1530, line: 1601, column: 3)
!10669 = distinct !DILexicalBlock(scope: !10670, file: !1530, line: 1601, column: 3)
!10670 = distinct !DILexicalBlock(scope: !10663, file: !1530, line: 1600, column: 16)
!10671 = !DILocation(line: 1602, column: 3, scope: !10670)
!10672 = !DILocation(line: 1616, column: 36, scope: !10636)
!10673 = !DILocation(line: 1616, column: 8, scope: !10636)
!10674 = !DILocation(line: 1617, column: 10, scope: !10675)
!10675 = distinct !DILexicalBlock(scope: !10636, file: !1530, line: 1617, column: 6)
!10676 = !DILocation(line: 1617, column: 6, scope: !10636)
!10677 = !DILocation(line: 1621, column: 27, scope: !10636)
!10678 = !DILocation(line: 1621, column: 2, scope: !10636)
!10679 = !DILocation(line: 1624, column: 40, scope: !10636)
!10680 = !DILocation(line: 1624, column: 2, scope: !10636)
!10681 = !DILocation(line: 1630, column: 14, scope: !10682)
!10682 = distinct !DILexicalBlock(scope: !10636, file: !1530, line: 1630, column: 6)
!10683 = !DILocation(line: 1630, column: 6, scope: !10636)
!10684 = !DILocation(line: 1640, column: 4, scope: !10685)
!10685 = distinct !DILexicalBlock(scope: !10686, file: !1530, line: 1640, column: 4)
!10686 = distinct !DILexicalBlock(scope: !10687, file: !1530, line: 1640, column: 4)
!10687 = distinct !DILexicalBlock(scope: !10688, file: !1530, line: 1640, column: 4)
!10688 = distinct !DILexicalBlock(scope: !10689, file: !1530, line: 1640, column: 4)
!10689 = distinct !DILexicalBlock(scope: !10690, file: !1530, line: 1639, column: 28)
!10690 = distinct !DILexicalBlock(scope: !10691, file: !1530, line: 1639, column: 7)
!10691 = distinct !DILexicalBlock(scope: !10692, file: !1530, line: 1638, column: 9)
!10692 = distinct !DILexicalBlock(scope: !10682, file: !1530, line: 1634, column: 13)
!10693 = !DILocation(line: 0, scope: !10682)
!10694 = !DILocation(line: 1649, column: 35, scope: !10636)
!10695 = !DILocation(line: 1649, column: 2, scope: !10636)
!10696 = !DILocation(line: 1654, column: 14, scope: !10697)
!10697 = distinct !DILexicalBlock(scope: !10636, file: !1530, line: 1654, column: 6)
!10698 = !DILocation(line: 1654, column: 6, scope: !10636)
!10699 = !DILocation(line: 1655, column: 3, scope: !10700)
!10700 = distinct !DILexicalBlock(scope: !10697, file: !1530, line: 1654, column: 31)
!10701 = !DILocation(line: 1656, column: 2, scope: !10700)
!10702 = !DILocation(line: 1659, column: 37, scope: !10636)
!10703 = !DILocation(line: 1659, column: 2, scope: !10636)
!10704 = !DILocation(line: 1662, column: 14, scope: !10705)
!10705 = distinct !DILexicalBlock(scope: !10636, file: !1530, line: 1662, column: 6)
!10706 = !DILocation(line: 1662, column: 6, scope: !10636)
!10707 = !DILocation(line: 1663, column: 37, scope: !10708)
!10708 = distinct !DILexicalBlock(scope: !10705, file: !1530, line: 1662, column: 27)
!10709 = !DILocation(line: 1663, column: 3, scope: !10708)
!10710 = !DILocation(line: 1664, column: 2, scope: !10708)
!10711 = !DILocation(line: 1684, column: 26, scope: !10636)
!10712 = !DILocation(line: 1684, column: 2, scope: !10636)
!10713 = !DILocation(line: 1722, column: 2, scope: !10636)
!10714 = !DILocation(line: 1724, column: 1, scope: !10636)
!10715 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1530, file: !1530, line: 651, type: !10716, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10718)
!10716 = !DISubroutineType(types: !10717)
!10717 = !{null, !1435}
!10718 = !{!10719, !10720, !10721}
!10719 = !DILocalVariable(name: "dev", arg: 1, scope: !10715, file: !1530, line: 651, type: !1435)
!10720 = !DILocalVariable(name: "data", scope: !10715, file: !1530, line: 653, type: !10097)
!10721 = !DILocalVariable(name: "clk", scope: !10715, file: !1530, line: 654, type: !10722)
!10722 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1435)
!10723 = !DILocation(line: 0, scope: !10715)
!10724 = !DILocation(line: 653, column: 38, scope: !10715)
!10725 = !DILocation(line: 656, column: 8, scope: !10715)
!10726 = !DILocation(line: 656, column: 14, scope: !10715)
!10727 = !DILocation(line: 657, column: 1, scope: !10715)
!10728 = distinct !DISubprogram(name: "device_is_ready", scope: !9093, file: !9093, line: 47, type: !10729, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10731)
!10729 = !DISubroutineType(types: !10730)
!10730 = !{!345, !1435}
!10731 = !{!10732}
!10732 = !DILocalVariable(name: "dev", arg: 1, scope: !10728, file: !9093, line: 47, type: !1435)
!10733 = !DILocation(line: 0, scope: !10728)
!10734 = !DILocation(line: 55, column: 2, scope: !10735)
!10735 = distinct !DILexicalBlock(scope: !10728, file: !9093, line: 55, column: 2)
!10736 = !{i64 2155767022}
!10737 = !DILocation(line: 56, column: 9, scope: !10728)
!10738 = !DILocation(line: 56, column: 2, scope: !10728)
!10739 = distinct !DISubprogram(name: "clock_control_on", scope: !858, file: !858, line: 123, type: !1494, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10740)
!10740 = !{!10741, !10742, !10743}
!10741 = !DILocalVariable(name: "dev", arg: 1, scope: !10739, file: !858, line: 123, type: !1435)
!10742 = !DILocalVariable(name: "sys", arg: 2, scope: !10739, file: !858, line: 124, type: !952)
!10743 = !DILocalVariable(name: "api", scope: !10739, file: !858, line: 126, type: !1487)
!10744 = !DILocation(line: 0, scope: !10739)
!10745 = !DILocation(line: 127, column: 49, scope: !10739)
!10746 = !DILocation(line: 129, column: 14, scope: !10739)
!10747 = !DILocation(line: 129, column: 9, scope: !10739)
!10748 = !DILocation(line: 129, column: 2, scope: !10739)
!10749 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1602, file: !1602, line: 342, type: !10750, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10752)
!10750 = !DISubroutineType(types: !10751)
!10751 = !{!119, !1599, !185}
!10752 = !{!10753, !10754, !10755, !10756}
!10753 = !DILocalVariable(name: "config", arg: 1, scope: !10749, file: !1602, line: 342, type: !1599)
!10754 = !DILocalVariable(name: "id", arg: 2, scope: !10749, file: !1602, line: 343, type: !185)
!10755 = !DILocalVariable(name: "ret", scope: !10749, file: !1602, line: 345, type: !119)
!10756 = !DILocalVariable(name: "state", scope: !10749, file: !1602, line: 346, type: !1605)
!10757 = !DILocation(line: 0, scope: !10749)
!10758 = !DILocation(line: 346, column: 2, scope: !10749)
!10759 = !DILocation(line: 348, column: 8, scope: !10749)
!10760 = !DILocation(line: 349, column: 10, scope: !10761)
!10761 = distinct !DILexicalBlock(scope: !10749, file: !1602, line: 349, column: 6)
!10762 = !DILocation(line: 349, column: 6, scope: !10749)
!10763 = !DILocation(line: 353, column: 44, scope: !10749)
!10764 = !DILocation(line: 353, column: 9, scope: !10749)
!10765 = !DILocation(line: 353, column: 2, scope: !10749)
!10766 = !DILocation(line: 354, column: 1, scope: !10749)
!10767 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !10283, file: !10283, line: 497, type: !10461, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10768)
!10768 = !{!10769, !10770, !10771}
!10769 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10767, file: !10283, line: 497, type: !1476)
!10770 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !10767, file: !10283, line: 497, type: !118)
!10771 = !DILocalVariable(name: "val", scope: !10772, file: !10283, line: 499, type: !118)
!10772 = distinct !DILexicalBlock(scope: !10767, file: !10283, line: 499, column: 3)
!10773 = !DILocation(line: 0, scope: !10767)
!10774 = !DILocation(line: 499, column: 3, scope: !10772)
!10775 = !DILocalVariable(name: "addr", arg: 1, scope: !10776, file: !6452, line: 476, type: !1526)
!10776 = distinct !DISubprogram(name: "__LDREXW", scope: !6452, file: !6452, line: 476, type: !10777, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10779)
!10777 = !DISubroutineType(types: !10778)
!10778 = !{!118, !1526}
!10779 = !{!10775, !10780}
!10780 = !DILocalVariable(name: "result", scope: !10776, file: !6452, line: 478, type: !118)
!10781 = !DILocation(line: 0, scope: !10776, inlinedAt: !10782)
!10782 = distinct !DILocation(line: 499, column: 3, scope: !10783)
!10783 = distinct !DILexicalBlock(scope: !10772, file: !10283, line: 499, column: 3)
!10784 = !DILocation(line: 480, column: 4, scope: !10776, inlinedAt: !10782)
!10785 = !{i64 4146673}
!10786 = !DILocation(line: 499, column: 3, scope: !10783)
!10787 = !DILocation(line: 0, scope: !10772)
!10788 = !DILocalVariable(name: "value", arg: 1, scope: !10789, file: !6452, line: 527, type: !118)
!10789 = distinct !DISubprogram(name: "__STREXW", scope: !6452, file: !6452, line: 527, type: !10790, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10792)
!10790 = !DISubroutineType(types: !10791)
!10791 = !{!118, !118, !1526}
!10792 = !{!10788, !10793, !10794}
!10793 = !DILocalVariable(name: "addr", arg: 2, scope: !10789, file: !6452, line: 527, type: !1526)
!10794 = !DILocalVariable(name: "result", scope: !10789, file: !6452, line: 529, type: !118)
!10795 = !DILocation(line: 0, scope: !10789, inlinedAt: !10796)
!10796 = distinct !DILocation(line: 499, column: 3, scope: !10772)
!10797 = !DILocation(line: 531, column: 4, scope: !10789, inlinedAt: !10796)
!10798 = !{i64 4148109}
!10799 = distinct !{!10799, !10774, !10774}
!10800 = !DILocation(line: 500, column: 1, scope: !10767)
!10801 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !10283, file: !10283, line: 850, type: !10470, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10802)
!10802 = !{!10803, !10804, !10805, !10806}
!10803 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10801, file: !10283, line: 850, type: !1476)
!10804 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10801, file: !10283, line: 850, type: !118)
!10805 = !DILocalVariable(name: "Parity", arg: 3, scope: !10801, file: !10283, line: 850, type: !118)
!10806 = !DILocalVariable(name: "StopBits", arg: 4, scope: !10801, file: !10283, line: 851, type: !118)
!10807 = !DILocation(line: 0, scope: !10801)
!10808 = !DILocation(line: 853, column: 3, scope: !10801)
!10809 = !DILocation(line: 854, column: 3, scope: !10801)
!10810 = !DILocation(line: 855, column: 1, scope: !10801)
!10811 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !10283, file: !10283, line: 1337, type: !10346, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10812)
!10812 = !{!10813}
!10813 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10811, file: !10283, line: 1337, type: !1476)
!10814 = !DILocation(line: 0, scope: !10811)
!10815 = !DILocation(line: 1339, column: 3, scope: !10811)
!10816 = !DILocation(line: 1340, column: 1, scope: !10811)
!10817 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1602, file: !1602, line: 316, type: !10818, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10820)
!10818 = !DISubroutineType(types: !10819)
!10819 = !{!119, !1599, !1605}
!10820 = !{!10821, !10822, !10823}
!10821 = !DILocalVariable(name: "config", arg: 1, scope: !10817, file: !1602, line: 317, type: !1599)
!10822 = !DILocalVariable(name: "state", arg: 2, scope: !10817, file: !1602, line: 318, type: !1605)
!10823 = !DILocalVariable(name: "reg", scope: !10817, file: !1602, line: 320, type: !22)
!10824 = !DILocation(line: 0, scope: !10817)
!10825 = !DILocation(line: 329, column: 39, scope: !10817)
!10826 = !DILocation(line: 329, column: 52, scope: !10817)
!10827 = !DILocation(line: 329, column: 9, scope: !10817)
!10828 = !DILocation(line: 329, column: 2, scope: !10817)
!10829 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !334, file: !334, line: 730, type: !10729, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1391, retainedNodes: !10830)
!10830 = !{!10831}
!10831 = !DILocalVariable(name: "dev", arg: 1, scope: !10829, file: !334, line: 730, type: !1435)
!10832 = !DILocation(line: 0, scope: !10829)
!10833 = !DILocation(line: 732, column: 9, scope: !10829)
!10834 = !DILocation(line: 732, column: 2, scope: !10829)
!10835 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1773, file: !1773, line: 270, type: !1779, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1695, retainedNodes: !10836)
!10836 = !{!10837}
!10837 = !DILocalVariable(name: "dev", arg: 1, scope: !10835, file: !1773, line: 270, type: !1781)
!10838 = !DILocation(line: 0, scope: !10835)
!10839 = !DILocation(line: 274, column: 2, scope: !10835)
!10840 = !DILocation(line: 275, column: 12, scope: !10835)
!10841 = !DILocation(line: 276, column: 15, scope: !10835)
!10842 = !DILocation(line: 277, column: 16, scope: !10835)
!10843 = !DILocation(line: 278, column: 15, scope: !10835)
!10844 = !DILocation(line: 279, column: 16, scope: !10835)
!10845 = !DILocation(line: 282, column: 2, scope: !10835)
!10846 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !533, file: !533, line: 1814, type: !6492, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1695, retainedNodes: !10847)
!10847 = !{!10848, !10849}
!10848 = !DILocalVariable(name: "IRQn", arg: 1, scope: !10846, file: !533, line: 1814, type: !800)
!10849 = !DILocalVariable(name: "priority", arg: 2, scope: !10846, file: !533, line: 1814, type: !118)
!10850 = !DILocation(line: 0, scope: !10846)
!10851 = !DILocation(line: 1822, column: 46, scope: !10852)
!10852 = distinct !DILexicalBlock(scope: !10853, file: !533, line: 1821, column: 3)
!10853 = distinct !DILexicalBlock(scope: !10846, file: !533, line: 1816, column: 7)
!10854 = !DILocation(line: 1824, column: 1, scope: !10846)
!10855 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1773, file: !1773, line: 118, type: !6389, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1695, retainedNodes: !10856)
!10856 = !{!10857, !10858}
!10857 = !DILocalVariable(name: "arg", arg: 1, scope: !10855, file: !1773, line: 118, type: !113)
!10858 = !DILocalVariable(name: "dticks", scope: !10855, file: !1773, line: 121, type: !118)
!10859 = !DILocation(line: 0, scope: !10855)
!10860 = !DILocation(line: 124, column: 2, scope: !10855)
!10861 = !DILocation(line: 129, column: 17, scope: !10855)
!10862 = !DILocation(line: 129, column: 14, scope: !10855)
!10863 = !DILocation(line: 130, column: 15, scope: !10855)
!10864 = !DILocation(line: 145, column: 27, scope: !10865)
!10865 = distinct !DILexicalBlock(scope: !10866, file: !1773, line: 132, column: 16)
!10866 = distinct !DILexicalBlock(scope: !10855, file: !1773, line: 132, column: 6)
!10867 = !DILocation(line: 145, column: 25, scope: !10865)
!10868 = !DILocation(line: 145, column: 45, scope: !10865)
!10869 = !DILocation(line: 146, column: 30, scope: !10865)
!10870 = !DILocation(line: 146, column: 20, scope: !10865)
!10871 = !DILocation(line: 147, column: 3, scope: !10865)
!10872 = !DILocation(line: 151, column: 2, scope: !10855)
!10873 = !DILocation(line: 152, column: 1, scope: !10855)
!10874 = distinct !DISubprogram(name: "elapsed", scope: !1773, file: !1773, line: 85, type: !3336, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1695, retainedNodes: !10875)
!10875 = !{!10876, !10877, !10878}
!10876 = !DILocalVariable(name: "val1", scope: !10874, file: !1773, line: 87, type: !118)
!10877 = !DILocalVariable(name: "ctrl", scope: !10874, file: !1773, line: 88, type: !118)
!10878 = !DILocalVariable(name: "val2", scope: !10874, file: !1773, line: 89, type: !118)
!10879 = !DILocation(line: 87, column: 27, scope: !10874)
!10880 = !DILocation(line: 0, scope: !10874)
!10881 = !DILocation(line: 88, column: 27, scope: !10874)
!10882 = !DILocation(line: 89, column: 27, scope: !10874)
!10883 = !DILocation(line: 105, column: 12, scope: !10884)
!10884 = distinct !DILexicalBlock(scope: !10874, file: !1773, line: 105, column: 6)
!10885 = !DILocation(line: 106, column: 6, scope: !10884)
!10886 = !DILocation(line: 107, column: 16, scope: !10887)
!10887 = distinct !DILexicalBlock(scope: !10884, file: !1773, line: 106, column: 24)
!10888 = !DILocation(line: 111, column: 18, scope: !10887)
!10889 = !DILocation(line: 112, column: 2, scope: !10887)
!10890 = !DILocation(line: 114, column: 20, scope: !10874)
!10891 = !DILocation(line: 114, column: 30, scope: !10874)
!10892 = !DILocation(line: 114, column: 28, scope: !10874)
!10893 = !DILocation(line: 114, column: 2, scope: !10874)
!10894 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1773, file: !1773, line: 154, type: !10895, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1695, retainedNodes: !10897)
!10895 = !DISubroutineType(types: !10896)
!10896 = !{null, !774, !345}
!10897 = !{!10898, !10899, !10900, !10901, !10902, !10903, !10904, !10909, !10910}
!10898 = !DILocalVariable(name: "ticks", arg: 1, scope: !10894, file: !1773, line: 154, type: !774)
!10899 = !DILocalVariable(name: "idle", arg: 2, scope: !10894, file: !1773, line: 154, type: !345)
!10900 = !DILocalVariable(name: "delay", scope: !10894, file: !1773, line: 169, type: !118)
!10901 = !DILocalVariable(name: "val1", scope: !10894, file: !1773, line: 170, type: !118)
!10902 = !DILocalVariable(name: "val2", scope: !10894, file: !1773, line: 170, type: !118)
!10903 = !DILocalVariable(name: "last_load_", scope: !10894, file: !1773, line: 171, type: !118)
!10904 = !DILocalVariable(name: "key", scope: !10894, file: !1773, line: 176, type: !10905)
!10905 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !259, line: 106, baseType: !10906)
!10906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !259, line: 32, size: 32, elements: !10907)
!10907 = !{!10908}
!10908 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !10906, file: !259, line: 33, baseType: !119, size: 32)
!10909 = !DILocalVariable(name: "pending", scope: !10894, file: !1773, line: 178, type: !118)
!10910 = !DILocalVariable(name: "unannounced", scope: !10894, file: !1773, line: 185, type: !118)
!10911 = !DILocation(line: 0, scope: !10894)
!10912 = !DILocation(line: 162, column: 49, scope: !10913)
!10913 = distinct !DILexicalBlock(scope: !10894, file: !1773, line: 162, column: 6)
!10914 = !DILocation(line: 163, column: 17, scope: !10915)
!10915 = distinct !DILexicalBlock(scope: !10913, file: !1773, line: 162, column: 78)
!10916 = !DILocation(line: 164, column: 13, scope: !10915)
!10917 = !DILocation(line: 165, column: 3, scope: !10915)
!10918 = !DILocation(line: 171, column: 24, scope: !10894)
!10919 = !DILocation(line: 173, column: 10, scope: !10894)
!10920 = !DILocation(line: 174, column: 10, scope: !10894)
!10921 = !DILocalVariable(name: "l", arg: 1, scope: !10922, file: !259, line: 136, type: !10925)
!10922 = distinct !DISubprogram(name: "k_spin_lock", scope: !259, file: !259, line: 136, type: !10923, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1695, retainedNodes: !10926)
!10923 = !DISubroutineType(types: !10924)
!10924 = !{!10905, !10925}
!10925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1799, size: 32)
!10926 = !{!10921, !10927}
!10927 = !DILocalVariable(name: "k", scope: !10922, file: !259, line: 139, type: !10905)
!10928 = !DILocation(line: 0, scope: !10922, inlinedAt: !10929)
!10929 = distinct !DILocation(line: 176, column: 25, scope: !10894)
!10930 = !DILocation(line: 55, column: 2, scope: !10931, inlinedAt: !10935)
!10931 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6131, file: !6131, line: 42, type: !6132, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1695, retainedNodes: !10932)
!10932 = !{!10933, !10934}
!10933 = !DILocalVariable(name: "key", scope: !10931, file: !6131, line: 44, type: !32)
!10934 = !DILocalVariable(name: "tmp", scope: !10931, file: !6131, line: 53, type: !32)
!10935 = distinct !DILocation(line: 145, column: 10, scope: !10922, inlinedAt: !10929)
!10936 = !{i64 2604227}
!10937 = !DILocation(line: 0, scope: !10931, inlinedAt: !10935)
!10938 = !DILocation(line: 148, column: 2, scope: !10939, inlinedAt: !10929)
!10939 = distinct !DILexicalBlock(scope: !10940, file: !259, line: 148, column: 2)
!10940 = distinct !DILexicalBlock(scope: !10922, file: !259, line: 148, column: 2)
!10941 = !DILocation(line: 148, column: 2, scope: !10940, inlinedAt: !10929)
!10942 = !DILocation(line: 148, column: 2, scope: !10943, inlinedAt: !10929)
!10943 = distinct !DILexicalBlock(scope: !10939, file: !259, line: 148, column: 2)
!10944 = !DILocation(line: 160, column: 2, scope: !10922, inlinedAt: !10929)
!10945 = !DILocation(line: 178, column: 21, scope: !10894)
!10946 = !DILocation(line: 180, column: 18, scope: !10894)
!10947 = !DILocation(line: 182, column: 14, scope: !10894)
!10948 = !DILocation(line: 183, column: 15, scope: !10894)
!10949 = !DILocation(line: 185, column: 39, scope: !10894)
!10950 = !DILocation(line: 185, column: 37, scope: !10894)
!10951 = !DILocation(line: 187, column: 27, scope: !10952)
!10952 = distinct !DILexicalBlock(scope: !10894, file: !1773, line: 187, column: 6)
!10953 = !DILocation(line: 187, column: 6, scope: !10894)
!10954 = !DILocation(line: 202, column: 27, scope: !10955)
!10955 = distinct !DILexicalBlock(scope: !10952, file: !1773, line: 195, column: 9)
!10956 = !DILocation(line: 202, column: 48, scope: !10955)
!10957 = !DILocation(line: 203, column: 9, scope: !10955)
!10958 = !DILocation(line: 204, column: 11, scope: !10955)
!10959 = !DILocation(line: 205, column: 13, scope: !10960)
!10960 = distinct !DILexicalBlock(scope: !10955, file: !1773, line: 205, column: 7)
!10961 = !DILocation(line: 205, column: 7, scope: !10955)
!10962 = !DILocation(line: 0, scope: !10952)
!10963 = !DILocation(line: 212, column: 18, scope: !10894)
!10964 = !DILocation(line: 214, column: 28, scope: !10894)
!10965 = !DILocation(line: 214, column: 16, scope: !10894)
!10966 = !DILocation(line: 215, column: 15, scope: !10894)
!10967 = !DILocation(line: 227, column: 11, scope: !10968)
!10968 = distinct !DILexicalBlock(scope: !10894, file: !1773, line: 227, column: 6)
!10969 = !DILocation(line: 227, column: 6, scope: !10894)
!10970 = !DILocation(line: 228, column: 15, scope: !10971)
!10971 = distinct !DILexicalBlock(scope: !10968, file: !1773, line: 227, column: 19)
!10972 = !DILocation(line: 228, column: 38, scope: !10971)
!10973 = !DILocation(line: 228, column: 24, scope: !10971)
!10974 = !DILocation(line: 229, column: 2, scope: !10971)
!10975 = !DILocation(line: 230, column: 24, scope: !10976)
!10976 = distinct !DILexicalBlock(scope: !10968, file: !1773, line: 229, column: 9)
!10977 = !DILocation(line: 230, column: 15, scope: !10976)
!10978 = !DILocation(line: 0, scope: !10968)
!10979 = !DILocalVariable(name: "key", arg: 2, scope: !10980, file: !259, line: 190, type: !10905)
!10980 = distinct !DISubprogram(name: "k_spin_unlock", scope: !259, file: !259, line: 189, type: !10981, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1695, retainedNodes: !10983)
!10981 = !DISubroutineType(types: !10982)
!10982 = !{null, !10925, !10905}
!10983 = !{!10984, !10979}
!10984 = !DILocalVariable(name: "l", arg: 1, scope: !10980, file: !259, line: 189, type: !10925)
!10985 = !DILocation(line: 0, scope: !10980, inlinedAt: !10986)
!10986 = distinct !DILocation(line: 232, column: 2, scope: !10894)
!10987 = !DILocation(line: 194, column: 2, scope: !10988, inlinedAt: !10986)
!10988 = distinct !DILexicalBlock(scope: !10989, file: !259, line: 194, column: 2)
!10989 = distinct !DILexicalBlock(scope: !10980, file: !259, line: 194, column: 2)
!10990 = !DILocation(line: 194, column: 2, scope: !10989, inlinedAt: !10986)
!10991 = !DILocation(line: 194, column: 2, scope: !10992, inlinedAt: !10986)
!10992 = distinct !DILexicalBlock(scope: !10988, file: !259, line: 194, column: 2)
!10993 = !DILocalVariable(name: "key", arg: 1, scope: !10994, file: !6131, line: 84, type: !32)
!10994 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6131, file: !6131, line: 84, type: !6142, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1695, retainedNodes: !10995)
!10995 = !{!10993}
!10996 = !DILocation(line: 0, scope: !10994, inlinedAt: !10997)
!10997 = distinct !DILocation(line: 215, column: 2, scope: !10980, inlinedAt: !10986)
!10998 = !DILocation(line: 95, column: 2, scope: !10994, inlinedAt: !10997)
!10999 = !{i64 2605044}
!11000 = !DILocation(line: 234, column: 1, scope: !10894)
!11001 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1773, file: !1773, line: 236, type: !3336, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1695, retainedNodes: !11002)
!11002 = !{!11003, !11004}
!11003 = !DILocalVariable(name: "key", scope: !11001, file: !1773, line: 242, type: !10905)
!11004 = !DILocalVariable(name: "cyc", scope: !11001, file: !1773, line: 243, type: !118)
!11005 = !DILocation(line: 0, scope: !10922, inlinedAt: !11006)
!11006 = distinct !DILocation(line: 242, column: 25, scope: !11001)
!11007 = !DILocation(line: 55, column: 2, scope: !10931, inlinedAt: !11008)
!11008 = distinct !DILocation(line: 145, column: 10, scope: !10922, inlinedAt: !11006)
!11009 = !DILocation(line: 0, scope: !10931, inlinedAt: !11008)
!11010 = !DILocation(line: 148, column: 2, scope: !10939, inlinedAt: !11006)
!11011 = !DILocation(line: 148, column: 2, scope: !10940, inlinedAt: !11006)
!11012 = !DILocation(line: 148, column: 2, scope: !10943, inlinedAt: !11006)
!11013 = !DILocation(line: 160, column: 2, scope: !10922, inlinedAt: !11006)
!11014 = !DILocation(line: 0, scope: !11001)
!11015 = !DILocation(line: 243, column: 17, scope: !11001)
!11016 = !DILocation(line: 243, column: 29, scope: !11001)
!11017 = !DILocation(line: 243, column: 43, scope: !11001)
!11018 = !DILocation(line: 0, scope: !10980, inlinedAt: !11019)
!11019 = distinct !DILocation(line: 245, column: 2, scope: !11001)
!11020 = !DILocation(line: 194, column: 2, scope: !10988, inlinedAt: !11019)
!11021 = !DILocation(line: 194, column: 2, scope: !10989, inlinedAt: !11019)
!11022 = !DILocation(line: 194, column: 2, scope: !10992, inlinedAt: !11019)
!11023 = !DILocation(line: 243, column: 27, scope: !11001)
!11024 = !DILocation(line: 243, column: 41, scope: !11001)
!11025 = !DILocation(line: 0, scope: !10994, inlinedAt: !11026)
!11026 = distinct !DILocation(line: 215, column: 2, scope: !10980, inlinedAt: !11019)
!11027 = !DILocation(line: 95, column: 2, scope: !10994, inlinedAt: !11026)
!11028 = !DILocation(line: 246, column: 13, scope: !11001)
!11029 = !DILocation(line: 246, column: 2, scope: !11001)
!11030 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1773, file: !1773, line: 249, type: !3336, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1695, retainedNodes: !11031)
!11031 = !{!11032, !11033}
!11032 = !DILocalVariable(name: "key", scope: !11030, file: !1773, line: 251, type: !10905)
!11033 = !DILocalVariable(name: "ret", scope: !11030, file: !1773, line: 252, type: !118)
!11034 = !DILocation(line: 0, scope: !10922, inlinedAt: !11035)
!11035 = distinct !DILocation(line: 251, column: 25, scope: !11030)
!11036 = !DILocation(line: 55, column: 2, scope: !10931, inlinedAt: !11037)
!11037 = distinct !DILocation(line: 145, column: 10, scope: !10922, inlinedAt: !11035)
!11038 = !DILocation(line: 0, scope: !10931, inlinedAt: !11037)
!11039 = !DILocation(line: 148, column: 2, scope: !10939, inlinedAt: !11035)
!11040 = !DILocation(line: 148, column: 2, scope: !10940, inlinedAt: !11035)
!11041 = !DILocation(line: 148, column: 2, scope: !10943, inlinedAt: !11035)
!11042 = !DILocation(line: 160, column: 2, scope: !10922, inlinedAt: !11035)
!11043 = !DILocation(line: 0, scope: !11030)
!11044 = !DILocation(line: 252, column: 17, scope: !11030)
!11045 = !DILocation(line: 252, column: 29, scope: !11030)
!11046 = !DILocation(line: 0, scope: !10980, inlinedAt: !11047)
!11047 = distinct !DILocation(line: 254, column: 2, scope: !11030)
!11048 = !DILocation(line: 194, column: 2, scope: !10988, inlinedAt: !11047)
!11049 = !DILocation(line: 194, column: 2, scope: !10989, inlinedAt: !11047)
!11050 = !DILocation(line: 194, column: 2, scope: !10992, inlinedAt: !11047)
!11051 = !DILocation(line: 252, column: 27, scope: !11030)
!11052 = !DILocation(line: 0, scope: !10994, inlinedAt: !11053)
!11053 = distinct !DILocation(line: 215, column: 2, scope: !10980, inlinedAt: !11047)
!11054 = !DILocation(line: 95, column: 2, scope: !10994, inlinedAt: !11053)
!11055 = !DILocation(line: 255, column: 2, scope: !11030)
!11056 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1773, file: !1773, line: 258, type: !3098, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1695, retainedNodes: !2162)
!11057 = !DILocation(line: 260, column: 6, scope: !11058)
!11058 = distinct !DILexicalBlock(scope: !11056, file: !1773, line: 260, column: 6)
!11059 = !DILocation(line: 260, column: 16, scope: !11058)
!11060 = !DILocation(line: 260, column: 6, scope: !11056)
!11061 = !DILocation(line: 261, column: 17, scope: !11062)
!11062 = distinct !DILexicalBlock(scope: !11058, file: !1773, line: 260, column: 34)
!11063 = !DILocation(line: 262, column: 2, scope: !11062)
!11064 = !DILocation(line: 263, column: 1, scope: !11056)
!11065 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1773, file: !1773, line: 265, type: !3098, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1695, retainedNodes: !2162)
!11066 = !DILocation(line: 267, column: 16, scope: !11065)
!11067 = !DILocation(line: 268, column: 1, scope: !11065)
!11068 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !11069, file: !11069, line: 9, type: !11070, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2905, retainedNodes: !11093)
!11069 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11070 = !DISubroutineType(types: !11071)
!11071 = !{!119, !11072, !185, !11092}
!11072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11073, size: 32)
!11073 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11074)
!11074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1602, line: 60, size: 64, elements: !11075)
!11075 = !{!11076, !11091}
!11076 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !11074, file: !1602, line: 69, baseType: !11077, size: 32)
!11077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11078, size: 32)
!11078 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11079)
!11079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1602, line: 50, size: 64, elements: !11080)
!11080 = !{!11081, !11089, !11090}
!11081 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !11079, file: !1602, line: 52, baseType: !11082, size: 32)
!11082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11083, size: 32)
!11083 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11084)
!11084 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1613, line: 37, baseType: !11085)
!11085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1613, line: 32, size: 64, elements: !11086)
!11086 = !{!11087, !11088}
!11087 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11085, file: !1613, line: 34, baseType: !118, size: 32)
!11088 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !11085, file: !1613, line: 36, baseType: !118, size: 32, offset: 32)
!11089 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !11079, file: !1602, line: 54, baseType: !185, size: 8, offset: 32)
!11090 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !11079, file: !1602, line: 56, baseType: !185, size: 8, offset: 40)
!11091 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !11074, file: !1602, line: 71, baseType: !185, size: 8, offset: 32)
!11092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11077, size: 32)
!11093 = !{!11094, !11095, !11096}
!11094 = !DILocalVariable(name: "config", arg: 1, scope: !11068, file: !11069, line: 9, type: !11072)
!11095 = !DILocalVariable(name: "id", arg: 2, scope: !11068, file: !11069, line: 9, type: !185)
!11096 = !DILocalVariable(name: "state", arg: 3, scope: !11068, file: !11069, line: 10, type: !11092)
!11097 = !DILocation(line: 0, scope: !11068)
!11098 = !DILocation(line: 12, column: 20, scope: !11068)
!11099 = !DILocation(line: 13, column: 27, scope: !11068)
!11100 = !DILocation(line: 13, column: 42, scope: !11068)
!11101 = !DILocation(line: 13, column: 19, scope: !11068)
!11102 = !DILocation(line: 13, column: 16, scope: !11068)
!11103 = !DILocation(line: 13, column: 2, scope: !11068)
!11104 = distinct !{!11104, !11103, !11105}
!11105 = !DILocation(line: 19, column: 2, scope: !11068)
!11106 = !DILocation(line: 14, column: 23, scope: !11107)
!11107 = distinct !DILexicalBlock(scope: !11108, file: !11069, line: 14, column: 7)
!11108 = distinct !DILexicalBlock(scope: !11068, file: !11069, line: 13, column: 54)
!11109 = !DILocation(line: 14, column: 10, scope: !11107)
!11110 = !DILocation(line: 18, column: 11, scope: !11108)
!11111 = !DILocation(line: 14, column: 7, scope: !11108)
!11112 = !DILocation(line: 22, column: 1, scope: !11068)
!11113 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1892, file: !1892, line: 193, type: !11114, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1810, retainedNodes: !11123)
!11114 = !DISubroutineType(types: !11115)
!11115 = !{!119, !11116, !185, !22}
!11116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11117, size: 32)
!11117 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11118)
!11118 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1613, line: 37, baseType: !11119)
!11119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1613, line: 32, size: 64, elements: !11120)
!11120 = !{!11121, !11122}
!11121 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11119, file: !1613, line: 34, baseType: !118, size: 32)
!11122 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !11119, file: !1613, line: 36, baseType: !118, size: 32, offset: 32)
!11123 = !{!11124, !11125, !11126, !11127, !11128, !11129, !11130, !11131, !11133}
!11124 = !DILocalVariable(name: "pins", arg: 1, scope: !11113, file: !1892, line: 193, type: !11116)
!11125 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !11113, file: !1892, line: 193, type: !185)
!11126 = !DILocalVariable(name: "reg", arg: 3, scope: !11113, file: !1892, line: 194, type: !22)
!11127 = !DILocalVariable(name: "pin", scope: !11113, file: !1892, line: 196, type: !118)
!11128 = !DILocalVariable(name: "mux", scope: !11113, file: !1892, line: 196, type: !118)
!11129 = !DILocalVariable(name: "pin_cgf", scope: !11113, file: !1892, line: 197, type: !118)
!11130 = !DILocalVariable(name: "ret", scope: !11113, file: !1892, line: 198, type: !119)
!11131 = !DILocalVariable(name: "i", scope: !11132, file: !1892, line: 209, type: !185)
!11132 = distinct !DILexicalBlock(scope: !11113, file: !1892, line: 209, column: 2)
!11133 = !DILocalVariable(name: "gpio_out", scope: !11134, file: !1892, line: 239, type: !118)
!11134 = distinct !DILexicalBlock(scope: !11135, file: !1892, line: 238, column: 55)
!11135 = distinct !DILexicalBlock(scope: !11136, file: !1892, line: 238, column: 14)
!11136 = distinct !DILexicalBlock(scope: !11137, file: !1892, line: 236, column: 14)
!11137 = distinct !DILexicalBlock(scope: !11138, file: !1892, line: 234, column: 7)
!11138 = distinct !DILexicalBlock(scope: !11139, file: !1892, line: 209, column: 41)
!11139 = distinct !DILexicalBlock(scope: !11132, file: !1892, line: 209, column: 2)
!11140 = !DILocation(line: 0, scope: !11113)
!11141 = !DILocation(line: 0, scope: !11132)
!11142 = !DILocation(line: 209, column: 25, scope: !11139)
!11143 = !DILocation(line: 209, column: 2, scope: !11132)
!11144 = distinct !{!11144, !11143, !11145}
!11145 = !DILocation(line: 259, column: 2, scope: !11132)
!11146 = !DILocation(line: 210, column: 17, scope: !11138)
!11147 = !DILocation(line: 234, column: 7, scope: !11137)
!11148 = !DILocation(line: 234, column: 33, scope: !11137)
!11149 = !DILocation(line: 234, column: 7, scope: !11138)
!11150 = !DILocation(line: 235, column: 22, scope: !11151)
!11151 = distinct !DILexicalBlock(scope: !11137, file: !1892, line: 234, column: 49)
!11152 = !DILocation(line: 235, column: 29, scope: !11151)
!11153 = !DILocation(line: 236, column: 3, scope: !11151)
!11154 = !DILocation(line: 236, column: 14, scope: !11137)
!11155 = !DILocation(line: 239, column: 32, scope: !11134)
!11156 = !DILocation(line: 0, scope: !11134)
!11157 = !DILocation(line: 241, column: 8, scope: !11134)
!11158 = !DILocation(line: 246, column: 3, scope: !11134)
!11159 = !DILocation(line: 252, column: 9, scope: !11138)
!11160 = !DILocation(line: 255, column: 9, scope: !11138)
!11161 = !DILocation(line: 256, column: 11, scope: !11162)
!11162 = distinct !DILexicalBlock(scope: !11138, file: !1892, line: 256, column: 7)
!11163 = !DILocation(line: 209, column: 37, scope: !11139)
!11164 = !DILocation(line: 256, column: 7, scope: !11138)
!11165 = !DILocation(line: 262, column: 1, scope: !11113)
!11166 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1892, file: !1892, line: 176, type: !11167, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1810, retainedNodes: !11169)
!11167 = !DISubroutineType(types: !11168)
!11168 = !{!119, !118, !118, !118}
!11169 = !{!11170, !11171, !11172, !11173}
!11170 = !DILocalVariable(name: "pin", arg: 1, scope: !11166, file: !1892, line: 176, type: !118)
!11171 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !11166, file: !1892, line: 176, type: !118)
!11172 = !DILocalVariable(name: "pin_func", arg: 3, scope: !11166, file: !1892, line: 176, type: !118)
!11173 = !DILocalVariable(name: "port_device", scope: !11166, file: !1892, line: 178, type: !1822)
!11174 = !DILocation(line: 0, scope: !11166)
!11175 = !DILocation(line: 180, column: 22, scope: !11176)
!11176 = distinct !DILexicalBlock(scope: !11166, file: !1892, line: 180, column: 6)
!11177 = !DILocation(line: 180, column: 6, scope: !11166)
!11178 = !DILocation(line: 180, column: 6, scope: !11176)
!11179 = !DILocation(line: 184, column: 16, scope: !11166)
!11180 = !DILocation(line: 186, column: 33, scope: !11181)
!11181 = distinct !DILexicalBlock(scope: !11166, file: !1892, line: 186, column: 6)
!11182 = !DILocation(line: 186, column: 6, scope: !11166)
!11183 = !DILocation(line: 190, column: 43, scope: !11166)
!11184 = !DILocation(line: 190, column: 9, scope: !11166)
!11185 = !DILocation(line: 190, column: 2, scope: !11166)
!11186 = !DILocation(line: 191, column: 1, scope: !11166)
!11187 = distinct !DISubprogram(name: "device_is_ready", scope: !9093, file: !9093, line: 47, type: !11188, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1810, retainedNodes: !11190)
!11188 = !DISubroutineType(types: !11189)
!11189 = !{!345, !1822}
!11190 = !{!11191}
!11191 = !DILocalVariable(name: "dev", arg: 1, scope: !11187, file: !9093, line: 47, type: !1822)
!11192 = !DILocation(line: 0, scope: !11187)
!11193 = !DILocation(line: 55, column: 2, scope: !11194)
!11194 = distinct !DILexicalBlock(scope: !11187, file: !9093, line: 55, column: 2)
!11195 = !{i64 2149838233}
!11196 = !DILocation(line: 56, column: 9, scope: !11187)
!11197 = !DILocation(line: 56, column: 2, scope: !11187)
!11198 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !334, file: !334, line: 730, type: !11188, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1810, retainedNodes: !11199)
!11199 = !{!11200}
!11200 = !DILocalVariable(name: "dev", arg: 1, scope: !11198, file: !334, line: 730, type: !1822)
!11201 = !DILocation(line: 0, scope: !11198)
!11202 = !DILocation(line: 732, column: 9, scope: !11198)
!11203 = !DILocation(line: 732, column: 2, scope: !11198)
!11204 = distinct !DISubprogram(name: "SystemInit", scope: !1942, file: !1942, line: 167, type: !3098, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1900, retainedNodes: !2162)
!11205 = !DILocation(line: 182, column: 1, scope: !11204)
!11206 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1942, file: !1942, line: 220, type: !3098, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1900, retainedNodes: !11207)
!11207 = !{!11208, !11209, !11210, !11211, !11212}
!11208 = !DILocalVariable(name: "tmp", scope: !11206, file: !1942, line: 222, type: !118)
!11209 = !DILocalVariable(name: "pllvco", scope: !11206, file: !1942, line: 222, type: !118)
!11210 = !DILocalVariable(name: "pllp", scope: !11206, file: !1942, line: 222, type: !118)
!11211 = !DILocalVariable(name: "pllsource", scope: !11206, file: !1942, line: 222, type: !118)
!11212 = !DILocalVariable(name: "pllm", scope: !11206, file: !1942, line: 222, type: !118)
!11213 = !DILocation(line: 0, scope: !11206)
!11214 = !DILocation(line: 225, column: 14, scope: !11206)
!11215 = !DILocation(line: 225, column: 19, scope: !11206)
!11216 = !DILocation(line: 227, column: 3, scope: !11206)
!11217 = !DILocation(line: 234, column: 7, scope: !11218)
!11218 = distinct !DILexicalBlock(scope: !11206, file: !1942, line: 228, column: 3)
!11219 = !DILocation(line: 240, column: 25, scope: !11218)
!11220 = !DILocation(line: 241, column: 19, scope: !11218)
!11221 = !DILocation(line: 241, column: 27, scope: !11218)
!11222 = !DILocation(line: 243, column: 21, scope: !11223)
!11223 = distinct !DILexicalBlock(scope: !11218, file: !1942, line: 243, column: 11)
!11224 = !DILocation(line: 0, scope: !11223)
!11225 = !DILocation(line: 254, column: 22, scope: !11218)
!11226 = !DILocation(line: 254, column: 62, scope: !11218)
!11227 = !DILocation(line: 255, column: 31, scope: !11218)
!11228 = !DILocation(line: 256, column: 7, scope: !11218)
!11229 = !DILocation(line: 0, scope: !11218)
!11230 = !DILocation(line: 263, column: 30, scope: !11206)
!11231 = !DILocation(line: 263, column: 52, scope: !11206)
!11232 = !DILocation(line: 263, column: 9, scope: !11206)
!11233 = !DILocation(line: 265, column: 19, scope: !11206)
!11234 = !DILocation(line: 266, column: 1, scope: !11206)
!11235 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !11236, file: !11236, line: 200, type: !11237, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2907, retainedNodes: !2162)
!11236 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11237 = !DISubroutineType(types: !11238)
!11238 = !{!11239}
!11239 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2911, line: 44, baseType: !2910)
!11240 = !DILocation(line: 202, column: 3, scope: !11235)
!11241 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !11236, file: !11236, line: 219, type: !11242, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2907, retainedNodes: !11266)
!11242 = !DISubroutineType(types: !11243)
!11243 = !{!11239, !11244}
!11244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11245, size: 32)
!11245 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !11246, line: 70, baseType: !11247)
!11246 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11247 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11246, line: 49, size: 384, elements: !11248)
!11248 = !{!11249, !11250, !11251, !11252, !11253, !11254, !11255}
!11249 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !11247, file: !11246, line: 51, baseType: !118, size: 32)
!11250 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !11247, file: !11246, line: 54, baseType: !118, size: 32, offset: 32)
!11251 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !11247, file: !11246, line: 57, baseType: !118, size: 32, offset: 64)
!11252 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !11247, file: !11246, line: 60, baseType: !118, size: 32, offset: 96)
!11253 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !11247, file: !11246, line: 63, baseType: !118, size: 32, offset: 128)
!11254 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !11247, file: !11246, line: 66, baseType: !118, size: 32, offset: 160)
!11255 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !11247, file: !11246, line: 69, baseType: !11256, size: 192, offset: 192)
!11256 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !11257, line: 73, baseType: !11258)
!11257 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11258 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11257, line: 45, size: 192, elements: !11259)
!11259 = !{!11260, !11261, !11262, !11263, !11264, !11265}
!11260 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !11258, file: !11257, line: 47, baseType: !118, size: 32)
!11261 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !11258, file: !11257, line: 50, baseType: !118, size: 32, offset: 32)
!11262 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !11258, file: !11257, line: 53, baseType: !118, size: 32, offset: 64)
!11263 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !11258, file: !11257, line: 56, baseType: !118, size: 32, offset: 96)
!11264 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !11258, file: !11257, line: 60, baseType: !118, size: 32, offset: 128)
!11265 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !11258, file: !11257, line: 63, baseType: !118, size: 32, offset: 160)
!11266 = !{!11267, !11268, !11269, !11270, !11274}
!11267 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11241, file: !11236, line: 219, type: !11244)
!11268 = !DILocalVariable(name: "tickstart", scope: !11241, file: !11236, line: 221, type: !118)
!11269 = !DILocalVariable(name: "pll_config", scope: !11241, file: !11236, line: 221, type: !118)
!11270 = !DILocalVariable(name: "pwrclkchanged", scope: !11271, file: !11236, line: 391, type: !11273)
!11271 = distinct !DILexicalBlock(scope: !11272, file: !11236, line: 390, column: 3)
!11272 = distinct !DILexicalBlock(scope: !11241, file: !11236, line: 389, column: 6)
!11273 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !853, line: 188, baseType: !2917)
!11274 = !DILocalVariable(name: "tmpreg", scope: !11275, file: !11236, line: 400, type: !314)
!11275 = distinct !DILexicalBlock(scope: !11276, file: !11236, line: 400, column: 7)
!11276 = distinct !DILexicalBlock(scope: !11277, file: !11236, line: 399, column: 5)
!11277 = distinct !DILexicalBlock(scope: !11271, file: !11236, line: 398, column: 8)
!11278 = !DILocation(line: 0, scope: !11241)
!11279 = !DILocation(line: 224, column: 24, scope: !11280)
!11280 = distinct !DILexicalBlock(scope: !11241, file: !11236, line: 224, column: 6)
!11281 = !DILocation(line: 224, column: 6, scope: !11241)
!11282 = !DILocation(line: 232, column: 27, scope: !11283)
!11283 = distinct !DILexicalBlock(scope: !11241, file: !11236, line: 232, column: 6)
!11284 = !DILocation(line: 232, column: 43, scope: !11283)
!11285 = !DILocation(line: 232, column: 69, scope: !11283)
!11286 = !DILocation(line: 232, column: 6, scope: !11241)
!11287 = !DILocation(line: 237, column: 9, scope: !11288)
!11288 = distinct !DILexicalBlock(scope: !11289, file: !11236, line: 237, column: 8)
!11289 = distinct !DILexicalBlock(scope: !11283, file: !11236, line: 233, column: 3)
!11290 = !DILocation(line: 237, column: 39, scope: !11288)
!11291 = !DILocation(line: 237, column: 60, scope: !11288)
!11292 = !DILocation(line: 238, column: 9, scope: !11288)
!11293 = !DILocation(line: 238, column: 39, scope: !11288)
!11294 = !DILocation(line: 238, column: 60, scope: !11288)
!11295 = !DILocation(line: 238, column: 70, scope: !11288)
!11296 = !DILocation(line: 238, column: 78, scope: !11288)
!11297 = !DILocation(line: 238, column: 100, scope: !11288)
!11298 = !DILocation(line: 237, column: 8, scope: !11289)
!11299 = !DILocation(line: 240, column: 11, scope: !11300)
!11300 = distinct !DILexicalBlock(scope: !11301, file: !11236, line: 240, column: 10)
!11301 = distinct !DILexicalBlock(scope: !11288, file: !11236, line: 239, column: 5)
!11302 = !DILocation(line: 240, column: 57, scope: !11300)
!11303 = !DILocation(line: 240, column: 80, scope: !11300)
!11304 = !DILocation(line: 240, column: 89, scope: !11300)
!11305 = !DILocation(line: 240, column: 10, scope: !11301)
!11306 = !DILocation(line: 248, column: 7, scope: !11307)
!11307 = distinct !DILexicalBlock(scope: !11308, file: !11236, line: 248, column: 7)
!11308 = distinct !DILexicalBlock(scope: !11309, file: !11236, line: 248, column: 7)
!11309 = distinct !DILexicalBlock(scope: !11288, file: !11236, line: 246, column: 5)
!11310 = !DILocation(line: 248, column: 7, scope: !11308)
!11311 = !DILocation(line: 248, column: 7, scope: !11312)
!11312 = distinct !DILexicalBlock(scope: !11307, file: !11236, line: 248, column: 7)
!11313 = !DILocation(line: 248, column: 7, scope: !11314)
!11314 = distinct !DILexicalBlock(scope: !11315, file: !11236, line: 248, column: 7)
!11315 = distinct !DILexicalBlock(scope: !11307, file: !11236, line: 248, column: 7)
!11316 = !DILocation(line: 248, column: 7, scope: !11317)
!11317 = distinct !DILexicalBlock(scope: !11315, file: !11236, line: 248, column: 7)
!11318 = !DILocation(line: 0, scope: !11307)
!11319 = !DILocation(line: 251, column: 30, scope: !11320)
!11320 = distinct !DILexicalBlock(scope: !11309, file: !11236, line: 251, column: 10)
!11321 = !DILocation(line: 251, column: 40, scope: !11320)
!11322 = !DILocation(line: 0, scope: !11320)
!11323 = !DILocation(line: 251, column: 10, scope: !11309)
!11324 = !DILocation(line: 257, column: 15, scope: !11325)
!11325 = distinct !DILexicalBlock(scope: !11320, file: !11236, line: 252, column: 7)
!11326 = !DILocation(line: 257, column: 51, scope: !11325)
!11327 = !DILocation(line: 257, column: 9, scope: !11325)
!11328 = !DILocation(line: 259, column: 15, scope: !11329)
!11329 = distinct !DILexicalBlock(scope: !11330, file: !11236, line: 259, column: 14)
!11330 = distinct !DILexicalBlock(scope: !11325, file: !11236, line: 258, column: 9)
!11331 = !DILocation(line: 259, column: 29, scope: !11329)
!11332 = !DILocation(line: 259, column: 43, scope: !11329)
!11333 = !DILocation(line: 259, column: 14, scope: !11330)
!11334 = distinct !{!11334, !11327, !11335}
!11335 = !DILocation(line: 263, column: 9, scope: !11325)
!11336 = !DILocation(line: 271, column: 15, scope: !11337)
!11337 = distinct !DILexicalBlock(scope: !11320, file: !11236, line: 266, column: 7)
!11338 = !DILocation(line: 271, column: 9, scope: !11337)
!11339 = !DILocation(line: 273, column: 15, scope: !11340)
!11340 = distinct !DILexicalBlock(scope: !11341, file: !11236, line: 273, column: 14)
!11341 = distinct !DILexicalBlock(scope: !11337, file: !11236, line: 272, column: 9)
!11342 = !DILocation(line: 273, column: 29, scope: !11340)
!11343 = !DILocation(line: 273, column: 43, scope: !11340)
!11344 = !DILocation(line: 273, column: 14, scope: !11341)
!11345 = distinct !{!11345, !11338, !11346}
!11346 = !DILocation(line: 277, column: 9, scope: !11337)
!11347 = !DILocation(line: 282, column: 27, scope: !11348)
!11348 = distinct !DILexicalBlock(scope: !11241, file: !11236, line: 282, column: 6)
!11349 = !DILocation(line: 282, column: 43, scope: !11348)
!11350 = !DILocation(line: 282, column: 69, scope: !11348)
!11351 = !DILocation(line: 282, column: 6, scope: !11241)
!11352 = !DILocation(line: 289, column: 9, scope: !11353)
!11353 = distinct !DILexicalBlock(scope: !11354, file: !11236, line: 289, column: 8)
!11354 = distinct !DILexicalBlock(scope: !11348, file: !11236, line: 283, column: 3)
!11355 = !DILocation(line: 289, column: 39, scope: !11353)
!11356 = !DILocation(line: 289, column: 60, scope: !11353)
!11357 = !DILocation(line: 290, column: 9, scope: !11353)
!11358 = !DILocation(line: 290, column: 39, scope: !11353)
!11359 = !DILocation(line: 290, column: 60, scope: !11353)
!11360 = !DILocation(line: 290, column: 70, scope: !11353)
!11361 = !DILocation(line: 290, column: 78, scope: !11353)
!11362 = !DILocation(line: 290, column: 100, scope: !11353)
!11363 = !DILocation(line: 289, column: 8, scope: !11354)
!11364 = !DILocation(line: 293, column: 11, scope: !11365)
!11365 = distinct !DILexicalBlock(scope: !11366, file: !11236, line: 293, column: 10)
!11366 = distinct !DILexicalBlock(scope: !11353, file: !11236, line: 291, column: 5)
!11367 = !DILocation(line: 293, column: 57, scope: !11365)
!11368 = !DILocation(line: 293, column: 80, scope: !11365)
!11369 = !DILocation(line: 293, column: 89, scope: !11365)
!11370 = !DILocation(line: 293, column: 10, scope: !11366)
!11371 = !DILocation(line: 307, column: 30, scope: !11372)
!11372 = distinct !DILexicalBlock(scope: !11373, file: !11236, line: 307, column: 10)
!11373 = distinct !DILexicalBlock(scope: !11353, file: !11236, line: 305, column: 5)
!11374 = !DILocation(line: 307, column: 39, scope: !11372)
!11375 = !DILocation(line: 307, column: 10, scope: !11373)
!11376 = !DILocation(line: 310, column: 9, scope: !11377)
!11377 = distinct !DILexicalBlock(scope: !11372, file: !11236, line: 308, column: 7)
!11378 = !DILocation(line: 313, column: 21, scope: !11377)
!11379 = !DILocation(line: 316, column: 9, scope: !11377)
!11380 = !DILocation(line: 316, column: 15, scope: !11377)
!11381 = !DILocation(line: 316, column: 51, scope: !11377)
!11382 = !DILocation(line: 318, column: 15, scope: !11383)
!11383 = distinct !DILexicalBlock(scope: !11384, file: !11236, line: 318, column: 14)
!11384 = distinct !DILexicalBlock(scope: !11377, file: !11236, line: 317, column: 9)
!11385 = !DILocation(line: 318, column: 29, scope: !11383)
!11386 = !DILocation(line: 318, column: 43, scope: !11383)
!11387 = !DILocation(line: 318, column: 14, scope: !11384)
!11388 = distinct !{!11388, !11379, !11389}
!11389 = !DILocation(line: 322, column: 9, scope: !11377)
!11390 = !DILocation(line: 330, column: 9, scope: !11391)
!11391 = distinct !DILexicalBlock(scope: !11372, file: !11236, line: 328, column: 7)
!11392 = !DILocation(line: 333, column: 21, scope: !11391)
!11393 = !DILocation(line: 336, column: 9, scope: !11391)
!11394 = !DILocation(line: 336, column: 15, scope: !11391)
!11395 = !DILocation(line: 338, column: 15, scope: !11396)
!11396 = distinct !DILexicalBlock(scope: !11397, file: !11236, line: 338, column: 14)
!11397 = distinct !DILexicalBlock(scope: !11391, file: !11236, line: 337, column: 9)
!11398 = !DILocation(line: 338, column: 29, scope: !11396)
!11399 = !DILocation(line: 338, column: 43, scope: !11396)
!11400 = !DILocation(line: 338, column: 14, scope: !11397)
!11401 = distinct !{!11401, !11393, !11402}
!11402 = !DILocation(line: 342, column: 9, scope: !11391)
!11403 = !DILocation(line: 0, scope: !11353)
!11404 = !DILocation(line: 347, column: 27, scope: !11405)
!11405 = distinct !DILexicalBlock(scope: !11241, file: !11236, line: 347, column: 6)
!11406 = !DILocation(line: 347, column: 43, scope: !11405)
!11407 = !DILocation(line: 347, column: 69, scope: !11405)
!11408 = !DILocation(line: 347, column: 6, scope: !11241)
!11409 = !DILocation(line: 353, column: 28, scope: !11410)
!11410 = distinct !DILexicalBlock(scope: !11411, file: !11236, line: 353, column: 8)
!11411 = distinct !DILexicalBlock(scope: !11405, file: !11236, line: 348, column: 3)
!11412 = !DILocation(line: 353, column: 37, scope: !11410)
!11413 = !DILocation(line: 353, column: 8, scope: !11411)
!11414 = !DILocation(line: 356, column: 7, scope: !11415)
!11415 = distinct !DILexicalBlock(scope: !11410, file: !11236, line: 354, column: 5)
!11416 = !DILocation(line: 359, column: 19, scope: !11415)
!11417 = !DILocation(line: 362, column: 7, scope: !11415)
!11418 = !DILocation(line: 362, column: 13, scope: !11415)
!11419 = !DILocation(line: 362, column: 49, scope: !11415)
!11420 = !DILocation(line: 364, column: 13, scope: !11421)
!11421 = distinct !DILexicalBlock(scope: !11422, file: !11236, line: 364, column: 12)
!11422 = distinct !DILexicalBlock(scope: !11415, file: !11236, line: 363, column: 7)
!11423 = !DILocation(line: 364, column: 27, scope: !11421)
!11424 = !DILocation(line: 364, column: 41, scope: !11421)
!11425 = !DILocation(line: 364, column: 12, scope: !11422)
!11426 = distinct !{!11426, !11417, !11427}
!11427 = !DILocation(line: 368, column: 7, scope: !11415)
!11428 = !DILocation(line: 373, column: 7, scope: !11429)
!11429 = distinct !DILexicalBlock(scope: !11410, file: !11236, line: 371, column: 5)
!11430 = !DILocation(line: 376, column: 19, scope: !11429)
!11431 = !DILocation(line: 379, column: 7, scope: !11429)
!11432 = !DILocation(line: 379, column: 13, scope: !11429)
!11433 = !DILocation(line: 381, column: 13, scope: !11434)
!11434 = distinct !DILexicalBlock(scope: !11435, file: !11236, line: 381, column: 12)
!11435 = distinct !DILexicalBlock(scope: !11429, file: !11236, line: 380, column: 7)
!11436 = !DILocation(line: 381, column: 27, scope: !11434)
!11437 = !DILocation(line: 381, column: 41, scope: !11434)
!11438 = !DILocation(line: 381, column: 12, scope: !11435)
!11439 = distinct !{!11439, !11431, !11440}
!11440 = !DILocation(line: 385, column: 7, scope: !11429)
!11441 = !DILocation(line: 389, column: 27, scope: !11272)
!11442 = !DILocation(line: 389, column: 43, scope: !11272)
!11443 = !DILocation(line: 389, column: 69, scope: !11272)
!11444 = !DILocation(line: 389, column: 6, scope: !11241)
!11445 = !DILocation(line: 0, scope: !11271)
!11446 = !DILocation(line: 398, column: 8, scope: !11277)
!11447 = !DILocation(line: 398, column: 8, scope: !11271)
!11448 = !DILocation(line: 400, column: 7, scope: !11275)
!11449 = !DILocation(line: 400, column: 7, scope: !11276)
!11450 = !DILocation(line: 402, column: 5, scope: !11276)
!11451 = !DILocation(line: 404, column: 8, scope: !11452)
!11452 = distinct !DILexicalBlock(scope: !11271, file: !11236, line: 404, column: 8)
!11453 = !DILocation(line: 404, column: 8, scope: !11271)
!11454 = !DILocation(line: 407, column: 7, scope: !11455)
!11455 = distinct !DILexicalBlock(scope: !11452, file: !11236, line: 405, column: 5)
!11456 = !DILocation(line: 410, column: 19, scope: !11455)
!11457 = !DILocation(line: 412, column: 7, scope: !11455)
!11458 = !DILocation(line: 412, column: 13, scope: !11455)
!11459 = !DILocation(line: 414, column: 13, scope: !11460)
!11460 = distinct !DILexicalBlock(scope: !11461, file: !11236, line: 414, column: 12)
!11461 = distinct !DILexicalBlock(scope: !11455, file: !11236, line: 413, column: 7)
!11462 = !DILocation(line: 414, column: 27, scope: !11460)
!11463 = !DILocation(line: 414, column: 40, scope: !11460)
!11464 = !DILocation(line: 414, column: 12, scope: !11461)
!11465 = distinct !{!11465, !11457, !11466}
!11466 = !DILocation(line: 418, column: 7, scope: !11455)
!11467 = !DILocation(line: 422, column: 5, scope: !11468)
!11468 = distinct !DILexicalBlock(scope: !11469, file: !11236, line: 422, column: 5)
!11469 = distinct !DILexicalBlock(scope: !11271, file: !11236, line: 422, column: 5)
!11470 = !DILocation(line: 422, column: 5, scope: !11469)
!11471 = !DILocation(line: 422, column: 5, scope: !11472)
!11472 = distinct !DILexicalBlock(scope: !11468, file: !11236, line: 422, column: 5)
!11473 = !DILocation(line: 422, column: 5, scope: !11474)
!11474 = distinct !DILexicalBlock(scope: !11475, file: !11236, line: 422, column: 5)
!11475 = distinct !DILexicalBlock(scope: !11468, file: !11236, line: 422, column: 5)
!11476 = !DILocation(line: 422, column: 5, scope: !11477)
!11477 = distinct !DILexicalBlock(scope: !11475, file: !11236, line: 422, column: 5)
!11478 = !DILocation(line: 0, scope: !11468)
!11479 = !DILocation(line: 424, column: 28, scope: !11480)
!11480 = distinct !DILexicalBlock(scope: !11271, file: !11236, line: 424, column: 8)
!11481 = !DILocation(line: 424, column: 38, scope: !11480)
!11482 = !DILocation(line: 0, scope: !11480)
!11483 = !DILocation(line: 424, column: 8, scope: !11271)
!11484 = !DILocation(line: 430, column: 13, scope: !11485)
!11485 = distinct !DILexicalBlock(scope: !11480, file: !11236, line: 425, column: 5)
!11486 = !DILocation(line: 430, column: 49, scope: !11485)
!11487 = !DILocation(line: 430, column: 7, scope: !11485)
!11488 = !DILocation(line: 432, column: 13, scope: !11489)
!11489 = distinct !DILexicalBlock(scope: !11490, file: !11236, line: 432, column: 12)
!11490 = distinct !DILexicalBlock(scope: !11485, file: !11236, line: 431, column: 7)
!11491 = !DILocation(line: 432, column: 27, scope: !11489)
!11492 = !DILocation(line: 432, column: 41, scope: !11489)
!11493 = !DILocation(line: 432, column: 12, scope: !11490)
!11494 = distinct !{!11494, !11487, !11495}
!11495 = !DILocation(line: 436, column: 7, scope: !11485)
!11496 = !DILocation(line: 444, column: 13, scope: !11497)
!11497 = distinct !DILexicalBlock(scope: !11480, file: !11236, line: 439, column: 5)
!11498 = !DILocation(line: 444, column: 7, scope: !11497)
!11499 = !DILocation(line: 446, column: 13, scope: !11500)
!11500 = distinct !DILexicalBlock(scope: !11501, file: !11236, line: 446, column: 12)
!11501 = distinct !DILexicalBlock(scope: !11497, file: !11236, line: 445, column: 7)
!11502 = !DILocation(line: 446, column: 27, scope: !11500)
!11503 = !DILocation(line: 446, column: 41, scope: !11500)
!11504 = !DILocation(line: 446, column: 12, scope: !11501)
!11505 = distinct !{!11505, !11498, !11506}
!11506 = !DILocation(line: 450, column: 7, scope: !11497)
!11507 = !DILocation(line: 454, column: 8, scope: !11271)
!11508 = !DILocation(line: 456, column: 7, scope: !11509)
!11509 = distinct !DILexicalBlock(scope: !11510, file: !11236, line: 455, column: 5)
!11510 = distinct !DILexicalBlock(scope: !11271, file: !11236, line: 454, column: 8)
!11511 = !DILocation(line: 457, column: 5, scope: !11509)
!11512 = !DILocation(line: 462, column: 31, scope: !11513)
!11513 = distinct !DILexicalBlock(scope: !11241, file: !11236, line: 462, column: 7)
!11514 = !DILocation(line: 462, column: 41, scope: !11513)
!11515 = !DILocation(line: 462, column: 7, scope: !11241)
!11516 = !DILocation(line: 465, column: 8, scope: !11517)
!11517 = distinct !DILexicalBlock(scope: !11518, file: !11236, line: 465, column: 8)
!11518 = distinct !DILexicalBlock(scope: !11513, file: !11236, line: 463, column: 3)
!11519 = !DILocation(line: 465, column: 38, scope: !11517)
!11520 = !DILocation(line: 465, column: 8, scope: !11518)
!11521 = !DILocation(line: 467, column: 44, scope: !11522)
!11522 = distinct !DILexicalBlock(scope: !11523, file: !11236, line: 467, column: 10)
!11523 = distinct !DILexicalBlock(scope: !11517, file: !11236, line: 466, column: 5)
!11524 = !DILocation(line: 0, scope: !11522)
!11525 = !DILocation(line: 467, column: 10, scope: !11523)
!11526 = !DILocation(line: 483, column: 15, scope: !11527)
!11527 = distinct !DILexicalBlock(scope: !11522, file: !11236, line: 468, column: 7)
!11528 = !DILocation(line: 483, column: 9, scope: !11527)
!11529 = !DILocation(line: 485, column: 15, scope: !11530)
!11530 = distinct !DILexicalBlock(scope: !11531, file: !11236, line: 485, column: 14)
!11531 = distinct !DILexicalBlock(scope: !11527, file: !11236, line: 484, column: 9)
!11532 = !DILocation(line: 485, column: 29, scope: !11530)
!11533 = !DILocation(line: 485, column: 43, scope: !11530)
!11534 = !DILocation(line: 485, column: 14, scope: !11531)
!11535 = distinct !{!11535, !11528, !11536}
!11536 = !DILocation(line: 489, column: 9, scope: !11527)
!11537 = !DILocation(line: 492, column: 9, scope: !11527)
!11538 = !DILocation(line: 498, column: 9, scope: !11527)
!11539 = !DILocation(line: 501, column: 21, scope: !11527)
!11540 = !DILocation(line: 504, column: 9, scope: !11527)
!11541 = !DILocation(line: 504, column: 15, scope: !11527)
!11542 = !DILocation(line: 504, column: 51, scope: !11527)
!11543 = !DILocation(line: 506, column: 15, scope: !11544)
!11544 = distinct !DILexicalBlock(scope: !11545, file: !11236, line: 506, column: 14)
!11545 = distinct !DILexicalBlock(scope: !11527, file: !11236, line: 505, column: 9)
!11546 = !DILocation(line: 506, column: 29, scope: !11544)
!11547 = !DILocation(line: 506, column: 43, scope: !11544)
!11548 = !DILocation(line: 506, column: 14, scope: !11545)
!11549 = distinct !{!11549, !11540, !11550}
!11550 = !DILocation(line: 510, column: 9, scope: !11527)
!11551 = !DILocation(line: 521, column: 15, scope: !11552)
!11552 = distinct !DILexicalBlock(scope: !11522, file: !11236, line: 513, column: 7)
!11553 = !DILocation(line: 521, column: 9, scope: !11552)
!11554 = !DILocation(line: 523, column: 15, scope: !11555)
!11555 = distinct !DILexicalBlock(scope: !11556, file: !11236, line: 523, column: 14)
!11556 = distinct !DILexicalBlock(scope: !11552, file: !11236, line: 522, column: 9)
!11557 = !DILocation(line: 523, column: 29, scope: !11555)
!11558 = !DILocation(line: 523, column: 43, scope: !11555)
!11559 = !DILocation(line: 523, column: 14, scope: !11556)
!11560 = distinct !{!11560, !11553, !11561}
!11561 = !DILocation(line: 527, column: 9, scope: !11552)
!11562 = !DILocation(line: 533, column: 44, scope: !11563)
!11563 = distinct !DILexicalBlock(scope: !11564, file: !11236, line: 533, column: 10)
!11564 = distinct !DILexicalBlock(scope: !11517, file: !11236, line: 531, column: 5)
!11565 = !DILocation(line: 533, column: 10, scope: !11564)
!11566 = !DILocation(line: 540, column: 27, scope: !11567)
!11567 = distinct !DILexicalBlock(scope: !11563, file: !11236, line: 538, column: 7)
!11568 = !DILocation(line: 551, column: 14, scope: !11569)
!11569 = distinct !DILexicalBlock(scope: !11567, file: !11236, line: 550, column: 13)
!11570 = !DILocation(line: 551, column: 81, scope: !11569)
!11571 = !DILocation(line: 551, column: 55, scope: !11569)
!11572 = !DILocation(line: 551, column: 92, scope: !11569)
!11573 = !DILocation(line: 552, column: 14, scope: !11569)
!11574 = !DILocation(line: 552, column: 80, scope: !11569)
!11575 = !DILocation(line: 552, column: 53, scope: !11569)
!11576 = !DILocation(line: 552, column: 111, scope: !11569)
!11577 = !DILocation(line: 553, column: 14, scope: !11569)
!11578 = !DILocation(line: 553, column: 80, scope: !11569)
!11579 = !DILocation(line: 553, column: 86, scope: !11569)
!11580 = !DILocation(line: 553, column: 53, scope: !11569)
!11581 = !DILocation(line: 553, column: 111, scope: !11569)
!11582 = !DILocation(line: 554, column: 14, scope: !11569)
!11583 = !DILocation(line: 554, column: 82, scope: !11569)
!11584 = !DILocation(line: 554, column: 101, scope: !11569)
!11585 = !DILocation(line: 554, column: 53, scope: !11569)
!11586 = !DILocation(line: 554, column: 126, scope: !11569)
!11587 = !DILocation(line: 555, column: 14, scope: !11569)
!11588 = !DILocation(line: 555, column: 80, scope: !11569)
!11589 = !DILocation(line: 555, column: 85, scope: !11569)
!11590 = !DILocation(line: 555, column: 53, scope: !11569)
!11591 = !DILocation(line: 550, column: 13, scope: !11567)
!11592 = !DILocation(line: 563, column: 3, scope: !11241)
!11593 = !DILocation(line: 564, column: 1, scope: !11241)
!11594 = !DISubprogram(name: "HAL_GetTick", scope: !11595, file: !11595, line: 234, type: !3336, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2162)
!11595 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11596 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !11236, file: !11236, line: 591, type: !11597, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2907, retainedNodes: !11608)
!11597 = !DISubroutineType(types: !11598)
!11598 = !{!11239, !11599, !118}
!11599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11600, size: 32)
!11600 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !11246, line: 92, baseType: !11601)
!11601 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11246, line: 75, size: 160, elements: !11602)
!11602 = !{!11603, !11604, !11605, !11606, !11607}
!11603 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !11601, file: !11246, line: 77, baseType: !118, size: 32)
!11604 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !11601, file: !11246, line: 80, baseType: !118, size: 32, offset: 32)
!11605 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !11601, file: !11246, line: 83, baseType: !118, size: 32, offset: 64)
!11606 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !11601, file: !11246, line: 86, baseType: !118, size: 32, offset: 96)
!11607 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !11601, file: !11246, line: 89, baseType: !118, size: 32, offset: 128)
!11608 = !{!11609, !11610, !11611}
!11609 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11596, file: !11236, line: 591, type: !11599)
!11610 = !DILocalVariable(name: "FLatency", arg: 2, scope: !11596, file: !11236, line: 591, type: !118)
!11611 = !DILocalVariable(name: "tickstart", scope: !11596, file: !11236, line: 593, type: !118)
!11612 = !DILocation(line: 0, scope: !11596)
!11613 = !DILocation(line: 596, column: 24, scope: !11614)
!11614 = distinct !DILexicalBlock(scope: !11596, file: !11236, line: 596, column: 6)
!11615 = !DILocation(line: 596, column: 6, scope: !11596)
!11616 = !DILocation(line: 610, column: 17, scope: !11617)
!11617 = distinct !DILexicalBlock(scope: !11596, file: !11236, line: 610, column: 6)
!11618 = !DILocation(line: 610, column: 15, scope: !11617)
!11619 = !DILocation(line: 610, column: 6, scope: !11596)
!11620 = !DILocation(line: 613, column: 5, scope: !11621)
!11621 = distinct !DILexicalBlock(scope: !11617, file: !11236, line: 611, column: 3)
!11622 = !DILocation(line: 617, column: 8, scope: !11623)
!11623 = distinct !DILexicalBlock(scope: !11621, file: !11236, line: 617, column: 8)
!11624 = !DILocation(line: 617, column: 34, scope: !11623)
!11625 = !DILocation(line: 617, column: 8, scope: !11621)
!11626 = !DILocation(line: 624, column: 27, scope: !11627)
!11627 = distinct !DILexicalBlock(scope: !11596, file: !11236, line: 624, column: 6)
!11628 = !DILocation(line: 624, column: 38, scope: !11627)
!11629 = !DILocation(line: 624, column: 60, scope: !11627)
!11630 = !DILocation(line: 624, column: 6, scope: !11596)
!11631 = !DILocation(line: 628, column: 40, scope: !11632)
!11632 = distinct !DILexicalBlock(scope: !11633, file: !11236, line: 628, column: 8)
!11633 = distinct !DILexicalBlock(scope: !11627, file: !11236, line: 625, column: 3)
!11634 = !DILocation(line: 628, column: 63, scope: !11632)
!11635 = !DILocation(line: 628, column: 8, scope: !11633)
!11636 = !DILocation(line: 630, column: 7, scope: !11637)
!11637 = distinct !DILexicalBlock(scope: !11632, file: !11236, line: 629, column: 5)
!11638 = !DILocation(line: 633, column: 29, scope: !11639)
!11639 = distinct !DILexicalBlock(scope: !11633, file: !11236, line: 633, column: 8)
!11640 = !DILocation(line: 631, column: 5, scope: !11637)
!11641 = !DILocation(line: 633, column: 40, scope: !11639)
!11642 = !DILocation(line: 633, column: 63, scope: !11639)
!11643 = !DILocation(line: 633, column: 8, scope: !11633)
!11644 = !DILocation(line: 635, column: 7, scope: !11645)
!11645 = distinct !DILexicalBlock(scope: !11639, file: !11236, line: 634, column: 5)
!11646 = !DILocation(line: 636, column: 5, scope: !11645)
!11647 = !DILocation(line: 639, column: 5, scope: !11633)
!11648 = !DILocation(line: 643, column: 27, scope: !11649)
!11649 = distinct !DILexicalBlock(scope: !11596, file: !11236, line: 643, column: 6)
!11650 = !DILocation(line: 640, column: 3, scope: !11633)
!11651 = !DILocation(line: 643, column: 38, scope: !11649)
!11652 = !DILocation(line: 643, column: 62, scope: !11649)
!11653 = !DILocation(line: 643, column: 6, scope: !11596)
!11654 = !DILocation(line: 648, column: 27, scope: !11655)
!11655 = distinct !DILexicalBlock(scope: !11656, file: !11236, line: 648, column: 8)
!11656 = distinct !DILexicalBlock(scope: !11649, file: !11236, line: 644, column: 3)
!11657 = !DILocation(line: 648, column: 8, scope: !11656)
!11658 = !DILocation(line: 651, column: 10, scope: !11659)
!11659 = distinct !DILexicalBlock(scope: !11660, file: !11236, line: 651, column: 10)
!11660 = distinct !DILexicalBlock(scope: !11655, file: !11236, line: 649, column: 5)
!11661 = !DILocation(line: 651, column: 46, scope: !11659)
!11662 = !DILocation(line: 651, column: 10, scope: !11660)
!11663 = !DILocation(line: 661, column: 10, scope: !11664)
!11664 = distinct !DILexicalBlock(scope: !11665, file: !11236, line: 661, column: 10)
!11665 = distinct !DILexicalBlock(scope: !11666, file: !11236, line: 659, column: 5)
!11666 = distinct !DILexicalBlock(scope: !11655, file: !11236, line: 657, column: 13)
!11667 = !DILocation(line: 661, column: 46, scope: !11664)
!11668 = !DILocation(line: 661, column: 10, scope: !11665)
!11669 = !DILocation(line: 670, column: 10, scope: !11670)
!11670 = distinct !DILexicalBlock(scope: !11671, file: !11236, line: 670, column: 10)
!11671 = distinct !DILexicalBlock(scope: !11666, file: !11236, line: 668, column: 5)
!11672 = !DILocation(line: 670, column: 46, scope: !11670)
!11673 = !DILocation(line: 670, column: 10, scope: !11671)
!11674 = !DILocation(line: 676, column: 5, scope: !11656)
!11675 = !DILocation(line: 679, column: 17, scope: !11656)
!11676 = !DILocation(line: 681, column: 5, scope: !11656)
!11677 = !DILocation(line: 681, column: 12, scope: !11656)
!11678 = !DILocation(line: 681, column: 65, scope: !11656)
!11679 = !DILocation(line: 681, column: 78, scope: !11656)
!11680 = !DILocation(line: 681, column: 42, scope: !11656)
!11681 = !DILocation(line: 683, column: 12, scope: !11682)
!11682 = distinct !DILexicalBlock(scope: !11683, file: !11236, line: 683, column: 11)
!11683 = distinct !DILexicalBlock(scope: !11656, file: !11236, line: 682, column: 5)
!11684 = !DILocation(line: 683, column: 26, scope: !11682)
!11685 = !DILocation(line: 683, column: 39, scope: !11682)
!11686 = !DILocation(line: 683, column: 11, scope: !11683)
!11687 = distinct !{!11687, !11676, !11688}
!11688 = !DILocation(line: 687, column: 5, scope: !11656)
!11689 = !DILocation(line: 691, column: 17, scope: !11690)
!11690 = distinct !DILexicalBlock(scope: !11596, file: !11236, line: 691, column: 6)
!11691 = !DILocation(line: 691, column: 15, scope: !11690)
!11692 = !DILocation(line: 691, column: 6, scope: !11596)
!11693 = !DILocation(line: 694, column: 5, scope: !11694)
!11694 = distinct !DILexicalBlock(scope: !11690, file: !11236, line: 692, column: 3)
!11695 = !DILocation(line: 698, column: 8, scope: !11696)
!11696 = distinct !DILexicalBlock(scope: !11694, file: !11236, line: 698, column: 8)
!11697 = !DILocation(line: 698, column: 34, scope: !11696)
!11698 = !DILocation(line: 698, column: 8, scope: !11694)
!11699 = !DILocation(line: 705, column: 27, scope: !11700)
!11700 = distinct !DILexicalBlock(scope: !11596, file: !11236, line: 705, column: 6)
!11701 = !DILocation(line: 705, column: 38, scope: !11700)
!11702 = !DILocation(line: 705, column: 61, scope: !11700)
!11703 = !DILocation(line: 705, column: 6, scope: !11596)
!11704 = !DILocation(line: 708, column: 5, scope: !11705)
!11705 = distinct !DILexicalBlock(scope: !11700, file: !11236, line: 706, column: 3)
!11706 = !DILocation(line: 712, column: 27, scope: !11707)
!11707 = distinct !DILexicalBlock(scope: !11596, file: !11236, line: 712, column: 6)
!11708 = !DILocation(line: 709, column: 3, scope: !11705)
!11709 = !DILocation(line: 712, column: 38, scope: !11707)
!11710 = !DILocation(line: 712, column: 61, scope: !11707)
!11711 = !DILocation(line: 712, column: 6, scope: !11596)
!11712 = !DILocation(line: 715, column: 5, scope: !11713)
!11713 = distinct !DILexicalBlock(scope: !11707, file: !11236, line: 713, column: 3)
!11714 = !DILocation(line: 716, column: 3, scope: !11713)
!11715 = !DILocation(line: 719, column: 21, scope: !11596)
!11716 = !DILocation(line: 719, column: 70, scope: !11596)
!11717 = !DILocation(line: 719, column: 91, scope: !11596)
!11718 = !DILocation(line: 719, column: 50, scope: !11596)
!11719 = !DILocation(line: 719, column: 47, scope: !11596)
!11720 = !DILocation(line: 719, column: 19, scope: !11596)
!11721 = !DILocation(line: 722, column: 17, scope: !11596)
!11722 = !DILocation(line: 722, column: 3, scope: !11596)
!11723 = !DILocation(line: 724, column: 3, scope: !11596)
!11724 = !DILocation(line: 725, column: 1, scope: !11596)
!11725 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !11236, file: !11236, line: 885, type: !3336, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2907, retainedNodes: !11726)
!11726 = !{!11727, !11728, !11729, !11730}
!11727 = !DILocalVariable(name: "pllm", scope: !11725, file: !11236, line: 887, type: !118)
!11728 = !DILocalVariable(name: "pllvco", scope: !11725, file: !11236, line: 887, type: !118)
!11729 = !DILocalVariable(name: "pllp", scope: !11725, file: !11236, line: 887, type: !118)
!11730 = !DILocalVariable(name: "sysclockfreq", scope: !11725, file: !11236, line: 888, type: !118)
!11731 = !DILocation(line: 0, scope: !11725)
!11732 = !DILocation(line: 891, column: 16, scope: !11725)
!11733 = !DILocation(line: 891, column: 21, scope: !11725)
!11734 = !DILocation(line: 891, column: 3, scope: !11725)
!11735 = !DILocation(line: 901, column: 7, scope: !11736)
!11736 = distinct !DILexicalBlock(scope: !11737, file: !11236, line: 899, column: 5)
!11737 = distinct !DILexicalBlock(scope: !11725, file: !11236, line: 892, column: 3)
!11738 = !DILocation(line: 907, column: 19, scope: !11739)
!11739 = distinct !DILexicalBlock(scope: !11737, file: !11236, line: 904, column: 5)
!11740 = !DILocation(line: 907, column: 27, scope: !11739)
!11741 = !DILocation(line: 908, column: 10, scope: !11742)
!11742 = distinct !DILexicalBlock(scope: !11739, file: !11236, line: 908, column: 10)
!11743 = !DILocation(line: 908, column: 40, scope: !11742)
!11744 = !DILocation(line: 0, scope: !11742)
!11745 = !DILocation(line: 918, column: 23, scope: !11739)
!11746 = !DILocation(line: 918, column: 82, scope: !11739)
!11747 = !DILocation(line: 920, column: 28, scope: !11739)
!11748 = !DILocation(line: 921, column: 7, scope: !11739)
!11749 = !DILocation(line: 0, scope: !11737)
!11750 = !DILocation(line: 929, column: 3, scope: !11725)
!11751 = !DISubprogram(name: "HAL_InitTick", scope: !11595, file: !11595, line: 223, type: !11752, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2162)
!11752 = !DISubroutineType(types: !11753)
!11753 = !{!11239, !118}
!11754 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !11236, file: !11236, line: 775, type: !11755, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2907, retainedNodes: !11757)
!11755 = !DISubroutineType(types: !11756)
!11756 = !{null, !118, !118, !118}
!11757 = !{!11758, !11759, !11760, !11761, !11771, !11775}
!11758 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !11754, file: !11236, line: 775, type: !118)
!11759 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !11754, file: !11236, line: 775, type: !118)
!11760 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !11754, file: !11236, line: 775, type: !118)
!11761 = !DILocalVariable(name: "GPIO_InitStruct", scope: !11754, file: !11236, line: 777, type: !11762)
!11762 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !11763, line: 62, baseType: !11764)
!11763 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11764 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11763, line: 46, size: 160, elements: !11765)
!11765 = !{!11766, !11767, !11768, !11769, !11770}
!11766 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !11764, file: !11763, line: 48, baseType: !118, size: 32)
!11767 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !11764, file: !11763, line: 51, baseType: !118, size: 32, offset: 32)
!11768 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !11764, file: !11763, line: 54, baseType: !118, size: 32, offset: 64)
!11769 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !11764, file: !11763, line: 57, baseType: !118, size: 32, offset: 96)
!11770 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !11764, file: !11763, line: 60, baseType: !118, size: 32, offset: 128)
!11771 = !DILocalVariable(name: "tmpreg", scope: !11772, file: !11236, line: 787, type: !314)
!11772 = distinct !DILexicalBlock(scope: !11773, file: !11236, line: 787, column: 5)
!11773 = distinct !DILexicalBlock(scope: !11774, file: !11236, line: 783, column: 3)
!11774 = distinct !DILexicalBlock(scope: !11754, file: !11236, line: 782, column: 6)
!11775 = !DILocalVariable(name: "tmpreg", scope: !11776, file: !11236, line: 811, type: !314)
!11776 = distinct !DILexicalBlock(scope: !11777, file: !11236, line: 811, column: 5)
!11777 = distinct !DILexicalBlock(scope: !11774, file: !11236, line: 807, column: 3)
!11778 = !DILocation(line: 0, scope: !11754)
!11779 = !DILocation(line: 777, column: 3, scope: !11754)
!11780 = !DILocation(line: 777, column: 20, scope: !11754)
!11781 = !DILocation(line: 782, column: 15, scope: !11774)
!11782 = !DILocation(line: 782, column: 6, scope: !11754)
!11783 = !DILocation(line: 787, column: 5, scope: !11772)
!11784 = !DILocation(line: 787, column: 5, scope: !11773)
!11785 = !DILocation(line: 790, column: 21, scope: !11773)
!11786 = !DILocation(line: 790, column: 25, scope: !11773)
!11787 = !DILocation(line: 791, column: 21, scope: !11773)
!11788 = !DILocation(line: 791, column: 26, scope: !11773)
!11789 = !DILocation(line: 792, column: 21, scope: !11773)
!11790 = !DILocation(line: 792, column: 27, scope: !11773)
!11791 = !DILocation(line: 793, column: 21, scope: !11773)
!11792 = !DILocation(line: 793, column: 26, scope: !11773)
!11793 = !DILocation(line: 794, column: 21, scope: !11773)
!11794 = !DILocation(line: 794, column: 31, scope: !11773)
!11795 = !DILocation(line: 795, column: 5, scope: !11773)
!11796 = !DILocation(line: 798, column: 5, scope: !11773)
!11797 = !DILocation(line: 804, column: 3, scope: !11773)
!11798 = !DILocation(line: 811, column: 5, scope: !11776)
!11799 = !DILocation(line: 811, column: 5, scope: !11777)
!11800 = !DILocation(line: 814, column: 21, scope: !11777)
!11801 = !DILocation(line: 814, column: 25, scope: !11777)
!11802 = !DILocation(line: 815, column: 21, scope: !11777)
!11803 = !DILocation(line: 815, column: 26, scope: !11777)
!11804 = !DILocation(line: 816, column: 21, scope: !11777)
!11805 = !DILocation(line: 816, column: 27, scope: !11777)
!11806 = !DILocation(line: 817, column: 21, scope: !11777)
!11807 = !DILocation(line: 817, column: 26, scope: !11777)
!11808 = !DILocation(line: 818, column: 21, scope: !11777)
!11809 = !DILocation(line: 818, column: 31, scope: !11777)
!11810 = !DILocation(line: 819, column: 5, scope: !11777)
!11811 = !DILocation(line: 822, column: 5, scope: !11777)
!11812 = !DILocation(line: 0, scope: !11774)
!11813 = !DILocation(line: 830, column: 1, scope: !11754)
!11814 = !DISubprogram(name: "HAL_GPIO_Init", scope: !11763, file: !11763, line: 224, type: !11815, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2162)
!11815 = !DISubroutineType(types: !11816)
!11816 = !{null, !2980, !11817}
!11817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11762, size: 32)
!11818 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !11236, file: !11236, line: 841, type: !3098, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2907, retainedNodes: !2162)
!11819 = !DILocation(line: 843, column: 38, scope: !11818)
!11820 = !DILocation(line: 844, column: 1, scope: !11818)
!11821 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !11236, file: !11236, line: 850, type: !3098, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2907, retainedNodes: !2162)
!11822 = !DILocation(line: 852, column: 38, scope: !11821)
!11823 = !DILocation(line: 853, column: 1, scope: !11821)
!11824 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !11236, file: !11236, line: 941, type: !3336, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2907, retainedNodes: !2162)
!11825 = !DILocation(line: 943, column: 10, scope: !11824)
!11826 = !DILocation(line: 943, column: 3, scope: !11824)
!11827 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !11236, file: !11236, line: 952, type: !3336, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2907, retainedNodes: !2162)
!11828 = !DILocation(line: 955, column: 11, scope: !11827)
!11829 = !DILocation(line: 955, column: 56, scope: !11827)
!11830 = !DILocation(line: 955, column: 78, scope: !11827)
!11831 = !DILocation(line: 955, column: 36, scope: !11827)
!11832 = !DILocation(line: 955, column: 33, scope: !11827)
!11833 = !DILocation(line: 955, column: 3, scope: !11827)
!11834 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !11236, file: !11236, line: 964, type: !3336, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2907, retainedNodes: !2162)
!11835 = !DILocation(line: 967, column: 11, scope: !11834)
!11836 = !DILocation(line: 967, column: 55, scope: !11834)
!11837 = !DILocation(line: 967, column: 77, scope: !11834)
!11838 = !DILocation(line: 967, column: 35, scope: !11834)
!11839 = !DILocation(line: 967, column: 32, scope: !11834)
!11840 = !DILocation(line: 967, column: 3, scope: !11834)
!11841 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !11236, file: !11236, line: 977, type: !11842, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2907, retainedNodes: !11844)
!11842 = !DISubroutineType(types: !11843)
!11843 = !{null, !11244}
!11844 = !{!11845}
!11845 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11841, file: !11236, line: 977, type: !11244)
!11846 = !DILocation(line: 0, scope: !11841)
!11847 = !DILocation(line: 980, column: 22, scope: !11841)
!11848 = !DILocation(line: 980, column: 37, scope: !11841)
!11849 = !DILocation(line: 983, column: 12, scope: !11850)
!11850 = distinct !DILexicalBlock(scope: !11841, file: !11236, line: 983, column: 6)
!11851 = !DILocation(line: 983, column: 15, scope: !11850)
!11852 = !DILocation(line: 983, column: 31, scope: !11850)
!11853 = !DILocation(line: 983, column: 6, scope: !11841)
!11854 = !DILocation(line: 985, column: 24, scope: !11855)
!11855 = distinct !DILexicalBlock(scope: !11850, file: !11236, line: 984, column: 3)
!11856 = !DILocation(line: 985, column: 33, scope: !11855)
!11857 = !DILocation(line: 986, column: 3, scope: !11855)
!11858 = !DILocation(line: 987, column: 17, scope: !11859)
!11859 = distinct !DILexicalBlock(scope: !11850, file: !11236, line: 987, column: 11)
!11860 = !DILocation(line: 987, column: 20, scope: !11859)
!11861 = !DILocation(line: 987, column: 35, scope: !11859)
!11862 = !DILocation(line: 0, scope: !11859)
!11863 = !DILocation(line: 987, column: 11, scope: !11850)
!11864 = !DILocation(line: 989, column: 33, scope: !11865)
!11865 = distinct !DILexicalBlock(scope: !11859, file: !11236, line: 988, column: 3)
!11866 = !DILocation(line: 990, column: 3, scope: !11865)
!11867 = !DILocation(line: 993, column: 33, scope: !11868)
!11868 = distinct !DILexicalBlock(scope: !11859, file: !11236, line: 992, column: 3)
!11869 = !DILocation(line: 997, column: 12, scope: !11870)
!11870 = distinct !DILexicalBlock(scope: !11841, file: !11236, line: 997, column: 6)
!11871 = !DILocation(line: 997, column: 15, scope: !11870)
!11872 = !DILocation(line: 1003, column: 24, scope: !11873)
!11873 = distinct !DILexicalBlock(scope: !11870, file: !11236, line: 1002, column: 3)
!11874 = !DILocation(line: 1003, column: 33, scope: !11873)
!11875 = !DILocation(line: 1006, column: 61, scope: !11841)
!11876 = !DILocation(line: 1006, column: 81, scope: !11841)
!11877 = !DILocation(line: 1006, column: 22, scope: !11841)
!11878 = !DILocation(line: 1006, column: 42, scope: !11841)
!11879 = !DILocation(line: 1009, column: 12, scope: !11880)
!11880 = distinct !DILexicalBlock(scope: !11841, file: !11236, line: 1009, column: 6)
!11881 = !DILocation(line: 1009, column: 17, scope: !11880)
!11882 = !DILocation(line: 1009, column: 35, scope: !11880)
!11883 = !DILocation(line: 1009, column: 6, scope: !11841)
!11884 = !DILocation(line: 1011, column: 24, scope: !11885)
!11885 = distinct !DILexicalBlock(scope: !11880, file: !11236, line: 1010, column: 3)
!11886 = !DILocation(line: 1011, column: 33, scope: !11885)
!11887 = !DILocation(line: 1012, column: 3, scope: !11885)
!11888 = !DILocation(line: 1013, column: 17, scope: !11889)
!11889 = distinct !DILexicalBlock(scope: !11880, file: !11236, line: 1013, column: 11)
!11890 = !DILocation(line: 1013, column: 22, scope: !11889)
!11891 = !DILocation(line: 1013, column: 39, scope: !11889)
!11892 = !DILocation(line: 0, scope: !11889)
!11893 = !DILocation(line: 1013, column: 11, scope: !11880)
!11894 = !DILocation(line: 1015, column: 33, scope: !11895)
!11895 = distinct !DILexicalBlock(scope: !11889, file: !11236, line: 1014, column: 3)
!11896 = !DILocation(line: 1016, column: 3, scope: !11895)
!11897 = !DILocation(line: 1019, column: 33, scope: !11898)
!11898 = distinct !DILexicalBlock(scope: !11889, file: !11236, line: 1018, column: 3)
!11899 = !DILocation(line: 1023, column: 12, scope: !11900)
!11900 = distinct !DILexicalBlock(scope: !11841, file: !11236, line: 1023, column: 6)
!11901 = !DILocation(line: 1023, column: 16, scope: !11900)
!11902 = !DILocation(line: 1029, column: 24, scope: !11903)
!11903 = distinct !DILexicalBlock(scope: !11900, file: !11236, line: 1028, column: 3)
!11904 = !DILocation(line: 1029, column: 33, scope: !11903)
!11905 = !DILocation(line: 1033, column: 12, scope: !11906)
!11906 = distinct !DILexicalBlock(scope: !11841, file: !11236, line: 1033, column: 6)
!11907 = !DILocation(line: 1033, column: 15, scope: !11906)
!11908 = !DILocation(line: 1033, column: 30, scope: !11906)
!11909 = !DILocation(line: 1033, column: 6, scope: !11841)
!11910 = !DILocation(line: 1039, column: 28, scope: !11911)
!11911 = distinct !DILexicalBlock(scope: !11906, file: !11236, line: 1038, column: 3)
!11912 = !DILocation(line: 1039, column: 37, scope: !11911)
!11913 = !DILocation(line: 1041, column: 54, scope: !11841)
!11914 = !DILocation(line: 1041, column: 62, scope: !11841)
!11915 = !DILocation(line: 1041, column: 26, scope: !11841)
!11916 = !DILocation(line: 1041, column: 36, scope: !11841)
!11917 = !DILocation(line: 1042, column: 49, scope: !11841)
!11918 = !DILocation(line: 1042, column: 57, scope: !11841)
!11919 = !DILocation(line: 1042, column: 26, scope: !11841)
!11920 = !DILocation(line: 1042, column: 31, scope: !11841)
!11921 = !DILocation(line: 1043, column: 50, scope: !11841)
!11922 = !DILocation(line: 1043, column: 78, scope: !11841)
!11923 = !DILocation(line: 1043, column: 26, scope: !11841)
!11924 = !DILocation(line: 1043, column: 31, scope: !11841)
!11925 = !DILocation(line: 1044, column: 52, scope: !11841)
!11926 = !DILocation(line: 1044, column: 102, scope: !11841)
!11927 = !DILocation(line: 1044, column: 109, scope: !11841)
!11928 = !DILocation(line: 1044, column: 26, scope: !11841)
!11929 = !DILocation(line: 1044, column: 31, scope: !11841)
!11930 = !DILocation(line: 1045, column: 50, scope: !11841)
!11931 = !DILocation(line: 1045, column: 78, scope: !11841)
!11932 = !DILocation(line: 1045, column: 26, scope: !11841)
!11933 = !DILocation(line: 1045, column: 31, scope: !11841)
!11934 = !DILocation(line: 1046, column: 1, scope: !11841)
!11935 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !11236, file: !11236, line: 1056, type: !11936, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2907, retainedNodes: !11938)
!11936 = !DISubroutineType(types: !11937)
!11937 = !{null, !11599, !908}
!11938 = !{!11939, !11940}
!11939 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11935, file: !11236, line: 1056, type: !11599)
!11940 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !11935, file: !11236, line: 1056, type: !908)
!11941 = !DILocation(line: 0, scope: !11935)
!11942 = !DILocation(line: 1059, column: 22, scope: !11935)
!11943 = !DILocation(line: 1059, column: 32, scope: !11935)
!11944 = !DILocation(line: 1062, column: 53, scope: !11935)
!11945 = !DILocation(line: 1062, column: 58, scope: !11935)
!11946 = !DILocation(line: 1062, column: 22, scope: !11935)
!11947 = !DILocation(line: 1062, column: 35, scope: !11935)
!11948 = !DILocation(line: 1065, column: 54, scope: !11935)
!11949 = !DILocation(line: 1065, column: 59, scope: !11935)
!11950 = !DILocation(line: 1065, column: 22, scope: !11935)
!11951 = !DILocation(line: 1065, column: 36, scope: !11935)
!11952 = !DILocation(line: 1068, column: 55, scope: !11935)
!11953 = !DILocation(line: 1068, column: 60, scope: !11935)
!11954 = !DILocation(line: 1068, column: 22, scope: !11935)
!11955 = !DILocation(line: 1068, column: 37, scope: !11935)
!11956 = !DILocation(line: 1071, column: 56, scope: !11935)
!11957 = !DILocation(line: 1071, column: 79, scope: !11935)
!11958 = !DILocation(line: 1071, column: 22, scope: !11935)
!11959 = !DILocation(line: 1071, column: 37, scope: !11935)
!11960 = !DILocation(line: 1074, column: 34, scope: !11935)
!11961 = !DILocation(line: 1074, column: 38, scope: !11935)
!11962 = !DILocation(line: 1074, column: 14, scope: !11935)
!11963 = !DILocation(line: 1075, column: 1, scope: !11935)
!11964 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !11236, file: !11236, line: 1082, type: !3098, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2907, retainedNodes: !2162)
!11965 = !DILocation(line: 1085, column: 6, scope: !11966)
!11966 = distinct !DILexicalBlock(scope: !11964, file: !11236, line: 1085, column: 6)
!11967 = !DILocation(line: 1085, column: 6, scope: !11964)
!11968 = !DILocation(line: 1088, column: 5, scope: !11969)
!11969 = distinct !DILexicalBlock(scope: !11966, file: !11236, line: 1086, column: 3)
!11970 = !DILocation(line: 1091, column: 5, scope: !11969)
!11971 = !DILocation(line: 1092, column: 3, scope: !11969)
!11972 = !DILocation(line: 1093, column: 1, scope: !11964)
!11973 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !11236, file: !11236, line: 1099, type: !3098, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2907, retainedNodes: !2162)
!11974 = !DILocation(line: 1104, column: 1, scope: !11973)
!11975 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !11976, file: !11976, line: 257, type: !6547, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !11977)
!11976 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11977 = !{!11978}
!11978 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11975, file: !11976, line: 257, type: !118)
!11979 = !DILocation(line: 0, scope: !11975)
!11980 = !DILocation(line: 260, column: 3, scope: !11975)
!11981 = !DILocation(line: 261, column: 1, scope: !11975)
!11982 = distinct !DISubprogram(name: "LL_InitTick", scope: !11983, file: !11983, line: 260, type: !9595, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !11984)
!11983 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11984 = !{!11985, !11986}
!11985 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11982, file: !11983, line: 260, type: !118)
!11986 = !DILocalVariable(name: "Ticks", arg: 2, scope: !11982, file: !11983, line: 260, type: !118)
!11987 = !DILocation(line: 0, scope: !11982)
!11988 = !DILocation(line: 263, column: 46, scope: !11982)
!11989 = !DILocation(line: 263, column: 55, scope: !11982)
!11990 = !DILocation(line: 263, column: 18, scope: !11982)
!11991 = !DILocation(line: 264, column: 18, scope: !11982)
!11992 = !DILocation(line: 265, column: 18, scope: !11982)
!11993 = !DILocation(line: 267, column: 1, scope: !11982)
!11994 = distinct !DISubprogram(name: "LL_mDelay", scope: !11976, file: !11976, line: 273, type: !6547, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !11995)
!11995 = !{!11996, !11997}
!11996 = !DILocalVariable(name: "Delay", arg: 1, scope: !11994, file: !11976, line: 273, type: !118)
!11997 = !DILocalVariable(name: "tmp", scope: !11994, file: !11976, line: 275, type: !314)
!11998 = !DILocation(line: 0, scope: !11994)
!11999 = !DILocation(line: 275, column: 3, scope: !11994)
!12000 = !DILocation(line: 275, column: 18, scope: !11994)
!12001 = !DILocation(line: 275, column: 33, scope: !11994)
!12002 = !DILocation(line: 277, column: 10, scope: !11994)
!12003 = !DILocation(line: 280, column: 12, scope: !12004)
!12004 = distinct !DILexicalBlock(scope: !11994, file: !11976, line: 280, column: 6)
!12005 = !DILocation(line: 285, column: 3, scope: !11994)
!12006 = !DILocation(line: 287, column: 18, scope: !12007)
!12007 = distinct !DILexicalBlock(scope: !12008, file: !11976, line: 287, column: 8)
!12008 = distinct !DILexicalBlock(scope: !11994, file: !11976, line: 286, column: 3)
!12009 = !DILocation(line: 292, column: 1, scope: !11994)
!12010 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !11976, file: !11976, line: 323, type: !6547, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !12011)
!12011 = !{!12012}
!12012 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12010, file: !11976, line: 323, type: !118)
!12013 = !DILocation(line: 0, scope: !12010)
!12014 = !DILocation(line: 326, column: 19, scope: !12010)
!12015 = !DILocation(line: 327, column: 1, scope: !12010)
!12016 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !11976, file: !11976, line: 338, type: !12017, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !12020)
!12017 = !DISubroutineType(types: !12018)
!12018 = !{!12019, !118}
!12019 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !853, line: 201, baseType: !852)
!12020 = !{!12021, !12022, !12023, !12024, !12025}
!12021 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !12016, file: !11976, line: 338, type: !118)
!12022 = !DILocalVariable(name: "timeout", scope: !12016, file: !11976, line: 340, type: !118)
!12023 = !DILocalVariable(name: "getlatency", scope: !12016, file: !11976, line: 341, type: !118)
!12024 = !DILocalVariable(name: "latency", scope: !12016, file: !11976, line: 342, type: !118)
!12025 = !DILocalVariable(name: "status", scope: !12016, file: !11976, line: 343, type: !12019)
!12026 = !DILocation(line: 0, scope: !12016)
!12027 = !DILocation(line: 347, column: 21, scope: !12028)
!12028 = distinct !DILexicalBlock(scope: !12016, file: !11976, line: 347, column: 6)
!12029 = !DILocation(line: 347, column: 6, scope: !12016)
!12030 = !DILocation(line: 353, column: 8, scope: !12031)
!12031 = distinct !DILexicalBlock(scope: !12032, file: !11976, line: 353, column: 8)
!12032 = distinct !DILexicalBlock(scope: !12028, file: !11976, line: 352, column: 3)
!12033 = !DILocation(line: 353, column: 40, scope: !12031)
!12034 = !DILocation(line: 353, column: 8, scope: !12032)
!12035 = !DILocation(line: 356, column: 26, scope: !12036)
!12036 = distinct !DILexicalBlock(scope: !12037, file: !11976, line: 356, column: 10)
!12037 = distinct !DILexicalBlock(scope: !12031, file: !11976, line: 354, column: 5)
!12038 = !DILocation(line: 356, column: 55, scope: !12036)
!12039 = !DILocation(line: 362, column: 55, scope: !12040)
!12040 = distinct !DILexicalBlock(scope: !12037, file: !11976, line: 362, column: 10)
!12041 = !DILocation(line: 368, column: 55, scope: !12042)
!12042 = distinct !DILexicalBlock(scope: !12037, file: !11976, line: 368, column: 10)
!12043 = !DILocation(line: 374, column: 26, scope: !12044)
!12044 = distinct !DILexicalBlock(scope: !12037, file: !11976, line: 374, column: 10)
!12045 = !DILocation(line: 374, column: 55, scope: !12044)
!12046 = !DILocation(line: 380, column: 28, scope: !12047)
!12047 = distinct !DILexicalBlock(scope: !12048, file: !11976, line: 380, column: 12)
!12048 = distinct !DILexicalBlock(scope: !12044, file: !11976, line: 379, column: 7)
!12049 = !DILocation(line: 380, column: 57, scope: !12047)
!12050 = !DILocation(line: 387, column: 8, scope: !12051)
!12051 = distinct !DILexicalBlock(scope: !12032, file: !11976, line: 387, column: 8)
!12052 = !DILocation(line: 387, column: 40, scope: !12051)
!12053 = !DILocation(line: 387, column: 8, scope: !12032)
!12054 = !DILocation(line: 390, column: 26, scope: !12055)
!12055 = distinct !DILexicalBlock(scope: !12056, file: !11976, line: 390, column: 10)
!12056 = distinct !DILexicalBlock(scope: !12051, file: !11976, line: 388, column: 5)
!12057 = !DILocation(line: 390, column: 55, scope: !12055)
!12058 = !DILocation(line: 396, column: 26, scope: !12059)
!12059 = distinct !DILexicalBlock(scope: !12056, file: !11976, line: 396, column: 10)
!12060 = !DILocation(line: 396, column: 55, scope: !12059)
!12061 = !DILocation(line: 402, column: 26, scope: !12062)
!12062 = distinct !DILexicalBlock(scope: !12056, file: !11976, line: 402, column: 10)
!12063 = !DILocation(line: 402, column: 55, scope: !12062)
!12064 = !DILocation(line: 407, column: 26, scope: !12065)
!12065 = distinct !DILexicalBlock(scope: !12056, file: !11976, line: 407, column: 10)
!12066 = !DILocation(line: 407, column: 55, scope: !12065)
!12067 = !DILocation(line: 413, column: 28, scope: !12068)
!12068 = distinct !DILexicalBlock(scope: !12069, file: !11976, line: 413, column: 12)
!12069 = distinct !DILexicalBlock(scope: !12065, file: !11976, line: 412, column: 7)
!12070 = !DILocation(line: 413, column: 57, scope: !12068)
!12071 = !DILocation(line: 0, scope: !12032)
!12072 = !DILocation(line: 420, column: 8, scope: !12073)
!12073 = distinct !DILexicalBlock(scope: !12032, file: !11976, line: 420, column: 8)
!12074 = !DILocation(line: 420, column: 40, scope: !12073)
!12075 = !DILocation(line: 420, column: 8, scope: !12032)
!12076 = !DILocation(line: 423, column: 26, scope: !12077)
!12077 = distinct !DILexicalBlock(scope: !12078, file: !11976, line: 423, column: 10)
!12078 = distinct !DILexicalBlock(scope: !12073, file: !11976, line: 421, column: 5)
!12079 = !DILocation(line: 423, column: 55, scope: !12077)
!12080 = !DILocation(line: 429, column: 26, scope: !12081)
!12081 = distinct !DILexicalBlock(scope: !12078, file: !11976, line: 429, column: 10)
!12082 = !DILocation(line: 429, column: 55, scope: !12081)
!12083 = !DILocation(line: 435, column: 28, scope: !12084)
!12084 = distinct !DILexicalBlock(scope: !12085, file: !11976, line: 435, column: 12)
!12085 = distinct !DILexicalBlock(scope: !12081, file: !11976, line: 434, column: 7)
!12086 = !DILocation(line: 435, column: 57, scope: !12084)
!12087 = !DILocation(line: 444, column: 5, scope: !12032)
!12088 = !DILocation(line: 448, column: 5, scope: !12032)
!12089 = !DILocation(line: 451, column: 18, scope: !12090)
!12090 = distinct !DILexicalBlock(scope: !12032, file: !11976, line: 449, column: 5)
!12091 = !DILocation(line: 452, column: 12, scope: !12090)
!12092 = !DILocation(line: 453, column: 26, scope: !12032)
!12093 = !DILocation(line: 453, column: 38, scope: !12032)
!12094 = !DILocation(line: 453, column: 5, scope: !12090)
!12095 = distinct !{!12095, !12088, !12096}
!12096 = !DILocation(line: 453, column: 54, scope: !12032)
!12097 = !DILocation(line: 0, scope: !12028)
!12098 = !DILocation(line: 464, column: 3, scope: !12016)
!12099 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !12100, file: !12100, line: 519, type: !3336, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !2162)
!12100 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12101 = !DILocation(line: 521, column: 21, scope: !12099)
!12102 = !DILocation(line: 521, column: 3, scope: !12099)
!12103 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !6152, file: !6152, line: 1543, type: !6547, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !12104)
!12104 = !{!12105}
!12105 = !DILocalVariable(name: "Latency", arg: 1, scope: !12103, file: !6152, line: 1543, type: !118)
!12106 = !DILocation(line: 0, scope: !12103)
!12107 = !DILocation(line: 1545, column: 3, scope: !12103)
!12108 = !DILocation(line: 1546, column: 1, scope: !12103)
!12109 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !6152, file: !6152, line: 1569, type: !3336, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !2162)
!12110 = !DILocation(line: 1571, column: 21, scope: !12109)
!12111 = !DILocation(line: 1571, column: 3, scope: !12109)
!12112 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !11976, file: !11976, line: 483, type: !12113, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !12129)
!12113 = !DISubroutineType(types: !12114)
!12114 = !{!12019, !12115, !12122}
!12115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12116, size: 32)
!12116 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !11983, line: 114, baseType: !12117)
!12117 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11983, line: 94, size: 96, elements: !12118)
!12118 = !{!12119, !12120, !12121}
!12119 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !12117, file: !11983, line: 96, baseType: !118, size: 32)
!12120 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !12117, file: !11983, line: 102, baseType: !118, size: 32, offset: 32)
!12121 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !12117, file: !11983, line: 109, baseType: !118, size: 32, offset: 64)
!12122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12123, size: 32)
!12123 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !11983, line: 139, baseType: !12124)
!12124 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11983, line: 119, size: 96, elements: !12125)
!12125 = !{!12126, !12127, !12128}
!12126 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12124, file: !11983, line: 121, baseType: !118, size: 32)
!12127 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12124, file: !11983, line: 127, baseType: !118, size: 32, offset: 32)
!12128 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12124, file: !11983, line: 133, baseType: !118, size: 32, offset: 64)
!12129 = !{!12130, !12131, !12132, !12133}
!12130 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !12112, file: !11976, line: 483, type: !12115)
!12131 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12112, file: !11976, line: 484, type: !12122)
!12132 = !DILocalVariable(name: "status", scope: !12112, file: !11976, line: 486, type: !12019)
!12133 = !DILocalVariable(name: "pllfreq", scope: !12112, file: !11976, line: 487, type: !118)
!12134 = !DILocation(line: 0, scope: !12112)
!12135 = !DILocation(line: 490, column: 6, scope: !12136)
!12136 = distinct !DILexicalBlock(scope: !12112, file: !11976, line: 490, column: 6)
!12137 = !DILocation(line: 490, column: 25, scope: !12136)
!12138 = !DILocation(line: 490, column: 6, scope: !12112)
!12139 = !DILocation(line: 493, column: 15, scope: !12140)
!12140 = distinct !DILexicalBlock(scope: !12136, file: !11976, line: 491, column: 3)
!12141 = !DILocation(line: 496, column: 8, scope: !12142)
!12142 = distinct !DILexicalBlock(scope: !12140, file: !11976, line: 496, column: 8)
!12143 = !DILocation(line: 496, column: 29, scope: !12142)
!12144 = !DILocation(line: 496, column: 8, scope: !12140)
!12145 = !DILocation(line: 498, column: 7, scope: !12146)
!12146 = distinct !DILexicalBlock(scope: !12142, file: !11976, line: 497, column: 5)
!12147 = !DILocation(line: 499, column: 7, scope: !12146)
!12148 = !DILocation(line: 499, column: 14, scope: !12146)
!12149 = !DILocation(line: 499, column: 35, scope: !12146)
!12150 = distinct !{!12150, !12147, !12151}
!12151 = !DILocation(line: 502, column: 7, scope: !12146)
!12152 = !DILocation(line: 506, column: 76, scope: !12140)
!12153 = !DILocation(line: 506, column: 103, scope: !12140)
!12154 = !DILocation(line: 507, column: 54, scope: !12140)
!12155 = !DILocation(line: 506, column: 5, scope: !12140)
!12156 = !DILocation(line: 510, column: 14, scope: !12140)
!12157 = !DILocation(line: 511, column: 3, scope: !12140)
!12158 = !DILocation(line: 0, scope: !12136)
!12159 = !DILocation(line: 518, column: 3, scope: !12112)
!12160 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !11976, file: !11976, line: 642, type: !12161, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !12163)
!12161 = !DISubroutineType(types: !12162)
!12162 = !{!12019}
!12163 = !{!12164}
!12164 = !DILocalVariable(name: "status", scope: !12160, file: !11976, line: 644, type: !12019)
!12165 = !DILocation(line: 0, scope: !12160)
!12166 = !DILocation(line: 647, column: 6, scope: !12167)
!12167 = distinct !DILexicalBlock(scope: !12160, file: !11976, line: 647, column: 6)
!12168 = !DILocation(line: 647, column: 27, scope: !12167)
!12169 = !DILocation(line: 655, column: 6, scope: !12170)
!12170 = distinct !DILexicalBlock(scope: !12160, file: !11976, line: 655, column: 6)
!12171 = !DILocation(line: 655, column: 30, scope: !12170)
!12172 = !DILocation(line: 663, column: 6, scope: !12173)
!12173 = distinct !DILexicalBlock(scope: !12160, file: !11976, line: 663, column: 6)
!12174 = !DILocation(line: 663, column: 30, scope: !12173)
!12175 = !DILocation(line: 663, column: 6, scope: !12160)
!12176 = !DILocation(line: 669, column: 3, scope: !12160)
!12177 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !11976, file: !11976, line: 611, type: !12178, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !12180)
!12178 = !DISubroutineType(types: !12179)
!12179 = !{!118, !118, !12115}
!12180 = !{!12181, !12182, !12183}
!12181 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !12177, file: !11976, line: 611, type: !118)
!12182 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !12177, file: !11976, line: 611, type: !12115)
!12183 = !DILocalVariable(name: "pllfreq", scope: !12177, file: !11976, line: 613, type: !118)
!12184 = !DILocation(line: 0, scope: !12177)
!12185 = !DILocation(line: 622, column: 56, scope: !12177)
!12186 = !DILocation(line: 622, column: 61, scope: !12177)
!12187 = !DILocation(line: 622, column: 32, scope: !12177)
!12188 = !DILocation(line: 626, column: 45, scope: !12177)
!12189 = !DILocation(line: 626, column: 50, scope: !12177)
!12190 = !DILocation(line: 626, column: 21, scope: !12177)
!12191 = !DILocation(line: 630, column: 47, scope: !12177)
!12192 = !DILocation(line: 630, column: 82, scope: !12177)
!12193 = !DILocation(line: 630, column: 21, scope: !12177)
!12194 = !DILocation(line: 633, column: 3, scope: !12177)
!12195 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8936, file: !8936, line: 3007, type: !3336, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !2162)
!12196 = !DILocation(line: 3009, column: 11, scope: !12195)
!12197 = !DILocation(line: 3009, column: 44, scope: !12195)
!12198 = !DILocation(line: 3009, column: 3, scope: !12195)
!12199 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8936, file: !8936, line: 2987, type: !3098, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !2162)
!12200 = !DILocation(line: 2989, column: 3, scope: !12199)
!12201 = !DILocation(line: 2990, column: 1, scope: !12199)
!12202 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8936, file: !8936, line: 4304, type: !9055, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !12203)
!12203 = !{!12204, !12205, !12206, !12207}
!12204 = !DILocalVariable(name: "Source", arg: 1, scope: !12202, file: !8936, line: 4304, type: !118)
!12205 = !DILocalVariable(name: "PLLM", arg: 2, scope: !12202, file: !8936, line: 4304, type: !118)
!12206 = !DILocalVariable(name: "PLLN", arg: 3, scope: !12202, file: !8936, line: 4304, type: !118)
!12207 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !12202, file: !8936, line: 4304, type: !118)
!12208 = !DILocation(line: 0, scope: !12202)
!12209 = !DILocation(line: 4306, column: 3, scope: !12202)
!12210 = !DILocation(line: 4308, column: 3, scope: !12202)
!12211 = !DILocation(line: 4312, column: 1, scope: !12202)
!12212 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !11976, file: !11976, line: 681, type: !12213, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !12215)
!12213 = !DISubroutineType(types: !12214)
!12214 = !{!12019, !118, !12122}
!12215 = !{!12216, !12217, !12218, !12219}
!12216 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !12212, file: !11976, line: 681, type: !118)
!12217 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12212, file: !11976, line: 681, type: !12122)
!12218 = !DILocalVariable(name: "status", scope: !12212, file: !11976, line: 683, type: !12019)
!12219 = !DILocalVariable(name: "hclk_frequency", scope: !12212, file: !11976, line: 684, type: !118)
!12220 = !DILocation(line: 0, scope: !12212)
!12221 = !DILocation(line: 691, column: 20, scope: !12212)
!12222 = !DILocation(line: 694, column: 6, scope: !12223)
!12223 = distinct !DILexicalBlock(scope: !12212, file: !11976, line: 694, column: 6)
!12224 = !DILocation(line: 694, column: 22, scope: !12223)
!12225 = !DILocation(line: 694, column: 6, scope: !12212)
!12226 = !DILocation(line: 697, column: 14, scope: !12227)
!12227 = distinct !DILexicalBlock(scope: !12223, file: !11976, line: 695, column: 3)
!12228 = !DILocation(line: 701, column: 13, scope: !12229)
!12229 = distinct !DILexicalBlock(scope: !12212, file: !11976, line: 701, column: 6)
!12230 = !DILocation(line: 701, column: 6, scope: !12212)
!12231 = !DILocation(line: 704, column: 5, scope: !12232)
!12232 = distinct !DILexicalBlock(scope: !12229, file: !11976, line: 702, column: 3)
!12233 = !DILocation(line: 705, column: 5, scope: !12232)
!12234 = !DILocation(line: 705, column: 12, scope: !12232)
!12235 = !DILocation(line: 705, column: 33, scope: !12232)
!12236 = distinct !{!12236, !12233, !12237}
!12237 = !DILocation(line: 708, column: 5, scope: !12232)
!12238 = !DILocation(line: 711, column: 49, scope: !12232)
!12239 = !DILocation(line: 711, column: 5, scope: !12232)
!12240 = !DILocation(line: 712, column: 5, scope: !12232)
!12241 = !DILocation(line: 713, column: 5, scope: !12232)
!12242 = !DILocation(line: 713, column: 12, scope: !12232)
!12243 = !DILocation(line: 713, column: 37, scope: !12232)
!12244 = distinct !{!12244, !12241, !12245}
!12245 = !DILocation(line: 716, column: 5, scope: !12232)
!12246 = !DILocation(line: 719, column: 50, scope: !12232)
!12247 = !DILocation(line: 719, column: 5, scope: !12232)
!12248 = !DILocation(line: 720, column: 50, scope: !12232)
!12249 = !DILocation(line: 720, column: 5, scope: !12232)
!12250 = !DILocation(line: 721, column: 3, scope: !12232)
!12251 = !DILocation(line: 724, column: 6, scope: !12252)
!12252 = distinct !DILexicalBlock(scope: !12212, file: !11976, line: 724, column: 6)
!12253 = !DILocation(line: 724, column: 22, scope: !12252)
!12254 = !DILocation(line: 724, column: 6, scope: !12212)
!12255 = !DILocation(line: 727, column: 14, scope: !12256)
!12256 = distinct !DILexicalBlock(scope: !12252, file: !11976, line: 725, column: 3)
!12257 = !DILocation(line: 728, column: 3, scope: !12256)
!12258 = !DILocation(line: 731, column: 13, scope: !12259)
!12259 = distinct !DILexicalBlock(scope: !12212, file: !11976, line: 731, column: 6)
!12260 = !DILocation(line: 731, column: 6, scope: !12212)
!12261 = !DILocation(line: 733, column: 5, scope: !12262)
!12262 = distinct !DILexicalBlock(scope: !12259, file: !11976, line: 732, column: 3)
!12263 = !DILocation(line: 734, column: 3, scope: !12262)
!12264 = !DILocation(line: 736, column: 3, scope: !12212)
!12265 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8936, file: !8936, line: 4184, type: !3098, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !2162)
!12266 = !DILocation(line: 4186, column: 3, scope: !12265)
!12267 = !DILocation(line: 4187, column: 1, scope: !12265)
!12268 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8936, file: !8936, line: 4205, type: !3336, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !2162)
!12269 = !DILocation(line: 4207, column: 11, scope: !12268)
!12270 = !DILocation(line: 4207, column: 44, scope: !12268)
!12271 = !DILocation(line: 4207, column: 3, scope: !12268)
!12272 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8936, file: !8936, line: 3224, type: !6547, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !12273)
!12273 = !{!12274}
!12274 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12272, file: !8936, line: 3224, type: !118)
!12275 = !DILocation(line: 0, scope: !12272)
!12276 = !DILocation(line: 3226, column: 3, scope: !12272)
!12277 = !DILocation(line: 3227, column: 1, scope: !12272)
!12278 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8936, file: !8936, line: 3188, type: !6547, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !12279)
!12279 = !{!12280}
!12280 = !DILocalVariable(name: "Source", arg: 1, scope: !12278, file: !8936, line: 3188, type: !118)
!12281 = !DILocation(line: 0, scope: !12278)
!12282 = !DILocation(line: 3190, column: 3, scope: !12278)
!12283 = !DILocation(line: 3191, column: 1, scope: !12278)
!12284 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8936, file: !8936, line: 3204, type: !3336, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !2162)
!12285 = !DILocation(line: 3206, column: 21, scope: !12284)
!12286 = !DILocation(line: 3206, column: 3, scope: !12284)
!12287 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8936, file: !8936, line: 3240, type: !6547, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !12288)
!12288 = !{!12289}
!12289 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12287, file: !8936, line: 3240, type: !118)
!12290 = !DILocation(line: 0, scope: !12287)
!12291 = !DILocation(line: 3242, column: 3, scope: !12287)
!12292 = !DILocation(line: 3243, column: 1, scope: !12287)
!12293 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8936, file: !8936, line: 3256, type: !6547, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !12294)
!12294 = !{!12295}
!12295 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12293, file: !8936, line: 3256, type: !118)
!12296 = !DILocation(line: 0, scope: !12293)
!12297 = !DILocation(line: 3258, column: 3, scope: !12293)
!12298 = !DILocation(line: 3259, column: 1, scope: !12293)
!12299 = distinct !DISubprogram(name: "LL_RCC_PLLSAI_IsReady", scope: !8936, file: !8936, line: 5969, type: !3336, scopeLine: 5970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !2162)
!12300 = !DILocation(line: 5971, column: 11, scope: !12299)
!12301 = !DILocation(line: 5971, column: 47, scope: !12299)
!12302 = !DILocation(line: 5971, column: 3, scope: !12299)
!12303 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !8936, file: !8936, line: 5153, type: !3336, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !2162)
!12304 = !DILocation(line: 5155, column: 11, scope: !12303)
!12305 = !DILocation(line: 5155, column: 47, scope: !12303)
!12306 = !DILocation(line: 5155, column: 3, scope: !12303)
!12307 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !11976, file: !11976, line: 540, type: !12308, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !12310)
!12308 = !DISubroutineType(types: !12309)
!12309 = !{!12019, !118, !118, !12115, !12122}
!12310 = !{!12311, !12312, !12313, !12314, !12315, !12316}
!12311 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !12307, file: !11976, line: 540, type: !118)
!12312 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !12307, file: !11976, line: 540, type: !118)
!12313 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !12307, file: !11976, line: 541, type: !12115)
!12314 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !12307, file: !11976, line: 541, type: !12122)
!12315 = !DILocalVariable(name: "status", scope: !12307, file: !11976, line: 543, type: !12019)
!12316 = !DILocalVariable(name: "pllfreq", scope: !12307, file: !11976, line: 544, type: !118)
!12317 = !DILocation(line: 0, scope: !12307)
!12318 = !DILocation(line: 551, column: 6, scope: !12319)
!12319 = distinct !DILexicalBlock(scope: !12307, file: !11976, line: 551, column: 6)
!12320 = !DILocation(line: 551, column: 25, scope: !12319)
!12321 = !DILocation(line: 551, column: 6, scope: !12307)
!12322 = !DILocation(line: 554, column: 15, scope: !12323)
!12323 = distinct !DILexicalBlock(scope: !12319, file: !11976, line: 552, column: 3)
!12324 = !DILocation(line: 557, column: 8, scope: !12325)
!12325 = distinct !DILexicalBlock(scope: !12323, file: !11976, line: 557, column: 8)
!12326 = !DILocation(line: 557, column: 29, scope: !12325)
!12327 = !DILocation(line: 557, column: 8, scope: !12323)
!12328 = !DILocation(line: 560, column: 20, scope: !12329)
!12329 = distinct !DILexicalBlock(scope: !12330, file: !11976, line: 560, column: 10)
!12330 = distinct !DILexicalBlock(scope: !12325, file: !11976, line: 558, column: 5)
!12331 = !DILocation(line: 560, column: 10, scope: !12330)
!12332 = !DILocation(line: 562, column: 9, scope: !12333)
!12333 = distinct !DILexicalBlock(scope: !12329, file: !11976, line: 561, column: 7)
!12334 = !DILocation(line: 563, column: 7, scope: !12333)
!12335 = !DILocation(line: 566, column: 9, scope: !12336)
!12336 = distinct !DILexicalBlock(scope: !12329, file: !11976, line: 565, column: 7)
!12337 = !DILocation(line: 570, column: 7, scope: !12330)
!12338 = !DILocation(line: 571, column: 7, scope: !12330)
!12339 = !DILocation(line: 571, column: 14, scope: !12330)
!12340 = !DILocation(line: 571, column: 35, scope: !12330)
!12341 = distinct !{!12341, !12338, !12342}
!12342 = !DILocation(line: 574, column: 7, scope: !12330)
!12343 = !DILocation(line: 578, column: 76, scope: !12323)
!12344 = !DILocation(line: 578, column: 103, scope: !12323)
!12345 = !DILocation(line: 579, column: 54, scope: !12323)
!12346 = !DILocation(line: 578, column: 5, scope: !12323)
!12347 = !DILocation(line: 582, column: 14, scope: !12323)
!12348 = !DILocation(line: 583, column: 3, scope: !12323)
!12349 = !DILocation(line: 0, scope: !12319)
!12350 = !DILocation(line: 590, column: 3, scope: !12307)
!12351 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8936, file: !8936, line: 2969, type: !3336, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !2162)
!12352 = !DILocation(line: 2971, column: 11, scope: !12351)
!12353 = !DILocation(line: 2971, column: 44, scope: !12351)
!12354 = !DILocation(line: 2971, column: 3, scope: !12351)
!12355 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !8936, file: !8936, line: 2929, type: !3098, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !2162)
!12356 = !DILocation(line: 2931, column: 3, scope: !12355)
!12357 = !DILocation(line: 2932, column: 1, scope: !12355)
!12358 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8936, file: !8936, line: 2939, type: !3098, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !2162)
!12359 = !DILocation(line: 2941, column: 3, scope: !12358)
!12360 = !DILocation(line: 2942, column: 1, scope: !12358)
!12361 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8936, file: !8936, line: 2949, type: !3098, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2993, retainedNodes: !2162)
!12362 = !DILocation(line: 2951, column: 3, scope: !12361)
!12363 = !DILocation(line: 2952, column: 1, scope: !12361)
!12364 = distinct !DISubprogram(name: "z_device_state_init", scope: !12365, file: !12365, line: 23, type: !3098, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3058, retainedNodes: !12366)
!12365 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12366 = !{!12367}
!12367 = !DILocalVariable(name: "dev", scope: !12364, file: !12365, line: 25, type: !12368)
!12368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12369, size: 32)
!12369 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12370)
!12370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !334, line: 378, size: 192, elements: !12371)
!12371 = !{!12372, !12373, !12374, !12375, !12381, !12382}
!12372 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12370, file: !334, line: 380, baseType: !278, size: 32)
!12373 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !12370, file: !334, line: 382, baseType: !13, size: 32, offset: 32)
!12374 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !12370, file: !334, line: 384, baseType: !13, size: 32, offset: 64)
!12375 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !12370, file: !334, line: 386, baseType: !12376, size: 32, offset: 96)
!12376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12377, size: 32)
!12377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !334, line: 351, size: 16, elements: !12378)
!12378 = !{!12379, !12380}
!12379 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !12377, file: !334, line: 359, baseType: !185, size: 8)
!12380 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !12377, file: !334, line: 364, baseType: !345, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!12381 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12370, file: !334, line: 388, baseType: !113, size: 32, offset: 128)
!12382 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !12370, file: !334, line: 396, baseType: !348, size: 32, offset: 160)
!12383 = !DILocation(line: 0, scope: !12364)
!12384 = !DILocation(line: 31, column: 1, scope: !12364)
!12385 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !12365, file: !12365, line: 33, type: !12386, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3058, retainedNodes: !12388)
!12386 = !DISubroutineType(types: !12387)
!12387 = !{!12368, !278}
!12388 = !{!12389, !12390}
!12389 = !DILocalVariable(name: "name", arg: 1, scope: !12385, file: !12365, line: 33, type: !278)
!12390 = !DILocalVariable(name: "dev", scope: !12385, file: !12365, line: 35, type: !12368)
!12391 = !DILocation(line: 0, scope: !12385)
!12392 = !DILocation(line: 40, column: 12, scope: !12393)
!12393 = distinct !DILexicalBlock(scope: !12385, file: !12365, line: 40, column: 6)
!12394 = !DILocation(line: 40, column: 21, scope: !12393)
!12395 = !DILocation(line: 40, column: 25, scope: !12393)
!12396 = !DILocation(line: 40, column: 33, scope: !12393)
!12397 = !DILocation(line: 40, column: 6, scope: !12385)
!12398 = !DILocation(line: 55, column: 2, scope: !12399)
!12399 = distinct !DILexicalBlock(scope: !12385, file: !12365, line: 55, column: 2)
!12400 = !DILocation(line: 50, column: 7, scope: !12401)
!12401 = distinct !DILexicalBlock(scope: !12402, file: !12365, line: 50, column: 7)
!12402 = distinct !DILexicalBlock(scope: !12403, file: !12365, line: 49, column: 57)
!12403 = distinct !DILexicalBlock(scope: !12404, file: !12365, line: 49, column: 2)
!12404 = distinct !DILexicalBlock(scope: !12385, file: !12365, line: 49, column: 2)
!12405 = !DILocation(line: 50, column: 30, scope: !12401)
!12406 = !DILocation(line: 50, column: 39, scope: !12401)
!12407 = !DILocation(line: 50, column: 44, scope: !12401)
!12408 = !DILocation(line: 50, column: 7, scope: !12402)
!12409 = !DILocation(line: 49, column: 53, scope: !12403)
!12410 = !DILocation(line: 49, column: 33, scope: !12403)
!12411 = !DILocation(line: 49, column: 2, scope: !12404)
!12412 = distinct !{!12412, !12411, !12413}
!12413 = !DILocation(line: 53, column: 2, scope: !12404)
!12414 = !DILocation(line: 56, column: 7, scope: !12415)
!12415 = distinct !DILexicalBlock(scope: !12416, file: !12365, line: 56, column: 7)
!12416 = distinct !DILexicalBlock(scope: !12417, file: !12365, line: 55, column: 57)
!12417 = distinct !DILexicalBlock(scope: !12399, file: !12365, line: 55, column: 2)
!12418 = !DILocation(line: 56, column: 30, scope: !12415)
!12419 = !DILocation(line: 56, column: 52, scope: !12415)
!12420 = !DILocation(line: 56, column: 34, scope: !12415)
!12421 = !DILocation(line: 56, column: 58, scope: !12415)
!12422 = !DILocation(line: 56, column: 7, scope: !12416)
!12423 = !DILocation(line: 55, column: 53, scope: !12417)
!12424 = !DILocation(line: 55, column: 33, scope: !12417)
!12425 = distinct !{!12425, !12398, !12426}
!12426 = !DILocation(line: 59, column: 2, scope: !12399)
!12427 = !DILocation(line: 62, column: 1, scope: !12385)
!12428 = distinct !DISubprogram(name: "z_device_is_ready", scope: !12365, file: !12365, line: 93, type: !12429, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3058, retainedNodes: !12431)
!12429 = !DISubroutineType(types: !12430)
!12430 = !{!345, !12368}
!12431 = !{!12432}
!12432 = !DILocalVariable(name: "dev", arg: 1, scope: !12428, file: !12365, line: 93, type: !12368)
!12433 = !DILocation(line: 0, scope: !12428)
!12434 = !DILocation(line: 99, column: 10, scope: !12435)
!12435 = distinct !DILexicalBlock(scope: !12428, file: !12365, line: 99, column: 6)
!12436 = !DILocation(line: 99, column: 6, scope: !12428)
!12437 = !DILocation(line: 103, column: 14, scope: !12428)
!12438 = !DILocation(line: 103, column: 21, scope: !12428)
!12439 = !DILocation(line: 103, column: 33, scope: !12428)
!12440 = !DILocation(line: 103, column: 49, scope: !12428)
!12441 = !DILocation(line: 103, column: 58, scope: !12428)
!12442 = !DILocation(line: 104, column: 1, scope: !12428)
!12443 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !12365, file: !12365, line: 87, type: !12444, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3058, retainedNodes: !12447)
!12444 = !DISubroutineType(types: !12445)
!12445 = !{!239, !12446}
!12446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12368, size: 32)
!12447 = !{!12448}
!12448 = !DILocalVariable(name: "devices", arg: 1, scope: !12443, file: !12365, line: 87, type: !12446)
!12449 = !DILocation(line: 0, scope: !12443)
!12450 = !DILocation(line: 89, column: 11, scope: !12443)
!12451 = !DILocation(line: 90, column: 2, scope: !12443)
!12452 = distinct !DISubprogram(name: "device_required_foreach", scope: !12365, file: !12365, line: 125, type: !12453, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3058, retainedNodes: !12459)
!12453 = !DISubroutineType(types: !12454)
!12454 = !{!119, !12368, !12455, !113}
!12455 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !334, line: 471, baseType: !12456)
!12456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12457, size: 32)
!12457 = !DISubroutineType(types: !12458)
!12458 = !{!119, !12368, !113}
!12459 = !{!12460, !12461, !12462, !12463, !12464}
!12460 = !DILocalVariable(name: "dev", arg: 1, scope: !12452, file: !12365, line: 125, type: !12368)
!12461 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12452, file: !12365, line: 126, type: !12455)
!12462 = !DILocalVariable(name: "context", arg: 3, scope: !12452, file: !12365, line: 127, type: !113)
!12463 = !DILocalVariable(name: "handle_count", scope: !12452, file: !12365, line: 129, type: !239)
!12464 = !DILocalVariable(name: "handles", scope: !12452, file: !12365, line: 130, type: !348)
!12465 = !DILocation(line: 0, scope: !12452)
!12466 = !DILocation(line: 129, column: 2, scope: !12452)
!12467 = !DILocation(line: 129, column: 9, scope: !12452)
!12468 = !DILocation(line: 130, column: 35, scope: !12452)
!12469 = !DILocation(line: 132, column: 33, scope: !12452)
!12470 = !DILocation(line: 132, column: 9, scope: !12452)
!12471 = !DILocation(line: 133, column: 1, scope: !12452)
!12472 = !DILocation(line: 132, column: 2, scope: !12452)
!12473 = distinct !DISubprogram(name: "device_required_handles_get", scope: !334, file: !334, line: 493, type: !12474, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3058, retainedNodes: !12476)
!12474 = !DISubroutineType(types: !12475)
!12475 = !{!348, !12368, !2545}
!12476 = !{!12477, !12478, !12479, !12480}
!12477 = !DILocalVariable(name: "dev", arg: 1, scope: !12473, file: !334, line: 493, type: !12368)
!12478 = !DILocalVariable(name: "count", arg: 2, scope: !12473, file: !334, line: 493, type: !2545)
!12479 = !DILocalVariable(name: "rv", scope: !12473, file: !334, line: 495, type: !348)
!12480 = !DILocalVariable(name: "i", scope: !12481, file: !334, line: 498, type: !239)
!12481 = distinct !DILexicalBlock(scope: !12482, file: !334, line: 497, column: 18)
!12482 = distinct !DILexicalBlock(scope: !12473, file: !334, line: 497, column: 6)
!12483 = !DILocation(line: 0, scope: !12473)
!12484 = !DILocation(line: 495, column: 35, scope: !12473)
!12485 = !DILocation(line: 497, column: 9, scope: !12482)
!12486 = !DILocation(line: 497, column: 6, scope: !12473)
!12487 = !DILocation(line: 0, scope: !12481)
!12488 = !DILocation(line: 500, column: 11, scope: !12481)
!12489 = !DILocation(line: 500, column: 40, scope: !12481)
!12490 = !DILocation(line: 502, column: 4, scope: !12491)
!12491 = distinct !DILexicalBlock(scope: !12481, file: !334, line: 501, column: 40)
!12492 = distinct !{!12492, !12493, !12494}
!12493 = !DILocation(line: 500, column: 3, scope: !12481)
!12494 = !DILocation(line: 503, column: 3, scope: !12481)
!12495 = !DILocation(line: 504, column: 10, scope: !12481)
!12496 = !DILocation(line: 505, column: 2, scope: !12481)
!12497 = !DILocation(line: 507, column: 2, scope: !12473)
!12498 = distinct !DISubprogram(name: "device_visitor", scope: !12365, file: !12365, line: 106, type: !12499, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3058, retainedNodes: !12501)
!12499 = !DISubroutineType(types: !12500)
!12500 = !{!119, !348, !239, !12455, !113}
!12501 = !{!12502, !12503, !12504, !12505, !12506, !12508, !12511, !12512}
!12502 = !DILocalVariable(name: "handles", arg: 1, scope: !12498, file: !12365, line: 106, type: !348)
!12503 = !DILocalVariable(name: "handle_count", arg: 2, scope: !12498, file: !12365, line: 107, type: !239)
!12504 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !12498, file: !12365, line: 108, type: !12455)
!12505 = !DILocalVariable(name: "context", arg: 4, scope: !12498, file: !12365, line: 109, type: !113)
!12506 = !DILocalVariable(name: "i", scope: !12507, file: !12365, line: 112, type: !239)
!12507 = distinct !DILexicalBlock(scope: !12498, file: !12365, line: 112, column: 2)
!12508 = !DILocalVariable(name: "dh", scope: !12509, file: !12365, line: 113, type: !350)
!12509 = distinct !DILexicalBlock(scope: !12510, file: !12365, line: 112, column: 44)
!12510 = distinct !DILexicalBlock(scope: !12507, file: !12365, line: 112, column: 2)
!12511 = !DILocalVariable(name: "rdev", scope: !12509, file: !12365, line: 114, type: !12368)
!12512 = !DILocalVariable(name: "rc", scope: !12509, file: !12365, line: 115, type: !119)
!12513 = !DILocation(line: 0, scope: !12498)
!12514 = !DILocation(line: 0, scope: !12507)
!12515 = !DILocation(line: 112, column: 23, scope: !12510)
!12516 = !DILocation(line: 112, column: 2, scope: !12507)
!12517 = distinct !{!12517, !12516, !12518}
!12518 = !DILocation(line: 120, column: 2, scope: !12507)
!12519 = !DILocation(line: 113, column: 24, scope: !12509)
!12520 = !DILocation(line: 0, scope: !12509)
!12521 = !DILocation(line: 114, column: 31, scope: !12509)
!12522 = !DILocation(line: 115, column: 12, scope: !12509)
!12523 = !DILocation(line: 117, column: 10, scope: !12524)
!12524 = distinct !DILexicalBlock(scope: !12509, file: !12365, line: 117, column: 7)
!12525 = !DILocation(line: 112, column: 39, scope: !12510)
!12526 = !DILocation(line: 123, column: 1, scope: !12498)
!12527 = distinct !DISubprogram(name: "device_from_handle", scope: !334, file: !334, line: 439, type: !12528, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3058, retainedNodes: !12530)
!12528 = !DISubroutineType(types: !12529)
!12529 = !{!12368, !350}
!12530 = !{!12531, !12532, !12533}
!12531 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !12527, file: !334, line: 439, type: !350)
!12532 = !DILocalVariable(name: "dev", scope: !12527, file: !334, line: 443, type: !12368)
!12533 = !DILocalVariable(name: "numdev", scope: !12527, file: !334, line: 444, type: !239)
!12534 = !DILocation(line: 0, scope: !12527)
!12535 = !DILocation(line: 446, column: 7, scope: !12536)
!12536 = distinct !DILexicalBlock(scope: !12527, file: !334, line: 446, column: 6)
!12537 = !DILocation(line: 446, column: 18, scope: !12536)
!12538 = !DILocation(line: 446, column: 23, scope: !12536)
!12539 = !DILocation(line: 450, column: 2, scope: !12527)
!12540 = distinct !DISubprogram(name: "device_supported_foreach", scope: !12365, file: !12365, line: 135, type: !12453, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3058, retainedNodes: !12541)
!12541 = !{!12542, !12543, !12544, !12545, !12546}
!12542 = !DILocalVariable(name: "dev", arg: 1, scope: !12540, file: !12365, line: 135, type: !12368)
!12543 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12540, file: !12365, line: 136, type: !12455)
!12544 = !DILocalVariable(name: "context", arg: 3, scope: !12540, file: !12365, line: 137, type: !113)
!12545 = !DILocalVariable(name: "handle_count", scope: !12540, file: !12365, line: 139, type: !239)
!12546 = !DILocalVariable(name: "handles", scope: !12540, file: !12365, line: 140, type: !348)
!12547 = !DILocation(line: 0, scope: !12540)
!12548 = !DILocation(line: 139, column: 2, scope: !12540)
!12549 = !DILocation(line: 139, column: 9, scope: !12540)
!12550 = !DILocation(line: 140, column: 35, scope: !12540)
!12551 = !DILocation(line: 142, column: 33, scope: !12540)
!12552 = !DILocation(line: 142, column: 9, scope: !12540)
!12553 = !DILocation(line: 143, column: 1, scope: !12540)
!12554 = !DILocation(line: 142, column: 2, scope: !12540)
!12555 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !334, file: !334, line: 573, type: !12474, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3058, retainedNodes: !12556)
!12556 = !{!12557, !12558, !12559, !12560, !12561}
!12557 = !DILocalVariable(name: "dev", arg: 1, scope: !12555, file: !334, line: 573, type: !12368)
!12558 = !DILocalVariable(name: "count", arg: 2, scope: !12555, file: !334, line: 573, type: !2545)
!12559 = !DILocalVariable(name: "rv", scope: !12555, file: !334, line: 575, type: !348)
!12560 = !DILocalVariable(name: "region", scope: !12555, file: !334, line: 576, type: !239)
!12561 = !DILocalVariable(name: "i", scope: !12555, file: !334, line: 577, type: !239)
!12562 = !DILocation(line: 0, scope: !12555)
!12563 = !DILocation(line: 575, column: 35, scope: !12555)
!12564 = !DILocation(line: 579, column: 9, scope: !12565)
!12565 = distinct !DILexicalBlock(scope: !12555, file: !334, line: 579, column: 6)
!12566 = !DILocation(line: 579, column: 6, scope: !12555)
!12567 = !DILocation(line: 582, column: 8, scope: !12568)
!12568 = distinct !DILexicalBlock(scope: !12569, file: !334, line: 582, column: 8)
!12569 = distinct !DILexicalBlock(scope: !12570, file: !334, line: 581, column: 23)
!12570 = distinct !DILexicalBlock(scope: !12565, file: !334, line: 579, column: 18)
!12571 = !DILocation(line: 582, column: 12, scope: !12568)
!12572 = !DILocation(line: 585, column: 6, scope: !12569)
!12573 = !DILocation(line: 0, scope: !12570)
!12574 = !DILocation(line: 581, column: 17, scope: !12570)
!12575 = !DILocation(line: 581, column: 3, scope: !12570)
!12576 = !DILocation(line: 588, column: 10, scope: !12570)
!12577 = !DILocation(line: 588, column: 16, scope: !12570)
!12578 = !DILocation(line: 589, column: 4, scope: !12579)
!12579 = distinct !DILexicalBlock(scope: !12570, file: !334, line: 588, column: 39)
!12580 = !DILocation(line: 588, column: 3, scope: !12570)
!12581 = distinct !{!12581, !12580, !12582}
!12582 = !DILocation(line: 590, column: 3, scope: !12570)
!12583 = !DILocation(line: 591, column: 10, scope: !12570)
!12584 = !DILocation(line: 592, column: 2, scope: !12570)
!12585 = !DILocation(line: 575, column: 25, scope: !12555)
!12586 = !DILocation(line: 594, column: 2, scope: !12555)
!12587 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1953, file: !1953, line: 49, type: !12588, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1950, retainedNodes: !2162)
!12588 = !DISubroutineType(types: !12589)
!12589 = !{!280}
!12590 = !DILocation(line: 51, column: 10, scope: !12587)
!12591 = !DILocation(line: 51, column: 20, scope: !12587)
!12592 = !DILocation(line: 51, column: 2, scope: !12587)
!12593 = distinct !DISubprogram(name: "coredump", scope: !3065, file: !3065, line: 209, type: !12594, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3061, retainedNodes: !12743)
!12594 = !DISubroutineType(types: !12595)
!12595 = !{null, !32, !12596, !12640}
!12596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12597, size: 32)
!12597 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12598)
!12598 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2675, line: 141, baseType: !12599)
!12599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2675, line: 97, size: 256, elements: !12600)
!12600 = !{!12601}
!12601 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !12599, file: !2675, line: 107, baseType: !12602, size: 256)
!12602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2675, line: 98, size: 256, elements: !12603)
!12603 = !{!12604, !12609, !12614, !12619, !12624, !12629, !12634, !12639}
!12604 = !DIDerivedType(tag: DW_TAG_member, scope: !12602, file: !2675, line: 99, baseType: !12605, size: 32)
!12605 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12602, file: !2675, line: 99, size: 32, elements: !12606)
!12606 = !{!12607, !12608}
!12607 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !12605, file: !2675, line: 99, baseType: !118, size: 32)
!12608 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !12605, file: !2675, line: 99, baseType: !118, size: 32)
!12609 = !DIDerivedType(tag: DW_TAG_member, scope: !12602, file: !2675, line: 100, baseType: !12610, size: 32, offset: 32)
!12610 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12602, file: !2675, line: 100, size: 32, elements: !12611)
!12611 = !{!12612, !12613}
!12612 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !12610, file: !2675, line: 100, baseType: !118, size: 32)
!12613 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !12610, file: !2675, line: 100, baseType: !118, size: 32)
!12614 = !DIDerivedType(tag: DW_TAG_member, scope: !12602, file: !2675, line: 101, baseType: !12615, size: 32, offset: 64)
!12615 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12602, file: !2675, line: 101, size: 32, elements: !12616)
!12616 = !{!12617, !12618}
!12617 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !12615, file: !2675, line: 101, baseType: !118, size: 32)
!12618 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !12615, file: !2675, line: 101, baseType: !118, size: 32)
!12619 = !DIDerivedType(tag: DW_TAG_member, scope: !12602, file: !2675, line: 102, baseType: !12620, size: 32, offset: 96)
!12620 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12602, file: !2675, line: 102, size: 32, elements: !12621)
!12621 = !{!12622, !12623}
!12622 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !12620, file: !2675, line: 102, baseType: !118, size: 32)
!12623 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !12620, file: !2675, line: 102, baseType: !118, size: 32)
!12624 = !DIDerivedType(tag: DW_TAG_member, scope: !12602, file: !2675, line: 103, baseType: !12625, size: 32, offset: 128)
!12625 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12602, file: !2675, line: 103, size: 32, elements: !12626)
!12626 = !{!12627, !12628}
!12627 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !12625, file: !2675, line: 103, baseType: !118, size: 32)
!12628 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !12625, file: !2675, line: 103, baseType: !118, size: 32)
!12629 = !DIDerivedType(tag: DW_TAG_member, scope: !12602, file: !2675, line: 104, baseType: !12630, size: 32, offset: 160)
!12630 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12602, file: !2675, line: 104, size: 32, elements: !12631)
!12631 = !{!12632, !12633}
!12632 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !12630, file: !2675, line: 104, baseType: !118, size: 32)
!12633 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !12630, file: !2675, line: 104, baseType: !118, size: 32)
!12634 = !DIDerivedType(tag: DW_TAG_member, scope: !12602, file: !2675, line: 105, baseType: !12635, size: 32, offset: 192)
!12635 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12602, file: !2675, line: 105, size: 32, elements: !12636)
!12636 = !{!12637, !12638}
!12637 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !12635, file: !2675, line: 105, baseType: !118, size: 32)
!12638 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !12635, file: !2675, line: 105, baseType: !118, size: 32)
!12639 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !12602, file: !2675, line: 106, baseType: !118, size: 32, offset: 224)
!12640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12641, size: 32)
!12641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !143, line: 245, size: 1280, elements: !12642)
!12642 = !{!12643, !12701, !12713, !12714, !12715, !12716, !12717, !12723, !12738}
!12643 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !12641, file: !143, line: 247, baseType: !12644, size: 384)
!12644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !143, line: 57, size: 384, elements: !12645)
!12645 = !{!12646, !12670, !12677, !12678, !12679, !12688, !12689, !12690}
!12646 = !DIDerivedType(tag: DW_TAG_member, scope: !12644, file: !143, line: 60, baseType: !12647, size: 64)
!12647 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12644, file: !143, line: 60, size: 64, elements: !12648)
!12648 = !{!12649, !12664}
!12649 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !12647, file: !143, line: 61, baseType: !12650, size: 64)
!12650 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !153, line: 49, baseType: !12651)
!12651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !153, line: 37, size: 64, elements: !12652)
!12652 = !{!12653, !12659}
!12653 = !DIDerivedType(tag: DW_TAG_member, scope: !12651, file: !153, line: 38, baseType: !12654, size: 32)
!12654 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12651, file: !153, line: 38, size: 32, elements: !12655)
!12655 = !{!12656, !12658}
!12656 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !12654, file: !153, line: 39, baseType: !12657, size: 32)
!12657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12651, size: 32)
!12658 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !12654, file: !153, line: 40, baseType: !12657, size: 32)
!12659 = !DIDerivedType(tag: DW_TAG_member, scope: !12651, file: !153, line: 42, baseType: !12660, size: 32, offset: 32)
!12660 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12651, file: !153, line: 42, size: 32, elements: !12661)
!12661 = !{!12662, !12663}
!12662 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !12660, file: !153, line: 43, baseType: !12657, size: 32)
!12663 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !12660, file: !153, line: 44, baseType: !12657, size: 32)
!12664 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !12647, file: !143, line: 62, baseType: !12665, size: 64)
!12665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !169, line: 49, size: 64, elements: !12666)
!12666 = !{!12667}
!12667 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !12665, file: !169, line: 50, baseType: !12668, size: 64)
!12668 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12669, size: 64, elements: !174)
!12669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12665, size: 32)
!12670 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !12644, file: !143, line: 68, baseType: !12671, size: 32, offset: 64)
!12671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12672, size: 32)
!12672 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !179, line: 233, baseType: !12673)
!12673 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !179, line: 231, size: 64, elements: !12674)
!12674 = !{!12675}
!12675 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !12673, file: !179, line: 232, baseType: !12676, size: 64)
!12676 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !153, line: 48, baseType: !12651)
!12677 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !12644, file: !143, line: 71, baseType: !185, size: 8, offset: 96)
!12678 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !12644, file: !143, line: 74, baseType: !185, size: 8, offset: 104)
!12679 = !DIDerivedType(tag: DW_TAG_member, scope: !12644, file: !143, line: 90, baseType: !12680, size: 16, offset: 112)
!12680 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12644, file: !143, line: 90, size: 16, elements: !12681)
!12681 = !{!12682, !12687}
!12682 = !DIDerivedType(tag: DW_TAG_member, scope: !12680, file: !143, line: 91, baseType: !12683, size: 16)
!12683 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12680, file: !143, line: 91, size: 16, elements: !12684)
!12684 = !{!12685, !12686}
!12685 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !12683, file: !143, line: 96, baseType: !195, size: 8)
!12686 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !12683, file: !143, line: 97, baseType: !185, size: 8, offset: 8)
!12687 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !12680, file: !143, line: 100, baseType: !199, size: 16)
!12688 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !12644, file: !143, line: 107, baseType: !118, size: 32, offset: 128)
!12689 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !12644, file: !143, line: 127, baseType: !113, size: 32, offset: 160)
!12690 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !12644, file: !143, line: 131, baseType: !12691, size: 192, offset: 192)
!12691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !179, line: 244, size: 192, elements: !12692)
!12692 = !{!12693, !12694, !12700}
!12693 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !12691, file: !179, line: 245, baseType: !12650, size: 64)
!12694 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !12691, file: !179, line: 246, baseType: !12695, size: 32, offset: 64)
!12695 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !179, line: 242, baseType: !12696)
!12696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12697, size: 32)
!12697 = !DISubroutineType(types: !12698)
!12698 = !{null, !12699}
!12699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12691, size: 32)
!12700 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !12691, file: !179, line: 249, baseType: !116, size: 64, offset: 128)
!12701 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !12641, file: !143, line: 250, baseType: !12702, size: 288, offset: 384)
!12702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !216, line: 25, size: 288, elements: !12703)
!12703 = !{!12704, !12705, !12706, !12707, !12708, !12709, !12710, !12711, !12712}
!12704 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !12702, file: !216, line: 26, baseType: !118, size: 32)
!12705 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !12702, file: !216, line: 27, baseType: !118, size: 32, offset: 32)
!12706 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !12702, file: !216, line: 28, baseType: !118, size: 32, offset: 64)
!12707 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !12702, file: !216, line: 29, baseType: !118, size: 32, offset: 96)
!12708 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !12702, file: !216, line: 30, baseType: !118, size: 32, offset: 128)
!12709 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !12702, file: !216, line: 31, baseType: !118, size: 32, offset: 160)
!12710 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !12702, file: !216, line: 32, baseType: !118, size: 32, offset: 192)
!12711 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !12702, file: !216, line: 33, baseType: !118, size: 32, offset: 224)
!12712 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !12702, file: !216, line: 34, baseType: !118, size: 32, offset: 256)
!12713 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !12641, file: !143, line: 253, baseType: !113, size: 32, offset: 672)
!12714 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !12641, file: !143, line: 256, baseType: !12672, size: 64, offset: 704)
!12715 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12641, file: !143, line: 279, baseType: !230, size: 256, offset: 768)
!12716 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !12641, file: !143, line: 294, baseType: !119, size: 32, offset: 1024)
!12717 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !12641, file: !143, line: 300, baseType: !12718, size: 96, offset: 1056)
!12718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !143, line: 149, size: 96, elements: !12719)
!12719 = !{!12720, !12721, !12722}
!12720 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !12718, file: !143, line: 153, baseType: !22, size: 32)
!12721 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !12718, file: !143, line: 162, baseType: !239, size: 32, offset: 32)
!12722 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !12718, file: !143, line: 168, baseType: !239, size: 32, offset: 64)
!12723 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !12641, file: !143, line: 325, baseType: !12724, size: 32, offset: 1152)
!12724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12725, size: 32)
!12725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !245, line: 5073, size: 192, elements: !12726)
!12726 = !{!12727, !12733, !12734}
!12727 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12725, file: !245, line: 5074, baseType: !12728, size: 96)
!12728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !249, line: 56, size: 96, elements: !12729)
!12729 = !{!12730, !12731, !12732}
!12730 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12728, file: !249, line: 57, baseType: !252, size: 32)
!12731 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !12728, file: !249, line: 58, baseType: !113, size: 32, offset: 32)
!12732 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !12728, file: !249, line: 59, baseType: !239, size: 32, offset: 64)
!12733 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !12725, file: !245, line: 5075, baseType: !12672, size: 64, offset: 96)
!12734 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !12725, file: !245, line: 5076, baseType: !12735, size: 32, offset: 160)
!12735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !259, line: 43, size: 32, elements: !12736)
!12736 = !{!12737}
!12737 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !12735, file: !259, line: 52, baseType: !22, size: 32)
!12738 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !12641, file: !143, line: 343, baseType: !12739, size: 64, offset: 1184)
!12739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !216, line: 60, size: 64, elements: !12740)
!12740 = !{!12741, !12742}
!12741 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !12739, file: !216, line: 63, baseType: !118, size: 32)
!12742 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !12739, file: !216, line: 66, baseType: !118, size: 32, offset: 32)
!12743 = !{!12744, !12745, !12746}
!12744 = !DILocalVariable(name: "reason", arg: 1, scope: !12593, file: !3065, line: 209, type: !32)
!12745 = !DILocalVariable(name: "esf", arg: 2, scope: !12593, file: !3065, line: 209, type: !12596)
!12746 = !DILocalVariable(name: "thread", arg: 3, scope: !12593, file: !3065, line: 210, type: !12640)
!12747 = !DILocation(line: 0, scope: !12593)
!12748 = !DILocation(line: 212, column: 1, scope: !12593)
!12749 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3065, file: !3065, line: 214, type: !12750, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3061, retainedNodes: !12752)
!12750 = !DISubroutineType(types: !12751)
!12751 = !{null, !22, !22}
!12752 = !{!12753, !12754}
!12753 = !DILocalVariable(name: "start_addr", arg: 1, scope: !12749, file: !3065, line: 214, type: !22)
!12754 = !DILocalVariable(name: "end_addr", arg: 2, scope: !12749, file: !3065, line: 214, type: !22)
!12755 = !DILocation(line: 0, scope: !12749)
!12756 = !DILocation(line: 216, column: 1, scope: !12749)
!12757 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3065, file: !3065, line: 218, type: !12758, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3061, retainedNodes: !12760)
!12758 = !DISubroutineType(types: !12759)
!12759 = !{null, !284, !239}
!12760 = !{!12761, !12762}
!12761 = !DILocalVariable(name: "buf", arg: 1, scope: !12757, file: !3065, line: 218, type: !284)
!12762 = !DILocalVariable(name: "buflen", arg: 2, scope: !12757, file: !3065, line: 218, type: !239)
!12763 = !DILocation(line: 0, scope: !12757)
!12764 = !DILocation(line: 220, column: 1, scope: !12757)
!12765 = distinct !DISubprogram(name: "coredump_query", scope: !3065, file: !3065, line: 222, type: !12766, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3061, retainedNodes: !12768)
!12766 = !DISubroutineType(types: !12767)
!12767 = !{!119, !3064, !113}
!12768 = !{!12769, !12770}
!12769 = !DILocalVariable(name: "query_id", arg: 1, scope: !12765, file: !3065, line: 222, type: !3064)
!12770 = !DILocalVariable(name: "arg", arg: 2, scope: !12765, file: !3065, line: 222, type: !113)
!12771 = !DILocation(line: 0, scope: !12765)
!12772 = !DILocation(line: 224, column: 2, scope: !12765)
!12773 = distinct !DISubprogram(name: "coredump_cmd", scope: !3065, file: !3065, line: 227, type: !12774, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3061, retainedNodes: !12776)
!12774 = !DISubroutineType(types: !12775)
!12775 = !{!119, !3071, !113}
!12776 = !{!12777, !12778}
!12777 = !DILocalVariable(name: "query_id", arg: 1, scope: !12773, file: !3065, line: 227, type: !3071)
!12778 = !DILocalVariable(name: "arg", arg: 2, scope: !12773, file: !3065, line: 227, type: !113)
!12779 = !DILocation(line: 0, scope: !12773)
!12780 = !DILocation(line: 229, column: 2, scope: !12773)
!12781 = distinct !DISubprogram(name: "arch_system_halt", scope: !12782, file: !12782, line: 23, type: !6142, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3061, retainedNodes: !12783)
!12782 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12783 = !{!12784}
!12784 = !DILocalVariable(name: "reason", arg: 1, scope: !12781, file: !12782, line: 23, type: !32)
!12785 = !DILocation(line: 0, scope: !12781)
!12786 = !DILocation(line: 55, column: 2, scope: !12787, inlinedAt: !12791)
!12787 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6131, file: !6131, line: 42, type: !6132, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3061, retainedNodes: !12788)
!12788 = !{!12789, !12790}
!12789 = !DILocalVariable(name: "key", scope: !12787, file: !6131, line: 44, type: !32)
!12790 = !DILocalVariable(name: "tmp", scope: !12787, file: !6131, line: 53, type: !32)
!12791 = distinct !DILocation(line: 31, column: 8, scope: !12781)
!12792 = !{i64 2598819}
!12793 = !DILocation(line: 0, scope: !12787, inlinedAt: !12791)
!12794 = !DILocation(line: 32, column: 2, scope: !12781)
!12795 = !DILocation(line: 32, column: 2, scope: !12796)
!12796 = distinct !DILexicalBlock(scope: !12797, file: !12782, line: 32, column: 2)
!12797 = distinct !DILexicalBlock(scope: !12781, file: !12782, line: 32, column: 2)
!12798 = distinct !{!12798, !12799, !12800}
!12799 = !DILocation(line: 32, column: 2, scope: !12797)
!12800 = !DILocation(line: 34, column: 2, scope: !12797)
!12801 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !12782, file: !12782, line: 39, type: !12802, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3061, retainedNodes: !12804)
!12802 = !DISubroutineType(types: !12803)
!12803 = !{null, !32, !12596}
!12804 = !{!12805, !12806}
!12805 = !DILocalVariable(name: "reason", arg: 1, scope: !12801, file: !12782, line: 39, type: !32)
!12806 = !DILocalVariable(name: "esf", arg: 2, scope: !12801, file: !12782, line: 40, type: !12596)
!12807 = !DILocation(line: 0, scope: !12801)
!12808 = !DILocation(line: 45, column: 2, scope: !12809)
!12809 = distinct !DILexicalBlock(scope: !12810, file: !12782, line: 45, column: 2)
!12810 = distinct !DILexicalBlock(scope: !12811, file: !12782, line: 45, column: 2)
!12811 = distinct !DILexicalBlock(scope: !12812, file: !12782, line: 45, column: 2)
!12812 = distinct !DILexicalBlock(scope: !12801, file: !12782, line: 45, column: 2)
!12813 = !DILocation(line: 46, column: 2, scope: !12801)
!12814 = distinct !DISubprogram(name: "k_fatal_halt", scope: !12782, file: !12782, line: 81, type: !6142, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3061, retainedNodes: !12815)
!12815 = !{!12816}
!12816 = !DILocalVariable(name: "reason", arg: 1, scope: !12814, file: !12782, line: 81, type: !32)
!12817 = !DILocation(line: 0, scope: !12814)
!12818 = !DILocation(line: 83, column: 2, scope: !12814)
!12819 = distinct !DISubprogram(name: "z_fatal_error", scope: !12782, file: !12782, line: 96, type: !12802, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3061, retainedNodes: !12820)
!12820 = !{!12821, !12822, !12823, !12824}
!12821 = !DILocalVariable(name: "reason", arg: 1, scope: !12819, file: !12782, line: 96, type: !32)
!12822 = !DILocalVariable(name: "esf", arg: 2, scope: !12819, file: !12782, line: 96, type: !12596)
!12823 = !DILocalVariable(name: "key", scope: !12819, file: !12782, line: 102, type: !32)
!12824 = !DILocalVariable(name: "thread", scope: !12819, file: !12782, line: 103, type: !12640)
!12825 = !DILocation(line: 0, scope: !12819)
!12826 = !DILocation(line: 55, column: 2, scope: !12787, inlinedAt: !12827)
!12827 = distinct !DILocation(line: 102, column: 21, scope: !12819)
!12828 = !DILocation(line: 0, scope: !12787, inlinedAt: !12827)
!12829 = !DILocation(line: 104, column: 4, scope: !12819)
!12830 = !DILocation(line: 109, column: 2, scope: !12831)
!12831 = distinct !DILexicalBlock(scope: !12832, file: !12782, line: 109, column: 2)
!12832 = distinct !DILexicalBlock(scope: !12833, file: !12782, line: 109, column: 2)
!12833 = distinct !DILexicalBlock(scope: !12834, file: !12782, line: 109, column: 2)
!12834 = distinct !DILexicalBlock(scope: !12819, file: !12782, line: 109, column: 2)
!12835 = !DILocation(line: 119, column: 11, scope: !12836)
!12836 = distinct !DILexicalBlock(scope: !12819, file: !12782, line: 119, column: 6)
!12837 = !DILocation(line: 119, column: 20, scope: !12836)
!12838 = !DILocalVariable(name: "esf", arg: 1, scope: !12839, file: !7502, line: 71, type: !12596)
!12839 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !7502, file: !7502, line: 71, type: !12840, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3061, retainedNodes: !12842)
!12840 = !DISubroutineType(types: !12841)
!12841 = !{!345, !12596}
!12842 = !{!12838}
!12843 = !DILocation(line: 0, scope: !12839, inlinedAt: !12844)
!12844 = distinct !DILocation(line: 119, column: 23, scope: !12836)
!12845 = !DILocation(line: 73, column: 21, scope: !12839, inlinedAt: !12844)
!12846 = !DILocation(line: 73, column: 26, scope: !12839, inlinedAt: !12844)
!12847 = !DILocation(line: 73, column: 9, scope: !12839, inlinedAt: !12844)
!12848 = !DILocation(line: 119, column: 6, scope: !12819)
!12849 = !DILocation(line: 120, column: 3, scope: !12850)
!12850 = distinct !DILexicalBlock(scope: !12851, file: !12782, line: 120, column: 3)
!12851 = distinct !DILexicalBlock(scope: !12852, file: !12782, line: 120, column: 3)
!12852 = distinct !DILexicalBlock(scope: !12853, file: !12782, line: 120, column: 3)
!12853 = distinct !DILexicalBlock(scope: !12854, file: !12782, line: 120, column: 3)
!12854 = distinct !DILexicalBlock(scope: !12836, file: !12782, line: 119, column: 57)
!12855 = !DILocation(line: 121, column: 2, scope: !12854)
!12856 = !DILocation(line: 124, column: 2, scope: !12857)
!12857 = distinct !DILexicalBlock(scope: !12858, file: !12782, line: 124, column: 2)
!12858 = distinct !DILexicalBlock(scope: !12859, file: !12782, line: 124, column: 2)
!12859 = distinct !DILexicalBlock(scope: !12860, file: !12782, line: 124, column: 2)
!12860 = distinct !DILexicalBlock(scope: !12819, file: !12782, line: 124, column: 2)
!12861 = !DILocation(line: 131, column: 2, scope: !12819)
!12862 = !DILocation(line: 0, scope: !12839, inlinedAt: !12863)
!12863 = distinct !DILocation(line: 163, column: 24, scope: !12864)
!12864 = distinct !DILexicalBlock(scope: !12865, file: !12782, line: 163, column: 7)
!12865 = distinct !DILexicalBlock(scope: !12866, file: !12782, line: 160, column: 9)
!12866 = distinct !DILexicalBlock(scope: !12819, file: !12782, line: 146, column: 6)
!12867 = !DILocation(line: 73, column: 21, scope: !12839, inlinedAt: !12863)
!12868 = !DILocation(line: 73, column: 26, scope: !12839, inlinedAt: !12863)
!12869 = !DILocation(line: 73, column: 9, scope: !12839, inlinedAt: !12863)
!12870 = !DILocation(line: 163, column: 7, scope: !12865)
!12871 = !DILocalVariable(name: "key", arg: 1, scope: !12872, file: !6131, line: 84, type: !32)
!12872 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6131, file: !6131, line: 84, type: !6142, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3061, retainedNodes: !12873)
!12873 = !{!12871}
!12874 = !DILocation(line: 0, scope: !12872, inlinedAt: !12875)
!12875 = distinct !DILocation(line: 171, column: 4, scope: !12876)
!12876 = distinct !DILexicalBlock(scope: !12864, file: !12782, line: 163, column: 58)
!12877 = !DILocation(line: 95, column: 2, scope: !12872, inlinedAt: !12875)
!12878 = !{i64 2599636}
!12879 = !DILocation(line: 172, column: 4, scope: !12876)
!12880 = !DILocation(line: 163, column: 21, scope: !12864)
!12881 = !DILocation(line: 178, column: 15, scope: !12882)
!12882 = distinct !DILexicalBlock(scope: !12883, file: !12782, line: 178, column: 8)
!12883 = distinct !DILexicalBlock(scope: !12864, file: !12782, line: 174, column: 10)
!12884 = !DILocation(line: 0, scope: !12872, inlinedAt: !12885)
!12885 = distinct !DILocation(line: 179, column: 5, scope: !12886)
!12886 = distinct !DILexicalBlock(scope: !12882, file: !12782, line: 178, column: 38)
!12887 = !DILocation(line: 0, scope: !12872, inlinedAt: !12888)
!12888 = distinct !DILocation(line: 186, column: 2, scope: !12819)
!12889 = !DILocation(line: 178, column: 8, scope: !12883)
!12890 = !DILocation(line: 189, column: 3, scope: !12891)
!12891 = distinct !DILexicalBlock(scope: !12892, file: !12782, line: 188, column: 41)
!12892 = distinct !DILexicalBlock(scope: !12819, file: !12782, line: 188, column: 6)
!12893 = !DILocation(line: 191, column: 1, scope: !12819)
!12894 = distinct !DISubprogram(name: "k_current_get", scope: !245, file: !245, line: 530, type: !12895, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3061, retainedNodes: !2162)
!12895 = !DISubroutineType(types: !12896)
!12896 = !{!12897}
!12897 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !143, line: 347, baseType: !12640)
!12898 = !DILocation(line: 535, column: 9, scope: !12894)
!12899 = !DILocation(line: 535, column: 2, scope: !12894)
!12900 = distinct !DISubprogram(name: "reason_to_str", scope: !12782, file: !12782, line: 62, type: !12901, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3061, retainedNodes: !12903)
!12901 = !DISubroutineType(types: !12902)
!12902 = !{!278, !32}
!12903 = !{!12904}
!12904 = !DILocalVariable(name: "reason", arg: 1, scope: !12900, file: !12782, line: 62, type: !32)
!12905 = !DILocation(line: 0, scope: !12900)
!12906 = !DILocation(line: 64, column: 2, scope: !12900)
!12907 = !DILocation(line: 0, scope: !12908)
!12908 = distinct !DILexicalBlock(scope: !12900, file: !12782, line: 64, column: 18)
!12909 = !DILocation(line: 78, column: 1, scope: !12900)
!12910 = distinct !DISubprogram(name: "thread_name_get", scope: !12782, file: !12782, line: 51, type: !12911, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3061, retainedNodes: !12913)
!12911 = !DISubroutineType(types: !12912)
!12912 = !{!278, !12640}
!12913 = !{!12914, !12915}
!12914 = !DILocalVariable(name: "thread", arg: 1, scope: !12910, file: !12782, line: 51, type: !12640)
!12915 = !DILocalVariable(name: "thread_name", scope: !12910, file: !12782, line: 53, type: !278)
!12916 = !DILocation(line: 0, scope: !12910)
!12917 = !DILocation(line: 53, column: 36, scope: !12910)
!12918 = !DILocation(line: 53, column: 28, scope: !12910)
!12919 = !DILocation(line: 53, column: 47, scope: !12910)
!12920 = !DILocation(line: 55, column: 19, scope: !12921)
!12921 = distinct !DILexicalBlock(scope: !12910, file: !12782, line: 55, column: 6)
!12922 = !DILocation(line: 55, column: 28, scope: !12921)
!12923 = !DILocation(line: 55, column: 32, scope: !12921)
!12924 = !DILocation(line: 55, column: 47, scope: !12921)
!12925 = !DILocation(line: 55, column: 6, scope: !12910)
!12926 = !DILocation(line: 57, column: 2, scope: !12927)
!12927 = distinct !DILexicalBlock(scope: !12921, file: !12782, line: 55, column: 57)
!12928 = !DILocation(line: 59, column: 2, scope: !12910)
!12929 = distinct !DISubprogram(name: "k_thread_abort", scope: !3349, file: !3349, line: 188, type: !12930, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3061, retainedNodes: !12932)
!12930 = !DISubroutineType(types: !12931)
!12931 = !{null, !12897}
!12932 = !{!12933}
!12933 = !DILocalVariable(name: "thread", arg: 1, scope: !12929, file: !3349, line: 188, type: !12897)
!12934 = !DILocation(line: 0, scope: !12929)
!12935 = !DILocation(line: 197, column: 2, scope: !12936)
!12936 = distinct !DILexicalBlock(scope: !12929, file: !3349, line: 197, column: 2)
!12937 = !{i64 2155447056}
!12938 = !DILocation(line: 198, column: 2, scope: !12929)
!12939 = !DILocation(line: 199, column: 1, scope: !12929)
!12940 = distinct !DISubprogram(name: "z_current_get", scope: !3349, file: !3349, line: 173, type: !12895, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3061, retainedNodes: !2162)
!12941 = !DILocation(line: 180, column: 2, scope: !12942)
!12942 = distinct !DILexicalBlock(scope: !12940, file: !3349, line: 180, column: 2)
!12943 = !{i64 2155446988}
!12944 = !DILocation(line: 181, column: 9, scope: !12940)
!12945 = !DILocation(line: 181, column: 2, scope: !12940)
!12946 = distinct !DISubprogram(name: "z_early_memset", scope: !1961, file: !1961, line: 108, type: !12947, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1957, retainedNodes: !12949)
!12947 = !DISubroutineType(types: !12948)
!12948 = !{null, !113, !119, !239}
!12949 = !{!12950, !12951, !12952}
!12950 = !DILocalVariable(name: "dst", arg: 1, scope: !12946, file: !1961, line: 108, type: !113)
!12951 = !DILocalVariable(name: "c", arg: 2, scope: !12946, file: !1961, line: 108, type: !119)
!12952 = !DILocalVariable(name: "n", arg: 3, scope: !12946, file: !1961, line: 108, type: !239)
!12953 = !DILocation(line: 0, scope: !12946)
!12954 = !DILocation(line: 110, column: 9, scope: !12946)
!12955 = !DILocation(line: 111, column: 1, scope: !12946)
!12956 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1961, file: !1961, line: 121, type: !12957, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1957, retainedNodes: !12959)
!12957 = !DISubroutineType(types: !12958)
!12958 = !{null, !113, !13, !239}
!12959 = !{!12960, !12961, !12962}
!12960 = !DILocalVariable(name: "dst", arg: 1, scope: !12956, file: !1961, line: 121, type: !113)
!12961 = !DILocalVariable(name: "src", arg: 2, scope: !12956, file: !1961, line: 121, type: !13)
!12962 = !DILocalVariable(name: "n", arg: 3, scope: !12956, file: !1961, line: 121, type: !239)
!12963 = !DILocation(line: 0, scope: !12956)
!12964 = !DILocation(line: 123, column: 9, scope: !12956)
!12965 = !DILocation(line: 124, column: 1, scope: !12956)
!12966 = distinct !DISubprogram(name: "z_bss_zero", scope: !1961, file: !1961, line: 132, type: !3098, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1957, retainedNodes: !2162)
!12967 = !DILocation(line: 143, column: 2, scope: !12966)
!12968 = !DILocation(line: 145, column: 2, scope: !12966)
!12969 = !DILocation(line: 168, column: 1, scope: !12966)
!12970 = distinct !DISubprogram(name: "z_init_cpu", scope: !1961, file: !1961, line: 372, type: !8536, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1957, retainedNodes: !12971)
!12971 = !{!12972}
!12972 = !DILocalVariable(name: "id", arg: 1, scope: !12970, file: !1961, line: 372, type: !119)
!12973 = !DILocation(line: 0, scope: !12970)
!12974 = !DILocation(line: 374, column: 2, scope: !12970)
!12975 = !DILocation(line: 375, column: 34, scope: !12970)
!12976 = !DILocation(line: 375, column: 19, scope: !12970)
!12977 = !DILocation(line: 375, column: 31, scope: !12970)
!12978 = !DILocation(line: 376, column: 24, scope: !12970)
!12979 = !DILocation(line: 376, column: 19, scope: !12970)
!12980 = !DILocation(line: 376, column: 22, scope: !12970)
!12981 = !DILocation(line: 378, column: 26, scope: !12970)
!12982 = !DILocation(line: 378, column: 4, scope: !12970)
!12983 = !DILocation(line: 378, column: 50, scope: !12970)
!12984 = !DILocation(line: 377, column: 19, scope: !12970)
!12985 = !DILocation(line: 377, column: 29, scope: !12970)
!12986 = !DILocation(line: 384, column: 1, scope: !12970)
!12987 = distinct !DISubprogram(name: "init_idle_thread", scope: !1961, file: !1961, line: 343, type: !8536, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1957, retainedNodes: !12988)
!12988 = !{!12989, !12990, !12991, !12994}
!12989 = !DILocalVariable(name: "i", arg: 1, scope: !12987, file: !1961, line: 343, type: !119)
!12990 = !DILocalVariable(name: "thread", scope: !12987, file: !1961, line: 345, type: !2053)
!12991 = !DILocalVariable(name: "stack", scope: !12987, file: !1961, line: 346, type: !12992)
!12992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12993, size: 32)
!12993 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !109, line: 44, baseType: !2171)
!12994 = !DILocalVariable(name: "tname", scope: !12987, file: !1961, line: 354, type: !106)
!12995 = !DILocation(line: 0, scope: !12987)
!12996 = !DILocation(line: 345, column: 29, scope: !12987)
!12997 = !DILocation(line: 346, column: 28, scope: !12987)
!12998 = !DILocation(line: 362, column: 37, scope: !12987)
!12999 = !DILocation(line: 362, column: 36, scope: !12987)
!13000 = !DILocation(line: 361, column: 2, scope: !12987)
!13001 = !DILocation(line: 365, column: 2, scope: !12987)
!13002 = !DILocation(line: 370, column: 1, scope: !12987)
!13003 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !128, file: !128, line: 331, type: !13004, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1957, retainedNodes: !13006)
!13004 = !DISubroutineType(types: !13005)
!13005 = !{!106, !12992}
!13006 = !{!13007}
!13007 = !DILocalVariable(name: "sym", arg: 1, scope: !13003, file: !128, line: 331, type: !12992)
!13008 = !DILocation(line: 0, scope: !13003)
!13009 = !DILocation(line: 333, column: 21, scope: !13003)
!13010 = !DILocation(line: 333, column: 2, scope: !13003)
!13011 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13012, file: !13012, line: 155, type: !13013, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1957, retainedNodes: !13015)
!13012 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13013 = !DISubroutineType(types: !13014)
!13014 = !{null, !2053}
!13015 = !{!13016}
!13016 = !DILocalVariable(name: "thread", arg: 1, scope: !13011, file: !13012, line: 155, type: !2053)
!13017 = !DILocation(line: 0, scope: !13011)
!13018 = !DILocation(line: 157, column: 15, scope: !13011)
!13019 = !DILocation(line: 157, column: 28, scope: !13011)
!13020 = !DILocation(line: 158, column: 1, scope: !13011)
!13021 = distinct !DISubprogram(name: "z_cstart", scope: !1961, file: !1961, line: 501, type: !3098, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1957, retainedNodes: !13022)
!13022 = !{!13023}
!13023 = !DILocalVariable(name: "dummy_thread", scope: !13021, file: !1961, line: 518, type: !2054)
!13024 = !DILocation(line: 507, column: 2, scope: !13021)
!13025 = !DILocation(line: 43, column: 14, scope: !13026, inlinedAt: !13030)
!13026 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !13027, file: !13027, line: 40, type: !3098, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1957, retainedNodes: !13028)
!13027 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13028 = !{!13029}
!13029 = !DILocalVariable(name: "msp", scope: !13026, file: !13027, line: 42, type: !118)
!13030 = distinct !DILocation(line: 44, column: 2, scope: !13031, inlinedAt: !13033)
!13031 = distinct !DISubprogram(name: "arch_kernel_init", scope: !13032, file: !13032, line: 42, type: !3098, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1957, retainedNodes: !2162)
!13032 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13033 = distinct !DILocation(line: 510, column: 2, scope: !13021)
!13034 = !DILocation(line: 43, column: 3, scope: !13026, inlinedAt: !13030)
!13035 = !DILocation(line: 43, column: 60, scope: !13026, inlinedAt: !13030)
!13036 = !DILocation(line: 0, scope: !13026, inlinedAt: !13030)
!13037 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !13038, file: !6452, line: 1153, type: !118)
!13038 = distinct !DISubprogram(name: "__set_MSP", scope: !6452, file: !6452, line: 1153, type: !6547, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1957, retainedNodes: !13039)
!13039 = !{!13037}
!13040 = !DILocation(line: 0, scope: !13038, inlinedAt: !13041)
!13041 = distinct !DILocation(line: 46, column: 2, scope: !13026, inlinedAt: !13030)
!13042 = !DILocation(line: 1155, column: 3, scope: !13038, inlinedAt: !13041)
!13043 = !{i64 4134415}
!13044 = !DILocation(line: 62, column: 11, scope: !13026, inlinedAt: !13030)
!13045 = !DILocation(line: 102, column: 2, scope: !13046, inlinedAt: !13047)
!13046 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !7502, file: !7502, line: 97, type: !3098, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1957, retainedNodes: !2162)
!13047 = distinct !DILocation(line: 45, column: 2, scope: !13031, inlinedAt: !13033)
!13048 = !DILocation(line: 108, column: 2, scope: !13046, inlinedAt: !13047)
!13049 = !DILocation(line: 112, column: 2, scope: !13046, inlinedAt: !13047)
!13050 = !DILocation(line: 113, column: 2, scope: !13046, inlinedAt: !13047)
!13051 = !DILocation(line: 114, column: 2, scope: !13046, inlinedAt: !13047)
!13052 = !DILocation(line: 116, column: 2, scope: !13046, inlinedAt: !13047)
!13053 = !DILocation(line: 123, column: 13, scope: !13046, inlinedAt: !13047)
!13054 = !DILocation(line: 46, column: 2, scope: !13031, inlinedAt: !13033)
!13055 = !DILocation(line: 47, column: 2, scope: !13031, inlinedAt: !13033)
!13056 = !DILocation(line: 174, column: 12, scope: !13057, inlinedAt: !13058)
!13057 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !7502, file: !7502, line: 169, type: !3098, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1957, retainedNodes: !2162)
!13058 = distinct !DILocation(line: 48, column: 2, scope: !13031, inlinedAt: !13033)
!13059 = !DILocation(line: 179, column: 12, scope: !13057, inlinedAt: !13058)
!13060 = !DILocation(line: 50, column: 2, scope: !13031, inlinedAt: !13033)
!13061 = !DILocation(line: 57, column: 2, scope: !13031, inlinedAt: !13033)
!13062 = !DILocation(line: 518, column: 2, scope: !13021)
!13063 = !DILocation(line: 518, column: 18, scope: !13021)
!13064 = !DILocation(line: 520, column: 2, scope: !13021)
!13065 = !DILocation(line: 523, column: 2, scope: !13021)
!13066 = !DILocation(line: 526, column: 2, scope: !13021)
!13067 = !DILocation(line: 527, column: 2, scope: !13021)
!13068 = !DILocation(line: 543, column: 24, scope: !13021)
!13069 = !DILocation(line: 543, column: 2, scope: !13021)
!13070 = !DILocation(line: 0, scope: !2195)
!13071 = !DILocation(line: 246, column: 15, scope: !2213)
!13072 = !DILocation(line: 246, column: 36, scope: !2212)
!13073 = !DILocation(line: 246, column: 2, scope: !2213)
!13074 = !DILocation(line: 247, column: 37, scope: !2211)
!13075 = !DILocation(line: 0, scope: !2211)
!13076 = !DILocation(line: 248, column: 19, scope: !2211)
!13077 = !DILocation(line: 248, column: 12, scope: !2211)
!13078 = !DILocation(line: 250, column: 11, scope: !13079)
!13079 = distinct !DILexicalBlock(scope: !2211, file: !1961, line: 250, column: 7)
!13080 = !DILocation(line: 250, column: 7, scope: !2211)
!13081 = !DILocation(line: 254, column: 11, scope: !13082)
!13082 = distinct !DILexicalBlock(scope: !13083, file: !1961, line: 254, column: 8)
!13083 = distinct !DILexicalBlock(scope: !13079, file: !1961, line: 250, column: 20)
!13084 = !DILocation(line: 254, column: 8, scope: !13083)
!13085 = !DILocation(line: 255, column: 9, scope: !13086)
!13086 = distinct !DILexicalBlock(scope: !13082, file: !1961, line: 254, column: 17)
!13087 = !DILocation(line: 258, column: 9, scope: !13086)
!13088 = !DILocation(line: 261, column: 28, scope: !13086)
!13089 = !DILocation(line: 261, column: 10, scope: !13086)
!13090 = !DILocation(line: 261, column: 17, scope: !13086)
!13091 = !DILocation(line: 261, column: 26, scope: !13086)
!13092 = !DILocation(line: 262, column: 4, scope: !13086)
!13093 = !DILocation(line: 263, column: 9, scope: !13083)
!13094 = !DILocation(line: 263, column: 16, scope: !13083)
!13095 = !DILocation(line: 263, column: 28, scope: !13083)
!13096 = !DILocation(line: 264, column: 3, scope: !13083)
!13097 = !DILocation(line: 246, column: 60, scope: !2212)
!13098 = distinct !{!13098, !13073, !13099}
!13099 = !DILocation(line: 265, column: 2, scope: !2213)
!13100 = !DILocation(line: 266, column: 1, scope: !2195)
!13101 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !533, file: !533, line: 1814, type: !6492, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1957, retainedNodes: !13102)
!13102 = !{!13103, !13104}
!13103 = !DILocalVariable(name: "IRQn", arg: 1, scope: !13101, file: !533, line: 1814, type: !800)
!13104 = !DILocalVariable(name: "priority", arg: 2, scope: !13101, file: !533, line: 1814, type: !118)
!13105 = !DILocation(line: 0, scope: !13101)
!13106 = !DILocation(line: 1822, column: 48, scope: !13107)
!13107 = distinct !DILexicalBlock(scope: !13108, file: !533, line: 1821, column: 3)
!13108 = distinct !DILexicalBlock(scope: !13101, file: !533, line: 1816, column: 7)
!13109 = !DILocation(line: 1822, column: 32, scope: !13107)
!13110 = !DILocation(line: 1822, column: 40, scope: !13107)
!13111 = !DILocation(line: 1822, column: 5, scope: !13107)
!13112 = !DILocation(line: 1822, column: 46, scope: !13107)
!13113 = !DILocation(line: 1824, column: 1, scope: !13101)
!13114 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !13032, file: !13032, line: 32, type: !3098, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2162)
!13115 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !13116, file: !13116, line: 215, type: !13013, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1957, retainedNodes: !13117)
!13116 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13117 = !{!13118}
!13118 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !13115, file: !13116, line: 215, type: !2053)
!13119 = !DILocation(line: 0, scope: !13115)
!13120 = !DILocation(line: 217, column: 21, scope: !13115)
!13121 = !DILocation(line: 217, column: 34, scope: !13115)
!13122 = !DILocation(line: 221, column: 21, scope: !13115)
!13123 = !DILocation(line: 221, column: 34, scope: !13115)
!13124 = !DILocation(line: 223, column: 27, scope: !13115)
!13125 = !DILocation(line: 223, column: 33, scope: !13115)
!13126 = !DILocation(line: 224, column: 27, scope: !13115)
!13127 = !DILocation(line: 224, column: 32, scope: !13115)
!13128 = !DILocation(line: 232, column: 16, scope: !13115)
!13129 = !DILocation(line: 232, column: 30, scope: !13115)
!13130 = !DILocation(line: 239, column: 24, scope: !13115)
!13131 = !DILocation(line: 240, column: 1, scope: !13115)
!13132 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1961, file: !1961, line: 399, type: !13133, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1957, retainedNodes: !13135)
!13133 = !DISubroutineType(types: !13134)
!13134 = !{!106}
!13135 = !{!13136}
!13136 = !DILocalVariable(name: "stack_ptr", scope: !13132, file: !1961, line: 401, type: !106)
!13137 = !DILocation(line: 404, column: 2, scope: !13132)
!13138 = !DILocation(line: 416, column: 24, scope: !13132)
!13139 = !DILocation(line: 418, column: 14, scope: !13132)
!13140 = !DILocation(line: 0, scope: !13132)
!13141 = !DILocation(line: 423, column: 2, scope: !13132)
!13142 = !DILocation(line: 424, column: 2, scope: !13132)
!13143 = !DILocation(line: 426, column: 2, scope: !13132)
!13144 = !DILocation(line: 428, column: 2, scope: !13132)
!13145 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1961, file: !1961, line: 432, type: !13146, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1957, retainedNodes: !13148)
!13146 = !DISubroutineType(types: !13147)
!13147 = !{null, !106}
!13148 = !{!13149}
!13149 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !13145, file: !1961, line: 432, type: !106)
!13150 = !DILocation(line: 0, scope: !13145)
!13151 = !DILocation(line: 435, column: 2, scope: !13145)
!13152 = !DILocation(line: 445, column: 2, scope: !13145)
!13153 = distinct !DISubprogram(name: "bg_thread_main", scope: !1961, file: !1961, line: 277, type: !111, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1957, retainedNodes: !13154)
!13154 = !{!13155, !13156, !13157}
!13155 = !DILocalVariable(name: "unused1", arg: 1, scope: !13153, file: !1961, line: 277, type: !113)
!13156 = !DILocalVariable(name: "unused2", arg: 2, scope: !13153, file: !1961, line: 277, type: !113)
!13157 = !DILocalVariable(name: "unused3", arg: 3, scope: !13153, file: !1961, line: 277, type: !113)
!13158 = !DILocation(line: 0, scope: !13153)
!13159 = !DILocation(line: 291, column: 20, scope: !13153)
!13160 = !DILocation(line: 293, column: 2, scope: !13153)
!13161 = !DILocation(line: 297, column: 2, scope: !13153)
!13162 = !DILocation(line: 305, column: 2, scope: !13153)
!13163 = !DILocation(line: 307, column: 2, scope: !13153)
!13164 = !DILocation(line: 330, column: 8, scope: !13153)
!13165 = !DILocation(line: 333, column: 34, scope: !13153)
!13166 = !DILocation(line: 339, column: 1, scope: !13153)
!13167 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2226, file: !2226, line: 45, type: !13168, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !13176)
!13168 = !DISubroutineType(types: !13169)
!13169 = !{null, !13170, !113}
!13170 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !245, line: 103, baseType: !13171)
!13171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13172, size: 32)
!13172 = !DISubroutineType(types: !13173)
!13173 = !{null, !13174, !113}
!13174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13175, size: 32)
!13175 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2231)
!13176 = !{!13177, !13178}
!13177 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13167, file: !2226, line: 45, type: !13170)
!13178 = !DILocalVariable(name: "user_data", arg: 2, scope: !13167, file: !2226, line: 45, type: !113)
!13179 = !DILocation(line: 0, scope: !13167)
!13180 = !DILocation(line: 71, column: 1, scope: !13167)
!13181 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2226, file: !2226, line: 73, type: !13168, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !13182)
!13182 = !{!13183, !13184}
!13183 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13181, file: !2226, line: 73, type: !13170)
!13184 = !DILocalVariable(name: "user_data", arg: 2, scope: !13181, file: !2226, line: 73, type: !113)
!13185 = !DILocation(line: 0, scope: !13181)
!13186 = !DILocation(line: 95, column: 1, scope: !13181)
!13187 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2226, file: !2226, line: 97, type: !7503, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !2162)
!13188 = !DILocation(line: 1031, column: 3, scope: !13189, inlinedAt: !13192)
!13189 = distinct !DISubprogram(name: "__get_IPSR", scope: !6452, file: !6452, line: 1027, type: !3336, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !13190)
!13190 = !{!13191}
!13191 = !DILocalVariable(name: "result", scope: !13189, file: !6452, line: 1029, type: !118)
!13192 = distinct !DILocation(line: 48, column: 10, scope: !13193, inlinedAt: !13194)
!13193 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7502, file: !7502, line: 46, type: !7503, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !2162)
!13194 = distinct !DILocation(line: 99, column: 9, scope: !13187)
!13195 = !{i64 4140066}
!13196 = !DILocation(line: 0, scope: !13189, inlinedAt: !13192)
!13197 = !DILocation(line: 48, column: 9, scope: !13193, inlinedAt: !13194)
!13198 = !DILocation(line: 99, column: 2, scope: !13187)
!13199 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2226, file: !2226, line: 106, type: !3098, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !2162)
!13200 = !DILocation(line: 108, column: 2, scope: !13199)
!13201 = !DILocation(line: 108, column: 17, scope: !13199)
!13202 = !DILocation(line: 108, column: 30, scope: !13199)
!13203 = !DILocation(line: 109, column: 1, scope: !13199)
!13204 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2226, file: !2226, line: 116, type: !3098, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !2162)
!13205 = !DILocation(line: 118, column: 2, scope: !13204)
!13206 = !DILocation(line: 118, column: 17, scope: !13204)
!13207 = !DILocation(line: 118, column: 30, scope: !13204)
!13208 = !DILocation(line: 119, column: 1, scope: !13204)
!13209 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2226, file: !2226, line: 126, type: !7503, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !2162)
!13210 = !DILocation(line: 128, column: 10, scope: !13209)
!13211 = !DILocation(line: 128, column: 25, scope: !13209)
!13212 = !DILocation(line: 128, column: 38, scope: !13209)
!13213 = !DILocation(line: 128, column: 53, scope: !13209)
!13214 = !DILocation(line: 128, column: 2, scope: !13209)
!13215 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2226, file: !2226, line: 187, type: !13216, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !13218)
!13216 = !DISubroutineType(types: !13217)
!13217 = !{!119, !2230, !278}
!13218 = !{!13219, !13220}
!13219 = !DILocalVariable(name: "thread", arg: 1, scope: !13215, file: !2226, line: 187, type: !2230)
!13220 = !DILocalVariable(name: "value", arg: 2, scope: !13215, file: !2226, line: 187, type: !278)
!13221 = !DILocation(line: 0, scope: !13215)
!13222 = !DILocation(line: 190, column: 13, scope: !13223)
!13223 = distinct !DILexicalBlock(scope: !13215, file: !2226, line: 190, column: 6)
!13224 = !DILocation(line: 190, column: 6, scope: !13215)
!13225 = !DILocation(line: 194, column: 10, scope: !13215)
!13226 = !DILocation(line: 194, column: 2, scope: !13215)
!13227 = !DILocation(line: 195, column: 2, scope: !13215)
!13228 = !DILocation(line: 195, column: 47, scope: !13215)
!13229 = !DILocation(line: 199, column: 2, scope: !13215)
!13230 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2226, file: !2226, line: 238, type: !13231, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !13233)
!13231 = !DISubroutineType(types: !13232)
!13232 = !{!278, !2230}
!13233 = !{!13234}
!13234 = !DILocalVariable(name: "thread", arg: 1, scope: !13230, file: !2226, line: 238, type: !2230)
!13235 = !DILocation(line: 0, scope: !13230)
!13236 = !DILocation(line: 241, column: 23, scope: !13230)
!13237 = !DILocation(line: 241, column: 2, scope: !13230)
!13238 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2226, file: !2226, line: 248, type: !13239, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !13241)
!13239 = !DISubroutineType(types: !13240)
!13240 = !{!119, !2229, !106, !239}
!13241 = !{!13242, !13243, !13244}
!13242 = !DILocalVariable(name: "thread", arg: 1, scope: !13238, file: !2226, line: 248, type: !2229)
!13243 = !DILocalVariable(name: "buf", arg: 2, scope: !13238, file: !2226, line: 248, type: !106)
!13244 = !DILocalVariable(name: "size", arg: 3, scope: !13238, file: !2226, line: 248, type: !239)
!13245 = !DILocation(line: 0, scope: !13238)
!13246 = !DILocation(line: 251, column: 15, scope: !13238)
!13247 = !DILocation(line: 251, column: 2, scope: !13238)
!13248 = !DILocation(line: 252, column: 2, scope: !13238)
!13249 = !DILocation(line: 0, scope: !2225)
!13250 = !DILocation(line: 281, column: 11, scope: !13251)
!13251 = distinct !DILexicalBlock(scope: !2225, file: !2226, line: 281, column: 6)
!13252 = !DILocation(line: 281, column: 20, scope: !13251)
!13253 = !DILocation(line: 275, column: 45, scope: !2225)
!13254 = !DILocation(line: 285, column: 10, scope: !2225)
!13255 = !DILocation(line: 0, scope: !2349)
!13256 = !DILocation(line: 293, column: 39, scope: !13257)
!13257 = distinct !DILexicalBlock(scope: !2349, file: !2226, line: 293, column: 2)
!13258 = !DILocation(line: 293, column: 2, scope: !2349)
!13259 = !DILocation(line: 273, column: 14, scope: !2225)
!13260 = !DILocation(line: 309, column: 2, scope: !2225)
!13261 = !DILocation(line: 309, column: 11, scope: !2225)
!13262 = !DILocation(line: 311, column: 2, scope: !2225)
!13263 = !DILocation(line: 293, column: 26, scope: !13257)
!13264 = !DILocation(line: 294, column: 9, scope: !13265)
!13265 = distinct !DILexicalBlock(scope: !13257, file: !2226, line: 293, column: 54)
!13266 = !DILocation(line: 295, column: 21, scope: !13267)
!13267 = distinct !DILexicalBlock(scope: !13265, file: !2226, line: 295, column: 7)
!13268 = !DILocation(line: 295, column: 28, scope: !13267)
!13269 = !DILocation(line: 295, column: 7, scope: !13265)
!13270 = !DILocation(line: 299, column: 25, scope: !13265)
!13271 = !DILocation(line: 299, column: 41, scope: !13265)
!13272 = !DILocation(line: 300, column: 7, scope: !13265)
!13273 = !DILocation(line: 300, column: 26, scope: !13265)
!13274 = !DILocation(line: 299, column: 10, scope: !13265)
!13275 = !DILocation(line: 299, column: 7, scope: !13265)
!13276 = !DILocation(line: 302, column: 16, scope: !13265)
!13277 = !DILocation(line: 304, column: 20, scope: !13278)
!13278 = distinct !DILexicalBlock(scope: !13265, file: !2226, line: 304, column: 7)
!13279 = !DILocation(line: 304, column: 7, scope: !13265)
!13280 = !DILocation(line: 305, column: 26, scope: !13281)
!13281 = distinct !DILexicalBlock(scope: !13278, file: !2226, line: 304, column: 26)
!13282 = !DILocation(line: 305, column: 42, scope: !13281)
!13283 = !DILocation(line: 305, column: 11, scope: !13281)
!13284 = !DILocation(line: 305, column: 8, scope: !13281)
!13285 = !DILocation(line: 306, column: 3, scope: !13281)
!13286 = !DILocation(line: 293, column: 50, scope: !13257)
!13287 = !DILocation(line: 312, column: 1, scope: !2225)
!13288 = distinct !DISubprogram(name: "copy_bytes", scope: !2226, file: !2226, line: 261, type: !13289, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !13291)
!13289 = !DISubroutineType(types: !13290)
!13290 = !{!239, !106, !239, !278, !239}
!13291 = !{!13292, !13293, !13294, !13295, !13296}
!13292 = !DILocalVariable(name: "dest", arg: 1, scope: !13288, file: !2226, line: 261, type: !106)
!13293 = !DILocalVariable(name: "dest_size", arg: 2, scope: !13288, file: !2226, line: 261, type: !239)
!13294 = !DILocalVariable(name: "src", arg: 3, scope: !13288, file: !2226, line: 261, type: !278)
!13295 = !DILocalVariable(name: "src_size", arg: 4, scope: !13288, file: !2226, line: 261, type: !239)
!13296 = !DILocalVariable(name: "bytes_to_copy", scope: !13288, file: !2226, line: 263, type: !239)
!13297 = !DILocation(line: 0, scope: !13288)
!13298 = !DILocation(line: 265, column: 18, scope: !13288)
!13299 = !DILocation(line: 266, column: 2, scope: !13288)
!13300 = !DILocation(line: 268, column: 2, scope: !13288)
!13301 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2226, file: !2226, line: 383, type: !13302, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !13304)
!13302 = !DISubroutineType(types: !13303)
!13303 = !{null, !2230}
!13304 = !{!13305}
!13305 = !DILocalVariable(name: "thread", arg: 1, scope: !13301, file: !2226, line: 383, type: !2230)
!13306 = !DILocation(line: 0, scope: !13301)
!13307 = !DILocation(line: 387, column: 2, scope: !13301)
!13308 = !DILocation(line: 388, column: 1, scope: !13301)
!13309 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2226, file: !2226, line: 528, type: !13310, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !13317)
!13310 = !DISubroutineType(types: !13311)
!13311 = !{!106, !2230, !13312, !239, !108, !113, !113, !113, !119, !118, !278}
!13312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13313, size: 32)
!13313 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !109, line: 44, baseType: !13314)
!13314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !128, line: 47, size: 8, elements: !13315)
!13315 = !{!13316}
!13316 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13314, file: !128, line: 48, baseType: !107, size: 8)
!13317 = !{!13318, !13319, !13320, !13321, !13322, !13323, !13324, !13325, !13326, !13327, !13328}
!13318 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13309, file: !2226, line: 528, type: !2230)
!13319 = !DILocalVariable(name: "stack", arg: 2, scope: !13309, file: !2226, line: 529, type: !13312)
!13320 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13309, file: !2226, line: 529, type: !239)
!13321 = !DILocalVariable(name: "entry", arg: 4, scope: !13309, file: !2226, line: 530, type: !108)
!13322 = !DILocalVariable(name: "p1", arg: 5, scope: !13309, file: !2226, line: 531, type: !113)
!13323 = !DILocalVariable(name: "p2", arg: 6, scope: !13309, file: !2226, line: 531, type: !113)
!13324 = !DILocalVariable(name: "p3", arg: 7, scope: !13309, file: !2226, line: 531, type: !113)
!13325 = !DILocalVariable(name: "prio", arg: 8, scope: !13309, file: !2226, line: 532, type: !119)
!13326 = !DILocalVariable(name: "options", arg: 9, scope: !13309, file: !2226, line: 532, type: !118)
!13327 = !DILocalVariable(name: "name", arg: 10, scope: !13309, file: !2226, line: 532, type: !278)
!13328 = !DILocalVariable(name: "stack_ptr", scope: !13309, file: !2226, line: 534, type: !106)
!13329 = !DILocation(line: 0, scope: !13309)
!13330 = !DILocation(line: 536, column: 2, scope: !13331)
!13331 = distinct !DILexicalBlock(scope: !13332, file: !2226, line: 536, column: 2)
!13332 = distinct !DILexicalBlock(scope: !13333, file: !2226, line: 536, column: 2)
!13333 = distinct !DILexicalBlock(scope: !13309, file: !2226, line: 536, column: 2)
!13334 = !DILocation(line: 536, column: 2, scope: !13335)
!13335 = distinct !DILexicalBlock(scope: !13331, file: !2226, line: 536, column: 2)
!13336 = !DILocation(line: 550, column: 28, scope: !13309)
!13337 = !DILocation(line: 550, column: 2, scope: !13309)
!13338 = !DILocation(line: 553, column: 34, scope: !13309)
!13339 = !DILocation(line: 553, column: 2, scope: !13309)
!13340 = !DILocation(line: 554, column: 14, scope: !13309)
!13341 = !DILocation(line: 564, column: 2, scope: !13309)
!13342 = !DILocation(line: 567, column: 14, scope: !13309)
!13343 = !DILocation(line: 567, column: 24, scope: !13309)
!13344 = !DILocation(line: 594, column: 11, scope: !13345)
!13345 = distinct !DILexicalBlock(scope: !13309, file: !2226, line: 594, column: 6)
!13346 = !DILocation(line: 0, scope: !13345)
!13347 = !DILocation(line: 594, column: 6, scope: !13309)
!13348 = !DILocation(line: 595, column: 3, scope: !13349)
!13349 = distinct !DILexicalBlock(scope: !13345, file: !2226, line: 594, column: 20)
!13350 = !DILocation(line: 598, column: 3, scope: !13349)
!13351 = !DILocation(line: 598, column: 52, scope: !13349)
!13352 = !DILocation(line: 599, column: 2, scope: !13349)
!13353 = !DILocation(line: 600, column: 23, scope: !13354)
!13354 = distinct !DILexicalBlock(scope: !13345, file: !2226, line: 599, column: 9)
!13355 = !DILocation(line: 612, column: 7, scope: !13356)
!13356 = distinct !DILexicalBlock(scope: !13309, file: !2226, line: 612, column: 6)
!13357 = !DILocation(line: 612, column: 6, scope: !13309)
!13358 = !DILocation(line: 627, column: 40, scope: !13309)
!13359 = !DILocation(line: 637, column: 2, scope: !13309)
!13360 = !DILocation(line: 613, column: 15, scope: !13361)
!13361 = distinct !DILexicalBlock(scope: !13356, file: !2226, line: 612, column: 17)
!13362 = !DILocation(line: 613, column: 29, scope: !13361)
!13363 = !DILocation(line: 638, column: 1, scope: !13309)
!13364 = distinct !DISubprogram(name: "z_is_idle_thread_entry", scope: !13012, file: !13012, line: 78, type: !13365, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !13367)
!13365 = !DISubroutineType(types: !13366)
!13366 = !{!345, !113}
!13367 = !{!13368}
!13368 = !DILocalVariable(name: "entry_point", arg: 1, scope: !13364, file: !13012, line: 78, type: !113)
!13369 = !DILocation(line: 0, scope: !13364)
!13370 = !DILocation(line: 80, column: 21, scope: !13364)
!13371 = !DILocation(line: 80, column: 2, scope: !13364)
!13372 = distinct !DISubprogram(name: "z_waitq_init", scope: !13373, file: !13373, line: 47, type: !13374, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !13376)
!13373 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13374 = !DISubroutineType(types: !13375)
!13375 = !{null, !2261}
!13376 = !{!13377}
!13377 = !DILocalVariable(name: "w", arg: 1, scope: !13372, file: !13373, line: 47, type: !2261)
!13378 = !DILocation(line: 0, scope: !13372)
!13379 = !DILocation(line: 49, column: 21, scope: !13372)
!13380 = !DILocation(line: 49, column: 2, scope: !13372)
!13381 = !DILocation(line: 50, column: 1, scope: !13372)
!13382 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2226, file: !2226, line: 791, type: !13383, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !13386)
!13383 = !DISubroutineType(types: !13384)
!13384 = !{null, !13385, !119, !118, !32}
!13385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2234, size: 32)
!13386 = !{!13387, !13388, !13389, !13390}
!13387 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13382, file: !2226, line: 791, type: !13385)
!13388 = !DILocalVariable(name: "priority", arg: 2, scope: !13382, file: !2226, line: 791, type: !119)
!13389 = !DILocalVariable(name: "initial_state", arg: 3, scope: !13382, file: !2226, line: 792, type: !118)
!13390 = !DILocalVariable(name: "options", arg: 4, scope: !13382, file: !2226, line: 792, type: !32)
!13391 = !DILocation(line: 0, scope: !13382)
!13392 = !DILocation(line: 795, column: 15, scope: !13382)
!13393 = !DILocation(line: 795, column: 25, scope: !13382)
!13394 = !DILocation(line: 796, column: 30, scope: !13382)
!13395 = !DILocation(line: 796, column: 15, scope: !13382)
!13396 = !DILocation(line: 796, column: 28, scope: !13382)
!13397 = !DILocation(line: 797, column: 30, scope: !13382)
!13398 = !DILocation(line: 797, column: 15, scope: !13382)
!13399 = !DILocation(line: 797, column: 28, scope: !13382)
!13400 = !DILocation(line: 799, column: 22, scope: !13382)
!13401 = !DILocation(line: 799, column: 15, scope: !13382)
!13402 = !DILocation(line: 799, column: 20, scope: !13382)
!13403 = !DILocation(line: 801, column: 15, scope: !13382)
!13404 = !DILocation(line: 801, column: 28, scope: !13382)
!13405 = !DILocation(line: 814, column: 2, scope: !13382)
!13406 = !DILocation(line: 815, column: 1, scope: !13382)
!13407 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2226, file: !2226, line: 449, type: !13408, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !13410)
!13408 = !DISubroutineType(types: !13409)
!13409 = !{!106, !2230, !13312, !239}
!13410 = !{!13411, !13412, !13413, !13414, !13415, !13416, !13417, !13418}
!13411 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13407, file: !2226, line: 449, type: !2230)
!13412 = !DILocalVariable(name: "stack", arg: 2, scope: !13407, file: !2226, line: 450, type: !13312)
!13413 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13407, file: !2226, line: 450, type: !239)
!13414 = !DILocalVariable(name: "stack_obj_size", scope: !13407, file: !2226, line: 452, type: !239)
!13415 = !DILocalVariable(name: "stack_buf_size", scope: !13407, file: !2226, line: 452, type: !239)
!13416 = !DILocalVariable(name: "stack_ptr", scope: !13407, file: !2226, line: 453, type: !106)
!13417 = !DILocalVariable(name: "stack_buf_start", scope: !13407, file: !2226, line: 453, type: !106)
!13418 = !DILocalVariable(name: "delta", scope: !13407, file: !2226, line: 454, type: !239)
!13419 = !DILocation(line: 0, scope: !13407)
!13420 = !DILocation(line: 465, column: 20, scope: !13421)
!13421 = distinct !DILexicalBlock(scope: !13407, file: !2226, line: 463, column: 2)
!13422 = !DILocation(line: 466, column: 21, scope: !13421)
!13423 = !DILocation(line: 473, column: 28, scope: !13407)
!13424 = !DILocation(line: 514, column: 33, scope: !13407)
!13425 = !DILocation(line: 514, column: 25, scope: !13407)
!13426 = !DILocation(line: 514, column: 31, scope: !13407)
!13427 = !DILocation(line: 515, column: 25, scope: !13407)
!13428 = !DILocation(line: 515, column: 30, scope: !13407)
!13429 = !DILocation(line: 516, column: 25, scope: !13407)
!13430 = !DILocation(line: 516, column: 31, scope: !13407)
!13431 = !DILocation(line: 520, column: 2, scope: !13407)
!13432 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !128, file: !128, line: 331, type: !13433, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !13435)
!13433 = !DISubroutineType(types: !13434)
!13434 = !{!106, !13312}
!13435 = !{!13436}
!13436 = !DILocalVariable(name: "sym", arg: 1, scope: !13432, file: !128, line: 331, type: !13312)
!13437 = !DILocation(line: 0, scope: !13432)
!13438 = !DILocation(line: 333, column: 21, scope: !13432)
!13439 = !DILocation(line: 333, column: 2, scope: !13432)
!13440 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !13441, file: !13441, line: 40, type: !13442, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !13444)
!13441 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13442 = !DISubroutineType(types: !13443)
!13443 = !{null, !13385}
!13444 = !{!13445}
!13445 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13440, file: !13441, line: 40, type: !13385)
!13446 = !DILocation(line: 0, scope: !13440)
!13447 = !DILocation(line: 42, column: 31, scope: !13440)
!13448 = !DILocation(line: 42, column: 2, scope: !13440)
!13449 = !DILocation(line: 43, column: 1, scope: !13440)
!13450 = distinct !DISubprogram(name: "z_init_timeout", scope: !13441, file: !13441, line: 25, type: !2287, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !13451)
!13451 = !{!13452}
!13452 = !DILocalVariable(name: "to", arg: 1, scope: !13450, file: !13441, line: 25, type: !2289)
!13453 = !DILocation(line: 0, scope: !13450)
!13454 = !DILocation(line: 27, column: 22, scope: !13450)
!13455 = !DILocation(line: 27, column: 2, scope: !13450)
!13456 = !DILocation(line: 28, column: 1, scope: !13450)
!13457 = distinct !DISubprogram(name: "sys_dnode_init", scope: !153, file: !153, line: 211, type: !13458, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !13460)
!13458 = !DISubroutineType(types: !13459)
!13459 = !{null, !2336}
!13460 = !{!13461}
!13461 = !DILocalVariable(name: "node", arg: 1, scope: !13457, file: !153, line: 211, type: !2336)
!13462 = !DILocation(line: 0, scope: !13457)
!13463 = !DILocation(line: 213, column: 8, scope: !13457)
!13464 = !DILocation(line: 213, column: 13, scope: !13457)
!13465 = !DILocation(line: 214, column: 8, scope: !13457)
!13466 = !DILocation(line: 214, column: 13, scope: !13457)
!13467 = !DILocation(line: 215, column: 1, scope: !13457)
!13468 = distinct !DISubprogram(name: "sys_dlist_init", scope: !153, file: !153, line: 197, type: !13469, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !13472)
!13469 = !DISubroutineType(types: !13470)
!13470 = !{null, !13471}
!13471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2266, size: 32)
!13472 = !{!13473}
!13473 = !DILocalVariable(name: "list", arg: 1, scope: !13468, file: !153, line: 197, type: !13471)
!13474 = !DILocation(line: 0, scope: !13468)
!13475 = !DILocation(line: 199, column: 8, scope: !13468)
!13476 = !DILocation(line: 199, column: 13, scope: !13468)
!13477 = !DILocation(line: 200, column: 8, scope: !13468)
!13478 = !DILocation(line: 200, column: 13, scope: !13468)
!13479 = !DILocation(line: 201, column: 1, scope: !13468)
!13480 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2226, file: !2226, line: 641, type: !13481, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !13487)
!13481 = !DISubroutineType(types: !13482)
!13482 = !{!2229, !2230, !13312, !239, !108, !113, !113, !113, !119, !118, !13483}
!13483 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !115, line: 67, baseType: !13484)
!13484 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !115, line: 65, size: 64, elements: !13485)
!13485 = !{!13486}
!13486 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13484, file: !115, line: 66, baseType: !114, size: 64)
!13487 = !{!13488, !13489, !13490, !13491, !13492, !13493, !13494, !13495, !13496, !13497}
!13488 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13480, file: !2226, line: 641, type: !2230)
!13489 = !DILocalVariable(name: "stack", arg: 2, scope: !13480, file: !2226, line: 642, type: !13312)
!13490 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13480, file: !2226, line: 643, type: !239)
!13491 = !DILocalVariable(name: "entry", arg: 4, scope: !13480, file: !2226, line: 643, type: !108)
!13492 = !DILocalVariable(name: "p1", arg: 5, scope: !13480, file: !2226, line: 644, type: !113)
!13493 = !DILocalVariable(name: "p2", arg: 6, scope: !13480, file: !2226, line: 644, type: !113)
!13494 = !DILocalVariable(name: "p3", arg: 7, scope: !13480, file: !2226, line: 644, type: !113)
!13495 = !DILocalVariable(name: "prio", arg: 8, scope: !13480, file: !2226, line: 645, type: !119)
!13496 = !DILocalVariable(name: "options", arg: 9, scope: !13480, file: !2226, line: 645, type: !118)
!13497 = !DILocalVariable(name: "delay", arg: 10, scope: !13480, file: !2226, line: 645, type: !13483)
!13498 = !DILocation(line: 0, scope: !13480)
!13499 = !DILocation(line: 1031, column: 3, scope: !13189, inlinedAt: !13500)
!13500 = distinct !DILocation(line: 48, column: 10, scope: !13193, inlinedAt: !13501)
!13501 = distinct !DILocation(line: 647, column: 2, scope: !13502)
!13502 = distinct !DILexicalBlock(scope: !13503, file: !2226, line: 647, column: 2)
!13503 = distinct !DILexicalBlock(scope: !13480, file: !2226, line: 647, column: 2)
!13504 = !DILocation(line: 0, scope: !13189, inlinedAt: !13500)
!13505 = !DILocation(line: 48, column: 9, scope: !13193, inlinedAt: !13501)
!13506 = !DILocation(line: 647, column: 2, scope: !13503)
!13507 = !DILocation(line: 647, column: 2, scope: !13508)
!13508 = distinct !DILexicalBlock(scope: !13502, file: !2226, line: 647, column: 2)
!13509 = !DILocation(line: 649, column: 2, scope: !13480)
!13510 = !DILocation(line: 652, column: 7, scope: !13511)
!13511 = distinct !DILexicalBlock(scope: !13480, file: !2226, line: 652, column: 6)
!13512 = !DILocation(line: 652, column: 6, scope: !13480)
!13513 = !DILocation(line: 653, column: 3, scope: !13514)
!13514 = distinct !DILexicalBlock(scope: !13511, file: !2226, line: 652, column: 39)
!13515 = !DILocation(line: 654, column: 2, scope: !13514)
!13516 = !DILocation(line: 656, column: 2, scope: !13480)
!13517 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2226, file: !2226, line: 401, type: !13518, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !13520)
!13518 = !DISubroutineType(types: !13519)
!13519 = !{null, !2230, !13483}
!13520 = !{!13521, !13522}
!13521 = !DILocalVariable(name: "thread", arg: 1, scope: !13517, file: !2226, line: 401, type: !2230)
!13522 = !DILocalVariable(name: "delay", arg: 2, scope: !13517, file: !2226, line: 401, type: !13483)
!13523 = !DILocation(line: 0, scope: !13517)
!13524 = !DILocation(line: 404, column: 6, scope: !13525)
!13525 = distinct !DILexicalBlock(scope: !13517, file: !2226, line: 404, column: 6)
!13526 = !DILocation(line: 404, column: 6, scope: !13517)
!13527 = !DILocation(line: 405, column: 3, scope: !13528)
!13528 = distinct !DILexicalBlock(scope: !13525, file: !2226, line: 404, column: 38)
!13529 = !DILocation(line: 406, column: 2, scope: !13528)
!13530 = !DILocation(line: 407, column: 3, scope: !13531)
!13531 = distinct !DILexicalBlock(scope: !13525, file: !2226, line: 406, column: 9)
!13532 = !DILocation(line: 413, column: 1, scope: !13517)
!13533 = distinct !DISubprogram(name: "k_thread_start", scope: !3349, file: !3349, line: 205, type: !13534, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !13536)
!13534 = !DISubroutineType(types: !13535)
!13535 = !{null, !2229}
!13536 = !{!13537}
!13537 = !DILocalVariable(name: "thread", arg: 1, scope: !13533, file: !3349, line: 205, type: !2229)
!13538 = !DILocation(line: 0, scope: !13533)
!13539 = !DILocation(line: 214, column: 2, scope: !13540)
!13540 = distinct !DILexicalBlock(scope: !13533, file: !3349, line: 214, column: 2)
!13541 = !{i64 2155472280}
!13542 = !DILocation(line: 215, column: 2, scope: !13533)
!13543 = !DILocation(line: 216, column: 1, scope: !13533)
!13544 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13441, file: !13441, line: 47, type: !13518, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !13545)
!13545 = !{!13546, !13547}
!13546 = !DILocalVariable(name: "thread", arg: 1, scope: !13544, file: !13441, line: 47, type: !2230)
!13547 = !DILocalVariable(name: "ticks", arg: 2, scope: !13544, file: !13441, line: 47, type: !13483)
!13548 = !DILocation(line: 0, scope: !13544)
!13549 = !DILocation(line: 49, column: 30, scope: !13544)
!13550 = !DILocation(line: 49, column: 2, scope: !13544)
!13551 = !DILocation(line: 50, column: 1, scope: !13544)
!13552 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2226, file: !2226, line: 748, type: !3098, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !13553)
!13553 = !{!13554, !13572}
!13554 = !DILocalVariable(name: "thread_data", scope: !13555, file: !2226, line: 750, type: !13556)
!13555 = distinct !DILexicalBlock(scope: !13552, file: !2226, line: 750, column: 2)
!13556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13557, size: 32)
!13557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !245, line: 620, size: 384, elements: !13558)
!13558 = !{!13559, !13560, !13561, !13562, !13563, !13564, !13565, !13566, !13567, !13568, !13569, !13571}
!13559 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !13557, file: !245, line: 621, baseType: !2230, size: 32)
!13560 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !13557, file: !245, line: 622, baseType: !13312, size: 32, offset: 32)
!13561 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !13557, file: !245, line: 623, baseType: !32, size: 32, offset: 64)
!13562 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !13557, file: !245, line: 624, baseType: !108, size: 32, offset: 96)
!13563 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !13557, file: !245, line: 625, baseType: !113, size: 32, offset: 128)
!13564 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !13557, file: !245, line: 626, baseType: !113, size: 32, offset: 160)
!13565 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !13557, file: !245, line: 627, baseType: !113, size: 32, offset: 192)
!13566 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !13557, file: !245, line: 628, baseType: !119, size: 32, offset: 224)
!13567 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !13557, file: !245, line: 629, baseType: !118, size: 32, offset: 256)
!13568 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !13557, file: !245, line: 630, baseType: !774, size: 32, offset: 288)
!13569 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !13557, file: !245, line: 631, baseType: !13570, size: 32, offset: 320)
!13570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3098, size: 32)
!13571 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !13557, file: !245, line: 632, baseType: !278, size: 32, offset: 352)
!13572 = !DILocalVariable(name: "thread_data", scope: !13573, file: !2226, line: 781, type: !13556)
!13573 = distinct !DILexicalBlock(scope: !13552, file: !2226, line: 781, column: 2)
!13574 = !DILocation(line: 0, scope: !13555)
!13575 = !DILocation(line: 750, column: 2, scope: !13576)
!13576 = distinct !DILexicalBlock(scope: !13577, file: !2226, line: 750, column: 2)
!13577 = distinct !DILexicalBlock(scope: !13578, file: !2226, line: 750, column: 2)
!13578 = distinct !DILexicalBlock(scope: !13555, file: !2226, line: 750, column: 2)
!13579 = !DILocation(line: 750, column: 2, scope: !13580)
!13580 = distinct !DILexicalBlock(scope: !13581, file: !2226, line: 750, column: 2)
!13581 = distinct !DILexicalBlock(scope: !13576, file: !2226, line: 750, column: 2)
!13582 = !DILocation(line: 750, column: 2, scope: !13577)
!13583 = !DILocation(line: 750, column: 2, scope: !13555)
!13584 = !DILocation(line: 780, column: 2, scope: !13552)
!13585 = !DILocation(line: 0, scope: !13573)
!13586 = !DILocation(line: 781, column: 2, scope: !13587)
!13587 = distinct !DILexicalBlock(scope: !13588, file: !2226, line: 781, column: 2)
!13588 = distinct !DILexicalBlock(scope: !13589, file: !2226, line: 781, column: 2)
!13589 = distinct !DILexicalBlock(scope: !13573, file: !2226, line: 781, column: 2)
!13590 = !DILocation(line: 752, column: 17, scope: !13591)
!13591 = distinct !DILexicalBlock(scope: !13578, file: !2226, line: 750, column: 38)
!13592 = !DILocation(line: 753, column: 17, scope: !13591)
!13593 = !DILocation(line: 754, column: 17, scope: !13591)
!13594 = !DILocation(line: 755, column: 17, scope: !13591)
!13595 = !DILocation(line: 756, column: 17, scope: !13591)
!13596 = !DILocation(line: 757, column: 17, scope: !13591)
!13597 = !DILocation(line: 758, column: 17, scope: !13591)
!13598 = !DILocation(line: 759, column: 17, scope: !13591)
!13599 = !DILocation(line: 760, column: 17, scope: !13591)
!13600 = !DILocation(line: 761, column: 17, scope: !13591)
!13601 = !DILocation(line: 751, column: 3, scope: !13591)
!13602 = !DILocation(line: 763, column: 16, scope: !13591)
!13603 = !DILocation(line: 763, column: 29, scope: !13591)
!13604 = !DILocation(line: 763, column: 39, scope: !13591)
!13605 = !DILocation(line: 750, column: 2, scope: !13578)
!13606 = !DILocation(line: 750, column: 2, scope: !13581)
!13607 = distinct !{!13607, !13583, !13608}
!13608 = !DILocation(line: 764, column: 2, scope: !13555)
!13609 = !DILocation(line: 781, column: 2, scope: !13610)
!13610 = distinct !DILexicalBlock(scope: !13611, file: !2226, line: 781, column: 2)
!13611 = distinct !DILexicalBlock(scope: !13587, file: !2226, line: 781, column: 2)
!13612 = !DILocation(line: 781, column: 2, scope: !13588)
!13613 = !DILocation(line: 781, column: 2, scope: !13573)
!13614 = !DILocation(line: 787, column: 2, scope: !13552)
!13615 = !DILocation(line: 788, column: 1, scope: !13552)
!13616 = !DILocation(line: 782, column: 20, scope: !13617)
!13617 = distinct !DILexicalBlock(scope: !13618, file: !2226, line: 782, column: 7)
!13618 = distinct !DILexicalBlock(scope: !13589, file: !2226, line: 781, column: 38)
!13619 = !DILocation(line: 782, column: 31, scope: !13617)
!13620 = !DILocation(line: 782, column: 7, scope: !13618)
!13621 = !DILocation(line: 783, column: 37, scope: !13622)
!13622 = distinct !DILexicalBlock(scope: !13617, file: !2226, line: 782, column: 51)
!13623 = !DILocation(line: 784, column: 10, scope: !13622)
!13624 = !DILocation(line: 783, column: 4, scope: !13622)
!13625 = !DILocation(line: 785, column: 3, scope: !13622)
!13626 = !DILocation(line: 781, column: 2, scope: !13589)
!13627 = !DILocation(line: 781, column: 2, scope: !13611)
!13628 = distinct !{!13628, !13613, !13629}
!13629 = !DILocation(line: 786, column: 2, scope: !13573)
!13630 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3341, file: !3341, line: 403, type: !3342, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !13631)
!13631 = !{!13632}
!13632 = !DILocalVariable(name: "t", arg: 1, scope: !13630, file: !3341, line: 403, type: !120)
!13633 = !DILocation(line: 0, scope: !13630)
!13634 = !DILocalVariable(name: "t", arg: 1, scope: !13635, file: !3341, line: 102, type: !120)
!13635 = distinct !DISubprogram(name: "z_tmcvt", scope: !3341, file: !3341, line: 102, type: !3394, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !13636)
!13636 = !{!13634, !13637, !13638, !13639, !13640, !13641, !13642, !13643, !13644, !13645, !13646}
!13637 = !DILocalVariable(name: "from_hz", arg: 2, scope: !13635, file: !3341, line: 102, type: !118)
!13638 = !DILocalVariable(name: "to_hz", arg: 3, scope: !13635, file: !3341, line: 103, type: !118)
!13639 = !DILocalVariable(name: "const_hz", arg: 4, scope: !13635, file: !3341, line: 103, type: !345)
!13640 = !DILocalVariable(name: "result32", arg: 5, scope: !13635, file: !3341, line: 104, type: !345)
!13641 = !DILocalVariable(name: "round_up", arg: 6, scope: !13635, file: !3341, line: 104, type: !345)
!13642 = !DILocalVariable(name: "round_off", arg: 7, scope: !13635, file: !3341, line: 105, type: !345)
!13643 = !DILocalVariable(name: "mul_ratio", scope: !13635, file: !3341, line: 107, type: !345)
!13644 = !DILocalVariable(name: "div_ratio", scope: !13635, file: !3341, line: 109, type: !345)
!13645 = !DILocalVariable(name: "off", scope: !13635, file: !3341, line: 116, type: !120)
!13646 = !DILocalVariable(name: "rdivisor", scope: !13647, file: !3341, line: 119, type: !118)
!13647 = distinct !DILexicalBlock(scope: !13648, file: !3341, line: 118, column: 18)
!13648 = distinct !DILexicalBlock(scope: !13635, file: !3341, line: 118, column: 6)
!13649 = !DILocation(line: 0, scope: !13635, inlinedAt: !13650)
!13650 = distinct !DILocation(line: 406, column: 9, scope: !13630)
!13651 = !DILocation(line: 145, column: 13, scope: !13652, inlinedAt: !13650)
!13652 = distinct !DILexicalBlock(scope: !13653, file: !3341, line: 144, column: 10)
!13653 = distinct !DILexicalBlock(scope: !13654, file: !3341, line: 142, column: 7)
!13654 = distinct !DILexicalBlock(scope: !13655, file: !3341, line: 141, column: 24)
!13655 = distinct !DILexicalBlock(scope: !13656, file: !3341, line: 141, column: 13)
!13656 = distinct !DILexicalBlock(scope: !13635, file: !3341, line: 134, column: 6)
!13657 = !DILocation(line: 406, column: 2, scope: !13630)
!13658 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2226, file: !2226, line: 817, type: !4521, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !13659)
!13659 = !{!13660, !13661, !13662, !13663}
!13660 = !DILocalVariable(name: "entry", arg: 1, scope: !13658, file: !2226, line: 817, type: !108)
!13661 = !DILocalVariable(name: "p1", arg: 2, scope: !13658, file: !2226, line: 818, type: !113)
!13662 = !DILocalVariable(name: "p2", arg: 3, scope: !13658, file: !2226, line: 818, type: !113)
!13663 = !DILocalVariable(name: "p3", arg: 4, scope: !13658, file: !2226, line: 818, type: !113)
!13664 = !DILocation(line: 0, scope: !13658)
!13665 = !DILocation(line: 822, column: 2, scope: !13658)
!13666 = !DILocation(line: 822, column: 17, scope: !13658)
!13667 = !DILocation(line: 822, column: 30, scope: !13658)
!13668 = !DILocation(line: 823, column: 2, scope: !13658)
!13669 = !DILocation(line: 845, column: 2, scope: !13658)
!13670 = distinct !DISubprogram(name: "z_spin_lock_valid", scope: !2226, file: !2226, line: 853, type: !13671, scopeLine: 854, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !13674)
!13671 = !DISubroutineType(types: !13672)
!13672 = !{!345, !13673}
!13673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2325, size: 32)
!13674 = !{!13675, !13676}
!13675 = !DILocalVariable(name: "l", arg: 1, scope: !13670, file: !2226, line: 853, type: !13673)
!13676 = !DILocalVariable(name: "thread_cpu", scope: !13670, file: !2226, line: 855, type: !22)
!13677 = !DILocation(line: 0, scope: !13670)
!13678 = !DILocation(line: 855, column: 28, scope: !13670)
!13679 = !DILocation(line: 857, column: 17, scope: !13680)
!13680 = distinct !DILexicalBlock(scope: !13670, file: !2226, line: 857, column: 6)
!13681 = !DILocation(line: 857, column: 6, scope: !13670)
!13682 = !DILocation(line: 858, column: 19, scope: !13683)
!13683 = distinct !DILexicalBlock(scope: !13684, file: !2226, line: 858, column: 7)
!13684 = distinct !DILexicalBlock(scope: !13680, file: !2226, line: 857, column: 24)
!13685 = !DILocation(line: 858, column: 42, scope: !13683)
!13686 = !DILocation(line: 858, column: 28, scope: !13683)
!13687 = !DILocation(line: 858, column: 25, scope: !13683)
!13688 = !DILocation(line: 858, column: 7, scope: !13684)
!13689 = !DILocation(line: 862, column: 2, scope: !13670)
!13690 = !DILocation(line: 863, column: 1, scope: !13670)
!13691 = distinct !DISubprogram(name: "z_spin_unlock_valid", scope: !2226, file: !2226, line: 865, type: !13671, scopeLine: 866, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !13692)
!13692 = !{!13693}
!13693 = !DILocalVariable(name: "l", arg: 1, scope: !13691, file: !2226, line: 865, type: !13673)
!13694 = !DILocation(line: 0, scope: !13691)
!13695 = !DILocation(line: 867, column: 9, scope: !13696)
!13696 = distinct !DILexicalBlock(scope: !13691, file: !2226, line: 867, column: 6)
!13697 = !DILocation(line: 867, column: 38, scope: !13696)
!13698 = !DILocation(line: 867, column: 24, scope: !13696)
!13699 = !DILocation(line: 867, column: 54, scope: !13696)
!13700 = !DILocation(line: 867, column: 43, scope: !13696)
!13701 = !DILocation(line: 867, column: 41, scope: !13696)
!13702 = !DILocation(line: 867, column: 20, scope: !13696)
!13703 = !DILocation(line: 867, column: 6, scope: !13691)
!13704 = !DILocation(line: 870, column: 16, scope: !13691)
!13705 = !DILocation(line: 871, column: 2, scope: !13691)
!13706 = !DILocation(line: 872, column: 1, scope: !13691)
!13707 = distinct !DISubprogram(name: "z_spin_lock_set_owner", scope: !2226, file: !2226, line: 874, type: !13708, scopeLine: 875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !13710)
!13708 = !DISubroutineType(types: !13709)
!13709 = !{null, !13673}
!13710 = !{!13711}
!13711 = !DILocalVariable(name: "l", arg: 1, scope: !13707, file: !2226, line: 874, type: !13673)
!13712 = !DILocation(line: 0, scope: !13707)
!13713 = !DILocation(line: 876, column: 32, scope: !13707)
!13714 = !DILocation(line: 876, column: 18, scope: !13707)
!13715 = !DILocation(line: 876, column: 48, scope: !13707)
!13716 = !DILocation(line: 876, column: 37, scope: !13707)
!13717 = !DILocation(line: 876, column: 35, scope: !13707)
!13718 = !DILocation(line: 876, column: 5, scope: !13707)
!13719 = !DILocation(line: 876, column: 16, scope: !13707)
!13720 = !DILocation(line: 877, column: 1, scope: !13707)
!13721 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2226, file: !2226, line: 888, type: !13722, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !13724)
!13722 = !DISubroutineType(types: !13723)
!13723 = !{!119, !2230}
!13724 = !{!13725}
!13725 = !DILocalVariable(name: "thread", arg: 1, scope: !13721, file: !2226, line: 888, type: !2230)
!13726 = !DILocation(line: 0, scope: !13721)
!13727 = !DILocation(line: 893, column: 2, scope: !13721)
!13728 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2226, file: !2226, line: 897, type: !13729, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !13731)
!13729 = !DISubroutineType(types: !13730)
!13730 = !{!119, !2230, !32}
!13731 = !{!13732, !13733}
!13732 = !DILocalVariable(name: "thread", arg: 1, scope: !13728, file: !2226, line: 897, type: !2230)
!13733 = !DILocalVariable(name: "options", arg: 2, scope: !13728, file: !2226, line: 897, type: !32)
!13734 = !DILocation(line: 0, scope: !13728)
!13735 = !DILocation(line: 902, column: 2, scope: !13728)
!13736 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2226, file: !2226, line: 1072, type: !13737, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !13742)
!13737 = !DISubroutineType(types: !13738)
!13738 = !{!119, !2229, !13739}
!13739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13740, size: 32)
!13740 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !143, line: 234, baseType: !13741)
!13741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !143, line: 192, elements: !2162)
!13742 = !{!13743, !13744}
!13743 = !DILocalVariable(name: "thread", arg: 1, scope: !13736, file: !2226, line: 1072, type: !2229)
!13744 = !DILocalVariable(name: "stats", arg: 2, scope: !13736, file: !2226, line: 1073, type: !13739)
!13745 = !DILocation(line: 0, scope: !13736)
!13746 = !DILocation(line: 1075, column: 14, scope: !13747)
!13747 = distinct !DILexicalBlock(scope: !13736, file: !2226, line: 1075, column: 6)
!13748 = !DILocation(line: 1075, column: 23, scope: !13747)
!13749 = !DILocation(line: 1086, column: 1, scope: !13736)
!13750 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2226, file: !2226, line: 1088, type: !13751, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2333, retainedNodes: !13753)
!13751 = !DISubroutineType(types: !13752)
!13752 = !{!119, !13739}
!13753 = !{!13754}
!13754 = !DILocalVariable(name: "stats", arg: 1, scope: !13750, file: !2226, line: 1088, type: !13739)
!13755 = !DILocation(line: 0, scope: !13750)
!13756 = !DILocation(line: 1094, column: 12, scope: !13757)
!13757 = distinct !DILexicalBlock(scope: !13750, file: !2226, line: 1094, column: 6)
!13758 = !DILocation(line: 1120, column: 1, scope: !13750)
!13759 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !13760, file: !13760, line: 20, type: !3098, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3079, retainedNodes: !2162)
!13760 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13761 = !DILocation(line: 30, column: 2, scope: !13759)
!13762 = !DILocation(line: 31, column: 1, scope: !13759)
!13763 = distinct !DISubprogram(name: "idle", scope: !13760, file: !13760, line: 33, type: !111, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3079, retainedNodes: !13764)
!13764 = !{!13765, !13766, !13767}
!13765 = !DILocalVariable(name: "unused1", arg: 1, scope: !13763, file: !13760, line: 33, type: !113)
!13766 = !DILocalVariable(name: "unused2", arg: 2, scope: !13763, file: !13760, line: 33, type: !113)
!13767 = !DILocalVariable(name: "unused3", arg: 3, scope: !13763, file: !13760, line: 33, type: !113)
!13768 = !DILocation(line: 0, scope: !13763)
!13769 = !DILocation(line: 39, column: 2, scope: !13770)
!13770 = distinct !DILexicalBlock(scope: !13771, file: !13760, line: 39, column: 2)
!13771 = distinct !DILexicalBlock(scope: !13763, file: !13760, line: 39, column: 2)
!13772 = !DILocation(line: 39, column: 2, scope: !13771)
!13773 = !DILocation(line: 39, column: 2, scope: !13774)
!13774 = distinct !DILexicalBlock(scope: !13770, file: !13760, line: 39, column: 2)
!13775 = !DILocation(line: 55, column: 2, scope: !13776, inlinedAt: !13780)
!13776 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6131, file: !6131, line: 42, type: !6132, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3079, retainedNodes: !13777)
!13777 = !{!13778, !13779}
!13778 = !DILocalVariable(name: "key", scope: !13776, file: !6131, line: 44, type: !32)
!13779 = !DILocalVariable(name: "tmp", scope: !13776, file: !6131, line: 53, type: !32)
!13780 = distinct !DILocation(line: 62, column: 10, scope: !13781)
!13781 = distinct !DILexicalBlock(scope: !13763, file: !13760, line: 41, column: 15)
!13782 = !{i64 2597161}
!13783 = !DILocation(line: 0, scope: !13776, inlinedAt: !13780)
!13784 = !DILocation(line: 86, column: 3, scope: !13781)
!13785 = !DILocation(line: 41, column: 2, scope: !13763)
!13786 = distinct !{!13786, !13785, !13787}
!13787 = !DILocation(line: 105, column: 2, scope: !13763)
!13788 = distinct !DISubprogram(name: "k_cpu_idle", scope: !245, file: !245, line: 5627, type: !3098, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3079, retainedNodes: !2162)
!13789 = !DILocation(line: 5629, column: 2, scope: !13788)
!13790 = !DILocation(line: 5630, column: 1, scope: !13788)
!13791 = !DISubprogram(name: "arch_cpu_idle", scope: !109, file: !109, line: 167, type: !3098, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2162)
!13792 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2464, file: !2464, line: 93, type: !13793, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !13795)
!13793 = !DISubroutineType(types: !13794)
!13794 = !{!774, !2356, !2356}
!13795 = !{!13796, !13797, !13798, !13799}
!13796 = !DILocalVariable(name: "thread_1", arg: 1, scope: !13792, file: !2464, line: 93, type: !2356)
!13797 = !DILocalVariable(name: "thread_2", arg: 2, scope: !13792, file: !2464, line: 94, type: !2356)
!13798 = !DILocalVariable(name: "b1", scope: !13792, file: !2464, line: 97, type: !774)
!13799 = !DILocalVariable(name: "b2", scope: !13792, file: !2464, line: 98, type: !774)
!13800 = !DILocation(line: 0, scope: !13792)
!13801 = !DILocation(line: 97, column: 30, scope: !13792)
!13802 = !DILocation(line: 98, column: 30, scope: !13792)
!13803 = !DILocation(line: 100, column: 9, scope: !13804)
!13804 = distinct !DILexicalBlock(scope: !13792, file: !2464, line: 100, column: 6)
!13805 = !DILocation(line: 100, column: 6, scope: !13792)
!13806 = !DILocation(line: 125, column: 1, scope: !13792)
!13807 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2464, file: !2464, line: 428, type: !13808, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !13810)
!13808 = !DISubroutineType(types: !13809)
!13809 = !{null, !2356}
!13810 = !{!13811}
!13811 = !DILocalVariable(name: "curr", arg: 1, scope: !13807, file: !2464, line: 428, type: !2356)
!13812 = !DILocation(line: 0, scope: !13807)
!13813 = !DILocation(line: 434, column: 6, scope: !13814)
!13814 = distinct !DILexicalBlock(scope: !13807, file: !2464, line: 434, column: 6)
!13815 = !DILocation(line: 434, column: 23, scope: !13814)
!13816 = !DILocation(line: 434, column: 6, scope: !13807)
!13817 = !DILocation(line: 435, column: 50, scope: !13818)
!13818 = distinct !DILexicalBlock(scope: !13814, file: !2464, line: 434, column: 29)
!13819 = !DILocation(line: 435, column: 48, scope: !13818)
!13820 = !DILocation(line: 435, column: 29, scope: !13818)
!13821 = !DILocation(line: 436, column: 24, scope: !13818)
!13822 = !DILocation(line: 436, column: 3, scope: !13818)
!13823 = !DILocation(line: 437, column: 2, scope: !13818)
!13824 = !DILocation(line: 438, column: 1, scope: !13807)
!13825 = distinct !DISubprogram(name: "slice_time", scope: !2464, file: !2464, line: 407, type: !13826, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !13828)
!13826 = !DISubroutineType(types: !13827)
!13827 = !{!119, !2356}
!13828 = !{!13829, !13830}
!13829 = !DILocalVariable(name: "curr", arg: 1, scope: !13825, file: !2464, line: 407, type: !2356)
!13830 = !DILocalVariable(name: "ret", scope: !13825, file: !2464, line: 409, type: !119)
!13831 = !DILocation(line: 0, scope: !13825)
!13832 = !DILocation(line: 409, column: 12, scope: !13825)
!13833 = !DILocation(line: 416, column: 2, scope: !13825)
!13834 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2464, file: !2464, line: 440, type: !13835, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !13837)
!13835 = !DISubroutineType(types: !13836)
!13836 = !{null, !774, !119}
!13837 = !{!13838, !13839, !13840, !13846}
!13838 = !DILocalVariable(name: "slice", arg: 1, scope: !13834, file: !2464, line: 440, type: !774)
!13839 = !DILocalVariable(name: "prio", arg: 2, scope: !13834, file: !2464, line: 440, type: !119)
!13840 = !DILocalVariable(name: "__i", scope: !13841, file: !2464, line: 442, type: !13842)
!13841 = distinct !DILexicalBlock(scope: !13834, file: !2464, line: 442, column: 2)
!13842 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !259, line: 106, baseType: !13843)
!13843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !259, line: 32, size: 32, elements: !13844)
!13844 = !{!13845}
!13845 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13843, file: !259, line: 33, baseType: !119, size: 32)
!13846 = !DILocalVariable(name: "__key", scope: !13841, file: !2464, line: 442, type: !13842)
!13847 = !DILocation(line: 0, scope: !13834)
!13848 = !DILocation(line: 0, scope: !13841)
!13849 = !DILocalVariable(name: "l", arg: 1, scope: !13850, file: !259, line: 136, type: !13853)
!13850 = distinct !DISubprogram(name: "k_spin_lock", scope: !259, file: !259, line: 136, type: !13851, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !13854)
!13851 = !DISubroutineType(types: !13852)
!13852 = !{!13842, !13853}
!13853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2451, size: 32)
!13854 = !{!13849, !13855}
!13855 = !DILocalVariable(name: "k", scope: !13850, file: !259, line: 139, type: !13842)
!13856 = !DILocation(line: 0, scope: !13850, inlinedAt: !13857)
!13857 = distinct !DILocation(line: 442, column: 2, scope: !13841)
!13858 = !DILocation(line: 55, column: 2, scope: !13859, inlinedAt: !13863)
!13859 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6131, file: !6131, line: 42, type: !6132, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !13860)
!13860 = !{!13861, !13862}
!13861 = !DILocalVariable(name: "key", scope: !13859, file: !6131, line: 44, type: !32)
!13862 = !DILocalVariable(name: "tmp", scope: !13859, file: !6131, line: 53, type: !32)
!13863 = distinct !DILocation(line: 145, column: 10, scope: !13850, inlinedAt: !13857)
!13864 = !{i64 2641132}
!13865 = !DILocation(line: 0, scope: !13859, inlinedAt: !13863)
!13866 = !DILocation(line: 148, column: 2, scope: !13867, inlinedAt: !13857)
!13867 = distinct !DILexicalBlock(scope: !13868, file: !259, line: 148, column: 2)
!13868 = distinct !DILexicalBlock(scope: !13850, file: !259, line: 148, column: 2)
!13869 = !DILocation(line: 148, column: 2, scope: !13868, inlinedAt: !13857)
!13870 = !DILocation(line: 148, column: 2, scope: !13871, inlinedAt: !13857)
!13871 = distinct !DILexicalBlock(scope: !13867, file: !259, line: 148, column: 2)
!13872 = !DILocation(line: 160, column: 2, scope: !13850, inlinedAt: !13857)
!13873 = !DILocation(line: 443, column: 29, scope: !13874)
!13874 = distinct !DILexicalBlock(scope: !13875, file: !2464, line: 442, column: 26)
!13875 = distinct !DILexicalBlock(scope: !13841, file: !2464, line: 442, column: 2)
!13876 = !DILocation(line: 444, column: 17, scope: !13874)
!13877 = !DILocation(line: 445, column: 51, scope: !13878)
!13878 = distinct !DILexicalBlock(scope: !13874, file: !2464, line: 445, column: 7)
!13879 = !DILocation(line: 445, column: 7, scope: !13874)
!13880 = !DILocation(line: 0, scope: !13874)
!13881 = !DILocation(line: 451, column: 18, scope: !13874)
!13882 = !DILocation(line: 452, column: 3, scope: !13874)
!13883 = !DILocalVariable(name: "key", arg: 2, scope: !13884, file: !259, line: 190, type: !13842)
!13884 = distinct !DISubprogram(name: "k_spin_unlock", scope: !259, file: !259, line: 189, type: !13885, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !13887)
!13885 = !DISubroutineType(types: !13886)
!13886 = !{null, !13853, !13842}
!13887 = !{!13888, !13883}
!13888 = !DILocalVariable(name: "l", arg: 1, scope: !13884, file: !259, line: 189, type: !13853)
!13889 = !DILocation(line: 0, scope: !13884, inlinedAt: !13890)
!13890 = distinct !DILocation(line: 442, column: 2, scope: !13875)
!13891 = !DILocation(line: 194, column: 2, scope: !13892, inlinedAt: !13890)
!13892 = distinct !DILexicalBlock(scope: !13893, file: !259, line: 194, column: 2)
!13893 = distinct !DILexicalBlock(scope: !13884, file: !259, line: 194, column: 2)
!13894 = !DILocation(line: 194, column: 2, scope: !13893, inlinedAt: !13890)
!13895 = !DILocation(line: 194, column: 2, scope: !13896, inlinedAt: !13890)
!13896 = distinct !DILexicalBlock(scope: !13892, file: !259, line: 194, column: 2)
!13897 = !DILocalVariable(name: "key", arg: 1, scope: !13898, file: !6131, line: 84, type: !32)
!13898 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6131, file: !6131, line: 84, type: !6142, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !13899)
!13899 = !{!13897}
!13900 = !DILocation(line: 0, scope: !13898, inlinedAt: !13901)
!13901 = distinct !DILocation(line: 215, column: 2, scope: !13884, inlinedAt: !13890)
!13902 = !DILocation(line: 95, column: 2, scope: !13898, inlinedAt: !13901)
!13903 = !{i64 2641949}
!13904 = !DILocation(line: 454, column: 1, scope: !13834)
!13905 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !3341, file: !3341, line: 389, type: !7737, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !13906)
!13906 = !{!13907}
!13907 = !DILocalVariable(name: "t", arg: 1, scope: !13905, file: !3341, line: 389, type: !118)
!13908 = !DILocation(line: 0, scope: !13905)
!13909 = !DILocalVariable(name: "t", arg: 1, scope: !13910, file: !3341, line: 102, type: !120)
!13910 = distinct !DISubprogram(name: "z_tmcvt", scope: !3341, file: !3341, line: 102, type: !3394, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !13911)
!13911 = !{!13909, !13912, !13913, !13914, !13915, !13916, !13917, !13918, !13919, !13920, !13921}
!13912 = !DILocalVariable(name: "from_hz", arg: 2, scope: !13910, file: !3341, line: 102, type: !118)
!13913 = !DILocalVariable(name: "to_hz", arg: 3, scope: !13910, file: !3341, line: 103, type: !118)
!13914 = !DILocalVariable(name: "const_hz", arg: 4, scope: !13910, file: !3341, line: 103, type: !345)
!13915 = !DILocalVariable(name: "result32", arg: 5, scope: !13910, file: !3341, line: 104, type: !345)
!13916 = !DILocalVariable(name: "round_up", arg: 6, scope: !13910, file: !3341, line: 104, type: !345)
!13917 = !DILocalVariable(name: "round_off", arg: 7, scope: !13910, file: !3341, line: 105, type: !345)
!13918 = !DILocalVariable(name: "mul_ratio", scope: !13910, file: !3341, line: 107, type: !345)
!13919 = !DILocalVariable(name: "div_ratio", scope: !13910, file: !3341, line: 109, type: !345)
!13920 = !DILocalVariable(name: "off", scope: !13910, file: !3341, line: 116, type: !120)
!13921 = !DILocalVariable(name: "rdivisor", scope: !13922, file: !3341, line: 119, type: !118)
!13922 = distinct !DILexicalBlock(scope: !13923, file: !3341, line: 118, column: 18)
!13923 = distinct !DILexicalBlock(scope: !13910, file: !3341, line: 118, column: 6)
!13924 = !DILocation(line: 0, scope: !13910, inlinedAt: !13925)
!13925 = distinct !DILocation(line: 392, column: 9, scope: !13905)
!13926 = !DILocation(line: 143, column: 25, scope: !13927, inlinedAt: !13925)
!13927 = distinct !DILexicalBlock(scope: !13928, file: !3341, line: 142, column: 17)
!13928 = distinct !DILexicalBlock(scope: !13929, file: !3341, line: 142, column: 7)
!13929 = distinct !DILexicalBlock(scope: !13930, file: !3341, line: 141, column: 24)
!13930 = distinct !DILexicalBlock(scope: !13931, file: !3341, line: 141, column: 13)
!13931 = distinct !DILexicalBlock(scope: !13910, file: !3341, line: 134, column: 6)
!13932 = !DILocation(line: 392, column: 2, scope: !13905)
!13933 = distinct !DISubprogram(name: "z_time_slice", scope: !2464, file: !2464, line: 502, type: !8536, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !13934)
!13934 = !{!13935, !13936}
!13935 = !DILocalVariable(name: "ticks", arg: 1, scope: !13933, file: !2464, line: 502, type: !119)
!13936 = !DILocalVariable(name: "key", scope: !13933, file: !2464, line: 511, type: !13842)
!13937 = !DILocation(line: 0, scope: !13933)
!13938 = !DILocation(line: 0, scope: !13850, inlinedAt: !13939)
!13939 = distinct !DILocation(line: 511, column: 25, scope: !13933)
!13940 = !DILocation(line: 55, column: 2, scope: !13859, inlinedAt: !13941)
!13941 = distinct !DILocation(line: 145, column: 10, scope: !13850, inlinedAt: !13939)
!13942 = !DILocation(line: 0, scope: !13859, inlinedAt: !13941)
!13943 = !DILocation(line: 148, column: 2, scope: !13867, inlinedAt: !13939)
!13944 = !DILocation(line: 148, column: 2, scope: !13868, inlinedAt: !13939)
!13945 = !DILocation(line: 148, column: 2, scope: !13871, inlinedAt: !13939)
!13946 = !DILocation(line: 160, column: 2, scope: !13850, inlinedAt: !13939)
!13947 = !DILocation(line: 514, column: 6, scope: !13948)
!13948 = distinct !DILexicalBlock(scope: !13933, file: !2464, line: 514, column: 6)
!13949 = !DILocation(line: 514, column: 25, scope: !13948)
!13950 = !DILocation(line: 514, column: 22, scope: !13948)
!13951 = !DILocation(line: 514, column: 6, scope: !13933)
!13952 = !DILocation(line: 515, column: 3, scope: !13953)
!13953 = distinct !DILexicalBlock(scope: !13948, file: !2464, line: 514, column: 35)
!13954 = !DILocation(line: 0, scope: !13884, inlinedAt: !13955)
!13955 = distinct !DILocation(line: 516, column: 3, scope: !13953)
!13956 = !DILocation(line: 194, column: 2, scope: !13892, inlinedAt: !13955)
!13957 = !DILocation(line: 194, column: 2, scope: !13893, inlinedAt: !13955)
!13958 = !DILocation(line: 194, column: 2, scope: !13896, inlinedAt: !13955)
!13959 = !DILocation(line: 0, scope: !13898, inlinedAt: !13960)
!13960 = distinct !DILocation(line: 215, column: 2, scope: !13884, inlinedAt: !13955)
!13961 = !DILocation(line: 95, column: 2, scope: !13898, inlinedAt: !13960)
!13962 = !DILocation(line: 517, column: 3, scope: !13953)
!13963 = !DILocation(line: 519, column: 18, scope: !13933)
!13964 = !DILocation(line: 522, column: 6, scope: !13965)
!13965 = distinct !DILexicalBlock(scope: !13933, file: !2464, line: 522, column: 6)
!13966 = !DILocation(line: 522, column: 27, scope: !13965)
!13967 = !DILocation(line: 522, column: 30, scope: !13965)
!13968 = !DILocation(line: 522, column: 6, scope: !13933)
!13969 = !DILocation(line: 523, column: 30, scope: !13970)
!13970 = distinct !DILexicalBlock(scope: !13971, file: !2464, line: 523, column: 7)
!13971 = distinct !DILexicalBlock(scope: !13965, file: !2464, line: 522, column: 51)
!13972 = !DILocation(line: 523, column: 13, scope: !13970)
!13973 = !DILocation(line: 523, column: 7, scope: !13971)
!13974 = !DILocation(line: 530, column: 10, scope: !13975)
!13975 = distinct !DILexicalBlock(scope: !13970, file: !2464, line: 523, column: 43)
!13976 = !DILocation(line: 531, column: 3, scope: !13975)
!13977 = !DILocation(line: 532, column: 30, scope: !13978)
!13978 = distinct !DILexicalBlock(scope: !13970, file: !2464, line: 531, column: 10)
!13979 = !DILocation(line: 535, column: 29, scope: !13980)
!13980 = distinct !DILexicalBlock(scope: !13965, file: !2464, line: 534, column: 9)
!13981 = !DILocation(line: 0, scope: !13884, inlinedAt: !13982)
!13982 = distinct !DILocation(line: 537, column: 2, scope: !13933)
!13983 = !DILocation(line: 194, column: 2, scope: !13892, inlinedAt: !13982)
!13984 = !DILocation(line: 194, column: 2, scope: !13893, inlinedAt: !13982)
!13985 = !DILocation(line: 194, column: 2, scope: !13896, inlinedAt: !13982)
!13986 = !DILocation(line: 0, scope: !13898, inlinedAt: !13987)
!13987 = distinct !DILocation(line: 215, column: 2, scope: !13884, inlinedAt: !13982)
!13988 = !DILocation(line: 95, column: 2, scope: !13898, inlinedAt: !13987)
!13989 = !DILocation(line: 538, column: 1, scope: !13933)
!13990 = distinct !DISubprogram(name: "sliceable", scope: !2464, file: !2464, line: 468, type: !13991, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !13993)
!13991 = !DISubroutineType(types: !13992)
!13992 = !{!345, !2356}
!13993 = !{!13994, !13995}
!13994 = !DILocalVariable(name: "thread", arg: 1, scope: !13990, file: !2464, line: 468, type: !2356)
!13995 = !DILocalVariable(name: "ret", scope: !13990, file: !2464, line: 470, type: !345)
!13996 = !DILocation(line: 0, scope: !13990)
!13997 = !DILocation(line: 470, column: 13, scope: !13990)
!13998 = !DILocation(line: 471, column: 3, scope: !13990)
!13999 = !DILocation(line: 471, column: 7, scope: !13990)
!14000 = !DILocation(line: 472, column: 3, scope: !13990)
!14001 = !DILocation(line: 472, column: 37, scope: !13990)
!14002 = !DILocation(line: 472, column: 24, scope: !13990)
!14003 = !DILocation(line: 472, column: 43, scope: !13990)
!14004 = !DILocation(line: 472, column: 7, scope: !13990)
!14005 = !DILocation(line: 473, column: 3, scope: !13990)
!14006 = !DILocation(line: 473, column: 7, scope: !13990)
!14007 = !DILocation(line: 473, column: 6, scope: !13990)
!14008 = !DILocation(line: 479, column: 2, scope: !13990)
!14009 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2464, file: !2464, line: 482, type: !14010, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14012)
!14010 = !DISubroutineType(types: !14011)
!14011 = !{!13842, !13842}
!14012 = !{!14013, !14014}
!14013 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !14009, file: !2464, line: 482, type: !13842)
!14014 = !DILocalVariable(name: "curr", scope: !14009, file: !2464, line: 484, type: !2356)
!14015 = !DILocation(line: 0, scope: !14009)
!14016 = !DILocation(line: 484, column: 26, scope: !14009)
!14017 = !DILocation(line: 493, column: 7, scope: !14018)
!14018 = distinct !DILexicalBlock(scope: !14009, file: !2464, line: 493, column: 6)
!14019 = !DILocation(line: 493, column: 6, scope: !14009)
!14020 = !DILocation(line: 494, column: 3, scope: !14021)
!14021 = distinct !DILexicalBlock(scope: !14018, file: !2464, line: 493, column: 49)
!14022 = !DILocation(line: 495, column: 2, scope: !14021)
!14023 = !DILocation(line: 496, column: 2, scope: !14009)
!14024 = !DILocation(line: 499, column: 1, scope: !14009)
!14025 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !13012, file: !13012, line: 106, type: !13991, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14026)
!14026 = !{!14027, !14028}
!14027 = !DILocalVariable(name: "thread", arg: 1, scope: !14025, file: !13012, line: 106, type: !2356)
!14028 = !DILocalVariable(name: "state", scope: !14025, file: !13012, line: 108, type: !185)
!14029 = !DILocation(line: 0, scope: !14025)
!14030 = !DILocation(line: 108, column: 31, scope: !14025)
!14031 = !DILocation(line: 110, column: 16, scope: !14025)
!14032 = !DILocation(line: 111, column: 41, scope: !14025)
!14033 = !DILocation(line: 110, column: 2, scope: !14025)
!14034 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2464, file: !2464, line: 393, type: !13808, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14035)
!14035 = !{!14036}
!14036 = !DILocalVariable(name: "thread", arg: 1, scope: !14034, file: !2464, line: 393, type: !2356)
!14037 = !DILocation(line: 0, scope: !14034)
!14038 = !DILocation(line: 395, column: 6, scope: !14039)
!14039 = distinct !DILexicalBlock(scope: !14034, file: !2464, line: 395, column: 6)
!14040 = !DILocation(line: 395, column: 6, scope: !14034)
!14041 = !DILocalVariable(name: "thread", arg: 1, scope: !14042, file: !2464, line: 264, type: !2356)
!14042 = distinct !DISubprogram(name: "dequeue_thread", scope: !2464, file: !2464, line: 264, type: !13808, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14043)
!14043 = !{!14041}
!14044 = !DILocation(line: 0, scope: !14042, inlinedAt: !14045)
!14045 = distinct !DILocation(line: 396, column: 3, scope: !14046)
!14046 = distinct !DILexicalBlock(scope: !14039, file: !2464, line: 395, column: 34)
!14047 = !DILocation(line: 266, column: 15, scope: !14042, inlinedAt: !14045)
!14048 = !DILocation(line: 266, column: 28, scope: !14042, inlinedAt: !14045)
!14049 = !DILocalVariable(name: "thread", arg: 1, scope: !14050, file: !2464, line: 232, type: !2356)
!14050 = distinct !DISubprogram(name: "runq_remove", scope: !2464, file: !2464, line: 232, type: !13808, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14051)
!14051 = !{!14049}
!14052 = !DILocation(line: 0, scope: !14050, inlinedAt: !14053)
!14053 = distinct !DILocation(line: 268, column: 3, scope: !14054, inlinedAt: !14045)
!14054 = distinct !DILexicalBlock(scope: !14055, file: !2464, line: 267, column: 35)
!14055 = distinct !DILexicalBlock(scope: !14042, file: !2464, line: 267, column: 6)
!14056 = !DILocation(line: 234, column: 2, scope: !14050, inlinedAt: !14053)
!14057 = !DILocation(line: 397, column: 2, scope: !14046)
!14058 = !DILocalVariable(name: "thread", arg: 1, scope: !14059, file: !2464, line: 250, type: !2356)
!14059 = distinct !DISubprogram(name: "queue_thread", scope: !2464, file: !2464, line: 250, type: !13808, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14060)
!14060 = !{!14058}
!14061 = !DILocation(line: 0, scope: !14059, inlinedAt: !14062)
!14062 = distinct !DILocation(line: 398, column: 2, scope: !14034)
!14063 = !DILocation(line: 252, column: 15, scope: !14059, inlinedAt: !14062)
!14064 = !DILocation(line: 252, column: 28, scope: !14059, inlinedAt: !14062)
!14065 = !DILocalVariable(name: "thread", arg: 1, scope: !14066, file: !2464, line: 227, type: !2356)
!14066 = distinct !DISubprogram(name: "runq_add", scope: !2464, file: !2464, line: 227, type: !13808, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14067)
!14067 = !{!14065}
!14068 = !DILocation(line: 0, scope: !14066, inlinedAt: !14069)
!14069 = distinct !DILocation(line: 254, column: 3, scope: !14070, inlinedAt: !14062)
!14070 = distinct !DILexicalBlock(scope: !14071, file: !2464, line: 253, column: 35)
!14071 = distinct !DILexicalBlock(scope: !14059, file: !2464, line: 253, column: 6)
!14072 = !DILocalVariable(name: "pq", arg: 1, scope: !14073, file: !2464, line: 181, type: !14076)
!14073 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2464, file: !2464, line: 181, type: !14074, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14077)
!14074 = !DISubroutineType(types: !14075)
!14075 = !{null, !14076, !2356}
!14076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2392, size: 32)
!14077 = !{!14072, !14078, !14079}
!14078 = !DILocalVariable(name: "thread", arg: 2, scope: !14073, file: !2464, line: 182, type: !2356)
!14079 = !DILocalVariable(name: "t", scope: !14073, file: !2464, line: 184, type: !2356)
!14080 = !DILocation(line: 0, scope: !14073, inlinedAt: !14081)
!14081 = distinct !DILocation(line: 229, column: 2, scope: !14066, inlinedAt: !14069)
!14082 = !DILocation(line: 186, column: 2, scope: !14083, inlinedAt: !14081)
!14083 = distinct !DILexicalBlock(scope: !14084, file: !2464, line: 186, column: 2)
!14084 = distinct !DILexicalBlock(scope: !14073, file: !2464, line: 186, column: 2)
!14085 = !DILocation(line: 186, column: 2, scope: !14084, inlinedAt: !14081)
!14086 = !DILocation(line: 186, column: 2, scope: !14087, inlinedAt: !14081)
!14087 = distinct !DILexicalBlock(scope: !14083, file: !2464, line: 186, column: 2)
!14088 = !DILocation(line: 188, column: 2, scope: !14089, inlinedAt: !14081)
!14089 = distinct !DILexicalBlock(scope: !14073, file: !2464, line: 188, column: 2)
!14090 = !DILocation(line: 188, column: 2, scope: !14091, inlinedAt: !14081)
!14091 = distinct !DILexicalBlock(scope: !14089, file: !2464, line: 188, column: 2)
!14092 = !DILocation(line: 0, scope: !14089, inlinedAt: !14081)
!14093 = !DILocation(line: 189, column: 7, scope: !14094, inlinedAt: !14081)
!14094 = distinct !DILexicalBlock(scope: !14095, file: !2464, line: 189, column: 7)
!14095 = distinct !DILexicalBlock(scope: !14091, file: !2464, line: 188, column: 56)
!14096 = !DILocation(line: 189, column: 35, scope: !14094, inlinedAt: !14081)
!14097 = !DILocation(line: 189, column: 7, scope: !14095, inlinedAt: !14081)
!14098 = !DILocation(line: 191, column: 21, scope: !14099, inlinedAt: !14081)
!14099 = distinct !DILexicalBlock(scope: !14094, file: !2464, line: 189, column: 40)
!14100 = !DILocation(line: 190, column: 4, scope: !14099, inlinedAt: !14081)
!14101 = !DILocation(line: 192, column: 4, scope: !14099, inlinedAt: !14081)
!14102 = distinct !{!14102, !14088, !14103}
!14103 = !DILocation(line: 194, column: 2, scope: !14089, inlinedAt: !14081)
!14104 = !DILocation(line: 196, column: 37, scope: !14073, inlinedAt: !14081)
!14105 = !DILocation(line: 196, column: 2, scope: !14073, inlinedAt: !14081)
!14106 = !DILocation(line: 197, column: 1, scope: !14073, inlinedAt: !14081)
!14107 = !DILocation(line: 399, column: 25, scope: !14034)
!14108 = !DILocation(line: 399, column: 22, scope: !14034)
!14109 = !DILocation(line: 399, column: 2, scope: !14034)
!14110 = !DILocation(line: 400, column: 1, scope: !14034)
!14111 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !13012, file: !13012, line: 136, type: !13991, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14112)
!14112 = !{!14113}
!14113 = !DILocalVariable(name: "thread", arg: 1, scope: !14111, file: !13012, line: 136, type: !2356)
!14114 = !DILocation(line: 0, scope: !14111)
!14115 = !DILocation(line: 138, column: 9, scope: !14111)
!14116 = !DILocation(line: 138, column: 2, scope: !14111)
!14117 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2464, file: !2464, line: 1137, type: !14074, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14118)
!14118 = !{!14119, !14120}
!14119 = !DILocalVariable(name: "pq", arg: 1, scope: !14117, file: !2464, line: 1137, type: !14076)
!14120 = !DILocalVariable(name: "thread", arg: 2, scope: !14117, file: !2464, line: 1137, type: !2356)
!14121 = !DILocation(line: 0, scope: !14117)
!14122 = !DILocation(line: 1139, column: 2, scope: !14123)
!14123 = distinct !DILexicalBlock(scope: !14124, file: !2464, line: 1139, column: 2)
!14124 = distinct !DILexicalBlock(scope: !14117, file: !2464, line: 1139, column: 2)
!14125 = !DILocation(line: 1139, column: 2, scope: !14124)
!14126 = !DILocation(line: 1139, column: 2, scope: !14127)
!14127 = distinct !DILexicalBlock(scope: !14123, file: !2464, line: 1139, column: 2)
!14128 = !DILocation(line: 1141, column: 33, scope: !14117)
!14129 = !DILocation(line: 1141, column: 2, scope: !14117)
!14130 = !DILocation(line: 1142, column: 1, scope: !14117)
!14131 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !13012, file: !13012, line: 83, type: !13991, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14132)
!14132 = !{!14133}
!14133 = !DILocalVariable(name: "thread", arg: 1, scope: !14131, file: !13012, line: 83, type: !2356)
!14134 = !DILocation(line: 0, scope: !14131)
!14135 = !DILocation(line: 89, column: 16, scope: !14131)
!14136 = !DILocation(line: 89, column: 2, scope: !14131)
!14137 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !153, file: !153, line: 294, type: !14138, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14140)
!14138 = !DISubroutineType(types: !14139)
!14139 = !{!2460, !14076}
!14140 = !{!14141}
!14141 = !DILocalVariable(name: "list", arg: 1, scope: !14137, file: !153, line: 294, type: !14076)
!14142 = !DILocation(line: 0, scope: !14137)
!14143 = !DILocation(line: 296, column: 9, scope: !14137)
!14144 = !DILocation(line: 296, column: 49, scope: !14137)
!14145 = !DILocation(line: 296, column: 2, scope: !14137)
!14146 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !153, file: !153, line: 443, type: !14147, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14149)
!14147 = !DISubroutineType(types: !14148)
!14148 = !{null, !2460, !2460}
!14149 = !{!14150, !14151, !14152}
!14150 = !DILocalVariable(name: "successor", arg: 1, scope: !14146, file: !153, line: 443, type: !2460)
!14151 = !DILocalVariable(name: "node", arg: 2, scope: !14146, file: !153, line: 443, type: !2460)
!14152 = !DILocalVariable(name: "prev", scope: !14146, file: !153, line: 445, type: !14153)
!14153 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2460)
!14154 = !DILocation(line: 0, scope: !14146)
!14155 = !DILocation(line: 445, column: 39, scope: !14146)
!14156 = !DILocation(line: 447, column: 8, scope: !14146)
!14157 = !DILocation(line: 447, column: 13, scope: !14146)
!14158 = !DILocation(line: 448, column: 8, scope: !14146)
!14159 = !DILocation(line: 448, column: 13, scope: !14146)
!14160 = !DILocation(line: 449, column: 8, scope: !14146)
!14161 = !DILocation(line: 449, column: 13, scope: !14146)
!14162 = !DILocation(line: 450, column: 18, scope: !14146)
!14163 = !DILocation(line: 451, column: 1, scope: !14146)
!14164 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !153, file: !153, line: 341, type: !14165, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14167)
!14165 = !DISubroutineType(types: !14166)
!14166 = !{!2460, !14076, !2460}
!14167 = !{!14168, !14169}
!14168 = !DILocalVariable(name: "list", arg: 1, scope: !14164, file: !153, line: 341, type: !14076)
!14169 = !DILocalVariable(name: "node", arg: 2, scope: !14164, file: !153, line: 342, type: !2460)
!14170 = !DILocation(line: 0, scope: !14164)
!14171 = !DILocation(line: 344, column: 15, scope: !14164)
!14172 = !DILocation(line: 344, column: 9, scope: !14164)
!14173 = !DILocation(line: 344, column: 26, scope: !14164)
!14174 = !DILocation(line: 344, column: 2, scope: !14164)
!14175 = distinct !DISubprogram(name: "sys_dlist_append", scope: !153, file: !153, line: 404, type: !14176, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14178)
!14176 = !DISubroutineType(types: !14177)
!14177 = !{null, !14076, !2460}
!14178 = !{!14179, !14180, !14181}
!14179 = !DILocalVariable(name: "list", arg: 1, scope: !14175, file: !153, line: 404, type: !14076)
!14180 = !DILocalVariable(name: "node", arg: 2, scope: !14175, file: !153, line: 404, type: !2460)
!14181 = !DILocalVariable(name: "tail", scope: !14175, file: !153, line: 406, type: !14153)
!14182 = !DILocation(line: 0, scope: !14175)
!14183 = !DILocation(line: 406, column: 34, scope: !14175)
!14184 = !DILocation(line: 408, column: 8, scope: !14175)
!14185 = !DILocation(line: 408, column: 13, scope: !14175)
!14186 = !DILocation(line: 409, column: 8, scope: !14175)
!14187 = !DILocation(line: 409, column: 13, scope: !14175)
!14188 = !DILocation(line: 411, column: 8, scope: !14175)
!14189 = !DILocation(line: 411, column: 13, scope: !14175)
!14190 = !DILocation(line: 412, column: 13, scope: !14175)
!14191 = !DILocation(line: 413, column: 1, scope: !14175)
!14192 = distinct !DISubprogram(name: "update_cache", scope: !2464, file: !2464, line: 559, type: !8536, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14193)
!14193 = !{!14194, !14195}
!14194 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !14192, file: !2464, line: 559, type: !119)
!14195 = !DILocalVariable(name: "thread", scope: !14192, file: !2464, line: 562, type: !2356)
!14196 = !DILocation(line: 0, scope: !14192)
!14197 = !DILocation(line: 239, column: 9, scope: !14198, inlinedAt: !14201)
!14198 = distinct !DISubprogram(name: "runq_best", scope: !2464, file: !2464, line: 237, type: !14199, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !2162)
!14199 = !DISubroutineType(types: !14200)
!14200 = !{!2356}
!14201 = distinct !DILocation(line: 314, column: 28, scope: !14202, inlinedAt: !14205)
!14202 = distinct !DISubprogram(name: "next_up", scope: !2464, file: !2464, line: 312, type: !14199, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14203)
!14203 = !{!14204}
!14204 = !DILocalVariable(name: "thread", scope: !14202, file: !2464, line: 314, type: !2356)
!14205 = distinct !DILocation(line: 562, column: 28, scope: !14192)
!14206 = !DILocation(line: 0, scope: !14202, inlinedAt: !14205)
!14207 = !DILocation(line: 340, column: 17, scope: !14202, inlinedAt: !14205)
!14208 = !DILocation(line: 340, column: 9, scope: !14202, inlinedAt: !14205)
!14209 = !DILocalVariable(name: "thread", arg: 1, scope: !14210, file: !2464, line: 127, type: !2356)
!14210 = distinct !DISubprogram(name: "should_preempt", scope: !2464, file: !2464, line: 127, type: !14211, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14213)
!14211 = !DISubroutineType(types: !14212)
!14212 = !{!345, !2356, !119}
!14213 = !{!14209, !14214}
!14214 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !14210, file: !2464, line: 128, type: !119)
!14215 = !DILocation(line: 0, scope: !14210, inlinedAt: !14216)
!14216 = distinct !DILocation(line: 564, column: 6, scope: !14217)
!14217 = distinct !DILexicalBlock(scope: !14192, file: !2464, line: 564, column: 6)
!14218 = !DILocation(line: 133, column: 17, scope: !14219, inlinedAt: !14216)
!14219 = distinct !DILexicalBlock(scope: !14210, file: !2464, line: 133, column: 6)
!14220 = !DILocation(line: 0, scope: !14217)
!14221 = !DILocation(line: 133, column: 6, scope: !14210, inlinedAt: !14216)
!14222 = !DILocation(line: 137, column: 2, scope: !14223, inlinedAt: !14216)
!14223 = distinct !DILexicalBlock(scope: !14224, file: !2464, line: 137, column: 2)
!14224 = distinct !DILexicalBlock(scope: !14210, file: !2464, line: 137, column: 2)
!14225 = !DILocation(line: 137, column: 2, scope: !14224, inlinedAt: !14216)
!14226 = !DILocation(line: 137, column: 2, scope: !14227, inlinedAt: !14216)
!14227 = distinct !DILexicalBlock(scope: !14223, file: !2464, line: 137, column: 2)
!14228 = !DILocation(line: 140, column: 6, scope: !14229, inlinedAt: !14216)
!14229 = distinct !DILexicalBlock(scope: !14210, file: !2464, line: 140, column: 6)
!14230 = !DILocation(line: 140, column: 6, scope: !14210, inlinedAt: !14216)
!14231 = !DILocation(line: 150, column: 9, scope: !14232, inlinedAt: !14216)
!14232 = distinct !DILexicalBlock(scope: !14210, file: !2464, line: 149, column: 6)
!14233 = !DILocation(line: 149, column: 6, scope: !14210, inlinedAt: !14216)
!14234 = !DILocation(line: 157, column: 6, scope: !14235, inlinedAt: !14216)
!14235 = distinct !DILexicalBlock(scope: !14210, file: !2464, line: 157, column: 6)
!14236 = !DILocation(line: 564, column: 6, scope: !14192)
!14237 = !DILocation(line: 566, column: 14, scope: !14238)
!14238 = distinct !DILexicalBlock(scope: !14239, file: !2464, line: 566, column: 7)
!14239 = distinct !DILexicalBlock(scope: !14217, file: !2464, line: 564, column: 42)
!14240 = !DILocation(line: 566, column: 7, scope: !14239)
!14241 = !DILocation(line: 567, column: 4, scope: !14242)
!14242 = distinct !DILexicalBlock(scope: !14238, file: !2464, line: 566, column: 27)
!14243 = !DILocation(line: 568, column: 3, scope: !14242)
!14244 = !DILocation(line: 585, column: 1, scope: !14192)
!14245 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2464, file: !2464, line: 1144, type: !14246, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14248)
!14246 = !DISubroutineType(types: !14247)
!14247 = !{!2356, !14076}
!14248 = !{!14249, !14250, !14251}
!14249 = !DILocalVariable(name: "pq", arg: 1, scope: !14245, file: !2464, line: 1144, type: !14076)
!14250 = !DILocalVariable(name: "thread", scope: !14245, file: !2464, line: 1146, type: !2356)
!14251 = !DILocalVariable(name: "n", scope: !14245, file: !2464, line: 1147, type: !2460)
!14252 = !DILocation(line: 0, scope: !14245)
!14253 = !DILocation(line: 1147, column: 19, scope: !14245)
!14254 = !DILocation(line: 1152, column: 2, scope: !14245)
!14255 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !13012, file: !13012, line: 115, type: !13991, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14256)
!14256 = !{!14257}
!14257 = !DILocalVariable(name: "thread", arg: 1, scope: !14255, file: !13012, line: 115, type: !2356)
!14258 = !DILocation(line: 0, scope: !14255)
!14259 = !DILocation(line: 117, column: 46, scope: !14255)
!14260 = !DILocation(line: 117, column: 10, scope: !14255)
!14261 = !DILocation(line: 117, column: 9, scope: !14255)
!14262 = !DILocation(line: 117, column: 2, scope: !14255)
!14263 = distinct !DISubprogram(name: "is_preempt", scope: !2464, file: !2464, line: 62, type: !13826, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14264)
!14264 = !{!14265}
!14265 = !DILocalVariable(name: "thread", arg: 1, scope: !14263, file: !2464, line: 62, type: !2356)
!14266 = !DILocation(line: 0, scope: !14263)
!14267 = !DILocation(line: 65, column: 22, scope: !14263)
!14268 = !DILocation(line: 65, column: 30, scope: !14263)
!14269 = !DILocation(line: 65, column: 2, scope: !14263)
!14270 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13441, file: !13441, line: 35, type: !14271, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14275)
!14271 = !DISubroutineType(types: !14272)
!14272 = !{!345, !14273}
!14273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14274, size: 32)
!14274 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2407)
!14275 = !{!14276}
!14276 = !DILocalVariable(name: "to", arg: 1, scope: !14270, file: !13441, line: 35, type: !14273)
!14277 = !DILocation(line: 0, scope: !14270)
!14278 = !DILocation(line: 37, column: 35, scope: !14270)
!14279 = !DILocation(line: 37, column: 10, scope: !14270)
!14280 = !DILocation(line: 37, column: 9, scope: !14270)
!14281 = !DILocation(line: 37, column: 2, scope: !14270)
!14282 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !153, file: !153, line: 225, type: !14283, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14287)
!14283 = !DISubroutineType(types: !14284)
!14284 = !{!345, !14285}
!14285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14286, size: 32)
!14286 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2366)
!14287 = !{!14288}
!14288 = !DILocalVariable(name: "node", arg: 1, scope: !14282, file: !153, line: 225, type: !14285)
!14289 = !DILocation(line: 0, scope: !14282)
!14290 = !DILocation(line: 227, column: 15, scope: !14282)
!14291 = !DILocation(line: 227, column: 20, scope: !14282)
!14292 = !DILocation(line: 227, column: 2, scope: !14282)
!14293 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !153, file: !153, line: 325, type: !14165, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14294)
!14294 = !{!14295, !14296}
!14295 = !DILocalVariable(name: "list", arg: 1, scope: !14293, file: !153, line: 325, type: !14076)
!14296 = !DILocalVariable(name: "node", arg: 2, scope: !14293, file: !153, line: 326, type: !2460)
!14297 = !DILocation(line: 0, scope: !14293)
!14298 = !DILocation(line: 328, column: 24, scope: !14293)
!14299 = !DILocation(line: 328, column: 15, scope: !14293)
!14300 = !DILocation(line: 328, column: 9, scope: !14293)
!14301 = !DILocation(line: 328, column: 45, scope: !14293)
!14302 = !DILocation(line: 328, column: 2, scope: !14293)
!14303 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !153, file: !153, line: 266, type: !14304, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14306)
!14304 = !DISubroutineType(types: !14305)
!14305 = !{!345, !14076}
!14306 = !{!14307}
!14307 = !DILocalVariable(name: "list", arg: 1, scope: !14303, file: !153, line: 266, type: !14076)
!14308 = !DILocation(line: 0, scope: !14303)
!14309 = !DILocation(line: 268, column: 15, scope: !14303)
!14310 = !DILocation(line: 268, column: 20, scope: !14303)
!14311 = !DILocation(line: 268, column: 2, scope: !14303)
!14312 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !153, file: !153, line: 496, type: !14313, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14315)
!14313 = !DISubroutineType(types: !14314)
!14314 = !{null, !2460}
!14315 = !{!14316, !14317, !14318}
!14316 = !DILocalVariable(name: "node", arg: 1, scope: !14312, file: !153, line: 496, type: !2460)
!14317 = !DILocalVariable(name: "prev", scope: !14312, file: !153, line: 498, type: !14153)
!14318 = !DILocalVariable(name: "next", scope: !14312, file: !153, line: 499, type: !14153)
!14319 = !DILocation(line: 0, scope: !14312)
!14320 = !DILocation(line: 498, column: 34, scope: !14312)
!14321 = !DILocation(line: 499, column: 34, scope: !14312)
!14322 = !DILocation(line: 501, column: 8, scope: !14312)
!14323 = !DILocation(line: 501, column: 13, scope: !14312)
!14324 = !DILocation(line: 502, column: 8, scope: !14312)
!14325 = !DILocation(line: 502, column: 13, scope: !14312)
!14326 = !DILocation(line: 503, column: 2, scope: !14312)
!14327 = !DILocation(line: 504, column: 1, scope: !14312)
!14328 = distinct !DISubprogram(name: "sys_dnode_init", scope: !153, file: !153, line: 211, type: !14313, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14329)
!14329 = !{!14330}
!14330 = !DILocalVariable(name: "node", arg: 1, scope: !14328, file: !153, line: 211, type: !2460)
!14331 = !DILocation(line: 0, scope: !14328)
!14332 = !DILocation(line: 213, column: 8, scope: !14328)
!14333 = !DILocation(line: 213, column: 13, scope: !14328)
!14334 = !DILocation(line: 214, column: 8, scope: !14328)
!14335 = !DILocation(line: 214, column: 13, scope: !14328)
!14336 = !DILocation(line: 215, column: 1, scope: !14328)
!14337 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !13012, file: !13012, line: 131, type: !14338, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14340)
!14338 = !DISubroutineType(types: !14339)
!14339 = !{!345, !2356, !118}
!14340 = !{!14341, !14342}
!14341 = !DILocalVariable(name: "thread", arg: 1, scope: !14337, file: !13012, line: 131, type: !2356)
!14342 = !DILocalVariable(name: "state", arg: 2, scope: !14337, file: !13012, line: 131, type: !118)
!14343 = !DILocation(line: 0, scope: !14337)
!14344 = !DILocation(line: 133, column: 23, scope: !14337)
!14345 = !DILocation(line: 133, column: 10, scope: !14337)
!14346 = !DILocation(line: 133, column: 36, scope: !14337)
!14347 = !DILocation(line: 133, column: 45, scope: !14337)
!14348 = !DILocation(line: 133, column: 2, scope: !14337)
!14349 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !13012, file: !13012, line: 211, type: !14350, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14352)
!14350 = !DISubroutineType(types: !14351)
!14351 = !{!345, !119, !119}
!14352 = !{!14353, !14354}
!14353 = !DILocalVariable(name: "prio", arg: 1, scope: !14349, file: !13012, line: 211, type: !119)
!14354 = !DILocalVariable(name: "test_prio", arg: 2, scope: !14349, file: !13012, line: 211, type: !119)
!14355 = !DILocation(line: 0, scope: !14349)
!14356 = !DILocation(line: 213, column: 9, scope: !14349)
!14357 = !DILocation(line: 213, column: 2, scope: !14349)
!14358 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !13012, file: !13012, line: 206, type: !14350, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14359)
!14359 = !{!14360, !14361}
!14360 = !DILocalVariable(name: "prio1", arg: 1, scope: !14358, file: !13012, line: 206, type: !119)
!14361 = !DILocalVariable(name: "prio2", arg: 2, scope: !14358, file: !13012, line: 206, type: !119)
!14362 = !DILocation(line: 0, scope: !14358)
!14363 = !DILocation(line: 208, column: 15, scope: !14358)
!14364 = !DILocation(line: 208, column: 2, scope: !14358)
!14365 = distinct !DISubprogram(name: "z_ready_thread", scope: !2464, file: !2464, line: 635, type: !13808, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14366)
!14366 = !{!14367, !14368, !14370}
!14367 = !DILocalVariable(name: "thread", arg: 1, scope: !14365, file: !2464, line: 635, type: !2356)
!14368 = !DILocalVariable(name: "__i", scope: !14369, file: !2464, line: 637, type: !13842)
!14369 = distinct !DILexicalBlock(scope: !14365, file: !2464, line: 637, column: 2)
!14370 = !DILocalVariable(name: "__key", scope: !14369, file: !2464, line: 637, type: !13842)
!14371 = !DILocation(line: 0, scope: !14365)
!14372 = !DILocation(line: 0, scope: !14369)
!14373 = !DILocation(line: 0, scope: !13850, inlinedAt: !14374)
!14374 = distinct !DILocation(line: 637, column: 2, scope: !14369)
!14375 = !DILocation(line: 55, column: 2, scope: !13859, inlinedAt: !14376)
!14376 = distinct !DILocation(line: 145, column: 10, scope: !13850, inlinedAt: !14374)
!14377 = !DILocation(line: 0, scope: !13859, inlinedAt: !14376)
!14378 = !DILocation(line: 148, column: 2, scope: !13867, inlinedAt: !14374)
!14379 = !DILocation(line: 148, column: 2, scope: !13868, inlinedAt: !14374)
!14380 = !DILocation(line: 148, column: 2, scope: !13871, inlinedAt: !14374)
!14381 = !DILocation(line: 160, column: 2, scope: !13850, inlinedAt: !14374)
!14382 = !DILocation(line: 639, column: 4, scope: !14383)
!14383 = distinct !DILexicalBlock(scope: !14384, file: !2464, line: 638, column: 41)
!14384 = distinct !DILexicalBlock(scope: !14385, file: !2464, line: 638, column: 7)
!14385 = distinct !DILexicalBlock(scope: !14386, file: !2464, line: 637, column: 26)
!14386 = distinct !DILexicalBlock(scope: !14369, file: !2464, line: 637, column: 2)
!14387 = !DILocation(line: 0, scope: !13884, inlinedAt: !14388)
!14388 = distinct !DILocation(line: 637, column: 2, scope: !14386)
!14389 = !DILocation(line: 194, column: 2, scope: !13892, inlinedAt: !14388)
!14390 = !DILocation(line: 194, column: 2, scope: !13893, inlinedAt: !14388)
!14391 = !DILocation(line: 194, column: 2, scope: !13896, inlinedAt: !14388)
!14392 = !DILocation(line: 0, scope: !13898, inlinedAt: !14393)
!14393 = distinct !DILocation(line: 215, column: 2, scope: !13884, inlinedAt: !14388)
!14394 = !DILocation(line: 95, column: 2, scope: !13898, inlinedAt: !14393)
!14395 = !DILocation(line: 642, column: 1, scope: !14365)
!14396 = distinct !DISubprogram(name: "ready_thread", scope: !2464, file: !2464, line: 617, type: !13808, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14397)
!14397 = !{!14398}
!14398 = !DILocalVariable(name: "thread", arg: 1, scope: !14396, file: !2464, line: 617, type: !2356)
!14399 = !DILocation(line: 0, scope: !14396)
!14400 = !DILocation(line: 626, column: 7, scope: !14401)
!14401 = distinct !DILexicalBlock(scope: !14396, file: !2464, line: 626, column: 6)
!14402 = !DILocation(line: 626, column: 34, scope: !14401)
!14403 = !DILocation(line: 626, column: 37, scope: !14401)
!14404 = !DILocation(line: 626, column: 6, scope: !14396)
!14405 = !DILocation(line: 0, scope: !14059, inlinedAt: !14406)
!14406 = distinct !DILocation(line: 629, column: 3, scope: !14407)
!14407 = distinct !DILexicalBlock(scope: !14401, file: !2464, line: 626, column: 64)
!14408 = !DILocation(line: 252, column: 15, scope: !14059, inlinedAt: !14406)
!14409 = !DILocation(line: 252, column: 28, scope: !14059, inlinedAt: !14406)
!14410 = !DILocation(line: 0, scope: !14066, inlinedAt: !14411)
!14411 = distinct !DILocation(line: 254, column: 3, scope: !14070, inlinedAt: !14406)
!14412 = !DILocation(line: 0, scope: !14073, inlinedAt: !14413)
!14413 = distinct !DILocation(line: 229, column: 2, scope: !14066, inlinedAt: !14411)
!14414 = !DILocation(line: 186, column: 2, scope: !14083, inlinedAt: !14413)
!14415 = !DILocation(line: 186, column: 2, scope: !14084, inlinedAt: !14413)
!14416 = !DILocation(line: 186, column: 2, scope: !14087, inlinedAt: !14413)
!14417 = !DILocation(line: 188, column: 2, scope: !14089, inlinedAt: !14413)
!14418 = !DILocation(line: 188, column: 2, scope: !14091, inlinedAt: !14413)
!14419 = !DILocation(line: 0, scope: !14089, inlinedAt: !14413)
!14420 = !DILocation(line: 189, column: 7, scope: !14094, inlinedAt: !14413)
!14421 = !DILocation(line: 189, column: 35, scope: !14094, inlinedAt: !14413)
!14422 = !DILocation(line: 189, column: 7, scope: !14095, inlinedAt: !14413)
!14423 = !DILocation(line: 191, column: 21, scope: !14099, inlinedAt: !14413)
!14424 = !DILocation(line: 190, column: 4, scope: !14099, inlinedAt: !14413)
!14425 = !DILocation(line: 192, column: 4, scope: !14099, inlinedAt: !14413)
!14426 = distinct !{!14426, !14417, !14427}
!14427 = !DILocation(line: 194, column: 2, scope: !14089, inlinedAt: !14413)
!14428 = !DILocation(line: 196, column: 37, scope: !14073, inlinedAt: !14413)
!14429 = !DILocation(line: 196, column: 2, scope: !14073, inlinedAt: !14413)
!14430 = !DILocation(line: 197, column: 1, scope: !14073, inlinedAt: !14413)
!14431 = !DILocation(line: 630, column: 3, scope: !14407)
!14432 = !DILocation(line: 632, column: 2, scope: !14407)
!14433 = !DILocation(line: 633, column: 1, scope: !14396)
!14434 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !13012, file: !13012, line: 120, type: !13991, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14435)
!14435 = !{!14436}
!14436 = !DILocalVariable(name: "thread", arg: 1, scope: !14434, file: !13012, line: 120, type: !2356)
!14437 = !DILocation(line: 0, scope: !14434)
!14438 = !DILocation(line: 122, column: 12, scope: !14434)
!14439 = !DILocation(line: 122, column: 62, scope: !14434)
!14440 = !DILocation(line: 123, column: 4, scope: !14434)
!14441 = !DILocation(line: 122, column: 2, scope: !14434)
!14442 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2464, file: !2464, line: 644, type: !13808, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14443)
!14443 = !{!14444, !14445, !14447}
!14444 = !DILocalVariable(name: "thread", arg: 1, scope: !14442, file: !2464, line: 644, type: !2356)
!14445 = !DILocalVariable(name: "__i", scope: !14446, file: !2464, line: 646, type: !13842)
!14446 = distinct !DILexicalBlock(scope: !14442, file: !2464, line: 646, column: 2)
!14447 = !DILocalVariable(name: "__key", scope: !14446, file: !2464, line: 646, type: !13842)
!14448 = !DILocation(line: 0, scope: !14442)
!14449 = !DILocation(line: 0, scope: !14446)
!14450 = !DILocation(line: 0, scope: !13850, inlinedAt: !14451)
!14451 = distinct !DILocation(line: 646, column: 2, scope: !14446)
!14452 = !DILocation(line: 55, column: 2, scope: !13859, inlinedAt: !14453)
!14453 = distinct !DILocation(line: 145, column: 10, scope: !13850, inlinedAt: !14451)
!14454 = !DILocation(line: 0, scope: !13859, inlinedAt: !14453)
!14455 = !DILocation(line: 148, column: 2, scope: !13867, inlinedAt: !14451)
!14456 = !DILocation(line: 148, column: 2, scope: !13868, inlinedAt: !14451)
!14457 = !DILocation(line: 148, column: 2, scope: !13871, inlinedAt: !14451)
!14458 = !DILocation(line: 160, column: 2, scope: !13850, inlinedAt: !14451)
!14459 = !DILocation(line: 647, column: 3, scope: !14460)
!14460 = distinct !DILexicalBlock(scope: !14461, file: !2464, line: 646, column: 26)
!14461 = distinct !DILexicalBlock(scope: !14446, file: !2464, line: 646, column: 2)
!14462 = !DILocation(line: 0, scope: !13884, inlinedAt: !14463)
!14463 = distinct !DILocation(line: 646, column: 2, scope: !14461)
!14464 = !DILocation(line: 194, column: 2, scope: !13892, inlinedAt: !14463)
!14465 = !DILocation(line: 194, column: 2, scope: !13893, inlinedAt: !14463)
!14466 = !DILocation(line: 194, column: 2, scope: !13896, inlinedAt: !14463)
!14467 = !DILocation(line: 0, scope: !13898, inlinedAt: !14468)
!14468 = distinct !DILocation(line: 215, column: 2, scope: !13884, inlinedAt: !14463)
!14469 = !DILocation(line: 95, column: 2, scope: !13898, inlinedAt: !14468)
!14470 = !DILocation(line: 649, column: 1, scope: !14442)
!14471 = distinct !DISubprogram(name: "z_sched_start", scope: !2464, file: !2464, line: 651, type: !13808, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14472)
!14472 = !{!14473, !14474}
!14473 = !DILocalVariable(name: "thread", arg: 1, scope: !14471, file: !2464, line: 651, type: !2356)
!14474 = !DILocalVariable(name: "key", scope: !14471, file: !2464, line: 653, type: !13842)
!14475 = !DILocation(line: 0, scope: !14471)
!14476 = !DILocation(line: 0, scope: !13850, inlinedAt: !14477)
!14477 = distinct !DILocation(line: 653, column: 25, scope: !14471)
!14478 = !DILocation(line: 55, column: 2, scope: !13859, inlinedAt: !14479)
!14479 = distinct !DILocation(line: 145, column: 10, scope: !13850, inlinedAt: !14477)
!14480 = !DILocation(line: 0, scope: !13859, inlinedAt: !14479)
!14481 = !DILocation(line: 148, column: 2, scope: !13867, inlinedAt: !14477)
!14482 = !DILocation(line: 148, column: 2, scope: !13868, inlinedAt: !14477)
!14483 = !DILocation(line: 148, column: 2, scope: !13871, inlinedAt: !14477)
!14484 = !DILocation(line: 160, column: 2, scope: !13850, inlinedAt: !14477)
!14485 = !DILocation(line: 655, column: 6, scope: !14486)
!14486 = distinct !DILexicalBlock(scope: !14471, file: !2464, line: 655, column: 6)
!14487 = !DILocation(line: 655, column: 6, scope: !14471)
!14488 = !DILocation(line: 0, scope: !13884, inlinedAt: !14489)
!14489 = distinct !DILocation(line: 656, column: 3, scope: !14490)
!14490 = distinct !DILexicalBlock(scope: !14486, file: !2464, line: 655, column: 36)
!14491 = !DILocation(line: 194, column: 2, scope: !13892, inlinedAt: !14489)
!14492 = !DILocation(line: 194, column: 2, scope: !13893, inlinedAt: !14489)
!14493 = !DILocation(line: 194, column: 2, scope: !13896, inlinedAt: !14489)
!14494 = !DILocation(line: 0, scope: !13898, inlinedAt: !14495)
!14495 = distinct !DILocation(line: 215, column: 2, scope: !13884, inlinedAt: !14489)
!14496 = !DILocation(line: 95, column: 2, scope: !13898, inlinedAt: !14495)
!14497 = !DILocation(line: 657, column: 3, scope: !14490)
!14498 = !DILocation(line: 660, column: 2, scope: !14471)
!14499 = !DILocation(line: 661, column: 2, scope: !14471)
!14500 = !DILocation(line: 662, column: 2, scope: !14471)
!14501 = !DILocation(line: 663, column: 1, scope: !14471)
!14502 = distinct !DISubprogram(name: "z_has_thread_started", scope: !13012, file: !13012, line: 126, type: !13991, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14503)
!14503 = !{!14504}
!14504 = !DILocalVariable(name: "thread", arg: 1, scope: !14502, file: !13012, line: 126, type: !2356)
!14505 = !DILocation(line: 0, scope: !14502)
!14506 = !DILocation(line: 128, column: 23, scope: !14502)
!14507 = !DILocation(line: 128, column: 36, scope: !14502)
!14508 = !DILocation(line: 128, column: 56, scope: !14502)
!14509 = !DILocation(line: 128, column: 2, scope: !14502)
!14510 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13012, file: !13012, line: 155, type: !13808, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14511)
!14511 = !{!14512}
!14512 = !DILocalVariable(name: "thread", arg: 1, scope: !14510, file: !13012, line: 155, type: !2356)
!14513 = !DILocation(line: 0, scope: !14510)
!14514 = !DILocation(line: 157, column: 15, scope: !14510)
!14515 = !DILocation(line: 157, column: 28, scope: !14510)
!14516 = !DILocation(line: 158, column: 1, scope: !14510)
!14517 = distinct !DISubprogram(name: "z_reschedule", scope: !2464, file: !2464, line: 967, type: !13885, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14518)
!14518 = !{!14519, !14520}
!14519 = !DILocalVariable(name: "lock", arg: 1, scope: !14517, file: !2464, line: 967, type: !13853)
!14520 = !DILocalVariable(name: "key", arg: 2, scope: !14517, file: !2464, line: 967, type: !13842)
!14521 = !DILocation(line: 0, scope: !14517)
!14522 = !DILocation(line: 969, column: 6, scope: !14523)
!14523 = distinct !DILexicalBlock(scope: !14517, file: !2464, line: 969, column: 6)
!14524 = !DILocation(line: 969, column: 23, scope: !14523)
!14525 = !DILocation(line: 969, column: 26, scope: !14523)
!14526 = !DILocation(line: 969, column: 6, scope: !14517)
!14527 = !DILocalVariable(name: "key", arg: 2, scope: !14528, file: !13116, line: 193, type: !13842)
!14528 = distinct !DISubprogram(name: "z_swap", scope: !13116, file: !13116, line: 193, type: !14529, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14531)
!14529 = !DISubroutineType(types: !14530)
!14530 = !{!119, !13853, !13842}
!14531 = !{!14532, !14527}
!14532 = !DILocalVariable(name: "lock", arg: 1, scope: !14528, file: !13116, line: 193, type: !13853)
!14533 = !DILocation(line: 0, scope: !14528, inlinedAt: !14534)
!14534 = distinct !DILocation(line: 970, column: 3, scope: !14535)
!14535 = distinct !DILexicalBlock(scope: !14523, file: !2464, line: 969, column: 39)
!14536 = !DILocalVariable(name: "l", arg: 1, scope: !14537, file: !259, line: 221, type: !13853)
!14537 = distinct !DISubprogram(name: "k_spin_release", scope: !259, file: !259, line: 221, type: !14538, scopeLine: 222, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14540)
!14538 = !DISubroutineType(types: !14539)
!14539 = !{null, !13853}
!14540 = !{!14536}
!14541 = !DILocation(line: 0, scope: !14537, inlinedAt: !14542)
!14542 = distinct !DILocation(line: 195, column: 2, scope: !14528, inlinedAt: !14534)
!14543 = !DILocation(line: 225, column: 2, scope: !14544, inlinedAt: !14542)
!14544 = distinct !DILexicalBlock(scope: !14545, file: !259, line: 225, column: 2)
!14545 = distinct !DILexicalBlock(scope: !14537, file: !259, line: 225, column: 2)
!14546 = !DILocation(line: 225, column: 2, scope: !14545, inlinedAt: !14542)
!14547 = !DILocation(line: 225, column: 2, scope: !14548, inlinedAt: !14542)
!14548 = distinct !DILexicalBlock(scope: !14544, file: !259, line: 225, column: 2)
!14549 = !DILocation(line: 196, column: 9, scope: !14528, inlinedAt: !14534)
!14550 = !DILocation(line: 971, column: 2, scope: !14535)
!14551 = !DILocation(line: 0, scope: !13884, inlinedAt: !14552)
!14552 = distinct !DILocation(line: 972, column: 3, scope: !14553)
!14553 = distinct !DILexicalBlock(scope: !14523, file: !2464, line: 971, column: 9)
!14554 = !DILocation(line: 194, column: 2, scope: !13892, inlinedAt: !14552)
!14555 = !DILocation(line: 194, column: 2, scope: !13893, inlinedAt: !14552)
!14556 = !DILocation(line: 194, column: 2, scope: !13896, inlinedAt: !14552)
!14557 = !DILocation(line: 0, scope: !13898, inlinedAt: !14558)
!14558 = distinct !DILocation(line: 215, column: 2, scope: !13884, inlinedAt: !14552)
!14559 = !DILocation(line: 95, column: 2, scope: !13898, inlinedAt: !14558)
!14560 = !DILocation(line: 975, column: 1, scope: !14517)
!14561 = distinct !DISubprogram(name: "resched", scope: !2464, file: !2464, line: 940, type: !14562, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14564)
!14562 = !DISubroutineType(types: !14563)
!14563 = !{!345, !118}
!14564 = !{!14565}
!14565 = !DILocalVariable(name: "key", arg: 1, scope: !14561, file: !2464, line: 940, type: !118)
!14566 = !DILocation(line: 0, scope: !14561)
!14567 = !DILocalVariable(name: "key", arg: 1, scope: !14568, file: !6131, line: 112, type: !32)
!14568 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !6131, file: !6131, line: 112, type: !14569, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14571)
!14569 = !DISubroutineType(types: !14570)
!14570 = !{!345, !32}
!14571 = !{!14567}
!14572 = !DILocation(line: 0, scope: !14568, inlinedAt: !14573)
!14573 = distinct !DILocation(line: 946, column: 9, scope: !14561)
!14574 = !DILocation(line: 115, column: 13, scope: !14568, inlinedAt: !14573)
!14575 = !DILocation(line: 946, column: 32, scope: !14561)
!14576 = !DILocation(line: 1031, column: 3, scope: !14577, inlinedAt: !14580)
!14577 = distinct !DISubprogram(name: "__get_IPSR", scope: !6452, file: !6452, line: 1027, type: !3336, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14578)
!14578 = !{!14579}
!14579 = !DILocalVariable(name: "result", scope: !14577, file: !6452, line: 1029, type: !118)
!14580 = distinct !DILocation(line: 48, column: 10, scope: !14581, inlinedAt: !14582)
!14581 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7502, file: !7502, line: 46, type: !7503, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !2162)
!14582 = distinct !DILocation(line: 946, column: 36, scope: !14561)
!14583 = !{i64 4157223}
!14584 = !DILocation(line: 0, scope: !14577, inlinedAt: !14580)
!14585 = !DILocation(line: 48, column: 9, scope: !14581, inlinedAt: !14582)
!14586 = !DILocation(line: 946, column: 2, scope: !14561)
!14587 = distinct !DISubprogram(name: "need_swap", scope: !2464, file: !2464, line: 953, type: !7503, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14588)
!14588 = !{!14589}
!14589 = !DILocalVariable(name: "new_thread", scope: !14587, file: !2464, line: 959, type: !2356)
!14590 = !DILocation(line: 962, column: 31, scope: !14587)
!14591 = !DILocation(line: 0, scope: !14587)
!14592 = !DILocation(line: 963, column: 23, scope: !14587)
!14593 = !DILocation(line: 963, column: 20, scope: !14587)
!14594 = !DILocation(line: 963, column: 2, scope: !14587)
!14595 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !13116, file: !13116, line: 181, type: !6462, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14596)
!14596 = !{!14597, !14598}
!14597 = !DILocalVariable(name: "key", arg: 1, scope: !14595, file: !13116, line: 181, type: !32)
!14598 = !DILocalVariable(name: "ret", scope: !14595, file: !13116, line: 183, type: !119)
!14599 = !DILocation(line: 0, scope: !14595)
!14600 = !DILocation(line: 185, column: 8, scope: !14595)
!14601 = !DILocation(line: 186, column: 2, scope: !14595)
!14602 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2464, file: !2464, line: 665, type: !13808, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14603)
!14603 = !{!14604, !14605, !14607}
!14604 = !DILocalVariable(name: "thread", arg: 1, scope: !14602, file: !2464, line: 665, type: !2356)
!14605 = !DILocalVariable(name: "__i", scope: !14606, file: !2464, line: 671, type: !13842)
!14606 = distinct !DILexicalBlock(scope: !14602, file: !2464, line: 671, column: 2)
!14607 = !DILocalVariable(name: "__key", scope: !14606, file: !2464, line: 671, type: !13842)
!14608 = !DILocation(line: 0, scope: !14602)
!14609 = !DILocation(line: 669, column: 8, scope: !14602)
!14610 = !DILocation(line: 0, scope: !14606)
!14611 = !DILocation(line: 0, scope: !13850, inlinedAt: !14612)
!14612 = distinct !DILocation(line: 671, column: 2, scope: !14606)
!14613 = !DILocation(line: 55, column: 2, scope: !13859, inlinedAt: !14614)
!14614 = distinct !DILocation(line: 145, column: 10, scope: !13850, inlinedAt: !14612)
!14615 = !DILocation(line: 0, scope: !13859, inlinedAt: !14614)
!14616 = !DILocation(line: 148, column: 2, scope: !13867, inlinedAt: !14612)
!14617 = !DILocation(line: 148, column: 2, scope: !13868, inlinedAt: !14612)
!14618 = !DILocation(line: 148, column: 2, scope: !13871, inlinedAt: !14612)
!14619 = !DILocation(line: 160, column: 2, scope: !13850, inlinedAt: !14612)
!14620 = !DILocation(line: 672, column: 7, scope: !14621)
!14621 = distinct !DILexicalBlock(scope: !14622, file: !2464, line: 672, column: 7)
!14622 = distinct !DILexicalBlock(scope: !14623, file: !2464, line: 671, column: 26)
!14623 = distinct !DILexicalBlock(scope: !14606, file: !2464, line: 671, column: 2)
!14624 = !DILocation(line: 672, column: 7, scope: !14622)
!14625 = !DILocation(line: 0, scope: !14042, inlinedAt: !14626)
!14626 = distinct !DILocation(line: 673, column: 4, scope: !14627)
!14627 = distinct !DILexicalBlock(scope: !14621, file: !2464, line: 672, column: 35)
!14628 = !DILocation(line: 266, column: 15, scope: !14042, inlinedAt: !14626)
!14629 = !DILocation(line: 266, column: 28, scope: !14042, inlinedAt: !14626)
!14630 = !DILocation(line: 0, scope: !14050, inlinedAt: !14631)
!14631 = distinct !DILocation(line: 268, column: 3, scope: !14054, inlinedAt: !14626)
!14632 = !DILocation(line: 234, column: 2, scope: !14050, inlinedAt: !14631)
!14633 = !DILocation(line: 674, column: 3, scope: !14627)
!14634 = !DILocation(line: 675, column: 3, scope: !14622)
!14635 = !DILocation(line: 676, column: 26, scope: !14622)
!14636 = !DILocation(line: 676, column: 23, scope: !14622)
!14637 = !DILocation(line: 676, column: 3, scope: !14622)
!14638 = !DILocation(line: 0, scope: !13884, inlinedAt: !14639)
!14639 = distinct !DILocation(line: 671, column: 2, scope: !14623)
!14640 = !DILocation(line: 194, column: 2, scope: !13892, inlinedAt: !14639)
!14641 = !DILocation(line: 194, column: 2, scope: !13893, inlinedAt: !14639)
!14642 = !DILocation(line: 194, column: 2, scope: !13896, inlinedAt: !14639)
!14643 = !DILocation(line: 0, scope: !13898, inlinedAt: !14644)
!14644 = distinct !DILocation(line: 215, column: 2, scope: !13884, inlinedAt: !14639)
!14645 = !DILocation(line: 95, column: 2, scope: !13898, inlinedAt: !14644)
!14646 = !DILocation(line: 679, column: 16, scope: !14647)
!14647 = distinct !DILexicalBlock(scope: !14602, file: !2464, line: 679, column: 6)
!14648 = !DILocation(line: 679, column: 13, scope: !14647)
!14649 = !DILocation(line: 679, column: 6, scope: !14602)
!14650 = !DILocation(line: 680, column: 3, scope: !14651)
!14651 = distinct !DILexicalBlock(scope: !14647, file: !2464, line: 679, column: 26)
!14652 = !DILocation(line: 681, column: 2, scope: !14651)
!14653 = !DILocation(line: 684, column: 1, scope: !14602)
!14654 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !13441, file: !13441, line: 52, type: !13826, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14655)
!14655 = !{!14656}
!14656 = !DILocalVariable(name: "thread", arg: 1, scope: !14654, file: !13441, line: 52, type: !2356)
!14657 = !DILocation(line: 0, scope: !14654)
!14658 = !DILocation(line: 54, column: 39, scope: !14654)
!14659 = !DILocation(line: 54, column: 9, scope: !14654)
!14660 = !DILocation(line: 54, column: 2, scope: !14654)
!14661 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !13012, file: !13012, line: 141, type: !13808, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14662)
!14662 = !{!14663}
!14663 = !DILocalVariable(name: "thread", arg: 1, scope: !14661, file: !13012, line: 141, type: !2356)
!14664 = !DILocation(line: 0, scope: !14661)
!14665 = !DILocation(line: 143, column: 15, scope: !14661)
!14666 = !DILocation(line: 143, column: 28, scope: !14661)
!14667 = !DILocation(line: 146, column: 1, scope: !14661)
!14668 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !13012, file: !13012, line: 73, type: !3098, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !2162)
!14669 = !DILocation(line: 55, column: 2, scope: !13859, inlinedAt: !14670)
!14670 = distinct !DILocation(line: 75, column: 30, scope: !14668)
!14671 = !DILocation(line: 0, scope: !13859, inlinedAt: !14670)
!14672 = !DILocation(line: 75, column: 9, scope: !14668)
!14673 = !DILocation(line: 76, column: 1, scope: !14668)
!14674 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2464, file: !2464, line: 977, type: !6547, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14675)
!14675 = !{!14676}
!14676 = !DILocalVariable(name: "key", arg: 1, scope: !14674, file: !2464, line: 977, type: !118)
!14677 = !DILocation(line: 0, scope: !14674)
!14678 = !DILocation(line: 979, column: 6, scope: !14679)
!14679 = distinct !DILexicalBlock(scope: !14674, file: !2464, line: 979, column: 6)
!14680 = !DILocation(line: 979, column: 6, scope: !14674)
!14681 = !DILocation(line: 980, column: 3, scope: !14682)
!14682 = distinct !DILexicalBlock(scope: !14679, file: !2464, line: 979, column: 20)
!14683 = !DILocation(line: 981, column: 2, scope: !14682)
!14684 = !DILocation(line: 0, scope: !13898, inlinedAt: !14685)
!14685 = distinct !DILocation(line: 982, column: 3, scope: !14686)
!14686 = distinct !DILexicalBlock(scope: !14679, file: !2464, line: 981, column: 9)
!14687 = !DILocation(line: 95, column: 2, scope: !13898, inlinedAt: !14685)
!14688 = !DILocation(line: 985, column: 1, scope: !14674)
!14689 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2464, file: !2464, line: 695, type: !13808, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14690)
!14690 = !{!14691, !14692}
!14691 = !DILocalVariable(name: "thread", arg: 1, scope: !14689, file: !2464, line: 695, type: !2356)
!14692 = !DILocalVariable(name: "key", scope: !14689, file: !2464, line: 699, type: !13842)
!14693 = !DILocation(line: 0, scope: !14689)
!14694 = !DILocation(line: 0, scope: !13850, inlinedAt: !14695)
!14695 = distinct !DILocation(line: 699, column: 25, scope: !14689)
!14696 = !DILocation(line: 55, column: 2, scope: !13859, inlinedAt: !14697)
!14697 = distinct !DILocation(line: 145, column: 10, scope: !13850, inlinedAt: !14695)
!14698 = !DILocation(line: 0, scope: !13859, inlinedAt: !14697)
!14699 = !DILocation(line: 148, column: 2, scope: !13867, inlinedAt: !14695)
!14700 = !DILocation(line: 148, column: 2, scope: !13868, inlinedAt: !14695)
!14701 = !DILocation(line: 148, column: 2, scope: !13871, inlinedAt: !14695)
!14702 = !DILocation(line: 160, column: 2, scope: !13850, inlinedAt: !14695)
!14703 = !DILocation(line: 702, column: 7, scope: !14704)
!14704 = distinct !DILexicalBlock(scope: !14689, file: !2464, line: 702, column: 6)
!14705 = !DILocation(line: 702, column: 6, scope: !14689)
!14706 = !DILocation(line: 0, scope: !13884, inlinedAt: !14707)
!14707 = distinct !DILocation(line: 703, column: 3, scope: !14708)
!14708 = distinct !DILexicalBlock(scope: !14704, file: !2464, line: 702, column: 38)
!14709 = !DILocation(line: 194, column: 2, scope: !13892, inlinedAt: !14707)
!14710 = !DILocation(line: 194, column: 2, scope: !13893, inlinedAt: !14707)
!14711 = !DILocation(line: 194, column: 2, scope: !13896, inlinedAt: !14707)
!14712 = !DILocation(line: 0, scope: !13898, inlinedAt: !14713)
!14713 = distinct !DILocation(line: 215, column: 2, scope: !13884, inlinedAt: !14707)
!14714 = !DILocation(line: 95, column: 2, scope: !13898, inlinedAt: !14713)
!14715 = !DILocation(line: 704, column: 3, scope: !14708)
!14716 = !DILocation(line: 707, column: 2, scope: !14689)
!14717 = !DILocation(line: 708, column: 2, scope: !14689)
!14718 = !DILocation(line: 710, column: 2, scope: !14689)
!14719 = !DILocation(line: 713, column: 1, scope: !14689)
!14720 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !13012, file: !13012, line: 96, type: !13991, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14721)
!14721 = !{!14722}
!14722 = !DILocalVariable(name: "thread", arg: 1, scope: !14720, file: !13012, line: 96, type: !2356)
!14723 = !DILocation(line: 0, scope: !14720)
!14724 = !DILocation(line: 98, column: 23, scope: !14720)
!14725 = !DILocation(line: 98, column: 36, scope: !14720)
!14726 = !DILocation(line: 98, column: 57, scope: !14720)
!14727 = !DILocation(line: 98, column: 2, scope: !14720)
!14728 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !13012, file: !13012, line: 148, type: !13808, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14729)
!14729 = !{!14730}
!14730 = !DILocalVariable(name: "thread", arg: 1, scope: !14728, file: !13012, line: 148, type: !2356)
!14731 = !DILocation(line: 0, scope: !14728)
!14732 = !DILocation(line: 150, column: 15, scope: !14728)
!14733 = !DILocation(line: 150, column: 28, scope: !14728)
!14734 = !DILocation(line: 153, column: 1, scope: !14728)
!14735 = distinct !DISubprogram(name: "z_pend_thread", scope: !2464, file: !2464, line: 770, type: !14736, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14742)
!14736 = !DISubroutineType(types: !14737)
!14737 = !{null, !2356, !2387, !14738}
!14738 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !115, line: 67, baseType: !14739)
!14739 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !115, line: 65, size: 64, elements: !14740)
!14740 = !{!14741}
!14741 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14739, file: !115, line: 66, baseType: !114, size: 64)
!14742 = !{!14743, !14744, !14745, !14746, !14748}
!14743 = !DILocalVariable(name: "thread", arg: 1, scope: !14735, file: !2464, line: 770, type: !2356)
!14744 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14735, file: !2464, line: 770, type: !2387)
!14745 = !DILocalVariable(name: "timeout", arg: 3, scope: !14735, file: !2464, line: 771, type: !14738)
!14746 = !DILocalVariable(name: "__i", scope: !14747, file: !2464, line: 774, type: !13842)
!14747 = distinct !DILexicalBlock(scope: !14735, file: !2464, line: 774, column: 2)
!14748 = !DILocalVariable(name: "__key", scope: !14747, file: !2464, line: 774, type: !13842)
!14749 = !DILocation(line: 0, scope: !14735)
!14750 = !DILocation(line: 773, column: 2, scope: !14751)
!14751 = distinct !DILexicalBlock(scope: !14752, file: !2464, line: 773, column: 2)
!14752 = distinct !DILexicalBlock(scope: !14735, file: !2464, line: 773, column: 2)
!14753 = !DILocation(line: 773, column: 2, scope: !14752)
!14754 = !DILocation(line: 773, column: 2, scope: !14755)
!14755 = distinct !DILexicalBlock(scope: !14751, file: !2464, line: 773, column: 2)
!14756 = !DILocation(line: 0, scope: !14747)
!14757 = !DILocation(line: 0, scope: !13850, inlinedAt: !14758)
!14758 = distinct !DILocation(line: 774, column: 2, scope: !14747)
!14759 = !DILocation(line: 55, column: 2, scope: !13859, inlinedAt: !14760)
!14760 = distinct !DILocation(line: 145, column: 10, scope: !13850, inlinedAt: !14758)
!14761 = !DILocation(line: 0, scope: !13859, inlinedAt: !14760)
!14762 = !DILocation(line: 148, column: 2, scope: !13867, inlinedAt: !14758)
!14763 = !DILocation(line: 148, column: 2, scope: !13868, inlinedAt: !14758)
!14764 = !DILocation(line: 148, column: 2, scope: !13871, inlinedAt: !14758)
!14765 = !DILocation(line: 160, column: 2, scope: !13850, inlinedAt: !14758)
!14766 = !DILocation(line: 775, column: 3, scope: !14767)
!14767 = distinct !DILexicalBlock(scope: !14768, file: !2464, line: 774, column: 26)
!14768 = distinct !DILexicalBlock(scope: !14747, file: !2464, line: 774, column: 2)
!14769 = !DILocation(line: 0, scope: !13884, inlinedAt: !14770)
!14770 = distinct !DILocation(line: 774, column: 2, scope: !14768)
!14771 = !DILocation(line: 194, column: 2, scope: !13892, inlinedAt: !14770)
!14772 = !DILocation(line: 194, column: 2, scope: !13893, inlinedAt: !14770)
!14773 = !DILocation(line: 194, column: 2, scope: !13896, inlinedAt: !14770)
!14774 = !DILocation(line: 0, scope: !13898, inlinedAt: !14775)
!14775 = distinct !DILocation(line: 215, column: 2, scope: !13884, inlinedAt: !14770)
!14776 = !DILocation(line: 95, column: 2, scope: !13898, inlinedAt: !14775)
!14777 = !DILocation(line: 777, column: 1, scope: !14735)
!14778 = distinct !DISubprogram(name: "is_thread_dummy", scope: !2464, file: !2464, line: 79, type: !13991, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14779)
!14779 = !{!14780}
!14780 = !DILocalVariable(name: "thread", arg: 1, scope: !14778, file: !2464, line: 79, type: !2356)
!14781 = !DILocation(line: 0, scope: !14778)
!14782 = !DILocation(line: 81, column: 23, scope: !14778)
!14783 = !DILocation(line: 81, column: 36, scope: !14778)
!14784 = !DILocation(line: 81, column: 53, scope: !14778)
!14785 = !DILocation(line: 81, column: 2, scope: !14778)
!14786 = distinct !DISubprogram(name: "pend_locked", scope: !2464, file: !2464, line: 760, type: !14736, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14787)
!14787 = !{!14788, !14789, !14790}
!14788 = !DILocalVariable(name: "thread", arg: 1, scope: !14786, file: !2464, line: 760, type: !2356)
!14789 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14786, file: !2464, line: 760, type: !2387)
!14790 = !DILocalVariable(name: "timeout", arg: 3, scope: !14786, file: !2464, line: 761, type: !14738)
!14791 = !DILocation(line: 0, scope: !14786)
!14792 = !DILocation(line: 766, column: 2, scope: !14786)
!14793 = !DILocation(line: 767, column: 2, scope: !14786)
!14794 = !DILocation(line: 768, column: 1, scope: !14786)
!14795 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2464, file: !2464, line: 740, type: !14796, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14798)
!14796 = !DISubroutineType(types: !14797)
!14797 = !{null, !2356, !2387}
!14798 = !{!14799, !14800}
!14799 = !DILocalVariable(name: "thread", arg: 1, scope: !14795, file: !2464, line: 740, type: !2356)
!14800 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14795, file: !2464, line: 740, type: !2387)
!14801 = !DILocation(line: 0, scope: !14795)
!14802 = !DILocation(line: 742, column: 2, scope: !14795)
!14803 = !DILocation(line: 743, column: 2, scope: !14795)
!14804 = !DILocation(line: 747, column: 13, scope: !14805)
!14805 = distinct !DILexicalBlock(scope: !14795, file: !2464, line: 747, column: 6)
!14806 = !DILocation(line: 747, column: 6, scope: !14795)
!14807 = !DILocation(line: 748, column: 16, scope: !14808)
!14808 = distinct !DILexicalBlock(scope: !14805, file: !2464, line: 747, column: 22)
!14809 = !DILocation(line: 748, column: 26, scope: !14808)
!14810 = !DILocation(line: 749, column: 28, scope: !14808)
!14811 = !DILocation(line: 0, scope: !14073, inlinedAt: !14812)
!14812 = distinct !DILocation(line: 749, column: 3, scope: !14808)
!14813 = !DILocation(line: 186, column: 2, scope: !14083, inlinedAt: !14812)
!14814 = !DILocation(line: 186, column: 2, scope: !14084, inlinedAt: !14812)
!14815 = !DILocation(line: 186, column: 2, scope: !14087, inlinedAt: !14812)
!14816 = !DILocation(line: 188, column: 2, scope: !14089, inlinedAt: !14812)
!14817 = !DILocation(line: 188, column: 2, scope: !14091, inlinedAt: !14812)
!14818 = !DILocation(line: 0, scope: !14089, inlinedAt: !14812)
!14819 = !DILocation(line: 189, column: 7, scope: !14094, inlinedAt: !14812)
!14820 = !DILocation(line: 189, column: 35, scope: !14094, inlinedAt: !14812)
!14821 = !DILocation(line: 189, column: 7, scope: !14095, inlinedAt: !14812)
!14822 = !DILocation(line: 191, column: 21, scope: !14099, inlinedAt: !14812)
!14823 = !DILocation(line: 190, column: 4, scope: !14099, inlinedAt: !14812)
!14824 = !DILocation(line: 192, column: 4, scope: !14099, inlinedAt: !14812)
!14825 = distinct !{!14825, !14816, !14826}
!14826 = !DILocation(line: 194, column: 2, scope: !14089, inlinedAt: !14812)
!14827 = !DILocation(line: 196, column: 37, scope: !14073, inlinedAt: !14812)
!14828 = !DILocation(line: 196, column: 2, scope: !14073, inlinedAt: !14812)
!14829 = !DILocation(line: 197, column: 1, scope: !14073, inlinedAt: !14812)
!14830 = !DILocation(line: 751, column: 1, scope: !14795)
!14831 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2464, file: !2464, line: 753, type: !14832, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14834)
!14832 = !DISubroutineType(types: !14833)
!14833 = !{null, !2356, !14738}
!14834 = !{!14835, !14836}
!14835 = !DILocalVariable(name: "thread", arg: 1, scope: !14831, file: !2464, line: 753, type: !2356)
!14836 = !DILocalVariable(name: "timeout", arg: 2, scope: !14831, file: !2464, line: 753, type: !14738)
!14837 = !DILocation(line: 0, scope: !14831)
!14838 = !DILocation(line: 755, column: 7, scope: !14839)
!14839 = distinct !DILexicalBlock(scope: !14831, file: !2464, line: 755, column: 6)
!14840 = !DILocation(line: 755, column: 6, scope: !14831)
!14841 = !DILocation(line: 756, column: 3, scope: !14842)
!14842 = distinct !DILexicalBlock(scope: !14839, file: !2464, line: 755, column: 41)
!14843 = !DILocation(line: 757, column: 2, scope: !14842)
!14844 = !DILocation(line: 758, column: 1, scope: !14831)
!14845 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13441, file: !13441, line: 47, type: !14832, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14846)
!14846 = !{!14847, !14848}
!14847 = !DILocalVariable(name: "thread", arg: 1, scope: !14845, file: !13441, line: 47, type: !2356)
!14848 = !DILocalVariable(name: "ticks", arg: 2, scope: !14845, file: !13441, line: 47, type: !14738)
!14849 = !DILocation(line: 0, scope: !14845)
!14850 = !DILocation(line: 49, column: 30, scope: !14845)
!14851 = !DILocation(line: 49, column: 2, scope: !14845)
!14852 = !DILocation(line: 50, column: 1, scope: !14845)
!14853 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2464, file: !2464, line: 795, type: !2413, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14854)
!14854 = !{!14855, !14856, !14857, !14859, !14860}
!14855 = !DILocalVariable(name: "timeout", arg: 1, scope: !14853, file: !2464, line: 795, type: !2415)
!14856 = !DILocalVariable(name: "thread", scope: !14853, file: !2464, line: 797, type: !2356)
!14857 = !DILocalVariable(name: "__i", scope: !14858, file: !2464, line: 800, type: !13842)
!14858 = distinct !DILexicalBlock(scope: !14853, file: !2464, line: 800, column: 2)
!14859 = !DILocalVariable(name: "__key", scope: !14858, file: !2464, line: 800, type: !13842)
!14860 = !DILocalVariable(name: "killed", scope: !14861, file: !2464, line: 801, type: !345)
!14861 = distinct !DILexicalBlock(scope: !14862, file: !2464, line: 800, column: 26)
!14862 = distinct !DILexicalBlock(scope: !14858, file: !2464, line: 800, column: 2)
!14863 = !DILocation(line: 0, scope: !14853)
!14864 = !DILocation(line: 797, column: 28, scope: !14853)
!14865 = !DILocation(line: 0, scope: !14858)
!14866 = !DILocation(line: 0, scope: !13850, inlinedAt: !14867)
!14867 = distinct !DILocation(line: 800, column: 2, scope: !14858)
!14868 = !DILocation(line: 55, column: 2, scope: !13859, inlinedAt: !14869)
!14869 = distinct !DILocation(line: 145, column: 10, scope: !13850, inlinedAt: !14867)
!14870 = !DILocation(line: 0, scope: !13859, inlinedAt: !14869)
!14871 = !DILocation(line: 148, column: 2, scope: !13867, inlinedAt: !14867)
!14872 = !DILocation(line: 148, column: 2, scope: !13868, inlinedAt: !14867)
!14873 = !DILocation(line: 148, column: 2, scope: !13871, inlinedAt: !14867)
!14874 = !DILocation(line: 160, column: 2, scope: !13850, inlinedAt: !14867)
!14875 = !DILocation(line: 801, column: 27, scope: !14861)
!14876 = !DILocation(line: 801, column: 32, scope: !14861)
!14877 = !DILocation(line: 801, column: 61, scope: !14861)
!14878 = !DILocation(line: 0, scope: !14861)
!14879 = !DILocation(line: 804, column: 7, scope: !14861)
!14880 = !DILocation(line: 805, column: 21, scope: !14881)
!14881 = distinct !DILexicalBlock(scope: !14882, file: !2464, line: 805, column: 8)
!14882 = distinct !DILexicalBlock(scope: !14883, file: !2464, line: 804, column: 16)
!14883 = distinct !DILexicalBlock(scope: !14861, file: !2464, line: 804, column: 7)
!14884 = !DILocation(line: 805, column: 31, scope: !14881)
!14885 = !DILocation(line: 805, column: 8, scope: !14882)
!14886 = !DILocation(line: 806, column: 5, scope: !14887)
!14887 = distinct !DILexicalBlock(scope: !14881, file: !2464, line: 805, column: 40)
!14888 = !DILocation(line: 807, column: 4, scope: !14887)
!14889 = !DILocation(line: 808, column: 4, scope: !14882)
!14890 = !DILocation(line: 809, column: 4, scope: !14882)
!14891 = !DILocation(line: 810, column: 4, scope: !14882)
!14892 = !DILocation(line: 811, column: 3, scope: !14882)
!14893 = !DILocation(line: 0, scope: !13884, inlinedAt: !14894)
!14894 = distinct !DILocation(line: 800, column: 2, scope: !14862)
!14895 = !DILocation(line: 194, column: 2, scope: !13892, inlinedAt: !14894)
!14896 = !DILocation(line: 194, column: 2, scope: !13893, inlinedAt: !14894)
!14897 = !DILocation(line: 194, column: 2, scope: !13896, inlinedAt: !14894)
!14898 = !DILocation(line: 0, scope: !13898, inlinedAt: !14899)
!14899 = distinct !DILocation(line: 215, column: 2, scope: !13884, inlinedAt: !14894)
!14900 = !DILocation(line: 95, column: 2, scope: !13898, inlinedAt: !14899)
!14901 = !DILocation(line: 813, column: 1, scope: !14853)
!14902 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2464, file: !2464, line: 779, type: !13808, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14903)
!14903 = !{!14904}
!14904 = !DILocalVariable(name: "thread", arg: 1, scope: !14902, file: !2464, line: 779, type: !2356)
!14905 = !DILocation(line: 0, scope: !14902)
!14906 = !DILocation(line: 781, column: 21, scope: !14902)
!14907 = !DILocation(line: 781, column: 2, scope: !14902)
!14908 = !DILocation(line: 782, column: 2, scope: !14902)
!14909 = !DILocation(line: 783, column: 15, scope: !14902)
!14910 = !DILocation(line: 783, column: 25, scope: !14902)
!14911 = !DILocation(line: 784, column: 1, scope: !14902)
!14912 = distinct !DISubprogram(name: "pended_on_thread", scope: !2464, file: !2464, line: 724, type: !14913, scopeLine: 725, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14915)
!14913 = !DISubroutineType(types: !14914)
!14914 = !{!2387, !2356}
!14915 = !{!14916}
!14916 = !DILocalVariable(name: "thread", arg: 1, scope: !14912, file: !2464, line: 724, type: !2356)
!14917 = !DILocation(line: 0, scope: !14912)
!14918 = !DILocation(line: 726, column: 2, scope: !14919)
!14919 = distinct !DILexicalBlock(scope: !14920, file: !2464, line: 726, column: 2)
!14920 = distinct !DILexicalBlock(scope: !14912, file: !2464, line: 726, column: 2)
!14921 = !DILocation(line: 726, column: 2, scope: !14920)
!14922 = !DILocation(line: 726, column: 2, scope: !14923)
!14923 = distinct !DILexicalBlock(scope: !14919, file: !2464, line: 726, column: 2)
!14924 = !DILocation(line: 728, column: 2, scope: !14912)
!14925 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !13012, file: !13012, line: 165, type: !13808, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14926)
!14926 = !{!14927}
!14927 = !DILocalVariable(name: "thread", arg: 1, scope: !14925, file: !13012, line: 165, type: !2356)
!14928 = !DILocation(line: 0, scope: !14925)
!14929 = !DILocation(line: 167, column: 15, scope: !14925)
!14930 = !DILocation(line: 167, column: 28, scope: !14925)
!14931 = !DILocation(line: 168, column: 1, scope: !14925)
!14932 = distinct !DISubprogram(name: "unready_thread", scope: !2464, file: !2464, line: 731, type: !13808, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14933)
!14933 = !{!14934}
!14934 = !DILocalVariable(name: "thread", arg: 1, scope: !14932, file: !2464, line: 731, type: !2356)
!14935 = !DILocation(line: 0, scope: !14932)
!14936 = !DILocation(line: 733, column: 6, scope: !14937)
!14937 = distinct !DILexicalBlock(scope: !14932, file: !2464, line: 733, column: 6)
!14938 = !DILocation(line: 733, column: 6, scope: !14932)
!14939 = !DILocation(line: 0, scope: !14042, inlinedAt: !14940)
!14940 = distinct !DILocation(line: 734, column: 3, scope: !14941)
!14941 = distinct !DILexicalBlock(scope: !14937, file: !2464, line: 733, column: 34)
!14942 = !DILocation(line: 266, column: 15, scope: !14042, inlinedAt: !14940)
!14943 = !DILocation(line: 266, column: 28, scope: !14042, inlinedAt: !14940)
!14944 = !DILocation(line: 0, scope: !14050, inlinedAt: !14945)
!14945 = distinct !DILocation(line: 268, column: 3, scope: !14054, inlinedAt: !14940)
!14946 = !DILocation(line: 234, column: 2, scope: !14050, inlinedAt: !14945)
!14947 = !DILocation(line: 735, column: 2, scope: !14941)
!14948 = !DILocation(line: 736, column: 25, scope: !14932)
!14949 = !DILocation(line: 736, column: 22, scope: !14932)
!14950 = !DILocation(line: 736, column: 2, scope: !14932)
!14951 = !DILocation(line: 737, column: 1, scope: !14932)
!14952 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !13012, file: !13012, line: 160, type: !13808, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14953)
!14953 = !{!14954}
!14954 = !DILocalVariable(name: "thread", arg: 1, scope: !14952, file: !13012, line: 160, type: !2356)
!14955 = !DILocation(line: 0, scope: !14952)
!14956 = !DILocation(line: 162, column: 15, scope: !14952)
!14957 = !DILocation(line: 162, column: 28, scope: !14952)
!14958 = !DILocation(line: 163, column: 1, scope: !14952)
!14959 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2464, file: !2464, line: 786, type: !13808, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14960)
!14960 = !{!14961, !14962, !14964}
!14961 = !DILocalVariable(name: "thread", arg: 1, scope: !14959, file: !2464, line: 786, type: !2356)
!14962 = !DILocalVariable(name: "__i", scope: !14963, file: !2464, line: 788, type: !13842)
!14963 = distinct !DILexicalBlock(scope: !14959, file: !2464, line: 788, column: 2)
!14964 = !DILocalVariable(name: "__key", scope: !14963, file: !2464, line: 788, type: !13842)
!14965 = !DILocation(line: 0, scope: !14959)
!14966 = !DILocation(line: 0, scope: !14963)
!14967 = !DILocation(line: 0, scope: !13850, inlinedAt: !14968)
!14968 = distinct !DILocation(line: 788, column: 2, scope: !14963)
!14969 = !DILocation(line: 55, column: 2, scope: !13859, inlinedAt: !14970)
!14970 = distinct !DILocation(line: 145, column: 10, scope: !13850, inlinedAt: !14968)
!14971 = !DILocation(line: 0, scope: !13859, inlinedAt: !14970)
!14972 = !DILocation(line: 148, column: 2, scope: !13867, inlinedAt: !14968)
!14973 = !DILocation(line: 148, column: 2, scope: !13868, inlinedAt: !14968)
!14974 = !DILocation(line: 148, column: 2, scope: !13871, inlinedAt: !14968)
!14975 = !DILocation(line: 160, column: 2, scope: !13850, inlinedAt: !14968)
!14976 = !DILocation(line: 789, column: 3, scope: !14977)
!14977 = distinct !DILexicalBlock(scope: !14978, file: !2464, line: 788, column: 26)
!14978 = distinct !DILexicalBlock(scope: !14963, file: !2464, line: 788, column: 2)
!14979 = !DILocation(line: 0, scope: !13884, inlinedAt: !14980)
!14980 = distinct !DILocation(line: 788, column: 2, scope: !14978)
!14981 = !DILocation(line: 194, column: 2, scope: !13892, inlinedAt: !14980)
!14982 = !DILocation(line: 194, column: 2, scope: !13893, inlinedAt: !14980)
!14983 = !DILocation(line: 194, column: 2, scope: !13896, inlinedAt: !14980)
!14984 = !DILocation(line: 0, scope: !13898, inlinedAt: !14985)
!14985 = distinct !DILocation(line: 215, column: 2, scope: !13884, inlinedAt: !14980)
!14986 = !DILocation(line: 95, column: 2, scope: !13898, inlinedAt: !14985)
!14987 = !DILocation(line: 791, column: 1, scope: !14959)
!14988 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2464, file: !2464, line: 816, type: !14989, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !14991)
!14989 = !DISubroutineType(types: !14990)
!14990 = !{!119, !118, !2387, !14738}
!14991 = !{!14992, !14993, !14994, !14995, !14996, !14998}
!14992 = !DILocalVariable(name: "key", arg: 1, scope: !14988, file: !2464, line: 816, type: !118)
!14993 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14988, file: !2464, line: 816, type: !2387)
!14994 = !DILocalVariable(name: "timeout", arg: 3, scope: !14988, file: !2464, line: 816, type: !14738)
!14995 = !DILocalVariable(name: "ret", scope: !14988, file: !2464, line: 828, type: !119)
!14996 = !DILocalVariable(name: "__i", scope: !14997, file: !2464, line: 829, type: !13842)
!14997 = distinct !DILexicalBlock(scope: !14988, file: !2464, line: 829, column: 2)
!14998 = !DILocalVariable(name: "__key", scope: !14997, file: !2464, line: 829, type: !13842)
!14999 = !DILocation(line: 0, scope: !14988)
!15000 = !DILocation(line: 823, column: 14, scope: !14988)
!15001 = !DILocation(line: 823, column: 2, scope: !14988)
!15002 = !DILocation(line: 826, column: 20, scope: !14988)
!15003 = !DILocation(line: 826, column: 18, scope: !14988)
!15004 = !DILocation(line: 828, column: 12, scope: !14988)
!15005 = !DILocation(line: 0, scope: !14997)
!15006 = !DILocation(line: 0, scope: !13850, inlinedAt: !15007)
!15007 = distinct !DILocation(line: 829, column: 2, scope: !14997)
!15008 = !DILocation(line: 55, column: 2, scope: !13859, inlinedAt: !15009)
!15009 = distinct !DILocation(line: 145, column: 10, scope: !13850, inlinedAt: !15007)
!15010 = !DILocation(line: 0, scope: !13859, inlinedAt: !15009)
!15011 = !DILocation(line: 148, column: 2, scope: !13867, inlinedAt: !15007)
!15012 = !DILocation(line: 148, column: 2, scope: !13868, inlinedAt: !15007)
!15013 = !DILocation(line: 148, column: 2, scope: !13871, inlinedAt: !15007)
!15014 = !DILocation(line: 160, column: 2, scope: !13850, inlinedAt: !15007)
!15015 = !DILocation(line: 830, column: 7, scope: !15016)
!15016 = distinct !DILexicalBlock(scope: !15017, file: !2464, line: 830, column: 7)
!15017 = distinct !DILexicalBlock(scope: !15018, file: !2464, line: 829, column: 26)
!15018 = distinct !DILexicalBlock(scope: !14997, file: !2464, line: 829, column: 2)
!15019 = !DILocation(line: 830, column: 26, scope: !15016)
!15020 = !DILocation(line: 830, column: 23, scope: !15016)
!15021 = !DILocation(line: 830, column: 7, scope: !15017)
!15022 = !DILocation(line: 831, column: 20, scope: !15023)
!15023 = distinct !DILexicalBlock(scope: !15016, file: !2464, line: 830, column: 36)
!15024 = !DILocation(line: 832, column: 3, scope: !15023)
!15025 = !DILocation(line: 0, scope: !13884, inlinedAt: !15026)
!15026 = distinct !DILocation(line: 829, column: 2, scope: !15018)
!15027 = !DILocation(line: 194, column: 2, scope: !13892, inlinedAt: !15026)
!15028 = !DILocation(line: 194, column: 2, scope: !13893, inlinedAt: !15026)
!15029 = !DILocation(line: 194, column: 2, scope: !13896, inlinedAt: !15026)
!15030 = !DILocation(line: 0, scope: !13898, inlinedAt: !15031)
!15031 = distinct !DILocation(line: 215, column: 2, scope: !13884, inlinedAt: !15026)
!15032 = !DILocation(line: 95, column: 2, scope: !13898, inlinedAt: !15031)
!15033 = !DILocation(line: 834, column: 2, scope: !14988)
!15034 = distinct !DISubprogram(name: "z_pend_curr", scope: !2464, file: !2464, line: 840, type: !15035, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15037)
!15035 = !DISubroutineType(types: !15036)
!15036 = !{!119, !13853, !13842, !2387, !14738}
!15037 = !{!15038, !15039, !15040, !15041}
!15038 = !DILocalVariable(name: "lock", arg: 1, scope: !15034, file: !2464, line: 840, type: !13853)
!15039 = !DILocalVariable(name: "key", arg: 2, scope: !15034, file: !2464, line: 840, type: !13842)
!15040 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15034, file: !2464, line: 841, type: !2387)
!15041 = !DILocalVariable(name: "timeout", arg: 4, scope: !15034, file: !2464, line: 841, type: !14738)
!15042 = !DILocation(line: 0, scope: !15034)
!15043 = !DILocation(line: 844, column: 20, scope: !15034)
!15044 = !DILocation(line: 844, column: 18, scope: !15034)
!15045 = !DILocation(line: 846, column: 2, scope: !15046)
!15046 = distinct !DILexicalBlock(scope: !15047, file: !2464, line: 846, column: 2)
!15047 = distinct !DILexicalBlock(scope: !15034, file: !2464, line: 846, column: 2)
!15048 = !DILocation(line: 846, column: 2, scope: !15047)
!15049 = !DILocation(line: 846, column: 2, scope: !15050)
!15050 = distinct !DILexicalBlock(scope: !15046, file: !2464, line: 846, column: 2)
!15051 = !DILocation(line: 0, scope: !13850, inlinedAt: !15052)
!15052 = distinct !DILocation(line: 856, column: 9, scope: !15034)
!15053 = !DILocation(line: 55, column: 2, scope: !13859, inlinedAt: !15054)
!15054 = distinct !DILocation(line: 145, column: 10, scope: !13850, inlinedAt: !15052)
!15055 = !DILocation(line: 0, scope: !13859, inlinedAt: !15054)
!15056 = !DILocation(line: 148, column: 2, scope: !13867, inlinedAt: !15052)
!15057 = !DILocation(line: 148, column: 2, scope: !13868, inlinedAt: !15052)
!15058 = !DILocation(line: 148, column: 2, scope: !13871, inlinedAt: !15052)
!15059 = !DILocation(line: 160, column: 2, scope: !13850, inlinedAt: !15052)
!15060 = !DILocation(line: 857, column: 14, scope: !15034)
!15061 = !DILocation(line: 857, column: 2, scope: !15034)
!15062 = !DILocation(line: 0, scope: !14537, inlinedAt: !15063)
!15063 = distinct !DILocation(line: 858, column: 2, scope: !15034)
!15064 = !DILocation(line: 225, column: 2, scope: !14544, inlinedAt: !15063)
!15065 = !DILocation(line: 225, column: 2, scope: !14545, inlinedAt: !15063)
!15066 = !DILocation(line: 225, column: 2, scope: !14548, inlinedAt: !15063)
!15067 = !DILocation(line: 0, scope: !14528, inlinedAt: !15068)
!15068 = distinct !DILocation(line: 859, column: 9, scope: !15034)
!15069 = !DILocation(line: 0, scope: !14537, inlinedAt: !15070)
!15070 = distinct !DILocation(line: 195, column: 2, scope: !14528, inlinedAt: !15068)
!15071 = !DILocation(line: 225, column: 2, scope: !14544, inlinedAt: !15070)
!15072 = !DILocation(line: 225, column: 2, scope: !14545, inlinedAt: !15070)
!15073 = !DILocation(line: 225, column: 2, scope: !14548, inlinedAt: !15070)
!15074 = !DILocation(line: 196, column: 9, scope: !14528, inlinedAt: !15068)
!15075 = !DILocation(line: 859, column: 2, scope: !15034)
!15076 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2464, file: !2464, line: 862, type: !15077, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15079)
!15077 = !DISubroutineType(types: !15078)
!15078 = !{!2356, !2387}
!15079 = !{!15080, !15081, !15082, !15084}
!15080 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15076, file: !2464, line: 862, type: !2387)
!15081 = !DILocalVariable(name: "thread", scope: !15076, file: !2464, line: 864, type: !2356)
!15082 = !DILocalVariable(name: "__i", scope: !15083, file: !2464, line: 866, type: !13842)
!15083 = distinct !DILexicalBlock(scope: !15076, file: !2464, line: 866, column: 2)
!15084 = !DILocalVariable(name: "__key", scope: !15083, file: !2464, line: 866, type: !13842)
!15085 = !DILocation(line: 0, scope: !15076)
!15086 = !DILocation(line: 0, scope: !15083)
!15087 = !DILocation(line: 0, scope: !13850, inlinedAt: !15088)
!15088 = distinct !DILocation(line: 866, column: 2, scope: !15083)
!15089 = !DILocation(line: 55, column: 2, scope: !13859, inlinedAt: !15090)
!15090 = distinct !DILocation(line: 145, column: 10, scope: !13850, inlinedAt: !15088)
!15091 = !DILocation(line: 0, scope: !13859, inlinedAt: !15090)
!15092 = !DILocation(line: 148, column: 2, scope: !13867, inlinedAt: !15088)
!15093 = !DILocation(line: 148, column: 2, scope: !13868, inlinedAt: !15088)
!15094 = !DILocation(line: 148, column: 2, scope: !13871, inlinedAt: !15088)
!15095 = !DILocation(line: 160, column: 2, scope: !13850, inlinedAt: !15088)
!15096 = !DILocation(line: 867, column: 12, scope: !15097)
!15097 = distinct !DILexicalBlock(scope: !15098, file: !2464, line: 866, column: 26)
!15098 = distinct !DILexicalBlock(scope: !15083, file: !2464, line: 866, column: 2)
!15099 = !DILocation(line: 869, column: 14, scope: !15100)
!15100 = distinct !DILexicalBlock(scope: !15097, file: !2464, line: 869, column: 7)
!15101 = !DILocation(line: 869, column: 7, scope: !15097)
!15102 = !DILocation(line: 870, column: 4, scope: !15103)
!15103 = distinct !DILexicalBlock(scope: !15100, file: !2464, line: 869, column: 23)
!15104 = !DILocation(line: 871, column: 3, scope: !15103)
!15105 = !DILocation(line: 0, scope: !13884, inlinedAt: !15106)
!15106 = distinct !DILocation(line: 866, column: 2, scope: !15098)
!15107 = !DILocation(line: 194, column: 2, scope: !13892, inlinedAt: !15106)
!15108 = !DILocation(line: 194, column: 2, scope: !13893, inlinedAt: !15106)
!15109 = !DILocation(line: 194, column: 2, scope: !13896, inlinedAt: !15106)
!15110 = !DILocation(line: 0, scope: !13898, inlinedAt: !15111)
!15111 = distinct !DILocation(line: 215, column: 2, scope: !13884, inlinedAt: !15106)
!15112 = !DILocation(line: 95, column: 2, scope: !13898, inlinedAt: !15111)
!15113 = !DILocation(line: 874, column: 2, scope: !15076)
!15114 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2464, file: !2464, line: 877, type: !15077, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15115)
!15115 = !{!15116, !15117, !15118, !15120}
!15116 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15114, file: !2464, line: 877, type: !2387)
!15117 = !DILocalVariable(name: "thread", scope: !15114, file: !2464, line: 879, type: !2356)
!15118 = !DILocalVariable(name: "__i", scope: !15119, file: !2464, line: 881, type: !13842)
!15119 = distinct !DILexicalBlock(scope: !15114, file: !2464, line: 881, column: 2)
!15120 = !DILocalVariable(name: "__key", scope: !15119, file: !2464, line: 881, type: !13842)
!15121 = !DILocation(line: 0, scope: !15114)
!15122 = !DILocation(line: 0, scope: !15119)
!15123 = !DILocation(line: 0, scope: !13850, inlinedAt: !15124)
!15124 = distinct !DILocation(line: 881, column: 2, scope: !15119)
!15125 = !DILocation(line: 55, column: 2, scope: !13859, inlinedAt: !15126)
!15126 = distinct !DILocation(line: 145, column: 10, scope: !13850, inlinedAt: !15124)
!15127 = !DILocation(line: 0, scope: !13859, inlinedAt: !15126)
!15128 = !DILocation(line: 148, column: 2, scope: !13867, inlinedAt: !15124)
!15129 = !DILocation(line: 148, column: 2, scope: !13868, inlinedAt: !15124)
!15130 = !DILocation(line: 148, column: 2, scope: !13871, inlinedAt: !15124)
!15131 = !DILocation(line: 160, column: 2, scope: !13850, inlinedAt: !15124)
!15132 = !DILocation(line: 882, column: 12, scope: !15133)
!15133 = distinct !DILexicalBlock(scope: !15134, file: !2464, line: 881, column: 26)
!15134 = distinct !DILexicalBlock(scope: !15119, file: !2464, line: 881, column: 2)
!15135 = !DILocation(line: 884, column: 14, scope: !15136)
!15136 = distinct !DILexicalBlock(scope: !15133, file: !2464, line: 884, column: 7)
!15137 = !DILocation(line: 884, column: 7, scope: !15133)
!15138 = !DILocation(line: 885, column: 4, scope: !15139)
!15139 = distinct !DILexicalBlock(scope: !15136, file: !2464, line: 884, column: 23)
!15140 = !DILocation(line: 886, column: 10, scope: !15139)
!15141 = !DILocation(line: 887, column: 3, scope: !15139)
!15142 = !DILocation(line: 0, scope: !13884, inlinedAt: !15143)
!15143 = distinct !DILocation(line: 881, column: 2, scope: !15134)
!15144 = !DILocation(line: 194, column: 2, scope: !13892, inlinedAt: !15143)
!15145 = !DILocation(line: 194, column: 2, scope: !13893, inlinedAt: !15143)
!15146 = !DILocation(line: 194, column: 2, scope: !13896, inlinedAt: !15143)
!15147 = !DILocation(line: 0, scope: !13898, inlinedAt: !15148)
!15148 = distinct !DILocation(line: 215, column: 2, scope: !13884, inlinedAt: !15143)
!15149 = !DILocation(line: 95, column: 2, scope: !13898, inlinedAt: !15148)
!15150 = !DILocation(line: 890, column: 2, scope: !15114)
!15151 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2464, file: !2464, line: 893, type: !13808, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15152)
!15152 = !{!15153}
!15153 = !DILocalVariable(name: "thread", arg: 1, scope: !15151, file: !2464, line: 893, type: !2356)
!15154 = !DILocation(line: 0, scope: !15151)
!15155 = !DILocation(line: 0, scope: !14959, inlinedAt: !15156)
!15156 = distinct !DILocation(line: 895, column: 2, scope: !15151)
!15157 = !DILocation(line: 0, scope: !14963, inlinedAt: !15156)
!15158 = !DILocation(line: 0, scope: !13850, inlinedAt: !15159)
!15159 = distinct !DILocation(line: 788, column: 2, scope: !14963, inlinedAt: !15156)
!15160 = !DILocation(line: 55, column: 2, scope: !13859, inlinedAt: !15161)
!15161 = distinct !DILocation(line: 145, column: 10, scope: !13850, inlinedAt: !15159)
!15162 = !DILocation(line: 0, scope: !13859, inlinedAt: !15161)
!15163 = !DILocation(line: 148, column: 2, scope: !13867, inlinedAt: !15159)
!15164 = !DILocation(line: 148, column: 2, scope: !13868, inlinedAt: !15159)
!15165 = !DILocation(line: 148, column: 2, scope: !13871, inlinedAt: !15159)
!15166 = !DILocation(line: 160, column: 2, scope: !13850, inlinedAt: !15159)
!15167 = !DILocation(line: 789, column: 3, scope: !14977, inlinedAt: !15156)
!15168 = !DILocation(line: 0, scope: !13884, inlinedAt: !15169)
!15169 = distinct !DILocation(line: 788, column: 2, scope: !14978, inlinedAt: !15156)
!15170 = !DILocation(line: 194, column: 2, scope: !13892, inlinedAt: !15169)
!15171 = !DILocation(line: 194, column: 2, scope: !13893, inlinedAt: !15169)
!15172 = !DILocation(line: 194, column: 2, scope: !13896, inlinedAt: !15169)
!15173 = !DILocation(line: 0, scope: !13898, inlinedAt: !15174)
!15174 = distinct !DILocation(line: 215, column: 2, scope: !13884, inlinedAt: !15169)
!15175 = !DILocation(line: 95, column: 2, scope: !13898, inlinedAt: !15174)
!15176 = !DILocation(line: 896, column: 8, scope: !15151)
!15177 = !DILocation(line: 897, column: 1, scope: !15151)
!15178 = distinct !DISubprogram(name: "z_set_prio", scope: !2464, file: !2464, line: 902, type: !14211, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15179)
!15179 = !{!15180, !15181, !15182, !15183, !15185}
!15180 = !DILocalVariable(name: "thread", arg: 1, scope: !15178, file: !2464, line: 902, type: !2356)
!15181 = !DILocalVariable(name: "prio", arg: 2, scope: !15178, file: !2464, line: 902, type: !119)
!15182 = !DILocalVariable(name: "need_sched", scope: !15178, file: !2464, line: 904, type: !345)
!15183 = !DILocalVariable(name: "__i", scope: !15184, file: !2464, line: 906, type: !13842)
!15184 = distinct !DILexicalBlock(scope: !15178, file: !2464, line: 906, column: 2)
!15185 = !DILocalVariable(name: "__key", scope: !15184, file: !2464, line: 906, type: !13842)
!15186 = !DILocation(line: 0, scope: !15178)
!15187 = !DILocation(line: 0, scope: !15184)
!15188 = !DILocation(line: 0, scope: !13850, inlinedAt: !15189)
!15189 = distinct !DILocation(line: 906, column: 2, scope: !15184)
!15190 = !DILocation(line: 55, column: 2, scope: !13859, inlinedAt: !15191)
!15191 = distinct !DILocation(line: 145, column: 10, scope: !13850, inlinedAt: !15189)
!15192 = !DILocation(line: 0, scope: !13859, inlinedAt: !15191)
!15193 = !DILocation(line: 148, column: 2, scope: !13867, inlinedAt: !15189)
!15194 = !DILocation(line: 148, column: 2, scope: !13868, inlinedAt: !15189)
!15195 = !DILocation(line: 148, column: 2, scope: !13871, inlinedAt: !15189)
!15196 = !DILocation(line: 160, column: 2, scope: !13850, inlinedAt: !15189)
!15197 = !DILocation(line: 907, column: 16, scope: !15198)
!15198 = distinct !DILexicalBlock(scope: !15199, file: !2464, line: 906, column: 26)
!15199 = distinct !DILexicalBlock(scope: !15184, file: !2464, line: 906, column: 2)
!15200 = !DILocation(line: 909, column: 7, scope: !15198)
!15201 = !DILocation(line: 0, scope: !14042, inlinedAt: !15202)
!15202 = distinct !DILocation(line: 912, column: 5, scope: !15203)
!15203 = distinct !DILexicalBlock(scope: !15204, file: !2464, line: 911, column: 63)
!15204 = distinct !DILexicalBlock(scope: !15205, file: !2464, line: 911, column: 8)
!15205 = distinct !DILexicalBlock(scope: !15206, file: !2464, line: 909, column: 19)
!15206 = distinct !DILexicalBlock(scope: !15198, file: !2464, line: 909, column: 7)
!15207 = !DILocation(line: 266, column: 28, scope: !14042, inlinedAt: !15202)
!15208 = !DILocation(line: 0, scope: !14050, inlinedAt: !15209)
!15209 = distinct !DILocation(line: 268, column: 3, scope: !14054, inlinedAt: !15202)
!15210 = !DILocation(line: 234, column: 2, scope: !14050, inlinedAt: !15209)
!15211 = !DILocation(line: 913, column: 23, scope: !15203)
!15212 = !DILocation(line: 0, scope: !14059, inlinedAt: !15213)
!15213 = distinct !DILocation(line: 914, column: 5, scope: !15203)
!15214 = !DILocation(line: 252, column: 28, scope: !14059, inlinedAt: !15213)
!15215 = !DILocation(line: 0, scope: !14066, inlinedAt: !15216)
!15216 = distinct !DILocation(line: 254, column: 3, scope: !14070, inlinedAt: !15213)
!15217 = !DILocation(line: 0, scope: !14073, inlinedAt: !15218)
!15218 = distinct !DILocation(line: 229, column: 2, scope: !14066, inlinedAt: !15216)
!15219 = !DILocation(line: 186, column: 2, scope: !14083, inlinedAt: !15218)
!15220 = !DILocation(line: 186, column: 2, scope: !14084, inlinedAt: !15218)
!15221 = !DILocation(line: 186, column: 2, scope: !14087, inlinedAt: !15218)
!15222 = !DILocation(line: 188, column: 2, scope: !14089, inlinedAt: !15218)
!15223 = !DILocation(line: 188, column: 2, scope: !14091, inlinedAt: !15218)
!15224 = !DILocation(line: 0, scope: !14089, inlinedAt: !15218)
!15225 = !DILocation(line: 189, column: 7, scope: !14094, inlinedAt: !15218)
!15226 = !DILocation(line: 189, column: 35, scope: !14094, inlinedAt: !15218)
!15227 = !DILocation(line: 189, column: 7, scope: !14095, inlinedAt: !15218)
!15228 = !DILocation(line: 190, column: 4, scope: !14099, inlinedAt: !15218)
!15229 = !DILocation(line: 192, column: 4, scope: !14099, inlinedAt: !15218)
!15230 = distinct !{!15230, !15222, !15231}
!15231 = !DILocation(line: 194, column: 2, scope: !14089, inlinedAt: !15218)
!15232 = !DILocation(line: 196, column: 2, scope: !14073, inlinedAt: !15218)
!15233 = !DILocation(line: 197, column: 1, scope: !14073, inlinedAt: !15218)
!15234 = !DILocation(line: 918, column: 4, scope: !15205)
!15235 = !DILocation(line: 919, column: 3, scope: !15205)
!15236 = !DILocation(line: 920, column: 22, scope: !15237)
!15237 = distinct !DILexicalBlock(scope: !15206, file: !2464, line: 919, column: 10)
!15238 = !DILocation(line: 0, scope: !13884, inlinedAt: !15239)
!15239 = distinct !DILocation(line: 906, column: 2, scope: !15199)
!15240 = !DILocation(line: 194, column: 2, scope: !13892, inlinedAt: !15239)
!15241 = !DILocation(line: 194, column: 2, scope: !13893, inlinedAt: !15239)
!15242 = !DILocation(line: 194, column: 2, scope: !13896, inlinedAt: !15239)
!15243 = !DILocation(line: 0, scope: !13898, inlinedAt: !15244)
!15244 = distinct !DILocation(line: 215, column: 2, scope: !13884, inlinedAt: !15239)
!15245 = !DILocation(line: 95, column: 2, scope: !13898, inlinedAt: !15244)
!15246 = !DILocation(line: 926, column: 2, scope: !15178)
!15247 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2464, file: !2464, line: 929, type: !15248, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15250)
!15248 = !DISubroutineType(types: !15249)
!15249 = !{null, !2356, !119}
!15250 = !{!15251, !15252, !15253}
!15251 = !DILocalVariable(name: "thread", arg: 1, scope: !15247, file: !2464, line: 929, type: !2356)
!15252 = !DILocalVariable(name: "prio", arg: 2, scope: !15247, file: !2464, line: 929, type: !119)
!15253 = !DILocalVariable(name: "need_sched", scope: !15247, file: !2464, line: 931, type: !345)
!15254 = !DILocation(line: 0, scope: !15247)
!15255 = !DILocation(line: 931, column: 20, scope: !15247)
!15256 = !DILocation(line: 935, column: 17, scope: !15257)
!15257 = distinct !DILexicalBlock(scope: !15247, file: !2464, line: 935, column: 6)
!15258 = !DILocation(line: 935, column: 20, scope: !15257)
!15259 = !DILocation(line: 935, column: 35, scope: !15257)
!15260 = !DILocation(line: 935, column: 48, scope: !15257)
!15261 = !DILocation(line: 935, column: 6, scope: !15247)
!15262 = !DILocation(line: 936, column: 3, scope: !15263)
!15263 = distinct !DILexicalBlock(scope: !15257, file: !2464, line: 935, column: 55)
!15264 = !DILocation(line: 937, column: 2, scope: !15263)
!15265 = !DILocation(line: 938, column: 1, scope: !15247)
!15266 = distinct !DISubprogram(name: "k_sched_lock", scope: !2464, file: !2464, line: 987, type: !3098, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15267)
!15267 = !{!15268, !15270}
!15268 = !DILocalVariable(name: "__i", scope: !15269, file: !2464, line: 989, type: !13842)
!15269 = distinct !DILexicalBlock(scope: !15266, file: !2464, line: 989, column: 2)
!15270 = !DILocalVariable(name: "__key", scope: !15269, file: !2464, line: 989, type: !13842)
!15271 = !DILocation(line: 0, scope: !15269)
!15272 = !DILocation(line: 0, scope: !13850, inlinedAt: !15273)
!15273 = distinct !DILocation(line: 989, column: 2, scope: !15269)
!15274 = !DILocation(line: 55, column: 2, scope: !13859, inlinedAt: !15275)
!15275 = distinct !DILocation(line: 145, column: 10, scope: !13850, inlinedAt: !15273)
!15276 = !DILocation(line: 0, scope: !13859, inlinedAt: !15275)
!15277 = !DILocation(line: 148, column: 2, scope: !13867, inlinedAt: !15273)
!15278 = !DILocation(line: 148, column: 2, scope: !13868, inlinedAt: !15273)
!15279 = !DILocation(line: 148, column: 2, scope: !13871, inlinedAt: !15273)
!15280 = !DILocation(line: 160, column: 2, scope: !13850, inlinedAt: !15273)
!15281 = !DILocation(line: 992, column: 3, scope: !15282)
!15282 = distinct !DILexicalBlock(scope: !15283, file: !2464, line: 989, column: 26)
!15283 = distinct !DILexicalBlock(scope: !15269, file: !2464, line: 989, column: 2)
!15284 = !DILocation(line: 0, scope: !13884, inlinedAt: !15285)
!15285 = distinct !DILocation(line: 989, column: 2, scope: !15283)
!15286 = !DILocation(line: 194, column: 2, scope: !13892, inlinedAt: !15285)
!15287 = !DILocation(line: 194, column: 2, scope: !13893, inlinedAt: !15285)
!15288 = !DILocation(line: 194, column: 2, scope: !13896, inlinedAt: !15285)
!15289 = !DILocation(line: 0, scope: !13898, inlinedAt: !15290)
!15290 = distinct !DILocation(line: 215, column: 2, scope: !13884, inlinedAt: !15285)
!15291 = !DILocation(line: 95, column: 2, scope: !13898, inlinedAt: !15290)
!15292 = !DILocation(line: 994, column: 1, scope: !15266)
!15293 = distinct !DISubprogram(name: "z_sched_lock", scope: !13012, file: !13012, line: 251, type: !3098, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !2162)
!15294 = !DILocation(line: 1031, column: 3, scope: !14577, inlinedAt: !15295)
!15295 = distinct !DILocation(line: 48, column: 10, scope: !14581, inlinedAt: !15296)
!15296 = distinct !DILocation(line: 253, column: 2, scope: !15297)
!15297 = distinct !DILexicalBlock(scope: !15298, file: !13012, line: 253, column: 2)
!15298 = distinct !DILexicalBlock(scope: !15293, file: !13012, line: 253, column: 2)
!15299 = !DILocation(line: 0, scope: !14577, inlinedAt: !15295)
!15300 = !DILocation(line: 48, column: 9, scope: !14581, inlinedAt: !15296)
!15301 = !DILocation(line: 253, column: 2, scope: !15298)
!15302 = !DILocation(line: 253, column: 2, scope: !15303)
!15303 = distinct !DILexicalBlock(scope: !15297, file: !13012, line: 253, column: 2)
!15304 = !DILocation(line: 254, column: 2, scope: !15305)
!15305 = distinct !DILexicalBlock(scope: !15306, file: !13012, line: 254, column: 2)
!15306 = distinct !DILexicalBlock(scope: !15293, file: !13012, line: 254, column: 2)
!15307 = !DILocation(line: 254, column: 2, scope: !15306)
!15308 = !DILocation(line: 254, column: 2, scope: !15309)
!15309 = distinct !DILexicalBlock(scope: !15305, file: !13012, line: 254, column: 2)
!15310 = !DILocation(line: 256, column: 2, scope: !15293)
!15311 = !DILocation(line: 258, column: 2, scope: !15312)
!15312 = distinct !DILexicalBlock(scope: !15293, file: !13012, line: 258, column: 2)
!15313 = !{i64 2155573687}
!15314 = !DILocation(line: 259, column: 1, scope: !15293)
!15315 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2464, file: !2464, line: 996, type: !3098, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15316)
!15316 = !{!15317, !15319}
!15317 = !DILocalVariable(name: "__i", scope: !15318, file: !2464, line: 998, type: !13842)
!15318 = distinct !DILexicalBlock(scope: !15315, file: !2464, line: 998, column: 2)
!15319 = !DILocalVariable(name: "__key", scope: !15318, file: !2464, line: 998, type: !13842)
!15320 = !DILocation(line: 0, scope: !15318)
!15321 = !DILocation(line: 0, scope: !13850, inlinedAt: !15322)
!15322 = distinct !DILocation(line: 998, column: 2, scope: !15318)
!15323 = !DILocation(line: 55, column: 2, scope: !13859, inlinedAt: !15324)
!15324 = distinct !DILocation(line: 145, column: 10, scope: !13850, inlinedAt: !15322)
!15325 = !DILocation(line: 0, scope: !13859, inlinedAt: !15324)
!15326 = !DILocation(line: 148, column: 2, scope: !13867, inlinedAt: !15322)
!15327 = !DILocation(line: 148, column: 2, scope: !13868, inlinedAt: !15322)
!15328 = !DILocation(line: 148, column: 2, scope: !13871, inlinedAt: !15322)
!15329 = !DILocation(line: 160, column: 2, scope: !13850, inlinedAt: !15322)
!15330 = !DILocation(line: 999, column: 3, scope: !15331)
!15331 = distinct !DILexicalBlock(scope: !15332, file: !2464, line: 999, column: 3)
!15332 = distinct !DILexicalBlock(scope: !15333, file: !2464, line: 999, column: 3)
!15333 = distinct !DILexicalBlock(scope: !15334, file: !2464, line: 998, column: 26)
!15334 = distinct !DILexicalBlock(scope: !15318, file: !2464, line: 998, column: 2)
!15335 = !DILocation(line: 999, column: 3, scope: !15332)
!15336 = !DILocation(line: 999, column: 3, scope: !15337)
!15337 = distinct !DILexicalBlock(scope: !15331, file: !2464, line: 999, column: 3)
!15338 = !DILocation(line: 1031, column: 3, scope: !14577, inlinedAt: !15339)
!15339 = distinct !DILocation(line: 48, column: 10, scope: !14581, inlinedAt: !15340)
!15340 = distinct !DILocation(line: 1000, column: 3, scope: !15341)
!15341 = distinct !DILexicalBlock(scope: !15342, file: !2464, line: 1000, column: 3)
!15342 = distinct !DILexicalBlock(scope: !15333, file: !2464, line: 1000, column: 3)
!15343 = !DILocation(line: 0, scope: !14577, inlinedAt: !15339)
!15344 = !DILocation(line: 48, column: 9, scope: !14581, inlinedAt: !15340)
!15345 = !DILocation(line: 1000, column: 3, scope: !15342)
!15346 = !DILocation(line: 1000, column: 3, scope: !15347)
!15347 = distinct !DILexicalBlock(scope: !15341, file: !2464, line: 1000, column: 3)
!15348 = !DILocation(line: 1002, column: 5, scope: !15333)
!15349 = !DILocation(line: 1002, column: 20, scope: !15333)
!15350 = !DILocation(line: 1002, column: 3, scope: !15333)
!15351 = !DILocation(line: 1003, column: 3, scope: !15333)
!15352 = !DILocation(line: 0, scope: !13884, inlinedAt: !15353)
!15353 = distinct !DILocation(line: 998, column: 2, scope: !15334)
!15354 = !DILocation(line: 194, column: 2, scope: !13892, inlinedAt: !15353)
!15355 = !DILocation(line: 194, column: 2, scope: !13893, inlinedAt: !15353)
!15356 = !DILocation(line: 194, column: 2, scope: !13896, inlinedAt: !15353)
!15357 = !DILocation(line: 0, scope: !13898, inlinedAt: !15358)
!15358 = distinct !DILocation(line: 215, column: 2, scope: !13884, inlinedAt: !15353)
!15359 = !DILocation(line: 95, column: 2, scope: !13898, inlinedAt: !15358)
!15360 = !DILocation(line: 1011, column: 2, scope: !15315)
!15361 = !DILocation(line: 1012, column: 1, scope: !15315)
!15362 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2464, file: !2464, line: 1014, type: !14199, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !2162)
!15363 = !DILocation(line: 1028, column: 25, scope: !15362)
!15364 = !DILocation(line: 1028, column: 2, scope: !15362)
!15365 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2464, file: !2464, line: 1155, type: !15366, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15368)
!15366 = !DISubroutineType(types: !15367)
!15367 = !{!345, !2385, !2385}
!15368 = !{!15369, !15370, !15371, !15372, !15373}
!15369 = !DILocalVariable(name: "a", arg: 1, scope: !15365, file: !2464, line: 1155, type: !2385)
!15370 = !DILocalVariable(name: "b", arg: 2, scope: !15365, file: !2464, line: 1155, type: !2385)
!15371 = !DILocalVariable(name: "thread_a", scope: !15365, file: !2464, line: 1157, type: !2356)
!15372 = !DILocalVariable(name: "thread_b", scope: !15365, file: !2464, line: 1157, type: !2356)
!15373 = !DILocalVariable(name: "cmp", scope: !15365, file: !2464, line: 1158, type: !774)
!15374 = !DILocation(line: 0, scope: !15365)
!15375 = !DILocation(line: 1160, column: 13, scope: !15365)
!15376 = !DILocation(line: 1161, column: 13, scope: !15365)
!15377 = !DILocation(line: 1163, column: 8, scope: !15365)
!15378 = !DILocation(line: 1165, column: 10, scope: !15379)
!15379 = distinct !DILexicalBlock(scope: !15365, file: !2464, line: 1165, column: 6)
!15380 = !DILocation(line: 1165, column: 6, scope: !15365)
!15381 = !DILocation(line: 1167, column: 17, scope: !15382)
!15382 = distinct !DILexicalBlock(scope: !15379, file: !2464, line: 1167, column: 13)
!15383 = !DILocation(line: 1167, column: 13, scope: !15379)
!15384 = !DILocation(line: 1170, column: 25, scope: !15385)
!15385 = distinct !DILexicalBlock(scope: !15382, file: !2464, line: 1169, column: 9)
!15386 = !DILocation(line: 1170, column: 52, scope: !15385)
!15387 = !DILocation(line: 1170, column: 35, scope: !15385)
!15388 = !DILocation(line: 1170, column: 3, scope: !15385)
!15389 = !DILocation(line: 0, scope: !15379)
!15390 = !DILocation(line: 1173, column: 1, scope: !15365)
!15391 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2464, file: !2464, line: 1175, type: !15392, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15407)
!15392 = !DISubroutineType(types: !15393)
!15393 = !{null, !15394, !2356}
!15394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15395, size: 32)
!15395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !15396, line: 37, size: 128, elements: !15397)
!15396 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15397 = !{!15398, !15406}
!15398 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !15395, file: !15396, line: 38, baseType: !15399, size: 96)
!15399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !169, line: 83, size: 96, elements: !15400)
!15400 = !{!15401, !15402, !15405}
!15401 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !15399, file: !169, line: 84, baseType: !2385, size: 32)
!15402 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !15399, file: !169, line: 85, baseType: !15403, size: 32, offset: 32)
!15403 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !169, line: 81, baseType: !15404)
!15404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15366, size: 32)
!15405 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !15399, file: !169, line: 86, baseType: !119, size: 32, offset: 64)
!15406 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !15395, file: !15396, line: 39, baseType: !119, size: 32, offset: 96)
!15407 = !{!15408, !15409, !15410, !15411, !15420}
!15408 = !DILocalVariable(name: "pq", arg: 1, scope: !15391, file: !2464, line: 1175, type: !15394)
!15409 = !DILocalVariable(name: "thread", arg: 2, scope: !15391, file: !2464, line: 1175, type: !2356)
!15410 = !DILocalVariable(name: "t", scope: !15391, file: !2464, line: 1177, type: !2356)
!15411 = !DILocalVariable(name: "__f", scope: !15412, file: !2464, line: 1190, type: !15415)
!15412 = distinct !DILexicalBlock(scope: !15413, file: !2464, line: 1190, column: 3)
!15413 = distinct !DILexicalBlock(scope: !15414, file: !2464, line: 1189, column: 27)
!15414 = distinct !DILexicalBlock(scope: !15391, file: !2464, line: 1189, column: 6)
!15415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !169, line: 155, size: 96, elements: !15416)
!15416 = !{!15417, !15418, !15419}
!15417 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !15415, file: !169, line: 156, baseType: !2459, size: 32)
!15418 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !15415, file: !169, line: 157, baseType: !284, size: 32, offset: 32)
!15419 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !15415, file: !169, line: 158, baseType: !774, size: 32, offset: 64)
!15420 = !DILocalVariable(name: "n", scope: !15421, file: !2464, line: 1190, type: !2385)
!15421 = distinct !DILexicalBlock(scope: !15422, file: !2464, line: 1190, column: 3)
!15422 = distinct !DILexicalBlock(scope: !15412, file: !2464, line: 1190, column: 3)
!15423 = !DILocation(line: 0, scope: !15391)
!15424 = !DILocation(line: 1179, column: 2, scope: !15425)
!15425 = distinct !DILexicalBlock(scope: !15426, file: !2464, line: 1179, column: 2)
!15426 = distinct !DILexicalBlock(scope: !15391, file: !2464, line: 1179, column: 2)
!15427 = !DILocation(line: 1179, column: 2, scope: !15426)
!15428 = !DILocation(line: 1179, column: 2, scope: !15429)
!15429 = distinct !DILexicalBlock(scope: !15425, file: !2464, line: 1179, column: 2)
!15430 = !DILocation(line: 1181, column: 31, scope: !15391)
!15431 = !DILocation(line: 1181, column: 45, scope: !15391)
!15432 = !DILocation(line: 1181, column: 15, scope: !15391)
!15433 = !DILocation(line: 1181, column: 25, scope: !15391)
!15434 = !DILocation(line: 1189, column: 11, scope: !15414)
!15435 = !DILocation(line: 1189, column: 7, scope: !15414)
!15436 = !DILocation(line: 1189, column: 6, scope: !15391)
!15437 = !DILocation(line: 1190, column: 3, scope: !15412)
!15438 = !DILocation(line: 1190, column: 3, scope: !15421)
!15439 = !DILocation(line: 0, scope: !15421)
!15440 = !DILocation(line: 1190, column: 3, scope: !15422)
!15441 = !DILocation(line: 1193, column: 2, scope: !15413)
!15442 = !DILocation(line: 1191, column: 42, scope: !15443)
!15443 = distinct !DILexicalBlock(scope: !15422, file: !2464, line: 1190, column: 54)
!15444 = !DILocation(line: 1191, column: 12, scope: !15443)
!15445 = !DILocation(line: 1191, column: 22, scope: !15443)
!15446 = distinct !{!15446, !15437, !15447}
!15447 = !DILocation(line: 1192, column: 3, scope: !15412)
!15448 = !DILocation(line: 1195, column: 17, scope: !15391)
!15449 = !DILocation(line: 1195, column: 37, scope: !15391)
!15450 = !DILocation(line: 1195, column: 2, scope: !15391)
!15451 = !DILocation(line: 1196, column: 1, scope: !15391)
!15452 = !DISubprogram(name: "z_rb_foreach_next", scope: !169, file: !169, line: 176, type: !15453, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2162)
!15453 = !DISubroutineType(types: !15454)
!15454 = !{!2385, !15455, !15456}
!15455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15399, size: 32)
!15456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15415, size: 32)
!15457 = !DISubprogram(name: "rb_insert", scope: !169, file: !169, line: 105, type: !15458, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2162)
!15458 = !DISubroutineType(types: !15459)
!15459 = !{null, !15455, !2385}
!15460 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2464, file: !2464, line: 1198, type: !15392, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15461)
!15461 = !{!15462, !15463}
!15462 = !DILocalVariable(name: "pq", arg: 1, scope: !15460, file: !2464, line: 1198, type: !15394)
!15463 = !DILocalVariable(name: "thread", arg: 2, scope: !15460, file: !2464, line: 1198, type: !2356)
!15464 = !DILocation(line: 0, scope: !15460)
!15465 = !DILocation(line: 1200, column: 2, scope: !15466)
!15466 = distinct !DILexicalBlock(scope: !15467, file: !2464, line: 1200, column: 2)
!15467 = distinct !DILexicalBlock(scope: !15460, file: !2464, line: 1200, column: 2)
!15468 = !DILocation(line: 1200, column: 2, scope: !15467)
!15469 = !DILocation(line: 1200, column: 2, scope: !15470)
!15470 = distinct !DILexicalBlock(scope: !15466, file: !2464, line: 1200, column: 2)
!15471 = !DILocation(line: 1202, column: 17, scope: !15460)
!15472 = !DILocation(line: 1202, column: 37, scope: !15460)
!15473 = !DILocation(line: 1202, column: 2, scope: !15460)
!15474 = !DILocation(line: 1204, column: 16, scope: !15475)
!15475 = distinct !DILexicalBlock(scope: !15460, file: !2464, line: 1204, column: 6)
!15476 = !DILocation(line: 1204, column: 7, scope: !15475)
!15477 = !DILocation(line: 1204, column: 6, scope: !15460)
!15478 = !DILocation(line: 1205, column: 7, scope: !15479)
!15479 = distinct !DILexicalBlock(scope: !15475, file: !2464, line: 1204, column: 22)
!15480 = !DILocation(line: 1205, column: 22, scope: !15479)
!15481 = !DILocation(line: 1206, column: 2, scope: !15479)
!15482 = !DILocation(line: 1207, column: 1, scope: !15460)
!15483 = !DISubprogram(name: "rb_remove", scope: !169, file: !169, line: 110, type: !15458, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2162)
!15484 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2464, file: !2464, line: 1209, type: !15485, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15487)
!15485 = !DISubroutineType(types: !15486)
!15486 = !{!2356, !15394}
!15487 = !{!15488, !15489, !15490}
!15488 = !DILocalVariable(name: "pq", arg: 1, scope: !15484, file: !2464, line: 1209, type: !15394)
!15489 = !DILocalVariable(name: "thread", scope: !15484, file: !2464, line: 1211, type: !2356)
!15490 = !DILocalVariable(name: "n", scope: !15484, file: !2464, line: 1212, type: !2385)
!15491 = !DILocation(line: 0, scope: !15484)
!15492 = !DILocation(line: 1212, column: 37, scope: !15484)
!15493 = !DILocation(line: 1212, column: 21, scope: !15484)
!15494 = !DILocation(line: 1217, column: 2, scope: !15484)
!15495 = distinct !DISubprogram(name: "rb_get_min", scope: !169, file: !169, line: 115, type: !15496, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15498)
!15496 = !DISubroutineType(types: !15497)
!15497 = !{!2385, !15455}
!15498 = !{!15499}
!15499 = !DILocalVariable(name: "tree", arg: 1, scope: !15495, file: !169, line: 115, type: !15455)
!15500 = !DILocation(line: 0, scope: !15495)
!15501 = !DILocation(line: 117, column: 9, scope: !15495)
!15502 = !DILocation(line: 117, column: 2, scope: !15495)
!15503 = !DISubprogram(name: "z_rb_get_minmax", scope: !169, file: !169, line: 100, type: !15504, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2162)
!15504 = !DISubroutineType(types: !15505)
!15505 = !{!2385, !15455, !185}
!15506 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2464, file: !2464, line: 1246, type: !15507, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15515)
!15507 = !DISubroutineType(types: !15508)
!15508 = !{!2356, !15509}
!15509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15510, size: 32)
!15510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !15396, line: 53, size: 2080, elements: !15511)
!15511 = !{!15512, !15514}
!15512 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !15510, file: !15396, line: 54, baseType: !15513, size: 2048)
!15513 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2392, size: 2048, elements: !231)
!15514 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !15510, file: !15396, line: 55, baseType: !32, size: 32, offset: 2048)
!15515 = !{!15516, !15517, !15518, !15519}
!15516 = !DILocalVariable(name: "pq", arg: 1, scope: !15506, file: !2464, line: 1246, type: !15509)
!15517 = !DILocalVariable(name: "thread", scope: !15506, file: !2464, line: 1252, type: !2356)
!15518 = !DILocalVariable(name: "l", scope: !15506, file: !2464, line: 1253, type: !14076)
!15519 = !DILocalVariable(name: "n", scope: !15506, file: !2464, line: 1254, type: !2460)
!15520 = !DILocation(line: 0, scope: !15506)
!15521 = !DILocation(line: 1248, column: 11, scope: !15522)
!15522 = distinct !DILexicalBlock(scope: !15506, file: !2464, line: 1248, column: 6)
!15523 = !DILocation(line: 1248, column: 7, scope: !15522)
!15524 = !DILocation(line: 1248, column: 6, scope: !15506)
!15525 = !DILocation(line: 1253, column: 31, scope: !15506)
!15526 = !DILocation(line: 1253, column: 20, scope: !15506)
!15527 = !DILocation(line: 1254, column: 19, scope: !15506)
!15528 = !DILocation(line: 1260, column: 1, scope: !15506)
!15529 = distinct !DISubprogram(name: "z_unpend_all", scope: !2464, file: !2464, line: 1262, type: !15530, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15532)
!15530 = !DISubroutineType(types: !15531)
!15531 = !{!119, !2387}
!15532 = !{!15533, !15534, !15535}
!15533 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15529, file: !2464, line: 1262, type: !2387)
!15534 = !DILocalVariable(name: "need_sched", scope: !15529, file: !2464, line: 1264, type: !119)
!15535 = !DILocalVariable(name: "thread", scope: !15529, file: !2464, line: 1265, type: !2356)
!15536 = !DILocation(line: 0, scope: !15529)
!15537 = !DILocation(line: 1267, column: 19, scope: !15529)
!15538 = !DILocation(line: 1267, column: 41, scope: !15529)
!15539 = !DILocation(line: 1267, column: 2, scope: !15529)
!15540 = !DILocation(line: 1268, column: 3, scope: !15541)
!15541 = distinct !DILexicalBlock(scope: !15529, file: !2464, line: 1267, column: 50)
!15542 = !DILocation(line: 1269, column: 3, scope: !15541)
!15543 = distinct !{!15543, !15539, !15544}
!15544 = !DILocation(line: 1271, column: 2, scope: !15529)
!15545 = !DILocation(line: 1273, column: 2, scope: !15529)
!15546 = distinct !DISubprogram(name: "z_waitq_head", scope: !13373, file: !13373, line: 52, type: !15077, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15547)
!15547 = !{!15548}
!15548 = !DILocalVariable(name: "w", arg: 1, scope: !15546, file: !13373, line: 52, type: !2387)
!15549 = !DILocation(line: 0, scope: !15546)
!15550 = !DILocation(line: 54, column: 52, scope: !15546)
!15551 = !DILocation(line: 54, column: 28, scope: !15546)
!15552 = !DILocation(line: 54, column: 9, scope: !15546)
!15553 = !DILocation(line: 54, column: 2, scope: !15546)
!15554 = distinct !DISubprogram(name: "init_ready_q", scope: !2464, file: !2464, line: 1276, type: !15555, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15562)
!15555 = !DISubroutineType(types: !15556)
!15556 = !{null, !15557}
!15557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15558, size: 32)
!15558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !179, line: 83, size: 96, elements: !15559)
!15559 = !{!15560, !15561}
!15560 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !15558, file: !179, line: 86, baseType: !2356, size: 32)
!15561 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !15558, file: !179, line: 90, baseType: !2392, size: 64, offset: 32)
!15562 = !{!15563}
!15563 = !DILocalVariable(name: "rq", arg: 1, scope: !15554, file: !2464, line: 1276, type: !15557)
!15564 = !DILocation(line: 0, scope: !15554)
!15565 = !DILocation(line: 1289, column: 22, scope: !15554)
!15566 = !DILocation(line: 1289, column: 2, scope: !15554)
!15567 = !DILocation(line: 1291, column: 1, scope: !15554)
!15568 = distinct !DISubprogram(name: "sys_dlist_init", scope: !153, file: !153, line: 197, type: !15569, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15571)
!15569 = !DISubroutineType(types: !15570)
!15570 = !{null, !14076}
!15571 = !{!15572}
!15572 = !DILocalVariable(name: "list", arg: 1, scope: !15568, file: !153, line: 197, type: !14076)
!15573 = !DILocation(line: 0, scope: !15568)
!15574 = !DILocation(line: 199, column: 8, scope: !15568)
!15575 = !DILocation(line: 199, column: 13, scope: !15568)
!15576 = !DILocation(line: 200, column: 8, scope: !15568)
!15577 = !DILocation(line: 200, column: 13, scope: !15568)
!15578 = !DILocation(line: 201, column: 1, scope: !15568)
!15579 = distinct !DISubprogram(name: "z_sched_init", scope: !2464, file: !2464, line: 1293, type: !3098, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !2162)
!15580 = !DILocation(line: 1302, column: 2, scope: !15579)
!15581 = !DILocation(line: 1306, column: 2, scope: !15579)
!15582 = !DILocation(line: 1309, column: 1, scope: !15579)
!15583 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2464, file: !2464, line: 1311, type: !15584, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15587)
!15584 = !DISubroutineType(types: !15585)
!15585 = !{!119, !15586}
!15586 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !143, line: 347, baseType: !2356)
!15587 = !{!15588}
!15588 = !DILocalVariable(name: "thread", arg: 1, scope: !15583, file: !2464, line: 1311, type: !15586)
!15589 = !DILocation(line: 0, scope: !15583)
!15590 = !DILocation(line: 1313, column: 22, scope: !15583)
!15591 = !DILocation(line: 1313, column: 9, scope: !15583)
!15592 = !DILocation(line: 1313, column: 2, scope: !15583)
!15593 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2464, file: !2464, line: 1325, type: !15594, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15596)
!15594 = !DISubroutineType(types: !15595)
!15595 = !{null, !15586, !119}
!15596 = !{!15597, !15598, !15599}
!15597 = !DILocalVariable(name: "thread", arg: 1, scope: !15593, file: !2464, line: 1325, type: !15586)
!15598 = !DILocalVariable(name: "prio", arg: 2, scope: !15593, file: !2464, line: 1325, type: !119)
!15599 = !DILocalVariable(name: "th", scope: !15593, file: !2464, line: 1334, type: !2356)
!15600 = !DILocation(line: 0, scope: !15593)
!15601 = !DILocation(line: 1331, column: 2, scope: !15602)
!15602 = distinct !DILexicalBlock(scope: !15603, file: !2464, line: 1331, column: 2)
!15603 = distinct !DILexicalBlock(scope: !15604, file: !2464, line: 1331, column: 2)
!15604 = distinct !DILexicalBlock(scope: !15593, file: !2464, line: 1331, column: 2)
!15605 = !DILocation(line: 1331, column: 2, scope: !15606)
!15606 = distinct !DILexicalBlock(scope: !15602, file: !2464, line: 1331, column: 2)
!15607 = !DILocation(line: 1031, column: 3, scope: !14577, inlinedAt: !15608)
!15608 = distinct !DILocation(line: 48, column: 10, scope: !14581, inlinedAt: !15609)
!15609 = distinct !DILocation(line: 1332, column: 2, scope: !15610)
!15610 = distinct !DILexicalBlock(scope: !15611, file: !2464, line: 1332, column: 2)
!15611 = distinct !DILexicalBlock(scope: !15593, file: !2464, line: 1332, column: 2)
!15612 = !DILocation(line: 0, scope: !14577, inlinedAt: !15608)
!15613 = !DILocation(line: 48, column: 9, scope: !14581, inlinedAt: !15609)
!15614 = !DILocation(line: 1332, column: 2, scope: !15611)
!15615 = !DILocation(line: 1332, column: 2, scope: !15616)
!15616 = distinct !DILexicalBlock(scope: !15610, file: !2464, line: 1332, column: 2)
!15617 = !DILocation(line: 1336, column: 2, scope: !15593)
!15618 = !DILocation(line: 1337, column: 1, scope: !15593)
!15619 = distinct !DISubprogram(name: "k_can_yield", scope: !2464, file: !2464, line: 1384, type: !7503, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !2162)
!15620 = !DILocation(line: 1386, column: 11, scope: !15619)
!15621 = !DILocation(line: 1386, column: 29, scope: !15619)
!15622 = !DILocation(line: 1386, column: 32, scope: !15619)
!15623 = !DILocation(line: 1386, column: 46, scope: !15619)
!15624 = !DILocation(line: 1387, column: 28, scope: !15619)
!15625 = !DILocation(line: 1387, column: 4, scope: !15619)
!15626 = !DILocation(line: 1386, column: 2, scope: !15619)
!15627 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !245, file: !245, line: 989, type: !7503, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !2162)
!15628 = !DILocation(line: 993, column: 10, scope: !15627)
!15629 = !DILocation(line: 993, column: 2, scope: !15627)
!15630 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2464, file: !2464, line: 1390, type: !3098, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15631)
!15631 = !{!15632}
!15632 = !DILocalVariable(name: "key", scope: !15630, file: !2464, line: 1396, type: !13842)
!15633 = !DILocation(line: 1031, column: 3, scope: !14577, inlinedAt: !15634)
!15634 = distinct !DILocation(line: 48, column: 10, scope: !14581, inlinedAt: !15635)
!15635 = distinct !DILocation(line: 1392, column: 2, scope: !15636)
!15636 = distinct !DILexicalBlock(scope: !15637, file: !2464, line: 1392, column: 2)
!15637 = distinct !DILexicalBlock(scope: !15630, file: !2464, line: 1392, column: 2)
!15638 = !DILocation(line: 0, scope: !14577, inlinedAt: !15634)
!15639 = !DILocation(line: 48, column: 9, scope: !14581, inlinedAt: !15635)
!15640 = !DILocation(line: 1392, column: 2, scope: !15637)
!15641 = !DILocation(line: 1392, column: 2, scope: !15642)
!15642 = distinct !DILexicalBlock(scope: !15636, file: !2464, line: 1392, column: 2)
!15643 = !DILocation(line: 0, scope: !13850, inlinedAt: !15644)
!15644 = distinct !DILocation(line: 1396, column: 25, scope: !15630)
!15645 = !DILocation(line: 55, column: 2, scope: !13859, inlinedAt: !15646)
!15646 = distinct !DILocation(line: 145, column: 10, scope: !13850, inlinedAt: !15644)
!15647 = !DILocation(line: 0, scope: !13859, inlinedAt: !15646)
!15648 = !DILocation(line: 148, column: 2, scope: !13867, inlinedAt: !15644)
!15649 = !DILocation(line: 148, column: 2, scope: !13868, inlinedAt: !15644)
!15650 = !DILocation(line: 148, column: 2, scope: !13871, inlinedAt: !15644)
!15651 = !DILocation(line: 160, column: 2, scope: !13850, inlinedAt: !15644)
!15652 = !DILocation(line: 0, scope: !15630)
!15653 = !DILocation(line: 1400, column: 18, scope: !15654)
!15654 = distinct !DILexicalBlock(scope: !15655, file: !2464, line: 1399, column: 36)
!15655 = distinct !DILexicalBlock(scope: !15630, file: !2464, line: 1398, column: 6)
!15656 = !DILocation(line: 0, scope: !14042, inlinedAt: !15657)
!15657 = distinct !DILocation(line: 1400, column: 3, scope: !15654)
!15658 = !DILocation(line: 266, column: 15, scope: !14042, inlinedAt: !15657)
!15659 = !DILocation(line: 266, column: 28, scope: !14042, inlinedAt: !15657)
!15660 = !DILocation(line: 0, scope: !14050, inlinedAt: !15661)
!15661 = distinct !DILocation(line: 268, column: 3, scope: !14054, inlinedAt: !15657)
!15662 = !DILocation(line: 234, column: 2, scope: !14050, inlinedAt: !15661)
!15663 = !DILocation(line: 1402, column: 15, scope: !15630)
!15664 = !DILocation(line: 0, scope: !14059, inlinedAt: !15665)
!15665 = distinct !DILocation(line: 1402, column: 2, scope: !15630)
!15666 = !DILocation(line: 252, column: 15, scope: !14059, inlinedAt: !15665)
!15667 = !DILocation(line: 252, column: 28, scope: !14059, inlinedAt: !15665)
!15668 = !DILocation(line: 0, scope: !14066, inlinedAt: !15669)
!15669 = distinct !DILocation(line: 254, column: 3, scope: !14070, inlinedAt: !15665)
!15670 = !DILocation(line: 0, scope: !14073, inlinedAt: !15671)
!15671 = distinct !DILocation(line: 229, column: 2, scope: !14066, inlinedAt: !15669)
!15672 = !DILocation(line: 186, column: 2, scope: !14083, inlinedAt: !15671)
!15673 = !DILocation(line: 186, column: 2, scope: !14084, inlinedAt: !15671)
!15674 = !DILocation(line: 186, column: 2, scope: !14087, inlinedAt: !15671)
!15675 = !DILocation(line: 188, column: 2, scope: !14089, inlinedAt: !15671)
!15676 = !DILocation(line: 188, column: 2, scope: !14091, inlinedAt: !15671)
!15677 = !DILocation(line: 0, scope: !14089, inlinedAt: !15671)
!15678 = !DILocation(line: 189, column: 7, scope: !14094, inlinedAt: !15671)
!15679 = !DILocation(line: 189, column: 35, scope: !14094, inlinedAt: !15671)
!15680 = !DILocation(line: 189, column: 7, scope: !14095, inlinedAt: !15671)
!15681 = !DILocation(line: 191, column: 21, scope: !14099, inlinedAt: !15671)
!15682 = !DILocation(line: 190, column: 4, scope: !14099, inlinedAt: !15671)
!15683 = !DILocation(line: 192, column: 4, scope: !14099, inlinedAt: !15671)
!15684 = distinct !{!15684, !15675, !15685}
!15685 = !DILocation(line: 194, column: 2, scope: !14089, inlinedAt: !15671)
!15686 = !DILocation(line: 196, column: 37, scope: !14073, inlinedAt: !15671)
!15687 = !DILocation(line: 196, column: 2, scope: !14073, inlinedAt: !15671)
!15688 = !DILocation(line: 197, column: 1, scope: !14073, inlinedAt: !15671)
!15689 = !DILocation(line: 1403, column: 2, scope: !15630)
!15690 = !DILocation(line: 0, scope: !14528, inlinedAt: !15691)
!15691 = distinct !DILocation(line: 1404, column: 2, scope: !15630)
!15692 = !DILocation(line: 0, scope: !14537, inlinedAt: !15693)
!15693 = distinct !DILocation(line: 195, column: 2, scope: !14528, inlinedAt: !15691)
!15694 = !DILocation(line: 225, column: 2, scope: !14544, inlinedAt: !15693)
!15695 = !DILocation(line: 225, column: 2, scope: !14545, inlinedAt: !15693)
!15696 = !DILocation(line: 225, column: 2, scope: !14548, inlinedAt: !15693)
!15697 = !DILocation(line: 196, column: 9, scope: !14528, inlinedAt: !15691)
!15698 = !DILocation(line: 1405, column: 1, scope: !15630)
!15699 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2464, file: !2464, line: 1459, type: !15700, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15702)
!15700 = !DISubroutineType(types: !15701)
!15701 = !{!774, !14738}
!15702 = !{!15703, !15704, !15705}
!15703 = !DILocalVariable(name: "timeout", arg: 1, scope: !15699, file: !2464, line: 1459, type: !14738)
!15704 = !DILocalVariable(name: "ticks", scope: !15699, file: !2464, line: 1461, type: !114)
!15705 = !DILocalVariable(name: "ret", scope: !15699, file: !2464, line: 1480, type: !774)
!15706 = !DILocation(line: 0, scope: !15699)
!15707 = !DILocation(line: 1031, column: 3, scope: !14577, inlinedAt: !15708)
!15708 = distinct !DILocation(line: 48, column: 10, scope: !14581, inlinedAt: !15709)
!15709 = distinct !DILocation(line: 1463, column: 2, scope: !15710)
!15710 = distinct !DILexicalBlock(scope: !15711, file: !2464, line: 1463, column: 2)
!15711 = distinct !DILexicalBlock(scope: !15699, file: !2464, line: 1463, column: 2)
!15712 = !DILocation(line: 0, scope: !14577, inlinedAt: !15708)
!15713 = !DILocation(line: 48, column: 9, scope: !14581, inlinedAt: !15709)
!15714 = !DILocation(line: 1463, column: 2, scope: !15711)
!15715 = !DILocation(line: 1463, column: 2, scope: !15716)
!15716 = distinct !DILexicalBlock(scope: !15710, file: !2464, line: 1463, column: 2)
!15717 = !DILocation(line: 1468, column: 6, scope: !15718)
!15718 = distinct !DILexicalBlock(scope: !15699, file: !2464, line: 1468, column: 6)
!15719 = !DILocation(line: 1468, column: 6, scope: !15699)
!15720 = !DILocation(line: 1469, column: 20, scope: !15721)
!15721 = distinct !DILexicalBlock(scope: !15718, file: !2464, line: 1468, column: 40)
!15722 = !DILocation(line: 1469, column: 3, scope: !15721)
!15723 = !DILocation(line: 1473, column: 3, scope: !15721)
!15724 = !DILocation(line: 1478, column: 10, scope: !15699)
!15725 = !DILocation(line: 1480, column: 16, scope: !15699)
!15726 = !DILocation(line: 1485, column: 1, scope: !15699)
!15727 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3349, file: !3349, line: 310, type: !15728, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15730)
!15728 = !DISubroutineType(types: !15729)
!15729 = !{null, !15586}
!15730 = !{!15731}
!15731 = !DILocalVariable(name: "thread", arg: 1, scope: !15727, file: !3349, line: 310, type: !15586)
!15732 = !DILocation(line: 0, scope: !15727)
!15733 = !DILocation(line: 319, column: 2, scope: !15734)
!15734 = distinct !DILexicalBlock(scope: !15727, file: !3349, line: 319, column: 2)
!15735 = !{i64 2155489845}
!15736 = !DILocation(line: 320, column: 2, scope: !15727)
!15737 = !DILocation(line: 321, column: 1, scope: !15727)
!15738 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2464, file: !2464, line: 1415, type: !15739, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15741)
!15739 = !DISubroutineType(types: !15740)
!15740 = !{!774, !114}
!15741 = !{!15742, !15743, !15744, !15745}
!15742 = !DILocalVariable(name: "ticks", arg: 1, scope: !15738, file: !2464, line: 1415, type: !114)
!15743 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !15738, file: !2464, line: 1418, type: !118)
!15744 = !DILocalVariable(name: "timeout", scope: !15738, file: !2464, line: 1430, type: !14738)
!15745 = !DILocalVariable(name: "key", scope: !15738, file: !2464, line: 1437, type: !13842)
!15746 = !DILocation(line: 0, scope: !15738)
!15747 = !DILocation(line: 1031, column: 3, scope: !14577, inlinedAt: !15748)
!15748 = distinct !DILocation(line: 48, column: 10, scope: !14581, inlinedAt: !15749)
!15749 = distinct !DILocation(line: 1420, column: 2, scope: !15750)
!15750 = distinct !DILexicalBlock(scope: !15751, file: !2464, line: 1420, column: 2)
!15751 = distinct !DILexicalBlock(scope: !15738, file: !2464, line: 1420, column: 2)
!15752 = !DILocation(line: 0, scope: !14577, inlinedAt: !15748)
!15753 = !DILocation(line: 48, column: 9, scope: !14581, inlinedAt: !15749)
!15754 = !DILocation(line: 1420, column: 2, scope: !15751)
!15755 = !DILocation(line: 1420, column: 2, scope: !15756)
!15756 = distinct !DILexicalBlock(scope: !15750, file: !2464, line: 1420, column: 2)
!15757 = !DILocation(line: 1425, column: 12, scope: !15758)
!15758 = distinct !DILexicalBlock(scope: !15738, file: !2464, line: 1425, column: 6)
!15759 = !DILocation(line: 1425, column: 6, scope: !15738)
!15760 = !DILocation(line: 1426, column: 3, scope: !15761)
!15761 = distinct !DILexicalBlock(scope: !15758, file: !2464, line: 1425, column: 18)
!15762 = !DILocation(line: 1427, column: 3, scope: !15761)
!15763 = !DILocation(line: 1431, column: 24, scope: !15764)
!15764 = distinct !DILexicalBlock(scope: !15738, file: !2464, line: 1431, column: 6)
!15765 = !DILocation(line: 1431, column: 6, scope: !15738)
!15766 = !DILocation(line: 1432, column: 35, scope: !15767)
!15767 = distinct !DILexicalBlock(scope: !15764, file: !2464, line: 1431, column: 30)
!15768 = !DILocation(line: 1432, column: 27, scope: !15767)
!15769 = !DILocation(line: 1433, column: 2, scope: !15767)
!15770 = !DILocation(line: 1434, column: 27, scope: !15771)
!15771 = distinct !DILexicalBlock(scope: !15764, file: !2464, line: 1433, column: 9)
!15772 = !DILocation(line: 0, scope: !15764)
!15773 = !DILocation(line: 0, scope: !13850, inlinedAt: !15774)
!15774 = distinct !DILocation(line: 1437, column: 25, scope: !15738)
!15775 = !DILocation(line: 55, column: 2, scope: !13859, inlinedAt: !15776)
!15776 = distinct !DILocation(line: 145, column: 10, scope: !13850, inlinedAt: !15774)
!15777 = !DILocation(line: 0, scope: !13859, inlinedAt: !15776)
!15778 = !DILocation(line: 148, column: 2, scope: !13867, inlinedAt: !15774)
!15779 = !DILocation(line: 148, column: 2, scope: !13868, inlinedAt: !15774)
!15780 = !DILocation(line: 148, column: 2, scope: !13871, inlinedAt: !15774)
!15781 = !DILocation(line: 160, column: 2, scope: !13850, inlinedAt: !15774)
!15782 = !DILocation(line: 1440, column: 20, scope: !15738)
!15783 = !DILocation(line: 1440, column: 18, scope: !15738)
!15784 = !DILocation(line: 1442, column: 2, scope: !15738)
!15785 = !DILocation(line: 1443, column: 23, scope: !15738)
!15786 = !DILocation(line: 1443, column: 2, scope: !15738)
!15787 = !DILocation(line: 1444, column: 29, scope: !15738)
!15788 = !DILocation(line: 1444, column: 2, scope: !15738)
!15789 = !DILocation(line: 0, scope: !14528, inlinedAt: !15790)
!15790 = distinct !DILocation(line: 1446, column: 8, scope: !15738)
!15791 = !DILocation(line: 0, scope: !14537, inlinedAt: !15792)
!15792 = distinct !DILocation(line: 195, column: 2, scope: !14528, inlinedAt: !15790)
!15793 = !DILocation(line: 225, column: 2, scope: !14544, inlinedAt: !15792)
!15794 = !DILocation(line: 225, column: 2, scope: !14545, inlinedAt: !15792)
!15795 = !DILocation(line: 225, column: 2, scope: !14548, inlinedAt: !15792)
!15796 = !DILocation(line: 196, column: 9, scope: !14528, inlinedAt: !15790)
!15797 = !DILocation(line: 1448, column: 2, scope: !15798)
!15798 = distinct !DILexicalBlock(scope: !15799, file: !2464, line: 1448, column: 2)
!15799 = distinct !DILexicalBlock(scope: !15738, file: !2464, line: 1448, column: 2)
!15800 = !DILocation(line: 1448, column: 2, scope: !15799)
!15801 = !DILocation(line: 1448, column: 2, scope: !15802)
!15802 = distinct !DILexicalBlock(scope: !15798, file: !2464, line: 1448, column: 2)
!15803 = !DILocation(line: 1450, column: 10, scope: !15738)
!15804 = !DILocation(line: 1450, column: 45, scope: !15738)
!15805 = !DILocation(line: 1450, column: 43, scope: !15738)
!15806 = !DILocation(line: 1451, column: 6, scope: !15738)
!15807 = !DILocation(line: 1457, column: 1, scope: !15738)
!15808 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !3341, file: !3341, line: 1103, type: !3342, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15809)
!15809 = !{!15810}
!15810 = !DILocalVariable(name: "t", arg: 1, scope: !15808, file: !3341, line: 1103, type: !120)
!15811 = !DILocation(line: 0, scope: !15808)
!15812 = !DILocation(line: 0, scope: !13910, inlinedAt: !15813)
!15813 = distinct !DILocation(line: 1106, column: 9, scope: !15808)
!15814 = !DILocation(line: 139, column: 13, scope: !15815, inlinedAt: !15813)
!15815 = distinct !DILexicalBlock(scope: !15816, file: !3341, line: 138, column: 10)
!15816 = distinct !DILexicalBlock(scope: !15817, file: !3341, line: 136, column: 7)
!15817 = distinct !DILexicalBlock(scope: !13931, file: !3341, line: 134, column: 17)
!15818 = !DILocation(line: 1106, column: 2, scope: !15808)
!15819 = distinct !DISubprogram(name: "k_yield", scope: !3349, file: !3349, line: 140, type: !3098, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !2162)
!15820 = !DILocation(line: 148, column: 2, scope: !15821)
!15821 = distinct !DILexicalBlock(scope: !15819, file: !3349, line: 148, column: 2)
!15822 = !{i64 2155489165}
!15823 = !DILocation(line: 149, column: 2, scope: !15819)
!15824 = !DILocation(line: 150, column: 1, scope: !15819)
!15825 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2464, file: !2464, line: 1495, type: !15826, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15828)
!15826 = !DISubroutineType(types: !15827)
!15827 = !{!774, !119}
!15828 = !{!15829, !15830}
!15829 = !DILocalVariable(name: "us", arg: 1, scope: !15825, file: !2464, line: 1495, type: !119)
!15830 = !DILocalVariable(name: "ticks", scope: !15825, file: !2464, line: 1497, type: !774)
!15831 = !DILocation(line: 0, scope: !15825)
!15832 = !DILocation(line: 1501, column: 31, scope: !15825)
!15833 = !DILocation(line: 1501, column: 10, scope: !15825)
!15834 = !DILocation(line: 1502, column: 23, scope: !15825)
!15835 = !DILocation(line: 1502, column: 10, scope: !15825)
!15836 = !DILocation(line: 1506, column: 31, scope: !15825)
!15837 = !DILocation(line: 1506, column: 9, scope: !15825)
!15838 = !DILocation(line: 1506, column: 2, scope: !15825)
!15839 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !3341, file: !3341, line: 571, type: !3342, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15840)
!15840 = !{!15841}
!15841 = !DILocalVariable(name: "t", arg: 1, scope: !15839, file: !3341, line: 571, type: !120)
!15842 = !DILocation(line: 0, scope: !15839)
!15843 = !DILocation(line: 0, scope: !13910, inlinedAt: !15844)
!15844 = distinct !DILocation(line: 574, column: 9, scope: !15839)
!15845 = !DILocation(line: 135, column: 5, scope: !15817, inlinedAt: !15844)
!15846 = !DILocation(line: 139, column: 13, scope: !15815, inlinedAt: !15844)
!15847 = !DILocation(line: 574, column: 2, scope: !15839)
!15848 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !3341, file: !3341, line: 1187, type: !3342, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15849)
!15849 = !{!15850}
!15850 = !DILocalVariable(name: "t", arg: 1, scope: !15848, file: !3341, line: 1187, type: !120)
!15851 = !DILocation(line: 0, scope: !15848)
!15852 = !DILocation(line: 0, scope: !13910, inlinedAt: !15853)
!15853 = distinct !DILocation(line: 1190, column: 9, scope: !15848)
!15854 = !DILocation(line: 145, column: 13, scope: !15855, inlinedAt: !15853)
!15855 = distinct !DILexicalBlock(scope: !13928, file: !3341, line: 144, column: 10)
!15856 = !DILocation(line: 1190, column: 2, scope: !15848)
!15857 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2464, file: !2464, line: 1517, type: !15728, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15858)
!15858 = !{!15859}
!15859 = !DILocalVariable(name: "thread", arg: 1, scope: !15857, file: !2464, line: 1517, type: !15586)
!15860 = !DILocation(line: 0, scope: !15857)
!15861 = !DILocation(line: 1521, column: 6, scope: !15862)
!15862 = distinct !DILexicalBlock(scope: !15857, file: !2464, line: 1521, column: 6)
!15863 = !DILocation(line: 1521, column: 6, scope: !15857)
!15864 = !DILocation(line: 1525, column: 6, scope: !15865)
!15865 = distinct !DILexicalBlock(scope: !15857, file: !2464, line: 1525, column: 6)
!15866 = !DILocation(line: 1525, column: 37, scope: !15865)
!15867 = !DILocation(line: 1525, column: 6, scope: !15857)
!15868 = !DILocation(line: 1527, column: 20, scope: !15869)
!15869 = distinct !DILexicalBlock(scope: !15870, file: !2464, line: 1527, column: 7)
!15870 = distinct !DILexicalBlock(scope: !15865, file: !2464, line: 1525, column: 42)
!15871 = !DILocation(line: 1527, column: 33, scope: !15869)
!15872 = !DILocation(line: 1527, column: 7, scope: !15870)
!15873 = !DILocation(line: 1532, column: 2, scope: !15857)
!15874 = !DILocation(line: 1533, column: 2, scope: !15857)
!15875 = !DILocation(line: 1031, column: 3, scope: !14577, inlinedAt: !15876)
!15876 = distinct !DILocation(line: 48, column: 10, scope: !14581, inlinedAt: !15877)
!15877 = distinct !DILocation(line: 1537, column: 7, scope: !15878)
!15878 = distinct !DILexicalBlock(scope: !15857, file: !2464, line: 1537, column: 6)
!15879 = !DILocation(line: 0, scope: !14577, inlinedAt: !15876)
!15880 = !DILocation(line: 48, column: 9, scope: !14581, inlinedAt: !15877)
!15881 = !DILocation(line: 1537, column: 6, scope: !15857)
!15882 = !DILocation(line: 1538, column: 3, scope: !15883)
!15883 = distinct !DILexicalBlock(scope: !15878, file: !2464, line: 1537, column: 25)
!15884 = !DILocation(line: 1539, column: 2, scope: !15883)
!15885 = !DILocation(line: 1540, column: 1, scope: !15857)
!15886 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !13012, file: !13012, line: 101, type: !13991, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15887)
!15887 = !{!15888}
!15888 = !DILocalVariable(name: "thread", arg: 1, scope: !15886, file: !13012, line: 101, type: !2356)
!15889 = !DILocation(line: 0, scope: !15886)
!15890 = !DILocation(line: 103, column: 23, scope: !15886)
!15891 = !DILocation(line: 103, column: 36, scope: !15886)
!15892 = !DILocation(line: 103, column: 55, scope: !15886)
!15893 = !DILocation(line: 103, column: 2, scope: !15886)
!15894 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2464, file: !2464, line: 1567, type: !15895, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15897)
!15895 = !DISubroutineType(types: !15896)
!15896 = !{!15586}
!15897 = !{!15898}
!15898 = !DILocalVariable(name: "ret", scope: !15894, file: !2464, line: 1577, type: !15586)
!15899 = !DILocation(line: 1577, column: 30, scope: !15894)
!15900 = !DILocation(line: 0, scope: !15894)
!15901 = !DILocation(line: 1582, column: 2, scope: !15894)
!15902 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2464, file: !2464, line: 1593, type: !7806, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !2162)
!15903 = !DILocation(line: 1031, column: 3, scope: !14577, inlinedAt: !15904)
!15904 = distinct !DILocation(line: 48, column: 10, scope: !14581, inlinedAt: !15905)
!15905 = distinct !DILocation(line: 1595, column: 10, scope: !15902)
!15906 = !DILocation(line: 0, scope: !14577, inlinedAt: !15904)
!15907 = !DILocation(line: 48, column: 9, scope: !14581, inlinedAt: !15905)
!15908 = !DILocation(line: 1595, column: 27, scope: !15902)
!15909 = !DILocation(line: 1595, column: 41, scope: !15902)
!15910 = !DILocation(line: 1595, column: 30, scope: !15902)
!15911 = !DILocation(line: 1595, column: 2, scope: !15902)
!15912 = distinct !DISubprogram(name: "z_thread_abort", scope: !2464, file: !2464, line: 1725, type: !13808, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15913)
!15913 = !{!15914, !15915}
!15914 = !DILocalVariable(name: "thread", arg: 1, scope: !15912, file: !2464, line: 1725, type: !2356)
!15915 = !DILocalVariable(name: "key", scope: !15912, file: !2464, line: 1727, type: !13842)
!15916 = !DILocation(line: 0, scope: !15912)
!15917 = !DILocation(line: 0, scope: !13850, inlinedAt: !15918)
!15918 = distinct !DILocation(line: 1727, column: 25, scope: !15912)
!15919 = !DILocation(line: 55, column: 2, scope: !13859, inlinedAt: !15920)
!15920 = distinct !DILocation(line: 145, column: 10, scope: !13850, inlinedAt: !15918)
!15921 = !DILocation(line: 0, scope: !13859, inlinedAt: !15920)
!15922 = !DILocation(line: 148, column: 2, scope: !13867, inlinedAt: !15918)
!15923 = !DILocation(line: 148, column: 2, scope: !13868, inlinedAt: !15918)
!15924 = !DILocation(line: 148, column: 2, scope: !13871, inlinedAt: !15918)
!15925 = !DILocation(line: 160, column: 2, scope: !13850, inlinedAt: !15918)
!15926 = !DILocation(line: 1729, column: 20, scope: !15927)
!15927 = distinct !DILexicalBlock(scope: !15912, file: !2464, line: 1729, column: 6)
!15928 = !DILocation(line: 1729, column: 33, scope: !15927)
!15929 = !DILocation(line: 1729, column: 48, scope: !15927)
!15930 = !DILocation(line: 1729, column: 6, scope: !15912)
!15931 = !DILocation(line: 0, scope: !13884, inlinedAt: !15932)
!15932 = distinct !DILocation(line: 1730, column: 3, scope: !15933)
!15933 = distinct !DILexicalBlock(scope: !15927, file: !2464, line: 1729, column: 54)
!15934 = !DILocation(line: 194, column: 2, scope: !13892, inlinedAt: !15932)
!15935 = !DILocation(line: 194, column: 2, scope: !13893, inlinedAt: !15932)
!15936 = !DILocation(line: 194, column: 2, scope: !13896, inlinedAt: !15932)
!15937 = !DILocation(line: 0, scope: !13898, inlinedAt: !15938)
!15938 = distinct !DILocation(line: 215, column: 2, scope: !13884, inlinedAt: !15932)
!15939 = !DILocation(line: 95, column: 2, scope: !13898, inlinedAt: !15938)
!15940 = !DILocation(line: 1731, column: 3, scope: !15941)
!15941 = distinct !DILexicalBlock(scope: !15942, file: !2464, line: 1731, column: 3)
!15942 = distinct !DILexicalBlock(scope: !15943, file: !2464, line: 1731, column: 3)
!15943 = distinct !DILexicalBlock(scope: !15933, file: !2464, line: 1731, column: 3)
!15944 = !DILocation(line: 1736, column: 20, scope: !15945)
!15945 = distinct !DILexicalBlock(scope: !15912, file: !2464, line: 1736, column: 6)
!15946 = !DILocation(line: 1736, column: 33, scope: !15945)
!15947 = !DILocation(line: 1736, column: 49, scope: !15945)
!15948 = !DILocation(line: 1736, column: 6, scope: !15912)
!15949 = !DILocation(line: 0, scope: !13884, inlinedAt: !15950)
!15950 = distinct !DILocation(line: 1737, column: 3, scope: !15951)
!15951 = distinct !DILexicalBlock(scope: !15945, file: !2464, line: 1736, column: 56)
!15952 = !DILocation(line: 194, column: 2, scope: !13892, inlinedAt: !15950)
!15953 = !DILocation(line: 194, column: 2, scope: !13893, inlinedAt: !15950)
!15954 = !DILocation(line: 194, column: 2, scope: !13896, inlinedAt: !15950)
!15955 = !DILocation(line: 0, scope: !13898, inlinedAt: !15956)
!15956 = distinct !DILocation(line: 215, column: 2, scope: !13884, inlinedAt: !15950)
!15957 = !DILocation(line: 95, column: 2, scope: !13898, inlinedAt: !15956)
!15958 = !DILocation(line: 1738, column: 3, scope: !15951)
!15959 = !DILocation(line: 1775, column: 2, scope: !15912)
!15960 = !DILocation(line: 1776, column: 16, scope: !15961)
!15961 = distinct !DILexicalBlock(scope: !15912, file: !2464, line: 1776, column: 6)
!15962 = !DILocation(line: 1776, column: 13, scope: !15961)
!15963 = !DILocation(line: 1776, column: 25, scope: !15961)
!15964 = !DILocation(line: 1031, column: 3, scope: !14577, inlinedAt: !15965)
!15965 = distinct !DILocation(line: 48, column: 10, scope: !14581, inlinedAt: !15966)
!15966 = distinct !DILocation(line: 1776, column: 29, scope: !15961)
!15967 = !DILocation(line: 0, scope: !14577, inlinedAt: !15965)
!15968 = !DILocation(line: 48, column: 9, scope: !14581, inlinedAt: !15966)
!15969 = !DILocation(line: 1776, column: 6, scope: !15912)
!15970 = !DILocation(line: 0, scope: !14528, inlinedAt: !15971)
!15971 = distinct !DILocation(line: 1777, column: 3, scope: !15972)
!15972 = distinct !DILexicalBlock(scope: !15961, file: !2464, line: 1776, column: 47)
!15973 = !DILocation(line: 0, scope: !14537, inlinedAt: !15974)
!15974 = distinct !DILocation(line: 195, column: 2, scope: !14528, inlinedAt: !15971)
!15975 = !DILocation(line: 225, column: 2, scope: !14544, inlinedAt: !15974)
!15976 = !DILocation(line: 225, column: 2, scope: !14545, inlinedAt: !15974)
!15977 = !DILocation(line: 225, column: 2, scope: !14548, inlinedAt: !15974)
!15978 = !DILocation(line: 196, column: 9, scope: !14528, inlinedAt: !15971)
!15979 = !DILocation(line: 1778, column: 3, scope: !15980)
!15980 = distinct !DILexicalBlock(scope: !15981, file: !2464, line: 1778, column: 3)
!15981 = distinct !DILexicalBlock(scope: !15982, file: !2464, line: 1778, column: 3)
!15982 = distinct !DILexicalBlock(scope: !15972, file: !2464, line: 1778, column: 3)
!15983 = !DILocation(line: 0, scope: !13884, inlinedAt: !15984)
!15984 = distinct !DILocation(line: 1780, column: 2, scope: !15912)
!15985 = !DILocation(line: 194, column: 2, scope: !13892, inlinedAt: !15984)
!15986 = !DILocation(line: 194, column: 2, scope: !13893, inlinedAt: !15984)
!15987 = !DILocation(line: 194, column: 2, scope: !13896, inlinedAt: !15984)
!15988 = !DILocation(line: 0, scope: !13898, inlinedAt: !15989)
!15989 = distinct !DILocation(line: 215, column: 2, scope: !13884, inlinedAt: !15984)
!15990 = !DILocation(line: 95, column: 2, scope: !13898, inlinedAt: !15989)
!15991 = !DILocation(line: 1781, column: 1, scope: !15912)
!15992 = distinct !DISubprogram(name: "end_thread", scope: !2464, file: !2464, line: 1690, type: !13808, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !15993)
!15993 = !{!15994}
!15994 = !DILocalVariable(name: "thread", arg: 1, scope: !15992, file: !2464, line: 1690, type: !2356)
!15995 = !DILocation(line: 0, scope: !15992)
!15996 = !DILocation(line: 1695, column: 20, scope: !15997)
!15997 = distinct !DILexicalBlock(scope: !15992, file: !2464, line: 1695, column: 6)
!15998 = !DILocation(line: 1695, column: 33, scope: !15997)
!15999 = !DILocation(line: 1695, column: 49, scope: !15997)
!16000 = !DILocation(line: 1695, column: 6, scope: !15992)
!16001 = !DILocation(line: 1697, column: 29, scope: !16002)
!16002 = distinct !DILexicalBlock(scope: !15997, file: !2464, line: 1695, column: 56)
!16003 = !DILocation(line: 1698, column: 7, scope: !16004)
!16004 = distinct !DILexicalBlock(scope: !16002, file: !2464, line: 1698, column: 7)
!16005 = !DILocation(line: 1698, column: 7, scope: !16002)
!16006 = !DILocation(line: 0, scope: !14042, inlinedAt: !16007)
!16007 = distinct !DILocation(line: 1699, column: 4, scope: !16008)
!16008 = distinct !DILexicalBlock(scope: !16004, file: !2464, line: 1698, column: 35)
!16009 = !DILocation(line: 266, column: 28, scope: !14042, inlinedAt: !16007)
!16010 = !DILocation(line: 0, scope: !14050, inlinedAt: !16011)
!16011 = distinct !DILocation(line: 268, column: 3, scope: !14054, inlinedAt: !16007)
!16012 = !DILocation(line: 234, column: 2, scope: !14050, inlinedAt: !16011)
!16013 = !DILocation(line: 1700, column: 3, scope: !16008)
!16014 = !DILocation(line: 1701, column: 20, scope: !16015)
!16015 = distinct !DILexicalBlock(scope: !16002, file: !2464, line: 1701, column: 7)
!16016 = !DILocation(line: 1701, column: 30, scope: !16015)
!16017 = !DILocation(line: 1701, column: 7, scope: !16002)
!16018 = !DILocation(line: 1702, column: 4, scope: !16019)
!16019 = distinct !DILexicalBlock(scope: !16015, file: !2464, line: 1701, column: 39)
!16020 = !DILocation(line: 1703, column: 3, scope: !16019)
!16021 = !DILocation(line: 1704, column: 9, scope: !16002)
!16022 = !DILocation(line: 1705, column: 23, scope: !16002)
!16023 = !DILocation(line: 1705, column: 3, scope: !16002)
!16024 = !DILocation(line: 1706, column: 3, scope: !16002)
!16025 = !DILocation(line: 1722, column: 2, scope: !16002)
!16026 = !DILocation(line: 1723, column: 1, scope: !15992)
!16027 = distinct !DISubprogram(name: "unpend_all", scope: !2464, file: !2464, line: 1674, type: !16028, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16030)
!16028 = !DISubroutineType(types: !16029)
!16029 = !{null, !2387}
!16030 = !{!16031, !16032}
!16031 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16027, file: !2464, line: 1674, type: !2387)
!16032 = !DILocalVariable(name: "thread", scope: !16027, file: !2464, line: 1676, type: !2356)
!16033 = !DILocation(line: 0, scope: !16027)
!16034 = !DILocation(line: 1678, column: 19, scope: !16027)
!16035 = !DILocation(line: 1678, column: 41, scope: !16027)
!16036 = !DILocation(line: 1678, column: 2, scope: !16027)
!16037 = !DILocation(line: 1679, column: 3, scope: !16038)
!16038 = distinct !DILexicalBlock(scope: !16027, file: !2464, line: 1678, column: 50)
!16039 = !DILocation(line: 1680, column: 9, scope: !16038)
!16040 = !DILocalVariable(name: "thread", arg: 1, scope: !16041, file: !13032, line: 65, type: !2356)
!16041 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13032, file: !13032, line: 65, type: !16042, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16044)
!16042 = !DISubroutineType(types: !16043)
!16043 = !{null, !2356, !32}
!16044 = !{!16040, !16045}
!16045 = !DILocalVariable(name: "value", arg: 2, scope: !16041, file: !13032, line: 65, type: !32)
!16046 = !DILocation(line: 0, scope: !16041, inlinedAt: !16047)
!16047 = distinct !DILocation(line: 1681, column: 3, scope: !16038)
!16048 = !DILocation(line: 67, column: 15, scope: !16041, inlinedAt: !16047)
!16049 = !DILocation(line: 67, column: 33, scope: !16041, inlinedAt: !16047)
!16050 = !DILocation(line: 1682, column: 3, scope: !16038)
!16051 = distinct !{!16051, !16036, !16052}
!16052 = !DILocation(line: 1683, column: 2, scope: !16027)
!16053 = !DILocation(line: 1684, column: 1, scope: !16027)
!16054 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2464, file: !2464, line: 1794, type: !16055, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16057)
!16055 = !DISubroutineType(types: !16056)
!16056 = !{!119, !2356, !14738}
!16057 = !{!16058, !16059, !16060, !16061}
!16058 = !DILocalVariable(name: "thread", arg: 1, scope: !16054, file: !2464, line: 1794, type: !2356)
!16059 = !DILocalVariable(name: "timeout", arg: 2, scope: !16054, file: !2464, line: 1794, type: !14738)
!16060 = !DILocalVariable(name: "key", scope: !16054, file: !2464, line: 1796, type: !13842)
!16061 = !DILocalVariable(name: "ret", scope: !16054, file: !2464, line: 1797, type: !119)
!16062 = !DILocation(line: 0, scope: !16054)
!16063 = !DILocation(line: 0, scope: !13850, inlinedAt: !16064)
!16064 = distinct !DILocation(line: 1796, column: 25, scope: !16054)
!16065 = !DILocation(line: 55, column: 2, scope: !13859, inlinedAt: !16066)
!16066 = distinct !DILocation(line: 145, column: 10, scope: !13850, inlinedAt: !16064)
!16067 = !DILocation(line: 0, scope: !13859, inlinedAt: !16066)
!16068 = !DILocation(line: 148, column: 2, scope: !13867, inlinedAt: !16064)
!16069 = !DILocation(line: 148, column: 2, scope: !13868, inlinedAt: !16064)
!16070 = !DILocation(line: 148, column: 2, scope: !13871, inlinedAt: !16064)
!16071 = !DILocation(line: 160, column: 2, scope: !13850, inlinedAt: !16064)
!16072 = !DILocation(line: 1801, column: 20, scope: !16073)
!16073 = distinct !DILexicalBlock(scope: !16054, file: !2464, line: 1801, column: 6)
!16074 = !DILocation(line: 1801, column: 33, scope: !16073)
!16075 = !DILocation(line: 1801, column: 49, scope: !16073)
!16076 = !DILocation(line: 1801, column: 6, scope: !16054)
!16077 = !DILocation(line: 1803, column: 13, scope: !16078)
!16078 = distinct !DILexicalBlock(scope: !16073, file: !2464, line: 1803, column: 13)
!16079 = !DILocation(line: 1803, column: 13, scope: !16073)
!16080 = !DILocation(line: 1805, column: 24, scope: !16081)
!16081 = distinct !DILexicalBlock(scope: !16078, file: !2464, line: 1805, column: 13)
!16082 = !DILocation(line: 1805, column: 21, scope: !16081)
!16083 = !DILocation(line: 1805, column: 34, scope: !16081)
!16084 = !DILocation(line: 1806, column: 20, scope: !16081)
!16085 = !DILocation(line: 1806, column: 44, scope: !16081)
!16086 = !DILocation(line: 1806, column: 30, scope: !16081)
!16087 = !DILocation(line: 1805, column: 13, scope: !16078)
!16088 = !DILocation(line: 1031, column: 3, scope: !14577, inlinedAt: !16089)
!16089 = distinct !DILocation(line: 48, column: 10, scope: !14581, inlinedAt: !16090)
!16090 = distinct !DILocation(line: 1809, column: 3, scope: !16091)
!16091 = distinct !DILexicalBlock(scope: !16092, file: !2464, line: 1809, column: 3)
!16092 = distinct !DILexicalBlock(scope: !16093, file: !2464, line: 1809, column: 3)
!16093 = distinct !DILexicalBlock(scope: !16081, file: !2464, line: 1808, column: 9)
!16094 = !DILocation(line: 0, scope: !14577, inlinedAt: !16089)
!16095 = !DILocation(line: 48, column: 9, scope: !14581, inlinedAt: !16090)
!16096 = !DILocation(line: 1809, column: 3, scope: !16092)
!16097 = !DILocation(line: 1809, column: 3, scope: !16098)
!16098 = distinct !DILexicalBlock(scope: !16091, file: !2464, line: 1809, column: 3)
!16099 = !DILocation(line: 1810, column: 23, scope: !16093)
!16100 = !DILocation(line: 1810, column: 42, scope: !16093)
!16101 = !DILocation(line: 1810, column: 3, scope: !16093)
!16102 = !DILocation(line: 1811, column: 22, scope: !16093)
!16103 = !DILocation(line: 1811, column: 3, scope: !16093)
!16104 = !DILocation(line: 0, scope: !14528, inlinedAt: !16105)
!16105 = distinct !DILocation(line: 1814, column: 9, scope: !16093)
!16106 = !DILocation(line: 0, scope: !14537, inlinedAt: !16107)
!16107 = distinct !DILocation(line: 195, column: 2, scope: !14528, inlinedAt: !16105)
!16108 = !DILocation(line: 225, column: 2, scope: !14544, inlinedAt: !16107)
!16109 = !DILocation(line: 225, column: 2, scope: !14545, inlinedAt: !16107)
!16110 = !DILocation(line: 225, column: 2, scope: !14548, inlinedAt: !16107)
!16111 = !DILocation(line: 196, column: 9, scope: !14528, inlinedAt: !16105)
!16112 = !DILocation(line: 1817, column: 3, scope: !16093)
!16113 = !DILocation(line: 0, scope: !16073)
!16114 = !DILocation(line: 0, scope: !13884, inlinedAt: !16115)
!16115 = distinct !DILocation(line: 1822, column: 2, scope: !16054)
!16116 = !DILocation(line: 194, column: 2, scope: !13892, inlinedAt: !16115)
!16117 = !DILocation(line: 194, column: 2, scope: !13893, inlinedAt: !16115)
!16118 = !DILocation(line: 194, column: 2, scope: !13896, inlinedAt: !16115)
!16119 = !DILocation(line: 0, scope: !13898, inlinedAt: !16120)
!16120 = distinct !DILocation(line: 215, column: 2, scope: !13884, inlinedAt: !16115)
!16121 = !DILocation(line: 95, column: 2, scope: !13898, inlinedAt: !16120)
!16122 = !DILocation(line: 1823, column: 2, scope: !16054)
!16123 = !DILocation(line: 1824, column: 1, scope: !16054)
!16124 = distinct !DISubprogram(name: "z_sched_wake", scope: !2464, file: !2464, line: 1882, type: !16125, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16127)
!16125 = !DISubroutineType(types: !16126)
!16126 = !{!345, !2387, !119, !113}
!16127 = !{!16128, !16129, !16130, !16131, !16132, !16133, !16135}
!16128 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16124, file: !2464, line: 1882, type: !2387)
!16129 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !16124, file: !2464, line: 1882, type: !119)
!16130 = !DILocalVariable(name: "swap_data", arg: 3, scope: !16124, file: !2464, line: 1882, type: !113)
!16131 = !DILocalVariable(name: "thread", scope: !16124, file: !2464, line: 1884, type: !2356)
!16132 = !DILocalVariable(name: "ret", scope: !16124, file: !2464, line: 1885, type: !345)
!16133 = !DILocalVariable(name: "__i", scope: !16134, file: !2464, line: 1887, type: !13842)
!16134 = distinct !DILexicalBlock(scope: !16124, file: !2464, line: 1887, column: 2)
!16135 = !DILocalVariable(name: "__key", scope: !16134, file: !2464, line: 1887, type: !13842)
!16136 = !DILocation(line: 0, scope: !16124)
!16137 = !DILocation(line: 0, scope: !16134)
!16138 = !DILocation(line: 0, scope: !13850, inlinedAt: !16139)
!16139 = distinct !DILocation(line: 1887, column: 2, scope: !16134)
!16140 = !DILocation(line: 55, column: 2, scope: !13859, inlinedAt: !16141)
!16141 = distinct !DILocation(line: 145, column: 10, scope: !13850, inlinedAt: !16139)
!16142 = !DILocation(line: 0, scope: !13859, inlinedAt: !16141)
!16143 = !DILocation(line: 148, column: 2, scope: !13867, inlinedAt: !16139)
!16144 = !DILocation(line: 148, column: 2, scope: !13868, inlinedAt: !16139)
!16145 = !DILocation(line: 148, column: 2, scope: !13871, inlinedAt: !16139)
!16146 = !DILocation(line: 160, column: 2, scope: !13850, inlinedAt: !16139)
!16147 = !DILocation(line: 1888, column: 12, scope: !16148)
!16148 = distinct !DILexicalBlock(scope: !16149, file: !2464, line: 1887, column: 26)
!16149 = distinct !DILexicalBlock(scope: !16134, file: !2464, line: 1887, column: 2)
!16150 = !DILocation(line: 1890, column: 14, scope: !16151)
!16151 = distinct !DILexicalBlock(scope: !16148, file: !2464, line: 1890, column: 7)
!16152 = !DILocation(line: 1890, column: 7, scope: !16148)
!16153 = !DILocalVariable(name: "thread", arg: 1, scope: !16154, file: !16155, line: 134, type: !2356)
!16154 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !16155, file: !16155, line: 134, type: !16156, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16158)
!16155 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16156 = !DISubroutineType(types: !16157)
!16157 = !{null, !2356, !32, !113}
!16158 = !{!16153, !16159, !16160}
!16159 = !DILocalVariable(name: "value", arg: 2, scope: !16154, file: !16155, line: 135, type: !32)
!16160 = !DILocalVariable(name: "data", arg: 3, scope: !16154, file: !16155, line: 136, type: !113)
!16161 = !DILocation(line: 0, scope: !16154, inlinedAt: !16162)
!16162 = distinct !DILocation(line: 1891, column: 4, scope: !16163)
!16163 = distinct !DILexicalBlock(scope: !16151, file: !2464, line: 1890, column: 23)
!16164 = !DILocation(line: 0, scope: !16041, inlinedAt: !16165)
!16165 = distinct !DILocation(line: 138, column: 2, scope: !16154, inlinedAt: !16162)
!16166 = !DILocation(line: 67, column: 15, scope: !16041, inlinedAt: !16165)
!16167 = !DILocation(line: 67, column: 33, scope: !16041, inlinedAt: !16165)
!16168 = !DILocation(line: 139, column: 15, scope: !16154, inlinedAt: !16162)
!16169 = !DILocation(line: 139, column: 25, scope: !16154, inlinedAt: !16162)
!16170 = !DILocation(line: 1894, column: 4, scope: !16163)
!16171 = !DILocation(line: 1895, column: 10, scope: !16163)
!16172 = !DILocation(line: 1896, column: 4, scope: !16163)
!16173 = !DILocation(line: 1898, column: 3, scope: !16163)
!16174 = !DILocation(line: 0, scope: !13884, inlinedAt: !16175)
!16175 = distinct !DILocation(line: 1887, column: 2, scope: !16149)
!16176 = !DILocation(line: 194, column: 2, scope: !13892, inlinedAt: !16175)
!16177 = !DILocation(line: 194, column: 2, scope: !13893, inlinedAt: !16175)
!16178 = !DILocation(line: 194, column: 2, scope: !13896, inlinedAt: !16175)
!16179 = !DILocation(line: 0, scope: !13898, inlinedAt: !16180)
!16180 = distinct !DILocation(line: 215, column: 2, scope: !13884, inlinedAt: !16175)
!16181 = !DILocation(line: 95, column: 2, scope: !13898, inlinedAt: !16180)
!16182 = !DILocation(line: 1901, column: 2, scope: !16124)
!16183 = distinct !DISubprogram(name: "z_sched_wait", scope: !2464, file: !2464, line: 1904, type: !16184, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2353, retainedNodes: !16187)
!16184 = !DISubroutineType(types: !16185)
!16185 = !{!119, !13853, !13842, !2387, !14738, !16186}
!16186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !113, size: 32)
!16187 = !{!16188, !16189, !16190, !16191, !16192, !16193}
!16188 = !DILocalVariable(name: "lock", arg: 1, scope: !16183, file: !2464, line: 1904, type: !13853)
!16189 = !DILocalVariable(name: "key", arg: 2, scope: !16183, file: !2464, line: 1904, type: !13842)
!16190 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16183, file: !2464, line: 1905, type: !2387)
!16191 = !DILocalVariable(name: "timeout", arg: 4, scope: !16183, file: !2464, line: 1905, type: !14738)
!16192 = !DILocalVariable(name: "data", arg: 5, scope: !16183, file: !2464, line: 1905, type: !16186)
!16193 = !DILocalVariable(name: "ret", scope: !16183, file: !2464, line: 1907, type: !119)
!16194 = !DILocation(line: 0, scope: !16183)
!16195 = !DILocation(line: 1907, column: 12, scope: !16183)
!16196 = !DILocation(line: 1909, column: 11, scope: !16197)
!16197 = distinct !DILexicalBlock(scope: !16183, file: !2464, line: 1909, column: 6)
!16198 = !DILocation(line: 1909, column: 6, scope: !16183)
!16199 = !DILocation(line: 1910, column: 11, scope: !16200)
!16200 = distinct !DILexicalBlock(scope: !16197, file: !2464, line: 1909, column: 20)
!16201 = !DILocation(line: 1910, column: 26, scope: !16200)
!16202 = !DILocation(line: 1910, column: 9, scope: !16200)
!16203 = !DILocation(line: 1911, column: 2, scope: !16200)
!16204 = !DILocation(line: 1912, column: 2, scope: !16183)
!16205 = distinct !DISubprogram(name: "z_data_copy", scope: !16206, file: !16206, line: 22, type: !3098, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3081, retainedNodes: !2162)
!16206 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16207 = !DILocation(line: 24, column: 2, scope: !16205)
!16208 = !DILocation(line: 27, column: 2, scope: !16205)
!16209 = !DILocation(line: 31, column: 2, scope: !16205)
!16210 = !DILocation(line: 71, column: 1, scope: !16205)
!16211 = distinct !DISubprogram(name: "z_add_timeout", scope: !2501, file: !2501, line: 88, type: !16212, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !16218)
!16212 = !DISubroutineType(types: !16213)
!16213 = !{null, !2474, !2493, !16214}
!16214 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !115, line: 67, baseType: !16215)
!16215 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !115, line: 65, size: 64, elements: !16216)
!16216 = !{!16217}
!16217 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16215, file: !115, line: 66, baseType: !114, size: 64)
!16218 = !{!16219, !16220, !16221, !16222, !16228, !16229, !16232, !16235}
!16219 = !DILocalVariable(name: "to", arg: 1, scope: !16211, file: !2501, line: 88, type: !2474)
!16220 = !DILocalVariable(name: "fn", arg: 2, scope: !16211, file: !2501, line: 88, type: !2493)
!16221 = !DILocalVariable(name: "timeout", arg: 3, scope: !16211, file: !2501, line: 89, type: !16214)
!16222 = !DILocalVariable(name: "__i", scope: !16223, file: !2501, line: 102, type: !16224)
!16223 = distinct !DILexicalBlock(scope: !16211, file: !2501, line: 102, column: 2)
!16224 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !259, line: 106, baseType: !16225)
!16225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !259, line: 32, size: 32, elements: !16226)
!16226 = !{!16227}
!16227 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16225, file: !259, line: 33, baseType: !119, size: 32)
!16228 = !DILocalVariable(name: "__key", scope: !16223, file: !2501, line: 102, type: !16224)
!16229 = !DILocalVariable(name: "t", scope: !16230, file: !2501, line: 103, type: !2474)
!16230 = distinct !DILexicalBlock(scope: !16231, file: !2501, line: 102, column: 24)
!16231 = distinct !DILexicalBlock(scope: !16223, file: !2501, line: 102, column: 2)
!16232 = !DILocalVariable(name: "ticks", scope: !16233, file: !2501, line: 107, type: !114)
!16233 = distinct !DILexicalBlock(scope: !16234, file: !2501, line: 106, column: 39)
!16234 = distinct !DILexicalBlock(scope: !16230, file: !2501, line: 105, column: 7)
!16235 = !DILocalVariable(name: "next_time", scope: !16236, file: !2501, line: 137, type: !774)
!16236 = distinct !DILexicalBlock(scope: !16237, file: !2501, line: 127, column: 22)
!16237 = distinct !DILexicalBlock(scope: !16230, file: !2501, line: 127, column: 7)
!16238 = !DILocation(line: 0, scope: !16211)
!16239 = !DILocation(line: 91, column: 6, scope: !16240)
!16240 = distinct !DILexicalBlock(scope: !16211, file: !2501, line: 91, column: 6)
!16241 = !DILocation(line: 91, column: 6, scope: !16211)
!16242 = !DILocation(line: 99, column: 2, scope: !16243)
!16243 = distinct !DILexicalBlock(scope: !16244, file: !2501, line: 99, column: 2)
!16244 = distinct !DILexicalBlock(scope: !16211, file: !2501, line: 99, column: 2)
!16245 = !DILocation(line: 99, column: 2, scope: !16244)
!16246 = !DILocation(line: 99, column: 2, scope: !16247)
!16247 = distinct !DILexicalBlock(scope: !16243, file: !2501, line: 99, column: 2)
!16248 = !DILocation(line: 100, column: 6, scope: !16211)
!16249 = !DILocation(line: 100, column: 9, scope: !16211)
!16250 = !DILocation(line: 0, scope: !16223)
!16251 = !DILocalVariable(name: "l", arg: 1, scope: !16252, file: !259, line: 136, type: !16255)
!16252 = distinct !DISubprogram(name: "k_spin_lock", scope: !259, file: !259, line: 136, type: !16253, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !16256)
!16253 = !DISubroutineType(types: !16254)
!16254 = !{!16224, !16255}
!16255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2507, size: 32)
!16256 = !{!16251, !16257}
!16257 = !DILocalVariable(name: "k", scope: !16252, file: !259, line: 139, type: !16224)
!16258 = !DILocation(line: 0, scope: !16252, inlinedAt: !16259)
!16259 = distinct !DILocation(line: 102, column: 2, scope: !16223)
!16260 = !DILocation(line: 55, column: 2, scope: !16261, inlinedAt: !16265)
!16261 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6131, file: !6131, line: 42, type: !6132, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !16262)
!16262 = !{!16263, !16264}
!16263 = !DILocalVariable(name: "key", scope: !16261, file: !6131, line: 44, type: !32)
!16264 = !DILocalVariable(name: "tmp", scope: !16261, file: !6131, line: 53, type: !32)
!16265 = distinct !DILocation(line: 145, column: 10, scope: !16252, inlinedAt: !16259)
!16266 = !{i64 2602674}
!16267 = !DILocation(line: 0, scope: !16261, inlinedAt: !16265)
!16268 = !DILocation(line: 148, column: 2, scope: !16269, inlinedAt: !16259)
!16269 = distinct !DILexicalBlock(scope: !16270, file: !259, line: 148, column: 2)
!16270 = distinct !DILexicalBlock(scope: !16252, file: !259, line: 148, column: 2)
!16271 = !DILocation(line: 148, column: 2, scope: !16270, inlinedAt: !16259)
!16272 = !DILocation(line: 148, column: 2, scope: !16273, inlinedAt: !16259)
!16273 = distinct !DILexicalBlock(scope: !16269, file: !259, line: 148, column: 2)
!16274 = !DILocation(line: 160, column: 2, scope: !16252, inlinedAt: !16259)
!16275 = !DILocation(line: 106, column: 33, scope: !16234)
!16276 = !DILocation(line: 105, column: 7, scope: !16230)
!16277 = !DILocation(line: 107, column: 50, scope: !16233)
!16278 = !DILocation(line: 107, column: 48, scope: !16233)
!16279 = !DILocation(line: 0, scope: !16233)
!16280 = !DILocation(line: 109, column: 17, scope: !16233)
!16281 = !DILocation(line: 110, column: 3, scope: !16233)
!16282 = !DILocation(line: 111, column: 31, scope: !16283)
!16283 = distinct !DILexicalBlock(scope: !16234, file: !2501, line: 110, column: 10)
!16284 = !DILocation(line: 111, column: 37, scope: !16283)
!16285 = !DILocation(line: 111, column: 35, scope: !16283)
!16286 = !DILocation(line: 0, scope: !16234)
!16287 = !DILocation(line: 109, column: 8, scope: !16233)
!16288 = !DILocation(line: 109, column: 15, scope: !16233)
!16289 = !DILocation(line: 114, column: 12, scope: !16290)
!16290 = distinct !DILexicalBlock(scope: !16230, file: !2501, line: 114, column: 3)
!16291 = !DILocation(line: 0, scope: !16230)
!16292 = !DILocation(line: 114, column: 3, scope: !16290)
!16293 = !DILocation(line: 115, column: 24, scope: !16294)
!16294 = distinct !DILexicalBlock(scope: !16295, file: !2501, line: 115, column: 8)
!16295 = distinct !DILexicalBlock(scope: !16296, file: !2501, line: 114, column: 45)
!16296 = distinct !DILexicalBlock(scope: !16290, file: !2501, line: 114, column: 3)
!16297 = !DILocation(line: 115, column: 11, scope: !16294)
!16298 = !DILocation(line: 115, column: 18, scope: !16294)
!16299 = !DILocation(line: 115, column: 8, scope: !16295)
!16300 = !DILocation(line: 116, column: 15, scope: !16301)
!16301 = distinct !DILexicalBlock(scope: !16294, file: !2501, line: 115, column: 32)
!16302 = !DILocation(line: 117, column: 26, scope: !16301)
!16303 = !DILocation(line: 117, column: 5, scope: !16301)
!16304 = !DILocation(line: 123, column: 7, scope: !16230)
!16305 = !DILocation(line: 120, column: 15, scope: !16295)
!16306 = !DILocation(line: 114, column: 36, scope: !16296)
!16307 = distinct !{!16307, !16292, !16308}
!16308 = !DILocation(line: 121, column: 3, scope: !16290)
!16309 = !DILocation(line: 124, column: 4, scope: !16310)
!16310 = distinct !DILexicalBlock(scope: !16311, file: !2501, line: 123, column: 18)
!16311 = distinct !DILexicalBlock(scope: !16230, file: !2501, line: 123, column: 7)
!16312 = !DILocation(line: 125, column: 3, scope: !16310)
!16313 = !DILocation(line: 127, column: 13, scope: !16237)
!16314 = !DILocation(line: 127, column: 10, scope: !16237)
!16315 = !DILocation(line: 127, column: 7, scope: !16230)
!16316 = !DILocation(line: 137, column: 24, scope: !16236)
!16317 = !DILocation(line: 0, scope: !16236)
!16318 = !DILocation(line: 139, column: 18, scope: !16319)
!16319 = distinct !DILexicalBlock(scope: !16236, file: !2501, line: 139, column: 8)
!16320 = !DILocation(line: 139, column: 23, scope: !16319)
!16321 = !DILocation(line: 141, column: 5, scope: !16322)
!16322 = distinct !DILexicalBlock(scope: !16319, file: !2501, line: 140, column: 48)
!16323 = !DILocation(line: 142, column: 4, scope: !16322)
!16324 = !DILocalVariable(name: "key", arg: 2, scope: !16325, file: !259, line: 190, type: !16224)
!16325 = distinct !DISubprogram(name: "k_spin_unlock", scope: !259, file: !259, line: 189, type: !16326, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !16328)
!16326 = !DISubroutineType(types: !16327)
!16327 = !{null, !16255, !16224}
!16328 = !{!16329, !16324}
!16329 = !DILocalVariable(name: "l", arg: 1, scope: !16325, file: !259, line: 189, type: !16255)
!16330 = !DILocation(line: 0, scope: !16325, inlinedAt: !16331)
!16331 = distinct !DILocation(line: 102, column: 2, scope: !16231)
!16332 = !DILocation(line: 194, column: 2, scope: !16333, inlinedAt: !16331)
!16333 = distinct !DILexicalBlock(scope: !16334, file: !259, line: 194, column: 2)
!16334 = distinct !DILexicalBlock(scope: !16325, file: !259, line: 194, column: 2)
!16335 = !DILocation(line: 194, column: 2, scope: !16334, inlinedAt: !16331)
!16336 = !DILocation(line: 194, column: 2, scope: !16337, inlinedAt: !16331)
!16337 = distinct !DILexicalBlock(scope: !16333, file: !259, line: 194, column: 2)
!16338 = !DILocalVariable(name: "key", arg: 1, scope: !16339, file: !6131, line: 84, type: !32)
!16339 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6131, file: !6131, line: 84, type: !6142, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !16340)
!16340 = !{!16338}
!16341 = !DILocation(line: 0, scope: !16339, inlinedAt: !16342)
!16342 = distinct !DILocation(line: 215, column: 2, scope: !16325, inlinedAt: !16331)
!16343 = !DILocation(line: 95, column: 2, scope: !16339, inlinedAt: !16342)
!16344 = !{i64 2603491}
!16345 = !DILocation(line: 148, column: 1, scope: !16211)
!16346 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !153, file: !153, line: 225, type: !16347, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !16351)
!16347 = !DISubroutineType(types: !16348)
!16348 = !{!345, !16349}
!16349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16350, size: 32)
!16350 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2478)
!16351 = !{!16352}
!16352 = !DILocalVariable(name: "node", arg: 1, scope: !16346, file: !153, line: 225, type: !16349)
!16353 = !DILocation(line: 0, scope: !16346)
!16354 = !DILocation(line: 227, column: 15, scope: !16346)
!16355 = !DILocation(line: 227, column: 20, scope: !16346)
!16356 = !DILocation(line: 227, column: 2, scope: !16346)
!16357 = distinct !DISubprogram(name: "elapsed", scope: !2501, file: !2501, line: 62, type: !16358, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !2162)
!16358 = !DISubroutineType(types: !16359)
!16359 = !{!774}
!16360 = !DILocation(line: 64, column: 9, scope: !16357)
!16361 = !DILocation(line: 64, column: 28, scope: !16357)
!16362 = !DILocation(line: 64, column: 35, scope: !16357)
!16363 = !DILocation(line: 64, column: 2, scope: !16357)
!16364 = distinct !DISubprogram(name: "first", scope: !2501, file: !2501, line: 39, type: !16365, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !16367)
!16365 = !DISubroutineType(types: !16366)
!16366 = !{!2474}
!16367 = !{!16368}
!16368 = !DILocalVariable(name: "t", scope: !16364, file: !2501, line: 41, type: !16369)
!16369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2478, size: 32)
!16370 = !DILocation(line: 41, column: 19, scope: !16364)
!16371 = !DILocation(line: 0, scope: !16364)
!16372 = !DILocation(line: 43, column: 9, scope: !16364)
!16373 = !DILocation(line: 43, column: 2, scope: !16364)
!16374 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !153, file: !153, line: 443, type: !16375, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !16377)
!16375 = !DISubroutineType(types: !16376)
!16376 = !{null, !16369, !16369}
!16377 = !{!16378, !16379, !16380}
!16378 = !DILocalVariable(name: "successor", arg: 1, scope: !16374, file: !153, line: 443, type: !16369)
!16379 = !DILocalVariable(name: "node", arg: 2, scope: !16374, file: !153, line: 443, type: !16369)
!16380 = !DILocalVariable(name: "prev", scope: !16374, file: !153, line: 445, type: !16381)
!16381 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16369)
!16382 = !DILocation(line: 0, scope: !16374)
!16383 = !DILocation(line: 445, column: 39, scope: !16374)
!16384 = !DILocation(line: 447, column: 8, scope: !16374)
!16385 = !DILocation(line: 447, column: 13, scope: !16374)
!16386 = !DILocation(line: 448, column: 8, scope: !16374)
!16387 = !DILocation(line: 448, column: 13, scope: !16374)
!16388 = !DILocation(line: 449, column: 8, scope: !16374)
!16389 = !DILocation(line: 449, column: 13, scope: !16374)
!16390 = !DILocation(line: 450, column: 18, scope: !16374)
!16391 = !DILocation(line: 451, column: 1, scope: !16374)
!16392 = distinct !DISubprogram(name: "next", scope: !2501, file: !2501, line: 46, type: !16393, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !16395)
!16393 = !DISubroutineType(types: !16394)
!16394 = !{!2474, !2474}
!16395 = !{!16396, !16397}
!16396 = !DILocalVariable(name: "t", arg: 1, scope: !16392, file: !2501, line: 46, type: !2474)
!16397 = !DILocalVariable(name: "n", scope: !16392, file: !2501, line: 48, type: !16369)
!16398 = !DILocation(line: 0, scope: !16392)
!16399 = !DILocation(line: 48, column: 58, scope: !16392)
!16400 = !DILocation(line: 48, column: 19, scope: !16392)
!16401 = !DILocation(line: 50, column: 9, scope: !16392)
!16402 = !DILocation(line: 50, column: 2, scope: !16392)
!16403 = distinct !DISubprogram(name: "sys_dlist_append", scope: !153, file: !153, line: 404, type: !16404, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !16407)
!16404 = !DISubroutineType(types: !16405)
!16405 = !{null, !16406, !16369}
!16406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2506, size: 32)
!16407 = !{!16408, !16409, !16410}
!16408 = !DILocalVariable(name: "list", arg: 1, scope: !16403, file: !153, line: 404, type: !16406)
!16409 = !DILocalVariable(name: "node", arg: 2, scope: !16403, file: !153, line: 404, type: !16369)
!16410 = !DILocalVariable(name: "tail", scope: !16403, file: !153, line: 406, type: !16381)
!16411 = !DILocation(line: 0, scope: !16403)
!16412 = !DILocation(line: 406, column: 34, scope: !16403)
!16413 = !DILocation(line: 408, column: 8, scope: !16403)
!16414 = !DILocation(line: 408, column: 13, scope: !16403)
!16415 = !DILocation(line: 409, column: 8, scope: !16403)
!16416 = !DILocation(line: 409, column: 13, scope: !16403)
!16417 = !DILocation(line: 411, column: 8, scope: !16403)
!16418 = !DILocation(line: 411, column: 13, scope: !16403)
!16419 = !DILocation(line: 412, column: 13, scope: !16403)
!16420 = !DILocation(line: 413, column: 1, scope: !16403)
!16421 = distinct !DISubprogram(name: "next_timeout", scope: !2501, file: !2501, line: 67, type: !16358, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !16422)
!16422 = !{!16423, !16424, !16425}
!16423 = !DILocalVariable(name: "to", scope: !16421, file: !2501, line: 69, type: !2474)
!16424 = !DILocalVariable(name: "ticks_elapsed", scope: !16421, file: !2501, line: 70, type: !774)
!16425 = !DILocalVariable(name: "ret", scope: !16421, file: !2501, line: 71, type: !774)
!16426 = !DILocation(line: 69, column: 24, scope: !16421)
!16427 = !DILocation(line: 0, scope: !16421)
!16428 = !DILocation(line: 70, column: 26, scope: !16421)
!16429 = !DILocation(line: 73, column: 10, scope: !16430)
!16430 = distinct !DILexicalBlock(scope: !16421, file: !2501, line: 73, column: 6)
!16431 = !DILocation(line: 73, column: 19, scope: !16430)
!16432 = !DILocation(line: 74, column: 21, scope: !16430)
!16433 = !DILocation(line: 74, column: 30, scope: !16430)
!16434 = !DILocation(line: 74, column: 28, scope: !16430)
!16435 = !DILocation(line: 74, column: 45, scope: !16430)
!16436 = !DILocation(line: 73, column: 6, scope: !16421)
!16437 = !DILocation(line: 77, column: 9, scope: !16438)
!16438 = distinct !DILexicalBlock(scope: !16430, file: !2501, line: 76, column: 9)
!16439 = !DILocation(line: 0, scope: !16430)
!16440 = !DILocation(line: 81, column: 20, scope: !16441)
!16441 = distinct !DILexicalBlock(scope: !16421, file: !2501, line: 81, column: 6)
!16442 = !DILocation(line: 81, column: 6, scope: !16441)
!16443 = !DILocation(line: 81, column: 32, scope: !16441)
!16444 = !DILocation(line: 85, column: 2, scope: !16421)
!16445 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !153, file: !153, line: 341, type: !16446, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !16448)
!16446 = !DISubroutineType(types: !16447)
!16447 = !{!16369, !16406, !16369}
!16448 = !{!16449, !16450}
!16449 = !DILocalVariable(name: "list", arg: 1, scope: !16445, file: !153, line: 341, type: !16406)
!16450 = !DILocalVariable(name: "node", arg: 2, scope: !16445, file: !153, line: 342, type: !16369)
!16451 = !DILocation(line: 0, scope: !16445)
!16452 = !DILocation(line: 344, column: 15, scope: !16445)
!16453 = !DILocation(line: 344, column: 9, scope: !16445)
!16454 = !DILocation(line: 344, column: 26, scope: !16445)
!16455 = !DILocation(line: 344, column: 2, scope: !16445)
!16456 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !153, file: !153, line: 325, type: !16446, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !16457)
!16457 = !{!16458, !16459}
!16458 = !DILocalVariable(name: "list", arg: 1, scope: !16456, file: !153, line: 325, type: !16406)
!16459 = !DILocalVariable(name: "node", arg: 2, scope: !16456, file: !153, line: 326, type: !16369)
!16460 = !DILocation(line: 0, scope: !16456)
!16461 = !DILocation(line: 328, column: 24, scope: !16456)
!16462 = !DILocation(line: 328, column: 15, scope: !16456)
!16463 = !DILocation(line: 328, column: 9, scope: !16456)
!16464 = !DILocation(line: 328, column: 45, scope: !16456)
!16465 = !DILocation(line: 328, column: 2, scope: !16456)
!16466 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !153, file: !153, line: 294, type: !16467, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !16469)
!16467 = !DISubroutineType(types: !16468)
!16468 = !{!16369, !16406}
!16469 = !{!16470}
!16470 = !DILocalVariable(name: "list", arg: 1, scope: !16466, file: !153, line: 294, type: !16406)
!16471 = !DILocation(line: 0, scope: !16466)
!16472 = !DILocation(line: 296, column: 9, scope: !16466)
!16473 = !DILocation(line: 296, column: 2, scope: !16466)
!16474 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !153, file: !153, line: 266, type: !16475, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !16477)
!16475 = !DISubroutineType(types: !16476)
!16476 = !{!345, !16406}
!16477 = !{!16478}
!16478 = !DILocalVariable(name: "list", arg: 1, scope: !16474, file: !153, line: 266, type: !16406)
!16479 = !DILocation(line: 0, scope: !16474)
!16480 = !DILocation(line: 268, column: 15, scope: !16474)
!16481 = !DILocation(line: 268, column: 20, scope: !16474)
!16482 = !DILocation(line: 268, column: 2, scope: !16474)
!16483 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2501, file: !2501, line: 150, type: !16484, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !16486)
!16484 = !DISubroutineType(types: !16485)
!16485 = !{!119, !2474}
!16486 = !{!16487, !16488, !16489, !16491}
!16487 = !DILocalVariable(name: "to", arg: 1, scope: !16483, file: !2501, line: 150, type: !2474)
!16488 = !DILocalVariable(name: "ret", scope: !16483, file: !2501, line: 152, type: !119)
!16489 = !DILocalVariable(name: "__i", scope: !16490, file: !2501, line: 154, type: !16224)
!16490 = distinct !DILexicalBlock(scope: !16483, file: !2501, line: 154, column: 2)
!16491 = !DILocalVariable(name: "__key", scope: !16490, file: !2501, line: 154, type: !16224)
!16492 = !DILocation(line: 0, scope: !16483)
!16493 = !DILocation(line: 0, scope: !16490)
!16494 = !DILocation(line: 0, scope: !16252, inlinedAt: !16495)
!16495 = distinct !DILocation(line: 154, column: 2, scope: !16490)
!16496 = !DILocation(line: 55, column: 2, scope: !16261, inlinedAt: !16497)
!16497 = distinct !DILocation(line: 145, column: 10, scope: !16252, inlinedAt: !16495)
!16498 = !DILocation(line: 0, scope: !16261, inlinedAt: !16497)
!16499 = !DILocation(line: 148, column: 2, scope: !16269, inlinedAt: !16495)
!16500 = !DILocation(line: 148, column: 2, scope: !16270, inlinedAt: !16495)
!16501 = !DILocation(line: 148, column: 2, scope: !16273, inlinedAt: !16495)
!16502 = !DILocation(line: 160, column: 2, scope: !16252, inlinedAt: !16495)
!16503 = !DILocation(line: 155, column: 7, scope: !16504)
!16504 = distinct !DILexicalBlock(scope: !16505, file: !2501, line: 155, column: 7)
!16505 = distinct !DILexicalBlock(scope: !16506, file: !2501, line: 154, column: 24)
!16506 = distinct !DILexicalBlock(scope: !16490, file: !2501, line: 154, column: 2)
!16507 = !DILocation(line: 155, column: 7, scope: !16505)
!16508 = !DILocation(line: 156, column: 4, scope: !16509)
!16509 = distinct !DILexicalBlock(scope: !16504, file: !2501, line: 155, column: 39)
!16510 = !DILocation(line: 158, column: 3, scope: !16509)
!16511 = !DILocation(line: 0, scope: !16325, inlinedAt: !16512)
!16512 = distinct !DILocation(line: 154, column: 2, scope: !16506)
!16513 = !DILocation(line: 194, column: 2, scope: !16333, inlinedAt: !16512)
!16514 = !DILocation(line: 194, column: 2, scope: !16334, inlinedAt: !16512)
!16515 = !DILocation(line: 194, column: 2, scope: !16337, inlinedAt: !16512)
!16516 = !DILocation(line: 0, scope: !16339, inlinedAt: !16517)
!16517 = distinct !DILocation(line: 215, column: 2, scope: !16325, inlinedAt: !16512)
!16518 = !DILocation(line: 95, column: 2, scope: !16339, inlinedAt: !16517)
!16519 = !DILocation(line: 161, column: 2, scope: !16483)
!16520 = distinct !DISubprogram(name: "remove_timeout", scope: !2501, file: !2501, line: 53, type: !2495, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !16521)
!16521 = !{!16522}
!16522 = !DILocalVariable(name: "t", arg: 1, scope: !16520, file: !2501, line: 53, type: !2474)
!16523 = !DILocation(line: 0, scope: !16520)
!16524 = !DILocation(line: 55, column: 6, scope: !16525)
!16525 = distinct !DILexicalBlock(scope: !16520, file: !2501, line: 55, column: 6)
!16526 = !DILocation(line: 55, column: 14, scope: !16525)
!16527 = !DILocation(line: 55, column: 6, scope: !16520)
!16528 = !DILocation(line: 56, column: 25, scope: !16529)
!16529 = distinct !DILexicalBlock(scope: !16525, file: !2501, line: 55, column: 23)
!16530 = !DILocation(line: 56, column: 12, scope: !16529)
!16531 = !DILocation(line: 56, column: 19, scope: !16529)
!16532 = !DILocation(line: 57, column: 2, scope: !16529)
!16533 = !DILocation(line: 59, column: 23, scope: !16520)
!16534 = !DILocation(line: 59, column: 2, scope: !16520)
!16535 = !DILocation(line: 60, column: 1, scope: !16520)
!16536 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !153, file: !153, line: 496, type: !16537, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !16539)
!16537 = !DISubroutineType(types: !16538)
!16538 = !{null, !16369}
!16539 = !{!16540, !16541, !16542}
!16540 = !DILocalVariable(name: "node", arg: 1, scope: !16536, file: !153, line: 496, type: !16369)
!16541 = !DILocalVariable(name: "prev", scope: !16536, file: !153, line: 498, type: !16381)
!16542 = !DILocalVariable(name: "next", scope: !16536, file: !153, line: 499, type: !16381)
!16543 = !DILocation(line: 0, scope: !16536)
!16544 = !DILocation(line: 498, column: 34, scope: !16536)
!16545 = !DILocation(line: 499, column: 34, scope: !16536)
!16546 = !DILocation(line: 501, column: 8, scope: !16536)
!16547 = !DILocation(line: 501, column: 13, scope: !16536)
!16548 = !DILocation(line: 502, column: 8, scope: !16536)
!16549 = !DILocation(line: 502, column: 13, scope: !16536)
!16550 = !DILocation(line: 503, column: 2, scope: !16536)
!16551 = !DILocation(line: 504, column: 1, scope: !16536)
!16552 = distinct !DISubprogram(name: "sys_dnode_init", scope: !153, file: !153, line: 211, type: !16537, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !16553)
!16553 = !{!16554}
!16554 = !DILocalVariable(name: "node", arg: 1, scope: !16552, file: !153, line: 211, type: !16369)
!16555 = !DILocation(line: 0, scope: !16552)
!16556 = !DILocation(line: 213, column: 8, scope: !16552)
!16557 = !DILocation(line: 213, column: 13, scope: !16552)
!16558 = !DILocation(line: 214, column: 8, scope: !16552)
!16559 = !DILocation(line: 214, column: 13, scope: !16552)
!16560 = !DILocation(line: 215, column: 1, scope: !16552)
!16561 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2501, file: !2501, line: 183, type: !16562, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !16566)
!16562 = !DISubroutineType(types: !16563)
!16563 = !{!114, !16564}
!16564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16565, size: 32)
!16565 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2475)
!16566 = !{!16567, !16568, !16569, !16571}
!16567 = !DILocalVariable(name: "timeout", arg: 1, scope: !16561, file: !2501, line: 183, type: !16564)
!16568 = !DILocalVariable(name: "ticks", scope: !16561, file: !2501, line: 185, type: !114)
!16569 = !DILocalVariable(name: "__i", scope: !16570, file: !2501, line: 187, type: !16224)
!16570 = distinct !DILexicalBlock(scope: !16561, file: !2501, line: 187, column: 2)
!16571 = !DILocalVariable(name: "__key", scope: !16570, file: !2501, line: 187, type: !16224)
!16572 = !DILocation(line: 0, scope: !16561)
!16573 = !DILocation(line: 0, scope: !16570)
!16574 = !DILocation(line: 0, scope: !16252, inlinedAt: !16575)
!16575 = distinct !DILocation(line: 187, column: 2, scope: !16570)
!16576 = !DILocation(line: 55, column: 2, scope: !16261, inlinedAt: !16577)
!16577 = distinct !DILocation(line: 145, column: 10, scope: !16252, inlinedAt: !16575)
!16578 = !DILocation(line: 0, scope: !16261, inlinedAt: !16577)
!16579 = !DILocation(line: 148, column: 2, scope: !16269, inlinedAt: !16575)
!16580 = !DILocation(line: 148, column: 2, scope: !16270, inlinedAt: !16575)
!16581 = !DILocation(line: 148, column: 2, scope: !16273, inlinedAt: !16575)
!16582 = !DILocation(line: 160, column: 2, scope: !16252, inlinedAt: !16575)
!16583 = !DILocation(line: 188, column: 11, scope: !16584)
!16584 = distinct !DILexicalBlock(scope: !16585, file: !2501, line: 187, column: 24)
!16585 = distinct !DILexicalBlock(scope: !16570, file: !2501, line: 187, column: 2)
!16586 = !DILocation(line: 0, scope: !16325, inlinedAt: !16587)
!16587 = distinct !DILocation(line: 187, column: 2, scope: !16585)
!16588 = !DILocation(line: 194, column: 2, scope: !16333, inlinedAt: !16587)
!16589 = !DILocation(line: 194, column: 2, scope: !16334, inlinedAt: !16587)
!16590 = !DILocation(line: 194, column: 2, scope: !16337, inlinedAt: !16587)
!16591 = !DILocation(line: 0, scope: !16339, inlinedAt: !16592)
!16592 = distinct !DILocation(line: 215, column: 2, scope: !16325, inlinedAt: !16587)
!16593 = !DILocation(line: 95, column: 2, scope: !16339, inlinedAt: !16592)
!16594 = !DILocation(line: 191, column: 2, scope: !16561)
!16595 = distinct !DISubprogram(name: "timeout_rem", scope: !2501, file: !2501, line: 165, type: !16562, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !16596)
!16596 = !{!16597, !16598, !16599}
!16597 = !DILocalVariable(name: "timeout", arg: 1, scope: !16595, file: !2501, line: 165, type: !16564)
!16598 = !DILocalVariable(name: "ticks", scope: !16595, file: !2501, line: 167, type: !114)
!16599 = !DILocalVariable(name: "t", scope: !16600, file: !2501, line: 173, type: !2474)
!16600 = distinct !DILexicalBlock(scope: !16595, file: !2501, line: 173, column: 2)
!16601 = !DILocation(line: 0, scope: !16595)
!16602 = !DILocation(line: 169, column: 6, scope: !16603)
!16603 = distinct !DILexicalBlock(scope: !16595, file: !2501, line: 169, column: 6)
!16604 = !DILocation(line: 169, column: 6, scope: !16595)
!16605 = !DILocation(line: 173, column: 28, scope: !16600)
!16606 = !DILocation(line: 0, scope: !16600)
!16607 = !DILocation(line: 173, column: 39, scope: !16608)
!16608 = distinct !DILexicalBlock(scope: !16600, file: !2501, line: 173, column: 2)
!16609 = !DILocation(line: 173, column: 2, scope: !16600)
!16610 = !DILocation(line: 174, column: 15, scope: !16611)
!16611 = distinct !DILexicalBlock(scope: !16608, file: !2501, line: 173, column: 61)
!16612 = !DILocation(line: 174, column: 9, scope: !16611)
!16613 = !DILocation(line: 175, column: 15, scope: !16614)
!16614 = distinct !DILexicalBlock(scope: !16611, file: !2501, line: 175, column: 7)
!16615 = !DILocation(line: 175, column: 7, scope: !16611)
!16616 = !DILocation(line: 173, column: 52, scope: !16608)
!16617 = distinct !{!16617, !16609, !16618}
!16618 = !DILocation(line: 178, column: 2, scope: !16600)
!16619 = !DILocation(line: 180, column: 17, scope: !16595)
!16620 = !DILocation(line: 180, column: 15, scope: !16595)
!16621 = !DILocation(line: 180, column: 2, scope: !16595)
!16622 = !DILocation(line: 181, column: 1, scope: !16595)
!16623 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13441, file: !13441, line: 35, type: !16624, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !16626)
!16624 = !DISubroutineType(types: !16625)
!16625 = !{!345, !16564}
!16626 = !{!16627}
!16627 = !DILocalVariable(name: "to", arg: 1, scope: !16623, file: !13441, line: 35, type: !16564)
!16628 = !DILocation(line: 0, scope: !16623)
!16629 = !DILocation(line: 37, column: 35, scope: !16623)
!16630 = !DILocation(line: 37, column: 10, scope: !16623)
!16631 = !DILocation(line: 37, column: 9, scope: !16623)
!16632 = !DILocation(line: 37, column: 2, scope: !16623)
!16633 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2501, file: !2501, line: 194, type: !16562, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !16634)
!16634 = !{!16635, !16636, !16637, !16639}
!16635 = !DILocalVariable(name: "timeout", arg: 1, scope: !16633, file: !2501, line: 194, type: !16564)
!16636 = !DILocalVariable(name: "ticks", scope: !16633, file: !2501, line: 196, type: !114)
!16637 = !DILocalVariable(name: "__i", scope: !16638, file: !2501, line: 198, type: !16224)
!16638 = distinct !DILexicalBlock(scope: !16633, file: !2501, line: 198, column: 2)
!16639 = !DILocalVariable(name: "__key", scope: !16638, file: !2501, line: 198, type: !16224)
!16640 = !DILocation(line: 0, scope: !16633)
!16641 = !DILocation(line: 0, scope: !16638)
!16642 = !DILocation(line: 0, scope: !16252, inlinedAt: !16643)
!16643 = distinct !DILocation(line: 198, column: 2, scope: !16638)
!16644 = !DILocation(line: 55, column: 2, scope: !16261, inlinedAt: !16645)
!16645 = distinct !DILocation(line: 145, column: 10, scope: !16252, inlinedAt: !16643)
!16646 = !DILocation(line: 0, scope: !16261, inlinedAt: !16645)
!16647 = !DILocation(line: 148, column: 2, scope: !16269, inlinedAt: !16643)
!16648 = !DILocation(line: 148, column: 2, scope: !16270, inlinedAt: !16643)
!16649 = !DILocation(line: 148, column: 2, scope: !16273, inlinedAt: !16643)
!16650 = !DILocation(line: 160, column: 2, scope: !16252, inlinedAt: !16643)
!16651 = !DILocation(line: 199, column: 11, scope: !16652)
!16652 = distinct !DILexicalBlock(scope: !16653, file: !2501, line: 198, column: 24)
!16653 = distinct !DILexicalBlock(scope: !16638, file: !2501, line: 198, column: 2)
!16654 = !DILocation(line: 199, column: 23, scope: !16652)
!16655 = !DILocation(line: 0, scope: !16325, inlinedAt: !16656)
!16656 = distinct !DILocation(line: 198, column: 2, scope: !16653)
!16657 = !DILocation(line: 194, column: 2, scope: !16333, inlinedAt: !16656)
!16658 = !DILocation(line: 194, column: 2, scope: !16334, inlinedAt: !16656)
!16659 = !DILocation(line: 194, column: 2, scope: !16337, inlinedAt: !16656)
!16660 = !DILocation(line: 0, scope: !16339, inlinedAt: !16661)
!16661 = distinct !DILocation(line: 215, column: 2, scope: !16325, inlinedAt: !16656)
!16662 = !DILocation(line: 95, column: 2, scope: !16339, inlinedAt: !16661)
!16663 = !DILocation(line: 199, column: 21, scope: !16652)
!16664 = !DILocation(line: 202, column: 2, scope: !16633)
!16665 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2501, file: !2501, line: 205, type: !16358, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !16666)
!16666 = !{!16667, !16668, !16670}
!16667 = !DILocalVariable(name: "ret", scope: !16665, file: !2501, line: 207, type: !774)
!16668 = !DILocalVariable(name: "__i", scope: !16669, file: !2501, line: 209, type: !16224)
!16669 = distinct !DILexicalBlock(scope: !16665, file: !2501, line: 209, column: 2)
!16670 = !DILocalVariable(name: "__key", scope: !16669, file: !2501, line: 209, type: !16224)
!16671 = !DILocation(line: 0, scope: !16665)
!16672 = !DILocation(line: 0, scope: !16669)
!16673 = !DILocation(line: 0, scope: !16252, inlinedAt: !16674)
!16674 = distinct !DILocation(line: 209, column: 2, scope: !16669)
!16675 = !DILocation(line: 55, column: 2, scope: !16261, inlinedAt: !16676)
!16676 = distinct !DILocation(line: 145, column: 10, scope: !16252, inlinedAt: !16674)
!16677 = !DILocation(line: 0, scope: !16261, inlinedAt: !16676)
!16678 = !DILocation(line: 148, column: 2, scope: !16269, inlinedAt: !16674)
!16679 = !DILocation(line: 148, column: 2, scope: !16270, inlinedAt: !16674)
!16680 = !DILocation(line: 148, column: 2, scope: !16273, inlinedAt: !16674)
!16681 = !DILocation(line: 160, column: 2, scope: !16252, inlinedAt: !16674)
!16682 = !DILocation(line: 210, column: 9, scope: !16683)
!16683 = distinct !DILexicalBlock(scope: !16684, file: !2501, line: 209, column: 24)
!16684 = distinct !DILexicalBlock(scope: !16669, file: !2501, line: 209, column: 2)
!16685 = !DILocation(line: 0, scope: !16325, inlinedAt: !16686)
!16686 = distinct !DILocation(line: 209, column: 2, scope: !16684)
!16687 = !DILocation(line: 194, column: 2, scope: !16333, inlinedAt: !16686)
!16688 = !DILocation(line: 194, column: 2, scope: !16334, inlinedAt: !16686)
!16689 = !DILocation(line: 194, column: 2, scope: !16337, inlinedAt: !16686)
!16690 = !DILocation(line: 0, scope: !16339, inlinedAt: !16691)
!16691 = distinct !DILocation(line: 215, column: 2, scope: !16325, inlinedAt: !16686)
!16692 = !DILocation(line: 95, column: 2, scope: !16339, inlinedAt: !16691)
!16693 = !DILocation(line: 212, column: 2, scope: !16665)
!16694 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2501, file: !2501, line: 215, type: !10895, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !16695)
!16695 = !{!16696, !16697, !16698, !16700, !16701, !16704, !16705}
!16696 = !DILocalVariable(name: "ticks", arg: 1, scope: !16694, file: !2501, line: 215, type: !774)
!16697 = !DILocalVariable(name: "is_idle", arg: 2, scope: !16694, file: !2501, line: 215, type: !345)
!16698 = !DILocalVariable(name: "__i", scope: !16699, file: !2501, line: 217, type: !16224)
!16699 = distinct !DILexicalBlock(scope: !16694, file: !2501, line: 217, column: 2)
!16700 = !DILocalVariable(name: "__key", scope: !16699, file: !2501, line: 217, type: !16224)
!16701 = !DILocalVariable(name: "next_to", scope: !16702, file: !2501, line: 218, type: !119)
!16702 = distinct !DILexicalBlock(scope: !16703, file: !2501, line: 217, column: 24)
!16703 = distinct !DILexicalBlock(scope: !16699, file: !2501, line: 217, column: 2)
!16704 = !DILocalVariable(name: "sooner", scope: !16702, file: !2501, line: 219, type: !345)
!16705 = !DILocalVariable(name: "imminent", scope: !16702, file: !2501, line: 221, type: !345)
!16706 = !DILocation(line: 0, scope: !16694)
!16707 = !DILocation(line: 0, scope: !16699)
!16708 = !DILocation(line: 0, scope: !16252, inlinedAt: !16709)
!16709 = distinct !DILocation(line: 217, column: 2, scope: !16699)
!16710 = !DILocation(line: 55, column: 2, scope: !16261, inlinedAt: !16711)
!16711 = distinct !DILocation(line: 145, column: 10, scope: !16252, inlinedAt: !16709)
!16712 = !DILocation(line: 0, scope: !16261, inlinedAt: !16711)
!16713 = !DILocation(line: 148, column: 2, scope: !16269, inlinedAt: !16709)
!16714 = !DILocation(line: 148, column: 2, scope: !16270, inlinedAt: !16709)
!16715 = !DILocation(line: 148, column: 2, scope: !16273, inlinedAt: !16709)
!16716 = !DILocation(line: 160, column: 2, scope: !16252, inlinedAt: !16709)
!16717 = !DILocation(line: 218, column: 17, scope: !16702)
!16718 = !DILocation(line: 0, scope: !16702)
!16719 = !DILocation(line: 221, column: 27, scope: !16702)
!16720 = !DILocation(line: 233, column: 17, scope: !16721)
!16721 = distinct !DILexicalBlock(scope: !16702, file: !2501, line: 233, column: 7)
!16722 = !DILocation(line: 234, column: 26, scope: !16723)
!16723 = distinct !DILexicalBlock(scope: !16721, file: !2501, line: 233, column: 56)
!16724 = !DILocation(line: 234, column: 4, scope: !16723)
!16725 = !DILocation(line: 235, column: 3, scope: !16723)
!16726 = !DILocation(line: 0, scope: !16325, inlinedAt: !16727)
!16727 = distinct !DILocation(line: 217, column: 2, scope: !16703)
!16728 = !DILocation(line: 194, column: 2, scope: !16333, inlinedAt: !16727)
!16729 = !DILocation(line: 194, column: 2, scope: !16334, inlinedAt: !16727)
!16730 = !DILocation(line: 194, column: 2, scope: !16337, inlinedAt: !16727)
!16731 = !DILocation(line: 0, scope: !16339, inlinedAt: !16732)
!16732 = distinct !DILocation(line: 215, column: 2, scope: !16325, inlinedAt: !16727)
!16733 = !DILocation(line: 95, column: 2, scope: !16339, inlinedAt: !16732)
!16734 = !DILocation(line: 237, column: 1, scope: !16694)
!16735 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2501, file: !2501, line: 239, type: !16736, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !16738)
!16736 = !DISubroutineType(types: !16737)
!16737 = !{null, !774}
!16738 = !{!16739, !16740, !16741, !16743}
!16739 = !DILocalVariable(name: "ticks", arg: 1, scope: !16735, file: !2501, line: 239, type: !774)
!16740 = !DILocalVariable(name: "key", scope: !16735, file: !2501, line: 245, type: !16224)
!16741 = !DILocalVariable(name: "t", scope: !16742, file: !2501, line: 262, type: !2474)
!16742 = distinct !DILexicalBlock(scope: !16735, file: !2501, line: 261, column: 67)
!16743 = !DILocalVariable(name: "dt", scope: !16742, file: !2501, line: 263, type: !119)
!16744 = !DILocation(line: 0, scope: !16735)
!16745 = !DILocation(line: 242, column: 2, scope: !16735)
!16746 = !DILocation(line: 0, scope: !16252, inlinedAt: !16747)
!16747 = distinct !DILocation(line: 245, column: 25, scope: !16735)
!16748 = !DILocation(line: 55, column: 2, scope: !16261, inlinedAt: !16749)
!16749 = distinct !DILocation(line: 145, column: 10, scope: !16252, inlinedAt: !16747)
!16750 = !DILocation(line: 0, scope: !16261, inlinedAt: !16749)
!16751 = !DILocation(line: 148, column: 2, scope: !16269, inlinedAt: !16747)
!16752 = !DILocation(line: 148, column: 2, scope: !16270, inlinedAt: !16747)
!16753 = !DILocation(line: 148, column: 2, scope: !16273, inlinedAt: !16747)
!16754 = !DILocation(line: 160, column: 2, scope: !16252, inlinedAt: !16747)
!16755 = !DILocation(line: 261, column: 9, scope: !16735)
!16756 = !DILocation(line: 261, column: 17, scope: !16735)
!16757 = !DILocation(line: 261, column: 25, scope: !16735)
!16758 = !DILocation(line: 261, column: 37, scope: !16735)
!16759 = !DILocation(line: 261, column: 47, scope: !16735)
!16760 = !DILocation(line: 261, column: 44, scope: !16735)
!16761 = !DILocation(line: 261, column: 2, scope: !16735)
!16762 = !DILocation(line: 0, scope: !16742)
!16763 = !DILocation(line: 263, column: 12, scope: !16742)
!16764 = !DILocation(line: 265, column: 16, scope: !16742)
!16765 = !DILocation(line: 265, column: 13, scope: !16742)
!16766 = !DILocation(line: 266, column: 13, scope: !16742)
!16767 = !DILocation(line: 267, column: 3, scope: !16742)
!16768 = !DILocation(line: 0, scope: !16325, inlinedAt: !16769)
!16769 = distinct !DILocation(line: 269, column: 3, scope: !16742)
!16770 = !DILocation(line: 194, column: 2, scope: !16333, inlinedAt: !16769)
!16771 = !DILocation(line: 194, column: 2, scope: !16334, inlinedAt: !16769)
!16772 = !DILocation(line: 194, column: 2, scope: !16337, inlinedAt: !16769)
!16773 = !DILocation(line: 0, scope: !16339, inlinedAt: !16774)
!16774 = distinct !DILocation(line: 215, column: 2, scope: !16325, inlinedAt: !16769)
!16775 = !DILocation(line: 95, column: 2, scope: !16339, inlinedAt: !16774)
!16776 = !DILocation(line: 270, column: 6, scope: !16742)
!16777 = !DILocation(line: 270, column: 3, scope: !16742)
!16778 = !DILocation(line: 0, scope: !16252, inlinedAt: !16779)
!16779 = distinct !DILocation(line: 271, column: 9, scope: !16742)
!16780 = !DILocation(line: 55, column: 2, scope: !16261, inlinedAt: !16781)
!16781 = distinct !DILocation(line: 145, column: 10, scope: !16252, inlinedAt: !16779)
!16782 = !DILocation(line: 0, scope: !16261, inlinedAt: !16781)
!16783 = !DILocation(line: 148, column: 2, scope: !16269, inlinedAt: !16779)
!16784 = !DILocation(line: 148, column: 2, scope: !16270, inlinedAt: !16779)
!16785 = !DILocation(line: 148, column: 2, scope: !16273, inlinedAt: !16779)
!16786 = !DILocation(line: 160, column: 2, scope: !16252, inlinedAt: !16779)
!16787 = !DILocation(line: 272, column: 22, scope: !16742)
!16788 = distinct !{!16788, !16761, !16789}
!16789 = !DILocation(line: 273, column: 2, scope: !16735)
!16790 = !DILocation(line: 276, column: 19, scope: !16791)
!16791 = distinct !DILexicalBlock(scope: !16792, file: !2501, line: 275, column: 23)
!16792 = distinct !DILexicalBlock(scope: !16735, file: !2501, line: 275, column: 6)
!16793 = !DILocation(line: 277, column: 2, scope: !16791)
!16794 = !DILocation(line: 279, column: 15, scope: !16735)
!16795 = !DILocation(line: 279, column: 12, scope: !16735)
!16796 = !DILocation(line: 280, column: 21, scope: !16735)
!16797 = !DILocation(line: 282, column: 24, scope: !16735)
!16798 = !DILocation(line: 282, column: 2, scope: !16735)
!16799 = !DILocation(line: 0, scope: !16325, inlinedAt: !16800)
!16800 = distinct !DILocation(line: 284, column: 2, scope: !16735)
!16801 = !DILocation(line: 194, column: 2, scope: !16333, inlinedAt: !16800)
!16802 = !DILocation(line: 194, column: 2, scope: !16334, inlinedAt: !16800)
!16803 = !DILocation(line: 194, column: 2, scope: !16337, inlinedAt: !16800)
!16804 = !DILocation(line: 0, scope: !16339, inlinedAt: !16805)
!16805 = distinct !DILocation(line: 215, column: 2, scope: !16325, inlinedAt: !16800)
!16806 = !DILocation(line: 95, column: 2, scope: !16339, inlinedAt: !16805)
!16807 = !DILocation(line: 285, column: 1, scope: !16735)
!16808 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2501, file: !2501, line: 287, type: !16809, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !16811)
!16809 = !DISubroutineType(types: !16810)
!16810 = !{!116}
!16811 = !{!16812, !16813, !16815}
!16812 = !DILocalVariable(name: "t", scope: !16808, file: !2501, line: 289, type: !120)
!16813 = !DILocalVariable(name: "__i", scope: !16814, file: !2501, line: 291, type: !16224)
!16814 = distinct !DILexicalBlock(scope: !16808, file: !2501, line: 291, column: 2)
!16815 = !DILocalVariable(name: "__key", scope: !16814, file: !2501, line: 291, type: !16224)
!16816 = !DILocation(line: 0, scope: !16808)
!16817 = !DILocation(line: 0, scope: !16814)
!16818 = !DILocation(line: 0, scope: !16252, inlinedAt: !16819)
!16819 = distinct !DILocation(line: 291, column: 2, scope: !16814)
!16820 = !DILocation(line: 55, column: 2, scope: !16261, inlinedAt: !16821)
!16821 = distinct !DILocation(line: 145, column: 10, scope: !16252, inlinedAt: !16819)
!16822 = !DILocation(line: 0, scope: !16261, inlinedAt: !16821)
!16823 = !DILocation(line: 148, column: 2, scope: !16269, inlinedAt: !16819)
!16824 = !DILocation(line: 148, column: 2, scope: !16270, inlinedAt: !16819)
!16825 = !DILocation(line: 148, column: 2, scope: !16273, inlinedAt: !16819)
!16826 = !DILocation(line: 160, column: 2, scope: !16252, inlinedAt: !16819)
!16827 = !DILocation(line: 292, column: 7, scope: !16828)
!16828 = distinct !DILexicalBlock(scope: !16829, file: !2501, line: 291, column: 24)
!16829 = distinct !DILexicalBlock(scope: !16814, file: !2501, line: 291, column: 2)
!16830 = !DILocation(line: 292, column: 19, scope: !16828)
!16831 = !DILocation(line: 0, scope: !16325, inlinedAt: !16832)
!16832 = distinct !DILocation(line: 291, column: 2, scope: !16829)
!16833 = !DILocation(line: 194, column: 2, scope: !16333, inlinedAt: !16832)
!16834 = !DILocation(line: 194, column: 2, scope: !16334, inlinedAt: !16832)
!16835 = !DILocation(line: 194, column: 2, scope: !16337, inlinedAt: !16832)
!16836 = !DILocation(line: 0, scope: !16339, inlinedAt: !16837)
!16837 = distinct !DILocation(line: 215, column: 2, scope: !16325, inlinedAt: !16832)
!16838 = !DILocation(line: 95, column: 2, scope: !16339, inlinedAt: !16837)
!16839 = !DILocation(line: 292, column: 17, scope: !16828)
!16840 = !DILocation(line: 294, column: 2, scope: !16808)
!16841 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2501, file: !2501, line: 297, type: !3336, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !2162)
!16842 = !DILocation(line: 300, column: 19, scope: !16841)
!16843 = !DILocation(line: 300, column: 9, scope: !16841)
!16844 = !DILocation(line: 300, column: 2, scope: !16841)
!16845 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2501, file: !2501, line: 306, type: !16809, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !2162)
!16846 = !DILocation(line: 308, column: 9, scope: !16845)
!16847 = !DILocation(line: 308, column: 2, scope: !16845)
!16848 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2501, file: !2501, line: 319, type: !6547, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !16849)
!16849 = !{!16850, !16851, !16852, !16853}
!16850 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !16848, file: !2501, line: 319, type: !118)
!16851 = !DILocalVariable(name: "start_cycles", scope: !16848, file: !2501, line: 328, type: !118)
!16852 = !DILocalVariable(name: "cycles_to_wait", scope: !16848, file: !2501, line: 331, type: !118)
!16853 = !DILocalVariable(name: "current_cycles", scope: !16854, file: !2501, line: 338, type: !118)
!16854 = distinct !DILexicalBlock(scope: !16855, file: !2501, line: 337, column: 11)
!16855 = distinct !DILexicalBlock(scope: !16856, file: !2501, line: 337, column: 2)
!16856 = distinct !DILexicalBlock(scope: !16848, file: !2501, line: 337, column: 2)
!16857 = !DILocation(line: 0, scope: !16848)
!16858 = !DILocation(line: 322, column: 19, scope: !16859)
!16859 = distinct !DILexicalBlock(scope: !16848, file: !2501, line: 322, column: 6)
!16860 = !DILocation(line: 322, column: 6, scope: !16848)
!16861 = !DILocation(line: 328, column: 26, scope: !16848)
!16862 = !DILocation(line: 333, column: 43, scope: !16848)
!16863 = !DILocation(line: 337, column: 2, scope: !16848)
!16864 = !DILocation(line: 338, column: 29, scope: !16854)
!16865 = !DILocation(line: 0, scope: !16854)
!16866 = !DILocation(line: 341, column: 23, scope: !16867)
!16867 = distinct !DILexicalBlock(scope: !16854, file: !2501, line: 341, column: 7)
!16868 = !DILocation(line: 341, column: 39, scope: !16867)
!16869 = !DILocation(line: 349, column: 1, scope: !16848)
!16870 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !245, file: !245, line: 1675, type: !3336, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !2162)
!16871 = !DILocation(line: 1677, column: 9, scope: !16870)
!16872 = !DILocation(line: 1677, column: 2, scope: !16870)
!16873 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !3424, file: !3424, line: 24, type: !3336, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !2162)
!16874 = !DILocation(line: 26, column: 9, scope: !16873)
!16875 = !DILocation(line: 26, column: 2, scope: !16873)
!16876 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2501, file: !2501, line: 364, type: !16877, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2471, retainedNodes: !16879)
!16877 = !DISubroutineType(types: !16878)
!16878 = !{!120, !16214}
!16879 = !{!16880, !16881}
!16880 = !DILocalVariable(name: "timeout", arg: 1, scope: !16876, file: !2501, line: 364, type: !16214)
!16881 = !DILocalVariable(name: "dt", scope: !16876, file: !2501, line: 366, type: !114)
!16882 = !DILocation(line: 0, scope: !16876)
!16883 = !DILocation(line: 368, column: 6, scope: !16876)
!16884 = !DILocation(line: 371, column: 10, scope: !16885)
!16885 = distinct !DILexicalBlock(scope: !16886, file: !2501, line: 370, column: 47)
!16886 = distinct !DILexicalBlock(scope: !16887, file: !2501, line: 370, column: 13)
!16887 = distinct !DILexicalBlock(scope: !16876, file: !2501, line: 368, column: 6)
!16888 = !DILocation(line: 371, column: 3, scope: !16885)
!16889 = !DILocation(line: 376, column: 58, scope: !16890)
!16890 = distinct !DILexicalBlock(scope: !16891, file: !2501, line: 376, column: 7)
!16891 = distinct !DILexicalBlock(scope: !16886, file: !2501, line: 372, column: 9)
!16892 = !DILocation(line: 376, column: 7, scope: !16891)
!16893 = !DILocation(line: 376, column: 43, scope: !16890)
!16894 = !DILocation(line: 377, column: 4, scope: !16895)
!16895 = distinct !DILexicalBlock(scope: !16890, file: !2501, line: 376, column: 64)
!16896 = !DILocation(line: 379, column: 10, scope: !16891)
!16897 = !DILocation(line: 379, column: 33, scope: !16891)
!16898 = !DILocation(line: 379, column: 31, scope: !16891)
!16899 = !DILocation(line: 379, column: 3, scope: !16891)
!16900 = !DILocation(line: 0, scope: !16887)
!16901 = !DILocation(line: 381, column: 1, scope: !16876)
!16902 = distinct !DISubprogram(name: "boot_banner", scope: !16903, file: !16903, line: 26, type: !3098, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3084, retainedNodes: !2162)
!16903 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16904 = !DILocation(line: 34, column: 2, scope: !16902)
!16905 = !DILocation(line: 36, column: 1, scope: !16902)
