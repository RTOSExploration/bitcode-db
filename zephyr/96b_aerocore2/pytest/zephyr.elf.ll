; ModuleID = 'build/96b_aerocore2/pytest/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.ztest_suite_stats = type { i32, i32, i32 }
%struct.ztest_suite_node = type { i8*, i8* ()*, void (i8*)*, void (i8*)*, void (i8*)*, i1 (i8*)*, %struct.ztest_suite_stats* }
%struct.ztest_unit_test_stats = type { i32, i32, i32, i32, i32 }
%struct.ztest_unit_test = type { i8*, i8*, void (i8*)*, i32, %struct.ztest_unit_test_stats* }
%struct.log_source_const_data = type { i8*, i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.k_spinlock }
%struct.k_spinlock = type { i32 }
%struct.arm_mpu_region = type { i32, i8*, %struct.k_spinlock }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, [32 x i8], i32, %struct.ztest_suite_stats, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { %struct._dnode }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct._thread_arch = type { i32, i32 }
%struct.ztest_test_rule = type { void (%struct.ztest_unit_test*, i8*)*, void (%struct.ztest_unit_test*, i8*)* }
%struct.ztest_expected_result_entry = type { i8*, i8*, i32 }
%struct.ztest_arch_api = type { void (i8*)*, i1 (i8*, %struct.ztest_suite_node*)*, i1 (i8*, i8*)* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.k_spinlock, i32*, i32, %struct._thread_arch }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.k_spinlock, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct._cpu_arch }
%struct._cpu_arch = type {}
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.k_spinlock, %struct.k_spinlock }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.k_spinlock*, %struct.k_spinlock* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [91 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [91 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236632 to i8*), void (i8*)* inttoptr (i32 134235253 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236632 to i8*), void (i8*)* inttoptr (i32 134235233 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236632 to i8*), void (i8*)* inttoptr (i32 134235223 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236632 to i8*), void (i8*)* inttoptr (i32 134235323 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236632 to i8*), void (i8*)* inttoptr (i32 134235313 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236632 to i8*), void (i8*)* inttoptr (i32 134235303 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236632 to i8*), void (i8*)* inttoptr (i32 134235293 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236632 to i8*), void (i8*)* inttoptr (i32 134235283 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236632 to i8*), void (i8*)* inttoptr (i32 134235273 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236632 to i8*), void (i8*)* inttoptr (i32 134235263 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236632 to i8*), void (i8*)* inttoptr (i32 134235243 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [57 x i8*] [i8* bitcast (%struct.ztest_suite_node* @z_ztest_test_node_test_pytest to i8*), i8* bitcast (%struct.ztest_unit_test* @z_ztest_unit_test__test_pytest__test_pytest to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_42 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_100 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_101 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_102 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_103 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_104 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_105 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_106 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_24 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_97 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_98 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_99 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_100 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_101 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_102 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_103 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_104 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_105 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_106 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_24 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_97 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_98 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_99 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_49 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_52 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_57 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_60 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_63 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_49 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_52 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_57 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_60 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_63 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*)], section "llvm.metadata"
@.str = private unnamed_addr constant [12 x i8] c"test_pytest\00", align 1
@z_ztest_suite_node_stats_test_pytest = dso_local global %struct.ztest_suite_stats zeroinitializer, align 4, !dbg !25
@z_ztest_test_node_test_pytest = internal constant %struct.ztest_suite_node { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0), i8* ()* null, void (i8*)* null, void (i8*)* null, void (i8*)* null, i1 (i8*)* null, %struct.ztest_suite_stats* @z_ztest_suite_node_stats_test_pytest }, section "._ztest_suite_node.static.z_ztest_test_node_test_pytest", align 4, !dbg !109
@z_ztest_unit_test_stats_test_pytest_test_pytest = dso_local global %struct.ztest_unit_test_stats zeroinitializer, align 4, !dbg !173
@z_ztest_unit_test__test_pytest__test_pytest = internal global %struct.ztest_unit_test { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0), void (i8*)* @_test_pytest_test_pytest_wrapper, i32 0, %struct.ztest_unit_test_stats* @z_ztest_unit_test_stats_test_pytest_test_pytest }, section "._ztest_unit_test.static.z_ztest_unit_test__test_pytest__test_pytest", align 4, !dbg !155
@.str.1 = private unnamed_addr constant [13 x i8] c"Hello world\0A\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !175
@.str.1.4 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.5 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.3 = private unnamed_addr constant [39 x i8] c"ZEPHYR_BASE/lib/os/cbprintf_packaged.c\00", align 1
@.str.4 = private unnamed_addr constant [33 x i8] c"\09String with too many arguments\0A\00", align 1
@.str.5 = private unnamed_addr constant [26 x i8] c"\09str_ptr_pos[] too small\0A\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"\09unexpected size %u\0A\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"\09too many format args\0A\00", align 1
@.str.8 = private unnamed_addr constant [27 x i8] c"in_packaged != ((void *)0)\00", align 1
@.str.9 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@.str.10 = private unnamed_addr constant [31 x i8] c"scpy_cnt < sizeof(cpy_str_pos)\00", align 1
@.str.11 = private unnamed_addr constant [32 x i8] c"keep_cnt < sizeof(keep_str_pos)\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@.str.12 = private unnamed_addr constant [24 x i8] c"packaged != ((void *)0)\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !207
@.str.13 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !216
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !266
@.str.22 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.24 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.25 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.23 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.27 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.28 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.26 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.29 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.30 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.31 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.32 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@.str.33 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.34 = private unnamed_addr constant [27 x i8] c"prio <= ((1UL << (4)) - 1)\00", align 1
@.str.2.35 = private unnamed_addr constant [47 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/irq_manage.c\00", align 1
@.str.3.36 = private unnamed_addr constant [64 x i8] c"\09invalid priority %d for %d irq! values must be less than %lu\0A\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.39 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.40 = private unnamed_addr constant [19 x i8] c"esf != ((void *)0)\00", align 1
@.str.2.41 = private unnamed_addr constant [51 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/cortex_m/fault.c\00", align 1
@.str.3.42 = private unnamed_addr constant [62 x i8] c"\09ESF could not be retrieved successfully. Shall never occur.\0A\00", align 1
@.str.4.55 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.5.47 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.6.48 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.7.49 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.8.50 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.9.51 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.10.52 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.53 = private unnamed_addr constant [36 x i8] c"\09Fault escalation without FSR info\0A\00", align 1
@.str.12.54 = private unnamed_addr constant [48 x i8] c"\09HardFault without HFSR info Shall never occur\0A\00", align 1
@.str.13.46 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.14 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.16 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.17 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.18 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.19 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.20 = private unnamed_addr constant [74 x i8] c"!(((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CFSR & (1UL << (0U + 4U)))\00", align 1
@.str.21 = private unnamed_addr constant [35 x i8] c"\09Stacking error not a stack fail\0A\0A\00", align 1
@.str.22.45 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.23 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.24 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.25 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.26 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.27 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.28 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.29.43 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.30 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.31 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.32 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.33.44 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.34 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.35 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.36 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.37 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.38 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.61 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.61, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !295
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.k_spinlock { i32 101384192 } }], align 4, !dbg !447
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !301
@.str.67 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.68 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.2.69 = private unnamed_addr constant [48 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/mpu/arm_mpu.c\00", align 1
@.str.3.70 = private unnamed_addr constant [44 x i8] c"\09Configuring %u static MPU regions failed\0A\0A\00", align 1
@.str.4.75 = private unnamed_addr constant [45 x i8] c"\09Configuring %u dynamic MPU regions failed\0A\0A\00", align 1
@.str.5.76 = private unnamed_addr constant [52 x i8] c"\09Request to configure: %u regions (supported: %u)\0A\0A\00", align 1
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !456
@.str.6.77 = private unnamed_addr constant [80 x i8] c"(((MPU_Type *) ((0xE000E000UL) + 0x0D90UL) )->TYPE & (0xFFUL << 8U)) >> 8U == 8\00", align 1
@.str.7.78 = private unnamed_addr constant [33 x i8] c"\09Invalid number of MPU regions\0A\0A\00", align 1
@.str.8.71 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.9.72 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !492
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.87, i32 0, i32 0), %struct.k_spinlock { i32 117571624 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.88, i32 0, i32 0), %struct.k_spinlock { i32 285933602 } }], align 4, !dbg !502
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !507
@.str.87 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.88 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@phase = dso_local local_unnamed_addr global i32 5, align 4, !dbg !527
@test_status = internal unnamed_addr global i32 0, align 4, !dbg !582
@.str.89 = private unnamed_addr constant [69 x i8] c"===================================================================\0A\00", align 1
@.str.1.92 = private unnamed_addr constant [22 x i8] c"PROJECT EXECUTION %s\0A\00", align 1
@.str.2.91 = private unnamed_addr constant [7 x i8] c"FAILED\00", align 1
@.str.3.90 = private unnamed_addr constant [11 x i8] c"SUCCESSFUL\00", align 1
@current_test_failed_assumption = internal unnamed_addr global i1 false, align 1, !dbg !693
@test_result = internal unnamed_addr global i32 0, align 4, !dbg !569
@.str.4.104 = private unnamed_addr constant [51 x i8] c" ERROR: cannot fail in test phase '%s()', bailing\0A\00", align 1
@.str.5.105 = private unnamed_addr constant [51 x i8] c" ERROR: cannot pass in test phase '%s()', bailing\0A\00", align 1
@.str.6.93 = private unnamed_addr constant [51 x i8] c" ERROR: cannot skip in test phase '%s()', bailing\0A\00", align 1
@_ztest_unit_test_list_start = external dso_local global [0 x %struct.ztest_unit_test], align 4
@_ztest_unit_test_list_end = external dso_local global [0 x %struct.ztest_unit_test], align 4
@_ztest_suite_node_list_start = external dso_local global [0 x %struct.ztest_suite_node], align 4
@_ztest_suite_node_list_end = external dso_local global [0 x %struct.ztest_suite_node], align 4
@.str.7.120 = private unnamed_addr constant [37 x i8] c"ERROR: Test suite '%s' did not run.\0A\00", align 1
@.str.8.121 = private unnamed_addr constant [66 x i8] c"ERROR: Test '%s' assigned to test suite '%s' which doesn't exist\0A\00", align 1
@.str.9.122 = private unnamed_addr constant [21 x i8] c"Bad stats for %s.%s\0A\00", align 1
@ztest_thread_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/subsys/testsuite/ztest/src/ztest_new.c\22.0", align 64, !dbg !573
@ztest_thread = internal global %struct.k_thread zeroinitializer, align 8, !dbg !584
@.str.10.95 = private unnamed_addr constant [6 x i8] c"setup\00", align 1
@.str.11.96 = private unnamed_addr constant [7 x i8] c"before\00", align 1
@.str.12.97 = private unnamed_addr constant [5 x i8] c"test\00", align 1
@.str.13.98 = private unnamed_addr constant [6 x i8] c"after\00", align 1
@.str.14.99 = private unnamed_addr constant [9 x i8] c"teardown\00", align 1
@.str.15.100 = private unnamed_addr constant [10 x i8] c"framework\00", align 1
@.str.16.94 = private unnamed_addr constant [10 x i8] c"(unknown)\00", align 1
@.str.17.106 = private unnamed_addr constant [22 x i8] c"Running TESTSUITE %s\0A\00", align 1
@.str.18.108 = private unnamed_addr constant [24 x i8] c"TESTSUITE %s succeeded\0A\00", align 1
@.str.19.107 = private unnamed_addr constant [22 x i8] c"TESTSUITE %s failed.\0A\00", align 1
@.str.20.109 = private unnamed_addr constant [12 x i8] c"START - %s\0A\00", align 1
@tc_spend_time = internal unnamed_addr global i32 0, align 4, !dbg !691
@.str.21.110 = private unnamed_addr constant [29 x i8] c" %s - %s in %u.%03u seconds\0A\00", align 1
@tc_start_time = internal unnamed_addr global i32 0, align 4, !dbg !688
@_ztest_test_rule_list_start = external dso_local global [0 x %struct.ztest_test_rule], align 4
@_ztest_test_rule_list_end = external dso_local global [0 x %struct.ztest_test_rule], align 4
@_ztest_expected_result_entry_list_start = external dso_local global [0 x %struct.ztest_expected_result_entry], align 4
@_ztest_expected_result_entry_list_end = external dso_local global [0 x %struct.ztest_expected_result_entry], align 4
@.str.24.112 = private unnamed_addr constant [5 x i8] c"PASS\00", align 1
@.str.25.113 = private unnamed_addr constant [5 x i8] c"FAIL\00", align 1
@.str.26.114 = private unnamed_addr constant [5 x i8] c"SKIP\00", align 1
@.str.27.111 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.28.115 = private unnamed_addr constant [41 x i8] c"\0A------ TESTSUITE SUMMARY START ------\0A\0A\00", align 1
@.str.29.116 = private unnamed_addr constant [38 x i8] c"------ TESTSUITE SUMMARY END ------\0A\0A\00", align 1
@.str.30.117 = private unnamed_addr constant [44 x i8] c" - %s - [%s.%s] duration = %u.%03u seconds\0A\00", align 1
@.str.31.118 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.32.119 = private unnamed_addr constant [100 x i8] c"SUITE %s - %3d.%02d%% [%s]: pass = %d, fail = %d, skip = %d, total = %d duration = %u.%03u seconds\0A\00", align 1
@switch.table.get_friendly_phase_name = private unnamed_addr constant [6 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10.95, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11.96, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12.97, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.98, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14.99, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15.100, i32 0, i32 0)], align 4
@switch.table.TC_RESULT_TO_STR = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24.112, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25.113, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26.114, i32 0, i32 0)], align 4
@ztest_api = dso_local local_unnamed_addr constant %struct.ztest_arch_api { void (i8*)* @z_ztest_run_all, i1 (i8*, %struct.ztest_suite_node*)* @z_ztest_should_suite_run, i1 (i8*, i8*)* @z_ztest_should_test_run }, align 4, !dbg !694
@.str.127 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.128 = private unnamed_addr constant [5 x i8] c"line\00", align 1
@.str.2.129 = private unnamed_addr constant [59 x i8] c"ZEPHYR_BASE/drivers/interrupt_controller/intc_exti_stm32.c\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !729
@__devicehdl_dts_ord_42 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !933
@.str.4.125 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_42 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !894
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !877
@__device_dts_ord_42 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4.125, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_42, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_42, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !850
@__init___device_dts_ord_42 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_42 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !866
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !896
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !910
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !912
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !914
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !916
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !918
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !920
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !922
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !924
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !926
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !928
@__devicehdl_dts_ord_8 = dso_local constant [19 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 14, i16 15, i16 16, i16 17, i16 18, i16 32767], section ".__device_handles_pass2", align 2, !dbg !938
@.str.130 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !979
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1075
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !1064
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 -134, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1116
@__devicehdl_dts_ord_97 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !964
@.str.139 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1182
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1488
@__devstate_dts_ord_97 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1446
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1432
@__init___device_dts_ord_97 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_97 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1359
@__devicehdl_dts_ord_98 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !962
@.str.1.147 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1490
@__devstate_dts_ord_98 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1450
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1448
@__init___device_dts_ord_98 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_98 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1373
@__devicehdl_dts_ord_99 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !960
@.str.2.148 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1503
@__devstate_dts_ord_99 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1454
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1452
@__init___device_dts_ord_99 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_99 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1379
@__devicehdl_dts_ord_100 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !958
@.str.3.149 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1505
@__devstate_dts_ord_100 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1458
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1456
@__init___device_dts_ord_100 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_100 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1385
@__devicehdl_dts_ord_24 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !956
@.str.4.150 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1507
@__devstate_dts_ord_24 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1462
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1460
@__init___device_dts_ord_24 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_24 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1394
@__devicehdl_dts_ord_101 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !954
@.str.5.151 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1509
@__devstate_dts_ord_101 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1466
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1464
@__init___device_dts_ord_101 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_101 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1400
@__devicehdl_dts_ord_102 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !952
@.str.6.152 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1511
@__devstate_dts_ord_102 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1470
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1468
@__init___device_dts_ord_102 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_102 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1406
@__devicehdl_dts_ord_103 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !950
@.str.7.153 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1513
@__devstate_dts_ord_103 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1474
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1472
@__init___device_dts_ord_103 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_103 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1412
@__devicehdl_dts_ord_104 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !948
@.str.8.154 = private unnamed_addr constant [14 x i8] c"gpio@40022000\00", align 1
@gpio_stm32_cfg_i = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073881088 to i32*), i32 8, %struct._thread_arch { i32 48, i32 256 } }, align 4, !dbg !1515
@__devstate_dts_ord_104 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1478
@gpio_stm32_data_i = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1476
@__init___device_dts_ord_104 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_104 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1418
@__devicehdl_dts_ord_105 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !946
@.str.9.155 = private unnamed_addr constant [14 x i8] c"gpio@40022400\00", align 1
@gpio_stm32_cfg_j = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073882112 to i32*), i32 9, %struct._thread_arch { i32 48, i32 512 } }, align 4, !dbg !1517
@__devstate_dts_ord_105 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1482
@gpio_stm32_data_j = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1480
@__init___device_dts_ord_105 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_105 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1424
@__devicehdl_dts_ord_106 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !944
@.str.10.156 = private unnamed_addr constant [14 x i8] c"gpio@40022800\00", align 1
@gpio_stm32_cfg_k = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073883136 to i32*), i32 10, %struct._thread_arch { i32 48, i32 1024 } }, align 4, !dbg !1519
@__devstate_dts_ord_106 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1486
@gpio_stm32_data_k = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1484
@__init___device_dts_ord_106 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_106 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1430
@.str.11.140 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.34.146 = private unnamed_addr constant [12 x i8] c"cb->handler\00", align 1
@.str.35.142 = private unnamed_addr constant [53 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio/gpio_utils.h\00", align 1
@.str.36.145 = private unnamed_addr constant [23 x i8] c"\09No callback handler!\0A\00", align 1
@.str.37.141 = private unnamed_addr constant [9 x i8] c"callback\00", align 1
@.str.38.143 = private unnamed_addr constant [15 x i8] c"\09No callback!\0A\00", align 1
@.str.39.144 = private unnamed_addr constant [18 x i8] c"callback->handler\00", align 1
@.str.160 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.160, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !1521
@__devicehdl_dts_ord_63 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !974
@.str.1.161 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_63 }, align 4, !dbg !1709
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1764
@__devstate_dts_ord_63 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1699
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1766
@__device_dts_ord_63 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.161, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_63, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_63, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1666
@__init___device_dts_ord_63 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_63 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1668
@__devicehdl_dts_ord_49 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !972
@.str.2.168 = private unnamed_addr constant [16 x i8] c"serial@40004400\00", align 1
@uart_stm32_cfg_1 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_1, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_49 }, align 4, !dbg !1772
@__devstate_dts_ord_49 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1701
@uart_stm32_data_1 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1782
@__device_dts_ord_49 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.168, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_1 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_49, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_1 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_49, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1677
@__init___device_dts_ord_49 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_49 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1679
@__devicehdl_dts_ord_52 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !970
@.str.3.169 = private unnamed_addr constant [16 x i8] c"serial@40004800\00", align 1
@uart_stm32_cfg_2 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073760256 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_2, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_52 }, align 4, !dbg !1784
@__devstate_dts_ord_52 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1703
@uart_stm32_data_2 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1794
@__device_dts_ord_52 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3.169, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_2 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_52, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_2 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_52, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1683
@__init___device_dts_ord_52 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_52 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1685
@__devicehdl_dts_ord_57 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !968
@.str.4.172 = private unnamed_addr constant [16 x i8] c"serial@40007800\00", align 1
@uart_stm32_cfg_3 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073772544 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_3, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_57 }, align 4, !dbg !1796
@__devstate_dts_ord_57 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1705
@uart_stm32_data_3 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1806
@__device_dts_ord_57 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4.172, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_3 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_57, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_3 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_57, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1689
@__init___device_dts_ord_57 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_57 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1691
@__devicehdl_dts_ord_60 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !966
@.str.5.173 = private unnamed_addr constant [16 x i8] c"serial@40007c00\00", align 1
@uart_stm32_cfg_4 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073773568 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_4, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_60 }, align 4, !dbg !1808
@__devstate_dts_ord_60 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1707
@uart_stm32_data_4 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1818
@__device_dts_ord_60 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5.173, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_4 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_60, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_4 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_60, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1695
@__init___device_dts_ord_60 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_60 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1697
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1753
@__pinctrl_dev_config__device_dts_ord_63 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_63, i32 0, i32 0), i8 1 }, align 4, !dbg !1756
@__pinctrl_states__device_dts_ord_63 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_63, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1758
@__pinctrl_state_pins_0__device_dts_ord_63 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 711, i32 512 }, %struct._thread_arch { i32 743, i32 0 }], align 4, !dbg !1761
@.str.6.163 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.7.164 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.8.165 = private unnamed_addr constant [28 x i8] c"((config->usart->BRR)) > 16\00", align 1
@.str.9.166 = private unnamed_addr constant [40 x i8] c"ZEPHYR_BASE/drivers/serial/uart_stm32.c\00", align 1
@.str.10.167 = private unnamed_addr constant [20 x i8] c"\09BaudRateReg >= 16\0A\00", align 1
@.str.11.176 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.12.178 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.13.179 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.130, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([19 x i16], [19 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !1048
@pclken_1 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 131072 }], align 4, !dbg !1774
@__pinctrl_dev_config__device_dts_ord_49 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_49, i32 0, i32 0), i8 1 }, align 4, !dbg !1776
@__pinctrl_states__device_dts_ord_49 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_49, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1778
@__pinctrl_state_pins_0__device_dts_ord_49 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1703, i32 512 }, %struct._thread_arch { i32 1735, i32 0 }], align 4, !dbg !1780
@pclken_2 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 262144 }], align 4, !dbg !1786
@__pinctrl_dev_config__device_dts_ord_52 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_52, i32 0, i32 0), i8 1 }, align 4, !dbg !1788
@__pinctrl_states__device_dts_ord_52 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_52, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1790
@__pinctrl_state_pins_0__device_dts_ord_52 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1799, i32 512 }, %struct._thread_arch { i32 1831, i32 0 }], align 4, !dbg !1792
@pclken_3 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 1073741824 }], align 4, !dbg !1798
@__pinctrl_dev_config__device_dts_ord_57 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_57, i32 0, i32 0), i8 1 }, align 4, !dbg !1800
@__pinctrl_states__device_dts_ord_57 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_57, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1802
@__pinctrl_state_pins_0__device_dts_ord_57 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 2312, i32 512 }, %struct._thread_arch { i32 2280, i32 0 }], align 4, !dbg !1804
@pclken_4 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 -2147483648 }], align 4, !dbg !1810
@__pinctrl_dev_config__device_dts_ord_60 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_60, i32 0, i32 0), i8 1 }, align 4, !dbg !1812
@__pinctrl_states__device_dts_ord_60 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_60, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1814
@__pinctrl_state_pins_0__device_dts_ord_60 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 2088, i32 512 }, %struct._thread_arch { i32 2056, i32 0 }], align 4, !dbg !1816
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.14 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1825
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1936
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1938
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1934
@lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !1929
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1903
@.str.183 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.184 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.185 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.186 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.187 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.188 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_97, %struct.device* @__device_dts_ord_98, %struct.device* @__device_dts_ord_99, %struct.device* @__device_dts_ord_100, %struct.device* @__device_dts_ord_24, %struct.device* @__device_dts_ord_101, %struct.device* @__device_dts_ord_102, %struct.device* @__device_dts_ord_103, %struct.device* @__device_dts_ord_104, %struct.device* @__device_dts_ord_105, %struct.device* @__device_dts_ord_106], align 4, !dbg !1940
@__device_dts_ord_97 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.139, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_97, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_97, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1357
@__device_dts_ord_98 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.147, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_98, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_98, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1371
@__device_dts_ord_99 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.148, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_99, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_99, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1377
@__device_dts_ord_100 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.149, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_100, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_100, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1383
@__device_dts_ord_24 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.150, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_24, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_24, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1392
@__device_dts_ord_101 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.151, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_101, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_101, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1398
@__device_dts_ord_102 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.152, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_102, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_102, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1404
@__device_dts_ord_103 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.153, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_103, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_103, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1410
@__device_dts_ord_104 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8.154, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_i to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_104, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_i to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_104, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1416
@__device_dts_ord_105 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.155, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_j to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_105, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_j to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_105, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1422
@__device_dts_ord_106 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.10.156, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_k to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_106, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_k to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_106, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1428
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !2030
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !2072
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !2075
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !2082
@.str.222 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.226 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.227 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.228 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.232 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.5.233 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.6.234 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.7.235 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.8.236 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.9.231 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.10.230 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.232, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.233, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.234, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.235, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.236, i32 0, i32 0)], align 4
@.str.238 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.238, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !2089
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@__ccm_bss_start = external dso_local global [0 x i8], align 1
@__ccm_bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2313
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2302
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2308
@z_idle_stacks = internal global [1 x [4160 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2320
@.str.5.244 = private unnamed_addr constant [5 x i8] c"idle\00", align 1
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2325
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.6.248 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.255, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.256, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.257, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.258, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.259, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.260, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.254, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.261, i32 0, i32 0)], align 4, !dbg !2355
@.str.255 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.256 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.257 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.258 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.259 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.260 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.254 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.261 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2470
@.str.8.253 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.9.266 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.10.267 = private unnamed_addr constant [128 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((entry))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.11.268 = private unnamed_addr constant [28 x i8] c"ZEPHYR_BASE/kernel/thread.c\00", align 1
@.str.12.269 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.13.273 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.14.274 = private unnamed_addr constant [37 x i8] c"\09Threads may not be created in ISRs\0A\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@.str.15.278 = private unnamed_addr constant [45 x i8] c"thread_data <= __static_thread_data_list_end\00", align 1
@.str.16.279 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.288 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.289 = private unnamed_addr constant [40 x i8] c"_kernel.cpus[0].current->base.prio >= 0\00", align 1
@.str.2.290 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/kernel/idle.c\00", align 1
@sched_spinlock = dso_local global %struct.k_spinlock zeroinitializer, align 4, !dbg !2483
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2594
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2597
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2599
@.str.291 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.307 = private unnamed_addr constant [61 x i8] c"thread == _kernel.cpus[0].current || is_thread_dummy(thread)\00", align 1
@.str.2.298 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/sched.c\00", align 1
@.str.3.312 = private unnamed_addr constant [55 x i8] c"sizeof(sched_spinlock) == 0 || lock != &sched_spinlock\00", align 1
@.str.4.320 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 0U\00", align 1
@.str.5.300 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.6.315 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.7.297 = private unnamed_addr constant [33 x i8] c"!z_is_idle_thread_object(thread)\00", align 1
@.str.8.324 = private unnamed_addr constant [134 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((((void *)0)))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.9.325 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.10.331 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.332 = private unnamed_addr constant [31 x i8] c"\09aborting essential thread %p\0A\00", align 1
@.str.12.333 = private unnamed_addr constant [34 x i8] c"\09aborted _current back from dead\0A\00", align 1
@.str.13.336 = private unnamed_addr constant [21 x i8] c"\09cannot join in ISR\0A\00", align 1
@.str.14.292 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.15.293 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.16.294 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.17.295 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.18.296 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.19.299 = private unnamed_addr constant [39 x i8] c"_kernel.cpus[0].current != ((void *)0)\00", align 1
@.str.20.311 = private unnamed_addr constant [23 x i8] c"thread->base.pended_on\00", align 1
@.str.21.316 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/kernel/include/ksched.h\00", align 1
@.str.22.317 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 1U\00", align 1
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2310
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2318
@.str.23.326 = private unnamed_addr constant [64 x i8] c"!z_is_thread_state_set(_kernel.cpus[0].current, ((1UL << (4))))\00", align 1
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@__ccm_data_start = external dso_local global [0 x i8], align 1
@__ccm_data_rom_start = external dso_local global [0 x i8], align 1
@__ccm_data_end = external dso_local global [0 x i8], align 1
@.str.342 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.343 = private unnamed_addr constant [32 x i8] c"!sys_dnode_is_linked(&to->node)\00", align 1
@.str.2.344 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/timeout.c\00", align 1
@.str.3.345 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@timeout_lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2601
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2631
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2636
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2176
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2634
@.str.4.346 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.347 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.348 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.352 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.353 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.373 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3225 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !3229, !srcloc !3230
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !3231, !srcloc !3232
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !3233, !srcloc !3234
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !3235, !srcloc !3236
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3237, !srcloc !3238
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !3239, !srcloc !3240
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !3241, !srcloc !3242
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !3243, !srcloc !3244
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #23, !dbg !3245, !srcloc !3246
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !3247, !srcloc !3248
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !3249, !srcloc !3250
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !3251, !srcloc !3252
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !3253, !srcloc !3254
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !3255, !srcloc !3256
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !3257, !srcloc !3258
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !3259, !srcloc !3260
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !3261, !srcloc !3262
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -149) #23, !dbg !3263, !srcloc !3264
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3265, !srcloc !3266
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #23, !dbg !3267, !srcloc !3268
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -133) #23, !dbg !3269, !srcloc !3270
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -161) #23, !dbg !3271, !srcloc !3272
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #23, !dbg !3273, !srcloc !3274
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3275, !srcloc !3276
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !3277, !srcloc !3278
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !3279, !srcloc !3280
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !3281, !srcloc !3282
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !3283, !srcloc !3286
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !3287, !srcloc !3288
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3289, !srcloc !3290
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3291, !srcloc !3292
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3293, !srcloc !3294
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3295, !srcloc !3296
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !3297, !srcloc !3298
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !3299, !srcloc !3300
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !3301, !srcloc !3302
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !3303, !srcloc !3304
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3305, !srcloc !3306
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3307, !srcloc !3308
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3309, !srcloc !3310
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3311, !srcloc !3312
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3313, !srcloc !3314
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3315, !srcloc !3316
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !3317, !srcloc !3318
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !3319, !srcloc !3320
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !3321, !srcloc !3322
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !3323, !srcloc !3324
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !3325, !srcloc !3326
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !3327, !srcloc !3328
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3329, !srcloc !3330
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #23, !dbg !3331, !srcloc !3332
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -161) #23, !dbg !3333, !srcloc !3334
  ret void, !dbg !3335
}

; Function Attrs: noinline nounwind optsize
define internal void @_test_pytest_test_pytest_wrapper(i8* nocapture noundef readnone %0) #1 !dbg !3338 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3340, metadata !DIExpression()), !dbg !3341
  tail call fastcc void @test_pytest_test_pytest() #24, !dbg !3342
  ret void, !dbg !3342
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind optsize
define internal fastcc void @test_pytest_test_pytest() unnamed_addr #1 !dbg !3343 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i32 0, i32 0)) #25, !dbg !3344
  ret void, !dbg !3345
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !3346 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !3361, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i8* %0, metadata !3357, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i32 %1, metadata !3358, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i32 %2, metadata !3359, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i8* %3, metadata !3360, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i8* %0, metadata !3362, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i8* %0, metadata !3363, metadata !DIExpression()), !dbg !3424
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !3425
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #23, !dbg !3425
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !3366, metadata !DIExpression()), !dbg !3426
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !3427
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #23, !dbg !3427
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !3368, metadata !DIExpression()), !dbg !3428
  call void @llvm.dbg.value(metadata i32 0, metadata !3369, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i32 0, metadata !3370, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i32 0, metadata !3371, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i32 -1, metadata !3372, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i8 0, metadata !3375, metadata !DIExpression()), !dbg !3424
  %12 = and i32 %2, 4, !dbg !3429
  %13 = icmp eq i32 %12, 0, !dbg !3430
  call void @llvm.dbg.value(metadata i1 %13, metadata !3376, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3424
  %14 = lshr i32 %2, 3, !dbg !3431
  %15 = and i32 %14, 7, !dbg !3431
  %16 = add nuw nsw i32 %15, 1, !dbg !3432
  call void @llvm.dbg.value(metadata i32 %16, metadata !3377, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i8 0, metadata !3378, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i8* %0, metadata !3379, metadata !DIExpression()), !dbg !3424
  %17 = ptrtoint i8* %0 to i32, !dbg !3433
  %18 = and i32 %17, 3, !dbg !3435
  %19 = icmp eq i32 %18, 0, !dbg !3435
  br i1 %19, label %20, label %320, !dbg !3436

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3437
  call void @llvm.dbg.value(metadata i8* %21, metadata !3363, metadata !DIExpression()), !dbg !3424
  %22 = icmp eq i8* %0, null, !dbg !3438
  %23 = and i32 %1, 7, !dbg !3440
  %24 = sub nuw nsw i32 8, %23, !dbg !3440
  %25 = select i1 %22, i32 %23, i32 0, !dbg !3440
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !3440
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !3440
  call void @llvm.dbg.value(metadata i32 %27, metadata !3358, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i8* %26, metadata !3363, metadata !DIExpression()), !dbg !3424
  br i1 %22, label %33, label %28, !dbg !3441

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !3443
  %30 = sub i32 4, %17, !dbg !3443
  %31 = add i32 %30, %29, !dbg !3444
  %32 = icmp ugt i32 %31, %27, !dbg !3445
  br i1 %32, label %320, label %33, !dbg !3446

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !3447
  call void @llvm.dbg.value(metadata i8* %34, metadata !3360, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i8* %3, metadata !3374, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i32 4, metadata !3365, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i32 4, metadata !3364, metadata !DIExpression()), !dbg !3424
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !3448

38:                                               ; preds = %63, %219
  %39 = phi i8 [ %224, %219 ], [ %64, %63 ]
  %40 = phi i8* [ %223, %219 ], [ %65, %63 ]
  %41 = phi i8* [ %221, %219 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %219 ], [ %67, %63 ]
  %43 = phi i8* [ %222, %219 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %219 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %219 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %219 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !3361, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i8* %42, metadata !3360, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i8* %43, metadata !3363, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i32 %44, metadata !3364, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i32 %45, metadata !3365, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i32 %72, metadata !3372, metadata !DIExpression()), !dbg !3424
  br i1 %46, label %73, label %47, !dbg !3449

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !3450
  %49 = zext i1 %48 to i32, !dbg !3454
  %50 = add nsw i32 %72, %49, !dbg !3454
  %51 = select i1 %48, i32 4, i32 %45, !dbg !3454
  %52 = select i1 %48, i32 4, i32 %44, !dbg !3454
  call void @llvm.dbg.value(metadata i32 %52, metadata !3364, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i32 %51, metadata !3365, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i8 poison, metadata !3375, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i32 %50, metadata !3372, metadata !DIExpression()), !dbg !3424
  br label %53, !dbg !3455

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !3361, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i8* %40, metadata !3360, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i8* %58, metadata !3363, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i32 %57, metadata !3364, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i32 %56, metadata !3365, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i8 poison, metadata !3375, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i32 %54, metadata !3372, metadata !DIExpression()), !dbg !3424
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3456
  call void @llvm.dbg.value(metadata i8* %60, metadata !3360, metadata !DIExpression()), !dbg !3424
  %61 = load i8, i8* %60, align 1, !dbg !3458
  %62 = icmp eq i8 %61, 0, !dbg !3459
  br i1 %62, label %226, label %63, !dbg !3460, !llvm.loop !3461

63:                                               ; preds = %192, %53
  %64 = phi i8 [ %61, %53 ], [ %199, %192 ]
  %65 = phi i8* [ %60, %53 ], [ %198, %192 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %192 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %192 ]
  %68 = phi i8* [ %58, %53 ], [ %197, %192 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %192 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %192 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %192 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %192 ]
  br label %38, !dbg !3449

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !3464

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3375, metadata !DIExpression()), !dbg !3424
  %75 = add nsw i32 %72, -1, !dbg !3465
  call void @llvm.dbg.value(metadata i32 %75, metadata !3372, metadata !DIExpression()), !dbg !3424
  br label %53, !dbg !3466

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !3467

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3365, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i32 4, metadata !3364, metadata !DIExpression()), !dbg !3424
  br label %53, !dbg !3468

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3365, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i32 4, metadata !3364, metadata !DIExpression()), !dbg !3424
  br label %53, !dbg !3469

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !3470
  %81 = icmp eq i8 %80, 108, !dbg !3472
  br i1 %81, label %82, label %109, !dbg !3473

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !3474
  %84 = load i8, i8* %83, align 1, !dbg !3474
  %85 = icmp eq i8 %84, 108, !dbg !3477
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !3478
  %89 = add i32 %88, 7, !dbg !3478
  %90 = and i32 %89, -8, !dbg !3478
  %91 = inttoptr i32 %90 to i8*, !dbg !3478
  %92 = inttoptr i32 %90 to double*, !dbg !3478
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !3478
  %94 = load double, double* %92, align 8, !dbg !3478
  call void @llvm.dbg.value(metadata i8* %93, metadata !3361, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i32 8, metadata !3364, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i32 8, metadata !3365, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata double %94, metadata !3392, metadata !DIExpression()), !dbg !3480
  %95 = ptrtoint i8* %43 to i32, !dbg !3481
  %96 = add i32 %95, 7, !dbg !3481
  %97 = and i32 %96, -8, !dbg !3481
  %98 = inttoptr i32 %97 to i8*, !dbg !3482
  call void @llvm.dbg.value(metadata i8* %98, metadata !3363, metadata !DIExpression()), !dbg !3424
  br i1 %22, label %104, label %99, !dbg !3483

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !3484
  %101 = icmp ugt i32 %100, %196, !dbg !3488
  br i1 %101, label %320, label %102, !dbg !3489

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !3490
  store double %94, double* %103, align 8, !dbg !3490
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !3493
  call void @llvm.dbg.value(metadata i8* %105, metadata !3363, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i8 poison, metadata !3375, metadata !DIExpression()), !dbg !3424
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3375, metadata !DIExpression()), !dbg !3424
  br label %53, !dbg !3494

107:                                              ; preds = %73, %73
  br label %109, !dbg !3495

108:                                              ; preds = %73
  br label %109, !dbg !3495

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !3424
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !3424
  call void @llvm.dbg.value(metadata i32 %113, metadata !3364, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i32 %112, metadata !3365, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i8 poison, metadata !3378, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i8 poison, metadata !3375, metadata !DIExpression()), !dbg !3424
  %114 = ptrtoint i8* %43 to i32, !dbg !3495
  %115 = add i32 %114, -1, !dbg !3495
  %116 = add i32 %115, %112, !dbg !3495
  %117 = sub i32 0, %112, !dbg !3495
  %118 = and i32 %116, %117, !dbg !3495
  %119 = inttoptr i32 %118 to i8*, !dbg !3496
  call void @llvm.dbg.value(metadata i8* %119, metadata !3363, metadata !DIExpression()), !dbg !3424
  br i1 %22, label %124, label %120, !dbg !3497

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !3499
  %122 = add i32 %121, %118, !dbg !3500
  %123 = icmp ugt i32 %122, %196, !dbg !3501
  br i1 %123, label %320, label %124, !dbg !3502

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %201, !dbg !3503

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !3496
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3504
  call void @llvm.dbg.value(metadata i8* %127, metadata !3361, metadata !DIExpression()), !dbg !3424
  %128 = bitcast i8* %41 to i8**, !dbg !3504
  %129 = load i8*, i8** %128, align 4, !dbg !3504
  call void @llvm.dbg.value(metadata i8* %129, metadata !3374, metadata !DIExpression()), !dbg !3424
  br label %130, !dbg !3505

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !3424
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !3506
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !3424
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %194, %125 ], !dbg !3507
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !3424
  %137 = phi i32 [ 0, %33 ], [ %195, %125 ], !dbg !3424
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !3424
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !3424
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !3424
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !3424
  %142 = phi i32 [ %27, %33 ], [ %196, %125 ], !dbg !3508
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !3361, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i32 %142, metadata !3358, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i8* %141, metadata !3360, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i8* %140, metadata !3363, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i32 %139, metadata !3364, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i32 %138, metadata !3365, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i32 %137, metadata !3369, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i32 %136, metadata !3377, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i32 %135, metadata !3370, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i8 poison, metadata !3375, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i8* %133, metadata !3374, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i32 %132, metadata !3372, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i32 %131, metadata !3371, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.label(metadata !3423), !dbg !3510
  br i1 %22, label %146, label %144, !dbg !3511

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !3512
  store i8* %133, i8** %145, align 4, !dbg !3515
  br label %146, !dbg !3516

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !3517
  call void @llvm.dbg.value(metadata i32 %147, metadata !3377, metadata !DIExpression()), !dbg !3424
  %148 = icmp sgt i32 %136, 0, !dbg !3518
  br i1 %148, label %152, label %149, !dbg !3519

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #24, !dbg !3520
  %151 = zext i1 %150 to i32, !dbg !3520
  br label %152, !dbg !3519

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !3519
  %154 = icmp eq i32 %153, 0, !dbg !3519
  call void @llvm.dbg.value(metadata i1 %154, metadata !3401, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3521
  call void @llvm.dbg.value(metadata i1 %36, metadata !3404, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3521
  %155 = or i1 %36, %154, !dbg !3522
  br i1 %155, label %156, label %192, !dbg !3522

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !3523
  %158 = sub i32 %157, %17, !dbg !3523
  %159 = lshr i32 %158, 2, !dbg !3524
  call void @llvm.dbg.value(metadata i32 %159, metadata !3405, metadata !DIExpression()), !dbg !3525
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !3526
  br i1 %161, label %162, label %163, !dbg !3526

162:                                              ; preds = %156
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 635) #25, !dbg !3528
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i32 0, i32 0)) #25, !dbg !3528
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 635) #25, !dbg !3528
  unreachable, !dbg !3528

163:                                              ; preds = %156
  %164 = icmp ugt i32 %137, 15, !dbg !3533
  br i1 %164, label %165, label %166, !dbg !3535

165:                                              ; preds = %163
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 640) #25, !dbg !3536
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i32 0, i32 0)) #25, !dbg !3536
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 640) #25, !dbg !3536
  unreachable, !dbg !3536

166:                                              ; preds = %163
  br i1 %22, label %177, label %167, !dbg !3541

167:                                              ; preds = %166
  %168 = trunc i32 %159 to i8, !dbg !3542
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !3545
  store i8 %168, i8* %169, align 1, !dbg !3546
  %170 = trunc i32 %132 to i8, !dbg !3547
  %171 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !3548
  store i8 %170, i8* %171, align 1, !dbg !3549
  br i1 %154, label %175, label %172, !dbg !3550

172:                                              ; preds = %167
  %173 = or i8 %168, -128, !dbg !3551
  store i8 %173, i8* %169, align 1, !dbg !3551
  %174 = add i32 %131, 1, !dbg !3554
  call void @llvm.dbg.value(metadata i32 %174, metadata !3371, metadata !DIExpression()), !dbg !3424
  br label %187, !dbg !3555

175:                                              ; preds = %167
  %176 = add i32 %135, 1, !dbg !3556
  call void @llvm.dbg.value(metadata i32 %176, metadata !3370, metadata !DIExpression()), !dbg !3424
  br label %187

177:                                              ; preds = %166
  br i1 %154, label %180, label %178, !dbg !3558

178:                                              ; preds = %177
  %179 = add i32 %142, 1, !dbg !3559
  call void @llvm.dbg.value(metadata i32 %179, metadata !3358, metadata !DIExpression()), !dbg !3424
  br label %187, !dbg !3562

180:                                              ; preds = %177
  br i1 %13, label %183, label %181, !dbg !3563

181:                                              ; preds = %180
  %182 = add i32 %142, 2, !dbg !3564
  call void @llvm.dbg.value(metadata i32 %182, metadata !3358, metadata !DIExpression()), !dbg !3424
  br label %187, !dbg !3567

183:                                              ; preds = %180
  %184 = tail call i32 @strlen(i8* noundef %133) #25, !dbg !3568
  %185 = add i32 %142, 2, !dbg !3570
  %186 = add i32 %185, %184, !dbg !3571
  call void @llvm.dbg.value(metadata i32 %186, metadata !3358, metadata !DIExpression()), !dbg !3424
  br label %187

187:                                              ; preds = %178, %183, %181, %172, %175
  %188 = phi i32 [ %174, %172 ], [ %131, %175 ], [ %131, %178 ], [ %131, %181 ], [ %131, %183 ], !dbg !3424
  %189 = phi i32 [ %135, %172 ], [ %176, %175 ], [ %135, %178 ], [ %135, %181 ], [ %135, %183 ], !dbg !3424
  %190 = phi i32 [ %142, %172 ], [ %142, %175 ], [ %179, %178 ], [ %182, %181 ], [ %186, %183 ], !dbg !3424
  call void @llvm.dbg.value(metadata i32 %190, metadata !3358, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i32 %189, metadata !3370, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i32 %188, metadata !3371, metadata !DIExpression()), !dbg !3424
  %191 = add nuw nsw i32 %137, 1, !dbg !3572
  call void @llvm.dbg.value(metadata i32 %191, metadata !3369, metadata !DIExpression()), !dbg !3424
  br label %192

192:                                              ; preds = %152, %187
  %193 = phi i32 [ %188, %187 ], [ %131, %152 ], !dbg !3424
  %194 = phi i32 [ %189, %187 ], [ %135, %152 ], !dbg !3507
  %195 = phi i32 [ %191, %187 ], [ %137, %152 ], !dbg !3424
  %196 = phi i32 [ %190, %187 ], [ %142, %152 ], !dbg !3508
  call void @llvm.dbg.value(metadata i32 %196, metadata !3358, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i32 %195, metadata !3369, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i32 %194, metadata !3370, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i32 %193, metadata !3371, metadata !DIExpression()), !dbg !3424
  %197 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !3573
  call void @llvm.dbg.value(metadata i8* %197, metadata !3363, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i8* %143, metadata !3361, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i8* %141, metadata !3360, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i32 %139, metadata !3364, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i32 %138, metadata !3365, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i8 poison, metadata !3378, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i8 poison, metadata !3375, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i32 %132, metadata !3372, metadata !DIExpression()), !dbg !3424
  %198 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !3456
  call void @llvm.dbg.value(metadata i8* %198, metadata !3360, metadata !DIExpression()), !dbg !3424
  %199 = load i8, i8* %198, align 1, !dbg !3458
  %200 = icmp eq i8 %199, 0, !dbg !3459
  br i1 %200, label %226, label %63, !dbg !3460

201:                                              ; preds = %124
  switch i32 %113, label %218 [
    i32 4, label %202
    i32 8, label %208
  ], !dbg !3574

202:                                              ; preds = %201
  %203 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3575
  call void @llvm.dbg.value(metadata i8* %203, metadata !3361, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i32 undef, metadata !3408, metadata !DIExpression()), !dbg !3576
  br i1 %22, label %219, label %204, !dbg !3577

204:                                              ; preds = %202
  %205 = bitcast i8* %41 to i32*, !dbg !3575
  %206 = load i32, i32* %205, align 4, !dbg !3575
  call void @llvm.dbg.value(metadata i32 %206, metadata !3408, metadata !DIExpression()), !dbg !3576
  %207 = inttoptr i32 %118 to i32*, !dbg !3578
  store i32 %206, i32* %207, align 4, !dbg !3581
  br label %219, !dbg !3582

208:                                              ; preds = %201
  %209 = ptrtoint i8* %41 to i32, !dbg !3583
  %210 = add i32 %209, 7, !dbg !3583
  %211 = and i32 %210, -8, !dbg !3583
  %212 = inttoptr i32 %211 to i8*, !dbg !3583
  %213 = getelementptr inbounds i8, i8* %212, i32 8, !dbg !3583
  call void @llvm.dbg.value(metadata i8* %213, metadata !3361, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i64 undef, metadata !3414, metadata !DIExpression()), !dbg !3584
  br i1 %22, label %219, label %214, !dbg !3585

214:                                              ; preds = %208
  %215 = inttoptr i32 %211 to i64*, !dbg !3583
  %216 = load i64, i64* %215, align 8, !dbg !3583
  call void @llvm.dbg.value(metadata i64 %216, metadata !3414, metadata !DIExpression()), !dbg !3584
  %217 = inttoptr i32 %118 to i64*, !dbg !3586
  store i64 %216, i64* %217, align 8, !dbg !3591
  br label %219, !dbg !3592

218:                                              ; preds = %201
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 709) #25, !dbg !3593
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i32 0, i32 0), i32 noundef %113) #25, !dbg !3593
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 709) #25, !dbg !3593
  unreachable, !dbg !3593

219:                                              ; preds = %208, %214, %202, %204
  %220 = phi i32 [ 4, %204 ], [ 4, %202 ], [ 8, %214 ], [ 8, %208 ]
  %221 = phi i8* [ %203, %204 ], [ %203, %202 ], [ %213, %214 ], [ %213, %208 ], !dbg !3598
  %222 = getelementptr inbounds i8, i8* %119, i32 %220, !dbg !3598
  call void @llvm.dbg.value(metadata i8* %221, metadata !3361, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i8* %40, metadata !3360, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i8* %222, metadata !3363, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i32 %113, metadata !3364, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i32 %112, metadata !3365, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i8 poison, metadata !3378, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i8 poison, metadata !3375, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i32 %72, metadata !3372, metadata !DIExpression()), !dbg !3424
  %223 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3456
  call void @llvm.dbg.value(metadata i8* %223, metadata !3360, metadata !DIExpression()), !dbg !3424
  %224 = load i8, i8* %223, align 1, !dbg !3458
  %225 = icmp eq i8 %224, 0, !dbg !3459
  br i1 %225, label %226, label %38, !dbg !3460

226:                                              ; preds = %192, %219, %53
  %227 = phi i8* [ %222, %219 ], [ %58, %53 ], [ %197, %192 ], !dbg !3599
  %228 = ptrtoint i8* %227 to i32, !dbg !3600
  %229 = sub i32 %228, %17, !dbg !3600
  %230 = lshr i32 %229, 2, !dbg !3602
  %231 = icmp ugt i32 %229, 1023, !dbg !3603
  br i1 %231, label %232, label %233, !dbg !3604

232:                                              ; preds = %226
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 721) #25, !dbg !3605
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i32 0, i32 0)) #25, !dbg !3605
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 721) #25, !dbg !3605
  unreachable, !dbg !3605

233:                                              ; preds = %226
  br i1 %22, label %234, label %237, !dbg !3610

234:                                              ; preds = %233
  %235 = add i32 %196, -8, !dbg !3611
  %236 = add i32 %235, %229, !dbg !3614
  br label %320, !dbg !3615

237:                                              ; preds = %233
  %238 = trunc i32 %230 to i8, !dbg !3616
  store i8 %238, i8* %0, align 1, !dbg !3617
  %239 = trunc i32 %194 to i8, !dbg !3618
  %240 = select i1 %13, i8 %239, i8 0
  %241 = select i1 %13, i8 0, i8 %239
  %242 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !3620
  store i8 %240, i8* %242, align 1, !dbg !3622
  %243 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3623
  store i8 %241, i8* %243, align 1, !dbg !3624
  %244 = trunc i32 %193 to i8, !dbg !3625
  %245 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3626
  store i8 %244, i8* %245, align 1, !dbg !3627
  %246 = icmp eq i32 %193, 0, !dbg !3628
  %247 = xor i1 %246, true, !dbg !3629
  %248 = icmp ne i32 %195, 0
  %249 = select i1 %247, i1 %248, i1 false, !dbg !3629
  call void @llvm.dbg.value(metadata i8* %227, metadata !3363, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i32 0, metadata !3373, metadata !DIExpression()), !dbg !3424
  br i1 %249, label %250, label %269, !dbg !3629

250:                                              ; preds = %237
  %251 = sub i32 1, %17
  br label %252, !dbg !3630

252:                                              ; preds = %250, %265
  %253 = phi i8* [ %227, %250 ], [ %266, %265 ]
  %254 = phi i32 [ 0, %250 ], [ %267, %265 ]
  call void @llvm.dbg.value(metadata i8* %253, metadata !3363, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i32 %254, metadata !3373, metadata !DIExpression()), !dbg !3424
  %255 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %254, !dbg !3631
  %256 = load i8, i8* %255, align 1, !dbg !3631
  %257 = icmp sgt i8 %256, -1, !dbg !3633
  br i1 %257, label %265, label %258, !dbg !3634

258:                                              ; preds = %252
  call void @llvm.dbg.value(metadata i8 %256, metadata !3417, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3635
  %259 = ptrtoint i8* %253 to i32, !dbg !3636
  %260 = add i32 %251, %259, !dbg !3638
  %261 = icmp ugt i32 %260, %196, !dbg !3639
  br i1 %261, label %320, label %262, !dbg !3640

262:                                              ; preds = %258
  %263 = and i8 %256, 127, !dbg !3641
  call void @llvm.dbg.value(metadata i8 %263, metadata !3417, metadata !DIExpression()), !dbg !3635
  %264 = getelementptr inbounds i8, i8* %253, i32 1, !dbg !3642
  call void @llvm.dbg.value(metadata i8* %264, metadata !3363, metadata !DIExpression()), !dbg !3424
  store i8 %263, i8* %253, align 1, !dbg !3643
  br label %265

265:                                              ; preds = %262, %252
  %266 = phi i8* [ %264, %262 ], [ %253, %252 ], !dbg !3573
  call void @llvm.dbg.value(metadata i8* %266, metadata !3363, metadata !DIExpression()), !dbg !3424
  %267 = add nuw i32 %254, 1, !dbg !3644
  call void @llvm.dbg.value(metadata i32 %267, metadata !3373, metadata !DIExpression()), !dbg !3424
  %268 = icmp eq i32 %267, %195, !dbg !3645
  br i1 %268, label %269, label %252, !dbg !3630, !llvm.loop !3646

269:                                              ; preds = %265, %237
  %270 = phi i8* [ %227, %237 ], [ %266, %265 ], !dbg !3573
  call void @llvm.dbg.value(metadata i8* %270, metadata !3363, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i32 0, metadata !3373, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i8* %133, metadata !3374, metadata !DIExpression()), !dbg !3424
  %271 = icmp eq i32 %195, 0, !dbg !3648
  br i1 %271, label %316, label %272, !dbg !3651

272:                                              ; preds = %269
  %273 = sub i32 1, %17
  br label %274, !dbg !3651

274:                                              ; preds = %272, %311
  %275 = phi i8* [ %270, %272 ], [ %313, %311 ]
  %276 = phi i8* [ %133, %272 ], [ %312, %311 ]
  %277 = phi i32 [ 0, %272 ], [ %314, %311 ]
  call void @llvm.dbg.value(metadata i8* %275, metadata !3363, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i8* %276, metadata !3374, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i32 %277, metadata !3373, metadata !DIExpression()), !dbg !3424
  br i1 %246, label %282, label %278, !dbg !3652

278:                                              ; preds = %274
  %279 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3655
  %280 = load i8, i8* %279, align 1, !dbg !3655
  %281 = icmp sgt i8 %280, -1, !dbg !3656
  br i1 %281, label %282, label %311, !dbg !3657

282:                                              ; preds = %278, %274
  br i1 %13, label %287, label %283, !dbg !3658

283:                                              ; preds = %282
  call void @llvm.dbg.value(metadata i32 0, metadata !3364, metadata !DIExpression()), !dbg !3424
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %277, !dbg !3659
  %285 = load i8, i8* %284, align 1, !dbg !3659
  %286 = getelementptr inbounds i8, i8* %275, i32 1, !dbg !3662
  call void @llvm.dbg.value(metadata i8* %286, metadata !3363, metadata !DIExpression()), !dbg !3424
  store i8 %285, i8* %275, align 1, !dbg !3663
  br label %297, !dbg !3664

287:                                              ; preds = %282
  %288 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3665
  %289 = load i8, i8* %288, align 1, !dbg !3665
  %290 = zext i8 %289 to i32, !dbg !3665
  %291 = shl nuw nsw i32 %290, 2, !dbg !3667
  %292 = getelementptr inbounds i8, i8* %0, i32 %291, !dbg !3668
  %293 = bitcast i8* %292 to i8**, !dbg !3669
  %294 = load i8*, i8** %293, align 4, !dbg !3669
  call void @llvm.dbg.value(metadata i8* %294, metadata !3374, metadata !DIExpression()), !dbg !3424
  store i8* null, i8** %293, align 4, !dbg !3670
  %295 = tail call i32 @strlen(i8* noundef %294) #25, !dbg !3671
  %296 = add i32 %295, 1, !dbg !3672
  call void @llvm.dbg.value(metadata i32 %296, metadata !3364, metadata !DIExpression()), !dbg !3424
  br label %297

297:                                              ; preds = %287, %283
  %298 = phi i8* [ %276, %283 ], [ %294, %287 ], !dbg !3424
  %299 = phi i32 [ 0, %283 ], [ %296, %287 ], !dbg !3673
  %300 = phi i8* [ %286, %283 ], [ %275, %287 ], !dbg !3424
  call void @llvm.dbg.value(metadata i8* %300, metadata !3363, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i32 %299, metadata !3364, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i8* %298, metadata !3374, metadata !DIExpression()), !dbg !3424
  %301 = ptrtoint i8* %300 to i32, !dbg !3674
  %302 = add i32 %273, %299, !dbg !3676
  %303 = add i32 %302, %301, !dbg !3677
  %304 = icmp ugt i32 %303, %196, !dbg !3678
  br i1 %304, label %320, label %305, !dbg !3679

305:                                              ; preds = %297
  %306 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3680
  %307 = load i8, i8* %306, align 1, !dbg !3680
  %308 = getelementptr inbounds i8, i8* %300, i32 1, !dbg !3681
  call void @llvm.dbg.value(metadata i8* %308, metadata !3363, metadata !DIExpression()), !dbg !3424
  store i8 %307, i8* %300, align 1, !dbg !3682
  %309 = tail call i8* @memcpy(i8* noundef nonnull %308, i8* noundef %298, i32 noundef %299) #25, !dbg !3683
  %310 = getelementptr inbounds i8, i8* %308, i32 %299, !dbg !3684
  call void @llvm.dbg.value(metadata i8* %310, metadata !3363, metadata !DIExpression()), !dbg !3424
  br label %311, !dbg !3685

311:                                              ; preds = %278, %305
  %312 = phi i8* [ %276, %278 ], [ %298, %305 ], !dbg !3686
  %313 = phi i8* [ %275, %278 ], [ %310, %305 ], !dbg !3424
  call void @llvm.dbg.value(metadata i8* %313, metadata !3363, metadata !DIExpression()), !dbg !3424
  call void @llvm.dbg.value(metadata i8* %312, metadata !3374, metadata !DIExpression()), !dbg !3424
  %314 = add nuw i32 %277, 1, !dbg !3687
  call void @llvm.dbg.value(metadata i32 %314, metadata !3373, metadata !DIExpression()), !dbg !3424
  %315 = icmp eq i32 %314, %195, !dbg !3648
  br i1 %315, label %316, label %274, !dbg !3651, !llvm.loop !3688

316:                                              ; preds = %311, %269
  %317 = phi i8* [ %270, %269 ], [ %313, %311 ], !dbg !3573
  %318 = ptrtoint i8* %317 to i32, !dbg !3690
  %319 = sub i32 %318, %17, !dbg !3690
  br label %320, !dbg !3691

320:                                              ; preds = %120, %99, %258, %297, %28, %5, %316, %234
  %321 = phi i32 [ %236, %234 ], [ %319, %316 ], [ -14, %5 ], [ -28, %28 ], [ -28, %297 ], [ -28, %258 ], [ -28, %99 ], [ -28, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #23, !dbg !3692
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #23, !dbg !3692
  ret i32 %321, !dbg !3692
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #4 !dbg !3693 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3697, metadata !DIExpression()), !dbg !3698
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #24, !dbg !3699
  ret i1 %2, !dbg !3700
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #4 !dbg !3701 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3704, metadata !DIExpression()), !dbg !3705
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !3706
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !3707
  %4 = and i1 %2, %3, !dbg !3707
  ret i1 %4, !dbg !3708
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !3709 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3713, metadata !DIExpression()), !dbg !3719
  call void @llvm.dbg.value(metadata i32 %1, metadata !3714, metadata !DIExpression()), !dbg !3719
  call void @llvm.dbg.value(metadata i32 %2, metadata !3715, metadata !DIExpression()), !dbg !3719
  call void @llvm.dbg.value(metadata i8* %3, metadata !3716, metadata !DIExpression()), !dbg !3719
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !3720
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #23, !dbg !3720
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !3717, metadata !DIExpression()), !dbg !3721
  call void @llvm.va_start(i8* nonnull %6), !dbg !3722
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !3723
  %8 = load i32, i32* %7, align 4, !dbg !3723
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !3723
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #24, !dbg !3723
  call void @llvm.dbg.value(metadata i32 %10, metadata !3718, metadata !DIExpression()), !dbg !3719
  call void @llvm.va_end(i8* nonnull %6), !dbg !3724
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #23, !dbg !3725
  ret i32 %10, !dbg !3726
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #5

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !3727 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3739, metadata !DIExpression()), !dbg !3758
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3740, metadata !DIExpression()), !dbg !3758
  call void @llvm.dbg.value(metadata i8* %2, metadata !3741, metadata !DIExpression()), !dbg !3758
  call void @llvm.dbg.value(metadata i8* %3, metadata !3742, metadata !DIExpression()), !dbg !3758
  call void @llvm.dbg.value(metadata i8* %3, metadata !3743, metadata !DIExpression()), !dbg !3758
  call void @llvm.dbg.value(metadata i8* %3, metadata !3744, metadata !DIExpression()), !dbg !3758
  %5 = icmp eq i8* %3, null, !dbg !3759
  br i1 %5, label %45, label %6, !dbg !3761

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !3753, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3758
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !3762
  %8 = load i8, i8* %7, align 1, !dbg !3762
  %9 = zext i8 %8 to i32, !dbg !3763
  call void @llvm.dbg.value(metadata i32 %9, metadata !3754, metadata !DIExpression()), !dbg !3758
  call void @llvm.dbg.value(metadata i8 undef, metadata !3755, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3758
  call void @llvm.dbg.value(metadata i8 undef, metadata !3756, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3758
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !3750, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3758
  call void @llvm.dbg.value(metadata i32 0, metadata !3752, metadata !DIExpression()), !dbg !3758
  %10 = icmp eq i8 %8, 0, !dbg !3764
  br i1 %10, label %39, label %11, !dbg !3767

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !3768
  call void @llvm.dbg.value(metadata i8 %12, metadata !3753, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3758
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !3750, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3758
  %13 = zext i8 %12 to i32, !dbg !3769
  call void @llvm.dbg.value(metadata i32 %13, metadata !3753, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3758
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !3750, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3758
  %14 = shl nuw nsw i32 %13, 2, !dbg !3770
  call void @llvm.dbg.value(metadata i32 %14, metadata !3753, metadata !DIExpression()), !dbg !3758
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !3750, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3758
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !3771
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !3750, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3758
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !3772
  %17 = load i8, i8* %16, align 1, !dbg !3772
  call void @llvm.dbg.value(metadata i8 %17, metadata !3755, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3758
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !3750, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3758
  %18 = zext i8 %17 to i32, !dbg !3773
  call void @llvm.dbg.value(metadata i32 %18, metadata !3755, metadata !DIExpression()), !dbg !3758
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !3750, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3758
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !3774
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !3750, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3758
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !3775
  %21 = load i8, i8* %20, align 1, !dbg !3775
  call void @llvm.dbg.value(metadata i8 %21, metadata !3756, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3758
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !3750, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3758
  %22 = zext i8 %21 to i32, !dbg !3776
  call void @llvm.dbg.value(metadata i32 %22, metadata !3756, metadata !DIExpression()), !dbg !3758
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !3750, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3758
  %23 = shl nuw nsw i32 %22, 1, !dbg !3777
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !3750, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3758
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !3778
  call void @llvm.dbg.value(metadata i8* %24, metadata !3750, metadata !DIExpression()), !dbg !3758
  br label %25, !dbg !3767

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !3750, metadata !DIExpression()), !dbg !3758
  call void @llvm.dbg.value(metadata i32 %27, metadata !3752, metadata !DIExpression()), !dbg !3758
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !3779
  call void @llvm.dbg.value(metadata i8* %28, metadata !3750, metadata !DIExpression()), !dbg !3758
  %29 = load i8, i8* %26, align 1, !dbg !3781
  %30 = zext i8 %29 to i32, !dbg !3781
  call void @llvm.dbg.value(metadata i32 %30, metadata !3757, metadata !DIExpression()), !dbg !3758
  %31 = shl nuw nsw i32 %30, 2, !dbg !3782
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !3783
  %33 = bitcast i8* %32 to i8**, !dbg !3784
  call void @llvm.dbg.value(metadata i8** %33, metadata !3751, metadata !DIExpression()), !dbg !3758
  store i8* %28, i8** %33, align 4, !dbg !3785
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #25, !dbg !3786
  %35 = add i32 %34, 1, !dbg !3787
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !3788
  call void @llvm.dbg.value(metadata i8* %36, metadata !3750, metadata !DIExpression()), !dbg !3758
  %37 = add nuw nsw i32 %27, 1, !dbg !3789
  call void @llvm.dbg.value(metadata i32 %37, metadata !3752, metadata !DIExpression()), !dbg !3758
  %38 = icmp eq i32 %37, %9, !dbg !3764
  br i1 %38, label %39, label %25, !dbg !3767, !llvm.loop !3790

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !3792
  call void @llvm.dbg.value(metadata i8* %40, metadata !3743, metadata !DIExpression()), !dbg !3758
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !3793
  %42 = bitcast i8* %41 to i8**, !dbg !3793
  %43 = load i8*, i8** %42, align 1, !dbg !3793
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #24, !dbg !3794
  br label %45, !dbg !3795

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !3758
  ret i32 %46, !dbg !3796
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !3797 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3801, metadata !DIExpression()), !dbg !3811
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3802, metadata !DIExpression()), !dbg !3811
  call void @llvm.dbg.value(metadata i8* %2, metadata !3803, metadata !DIExpression()), !dbg !3811
  call void @llvm.dbg.value(metadata i8* %3, metadata !3804, metadata !DIExpression()), !dbg !3811
  call void @llvm.dbg.value(metadata i8* %4, metadata !3805, metadata !DIExpression()), !dbg !3811
  call void @llvm.dbg.value(metadata i8* %4, metadata !3806, metadata !DIExpression()), !dbg !3811
  %6 = ptrtoint i8* %4 to i32, !dbg !3812
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !3812
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #25, !dbg !3812
  ret i32 %8, !dbg !3813
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !3814 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3818, metadata !DIExpression()), !dbg !3823
  call void @llvm.dbg.value(metadata i32 %1, metadata !3819, metadata !DIExpression()), !dbg !3823
  call void @llvm.dbg.value(metadata i8 0, metadata !3821, metadata !DIExpression()), !dbg !3823
  call void @llvm.dbg.value(metadata i32 0, metadata !3822, metadata !DIExpression()), !dbg !3823
  call void @llvm.dbg.value(metadata i8 poison, metadata !3821, metadata !DIExpression()), !dbg !3823
  call void @llvm.dbg.value(metadata i8* %0, metadata !3818, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3823
  %3 = load i8, i8* %0, align 1, !dbg !3824
  call void @llvm.dbg.value(metadata i8 %3, metadata !3820, metadata !DIExpression()), !dbg !3823
  %4 = icmp eq i8 %3, 0, !dbg !3825
  br i1 %4, label %29, label %5, !dbg !3826

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !3827
  call void @llvm.dbg.value(metadata i32 %8, metadata !3822, metadata !DIExpression()), !dbg !3823
  br i1 %9, label %11, label %22, !dbg !3828

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !3830
  br i1 %12, label %13, label %17, !dbg !3834

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !3835
  br i1 %14, label %29, label %15, !dbg !3838

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !3839
  br i1 %16, label %29, label %22, !dbg !3841

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !3842
  %19 = xor i1 %18, true, !dbg !3844
  %20 = zext i1 %18 to i32, !dbg !3844
  %21 = add nsw i32 %8, %20, !dbg !3844
  br label %22, !dbg !3844

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !3823
  call void @llvm.dbg.value(metadata i32 %24, metadata !3822, metadata !DIExpression()), !dbg !3823
  call void @llvm.dbg.value(metadata i8 poison, metadata !3821, metadata !DIExpression()), !dbg !3823
  %25 = icmp eq i8 %6, 37, !dbg !3845
  %26 = xor i1 %25, %23, !dbg !3847
  call void @llvm.dbg.value(metadata i8* %10, metadata !3818, metadata !DIExpression()), !dbg !3823
  call void @llvm.dbg.value(metadata i8* %10, metadata !3818, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3823
  %27 = load i8, i8* %10, align 1, !dbg !3824
  call void @llvm.dbg.value(metadata i8 %27, metadata !3820, metadata !DIExpression()), !dbg !3823
  %28 = icmp eq i8 %27, 0, !dbg !3825
  br i1 %28, label %29, label %5, !dbg !3826, !llvm.loop !3848

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !3823
  ret i1 %30, !dbg !3850
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #4 !dbg !3851 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !3855, metadata !DIExpression()), !dbg !3856
  %2 = add i8 %0, -64, !dbg !3857
  %3 = icmp ult i8 %2, 59, !dbg !3857
  ret i1 %3, !dbg !3858
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !3859 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3867, metadata !DIExpression()), !dbg !3936
  call void @llvm.dbg.value(metadata i32 %1, metadata !3868, metadata !DIExpression()), !dbg !3936
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !3869, metadata !DIExpression()), !dbg !3936
  call void @llvm.dbg.value(metadata i8* %3, metadata !3870, metadata !DIExpression()), !dbg !3936
  call void @llvm.dbg.value(metadata i32 %4, metadata !3871, metadata !DIExpression()), !dbg !3936
  call void @llvm.dbg.value(metadata i16* %5, metadata !3872, metadata !DIExpression()), !dbg !3936
  call void @llvm.dbg.value(metadata i32 %6, metadata !3873, metadata !DIExpression()), !dbg !3936
  %11 = icmp eq i8* %0, null, !dbg !3937
  br i1 %11, label %12, label %13, !dbg !3940

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 916) #25, !dbg !3941
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 916) #25, !dbg !3941
  unreachable, !dbg !3941

13:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i8* %0, metadata !3874, metadata !DIExpression()), !dbg !3936
  %14 = bitcast i8* %0 to i32*, !dbg !3943
  call void @llvm.dbg.value(metadata i32* %14, metadata !3875, metadata !DIExpression()), !dbg !3936
  %15 = and i32 %4, 8, !dbg !3944
  %16 = icmp eq i32 %15, 0, !dbg !3945
  call void @llvm.dbg.value(metadata i1 %16, metadata !3879, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3936
  call void @llvm.dbg.value(metadata i8* %0, metadata !3882, metadata !DIExpression()), !dbg !3936
  %17 = icmp eq i32 %1, 0, !dbg !3946
  br i1 %17, label %18, label %20, !dbg !3947

18:                                               ; preds = %13
  %19 = tail call fastcc i32 @get_package_len(i8* noundef nonnull %0) #24, !dbg !3948
  br label %20, !dbg !3947

20:                                               ; preds = %13, %18
  %21 = phi i32 [ %19, %18 ], [ %1, %13 ], !dbg !3947
  call void @llvm.dbg.value(metadata i32 %21, metadata !3868, metadata !DIExpression()), !dbg !3936
  %22 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3949
  %23 = load i8, i8* %22, align 1, !dbg !3949
  %24 = zext i8 %23 to i32, !dbg !3950
  call void @llvm.dbg.value(metadata i32 %24, metadata !3877, metadata !DIExpression()), !dbg !3936
  %25 = icmp ne i8 %23, 0, !dbg !3951
  %26 = and i32 %4, 1, !dbg !3952
  %27 = icmp ne i32 %26, 0, !dbg !3952
  %28 = and i1 %27, %25, !dbg !3952
  call void @llvm.dbg.value(metadata i1 %28, metadata !3881, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3936
  %29 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3953
  %30 = load i8, i8* %29, align 1, !dbg !3953
  %31 = zext i8 %30 to i32, !dbg !3954
  call void @llvm.dbg.value(metadata i32 %31, metadata !3878, metadata !DIExpression()), !dbg !3936
  %32 = icmp ne i8 %30, 0, !dbg !3955
  %33 = and i32 %4, 2, !dbg !3956
  %34 = icmp ne i32 %33, 0, !dbg !3956
  %35 = and i1 %34, %32, !dbg !3956
  call void @llvm.dbg.value(metadata i1 %35, metadata !3880, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3936
  %36 = select i1 %35, i1 true, i1 %28, !dbg !3957
  br i1 %36, label %41, label %37, !dbg !3957

37:                                               ; preds = %20
  %38 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !3959
  br i1 %38, label %287, label %39, !dbg !3962

39:                                               ; preds = %37
  %40 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %21, i8* noundef %3) #25, !dbg !3963
  br label %287, !dbg !3965

41:                                               ; preds = %20
  %42 = load i8, i8* %0, align 1, !dbg !3966
  %43 = zext i8 %42 to i32, !dbg !3967
  %44 = shl nuw nsw i32 %43, 2, !dbg !3968
  call void @llvm.dbg.value(metadata i32 %44, metadata !3876, metadata !DIExpression()), !dbg !3936
  %45 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3969
  %46 = bitcast i8* %45 to i8**, !dbg !3970
  %47 = load i8*, i8** %46, align 4, !dbg !3970
  call void @llvm.dbg.value(metadata i8* %47, metadata !3885, metadata !DIExpression()), !dbg !3936
  %48 = getelementptr inbounds i8, i8* %0, i32 %44, !dbg !3971
  call void @llvm.dbg.value(metadata i8* %48, metadata !3886, metadata !DIExpression()), !dbg !3936
  call void @llvm.dbg.value(metadata i32 0, metadata !3887, metadata !DIExpression()), !dbg !3936
  %49 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !3972
  br i1 %49, label %50, label %135, !dbg !3973

50:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %21, metadata !3884, metadata !DIExpression()), !dbg !3936
  br i1 %28, label %51, label %76, !dbg !3974

51:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %21, metadata !3884, metadata !DIExpression()), !dbg !3936
  call void @llvm.dbg.value(metadata i8* %48, metadata !3886, metadata !DIExpression()), !dbg !3936
  call void @llvm.dbg.value(metadata i32 0, metadata !3887, metadata !DIExpression()), !dbg !3936
  call void @llvm.dbg.value(metadata i32 0, metadata !3888, metadata !DIExpression()), !dbg !3975
  %52 = icmp ne i16* %5, null
  br label %53, !dbg !3976

53:                                               ; preds = %51, %70
  %54 = phi i32 [ %21, %51 ], [ %72, %70 ]
  %55 = phi i8* [ %48, %51 ], [ %73, %70 ]
  %56 = phi i32 [ 0, %51 ], [ %71, %70 ]
  %57 = phi i32 [ 0, %51 ], [ %74, %70 ]
  call void @llvm.dbg.value(metadata i32 %54, metadata !3884, metadata !DIExpression()), !dbg !3936
  call void @llvm.dbg.value(metadata i8* %55, metadata !3886, metadata !DIExpression()), !dbg !3936
  call void @llvm.dbg.value(metadata i32 %56, metadata !3887, metadata !DIExpression()), !dbg !3936
  call void @llvm.dbg.value(metadata i32 %57, metadata !3888, metadata !DIExpression()), !dbg !3975
  %58 = load i8, i8* %55, align 1, !dbg !3977
  %59 = zext i8 %58 to i32, !dbg !3978
  %60 = getelementptr inbounds i32, i32* %14, i32 %59, !dbg !3978
  %61 = bitcast i32* %60 to i8**, !dbg !3979
  %62 = load i8*, i8** %61, align 4, !dbg !3979
  call void @llvm.dbg.value(metadata i8* %62, metadata !3894, metadata !DIExpression()), !dbg !3980
  %63 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %62, i16 noundef zeroext 0) #24, !dbg !3981
  call void @llvm.dbg.value(metadata i32 %63, metadata !3897, metadata !DIExpression()), !dbg !3980
  %64 = icmp ult i32 %56, %6
  %65 = select i1 %52, i1 %64, i1 false, !dbg !3982
  br i1 %65, label %66, label %70, !dbg !3982

66:                                               ; preds = %53
  %67 = trunc i32 %63 to i16, !dbg !3984
  %68 = add nuw i32 %56, 1, !dbg !3986
  call void @llvm.dbg.value(metadata i32 %68, metadata !3887, metadata !DIExpression()), !dbg !3936
  %69 = getelementptr inbounds i16, i16* %5, i32 %56, !dbg !3987
  store i16 %67, i16* %69, align 2, !dbg !3988
  br label %70, !dbg !3989

70:                                               ; preds = %66, %53
  %71 = phi i32 [ %68, %66 ], [ %56, %53 ], !dbg !3936
  call void @llvm.dbg.value(metadata i32 %71, metadata !3887, metadata !DIExpression()), !dbg !3936
  %72 = add nsw i32 %63, %54, !dbg !3990
  call void @llvm.dbg.value(metadata i32 %72, metadata !3884, metadata !DIExpression()), !dbg !3936
  %73 = getelementptr inbounds i8, i8* %55, i32 1, !dbg !3991
  call void @llvm.dbg.value(metadata i8* %73, metadata !3886, metadata !DIExpression()), !dbg !3936
  %74 = add nuw nsw i32 %57, 1, !dbg !3992
  call void @llvm.dbg.value(metadata i32 %74, metadata !3888, metadata !DIExpression()), !dbg !3975
  %75 = icmp eq i32 %74, %24, !dbg !3993
  br i1 %75, label %82, label %53, !dbg !3976, !llvm.loop !3994

76:                                               ; preds = %50
  %77 = and i32 %4, 4
  %78 = icmp ne i32 %77, 0
  %79 = and i1 %78, %25, !dbg !3996
  %80 = select i1 %79, i32 %24, i32 0, !dbg !3996
  %81 = getelementptr i8, i8* %48, i32 %80, !dbg !3996
  br label %82, !dbg !3996

82:                                               ; preds = %70, %76
  %83 = phi i32 [ 0, %76 ], [ %71, %70 ], !dbg !3999
  %84 = phi i8* [ %81, %76 ], [ %73, %70 ], !dbg !3936
  %85 = phi i32 [ %21, %76 ], [ %72, %70 ], !dbg !4000
  call void @llvm.dbg.value(metadata i1 undef, metadata !3898, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4001
  call void @llvm.dbg.value(metadata i32 0, metadata !3899, metadata !DIExpression()), !dbg !4002
  call void @llvm.dbg.value(metadata i32 %85, metadata !3884, metadata !DIExpression()), !dbg !3936
  call void @llvm.dbg.value(metadata i8* %84, metadata !3886, metadata !DIExpression()), !dbg !3936
  call void @llvm.dbg.value(metadata i32 %83, metadata !3887, metadata !DIExpression()), !dbg !3936
  %86 = icmp eq i8 %30, 0, !dbg !4003
  br i1 %86, label %287, label %87, !dbg !4004

87:                                               ; preds = %82
  %88 = and i32 %4, 5, !dbg !4005
  %89 = icmp eq i32 %88, 0, !dbg !4006
  call void @llvm.dbg.value(metadata i1 %89, metadata !3898, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4001
  %90 = icmp eq i32 %33, 0
  %91 = icmp eq i32 %26, 0
  %92 = icmp ne i16* %5, null
  %93 = select i1 %89, i32 -2, i32 -1
  br label %94, !dbg !4004

94:                                               ; preds = %87, %130
  %95 = phi i32 [ %85, %87 ], [ %132, %130 ]
  %96 = phi i8* [ %84, %87 ], [ %100, %130 ]
  %97 = phi i32 [ %83, %87 ], [ %131, %130 ]
  %98 = phi i32 [ 0, %87 ], [ %133, %130 ]
  call void @llvm.dbg.value(metadata i32 %95, metadata !3884, metadata !DIExpression()), !dbg !3936
  call void @llvm.dbg.value(metadata i8* %96, metadata !3886, metadata !DIExpression()), !dbg !3936
  call void @llvm.dbg.value(metadata i32 %97, metadata !3887, metadata !DIExpression()), !dbg !3936
  call void @llvm.dbg.value(metadata i32 %98, metadata !3899, metadata !DIExpression()), !dbg !4002
  %99 = getelementptr inbounds i8, i8* %96, i32 1, !dbg !4007
  call void @llvm.dbg.value(metadata i8* %99, metadata !3886, metadata !DIExpression()), !dbg !3936
  call void @llvm.dbg.value(metadata i8 undef, metadata !3901, metadata !DIExpression()), !dbg !4008
  %100 = getelementptr inbounds i8, i8* %96, i32 2, !dbg !4009
  call void @llvm.dbg.value(metadata i8* %100, metadata !3886, metadata !DIExpression()), !dbg !3936
  %101 = load i8, i8* %99, align 1, !dbg !4010
  call void @llvm.dbg.value(metadata i8 %101, metadata !3904, metadata !DIExpression()), !dbg !4008
  %102 = zext i8 %101 to i32, !dbg !4011
  %103 = getelementptr inbounds i32, i32* %14, i32 %102, !dbg !4011
  %104 = bitcast i32* %103 to i8**, !dbg !4012
  %105 = load i8*, i8** %104, align 4, !dbg !4012
  call void @llvm.dbg.value(metadata i8* %105, metadata !3905, metadata !DIExpression()), !dbg !4008
  %106 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %105) #24, !dbg !4013
  call void @llvm.dbg.value(metadata i1 %106, metadata !3906, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4008
  br i1 %16, label %113, label %107, !dbg !4014

107:                                              ; preds = %94
  %108 = load i8, i8* %96, align 1, !dbg !4016
  call void @llvm.dbg.value(metadata i8 %108, metadata !3901, metadata !DIExpression()), !dbg !4008
  %109 = zext i8 %108 to i32, !dbg !4017
  %110 = tail call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %109) #24, !dbg !4018
  br i1 %110, label %111, label %113, !dbg !4019

111:                                              ; preds = %107
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.9, i32 0, i32 0), i32 noundef 87, i8* noundef %47, i32 noundef %109) #25, !dbg !4020
  %112 = add nsw i32 %95, -2, !dbg !4026
  call void @llvm.dbg.value(metadata i32 %112, metadata !3884, metadata !DIExpression()), !dbg !3936
  br label %130, !dbg !4027

113:                                              ; preds = %107, %94
  br i1 %106, label %114, label %117, !dbg !4028

114:                                              ; preds = %113
  br i1 %91, label %115, label %118, !dbg !4029

115:                                              ; preds = %114
  %116 = add i32 %95, %93, !dbg !4031
  call void @llvm.dbg.value(metadata i32 %116, metadata !3884, metadata !DIExpression()), !dbg !3936
  br label %130, !dbg !4034

117:                                              ; preds = %113
  br i1 %90, label %130, label %118, !dbg !4035

118:                                              ; preds = %117, %114
  call void @llvm.dbg.label(metadata !3932), !dbg !4036
  %119 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %105, i16 noundef zeroext 0) #24, !dbg !4037
  call void @llvm.dbg.value(metadata i32 %119, metadata !3907, metadata !DIExpression()), !dbg !4008
  %120 = icmp ult i32 %97, %6
  %121 = select i1 %92, i1 %120, i1 false, !dbg !4038
  br i1 %121, label %122, label %126, !dbg !4038

122:                                              ; preds = %118
  %123 = trunc i32 %119 to i16, !dbg !4040
  %124 = add nuw i32 %97, 1, !dbg !4042
  call void @llvm.dbg.value(metadata i32 %124, metadata !3887, metadata !DIExpression()), !dbg !3936
  %125 = getelementptr inbounds i16, i16* %5, i32 %97, !dbg !4043
  store i16 %123, i16* %125, align 2, !dbg !4044
  br label %126, !dbg !4045

126:                                              ; preds = %122, %118
  %127 = phi i32 [ %124, %122 ], [ %97, %118 ], !dbg !3936
  call void @llvm.dbg.value(metadata i32 %127, metadata !3887, metadata !DIExpression()), !dbg !3936
  %128 = add i32 %95, -1, !dbg !4046
  %129 = add i32 %128, %119, !dbg !4047
  call void @llvm.dbg.value(metadata i32 %129, metadata !3884, metadata !DIExpression()), !dbg !3936
  br label %130, !dbg !4048

130:                                              ; preds = %115, %126, %117, %111
  %131 = phi i32 [ %97, %111 ], [ %127, %126 ], [ %97, %115 ], [ %97, %117 ], !dbg !3936
  %132 = phi i32 [ %112, %111 ], [ %129, %126 ], [ %116, %115 ], [ %95, %117 ], !dbg !4008
  call void @llvm.dbg.value(metadata i32 %132, metadata !3884, metadata !DIExpression()), !dbg !3936
  call void @llvm.dbg.value(metadata i32 %131, metadata !3887, metadata !DIExpression()), !dbg !3936
  %133 = add nuw nsw i32 %98, 1, !dbg !4049
  call void @llvm.dbg.value(metadata i8* %100, metadata !3886, metadata !DIExpression()), !dbg !3936
  call void @llvm.dbg.value(metadata i32 %133, metadata !3899, metadata !DIExpression()), !dbg !4002
  %134 = icmp eq i32 %133, %31, !dbg !4003
  br i1 %134, label %287, label %94, !dbg !4004, !llvm.loop !4050

135:                                              ; preds = %41
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !3909, metadata !DIExpression()), !dbg !4052
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !3910, metadata !DIExpression()), !dbg !4053
  br i1 %28, label %136, label %138, !dbg !4054

136:                                              ; preds = %135
  call void @llvm.dbg.value(metadata i8 %23, metadata !3911, metadata !DIExpression()), !dbg !3936
  call void @llvm.dbg.value(metadata i8 0, metadata !3912, metadata !DIExpression()), !dbg !3936
  %137 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !4055
  call void @llvm.dbg.value(metadata i8* %137, metadata !3913, metadata !DIExpression()), !dbg !3936
  br label %143, !dbg !4058

138:                                              ; preds = %135
  %139 = and i32 %4, 4
  %140 = icmp ne i32 %139, 0
  %141 = and i1 %140, %25, !dbg !4059
  %142 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %141, label %143, label %148, !dbg !4059

143:                                              ; preds = %136, %138
  %144 = phi i8 [ 0, %138 ], [ %23, %136 ]
  %145 = phi i8 [ %23, %138 ], [ 0, %136 ]
  %146 = phi i8* [ %142, %138 ], [ %137, %136 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !3913, metadata !DIExpression()), !dbg !3936
  call void @llvm.dbg.value(metadata i8 undef, metadata !3912, metadata !DIExpression()), !dbg !3936
  call void @llvm.dbg.value(metadata i8 0, metadata !3911, metadata !DIExpression()), !dbg !3936
  %147 = call i8* @memcpy(i8* noundef nonnull %146, i8* noundef nonnull %48, i32 noundef %24) #25, !dbg !4061
  br label %148, !dbg !4064

148:                                              ; preds = %138, %143
  %149 = phi i8 [ %145, %143 ], [ 0, %138 ]
  %150 = phi i8 [ %144, %143 ], [ 0, %138 ]
  %151 = getelementptr inbounds i8, i8* %48, i32 %24, !dbg !4065
  call void @llvm.dbg.value(metadata i8* %151, metadata !3886, metadata !DIExpression()), !dbg !3936
  call void @llvm.dbg.value(metadata i32 0, metadata !3915, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i8 %149, metadata !3912, metadata !DIExpression()), !dbg !3936
  call void @llvm.dbg.value(metadata i8 %150, metadata !3911, metadata !DIExpression()), !dbg !3936
  %152 = icmp eq i8 %30, 0, !dbg !4067
  br i1 %152, label %153, label %155, !dbg !4068

153:                                              ; preds = %148
  %154 = and i32 %4, 4, !dbg !4069
  br label %160, !dbg !4068

155:                                              ; preds = %148
  %156 = icmp eq i32 %33, 0
  %157 = icmp eq i32 %26, 0
  %158 = and i32 %4, 4
  %159 = icmp eq i32 %158, 0
  br label %179, !dbg !4068

160:                                              ; preds = %235, %153
  %161 = phi i32 [ %154, %153 ], [ %158, %235 ], !dbg !4069
  %162 = phi i8 [ %150, %153 ], [ %236, %235 ], !dbg !4070
  %163 = phi i8 [ %149, %153 ], [ %237, %235 ], !dbg !4071
  %164 = phi i8* [ %151, %153 ], [ %186, %235 ], !dbg !3936
  call void @llvm.dbg.value(metadata i8 undef, metadata !3908, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !3936
  %165 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4072
  %166 = load i8, i8* %165, align 1, !dbg !4072
  %167 = zext i8 %162 to i32, !dbg !4073
  %168 = add i8 %166, %162, !dbg !4074
  call void @llvm.dbg.value(metadata i8 %168, metadata !3908, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !3936
  %169 = icmp eq i32 %33, 0, !dbg !4075
  %170 = lshr i8 %163, 1, !dbg !4076
  %171 = select i1 %169, i8 %170, i8 0, !dbg !4076
  call void @llvm.dbg.value(metadata i8 %171, metadata !3908, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !3936
  %172 = icmp eq i32 %26, 0, !dbg !4077
  %173 = icmp eq i32 %161, 0, !dbg !4069
  %174 = select i1 %173, i8 0, i8 %163, !dbg !4069
  %175 = select i1 %172, i8 %174, i8 0, !dbg !4069
  call void @llvm.dbg.value(metadata i8 %175, metadata !3908, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !3936
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !3923, metadata !DIExpression()), !dbg !4078
  %176 = load i32, i32* %14, align 1, !dbg !4079
  store i8 %168, i8* %165, align 1, !dbg !4080
  store i8 %175, i8* %22, align 1, !dbg !4080
  store i8 %171, i8* %29, align 1, !dbg !4080
  %177 = call i32 %2(i8* noundef nonnull %0, i32 noundef %44, i8* noundef %3) #25, !dbg !4081
  call void @llvm.dbg.value(metadata i32 %177, metadata !3914, metadata !DIExpression()), !dbg !3936
  %178 = icmp slt i32 %177, 0, !dbg !4082
  br i1 %178, label %287, label %240, !dbg !4084

179:                                              ; preds = %155, %235
  %180 = phi i8* [ %151, %155 ], [ %186, %235 ]
  %181 = phi i32 [ 0, %155 ], [ %238, %235 ]
  %182 = phi i8 [ %149, %155 ], [ %237, %235 ]
  %183 = phi i8 [ %150, %155 ], [ %236, %235 ]
  call void @llvm.dbg.value(metadata i8* %180, metadata !3886, metadata !DIExpression()), !dbg !3936
  call void @llvm.dbg.value(metadata i32 %181, metadata !3915, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i8 %182, metadata !3912, metadata !DIExpression()), !dbg !3936
  call void @llvm.dbg.value(metadata i8 %183, metadata !3911, metadata !DIExpression()), !dbg !3936
  %184 = getelementptr inbounds i8, i8* %180, i32 1, !dbg !4085
  call void @llvm.dbg.value(metadata i8* %184, metadata !3886, metadata !DIExpression()), !dbg !3936
  %185 = load i8, i8* %180, align 1, !dbg !4086
  call void @llvm.dbg.value(metadata i8 %185, metadata !3917, metadata !DIExpression()), !dbg !4087
  %186 = getelementptr inbounds i8, i8* %180, i32 2, !dbg !4088
  call void @llvm.dbg.value(metadata i8* %186, metadata !3886, metadata !DIExpression()), !dbg !3936
  %187 = load i8, i8* %184, align 1, !dbg !4089
  call void @llvm.dbg.value(metadata i8 %187, metadata !3920, metadata !DIExpression()), !dbg !4087
  %188 = zext i8 %187 to i32, !dbg !4090
  %189 = getelementptr inbounds i32, i32* %14, i32 %188, !dbg !4090
  %190 = bitcast i32* %189 to i8**, !dbg !4091
  %191 = load i8*, i8** %190, align 4, !dbg !4091
  call void @llvm.dbg.value(metadata i8* %191, metadata !3921, metadata !DIExpression()), !dbg !4087
  %192 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %191) #24, !dbg !4092
  call void @llvm.dbg.value(metadata i1 %192, metadata !3922, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4087
  br i1 %16, label %196, label %193, !dbg !4093

193:                                              ; preds = %179
  %194 = zext i8 %185 to i32, !dbg !4095
  %195 = call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %194) #24, !dbg !4096
  br i1 %195, label %235, label %196, !dbg !4097

196:                                              ; preds = %193, %179
  br i1 %192, label %197, label %213, !dbg !4098

197:                                              ; preds = %196
  br i1 %157, label %205, label %198, !dbg !4099

198:                                              ; preds = %197
  %199 = icmp ult i8 %183, 16, !dbg !4102
  br i1 %199, label %201, label %200, !dbg !4107

200:                                              ; preds = %198
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1086) #25, !dbg !4108
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1086) #25, !dbg !4108
  unreachable, !dbg !4108

201:                                              ; preds = %198
  %202 = zext i8 %183 to i32, !dbg !4102
  %203 = add nuw nsw i8 %183, 1, !dbg !4110
  call void @llvm.dbg.value(metadata i8 %203, metadata !3911, metadata !DIExpression()), !dbg !3936
  %204 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %202, !dbg !4111
  br label %231, !dbg !4112

205:                                              ; preds = %197
  br i1 %159, label %235, label %206, !dbg !4113

206:                                              ; preds = %205
  %207 = icmp ult i8 %182, 16, !dbg !4114
  br i1 %207, label %209, label %208, !dbg !4119

208:                                              ; preds = %206
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1089) #25, !dbg !4120
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1089) #25, !dbg !4120
  unreachable, !dbg !4120

209:                                              ; preds = %206
  %210 = zext i8 %182 to i32, !dbg !4114
  %211 = add nuw nsw i8 %182, 1, !dbg !4122
  call void @llvm.dbg.value(metadata i8 %211, metadata !3912, metadata !DIExpression()), !dbg !3936
  %212 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %210, !dbg !4123
  br label %231, !dbg !4124

213:                                              ; preds = %196
  br i1 %156, label %221, label %214, !dbg !4125

214:                                              ; preds = %213
  %215 = icmp ult i8 %183, 16, !dbg !4127
  br i1 %215, label %217, label %216, !dbg !4132

216:                                              ; preds = %214
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1096) #25, !dbg !4133
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1096) #25, !dbg !4133
  unreachable, !dbg !4133

217:                                              ; preds = %214
  %218 = zext i8 %183 to i32, !dbg !4127
  %219 = add nuw nsw i8 %183, 1, !dbg !4135
  call void @llvm.dbg.value(metadata i8 %219, metadata !3911, metadata !DIExpression()), !dbg !3936
  %220 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %218, !dbg !4136
  br label %231, !dbg !4137

221:                                              ; preds = %213
  %222 = icmp ult i8 %182, 16, !dbg !4138
  br i1 %222, label %224, label %223, !dbg !4142

223:                                              ; preds = %221
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1099) #25, !dbg !4143
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1099) #25, !dbg !4143
  unreachable, !dbg !4143

224:                                              ; preds = %221
  %225 = zext i8 %182 to i32, !dbg !4138
  %226 = add nuw nsw i8 %182, 1, !dbg !4145
  call void @llvm.dbg.value(metadata i8 %226, metadata !3912, metadata !DIExpression()), !dbg !3936
  %227 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %225, !dbg !4146
  store i8 %185, i8* %227, align 1, !dbg !4147
  %228 = add nuw nsw i8 %182, 2, !dbg !4148
  call void @llvm.dbg.value(metadata i8 %228, metadata !3912, metadata !DIExpression()), !dbg !3936
  %229 = zext i8 %226 to i32, !dbg !4149
  %230 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %229, !dbg !4149
  br label %231

231:                                              ; preds = %217, %224, %201, %209
  %232 = phi i8* [ %212, %209 ], [ %204, %201 ], [ %230, %224 ], [ %220, %217 ]
  %233 = phi i8 [ %183, %209 ], [ %203, %201 ], [ %183, %224 ], [ %219, %217 ]
  %234 = phi i8 [ %211, %209 ], [ %182, %201 ], [ %228, %224 ], [ %182, %217 ]
  store i8 %187, i8* %232, align 1, !dbg !4150
  br label %235, !dbg !4151

235:                                              ; preds = %231, %205, %193
  %236 = phi i8 [ %183, %193 ], [ %183, %205 ], [ %233, %231 ], !dbg !3936
  %237 = phi i8 [ %182, %193 ], [ %182, %205 ], [ %234, %231 ], !dbg !4071
  call void @llvm.dbg.value(metadata i8 %237, metadata !3912, metadata !DIExpression()), !dbg !3936
  call void @llvm.dbg.value(metadata i8 %236, metadata !3911, metadata !DIExpression()), !dbg !3936
  %238 = add nuw nsw i32 %181, 1, !dbg !4151
  call void @llvm.dbg.value(metadata i8* %186, metadata !3886, metadata !DIExpression()), !dbg !3936
  call void @llvm.dbg.value(metadata i32 %238, metadata !3915, metadata !DIExpression()), !dbg !4066
  %239 = icmp eq i32 %238, %31, !dbg !4067
  br i1 %239, label %160, label %179, !dbg !4068, !llvm.loop !4152

240:                                              ; preds = %160
  %241 = zext i8 %163 to i32, !dbg !4076
  call void @llvm.dbg.value(metadata i32 %177, metadata !3884, metadata !DIExpression()), !dbg !3936
  store i32 %176, i32* %14, align 1, !dbg !4154
  %242 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !4155
  %243 = call i32 %2(i8* noundef nonnull %242, i32 noundef %241, i8* noundef %3) #25, !dbg !4156
  call void @llvm.dbg.value(metadata i32 %243, metadata !3914, metadata !DIExpression()), !dbg !3936
  %244 = icmp slt i32 %243, 0, !dbg !4157
  br i1 %244, label %287, label %245, !dbg !4159

245:                                              ; preds = %240
  call void @llvm.dbg.value(metadata !DIArgList(i32 %177, i32 %243), metadata !3884, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3936
  %246 = mul nsw i32 %31, -2
  %247 = add i32 %21, %246, !dbg !4160
  %248 = add nuw nsw i32 %44, %24, !dbg !4160
  %249 = sub i32 %247, %248, !dbg !4160
  call void @llvm.dbg.value(metadata i32 %249, metadata !3924, metadata !DIExpression()), !dbg !3936
  %250 = call i32 %2(i8* noundef %164, i32 noundef %249, i8* noundef %3) #25, !dbg !4161
  call void @llvm.dbg.value(metadata i32 %250, metadata !3914, metadata !DIExpression()), !dbg !3936
  %251 = icmp slt i32 %250, 0, !dbg !4162
  br i1 %251, label %287, label %252, !dbg !4164

252:                                              ; preds = %245
  %253 = add nuw nsw i32 %243, %177, !dbg !4165
  call void @llvm.dbg.value(metadata i32 %253, metadata !3884, metadata !DIExpression()), !dbg !3936
  %254 = add nuw nsw i32 %253, %250, !dbg !4166
  call void @llvm.dbg.value(metadata i32 %254, metadata !3884, metadata !DIExpression()), !dbg !3936
  call void @llvm.dbg.value(metadata i32 0, metadata !3925, metadata !DIExpression()), !dbg !4167
  %255 = icmp eq i8 %162, 0, !dbg !4168
  br i1 %255, label %284, label %256, !dbg !4169

256:                                              ; preds = %252
  %257 = icmp eq i16* %5, null
  br label %258, !dbg !4169

258:                                              ; preds = %256, %279
  %259 = phi i32 [ 0, %256 ], [ %282, %279 ]
  %260 = phi i32 [ %254, %256 ], [ %281, %279 ]
  call void @llvm.dbg.value(metadata i32 %259, metadata !3925, metadata !DIExpression()), !dbg !4167
  call void @llvm.dbg.value(metadata i32 %260, metadata !3884, metadata !DIExpression()), !dbg !3936
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4170
  %261 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %259, !dbg !4171
  %262 = load i8, i8* %261, align 1, !dbg !4171
  call void @llvm.dbg.value(metadata i8 %262, metadata !3927, metadata !DIExpression()), !dbg !4172
  store i8 %262, i8* %10, align 1, !dbg !4173
  %263 = zext i8 %262 to i32, !dbg !4174
  %264 = getelementptr inbounds i32, i32* %14, i32 %263, !dbg !4174
  %265 = bitcast i32* %264 to i8**, !dbg !4175
  %266 = load i8*, i8** %265, align 4, !dbg !4175
  call void @llvm.dbg.value(metadata i8* %266, metadata !3930, metadata !DIExpression()), !dbg !4172
  br i1 %257, label %270, label %267, !dbg !4176

267:                                              ; preds = %258
  %268 = getelementptr inbounds i16, i16* %5, i32 %259, !dbg !4177
  %269 = load i16, i16* %268, align 2, !dbg !4177
  br label %270, !dbg !4176

270:                                              ; preds = %258, %267
  %271 = phi i16 [ %269, %267 ], [ 0, %258 ], !dbg !4176
  call void @llvm.dbg.value(metadata i32 undef, metadata !3931, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4172
  call void @llvm.dbg.value(metadata i8* %10, metadata !3927, metadata !DIExpression(DW_OP_deref)), !dbg !4172
  %272 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #25, !dbg !4178
  call void @llvm.dbg.value(metadata i32 %272, metadata !3914, metadata !DIExpression()), !dbg !3936
  %273 = icmp slt i32 %272, 0, !dbg !4179
  br i1 %273, label %277, label %274, !dbg !4181

274:                                              ; preds = %270
  call void @llvm.dbg.value(metadata i16 %271, metadata !3931, metadata !DIExpression()), !dbg !4172
  call void @llvm.dbg.value(metadata !DIArgList(i32 %260, i32 %272), metadata !3884, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3936
  %275 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %266, i16 noundef zeroext %271) #24, !dbg !4182
  call void @llvm.dbg.value(metadata i32 %275, metadata !3914, metadata !DIExpression()), !dbg !3936
  %276 = icmp slt i32 %275, 0, !dbg !4183
  br i1 %276, label %277, label %279, !dbg !4185

277:                                              ; preds = %274, %270
  %278 = phi i32 [ %275, %274 ], [ %272, %270 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !3884, metadata !DIExpression()), !dbg !3936
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4186
  call void @llvm.dbg.value(metadata i32 undef, metadata !3884, metadata !DIExpression()), !dbg !3936
  br label %287

279:                                              ; preds = %274
  %280 = add nsw i32 %272, %260, !dbg !4187
  call void @llvm.dbg.value(metadata i32 %280, metadata !3884, metadata !DIExpression()), !dbg !3936
  %281 = add nsw i32 %280, %275, !dbg !4188
  call void @llvm.dbg.value(metadata i32 %281, metadata !3884, metadata !DIExpression()), !dbg !3936
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4186
  %282 = add nuw nsw i32 %259, 1, !dbg !4189
  call void @llvm.dbg.value(metadata i32 %282, metadata !3925, metadata !DIExpression()), !dbg !4167
  %283 = icmp eq i32 %282, %167, !dbg !4168
  br i1 %283, label %284, label %258, !dbg !4169, !llvm.loop !4190

284:                                              ; preds = %279, %252
  %285 = phi i32 [ %254, %252 ], [ %281, %279 ], !dbg !4166
  call void @llvm.dbg.value(metadata i32 %285, metadata !3884, metadata !DIExpression()), !dbg !3936
  %286 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #25, !dbg !4192
  br label %287, !dbg !4193

287:                                              ; preds = %130, %82, %277, %284, %160, %240, %245, %37, %39
  %288 = phi i32 [ %21, %39 ], [ %21, %37 ], [ %285, %284 ], [ %177, %160 ], [ %243, %240 ], [ %250, %245 ], [ %278, %277 ], [ %85, %82 ], [ %132, %130 ], !dbg !3936
  ret i32 %288, !dbg !4194
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !4195 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4199, metadata !DIExpression()), !dbg !4207
  %2 = icmp eq i8* %0, null, !dbg !4208
  br i1 %2, label %3, label %4, !dbg !4211

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 198) #25, !dbg !4212
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 198) #25, !dbg !4212
  unreachable, !dbg !4212

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4200, metadata !DIExpression()), !dbg !4207
  call void @llvm.dbg.value(metadata i8* %0, metadata !4201, metadata !DIExpression()), !dbg !4207
  %5 = load i8, i8* %0, align 1, !dbg !4214
  %6 = zext i8 %5 to i32, !dbg !4214
  %7 = shl nuw nsw i32 %6, 2, !dbg !4215
  call void @llvm.dbg.value(metadata i32 %7, metadata !4202, metadata !DIExpression()), !dbg !4207
  %8 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4216
  %9 = load i8, i8* %8, align 1, !dbg !4216
  %10 = zext i8 %9 to i32, !dbg !4216
  call void @llvm.dbg.value(metadata i32 %10, metadata !4203, metadata !DIExpression()), !dbg !4207
  %11 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4217
  %12 = load i8, i8* %11, align 1, !dbg !4217
  %13 = zext i8 %12 to i32, !dbg !4217
  call void @llvm.dbg.value(metadata i32 %13, metadata !4204, metadata !DIExpression()), !dbg !4207
  %14 = getelementptr inbounds i8, i8* %0, i32 %7, !dbg !4218
  call void @llvm.dbg.value(metadata i8* %14, metadata !4200, metadata !DIExpression()), !dbg !4207
  %15 = getelementptr inbounds i8, i8* %14, i32 %13, !dbg !4219
  call void @llvm.dbg.value(metadata i8* %15, metadata !4200, metadata !DIExpression()), !dbg !4207
  call void @llvm.dbg.value(metadata i32 0, metadata !4205, metadata !DIExpression()), !dbg !4220
  %16 = icmp eq i8 %9, 0, !dbg !4221
  br i1 %16, label %17, label %22, !dbg !4223

17:                                               ; preds = %22, %4
  %18 = phi i8* [ %15, %4 ], [ %28, %22 ], !dbg !4207
  %19 = ptrtoint i8* %18 to i32, !dbg !4224
  %20 = ptrtoint i8* %0 to i32, !dbg !4224
  %21 = sub i32 %19, %20, !dbg !4224
  ret i32 %21, !dbg !4225

22:                                               ; preds = %4, %22
  %23 = phi i32 [ %29, %22 ], [ 0, %4 ]
  %24 = phi i8* [ %28, %22 ], [ %15, %4 ]
  call void @llvm.dbg.value(metadata i32 %23, metadata !4205, metadata !DIExpression()), !dbg !4220
  call void @llvm.dbg.value(metadata i8* %24, metadata !4200, metadata !DIExpression()), !dbg !4207
  %25 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !4226
  call void @llvm.dbg.value(metadata i8* %25, metadata !4200, metadata !DIExpression()), !dbg !4207
  %26 = tail call i32 @strlen(i8* noundef nonnull %25) #25, !dbg !4228
  %27 = add i32 %26, 1, !dbg !4229
  %28 = getelementptr inbounds i8, i8* %25, i32 %27, !dbg !4230
  call void @llvm.dbg.value(metadata i8* %28, metadata !4200, metadata !DIExpression()), !dbg !4207
  %29 = add nuw nsw i32 %23, 1, !dbg !4231
  call void @llvm.dbg.value(metadata i32 %29, metadata !4205, metadata !DIExpression()), !dbg !4220
  %30 = icmp eq i32 %29, %10, !dbg !4221
  br i1 %30, label %17, label %22, !dbg !4223, !llvm.loop !4232
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !4234 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !4238, metadata !DIExpression()), !dbg !4242
  call void @llvm.dbg.value(metadata i8* %1, metadata !4239, metadata !DIExpression()), !dbg !4242
  call void @llvm.dbg.value(metadata i8* %2, metadata !4240, metadata !DIExpression()), !dbg !4242
  call void @llvm.dbg.value(metadata i16 %3, metadata !4241, metadata !DIExpression()), !dbg !4242
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !4243
  br i1 %5, label %6, label %9, !dbg !4245

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !4246
  %8 = add i32 %7, 1, !dbg !4248
  br label %20, !dbg !4249

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !4250
  br i1 %10, label %13, label %11, !dbg !4251

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !4251
  br label %16, !dbg !4251

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !4252
  %15 = add i32 %14, 1, !dbg !4253
  br label %16, !dbg !4251

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !4251
  %18 = and i32 %17, 65535, !dbg !4254
  call void @llvm.dbg.value(metadata i32 %17, metadata !4241, metadata !DIExpression()), !dbg !4242
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #25, !dbg !4255
  br label %20, !dbg !4256

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !4242
  ret i32 %21, !dbg !4257
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !4258 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4260, metadata !DIExpression()), !dbg !4261
  ret i32 0, !dbg !4262
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !4263 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !4267, metadata !DIExpression()), !dbg !4268
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !4269
  ret void, !dbg !4270
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #8 !dbg !4271 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !4272
  ret i8* %1, !dbg !4273
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !4274 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4285, metadata !DIExpression()), !dbg !4296
  call void @llvm.dbg.value(metadata i8* %0, metadata !4284, metadata !DIExpression()), !dbg !4296
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #24, !dbg !4297
  ret void, !dbg !4299
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !4300 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4304, metadata !DIExpression()), !dbg !4306
  call void @llvm.dbg.value(metadata i8* %1, metadata !4305, metadata !DIExpression()), !dbg !4306
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4307
  %4 = tail call i32 %3(i32 noundef %0) #25, !dbg !4307
  ret i32 %4, !dbg !4308
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !4309 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4316, metadata !DIExpression()), !dbg !4317
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4313, metadata !DIExpression()), !dbg !4317
  call void @llvm.dbg.value(metadata i8* %1, metadata !4314, metadata !DIExpression()), !dbg !4317
  call void @llvm.dbg.value(metadata i8* %2, metadata !4315, metadata !DIExpression()), !dbg !4317
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #25, !dbg !4318
  ret void, !dbg !4319
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !4320 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4324, metadata !DIExpression()), !dbg !4327
  call void @llvm.dbg.value(metadata i32 %1, metadata !4325, metadata !DIExpression()), !dbg !4327
  call void @llvm.dbg.value(metadata i32 0, metadata !4326, metadata !DIExpression()), !dbg !4327
  %3 = icmp eq i32 %1, 0, !dbg !4328
  br i1 %3, label %13, label %4, !dbg !4331

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !4326, metadata !DIExpression()), !dbg !4327
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4332
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !4334
  %8 = load i8, i8* %7, align 1, !dbg !4334
  %9 = zext i8 %8 to i32, !dbg !4334
  %10 = tail call i32 %6(i32 noundef %9) #25, !dbg !4332
  %11 = add nuw i32 %5, 1, !dbg !4335
  call void @llvm.dbg.value(metadata i32 %11, metadata !4326, metadata !DIExpression()), !dbg !4327
  %12 = icmp eq i32 %11, %1, !dbg !4328
  br i1 %12, label %13, label %4, !dbg !4331, !llvm.loop !4336

13:                                               ; preds = %4, %2
  ret void, !dbg !4338
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !4339 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4343, metadata !DIExpression()), !dbg !4345
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !4346
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4346
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !4344, metadata !DIExpression()), !dbg !4347
  call void @llvm.va_start(i8* nonnull %3), !dbg !4348
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !4349
  %5 = load i32, i32* %4, align 4, !dbg !4349
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !4349
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !4349
  call void @llvm.va_end(i8* nonnull %3), !dbg !4350
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4351
  ret void, !dbg !4351
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !4352 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4356, metadata !DIExpression()), !dbg !4361
  call void @llvm.dbg.value(metadata i32 %1, metadata !4357, metadata !DIExpression()), !dbg !4361
  call void @llvm.dbg.value(metadata i8* %2, metadata !4358, metadata !DIExpression()), !dbg !4361
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !4362
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4362
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !4359, metadata !DIExpression()), !dbg !4363
  call void @llvm.va_start(i8* nonnull %5), !dbg !4364
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !4365
  %7 = load i32, i32* %6, align 4, !dbg !4365
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !4365
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #24, !dbg !4365
  call void @llvm.dbg.value(metadata i32 %9, metadata !4360, metadata !DIExpression()), !dbg !4361
  call void @llvm.va_end(i8* nonnull %5), !dbg !4366
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4367
  ret i32 %9, !dbg !4368
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !4369 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !4376, metadata !DIExpression()), !dbg !4383
  call void @llvm.dbg.value(metadata i8* %0, metadata !4373, metadata !DIExpression()), !dbg !4383
  call void @llvm.dbg.value(metadata i32 %1, metadata !4374, metadata !DIExpression()), !dbg !4383
  call void @llvm.dbg.value(metadata i8* %2, metadata !4375, metadata !DIExpression()), !dbg !4383
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !4384
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4384
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !4377, metadata !DIExpression()), !dbg !4385
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !4386
  store i8* %0, i8** %7, align 4, !dbg !4386
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !4386
  store i32 %1, i32* %8, align 4, !dbg !4386
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !4386
  store i32 0, i32* %9, align 4, !dbg !4386
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #24, !dbg !4387
  %10 = load i32, i32* %9, align 4, !dbg !4388
  %11 = load i32, i32* %8, align 4, !dbg !4390
  %12 = icmp slt i32 %10, %11, !dbg !4391
  br i1 %12, label %13, label %15, !dbg !4392

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !4393
  store i8 0, i8* %14, align 1, !dbg !4395
  br label %15, !dbg !4396

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4397
  ret i32 %10, !dbg !4398
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #9 !dbg !4399 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4404, metadata !DIExpression()), !dbg !4406
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !4405, metadata !DIExpression()), !dbg !4406
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !4407
  %4 = load i8*, i8** %3, align 4, !dbg !4407
  %5 = icmp eq i8* %4, null, !dbg !4409
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !4410
  br i1 %5, label %12, label %8, !dbg !4411

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !4412
  %10 = load i32, i32* %9, align 4, !dbg !4412
  %11 = icmp slt i32 %7, %10, !dbg !4413
  br i1 %11, label %15, label %12, !dbg !4414

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !4415
  %14 = add nsw i32 %7, 1, !dbg !4417
  store i32 %14, i32* %13, align 4, !dbg !4417
  br label %25, !dbg !4418

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !4419
  %17 = icmp eq i32 %7, %16, !dbg !4421
  br i1 %17, label %18, label %21, !dbg !4422

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !4423
  store i32 %19, i32* %6, align 4, !dbg !4423
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4425
  store i8 0, i8* %20, align 1, !dbg !4426
  br label %25, !dbg !4427

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !4428
  %23 = add nsw i32 %7, 1, !dbg !4430
  store i32 %23, i32* %6, align 4, !dbg !4430
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4431
  store i8 %22, i8* %24, align 1, !dbg !4432
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !4433
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #10 !dbg !4434 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !4439, metadata !DIExpression()), !dbg !4443
  call void @llvm.dbg.value(metadata i8* %1, metadata !4440, metadata !DIExpression()), !dbg !4443
  call void @llvm.dbg.value(metadata i8* %2, metadata !4441, metadata !DIExpression()), !dbg !4443
  call void @llvm.dbg.value(metadata i8* %3, metadata !4442, metadata !DIExpression()), !dbg !4443
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #25, !dbg !4444
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #26, !dbg !4445
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #24, !dbg !4446
  unreachable, !dbg !4447
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #11 !dbg !4448 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #26, !dbg !4555
  ret %struct.k_thread* %1, !dbg !4556
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !4557 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !4562, metadata !DIExpression()), !dbg !4563
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4564, !srcloc !4566
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !4567
  ret void, !dbg !4568
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #11 !dbg !4569 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4570, !srcloc !4572
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !4573
  ret %struct.k_thread* %1, !dbg !4574
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4575 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4588, metadata !DIExpression()), !dbg !4714
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4585, metadata !DIExpression()), !dbg !4714
  call void @llvm.dbg.value(metadata i8* %1, metadata !4586, metadata !DIExpression()), !dbg !4714
  call void @llvm.dbg.value(metadata i8* %2, metadata !4587, metadata !DIExpression()), !dbg !4714
  call void @llvm.dbg.value(metadata i32 %4, metadata !4589, metadata !DIExpression()), !dbg !4714
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4715
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #23, !dbg !4715
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4590, metadata !DIExpression()), !dbg !4716
  call void @llvm.dbg.value(metadata i32 0, metadata !4594, metadata !DIExpression()), !dbg !4714
  call void @llvm.dbg.value(metadata i1 undef, metadata !4596, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4714
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4717

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4717

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4718
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4588, metadata !DIExpression()), !dbg !4714
  call void @llvm.dbg.value(metadata i8* %30, metadata !4587, metadata !DIExpression()), !dbg !4714
  call void @llvm.dbg.value(metadata i32 %29, metadata !4594, metadata !DIExpression()), !dbg !4714
  %31 = load i8, i8* %30, align 1, !dbg !4719
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4717

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4719
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4720
  call void @llvm.dbg.value(metadata i8* %34, metadata !4587, metadata !DIExpression()), !dbg !4714
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #25, !dbg !4720
  call void @llvm.dbg.value(metadata i32 %35, metadata !4598, metadata !DIExpression()), !dbg !4721
  %36 = icmp slt i32 %35, 0, !dbg !4722
  %37 = add i32 %29, 1, !dbg !4720
  call void @llvm.dbg.value(metadata i32 undef, metadata !4594, metadata !DIExpression()), !dbg !4714
  br i1 %36, label %365, label %28, !llvm.loop !4724

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4726
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4603, metadata !DIExpression()), !dbg !4727
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4727
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4646, metadata !DIExpression()), !dbg !4728
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4649, metadata !DIExpression()), !dbg !4728
  call void @llvm.dbg.value(metadata i8* %30, metadata !4652, metadata !DIExpression()), !dbg !4728
  call void @llvm.dbg.value(metadata i32 -1, metadata !4653, metadata !DIExpression()), !dbg !4728
  call void @llvm.dbg.value(metadata i32 -1, metadata !4654, metadata !DIExpression()), !dbg !4728
  call void @llvm.dbg.value(metadata i8* null, metadata !4655, metadata !DIExpression()), !dbg !4728
  call void @llvm.dbg.value(metadata i8* %14, metadata !4656, metadata !DIExpression()), !dbg !4728
  call void @llvm.dbg.value(metadata i8 0, metadata !4657, metadata !DIExpression()), !dbg !4728
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #24, !dbg !4729
  call void @llvm.dbg.value(metadata i8* %39, metadata !4587, metadata !DIExpression()), !dbg !4714
  %40 = load i24, i24* %15, align 8, !dbg !4730
  %41 = and i24 %40, 256, !dbg !4730
  %42 = icmp eq i24 %41, 0, !dbg !4730
  br i1 %42, label %51, label %43, !dbg !4732

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4733
  call void @llvm.dbg.value(metadata i8* %44, metadata !4588, metadata !DIExpression()), !dbg !4714
  %45 = bitcast i8* %27 to i32*, !dbg !4733
  %46 = load i32, i32* %45, align 4, !dbg !4733
  call void @llvm.dbg.value(metadata i32 %46, metadata !4653, metadata !DIExpression()), !dbg !4728
  %47 = icmp slt i32 %46, 0, !dbg !4735
  br i1 %47, label %48, label %56, !dbg !4737

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4738
  store i24 %49, i24* %15, align 8, !dbg !4738
  %50 = sub nsw i32 0, %46, !dbg !4740
  call void @llvm.dbg.value(metadata i32 %50, metadata !4653, metadata !DIExpression()), !dbg !4728
  br label %56, !dbg !4741

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4742
  %53 = icmp eq i24 %52, 0, !dbg !4742
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4744
  br label %56, !dbg !4744

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4745
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4728
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4588, metadata !DIExpression()), !dbg !4714
  call void @llvm.dbg.value(metadata i32 %58, metadata !4653, metadata !DIExpression()), !dbg !4728
  %60 = and i24 %57, 1024, !dbg !4745
  %61 = icmp eq i24 %60, 0, !dbg !4745
  br i1 %61, label %69, label %62, !dbg !4746

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4747
  call void @llvm.dbg.value(metadata i8* %63, metadata !4588, metadata !DIExpression()), !dbg !4714
  %64 = bitcast i8* %59 to i32*, !dbg !4747
  %65 = load i32, i32* %64, align 4, !dbg !4747
  call void @llvm.dbg.value(metadata i32 %65, metadata !4658, metadata !DIExpression()), !dbg !4748
  %66 = icmp slt i32 %65, 0, !dbg !4749
  br i1 %66, label %67, label %74, !dbg !4751

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4752
  store i24 %68, i24* %15, align 8, !dbg !4752
  br label %74, !dbg !4754

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4755
  %71 = icmp eq i24 %70, 0, !dbg !4755
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4757
  br label %74, !dbg !4757

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4758
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4728
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4728
  call void @llvm.dbg.value(metadata i8* %77, metadata !4588, metadata !DIExpression()), !dbg !4714
  call void @llvm.dbg.value(metadata i32 %76, metadata !4654, metadata !DIExpression()), !dbg !4728
  store i32 0, i32* %16, align 4, !dbg !4759
  store i32 0, i32* %17, align 8, !dbg !4760
  %78 = lshr i24 %75, 16, !dbg !4758
  call void @llvm.dbg.value(metadata i24 %78, metadata !4661, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4728
  %79 = lshr i24 %75, 11, !dbg !4761
  %80 = and i24 %79, 15, !dbg !4761
  %81 = zext i24 %80 to i32, !dbg !4761
  call void @llvm.dbg.value(metadata i32 %81, metadata !4662, metadata !DIExpression()), !dbg !4728
  %82 = trunc i24 %78 to i3, !dbg !4762
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4762

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4763

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4766
  call void @llvm.dbg.value(metadata i8* %85, metadata !4588, metadata !DIExpression()), !dbg !4714
  %86 = bitcast i8* %77 to i32*, !dbg !4766
  %87 = load i32, i32* %86, align 4, !dbg !4766
  %88 = sext i32 %87 to i64, !dbg !4766
  store i64 %88, i64* %20, align 8, !dbg !4768
  br label %115, !dbg !4769

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4770
  call void @llvm.dbg.value(metadata i8* %90, metadata !4588, metadata !DIExpression()), !dbg !4714
  %91 = bitcast i8* %77 to i32*, !dbg !4770
  %92 = load i32, i32* %91, align 4, !dbg !4770
  %93 = sext i32 %92 to i64, !dbg !4770
  store i64 %93, i64* %20, align 8, !dbg !4773
  br label %115, !dbg !4774

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4775
  %96 = add i32 %95, 7, !dbg !4775
  %97 = and i32 %96, -8, !dbg !4775
  %98 = inttoptr i32 %97 to i8*, !dbg !4775
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4775
  call void @llvm.dbg.value(metadata i8* %99, metadata !4588, metadata !DIExpression()), !dbg !4714
  %100 = inttoptr i32 %97 to i64*, !dbg !4775
  %101 = load i64, i64* %100, align 8, !dbg !4775
  store i64 %101, i64* %20, align 8, !dbg !4776
  br label %115, !dbg !4777

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4778
  %104 = add i32 %103, 7, !dbg !4778
  %105 = and i32 %104, -8, !dbg !4778
  %106 = inttoptr i32 %105 to i8*, !dbg !4778
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4778
  call void @llvm.dbg.value(metadata i8* %107, metadata !4588, metadata !DIExpression()), !dbg !4714
  %108 = inttoptr i32 %105 to i64*, !dbg !4778
  %109 = load i64, i64* %108, align 8, !dbg !4778
  store i64 %109, i64* %20, align 8, !dbg !4779
  br label %115, !dbg !4780

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4781
  call void @llvm.dbg.value(metadata i8* %111, metadata !4588, metadata !DIExpression()), !dbg !4714
  %112 = bitcast i8* %77 to i32*, !dbg !4781
  %113 = load i32, i32* %112, align 4, !dbg !4781
  %114 = sext i32 %113 to i64, !dbg !4782
  store i64 %114, i64* %20, align 8, !dbg !4783
  br label %115, !dbg !4784

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4785
  call void @llvm.dbg.value(metadata i8* %117, metadata !4588, metadata !DIExpression()), !dbg !4714
  %118 = trunc i24 %79 to i4, !dbg !4786
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4786

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4787
  %121 = ashr exact i64 %120, 56, !dbg !4787
  store i64 %121, i64* %20, align 8, !dbg !4790
  br label %177, !dbg !4791

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4792
  %124 = ashr exact i64 %123, 48, !dbg !4792
  store i64 %124, i64* %20, align 8, !dbg !4795
  br label %177, !dbg !4796

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4797

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4800
  call void @llvm.dbg.value(metadata i8* %127, metadata !4588, metadata !DIExpression()), !dbg !4714
  %128 = bitcast i8* %77 to i32*, !dbg !4800
  %129 = load i32, i32* %128, align 4, !dbg !4800
  %130 = zext i32 %129 to i64, !dbg !4800
  store i64 %130, i64* %20, align 8, !dbg !4802
  br label %157, !dbg !4803

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4804
  call void @llvm.dbg.value(metadata i8* %132, metadata !4588, metadata !DIExpression()), !dbg !4714
  call void @llvm.dbg.value(metadata i8* %132, metadata !4588, metadata !DIExpression()), !dbg !4714
  %133 = bitcast i8* %77 to i32*, !dbg !4804
  %134 = load i32, i32* %133, align 4, !dbg !4804
  %135 = zext i32 %134 to i64, !dbg !4804
  store i64 %135, i64* %20, align 8, !dbg !4804
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4806
  %138 = add i32 %137, 7, !dbg !4806
  %139 = and i32 %138, -8, !dbg !4806
  %140 = inttoptr i32 %139 to i8*, !dbg !4806
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4806
  call void @llvm.dbg.value(metadata i8* %141, metadata !4588, metadata !DIExpression()), !dbg !4714
  %142 = inttoptr i32 %139 to i64*, !dbg !4806
  %143 = load i64, i64* %142, align 8, !dbg !4806
  store i64 %143, i64* %20, align 8, !dbg !4807
  br label %157, !dbg !4808

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4809
  %146 = add i32 %145, 7, !dbg !4809
  %147 = and i32 %146, -8, !dbg !4809
  %148 = inttoptr i32 %147 to i8*, !dbg !4809
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4809
  call void @llvm.dbg.value(metadata i8* %149, metadata !4588, metadata !DIExpression()), !dbg !4714
  %150 = inttoptr i32 %147 to i64*, !dbg !4809
  %151 = load i64, i64* %150, align 8, !dbg !4809
  store i64 %151, i64* %20, align 8, !dbg !4810
  br label %157, !dbg !4811

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4812
  call void @llvm.dbg.value(metadata i8* %153, metadata !4588, metadata !DIExpression()), !dbg !4714
  %154 = bitcast i8* %77 to i32*, !dbg !4812
  %155 = load i32, i32* %154, align 4, !dbg !4812
  %156 = zext i32 %155 to i64, !dbg !4813
  store i64 %156, i64* %20, align 8, !dbg !4814
  br label %157, !dbg !4815

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4816
  call void @llvm.dbg.value(metadata i8* %159, metadata !4588, metadata !DIExpression()), !dbg !4714
  %160 = trunc i24 %79 to i4, !dbg !4817
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4817

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4818
  store i64 %162, i64* %20, align 8, !dbg !4821
  br label %177, !dbg !4822

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4823
  store i64 %164, i64* %20, align 8, !dbg !4826
  br label %177, !dbg !4827

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4828
  %167 = add i32 %166, 7, !dbg !4828
  %168 = and i32 %167, -8, !dbg !4828
  %169 = inttoptr i32 %168 to i8*, !dbg !4828
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4828
  call void @llvm.dbg.value(metadata i8* %170, metadata !4588, metadata !DIExpression()), !dbg !4714
  call void @llvm.dbg.value(metadata i8* %170, metadata !4588, metadata !DIExpression()), !dbg !4714
  %171 = inttoptr i32 %168 to double*, !dbg !4828
  %172 = load double, double* %171, align 8, !dbg !4828
  store double %172, double* %19, align 8, !dbg !4828
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4832
  call void @llvm.dbg.value(metadata i8* %174, metadata !4588, metadata !DIExpression()), !dbg !4714
  %175 = bitcast i8* %77 to i8**, !dbg !4832
  %176 = load i8*, i8** %175, align 4, !dbg !4832
  store i8* %176, i8** %18, align 8, !dbg !4835
  br label %177, !dbg !4836

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4728
  call void @llvm.dbg.value(metadata i8* %178, metadata !4588, metadata !DIExpression()), !dbg !4714
  %179 = and i24 %75, 3, !dbg !4837
  %180 = icmp eq i24 %179, 0, !dbg !4837
  br i1 %180, label %185, label %181, !dbg !4837

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #24, !dbg !4838
  call void @llvm.dbg.value(metadata i32 %182, metadata !4663, metadata !DIExpression()), !dbg !4839
  %183 = icmp slt i32 %182, 0, !dbg !4840
  %184 = add i32 %182, %29, !dbg !4838
  call void @llvm.dbg.value(metadata i32 undef, metadata !4594, metadata !DIExpression()), !dbg !4714
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4842
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4843

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #25, !dbg !4844
  call void @llvm.dbg.value(metadata i32 %188, metadata !4667, metadata !DIExpression()), !dbg !4845
  %189 = icmp slt i32 %188, 0, !dbg !4846
  %190 = add i32 %29, 1, !dbg !4844
  call void @llvm.dbg.value(metadata i32 undef, metadata !4594, metadata !DIExpression()), !dbg !4714
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4848
  call void @llvm.dbg.value(metadata i8* %192, metadata !4655, metadata !DIExpression()), !dbg !4728
  %193 = icmp sgt i32 %76, -1, !dbg !4849
  br i1 %193, label %194, label %196, !dbg !4851

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #25, !dbg !4852
  call void @llvm.dbg.value(metadata i32 %195, metadata !4670, metadata !DIExpression()), !dbg !4854
  br label %241, !dbg !4855

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #25, !dbg !4856
  call void @llvm.dbg.value(metadata i32 %197, metadata !4670, metadata !DIExpression()), !dbg !4854
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4655, metadata !DIExpression()), !dbg !4728
  %199 = load i64, i64* %20, align 8, !dbg !4858
  %200 = trunc i64 %199 to i8, !dbg !4859
  store i8 %200, i8* %10, align 1, !dbg !4860
  call void @llvm.dbg.value(metadata i8* %23, metadata !4656, metadata !DIExpression()), !dbg !4728
  br label %245, !dbg !4861

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4862
  %203 = icmp eq i24 %202, 0, !dbg !4862
  %204 = trunc i24 %75 to i8, !dbg !4864
  %205 = shl i8 %204, 1, !dbg !4864
  %206 = and i8 %205, 32, !dbg !4864
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4864
  call void @llvm.dbg.value(metadata i8 %207, metadata !4657, metadata !DIExpression()), !dbg !4728
  %208 = load i64, i64* %20, align 8, !dbg !4865
  call void @llvm.dbg.value(metadata i64 %208, metadata !4595, metadata !DIExpression()), !dbg !4714
  %209 = icmp slt i64 %208, 0, !dbg !4866
  br i1 %209, label %210, label %212, !dbg !4868

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4657, metadata !DIExpression()), !dbg !4728
  %211 = sub nsw i64 0, %208, !dbg !4869
  store i64 %211, i64* %20, align 8, !dbg !4871
  br label %212, !dbg !4872

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4728
  call void @llvm.dbg.value(metadata i8 %213, metadata !4657, metadata !DIExpression()), !dbg !4728
  %214 = load i64, i64* %20, align 8, !dbg !4873
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !4874
  call void @llvm.dbg.value(metadata i8* %215, metadata !4655, metadata !DIExpression()), !dbg !4728
  br label %216, !dbg !4875

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4876
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4877
  call void @llvm.dbg.value(metadata i8* %218, metadata !4655, metadata !DIExpression()), !dbg !4728
  call void @llvm.dbg.value(metadata i8 %217, metadata !4657, metadata !DIExpression()), !dbg !4728
  call void @llvm.dbg.label(metadata !4713), !dbg !4878
  %219 = icmp sgt i32 %76, -1, !dbg !4879
  br i1 %219, label %222, label %220, !dbg !4880

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4881
  br label %245, !dbg !4880

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4883
  %224 = sub i32 %22, %223, !dbg !4883
  call void @llvm.dbg.value(metadata i32 %224, metadata !4672, metadata !DIExpression()), !dbg !4884
  %225 = load i24, i24* %15, align 8, !dbg !4885
  %226 = and i24 %225, -65, !dbg !4885
  store i24 %226, i24* %15, align 8, !dbg !4885
  %227 = icmp ugt i32 %76, %224, !dbg !4886
  br i1 %227, label %228, label %245, !dbg !4888

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4889
  store i32 %229, i32* %16, align 4, !dbg !4891
  br label %245, !dbg !4892

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4893
  %232 = icmp eq i8* %231, null, !dbg !4895
  br i1 %232, label %245, label %233, !dbg !4896

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4897
  %235 = zext i32 %234 to i64, !dbg !4897
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !4899
  call void @llvm.dbg.value(metadata i8* %236, metadata !4655, metadata !DIExpression()), !dbg !4728
  %237 = load i24, i24* %15, align 8, !dbg !4900
  %238 = or i24 %237, 1048576, !dbg !4900
  store i24 %238, i24* %15, align 8, !dbg !4900
  store i8 120, i8* %21, align 1, !dbg !4901
  br label %216, !dbg !4902

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4903
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #24, !dbg !4906
  br label %363, !dbg !4907

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !4908
  call void @llvm.dbg.value(metadata i32 %242, metadata !4670, metadata !DIExpression()), !dbg !4854
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !4909
  call void @llvm.dbg.value(metadata i32 -1, metadata !4654, metadata !DIExpression()), !dbg !4728
  call void @llvm.dbg.value(metadata i32 %29, metadata !4594, metadata !DIExpression()), !dbg !4714
  call void @llvm.dbg.value(metadata i8* %192, metadata !4655, metadata !DIExpression()), !dbg !4728
  call void @llvm.dbg.value(metadata i8* %243, metadata !4656, metadata !DIExpression()), !dbg !4728
  call void @llvm.dbg.value(metadata i8 0, metadata !4657, metadata !DIExpression()), !dbg !4728
  %244 = icmp eq i8* %192, null, !dbg !4910
  br i1 %244, label %363, label %245, !dbg !4912, !llvm.loop !4724

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4881
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4675, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4728
  call void @llvm.dbg.value(metadata i32 0, metadata !4676, metadata !DIExpression()), !dbg !4728
  %250 = zext i8 %249 to i32, !dbg !4913
  %251 = icmp eq i8 %249, 0, !dbg !4915
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4675, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4728
  call void @llvm.dbg.value(metadata i32 undef, metadata !4675, metadata !DIExpression()), !dbg !4728
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4675, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4728
  call void @llvm.dbg.value(metadata i32 undef, metadata !4675, metadata !DIExpression()), !dbg !4728
  %252 = icmp sgt i32 %58, 0, !dbg !4916
  br i1 %252, label %253, label %302, !dbg !4917

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4881
  %255 = icmp eq i24 %254, 0, !dbg !4881
  %256 = ptrtoint i8* %248 to i32, !dbg !4918
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4675, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4728
  %257 = ptrtoint i8* %247 to i32, !dbg !4918
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4675, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4728
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4675, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4728
  %258 = xor i1 %251, true, !dbg !4919
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4675, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4728
  %259 = sext i1 %258 to i32, !dbg !4919
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4675, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4728
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4675, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4728
  %260 = lshr i24 %246, 19, !dbg !4920
  %261 = and i24 %260, 1, !dbg !4920
  %262 = select i1 %255, i24 %261, i24 2, !dbg !4920
  %263 = zext i24 %262 to i32, !dbg !4920
  %264 = add i32 %257, %259, !dbg !4920
  %265 = add i32 %256, %263, !dbg !4920
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4675, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4728
  %266 = and i24 %246, 4194304, !dbg !4921
  %267 = icmp eq i24 %266, 0, !dbg !4921
  %268 = load i32, i32* %16, align 4, !dbg !4923
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4675, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4728
  call void @llvm.dbg.value(metadata i32 undef, metadata !4675, metadata !DIExpression()), !dbg !4728
  %269 = load i32, i32* %17, align 8, !dbg !4924
  %270 = select i1 %267, i32 0, i32 %269, !dbg !4924
  call void @llvm.dbg.value(metadata i32 undef, metadata !4675, metadata !DIExpression()), !dbg !4728
  %271 = add i32 %264, %58, !dbg !4924
  %272 = add i32 %265, %268, !dbg !4924
  %273 = add i32 %272, %270, !dbg !4925
  %274 = sub i32 %271, %273, !dbg !4925
  call void @llvm.dbg.value(metadata i32 %274, metadata !4653, metadata !DIExpression()), !dbg !4728
  %275 = and i24 %246, 4, !dbg !4926
  %276 = icmp eq i24 %275, 0, !dbg !4926
  br i1 %276, label %277, label %302, !dbg !4927

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4677, metadata !DIExpression()), !dbg !4928
  %278 = and i24 %246, 64, !dbg !4929
  %279 = icmp eq i24 %278, 0, !dbg !4929
  %280 = select i1 %279, i1 true, i1 %251, !dbg !4930
  %281 = select i1 %279, i8 %249, i8 0, !dbg !4930
  %282 = select i1 %279, i32 32, i32 48, !dbg !4930
  br i1 %280, label %287, label %283, !dbg !4930

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #25, !dbg !4931
  call void @llvm.dbg.value(metadata i32 %284, metadata !4682, metadata !DIExpression()), !dbg !4932
  %285 = icmp slt i32 %284, 0, !dbg !4933
  %286 = add i32 %29, 1, !dbg !4931
  call void @llvm.dbg.value(metadata i32 undef, metadata !4594, metadata !DIExpression()), !dbg !4714
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4728
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4718
  call void @llvm.dbg.value(metadata i32 %290, metadata !4594, metadata !DIExpression()), !dbg !4714
  call void @llvm.dbg.value(metadata i8 undef, metadata !4677, metadata !DIExpression()), !dbg !4928
  call void @llvm.dbg.value(metadata i8 %288, metadata !4657, metadata !DIExpression()), !dbg !4728
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !4935
  %292 = add i32 %291, -1, !dbg !4935
  br label %293, !dbg !4935

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !4936
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4718
  call void @llvm.dbg.value(metadata i32 %295, metadata !4594, metadata !DIExpression()), !dbg !4714
  call void @llvm.dbg.value(metadata i32 %294, metadata !4653, metadata !DIExpression()), !dbg !4728
  call void @llvm.dbg.value(metadata i32 %294, metadata !4653, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4728
  %296 = icmp sgt i32 %294, 0, !dbg !4937
  br i1 %296, label %297, label %302, !dbg !4935

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !4938
  call void @llvm.dbg.value(metadata i32 %298, metadata !4653, metadata !DIExpression()), !dbg !4728
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #25, !dbg !4939
  call void @llvm.dbg.value(metadata i32 %299, metadata !4688, metadata !DIExpression()), !dbg !4940
  %300 = icmp slt i32 %299, 0, !dbg !4941
  %301 = add i32 %295, 1, !dbg !4939
  call void @llvm.dbg.value(metadata i32 undef, metadata !4594, metadata !DIExpression()), !dbg !4714
  br i1 %300, label %361, label %293, !llvm.loop !4943

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4728
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4728
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4718
  call void @llvm.dbg.value(metadata i32 %305, metadata !4594, metadata !DIExpression()), !dbg !4714
  call void @llvm.dbg.value(metadata i32 %304, metadata !4653, metadata !DIExpression()), !dbg !4728
  call void @llvm.dbg.value(metadata i8 %303, metadata !4657, metadata !DIExpression()), !dbg !4728
  %306 = icmp eq i8 %303, 0, !dbg !4945
  br i1 %306, label %312, label %307, !dbg !4946

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !4947
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #25, !dbg !4948
  call void @llvm.dbg.value(metadata i32 %309, metadata !4691, metadata !DIExpression()), !dbg !4949
  %310 = icmp slt i32 %309, 0, !dbg !4950
  %311 = add i32 %305, 1, !dbg !4948
  call void @llvm.dbg.value(metadata i32 undef, metadata !4594, metadata !DIExpression()), !dbg !4714
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4718
  call void @llvm.dbg.value(metadata i32 %313, metadata !4594, metadata !DIExpression()), !dbg !4714
  %314 = lshr i24 %246, 20, !dbg !4952
  %315 = lshr i24 %246, 19, !dbg !4953
  %316 = or i24 %314, %315, !dbg !4954
  %317 = and i24 %316, 1, !dbg !4954
  %318 = icmp eq i24 %317, 0, !dbg !4954
  br i1 %318, label %323, label %319, !dbg !4955

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !4956
  call void @llvm.dbg.value(metadata i32 %320, metadata !4695, metadata !DIExpression()), !dbg !4957
  %321 = icmp slt i32 %320, 0, !dbg !4958
  %322 = add i32 %313, 1, !dbg !4956
  call void @llvm.dbg.value(metadata i32 undef, metadata !4594, metadata !DIExpression()), !dbg !4714
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4718
  call void @llvm.dbg.value(metadata i32 %324, metadata !4594, metadata !DIExpression()), !dbg !4714
  %325 = and i24 %246, 1048576, !dbg !4960
  %326 = icmp eq i24 %325, 0, !dbg !4960
  br i1 %326, label %333, label %327, !dbg !4961

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !4962
  %329 = zext i8 %328 to i32, !dbg !4962
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #25, !dbg !4962
  call void @llvm.dbg.value(metadata i32 %330, metadata !4701, metadata !DIExpression()), !dbg !4963
  %331 = icmp slt i32 %330, 0, !dbg !4964
  %332 = add i32 %324, 1, !dbg !4962
  call void @llvm.dbg.value(metadata i32 undef, metadata !4594, metadata !DIExpression()), !dbg !4714
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4718
  call void @llvm.dbg.value(metadata i32 %334, metadata !4594, metadata !DIExpression()), !dbg !4714
  %335 = load i32, i32* %16, align 4, !dbg !4966
  call void @llvm.dbg.value(metadata i32 %335, metadata !4676, metadata !DIExpression()), !dbg !4728
  br label %336, !dbg !4967

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !4968
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4718
  call void @llvm.dbg.value(metadata i32 %338, metadata !4594, metadata !DIExpression()), !dbg !4714
  call void @llvm.dbg.value(metadata i32 %337, metadata !4676, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4728
  %339 = icmp sgt i32 %337, 0, !dbg !4969
  br i1 %339, label %340, label %345, !dbg !4967

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !4970
  call void @llvm.dbg.value(metadata i32 %341, metadata !4676, metadata !DIExpression()), !dbg !4728
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !4971
  call void @llvm.dbg.value(metadata i32 %342, metadata !4705, metadata !DIExpression()), !dbg !4972
  %343 = icmp slt i32 %342, 0, !dbg !4973
  %344 = add i32 %338, 1, !dbg !4971
  call void @llvm.dbg.value(metadata i32 undef, metadata !4594, metadata !DIExpression()), !dbg !4714
  br i1 %343, label %361, label %336, !llvm.loop !4975

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #24, !dbg !4977
  call void @llvm.dbg.value(metadata i32 %346, metadata !4708, metadata !DIExpression()), !dbg !4978
  %347 = icmp slt i32 %346, 0, !dbg !4979
  call void @llvm.dbg.value(metadata i32 undef, metadata !4594, metadata !DIExpression()), !dbg !4714
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !4977
  call void @llvm.dbg.value(metadata i32 %349, metadata !4594, metadata !DIExpression()), !dbg !4714
  call void @llvm.dbg.value(metadata i32 %304, metadata !4653, metadata !DIExpression()), !dbg !4728
  %350 = icmp sgt i32 %304, 0, !dbg !4981
  br i1 %350, label %351, label %363, !dbg !4982

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !4982
  %353 = add i32 %352, %338, !dbg !4982
  br label %354, !dbg !4982

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4594, metadata !DIExpression()), !dbg !4714
  call void @llvm.dbg.value(metadata i32 %355, metadata !4653, metadata !DIExpression()), !dbg !4728
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #25, !dbg !4983
  call void @llvm.dbg.value(metadata i32 %356, metadata !4710, metadata !DIExpression()), !dbg !4984
  %357 = icmp slt i32 %356, 0, !dbg !4985
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !4987
  call void @llvm.dbg.value(metadata i32 undef, metadata !4594, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4714
  call void @llvm.dbg.value(metadata i32 %359, metadata !4653, metadata !DIExpression()), !dbg !4728
  %360 = icmp sgt i32 %355, 1, !dbg !4981
  br i1 %360, label %354, label %363, !dbg !4982, !llvm.loop !4988

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4594, metadata !DIExpression()), !dbg !4714
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4725
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4718
  call void @llvm.dbg.value(metadata i32 %364, metadata !4594, metadata !DIExpression()), !dbg !4714
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4725
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4714
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #23, !dbg !4990
  ret i32 %366, !dbg !4990
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #12

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !4991 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4995, metadata !DIExpression()), !dbg !4997
  call void @llvm.dbg.value(metadata i8* %1, metadata !4996, metadata !DIExpression()), !dbg !4997
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !4998
  store i24 0, i24* %3, align 4, !dbg !4998
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4998
  store i8 0, i8* %4, align 1, !dbg !4998
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4998
  store i32 0, i32* %5, align 4, !dbg !4998
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4998
  store i32 0, i32* %6, align 4, !dbg !4998
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4999
  call void @llvm.dbg.value(metadata i8* %7, metadata !4996, metadata !DIExpression()), !dbg !4997
  %8 = load i8, i8* %7, align 1, !dbg !5000
  %9 = icmp eq i8 %8, 37, !dbg !5002
  br i1 %9, label %10, label %12, !dbg !5003

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5004
  call void @llvm.dbg.value(metadata i8* %11, metadata !4996, metadata !DIExpression()), !dbg !4997
  store i8 37, i8* %4, align 1, !dbg !5006
  br label %18, !dbg !5007

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #24, !dbg !5008
  call void @llvm.dbg.value(metadata i8* %13, metadata !4996, metadata !DIExpression()), !dbg !4997
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #24, !dbg !5009
  call void @llvm.dbg.value(metadata i8* %14, metadata !4996, metadata !DIExpression()), !dbg !4997
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #24, !dbg !5010
  call void @llvm.dbg.value(metadata i8* %15, metadata !4996, metadata !DIExpression()), !dbg !4997
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #24, !dbg !5011
  call void @llvm.dbg.value(metadata i8* %16, metadata !4996, metadata !DIExpression()), !dbg !4997
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #24, !dbg !5012
  call void @llvm.dbg.value(metadata i8* %17, metadata !4996, metadata !DIExpression()), !dbg !4997
  br label %18, !dbg !5013

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !4997
  ret i8* %19, !dbg !5014
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !5015 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5019, metadata !DIExpression()), !dbg !5026
  call void @llvm.dbg.value(metadata i8* %1, metadata !5020, metadata !DIExpression()), !dbg !5026
  call void @llvm.dbg.value(metadata i8* %2, metadata !5021, metadata !DIExpression()), !dbg !5026
  call void @llvm.dbg.value(metadata i8* %3, metadata !5022, metadata !DIExpression()), !dbg !5026
  call void @llvm.dbg.value(metadata i32 0, metadata !5023, metadata !DIExpression()), !dbg !5026
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !5027

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !5028
  call void @llvm.dbg.value(metadata i32 %9, metadata !5023, metadata !DIExpression()), !dbg !5026
  call void @llvm.dbg.value(metadata i8* %8, metadata !5021, metadata !DIExpression()), !dbg !5026
  %10 = icmp ult i8* %8, %3, !dbg !5029
  br i1 %10, label %11, label %13, !dbg !5030

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !5031
  br label %17, !dbg !5030

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !5032

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !5033
  %16 = icmp eq i8 %15, 0, !dbg !5032
  br i1 %16, label %24, label %17, !dbg !5027

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !5031
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5034
  call void @llvm.dbg.value(metadata i8* %19, metadata !5021, metadata !DIExpression()), !dbg !5026
  %20 = zext i8 %18 to i32, !dbg !5035
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #25, !dbg !5036
  call void @llvm.dbg.value(metadata i32 %21, metadata !5024, metadata !DIExpression()), !dbg !5037
  %22 = icmp slt i32 %21, 0, !dbg !5038
  %23 = add i32 %9, 1, !dbg !5040
  call void @llvm.dbg.value(metadata i32 undef, metadata !5023, metadata !DIExpression()), !dbg !5026
  br i1 %22, label %24, label %7, !llvm.loop !5041

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !5026
  ret i32 %25, !dbg !5043
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #13 !dbg !5044 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !5048, metadata !DIExpression()), !dbg !5058
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !5049, metadata !DIExpression()), !dbg !5058
  call void @llvm.dbg.value(metadata i8* %2, metadata !5050, metadata !DIExpression()), !dbg !5058
  call void @llvm.dbg.value(metadata i8* %3, metadata !5051, metadata !DIExpression()), !dbg !5058
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !5059
  %6 = load i8, i8* %5, align 1, !dbg !5059
  %7 = zext i8 %6 to i32, !dbg !5060
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #24, !dbg !5061
  %9 = icmp eq i32 %8, 0, !dbg !5061
  call void @llvm.dbg.value(metadata i1 %9, metadata !5052, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5058
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #24, !dbg !5062
  call void @llvm.dbg.value(metadata i32 %10, metadata !5053, metadata !DIExpression()), !dbg !5058
  %11 = ptrtoint i8* %3 to i32, !dbg !5063
  %12 = ptrtoint i8* %2 to i32, !dbg !5063
  %13 = sub i32 %11, %12, !dbg !5063
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !5064
  call void @llvm.dbg.value(metadata i8* %14, metadata !5055, metadata !DIExpression()), !dbg !5058
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !5065

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !5058
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !5048, metadata !DIExpression()), !dbg !5058
  call void @llvm.dbg.value(metadata i8* %18, metadata !5055, metadata !DIExpression()), !dbg !5058
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !5066
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !5067
  call void @llvm.dbg.value(metadata i32 %25, metadata !5056, metadata !DIExpression()), !dbg !5068
  %26 = icmp ult i32 %25, 10, !dbg !5069
  %27 = select i1 %26, i32 48, i32 %16, !dbg !5070
  %28 = add i32 %27, %25, !dbg !5068
  %29 = trunc i32 %28 to i8, !dbg !5070
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !5071
  call void @llvm.dbg.value(metadata i8* %30, metadata !5055, metadata !DIExpression()), !dbg !5058
  store i8 %29, i8* %30, align 1, !dbg !5072
  call void @llvm.dbg.value(metadata i64 %22, metadata !5048, metadata !DIExpression()), !dbg !5058
  %31 = icmp uge i64 %19, %15, !dbg !5073
  %32 = icmp ugt i8* %30, %2, !dbg !5074
  %33 = and i1 %31, %32, !dbg !5074
  br i1 %33, label %17, label %34, !dbg !5075, !llvm.loop !5076

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !5078
  %36 = load i24, i24* %35, align 4, !dbg !5078
  %37 = and i24 %36, 32, !dbg !5078
  %38 = icmp eq i24 %37, 0, !dbg !5078
  br i1 %38, label %44, label %39, !dbg !5080

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !5081

40:                                               ; preds = %39
  br label %41, !dbg !5083

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !5087
  store i24 %43, i24* %35, align 4, !dbg !5087
  br label %44, !dbg !5088

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !5088
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #9 !dbg !5089 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5095, metadata !DIExpression()), !dbg !5098
  call void @llvm.dbg.value(metadata i8* %1, metadata !5096, metadata !DIExpression()), !dbg !5098
  call void @llvm.dbg.value(metadata i32 %2, metadata !5097, metadata !DIExpression()), !dbg !5098
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5099
  %5 = load i24, i24* %4, align 4, !dbg !5099
  %6 = lshr i24 %5, 11, !dbg !5099
  %7 = and i24 %6, 15, !dbg !5099
  %8 = zext i24 %7 to i32, !dbg !5099
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !5100

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !5101
  store i32 %2, i32* %10, align 4, !dbg !5103
  br label %28, !dbg !5104

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !5105
  store i8 %12, i8* %1, align 1, !dbg !5106
  br label %28, !dbg !5107

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !5108
  %15 = bitcast i8* %1 to i16*, !dbg !5109
  store i16 %14, i16* %15, align 2, !dbg !5110
  br label %28, !dbg !5111

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !5112
  store i32 %2, i32* %17, align 4, !dbg !5113
  br label %28, !dbg !5114

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !5115
  %20 = bitcast i8* %1 to i64*, !dbg !5116
  store i64 %19, i64* %20, align 8, !dbg !5117
  br label %28, !dbg !5118

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5119
  %23 = bitcast i8* %1 to i64*, !dbg !5120
  store i64 %22, i64* %23, align 8, !dbg !5121
  br label %28, !dbg !5122

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5123
  store i32 %2, i32* %25, align 4, !dbg !5124
  br label %28, !dbg !5125

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5126
  store i32 %2, i32* %27, align 4, !dbg !5127
  br label %28, !dbg !5128

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5129
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #4 !dbg !5130 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5133, metadata !DIExpression()), !dbg !5134
  %2 = add i32 %0, -65, !dbg !5135
  %3 = icmp ult i32 %2, 26, !dbg !5136
  %4 = zext i1 %3 to i32, !dbg !5136
  ret i32 %4, !dbg !5137
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #4 !dbg !5138 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5142, metadata !DIExpression()), !dbg !5143
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5144

2:                                                ; preds = %1
  br label %4, !dbg !5145

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5147

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5148
  ret i32 %5, !dbg !5149
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #13 !dbg !5150 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5152, metadata !DIExpression()), !dbg !5155
  call void @llvm.dbg.value(metadata i8* %1, metadata !5153, metadata !DIExpression()), !dbg !5155
  call void @llvm.dbg.value(metadata i8 1, metadata !5154, metadata !DIExpression()), !dbg !5155
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5156

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5154, metadata !DIExpression()), !dbg !5155
  call void @llvm.dbg.value(metadata i8* %5, metadata !5153, metadata !DIExpression()), !dbg !5155
  %6 = load i8, i8* %5, align 1, !dbg !5157
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5159

7:                                                ; preds = %4
  br label %11, !dbg !5160

8:                                                ; preds = %4
  br label %11, !dbg !5162

9:                                                ; preds = %4
  br label %11, !dbg !5163

10:                                               ; preds = %4
  br label %11, !dbg !5164

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5165
  %14 = or i24 %13, %12, !dbg !5165
  store i24 %14, i24* %3, align 4, !dbg !5165
  call void @llvm.dbg.value(metadata i8 poison, metadata !5154, metadata !DIExpression()), !dbg !5155
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5153, metadata !DIExpression()), !dbg !5155
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5154, metadata !DIExpression()), !dbg !5155
  call void @llvm.dbg.value(metadata i8* %15, metadata !5153, metadata !DIExpression()), !dbg !5155
  %17 = load i24, i24* %3, align 4, !dbg !5166
  %18 = and i24 %17, 68, !dbg !5168
  %19 = icmp eq i24 %18, 68, !dbg !5168
  br i1 %19, label %20, label %22, !dbg !5168

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5169
  store i24 %21, i24* %3, align 4, !dbg !5169
  br label %22, !dbg !5171

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5172
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5173 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5175, metadata !DIExpression()), !dbg !5179
  call void @llvm.dbg.value(metadata i8* %1, metadata !5176, metadata !DIExpression()), !dbg !5179
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5180
  %5 = load i24, i24* %4, align 4, !dbg !5181
  %6 = or i24 %5, 128, !dbg !5181
  store i24 %6, i24* %4, align 4, !dbg !5181
  call void @llvm.dbg.value(metadata i8* %1, metadata !5176, metadata !DIExpression()), !dbg !5179
  %7 = load i8, i8* %1, align 1, !dbg !5182
  %8 = icmp eq i8 %7, 42, !dbg !5184
  br i1 %8, label %9, label %12, !dbg !5185

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5186
  store i24 %10, i24* %4, align 4, !dbg !5186
  call void @llvm.dbg.value(metadata i8* %1, metadata !5176, metadata !DIExpression()), !dbg !5179
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5188
  call void @llvm.dbg.value(metadata i8* %11, metadata !5176, metadata !DIExpression()), !dbg !5179
  store i8* %11, i8** %3, align 4, !dbg !5188
  br label %29, !dbg !5189

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5177, metadata !DIExpression()), !dbg !5179
  call void @llvm.dbg.value(metadata i8** %3, metadata !5176, metadata !DIExpression(DW_OP_deref)), !dbg !5179
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5190
  call void @llvm.dbg.value(metadata i32 %13, metadata !5178, metadata !DIExpression()), !dbg !5179
  %14 = load i8*, i8** %3, align 4, !dbg !5191
  call void @llvm.dbg.value(metadata i8* %14, metadata !5176, metadata !DIExpression()), !dbg !5179
  %15 = icmp eq i8* %14, %1, !dbg !5193
  br i1 %15, label %29, label %16, !dbg !5194

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5195
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5197
  store i32 %13, i32* %18, align 4, !dbg !5198
  %19 = lshr i32 %13, 31, !dbg !5199
  %20 = lshr i24 %17, 1, !dbg !5200
  %21 = and i24 %20, 1, !dbg !5200
  %22 = zext i24 %21 to i32, !dbg !5200
  %23 = or i32 %19, %22, !dbg !5200
  %24 = trunc i32 %23 to i24, !dbg !5200
  %25 = shl nuw nsw i24 %24, 1, !dbg !5200
  %26 = and i24 %17, -131, !dbg !5200
  %27 = or i24 %26, 128, !dbg !5200
  %28 = or i24 %25, %27, !dbg !5200
  store i24 %28, i24* %4, align 4, !dbg !5200
  br label %29, !dbg !5201

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5179
  ret i8* %30, !dbg !5202
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5203 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5205, metadata !DIExpression()), !dbg !5208
  call void @llvm.dbg.value(metadata i8* %1, metadata !5206, metadata !DIExpression()), !dbg !5208
  %4 = load i8, i8* %1, align 1, !dbg !5209
  %5 = icmp eq i8 %4, 46, !dbg !5210
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5211
  %7 = load i24, i24* %6, align 4, !dbg !5212
  %8 = select i1 %5, i24 512, i24 0, !dbg !5212
  %9 = and i24 %7, -513, !dbg !5212
  %10 = or i24 %9, %8, !dbg !5212
  store i24 %10, i24* %6, align 4, !dbg !5212
  br i1 %5, label %11, label %32, !dbg !5213

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5206, metadata !DIExpression()), !dbg !5208
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5214
  call void @llvm.dbg.value(metadata i8* %12, metadata !5206, metadata !DIExpression()), !dbg !5208
  store i8* %12, i8** %3, align 4, !dbg !5214
  %13 = load i8, i8* %12, align 1, !dbg !5215
  %14 = icmp eq i8 %13, 42, !dbg !5217
  br i1 %14, label %15, label %18, !dbg !5218

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5219
  store i24 %16, i24* %6, align 4, !dbg !5219
  call void @llvm.dbg.value(metadata i8* %12, metadata !5206, metadata !DIExpression()), !dbg !5208
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5221
  call void @llvm.dbg.value(metadata i8* %17, metadata !5206, metadata !DIExpression()), !dbg !5208
  store i8* %17, i8** %3, align 4, !dbg !5221
  br label %32, !dbg !5222

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5206, metadata !DIExpression(DW_OP_deref)), !dbg !5208
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5223
  call void @llvm.dbg.value(metadata i32 %19, metadata !5207, metadata !DIExpression()), !dbg !5208
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5224
  store i32 %19, i32* %20, align 4, !dbg !5225
  %21 = lshr i32 %19, 31, !dbg !5226
  %22 = load i24, i24* %6, align 4, !dbg !5227
  %23 = lshr i24 %22, 1, !dbg !5227
  %24 = and i24 %23, 1, !dbg !5227
  %25 = zext i24 %24 to i32, !dbg !5227
  %26 = or i32 %21, %25, !dbg !5227
  %27 = trunc i32 %26 to i24, !dbg !5227
  %28 = shl nuw nsw i24 %27, 1, !dbg !5227
  %29 = and i24 %22, -3, !dbg !5227
  %30 = or i24 %28, %29, !dbg !5227
  store i24 %30, i24* %6, align 4, !dbg !5227
  %31 = load i8*, i8** %3, align 4, !dbg !5228
  call void @llvm.dbg.value(metadata i8* %31, metadata !5206, metadata !DIExpression()), !dbg !5208
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5208
  ret i8* %33, !dbg !5229
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !5230 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5232, metadata !DIExpression()), !dbg !5234
  call void @llvm.dbg.value(metadata i8* %1, metadata !5233, metadata !DIExpression()), !dbg !5234
  %3 = load i8, i8* %1, align 1, !dbg !5235
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5236

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5237
  call void @llvm.dbg.value(metadata i8* %5, metadata !5233, metadata !DIExpression()), !dbg !5234
  %6 = load i8, i8* %5, align 1, !dbg !5240
  %7 = icmp eq i8 %6, 104, !dbg !5241
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5242
  %9 = load i24, i24* %8, align 4, !dbg !5242
  %10 = and i24 %9, -30721, !dbg !5242
  br i1 %7, label %11, label %14, !dbg !5243

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5244
  store i24 %12, i24* %8, align 4, !dbg !5244
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5246
  call void @llvm.dbg.value(metadata i8* %13, metadata !5233, metadata !DIExpression()), !dbg !5234
  br label %56, !dbg !5247

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5248
  store i24 %15, i24* %8, align 4, !dbg !5248
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5250
  call void @llvm.dbg.value(metadata i8* %17, metadata !5233, metadata !DIExpression()), !dbg !5234
  %18 = load i8, i8* %17, align 1, !dbg !5252
  %19 = icmp eq i8 %18, 108, !dbg !5253
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5254
  %21 = load i24, i24* %20, align 4, !dbg !5254
  %22 = and i24 %21, -30721, !dbg !5254
  br i1 %19, label %23, label %26, !dbg !5255

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5256
  store i24 %24, i24* %20, align 4, !dbg !5256
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5258
  call void @llvm.dbg.value(metadata i8* %25, metadata !5233, metadata !DIExpression()), !dbg !5234
  br label %56, !dbg !5259

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5260
  store i24 %27, i24* %20, align 4, !dbg !5260
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5262
  %30 = load i24, i24* %29, align 4, !dbg !5263
  %31 = and i24 %30, -30721, !dbg !5263
  %32 = or i24 %31, 10240, !dbg !5263
  store i24 %32, i24* %29, align 4, !dbg !5263
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5264
  call void @llvm.dbg.value(metadata i8* %33, metadata !5233, metadata !DIExpression()), !dbg !5234
  br label %56, !dbg !5265

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5266
  %36 = load i24, i24* %35, align 4, !dbg !5267
  %37 = and i24 %36, -30721, !dbg !5267
  %38 = or i24 %37, 12288, !dbg !5267
  store i24 %38, i24* %35, align 4, !dbg !5267
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5268
  call void @llvm.dbg.value(metadata i8* %39, metadata !5233, metadata !DIExpression()), !dbg !5234
  br label %56, !dbg !5269

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5270
  %42 = load i24, i24* %41, align 4, !dbg !5271
  %43 = and i24 %42, -30721, !dbg !5271
  %44 = or i24 %43, 14336, !dbg !5271
  store i24 %44, i24* %41, align 4, !dbg !5271
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5272
  call void @llvm.dbg.value(metadata i8* %45, metadata !5233, metadata !DIExpression()), !dbg !5234
  br label %56, !dbg !5273

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5274
  %48 = load i24, i24* %47, align 4, !dbg !5275
  %49 = and i24 %48, -30723, !dbg !5275
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5276
  call void @llvm.dbg.value(metadata i8* %50, metadata !5233, metadata !DIExpression()), !dbg !5234
  %51 = or i24 %49, 16386, !dbg !5277
  store i24 %51, i24* %47, align 4, !dbg !5277
  br label %56, !dbg !5278

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5279
  %54 = load i24, i24* %53, align 4, !dbg !5280
  %55 = and i24 %54, -30721, !dbg !5280
  store i24 %55, i24* %53, align 4, !dbg !5280
  br label %56, !dbg !5281

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5233, metadata !DIExpression()), !dbg !5234
  ret i8* %57, !dbg !5282
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !5283 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5285, metadata !DIExpression()), !dbg !5290
  call void @llvm.dbg.value(metadata i8* %1, metadata !5286, metadata !DIExpression()), !dbg !5290
  call void @llvm.dbg.value(metadata i8 0, metadata !5287, metadata !DIExpression()), !dbg !5290
  call void @llvm.dbg.value(metadata i8* %1, metadata !5286, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5290
  %3 = load i8, i8* %1, align 1, !dbg !5291
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5292
  store i8 %3, i8* %4, align 1, !dbg !5293
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5294

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5295

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5296
  %9 = load i24, i24* %8, align 4, !dbg !5296
  %10 = and i24 %9, -458753, !dbg !5296
  %11 = or i24 %10, %7, !dbg !5296
  call void @llvm.dbg.label(metadata !5288), !dbg !5297
  %12 = and i24 %9, 30720, !dbg !5298
  %13 = icmp eq i24 %12, 16384, !dbg !5298
  %14 = zext i1 %13 to i24, !dbg !5300
  %15 = or i24 %11, %14, !dbg !5300
  %16 = icmp eq i8 %3, 99, !dbg !5301
  br i1 %16, label %17, label %43, !dbg !5303

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5304
  %19 = icmp ne i24 %18, 0, !dbg !5304
  call void @llvm.dbg.value(metadata i1 %19, metadata !5287, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5290
  br label %43, !dbg !5306

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5307
  %22 = load i24, i24* %21, align 4, !dbg !5308
  %23 = and i24 %22, -458753, !dbg !5308
  %24 = or i24 %23, 262144, !dbg !5308
  call void @llvm.dbg.value(metadata i8 1, metadata !5287, metadata !DIExpression()), !dbg !5290
  br label %43, !dbg !5309

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5312
  %27 = load i24, i24* %26, align 4, !dbg !5313
  %28 = and i24 %27, -458753, !dbg !5313
  %29 = or i24 %28, 196608, !dbg !5313
  %30 = and i24 %27, 30720, !dbg !5314
  %31 = icmp eq i24 %30, 16384, !dbg !5314
  br label %43, !dbg !5316

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5317
  %34 = load i24, i24* %33, align 4, !dbg !5318
  %35 = and i24 %34, -458753, !dbg !5318
  %36 = or i24 %35, 196608, !dbg !5318
  %37 = and i24 %34, 30720, !dbg !5319
  %38 = icmp ne i24 %37, 0, !dbg !5319
  br label %43, !dbg !5321

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5322
  %41 = load i24, i24* %40, align 4, !dbg !5323
  %42 = or i24 %41, 1, !dbg !5323
  br label %43, !dbg !5324

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5325
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5326
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5327
  call void @llvm.dbg.value(metadata i8* %48, metadata !5286, metadata !DIExpression()), !dbg !5290
  call void @llvm.dbg.value(metadata i8 poison, metadata !5287, metadata !DIExpression()), !dbg !5290
  %49 = lshr i24 %44, 1, !dbg !5325
  %50 = and i24 %49, 1, !dbg !5325
  %51 = zext i24 %50 to i32, !dbg !5325
  %52 = or i32 %51, %47, !dbg !5325
  %53 = trunc i32 %52 to i24, !dbg !5325
  %54 = shl nuw nsw i24 %53, 1, !dbg !5325
  %55 = and i24 %44, -3, !dbg !5325
  %56 = or i24 %54, %55, !dbg !5325
  store i24 %56, i24* %46, align 4, !dbg !5325
  ret i8* %48, !dbg !5328
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #13 !dbg !5329 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5333, metadata !DIExpression()), !dbg !5336
  %2 = load i8*, i8** %0, align 4, !dbg !5337
  call void @llvm.dbg.value(metadata i8* %2, metadata !5334, metadata !DIExpression()), !dbg !5336
  call void @llvm.dbg.value(metadata i32 0, metadata !5335, metadata !DIExpression()), !dbg !5336
  %3 = load i8, i8* %2, align 1, !dbg !5338
  %4 = zext i8 %3 to i32, !dbg !5339
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #24, !dbg !5340
  %6 = icmp eq i32 %5, 0, !dbg !5341
  br i1 %6, label %19, label %7, !dbg !5341

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5335, metadata !DIExpression()), !dbg !5336
  call void @llvm.dbg.value(metadata i8* %10, metadata !5334, metadata !DIExpression()), !dbg !5336
  %11 = mul i32 %9, 10, !dbg !5342
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5344
  call void @llvm.dbg.value(metadata i8* %12, metadata !5334, metadata !DIExpression()), !dbg !5336
  %13 = add i32 %11, -48, !dbg !5345
  %14 = add i32 %13, %8, !dbg !5346
  call void @llvm.dbg.value(metadata i32 %14, metadata !5335, metadata !DIExpression()), !dbg !5336
  %15 = load i8, i8* %12, align 1, !dbg !5338
  %16 = zext i8 %15 to i32, !dbg !5339
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #24, !dbg !5340
  %18 = icmp eq i32 %17, 0, !dbg !5341
  br i1 %18, label %19, label %7, !dbg !5341, !llvm.loop !5347

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5336
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5336
  store i8* %20, i8** %0, align 4, !dbg !5349
  ret i32 %21, !dbg !5350
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #4 !dbg !5351 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5353, metadata !DIExpression()), !dbg !5354
  %2 = add i32 %0, -48, !dbg !5355
  %3 = icmp ult i32 %2, 10, !dbg !5356
  %4 = zext i1 %3 to i32, !dbg !5356
  ret i32 %4, !dbg !5357
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @assert_post_action(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5358 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5363, metadata !DIExpression()), !dbg !5365
  call void @llvm.dbg.value(metadata i32 %1, metadata !5364, metadata !DIExpression()), !dbg !5365
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !5366, !srcloc !5368
  ret void, !dbg !5369
}

; Function Attrs: noinline nounwind optsize
define dso_local void @assert_print(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5370 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5372, metadata !DIExpression()), !dbg !5380
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5381
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5381
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5373, metadata !DIExpression()), !dbg !5382
  call void @llvm.va_start(i8* nonnull %3), !dbg !5383
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5384
  %5 = load i32, i32* %4, align 4, !dbg !5384
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5384
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !5384
  call void @llvm.va_end(i8* nonnull %3), !dbg !5385
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5386
  ret void, !dbg !5386
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5387 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #23, !dbg !5389, !srcloc !5390
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #23, !dbg !5391, !srcloc !5392
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !5393, !srcloc !5394
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #23, !dbg !5395, !srcloc !5396
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !5397, !srcloc !5398
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,91\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !5399, !srcloc !5400
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,168000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !5401, !srcloc !5402
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #23, !dbg !5403, !srcloc !5404
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,2048\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !5405, !srcloc !5406
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !5407, !srcloc !5408
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !5409, !srcloc !5410
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !5411, !srcloc !5412
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !5413, !srcloc !5414
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !5415, !srcloc !5416
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !5417, !srcloc !5418
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #23, !dbg !5419, !srcloc !5420
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !5421, !srcloc !5422
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #23, !dbg !5423, !srcloc !5424
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !5425, !srcloc !5426
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #23, !dbg !5427, !srcloc !5428
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !5429, !srcloc !5430
  tail call void asm sideeffect ".globl\09CONFIG_TEST_EXTRA_STACK_SIZE\0A\09.equ\09CONFIG_TEST_EXTRA_STACK_SIZE,0\0A\09.type\09CONFIG_TEST_EXTRA_STACK_SIZE,%object", ""() #23, !dbg !5431, !srcloc !5432
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !5433, !srcloc !5434
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !5435, !srcloc !5436
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #23, !dbg !5437, !srcloc !5438
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !5439, !srcloc !5440
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !5441, !srcloc !5442
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !5443, !srcloc !5444
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #23, !dbg !5445, !srcloc !5446
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !5447, !srcloc !5448
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !5449, !srcloc !5450
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #23, !dbg !5451, !srcloc !5452
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5453, !srcloc !5454
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_ADC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_ADC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_ADC_ENABLED,%object", ""() #23, !dbg !5455, !srcloc !5456
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_CCM_ENABLED,%object", ""() #23, !dbg !5457, !srcloc !5458
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #23, !dbg !5459, !srcloc !5460
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5461, !srcloc !5462
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #23, !dbg !5463, !srcloc !5464
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #23, !dbg !5465, !srcloc !5466
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #23, !dbg !5467, !srcloc !5468
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5469, !srcloc !5470
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_OTGFS_ENABLED,%object", ""() #23, !dbg !5471, !srcloc !5472
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #23, !dbg !5473, !srcloc !5474
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,%object", ""() #23, !dbg !5475, !srcloc !5476
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #23, !dbg !5477, !srcloc !5478
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RNG_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RNG_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RNG_ENABLED,%object", ""() #23, !dbg !5479, !srcloc !5480
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #23, !dbg !5481, !srcloc !5482
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,%object", ""() #23, !dbg !5483, !srcloc !5484
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #23, !dbg !5485, !srcloc !5486
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #23, !dbg !5487, !srcloc !5488
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5489, !srcloc !5490
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #23, !dbg !5491, !srcloc !5492
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #23, !dbg !5493, !srcloc !5494
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ZEPHYR_MEMORY_REGION_ENABLED,%object", ""() #23, !dbg !5495, !srcloc !5496
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !5497, !srcloc !5498
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !5499, !srcloc !5500
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !5501, !srcloc !5502
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !5503, !srcloc !5504
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #23, !dbg !5505, !srcloc !5506
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #23, !dbg !5507, !srcloc !5508
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !5509, !srcloc !5510
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !5511, !srcloc !5512
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !5513, !srcloc !5514
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !5515, !srcloc !5516
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !5517, !srcloc !5518
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !5519, !srcloc !5520
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !5521, !srcloc !5522
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !5523, !srcloc !5524
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !5525, !srcloc !5526
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !5527, !srcloc !5528
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !5529, !srcloc !5530
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !5531, !srcloc !5532
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !5533, !srcloc !5534
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !5535, !srcloc !5536
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !5537, !srcloc !5538
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !5539, !srcloc !5540
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !5541, !srcloc !5542
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !5543, !srcloc !5544
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !5545, !srcloc !5546
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !5547, !srcloc !5548
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !5549, !srcloc !5550
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !5551, !srcloc !5552
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !5553, !srcloc !5554
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !5555, !srcloc !5556
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !5557, !srcloc !5558
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !5559, !srcloc !5560
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #23, !dbg !5561, !srcloc !5562
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #23, !dbg !5563, !srcloc !5564
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !5565, !srcloc !5566
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_AEROCORE2\0A\09.equ\09CONFIG_BOARD_96B_AEROCORE2,1\0A\09.type\09CONFIG_BOARD_96B_AEROCORE2,%object", ""() #23, !dbg !5567, !srcloc !5568
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #23, !dbg !5569, !srcloc !5570
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #23, !dbg !5571, !srcloc !5572
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #23, !dbg !5573, !srcloc !5574
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !5575, !srcloc !5576
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #23, !dbg !5577, !srcloc !5578
  tail call void asm sideeffect ".globl\09CONFIG_STM32_CCM\0A\09.equ\09CONFIG_STM32_CCM,1\0A\09.type\09CONFIG_STM32_CCM,%object", ""() #23, !dbg !5579, !srcloc !5580
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F427XX\0A\09.equ\09CONFIG_SOC_STM32F427XX,1\0A\09.type\09CONFIG_SOC_STM32F427XX,%object", ""() #23, !dbg !5581, !srcloc !5582
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5583, !srcloc !5584
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #23, !dbg !5585, !srcloc !5586
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !5587, !srcloc !5588
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !5589, !srcloc !5590
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !5591, !srcloc !5592
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !5593, !srcloc !5594
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !5595, !srcloc !5596
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !5597, !srcloc !5598
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !5599, !srcloc !5600
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !5601, !srcloc !5602
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #23, !dbg !5603, !srcloc !5604
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !5605, !srcloc !5606
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !5607, !srcloc !5608
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #23, !dbg !5609, !srcloc !5610
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !5611, !srcloc !5612
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !5613, !srcloc !5614
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !5615, !srcloc !5616
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !5617, !srcloc !5618
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !5619, !srcloc !5620
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !5621, !srcloc !5622
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #23, !dbg !5623, !srcloc !5624
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !5625, !srcloc !5626
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !5627, !srcloc !5628
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !5629, !srcloc !5630
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #23, !dbg !5631, !srcloc !5632
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #23, !dbg !5633, !srcloc !5634
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #23, !dbg !5635, !srcloc !5636
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #23, !dbg !5637, !srcloc !5638
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !5639, !srcloc !5640
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !5641, !srcloc !5642
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #23, !dbg !5643, !srcloc !5644
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #23, !dbg !5645, !srcloc !5646
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !5647, !srcloc !5648
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,192\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !5649, !srcloc !5650
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !5651, !srcloc !5652
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #23, !dbg !5653, !srcloc !5654
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #23, !dbg !5655, !srcloc !5656
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #23, !dbg !5657, !srcloc !5658
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #23, !dbg !5659, !srcloc !5660
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #23, !dbg !5661, !srcloc !5662
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !5663, !srcloc !5664
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !5665, !srcloc !5666
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !5667, !srcloc !5668
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !5669, !srcloc !5670
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !5671, !srcloc !5672
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !5673, !srcloc !5674
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !5675, !srcloc !5676
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !5677, !srcloc !5678
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #23, !dbg !5679, !srcloc !5680
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #23, !dbg !5681, !srcloc !5682
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #23, !dbg !5683, !srcloc !5684
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !5685, !srcloc !5686
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !5687, !srcloc !5688
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !5689, !srcloc !5690
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !5691, !srcloc !5692
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !5693, !srcloc !5694
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5695, !srcloc !5696
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !5697, !srcloc !5698
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !5699, !srcloc !5700
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !5701, !srcloc !5702
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #23, !dbg !5703, !srcloc !5704
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #23, !dbg !5705, !srcloc !5706
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #23, !dbg !5707, !srcloc !5708
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #23, !dbg !5709, !srcloc !5710
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #23, !dbg !5711, !srcloc !5712
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #23, !dbg !5713, !srcloc !5714
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #23, !dbg !5715, !srcloc !5716
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !5717, !srcloc !5718
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5719, !srcloc !5720
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #23, !dbg !5721, !srcloc !5722
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !5723, !srcloc !5724
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !5725, !srcloc !5726
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !5727, !srcloc !5728
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !5729, !srcloc !5730
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !5731, !srcloc !5732
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !5733, !srcloc !5734
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !5735, !srcloc !5736
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !5737, !srcloc !5738
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,4096\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !5739, !srcloc !5740
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !5741, !srcloc !5742
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #23, !dbg !5743, !srcloc !5744
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !5745, !srcloc !5746
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #23, !dbg !5747, !srcloc !5748
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !5749, !srcloc !5750
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #23, !dbg !5751, !srcloc !5752
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !5753, !srcloc !5754
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_NAME\0A\09.equ\09CONFIG_THREAD_NAME,1\0A\09.type\09CONFIG_THREAD_NAME,%object", ""() #23, !dbg !5755, !srcloc !5756
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_MAX_NAME_LEN\0A\09.equ\09CONFIG_THREAD_MAX_NAME_LEN,32\0A\09.type\09CONFIG_THREAD_MAX_NAME_LEN,%object", ""() #23, !dbg !5757, !srcloc !5758
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !5759, !srcloc !5760
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !5761, !srcloc !5762
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !5763, !srcloc !5764
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !5765, !srcloc !5766
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !5767, !srcloc !5768
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !5769, !srcloc !5770
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !5771, !srcloc !5772
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !5773, !srcloc !5774
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !5775, !srcloc !5776
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !5777, !srcloc !5778
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !5779, !srcloc !5780
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !5781, !srcloc !5782
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !5783, !srcloc !5784
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !5785, !srcloc !5786
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !5787, !srcloc !5788
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !5789, !srcloc !5790
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !5791, !srcloc !5792
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !5793, !srcloc !5794
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !5795, !srcloc !5796
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !5797, !srcloc !5798
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5799, !srcloc !5800
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !5801, !srcloc !5802
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !5803, !srcloc !5804
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !5805, !srcloc !5806
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !5807, !srcloc !5808
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !5809, !srcloc !5810
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #23, !dbg !5811, !srcloc !5812
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #23, !dbg !5813, !srcloc !5814
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !5815, !srcloc !5816
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !5817, !srcloc !5818
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !5819, !srcloc !5820
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !5821, !srcloc !5822
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #23, !dbg !5823, !srcloc !5824
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #23, !dbg !5825, !srcloc !5826
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !5827, !srcloc !5828
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #23, !dbg !5829, !srcloc !5830
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !5831, !srcloc !5832
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5833, !srcloc !5834
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #23, !dbg !5835, !srcloc !5836
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #23, !dbg !5837, !srcloc !5838
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #23, !dbg !5839, !srcloc !5840
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #23, !dbg !5841, !srcloc !5842
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #23, !dbg !5843, !srcloc !5844
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #23, !dbg !5845, !srcloc !5846
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #23, !dbg !5847, !srcloc !5848
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #23, !dbg !5849, !srcloc !5850
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #23, !dbg !5851, !srcloc !5852
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #23, !dbg !5853, !srcloc !5854
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5855, !srcloc !5856
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #23, !dbg !5857, !srcloc !5858
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5859, !srcloc !5860
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !5861, !srcloc !5862
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !5863, !srcloc !5864
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !5865, !srcloc !5866
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !5867, !srcloc !5868
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #23, !dbg !5869, !srcloc !5870
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #23, !dbg !5871, !srcloc !5872
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #23, !dbg !5873, !srcloc !5874
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #23, !dbg !5875, !srcloc !5876
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #23, !dbg !5877, !srcloc !5878
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5879, !srcloc !5880
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #23, !dbg !5881, !srcloc !5882
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,24000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #23, !dbg !5883, !srcloc !5884
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #23, !dbg !5885, !srcloc !5886
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #23, !dbg !5887, !srcloc !5888
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5889, !srcloc !5890
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #23, !dbg !5891, !srcloc !5892
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #23, !dbg !5893, !srcloc !5894
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #23, !dbg !5895, !srcloc !5896
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5897, !srcloc !5898
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #23, !dbg !5899, !srcloc !5900
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !5901, !srcloc !5902
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !5903, !srcloc !5904
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !5905, !srcloc !5906
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !5907, !srcloc !5908
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !5909, !srcloc !5910
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !5911, !srcloc !5912
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !5913, !srcloc !5914
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !5915, !srcloc !5916
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !5917, !srcloc !5918
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !5919, !srcloc !5920
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !5921, !srcloc !5922
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #23, !dbg !5923, !srcloc !5924
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !5925, !srcloc !5926
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !5927, !srcloc !5928
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !5929, !srcloc !5930
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !5931, !srcloc !5932
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !5933, !srcloc !5934
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #23, !dbg !5935, !srcloc !5936
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #23, !dbg !5937, !srcloc !5938
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !5939, !srcloc !5940
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !5941, !srcloc !5942
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !5943, !srcloc !5944
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !5945, !srcloc !5946
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !5947, !srcloc !5948
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #23, !dbg !5949, !srcloc !5950
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT\0A\09.equ\09CONFIG_ASSERT,1\0A\09.type\09CONFIG_ASSERT,%object", ""() #23, !dbg !5951, !srcloc !5952
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_LEVEL\0A\09.equ\09CONFIG_ASSERT_LEVEL,2\0A\09.type\09CONFIG_ASSERT_LEVEL,%object", ""() #23, !dbg !5953, !srcloc !5954
  tail call void asm sideeffect ".globl\09CONFIG_SPIN_VALIDATE\0A\09.equ\09CONFIG_SPIN_VALIDATE,1\0A\09.type\09CONFIG_SPIN_VALIDATE,%object", ""() #23, !dbg !5955, !srcloc !5956
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !5957, !srcloc !5958
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #23, !dbg !5959, !srcloc !5960
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #23, !dbg !5961, !srcloc !5962
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_MINIMAL\0A\09.equ\09CONFIG_LOG_DEFAULT_MINIMAL,1\0A\09.type\09CONFIG_LOG_DEFAULT_MINIMAL,%object", ""() #23, !dbg !5963, !srcloc !5964
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #23, !dbg !5965, !srcloc !5966
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #23, !dbg !5967, !srcloc !5968
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #23, !dbg !5969, !srcloc !5970
  tail call void asm sideeffect ".globl\09CONFIG_LOG_TEST_CLEAR_MESSAGE_SPACE\0A\09.equ\09CONFIG_LOG_TEST_CLEAR_MESSAGE_SPACE,1\0A\09.type\09CONFIG_LOG_TEST_CLEAR_MESSAGE_SPACE,%object", ""() #23, !dbg !5971, !srcloc !5972
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #23, !dbg !5973, !srcloc !5974
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST\0A\09.equ\09CONFIG_ZTEST,1\0A\09.type\09CONFIG_ZTEST,%object", ""() #23, !dbg !5975, !srcloc !5976
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_NEW_API\0A\09.equ\09CONFIG_ZTEST_NEW_API,1\0A\09.type\09CONFIG_ZTEST_NEW_API,%object", ""() #23, !dbg !5977, !srcloc !5978
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_STACK_SIZE\0A\09.equ\09CONFIG_ZTEST_STACK_SIZE,1024\0A\09.type\09CONFIG_ZTEST_STACK_SIZE,%object", ""() #23, !dbg !5979, !srcloc !5980
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_TEST_DELAY_MS\0A\09.equ\09CONFIG_ZTEST_TEST_DELAY_MS,0\0A\09.type\09CONFIG_ZTEST_TEST_DELAY_MS,%object", ""() #23, !dbg !5981, !srcloc !5982
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_CPU_HOLD_TIME_MS\0A\09.equ\09CONFIG_ZTEST_CPU_HOLD_TIME_MS,3000\0A\09.type\09CONFIG_ZTEST_CPU_HOLD_TIME_MS,%object", ""() #23, !dbg !5983, !srcloc !5984
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ZTEST_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ZTEST_ASSERT_VERBOSE,%object", ""() #23, !dbg !5985, !srcloc !5986
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_THREAD_PRIORITY\0A\09.equ\09CONFIG_ZTEST_THREAD_PRIORITY,-1\0A\09.type\09CONFIG_ZTEST_THREAD_PRIORITY,%object", ""() #23, !dbg !5987, !srcloc !5988
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_VERIFY_RUN_ALL\0A\09.equ\09CONFIG_ZTEST_VERIFY_RUN_ALL,1\0A\09.type\09CONFIG_ZTEST_VERIFY_RUN_ALL,%object", ""() #23, !dbg !5989, !srcloc !5990
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_VERBOSE_OUTPUT\0A\09.equ\09CONFIG_ZTEST_VERBOSE_OUTPUT,1\0A\09.type\09CONFIG_ZTEST_VERBOSE_OUTPUT,%object", ""() #23, !dbg !5991, !srcloc !5992
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_VERBOSE_SUMMARY\0A\09.equ\09CONFIG_ZTEST_VERBOSE_SUMMARY,1\0A\09.type\09CONFIG_ZTEST_VERBOSE_SUMMARY,%object", ""() #23, !dbg !5993, !srcloc !5994
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_FAIL_ON_ASSUME\0A\09.equ\09CONFIG_ZTEST_FAIL_ON_ASSUME,1\0A\09.type\09CONFIG_ZTEST_FAIL_ON_ASSUME,%object", ""() #23, !dbg !5995, !srcloc !5996
  tail call void asm sideeffect ".globl\09CONFIG_TEST_LOGGING_FLUSH_AFTER_TEST\0A\09.equ\09CONFIG_TEST_LOGGING_FLUSH_AFTER_TEST,1\0A\09.type\09CONFIG_TEST_LOGGING_FLUSH_AFTER_TEST,%object", ""() #23, !dbg !5997, !srcloc !5998
  tail call void asm sideeffect ".globl\09CONFIG_TEST\0A\09.equ\09CONFIG_TEST,1\0A\09.type\09CONFIG_TEST,%object", ""() #23, !dbg !5999, !srcloc !6000
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !6001, !srcloc !6002
  tail call void asm sideeffect ".globl\09CONFIG_TEST_LOGGING_DEFAULTS\0A\09.equ\09CONFIG_TEST_LOGGING_DEFAULTS,1\0A\09.type\09CONFIG_TEST_LOGGING_DEFAULTS,%object", ""() #23, !dbg !6003, !srcloc !6004
  tail call void asm sideeffect ".globl\09CONFIG_TEST_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_TEST_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_TEST_HW_STACK_PROTECTION,%object", ""() #23, !dbg !6005, !srcloc !6006
  tail call void asm sideeffect ".globl\09CONFIG_TEST_ARM_CORTEX_M\0A\09.equ\09CONFIG_TEST_ARM_CORTEX_M,1\0A\09.type\09CONFIG_TEST_ARM_CORTEX_M,%object", ""() #23, !dbg !6007, !srcloc !6008
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !6009, !srcloc !6010
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !6011, !srcloc !6012
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !6013, !srcloc !6014
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !6015, !srcloc !6016
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !6017, !srcloc !6018
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !6019, !srcloc !6020
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !6021, !srcloc !6022
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !6023, !srcloc !6024
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !6025, !srcloc !6026
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !6027, !srcloc !6028
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !6029, !srcloc !6030
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !6031, !srcloc !6032
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !6033, !srcloc !6034
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !6035, !srcloc !6036
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !6037, !srcloc !6038
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !6039, !srcloc !6040
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !6041, !srcloc !6042
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !6043, !srcloc !6044
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !6045, !srcloc !6046
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !6047, !srcloc !6048
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !6049, !srcloc !6050
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_SYMBOLS\0A\09.equ\09CONFIG_OUTPUT_SYMBOLS,1\0A\09.type\09CONFIG_OUTPUT_SYMBOLS,%object", ""() #23, !dbg !6051, !srcloc !6052
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !6053, !srcloc !6054
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !6055, !srcloc !6056
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !6057, !srcloc !6058
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !6059, !srcloc !6060
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !6061, !srcloc !6062
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !6063, !srcloc !6064
  ret void, !dbg !6065
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6066 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6068, metadata !DIExpression()), !dbg !6070
  tail call fastcc void @LL_FLASH_EnableInstCache() #24, !dbg !6071
  tail call fastcc void @LL_FLASH_EnableDataCache() #24, !dbg !6072
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !6073, !srcloc !6082
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !6073
  call void @llvm.dbg.value(metadata i32 %3, metadata !6079, metadata !DIExpression()) #23, !dbg !6083
  call void @llvm.dbg.value(metadata i32 undef, metadata !6080, metadata !DIExpression()) #23, !dbg !6083
  call void @llvm.dbg.value(metadata i32 %3, metadata !6069, metadata !DIExpression()), !dbg !6070
  call void @llvm.dbg.value(metadata i32 %3, metadata !6084, metadata !DIExpression()) #23, !dbg !6089
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !6091, !srcloc !6092
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !6093
  ret i32 0, !dbg !6094
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #14 !dbg !6095 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6097
  %2 = or i32 %1, 512, !dbg !6097
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6097
  ret void, !dbg !6098
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #14 !dbg !6099 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6100
  %2 = or i32 %1, 1024, !dbg !6100
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6100
  ret void, !dbg !6101
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #4 !dbg !6102 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6104, metadata !DIExpression()), !dbg !6105
  ret i32 0, !dbg !6106
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !6107 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6110, metadata !DIExpression()), !dbg !6118
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !6119
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !6119
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !6111, metadata !DIExpression()), !dbg !6120
  call void @llvm.va_start(i8* nonnull %3), !dbg !6121
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !6122
  %5 = load i32, i32* %4, align 4, !dbg !6122
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !6122
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !6122
  call void @llvm.va_end(i8* nonnull %3), !dbg !6123
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !6124
  ret void, !dbg !6124
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !6125 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !6130, metadata !DIExpression()), !dbg !6131
  call void @llvm.dbg.value(metadata i8* %0, metadata !6129, metadata !DIExpression()), !dbg !6131
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #25, !dbg !6132
  ret void, !dbg !6133
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6134 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6138, metadata !DIExpression()), !dbg !6142
  call void @llvm.dbg.value(metadata i8* %1, metadata !6139, metadata !DIExpression()), !dbg !6142
  call void @llvm.dbg.value(metadata i32 %2, metadata !6140, metadata !DIExpression()), !dbg !6142
  call void @llvm.dbg.value(metadata i8* %1, metadata !6141, metadata !DIExpression()), !dbg !6142
  %4 = icmp eq i32 %2, 0, !dbg !6143
  br i1 %4, label %14, label %5, !dbg !6144

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) #24, !dbg !6142
  %7 = zext i8 %6 to i32
  br label %8, !dbg !6144

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !6141, metadata !DIExpression()), !dbg !6142
  call void @llvm.dbg.value(metadata i32 %10, metadata !6140, metadata !DIExpression()), !dbg !6142
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i32 0, i32 0), i32 noundef %7) #25, !dbg !6145
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #24, !dbg !6147
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !6148
  call void @llvm.dbg.value(metadata i32 %11, metadata !6140, metadata !DIExpression()), !dbg !6142
  call void @llvm.dbg.value(metadata i8* %12, metadata !6141, metadata !DIExpression()), !dbg !6142
  br i1 %13, label %14, label %8, !dbg !6148, !llvm.loop !6149

14:                                               ; preds = %8, %3
  ret void, !dbg !6151
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #4 !dbg !6152 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6157, metadata !DIExpression()), !dbg !6158
  %2 = add i32 %0, -1, !dbg !6159
  %3 = icmp ult i32 %2, 4, !dbg !6159
  %4 = shl i32 %2, 3, !dbg !6159
  %5 = lshr i32 1145657157, %4, !dbg !6159
  %6 = trunc i32 %5 to i8, !dbg !6159
  %7 = select i1 %3, i8 %6, i8 63, !dbg !6159
  ret i8 %7, !dbg !6160
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !6161 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6165, metadata !DIExpression()), !dbg !6176
  call void @llvm.dbg.value(metadata i32 %1, metadata !6166, metadata !DIExpression()), !dbg !6176
  call void @llvm.dbg.value(metadata i32 0, metadata !6167, metadata !DIExpression()), !dbg !6177
  br label %4, !dbg !6178

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.23, i32 0, i32 0)) #25, !dbg !6179
  call void @llvm.dbg.value(metadata i32 0, metadata !6169, metadata !DIExpression()), !dbg !6180
  br label %16, !dbg !6181

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !6167, metadata !DIExpression()), !dbg !6177
  %6 = icmp ult i32 %5, %1, !dbg !6182
  br i1 %6, label %7, label %11, !dbg !6186

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !6187
  %9 = load i8, i8* %8, align 1, !dbg !6187
  %10 = zext i8 %9 to i32, !dbg !6189
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.24, i32 0, i32 0), i32 noundef %10) #25, !dbg !6190
  br label %12, !dbg !6191

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.25, i32 0, i32 0)) #25, !dbg !6192
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !6194
  call void @llvm.dbg.value(metadata i32 %13, metadata !6167, metadata !DIExpression()), !dbg !6177
  %14 = icmp eq i32 %13, 8, !dbg !6195
  br i1 %14, label %3, label %4, !dbg !6178, !llvm.loop !6196

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.26, i32 0, i32 0)) #25, !dbg !6198
  ret void, !dbg !6199

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !6169, metadata !DIExpression()), !dbg !6180
  %18 = icmp ult i32 %17, %1, !dbg !6200
  br i1 %18, label %19, label %26, !dbg !6201

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !6202
  %21 = load i8, i8* %20, align 1, !dbg !6202
  call void @llvm.dbg.value(metadata i8 %21, metadata !6171, metadata !DIExpression()), !dbg !6203
  %22 = zext i8 %21 to i32, !dbg !6204
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #24, !dbg !6205
  %24 = icmp eq i32 %23, 0, !dbg !6206
  %25 = select i1 %24, i32 46, i32 %22, !dbg !6205
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.27, i32 0, i32 0), i32 noundef %25) #25, !dbg !6207
  br label %27, !dbg !6208

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.28, i32 0, i32 0)) #25, !dbg !6209
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !6211
  call void @llvm.dbg.value(metadata i32 %28, metadata !6169, metadata !DIExpression()), !dbg !6180
  %29 = icmp eq i32 %28, 8, !dbg !6212
  br i1 %29, label %15, label %16, !dbg !6181, !llvm.loop !6213
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #4 !dbg !6215 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6217, metadata !DIExpression()), !dbg !6218
  %2 = add i32 %0, -32, !dbg !6219
  %3 = icmp ult i32 %2, 95, !dbg !6219
  %4 = zext i1 %3 to i32, !dbg !6219
  ret i32 %4, !dbg !6220
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6221 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6270, metadata !DIExpression()), !dbg !6272
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6271, metadata !DIExpression()), !dbg !6272
  %3 = icmp eq %struct.__esf* %1, null, !dbg !6273
  br i1 %3, label %5, label %4, !dbg !6275

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #24, !dbg !6276
  br label %5, !dbg !6278

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #25, !dbg !6279
  ret void, !dbg !6280
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6281 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6285, metadata !DIExpression()), !dbg !6286
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6287
  %3 = load i32, i32* %2, align 4, !dbg !6287
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !6287
  %5 = load i32, i32* %4, align 4, !dbg !6287
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !6287
  %7 = load i32, i32* %6, align 4, !dbg !6287
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.29, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #25, !dbg !6287
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !6292
  %9 = load i32, i32* %8, align 4, !dbg !6292
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !6292
  %11 = load i32, i32* %10, align 4, !dbg !6292
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !6292
  %13 = load i32, i32* %12, align 4, !dbg !6292
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.30, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #25, !dbg !6292
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !6297
  %15 = load i32, i32* %14, align 4, !dbg !6297
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.31, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #25, !dbg !6297
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6302
  %17 = load i32, i32* %16, align 4, !dbg !6302
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !6302
  ret void, !dbg !6307
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6308 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6325, metadata !DIExpression()), !dbg !6328
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6326, metadata !DIExpression()), !dbg !6328
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6329
  %4 = load i32, i32* %3, align 4, !dbg !6329
  call void @llvm.dbg.value(metadata i32 %4, metadata !6327, metadata !DIExpression()), !dbg !6328
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #24, !dbg !6330
  ret void, !dbg !6331
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !6332 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6334, metadata !DIExpression()), !dbg !6337
  call void @llvm.dbg.value(metadata i8* %0, metadata !6335, metadata !DIExpression()), !dbg !6337
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6338
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !6338
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6336, metadata !DIExpression()), !dbg !6339
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6339
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6340
  %5 = bitcast i8* %4 to i32*, !dbg !6340
  %6 = load i32, i32* %5, align 4, !dbg !6340
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6341
  store i32 %6, i32* %7, align 4, !dbg !6342
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #24, !dbg !6343
  unreachable, !dbg !6344
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6345 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6348, metadata !DIExpression()), !dbg !6349
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #24, !dbg !6350
  ret void, !dbg !6351
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6352 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6356, metadata !DIExpression()), !dbg !6357
  %2 = icmp sgt i32 %0, -1, !dbg !6358
  br i1 %2, label %3, label %8, !dbg !6360

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6361, !srcloc !6363
  %4 = and i32 %0, 31, !dbg !6364
  %5 = shl nuw i32 1, %4, !dbg !6365
  %6 = lshr i32 %0, 5, !dbg !6366
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6367
  store volatile i32 %5, i32* %7, align 4, !dbg !6368
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6369, !srcloc !6370
  br label %8, !dbg !6371

8:                                                ; preds = %3, %1
  ret void, !dbg !6372
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6373 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6375, metadata !DIExpression()), !dbg !6376
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #24, !dbg !6377
  ret void, !dbg !6378
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6379 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6381, metadata !DIExpression()), !dbg !6382
  %2 = icmp sgt i32 %0, -1, !dbg !6383
  br i1 %2, label %3, label %8, !dbg !6385

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6386
  %5 = shl nuw i32 1, %4, !dbg !6388
  %6 = lshr i32 %0, 5, !dbg !6389
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6390
  store volatile i32 %5, i32* %7, align 4, !dbg !6391
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6392, !srcloc !6396
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6397, !srcloc !6400
  br label %8, !dbg !6401

8:                                                ; preds = %3, %1
  ret void, !dbg !6402
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #15 !dbg !6403 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6407, metadata !DIExpression()), !dbg !6408
  %2 = lshr i32 %0, 5, !dbg !6409
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6410
  %4 = load volatile i32, i32* %3, align 4, !dbg !6410
  %5 = and i32 %0, 31, !dbg !6411
  %6 = shl nuw i32 1, %5, !dbg !6411
  %7 = and i32 %4, %6, !dbg !6412
  ret i32 %7, !dbg !6413
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6414 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6418, metadata !DIExpression()), !dbg !6421
  call void @llvm.dbg.value(metadata i32 %1, metadata !6419, metadata !DIExpression()), !dbg !6421
  call void @llvm.dbg.value(metadata i32 %2, metadata !6420, metadata !DIExpression()), !dbg !6421
  %4 = add i32 %1, 1, !dbg !6422
  call void @llvm.dbg.value(metadata i32 %4, metadata !6419, metadata !DIExpression()), !dbg !6421
  %5 = icmp ult i32 %4, 16, !dbg !6425
  br i1 %5, label %7, label %6, !dbg !6428

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.33, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.34, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.35, i32 0, i32 0), i32 noundef 94) #25, !dbg !6429
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3.36, i32 0, i32 0), i32 noundef %1, i32 noundef %0, i32 noundef 15) #25, !dbg !6429
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.35, i32 0, i32 0), i32 noundef 94) #25, !dbg !6429
  unreachable, !dbg !6429

7:                                                ; preds = %3
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #24, !dbg !6431
  ret void, !dbg !6432
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !6433 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6437, metadata !DIExpression()), !dbg !6439
  call void @llvm.dbg.value(metadata i32 %1, metadata !6438, metadata !DIExpression()), !dbg !6439
  %3 = trunc i32 %1 to i8, !dbg !6440
  %4 = shl i8 %3, 4, !dbg !6440
  %5 = and i32 %0, 15, !dbg !6442
  %6 = add nsw i32 %5, -4, !dbg !6442
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6442
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6442
  %9 = icmp slt i32 %0, 0, !dbg !6442
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6442
  store volatile i8 %4, i8* %10, align 1, !dbg !6440
  ret void, !dbg !6443
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6444 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6446, metadata !DIExpression()), !dbg !6447
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #25, !dbg !6448
  ret void, !dbg !6449
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6450 {
  tail call void @z_SysNmiOnReset() #25, !dbg !6452
  tail call void @z_arm_int_exit() #25, !dbg !6453
  ret void, !dbg !6454
}

; Function Attrs: optsize
declare !dbg !6455 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6456 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #10 !dbg !6458 {
  tail call fastcc void @relocate_vector_table() #24, !dbg !6460
  tail call fastcc void @z_arm_floating_point_init() #24, !dbg !6461
  tail call void @z_bss_zero() #25, !dbg !6462
  tail call void @z_data_copy() #25, !dbg !6463
  tail call void @z_arm_interrupt_init() #25, !dbg !6464
  tail call void @z_cstart() #27, !dbg !6465
  unreachable, !dbg !6465
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6466 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6467
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6468, !srcloc !6471
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6472, !srcloc !6475
  ret void, !dbg !6476
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6477 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6478
  %2 = and i32 %1, -15728641, !dbg !6478
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6478
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #23, !dbg !6479, !srcloc !6486
  call void @llvm.dbg.value(metadata i32 %3, metadata !6484, metadata !DIExpression()) #23, !dbg !6487
  %4 = and i32 %3, -5, !dbg !6488
  call void @llvm.dbg.value(metadata i32 %4, metadata !6489, metadata !DIExpression()) #23, !dbg !6494
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #23, !dbg !6496, !srcloc !6497
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6498, !srcloc !6475
  ret void, !dbg !6500
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6501 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6504, metadata !DIExpression()), !dbg !6505
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6506
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 8, i32 0, !dbg !6507
  store i32 %0, i32* %3, align 4, !dbg !6508
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6509
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 8, i32 1, !dbg !6510
  store i32 %4, i32* %5, align 4, !dbg !6511
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6512
  %7 = or i32 %6, 268435456, !dbg !6512
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6512
  call void @llvm.dbg.value(metadata i32 0, metadata !6513, metadata !DIExpression()) #23, !dbg !6516
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6518, !srcloc !6519
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6520
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 8, i32 1, !dbg !6521
  %10 = load i32, i32* %9, align 4, !dbg !6521
  ret i32 %10, !dbg !6522
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #7 !dbg !6523 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6636, metadata !DIExpression()), !dbg !6644
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6637, metadata !DIExpression()), !dbg !6644
  call void @llvm.dbg.value(metadata i8* %2, metadata !6638, metadata !DIExpression()), !dbg !6644
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6639, metadata !DIExpression()), !dbg !6644
  call void @llvm.dbg.value(metadata i8* %4, metadata !6640, metadata !DIExpression()), !dbg !6644
  call void @llvm.dbg.value(metadata i8* %5, metadata !6641, metadata !DIExpression()), !dbg !6644
  call void @llvm.dbg.value(metadata i8* %6, metadata !6642, metadata !DIExpression()), !dbg !6644
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6645
  call void @llvm.dbg.value(metadata i8* %8, metadata !6643, metadata !DIExpression()), !dbg !6644
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6646
  %10 = bitcast i8* %9 to i32*, !dbg !6646
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6647
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6648
  %12 = bitcast i8* %8 to i32*, !dbg !6649
  store i32 %11, i32* %12, align 4, !dbg !6650
  %13 = ptrtoint i8* %4 to i32, !dbg !6651
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6652
  %15 = bitcast i8* %14 to i32*, !dbg !6652
  store i32 %13, i32* %15, align 4, !dbg !6653
  %16 = ptrtoint i8* %5 to i32, !dbg !6654
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6655
  %18 = bitcast i8* %17 to i32*, !dbg !6655
  store i32 %16, i32* %18, align 4, !dbg !6656
  %19 = ptrtoint i8* %6 to i32, !dbg !6657
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6658
  %21 = bitcast i8* %20 to i32*, !dbg !6658
  store i32 %19, i32* %21, align 4, !dbg !6659
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6660
  %23 = bitcast i8* %22 to i32*, !dbg !6660
  store i32 16777216, i32* %23, align 4, !dbg !6661
  %24 = ptrtoint i8* %8 to i32, !dbg !6662
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6663
  store i32 %24, i32* %25, align 8, !dbg !6664
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 8, i32 0, !dbg !6665
  store i32 0, i32* %26, align 4, !dbg !6666
  ret void, !dbg !6667
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #8 !dbg !6668 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6673, metadata !DIExpression()), !dbg !6679
  call void @llvm.dbg.value(metadata i32 %1, metadata !6674, metadata !DIExpression()), !dbg !6679
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6680
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !6675, metadata !DIExpression()), !dbg !6679
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !6681
  br i1 %4, label %19, label %5, !dbg !6683

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !6678, metadata !DIExpression()), !dbg !6679
  %6 = icmp eq i32 %0, -22, !dbg !6684
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 6, i32 0, !dbg !6684
  %8 = load i32, i32* %7, align 4, !dbg !6684
  br i1 %6, label %16, label %9, !dbg !6686

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !6684
  %11 = icmp ule i32 %10, %0, !dbg !6684
  %12 = icmp ugt i32 %8, %0, !dbg !6684
  %13 = and i1 %12, %11, !dbg !6684
  %14 = icmp ugt i32 %8, %1, !dbg !6684
  %15 = and i1 %14, %13, !dbg !6684
  br i1 %15, label %18, label %19, !dbg !6684

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !6684
  br i1 %17, label %18, label %19, !dbg !6686

18:                                               ; preds = %9, %16
  br label %19, !dbg !6687

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !6679
  ret i32 %20, !dbg !6689
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #10 !dbg !6690 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6694, metadata !DIExpression()), !dbg !6697
  call void @llvm.dbg.value(metadata i8* %1, metadata !6695, metadata !DIExpression()), !dbg !6697
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6696, metadata !DIExpression()), !dbg !6697
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6698
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #25, !dbg !6699
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !6700, !srcloc !6701
  unreachable, !dbg !6702
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6703 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6721, metadata !DIExpression()), !dbg !6731
  call void @llvm.dbg.value(metadata i32 %1, metadata !6722, metadata !DIExpression()), !dbg !6731
  call void @llvm.dbg.value(metadata i32 %2, metadata !6723, metadata !DIExpression()), !dbg !6731
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6724, metadata !DIExpression()), !dbg !6731
  call void @llvm.dbg.value(metadata i32 0, metadata !6725, metadata !DIExpression()), !dbg !6731
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6732
  call void @llvm.dbg.value(metadata i32 %8, metadata !6726, metadata !DIExpression(DW_OP_constu, 511, DW_OP_and, DW_OP_stack_value)), !dbg !6731
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6733
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6733
  %9 = bitcast %struct.__esf* %7 to i8*, !dbg !6734
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6734
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6730, metadata !DIExpression()), !dbg !6735
  call void @llvm.dbg.value(metadata i32 0, metadata !6736, metadata !DIExpression()) #23, !dbg !6739
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6741, !srcloc !6742
  call void @llvm.dbg.value(metadata i8* %6, metadata !6728, metadata !DIExpression(DW_OP_deref)), !dbg !6731
  %10 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #24, !dbg !6743
  call void @llvm.dbg.value(metadata %struct.__esf* %10, metadata !6729, metadata !DIExpression()), !dbg !6731
  %11 = icmp eq %struct.__esf* %10, null, !dbg !6744
  br i1 %11, label %12, label %13, !dbg !6747

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.40, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 1057) #25, !dbg !6748
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3.42, i32 0, i32 0)) #25, !dbg !6748
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 1057) #25, !dbg !6748
  unreachable, !dbg !6748

13:                                               ; preds = %4
  %14 = and i32 %8, 511, !dbg !6750
  call void @llvm.dbg.value(metadata i32 %14, metadata !6726, metadata !DIExpression()), !dbg !6731
  call void @llvm.dbg.value(metadata i8* %5, metadata !6727, metadata !DIExpression(DW_OP_deref)), !dbg !6731
  %15 = call fastcc i32 @fault_handle(%struct.__esf* noundef nonnull %10, i32 noundef %14, i8* noundef nonnull %5) #24, !dbg !6751
  call void @llvm.dbg.value(metadata i32 %15, metadata !6725, metadata !DIExpression()), !dbg !6731
  %16 = load i8, i8* %5, align 1, !dbg !6752, !range !6754
  call void @llvm.dbg.value(metadata i8 %16, metadata !6727, metadata !DIExpression()), !dbg !6731
  %17 = icmp eq i8 %16, 0, !dbg !6752
  br i1 %17, label %18, label %35, !dbg !6755

18:                                               ; preds = %13
  %19 = bitcast %struct.__esf* %10 to i8*, !dbg !6756
  %20 = call i8* @memcpy(i8* noundef nonnull %9, i8* noundef nonnull %19, i32 noundef 32) #25, !dbg !6757
  %21 = load i8, i8* %6, align 1, !dbg !6758, !range !6754
  call void @llvm.dbg.value(metadata i8 %21, metadata !6728, metadata !DIExpression()), !dbg !6731
  %22 = icmp eq i8 %21, 0, !dbg !6758
  %23 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6760
  %24 = load i32, i32* %23, align 4, !dbg !6760
  br i1 %22, label %30, label %25, !dbg !6761

25:                                               ; preds = %18
  %26 = and i32 %24, 511, !dbg !6762
  %27 = icmp eq i32 %26, 0, !dbg !6765
  br i1 %27, label %28, label %34, !dbg !6766

28:                                               ; preds = %25
  %29 = or i32 %24, 511, !dbg !6767
  br label %32, !dbg !6769

30:                                               ; preds = %18
  %31 = and i32 %24, -512, !dbg !6770
  br label %32

32:                                               ; preds = %30, %28
  %33 = phi i32 [ %29, %28 ], [ %31, %30 ]
  store i32 %33, i32* %23, align 4, !dbg !6760
  br label %34, !dbg !6772

34:                                               ; preds = %32, %25
  call void @z_arm_fatal_error(i32 noundef %15, %struct.__esf* noundef nonnull %7) #25, !dbg !6772
  br label %35, !dbg !6773

35:                                               ; preds = %13, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6773
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6773
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6773
  ret void, !dbg !6773
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !6774 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6779, metadata !DIExpression()), !dbg !6785
  call void @llvm.dbg.value(metadata i32 %1, metadata !6780, metadata !DIExpression()), !dbg !6785
  call void @llvm.dbg.value(metadata i32 %2, metadata !6781, metadata !DIExpression()), !dbg !6785
  call void @llvm.dbg.value(metadata i8* %3, metadata !6782, metadata !DIExpression()), !dbg !6785
  call void @llvm.dbg.value(metadata i8 0, metadata !6783, metadata !DIExpression()), !dbg !6785
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6784, metadata !DIExpression()), !dbg !6785
  store i8 0, i8* %3, align 1, !dbg !6786
  %5 = icmp ugt i32 %2, -16777217, !dbg !6787
  br i1 %5, label %6, label %17, !dbg !6789

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !6790
  %8 = icmp eq i32 %7, 8, !dbg !6790
  br i1 %8, label %9, label %10, !dbg !6790

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4.55, i32 0, i32 0), i32 noundef 69) #25, !dbg !6792
  br label %17, !dbg !6798

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !6799
  %12 = icmp eq i32 %11, 0, !dbg !6799
  br i1 %12, label %13, label %14, !dbg !6800

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !6784, metadata !DIExpression()), !dbg !6785
  store i8 1, i8* %3, align 1, !dbg !6803
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !6785
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !6784, metadata !DIExpression()), !dbg !6785
  br label %17, !dbg !6806

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !6785
  ret %struct.__esf* %18, !dbg !6807
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6808 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6812, metadata !DIExpression()), !dbg !6816
  call void @llvm.dbg.value(metadata i32 %1, metadata !6813, metadata !DIExpression()), !dbg !6816
  call void @llvm.dbg.value(metadata i8* %2, metadata !6814, metadata !DIExpression()), !dbg !6816
  call void @llvm.dbg.value(metadata i32 0, metadata !6815, metadata !DIExpression()), !dbg !6816
  store i8 0, i8* %2, align 1, !dbg !6817
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !6818

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #24, !dbg !6819
  call void @llvm.dbg.value(metadata i32 %5, metadata !6815, metadata !DIExpression()), !dbg !6816
  br label %12, !dbg !6821

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !6822
  call void @llvm.dbg.value(metadata i32 %7, metadata !6815, metadata !DIExpression()), !dbg !6816
  br label %12, !dbg !6823

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !6824
  call void @llvm.dbg.value(metadata i32 0, metadata !6815, metadata !DIExpression()), !dbg !6816
  br label %12, !dbg !6825

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #24, !dbg !6826
  call void @llvm.dbg.value(metadata i32 0, metadata !6815, metadata !DIExpression()), !dbg !6816
  br label %12, !dbg !6827

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #24, !dbg !6828
  br label %12, !dbg !6829

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #24, !dbg !6830
  br label %12, !dbg !6831

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !6816
  call void @llvm.dbg.value(metadata i32 %13, metadata !6815, metadata !DIExpression()), !dbg !6816
  ret i32 %13, !dbg !6832
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6833 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6837, metadata !DIExpression()), !dbg !6840
  call void @llvm.dbg.value(metadata i8* %1, metadata !6838, metadata !DIExpression()), !dbg !6840
  call void @llvm.dbg.value(metadata i32 0, metadata !6839, metadata !DIExpression()), !dbg !6840
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.47, i32 0, i32 0), i32 noundef 69) #25, !dbg !6841
  store i8 0, i8* %1, align 1, !dbg !6846
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6847
  %4 = and i32 %3, 2, !dbg !6849
  %5 = icmp eq i32 %4, 0, !dbg !6850
  br i1 %5, label %7, label %6, !dbg !6851

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.48, i32 0, i32 0), i32 noundef 69) #25, !dbg !6852
  br label %38, !dbg !6858

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6859
  %9 = icmp sgt i32 %8, -1, !dbg !6861
  br i1 %9, label %11, label %10, !dbg !6862

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.49, i32 0, i32 0), i32 noundef 69) #25, !dbg !6863
  br label %38, !dbg !6869

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6870
  %13 = and i32 %12, 1073741824, !dbg !6872
  %14 = icmp eq i32 %13, 0, !dbg !6873
  br i1 %14, label %37, label %15, !dbg !6874

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.50, i32 0, i32 0), i32 noundef 69) #25, !dbg !6875
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #24, !dbg !6881
  br i1 %16, label %17, label %21, !dbg !6883

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6884
  %19 = load i32, i32* %18, align 4, !dbg !6884
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9.51, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #25, !dbg !6884
  %20 = load i32, i32* %18, align 4, !dbg !6890
  call void @llvm.dbg.value(metadata i32 %20, metadata !6839, metadata !DIExpression()), !dbg !6840
  br label %38, !dbg !6891

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6892
  %23 = and i32 %22, 255, !dbg !6894
  %24 = icmp eq i32 %23, 0, !dbg !6895
  br i1 %24, label %27, label %25, !dbg !6896

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !6897
  call void @llvm.dbg.value(metadata i32 %26, metadata !6839, metadata !DIExpression()), !dbg !6840
  br label %38, !dbg !6899

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6900
  %29 = and i32 %28, 65280, !dbg !6902
  %30 = icmp eq i32 %29, 0, !dbg !6903
  br i1 %30, label %32, label %31, !dbg !6904

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !6905
  call void @llvm.dbg.value(metadata i32 0, metadata !6839, metadata !DIExpression()), !dbg !6840
  br label %38, !dbg !6907

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6908
  %34 = icmp ult i32 %33, 65536, !dbg !6910
  br i1 %34, label %36, label %35, !dbg !6911

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #24, !dbg !6912
  call void @llvm.dbg.value(metadata i32 0, metadata !6839, metadata !DIExpression()), !dbg !6840
  br label %38

36:                                               ; preds = %32
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 755) #25, !dbg !6914
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.53, i32 0, i32 0)) #25, !dbg !6914
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 755) #25, !dbg !6914
  unreachable, !dbg !6914

37:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 760) #25, !dbg !6919
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12.54, i32 0, i32 0)) #25, !dbg !6919
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 760) #25, !dbg !6919
  unreachable, !dbg !6919

38:                                               ; preds = %10, %17, %31, %35, %25, %6
  %39 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], !dbg !6840
  call void @llvm.dbg.value(metadata i32 %39, metadata !6839, metadata !DIExpression()), !dbg !6840
  ret i32 %39, !dbg !6924
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !6925 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6927, metadata !DIExpression()), !dbg !6940
  call void @llvm.dbg.value(metadata i32 %1, metadata !6928, metadata !DIExpression()), !dbg !6940
  call void @llvm.dbg.value(metadata i8* %2, metadata !6929, metadata !DIExpression()), !dbg !6940
  call void @llvm.dbg.value(metadata i32 0, metadata !6930, metadata !DIExpression()), !dbg !6940
  call void @llvm.dbg.value(metadata i32 -22, metadata !6931, metadata !DIExpression()), !dbg !6940
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13.46, i32 0, i32 0), i32 noundef 69) #25, !dbg !6941
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6946
  %5 = and i32 %4, 16, !dbg !6948
  %6 = icmp eq i32 %5, 0, !dbg !6949
  br i1 %6, label %8, label %7, !dbg !6950

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.14, i32 0, i32 0), i32 noundef 69) #25, !dbg !6951
  br label %8, !dbg !6957

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6958
  %10 = and i32 %9, 8, !dbg !6960
  %11 = icmp eq i32 %10, 0, !dbg !6961
  br i1 %11, label %13, label %12, !dbg !6962

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #25, !dbg !6963
  br label %13, !dbg !6969

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6970
  %15 = and i32 %14, 2, !dbg !6971
  %16 = icmp eq i32 %15, 0, !dbg !6972
  br i1 %16, label %27, label %17, !dbg !6973

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16, i32 0, i32 0), i32 noundef 69) #25, !dbg !6974
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !6979
  call void @llvm.dbg.value(metadata i32 %18, metadata !6932, metadata !DIExpression()), !dbg !6980
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6981
  %20 = and i32 %19, 128, !dbg !6983
  %21 = icmp eq i32 %20, 0, !dbg !6984
  br i1 %21, label %27, label %22, !dbg !6985

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !6931, metadata !DIExpression()), !dbg !6940
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #25, !dbg !6986
  %23 = icmp eq i32 %1, 0, !dbg !6992
  br i1 %23, label %27, label %24, !dbg !6994

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6995
  %26 = and i32 %25, -129, !dbg !6995
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6995
  br label %27, !dbg !6997

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !6940
  call void @llvm.dbg.value(metadata i32 %28, metadata !6931, metadata !DIExpression()), !dbg !6940
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6998
  %30 = and i32 %29, 1, !dbg !7000
  %31 = icmp eq i32 %30, 0, !dbg !7001
  br i1 %31, label %33, label %32, !dbg !7002

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i32 0, i32 0), i32 noundef 69) #25, !dbg !7003
  br label %33, !dbg !7009

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7010
  %35 = and i32 %34, 32, !dbg !7012
  %36 = icmp eq i32 %35, 0, !dbg !7013
  br i1 %36, label %38, label %37, !dbg !7014

37:                                               ; preds = %33
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), i32 noundef 69) #25, !dbg !7015
  br label %38, !dbg !7021

38:                                               ; preds = %37, %33
  %39 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7022
  %40 = and i32 %39, 16, !dbg !7023
  %41 = icmp eq i32 %40, 0, !dbg !7023
  br i1 %41, label %42, label %46, !dbg !7024

42:                                               ; preds = %38
  %43 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7025
  %44 = and i32 %43, 2, !dbg !7026
  %45 = icmp eq i32 %44, 0, !dbg !7026
  br i1 %45, label %60, label %46, !dbg !7027

46:                                               ; preds = %42, %38
  %47 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7028
  %48 = and i32 %47, 2048, !dbg !7029
  %49 = icmp eq i32 %48, 0, !dbg !7029
  br i1 %49, label %60, label %50, !dbg !7030

50:                                               ; preds = %46
  %51 = ptrtoint %struct.__esf* %0 to i32, !dbg !7031
  %52 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %51) #25, !dbg !7032
  call void @llvm.dbg.value(metadata i32 %52, metadata !6935, metadata !DIExpression()), !dbg !7033
  %53 = icmp eq i32 %52, 0, !dbg !7034
  br i1 %53, label %55, label %54, !dbg !7036

54:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %52, metadata !7037, metadata !DIExpression()) #23, !dbg !7040
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %52) #23, !dbg !7043, !srcloc !7044
  call void @llvm.dbg.value(metadata i32 2, metadata !6930, metadata !DIExpression()), !dbg !6940
  br label %60, !dbg !7045

55:                                               ; preds = %50
  %56 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7046
  %57 = and i32 %56, 16, !dbg !7046
  %58 = icmp eq i32 %57, 0, !dbg !7046
  br i1 %58, label %60, label %59, !dbg !7050

59:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.20, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 343) #25, !dbg !7051
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.21, i32 0, i32 0)) #25, !dbg !7051
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 343) #25, !dbg !7051
  unreachable, !dbg !7051

60:                                               ; preds = %54, %55, %46, %42
  %61 = phi i32 [ 0, %46 ], [ 0, %42 ], [ 2, %54 ], [ 0, %55 ], !dbg !6940
  call void @llvm.dbg.value(metadata i32 %61, metadata !6930, metadata !DIExpression()), !dbg !6940
  %62 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7053
  %63 = and i32 %62, 32, !dbg !7055
  %64 = icmp eq i32 %63, 0, !dbg !7056
  br i1 %64, label %68, label %65, !dbg !7057

65:                                               ; preds = %60
  %66 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7058
  %67 = and i32 %66, -8193, !dbg !7058
  store volatile i32 %67, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7058
  br label %68, !dbg !7060

68:                                               ; preds = %65, %60
  %69 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7061
  %70 = or i32 %69, 255, !dbg !7061
  store volatile i32 %70, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7061
  store i8 0, i8* %2, align 1, !dbg !7062
  ret i32 %61, !dbg !7063
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !7064 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7068, metadata !DIExpression()), !dbg !7075
  call void @llvm.dbg.value(metadata i32 %0, metadata !7069, metadata !DIExpression()), !dbg !7075
  call void @llvm.dbg.value(metadata i8* %1, metadata !7070, metadata !DIExpression()), !dbg !7075
  call void @llvm.dbg.value(metadata i32 0, metadata !7071, metadata !DIExpression()), !dbg !7075
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22.45, i32 0, i32 0), i32 noundef 69) #25, !dbg !7076
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7081
  %4 = and i32 %3, 4096, !dbg !7083
  %5 = icmp eq i32 %4, 0, !dbg !7083
  br i1 %5, label %7, label %6, !dbg !7084

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.23, i32 0, i32 0), i32 noundef 69) #25, !dbg !7085
  br label %7, !dbg !7091

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7092
  %9 = and i32 %8, 2048, !dbg !7094
  %10 = icmp eq i32 %9, 0, !dbg !7094
  br i1 %10, label %12, label %11, !dbg !7095

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #25, !dbg !7096
  br label %12, !dbg !7102

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7103
  %14 = and i32 %13, 512, !dbg !7104
  %15 = icmp eq i32 %14, 0, !dbg !7104
  br i1 %15, label %26, label %16, !dbg !7105

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69) #25, !dbg !7106
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !7111
  call void @llvm.dbg.value(metadata i32 %17, metadata !7072, metadata !DIExpression()), !dbg !7112
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7113
  %19 = and i32 %18, 32768, !dbg !7115
  %20 = icmp eq i32 %19, 0, !dbg !7116
  br i1 %20, label %26, label %21, !dbg !7117

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !7118
  %22 = icmp eq i32 %0, 0, !dbg !7124
  br i1 %22, label %26, label %23, !dbg !7126

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7127
  %25 = and i32 %24, -32769, !dbg !7127
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7127
  br label %26, !dbg !7129

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7130
  %28 = and i32 %27, 1024, !dbg !7132
  %29 = icmp eq i32 %28, 0, !dbg !7132
  br i1 %29, label %31, label %30, !dbg !7133

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26, i32 0, i32 0), i32 noundef 69) #25, !dbg !7134
  br label %31, !dbg !7140

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7141
  %33 = and i32 %32, 256, !dbg !7143
  %34 = icmp eq i32 %33, 0, !dbg !7144
  br i1 %34, label %35, label %39, !dbg !7145

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7146
  %37 = and i32 %36, 8192, !dbg !7148
  %38 = icmp eq i32 %37, 0, !dbg !7148
  br i1 %38, label %41, label %39, !dbg !7149

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.27, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #25, !dbg !7150
  br label %41, !dbg !7151

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7151
  %43 = or i32 %42, 65280, !dbg !7151
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7151
  store i8 0, i8* %1, align 1, !dbg !7152
  ret void, !dbg !7153
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !7154 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7160, metadata !DIExpression()), !dbg !7162
  call void @llvm.dbg.value(metadata i32 0, metadata !7161, metadata !DIExpression()), !dbg !7162
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i32 0, i32 0), i32 noundef 69) #25, !dbg !7163
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7168
  %2 = and i32 %1, 33554432, !dbg !7170
  %3 = icmp eq i32 %2, 0, !dbg !7171
  br i1 %3, label %5, label %4, !dbg !7172

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.29.43, i32 0, i32 0), i32 noundef 69) #25, !dbg !7173
  br label %5, !dbg !7179

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7180
  %7 = and i32 %6, 16777216, !dbg !7182
  %8 = icmp eq i32 %7, 0, !dbg !7183
  br i1 %8, label %10, label %9, !dbg !7184

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30, i32 0, i32 0), i32 noundef 69) #25, !dbg !7185
  br label %10, !dbg !7191

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7192
  %12 = and i32 %11, 524288, !dbg !7194
  %13 = icmp eq i32 %12, 0, !dbg !7195
  br i1 %13, label %15, label %14, !dbg !7196

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.31, i32 0, i32 0), i32 noundef 69) #25, !dbg !7197
  br label %15, !dbg !7203

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7204
  %17 = and i32 %16, 262144, !dbg !7206
  %18 = icmp eq i32 %17, 0, !dbg !7207
  br i1 %18, label %20, label %19, !dbg !7208

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.32, i32 0, i32 0), i32 noundef 69) #25, !dbg !7209
  br label %20, !dbg !7215

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7216
  %22 = and i32 %21, 131072, !dbg !7218
  %23 = icmp eq i32 %22, 0, !dbg !7219
  br i1 %23, label %25, label %24, !dbg !7220

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.33.44, i32 0, i32 0), i32 noundef 69) #25, !dbg !7221
  br label %25, !dbg !7227

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7228
  %27 = and i32 %26, 65536, !dbg !7230
  %28 = icmp eq i32 %27, 0, !dbg !7231
  br i1 %28, label %30, label %29, !dbg !7232

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.34, i32 0, i32 0), i32 noundef 69) #25, !dbg !7233
  br label %30, !dbg !7239

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7240
  %32 = or i32 %31, -65536, !dbg !7240
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7240
  ret void, !dbg !7241
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !7242 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7246, metadata !DIExpression()), !dbg !7248
  call void @llvm.dbg.value(metadata i8* %0, metadata !7247, metadata !DIExpression()), !dbg !7248
  store i8 0, i8* %0, align 1, !dbg !7249
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.35, i32 0, i32 0), i32 noundef 69) #25, !dbg !7250
  ret void, !dbg !7255
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !7256 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7260, metadata !DIExpression()), !dbg !7262
  call void @llvm.dbg.value(metadata i32 %0, metadata !7261, metadata !DIExpression()), !dbg !7262
  %2 = icmp slt i32 %0, 16, !dbg !7263
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.38, i32 0, i32 0), !dbg !7263
  %4 = add nsw i32 %0, -16, !dbg !7263
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.36, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #25, !dbg !7263
  ret void, !dbg !7268
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7269 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7273, metadata !DIExpression()), !dbg !7276
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7277
  %3 = load i32, i32* %2, align 4, !dbg !7277
  %4 = inttoptr i32 %3 to i16*, !dbg !7278
  call void @llvm.dbg.value(metadata i16* %4, metadata !7274, metadata !DIExpression()), !dbg !7276
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7279
  %6 = or i32 %5, 256, !dbg !7279
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7279
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7280, !srcloc !7283
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7284, !srcloc !7287
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !7288
  %8 = load i16, i16* %7, align 2, !dbg !7289
  call void @llvm.dbg.value(metadata i16 %8, metadata !7275, metadata !DIExpression()), !dbg !7276
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7290
  %10 = and i32 %9, -257, !dbg !7290
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7290
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7291, !srcloc !7283
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7293, !srcloc !7287
  %11 = icmp eq i16 %8, -8446, !dbg !7295
  ret i1 %11, !dbg !7297
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #14 !dbg !7298 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7299
  %2 = or i32 %1, 16, !dbg !7299
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7299
  ret void, !dbg !7300
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #14 !dbg !7301 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7304, metadata !DIExpression()), !dbg !7305
  br label %1, !dbg !7306

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7304, metadata !DIExpression()), !dbg !7305
  tail call fastcc void @__NVIC_SetPriority.58(i32 noundef %2) #24, !dbg !7308
  %3 = add nuw nsw i32 %2, 1, !dbg !7311
  call void @llvm.dbg.value(metadata i32 %3, metadata !7304, metadata !DIExpression()), !dbg !7305
  %4 = icmp eq i32 %3, 91, !dbg !7312
  br i1 %4, label %5, label %1, !dbg !7306, !llvm.loop !7313

5:                                                ; preds = %1
  ret void, !dbg !7315
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.58(i32 noundef %0) unnamed_addr #14 !dbg !7316 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7318, metadata !DIExpression()), !dbg !7320
  call void @llvm.dbg.value(metadata i32 1, metadata !7319, metadata !DIExpression()), !dbg !7320
  %2 = and i32 %0, 15, !dbg !7321
  %3 = add nsw i32 %2, -4, !dbg !7321
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !7321
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7321
  %6 = icmp slt i32 %0, 0, !dbg !7321
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !7321
  store volatile i8 16, i8* %7, align 1, !dbg !7322
  ret void, !dbg !7324
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !7325 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7434, metadata !DIExpression()), !dbg !7435
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7436
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !7438
  br i1 %3, label %4, label %12, !dbg !7439

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !7440, !srcloc !7452
  call void @llvm.dbg.value(metadata i32 %5, metadata !7443, metadata !DIExpression()) #23, !dbg !7453
  %6 = icmp eq i32 %5, 0, !dbg !7454
  br i1 %6, label %12, label %7, !dbg !7455

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7456
  %9 = or i32 %8, 268435456, !dbg !7456
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7456
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7458
  %11 = and i32 %10, -32769, !dbg !7458
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7458
  br label %12, !dbg !7459

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !7460
  ret void, !dbg !7461
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !7462 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #25, !dbg !7463
  ret void, !dbg !7464
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !303 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !429, metadata !DIExpression()), !dbg !7465
  call void @llvm.dbg.value(metadata i8 0, metadata !430, metadata !DIExpression()), !dbg !7465
  call void @llvm.dbg.value(metadata i32 64, metadata !432, metadata !DIExpression()), !dbg !7465
  call void @llvm.dbg.value(metadata i32 undef, metadata !431, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7465
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !7466
  %3 = load i32, i32* %2, align 4, !dbg !7466
  call void @llvm.dbg.value(metadata i32 %3, metadata !431, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7465
  %4 = add i32 %3, -64, !dbg !7468
  call void @llvm.dbg.value(metadata i32 %4, metadata !431, metadata !DIExpression()), !dbg !7465
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !7469
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !7470
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !7471
  call void @llvm.dbg.value(metadata i8 1, metadata !430, metadata !DIExpression()), !dbg !7465
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #25, !dbg !7472
  ret void, !dbg !7473
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !7474 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7475
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7476, !srcloc !7479
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7480, !srcloc !7483
  ret void, !dbg !7484
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !7485 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #23, !dbg !7486, !srcloc !7489
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7490
  ret void, !dbg !7491
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !7492 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7507, metadata !DIExpression()), !dbg !7511
  call void @llvm.dbg.value(metadata i8 %1, metadata !7508, metadata !DIExpression()), !dbg !7511
  call void @llvm.dbg.value(metadata i32 %2, metadata !7509, metadata !DIExpression()), !dbg !7511
  call void @llvm.dbg.value(metadata i32 %3, metadata !7510, metadata !DIExpression()), !dbg !7511
  %5 = tail call fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !7512
  %6 = icmp eq i32 %5, -22, !dbg !7514
  br i1 %6, label %7, label %9, !dbg !7515

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 283) #25, !dbg !7516
  %8 = zext i8 %1 to i32, !dbg !7516
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3.70, i32 0, i32 0), i32 noundef %8) #25, !dbg !7516
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 283) #25, !dbg !7516
  unreachable, !dbg !7516

9:                                                ; preds = %4
  ret void, !dbg !7521
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !7522 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7527, metadata !DIExpression()), !dbg !7532
  call void @llvm.dbg.value(metadata i8 %1, metadata !7528, metadata !DIExpression()), !dbg !7532
  call void @llvm.dbg.value(metadata i32 undef, metadata !7529, metadata !DIExpression()), !dbg !7532
  call void @llvm.dbg.value(metadata i32 undef, metadata !7530, metadata !DIExpression()), !dbg !7532
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7533
  call void @llvm.dbg.value(metadata i8 %3, metadata !7531, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7532
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #24, !dbg !7534
  call void @llvm.dbg.value(metadata i32 %4, metadata !7531, metadata !DIExpression()), !dbg !7532
  %5 = trunc i32 %4 to i8, !dbg !7535
  store i8 %5, i8* @static_regions_num, align 1, !dbg !7536
  ret i32 %4, !dbg !7537
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !7538 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7542, metadata !DIExpression()), !dbg !7548
  call void @llvm.dbg.value(metadata i8 %1, metadata !7543, metadata !DIExpression()), !dbg !7548
  call void @llvm.dbg.value(metadata i8 %2, metadata !7544, metadata !DIExpression()), !dbg !7548
  call void @llvm.dbg.value(metadata i1 %3, metadata !7545, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7548
  %5 = zext i8 %2 to i32, !dbg !7549
  call void @llvm.dbg.value(metadata i32 %5, metadata !7547, metadata !DIExpression()), !dbg !7548
  call void @llvm.dbg.value(metadata i32 0, metadata !7546, metadata !DIExpression()), !dbg !7548
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !7547, metadata !DIExpression()), !dbg !7548
  call void @llvm.dbg.value(metadata i32 0, metadata !7546, metadata !DIExpression()), !dbg !7548
  %7 = icmp eq i8 %1, 0, !dbg !7550
  br i1 %7, label %30, label %8, !dbg !7553

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7547, metadata !DIExpression()), !dbg !7548
  call void @llvm.dbg.value(metadata i32 %10, metadata !7546, metadata !DIExpression()), !dbg !7548
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !7554
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !7557
  %13 = load i32, i32* %12, align 4, !dbg !7557
  %14 = icmp eq i32 %13, 0, !dbg !7558
  br i1 %14, label %26, label %15, !dbg !7559

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !7560

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !7562
  %18 = icmp eq i32 %17, 0, !dbg !7562
  br i1 %18, label %19, label %20, !dbg !7563

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.71, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #25, !dbg !7564
  br label %30, !dbg !7570

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !7571
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !7572
  call void @llvm.dbg.value(metadata i32 %22, metadata !7547, metadata !DIExpression()), !dbg !7548
  %23 = icmp eq i32 %22, -22, !dbg !7573
  br i1 %23, label %30, label %24, !dbg !7575

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !7576
  call void @llvm.dbg.value(metadata i32 %25, metadata !7547, metadata !DIExpression()), !dbg !7548
  br label %26, !dbg !7577

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !7548
  call void @llvm.dbg.value(metadata i32 %27, metadata !7547, metadata !DIExpression()), !dbg !7548
  %28 = add nuw nsw i32 %10, 1, !dbg !7578
  call void @llvm.dbg.value(metadata i32 %28, metadata !7546, metadata !DIExpression()), !dbg !7548
  %29 = icmp eq i32 %28, %6, !dbg !7550
  br i1 %29, label %30, label %8, !dbg !7553, !llvm.loop !7579

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !7548
  ret i32 %31, !dbg !7581
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #16 !dbg !7582 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7586, metadata !DIExpression()), !dbg !7588
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !7589
  %3 = load i32, i32* %2, align 4, !dbg !7589
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !7590, !range !7591
  %5 = icmp ult i32 %4, 2, !dbg !7590
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !7592
  br i1 %7, label %8, label %15, !dbg !7592

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !7593
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !7594
  %11 = load i32, i32* %10, align 4, !dbg !7594
  %12 = and i32 %11, %9, !dbg !7595
  %13 = icmp eq i32 %12, 0, !dbg !7596
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7587, metadata !DIExpression()), !dbg !7588
  ret i32 %16, !dbg !7597
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7598 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !7602, metadata !DIExpression()), !dbg !7605
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !7603, metadata !DIExpression()), !dbg !7605
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !7606
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7606
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !7604, metadata !DIExpression()), !dbg !7607
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !7608
  %6 = load i32, i32* %5, align 4, !dbg !7608
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !7609
  store i32 %6, i32* %7, align 4, !dbg !7610
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !7611
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !7612
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !7613
  %11 = load i32, i32* %10, align 4, !dbg !7613
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* noundef nonnull %8, %struct.k_spinlock* noundef nonnull %9, i32 noundef %11) #24, !dbg !7614
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #24, !dbg !7615
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7616
  ret i32 %12, !dbg !7617
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* nocapture noundef writeonly %0, %struct.k_spinlock* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #17 !dbg !7618 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !7625, metadata !DIExpression()), !dbg !7629
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !7626, metadata !DIExpression()), !dbg !7629
  call void @llvm.dbg.value(metadata i32 undef, metadata !7627, metadata !DIExpression()), !dbg !7629
  call void @llvm.dbg.value(metadata i32 %2, metadata !7628, metadata !DIExpression()), !dbg !7629
  %4 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %1, i32 0, i32 0, !dbg !7630
  %5 = load i32, i32* %4, align 4, !dbg !7630
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #24, !dbg !7631
  %7 = or i32 %6, %5, !dbg !7632
  %8 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !7633
  store i32 %7, i32* %8, align 4, !dbg !7634
  ret void, !dbg !7635
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7636 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7640, metadata !DIExpression()), !dbg !7642
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7641, metadata !DIExpression()), !dbg !7642
  %3 = zext i8 %0 to i32, !dbg !7643
  %4 = icmp ugt i8 %0, 7, !dbg !7645
  br i1 %4, label %5, label %6, !dbg !7646

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.9.72, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #25, !dbg !7647
  br label %7, !dbg !7653

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #24, !dbg !7654
  br label %7, !dbg !7655

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !7642
  ret i32 %8, !dbg !7656
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #14 !dbg !7657 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7661, metadata !DIExpression()), !dbg !7663
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7662, metadata !DIExpression()), !dbg !7663
  tail call fastcc void @set_region_number(i32 noundef %0) #24, !dbg !7664
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7665
  %4 = load i32, i32* %3, align 4, !dbg !7665
  %5 = and i32 %4, -32, !dbg !7666
  %6 = or i32 %5, %0, !dbg !7667
  %7 = or i32 %6, 16, !dbg !7667
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7668
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7669
  %9 = load i32, i32* %8, align 4, !dbg !7669
  %10 = or i32 %9, 1, !dbg !7670
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7671
  ret void, !dbg !7672
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #14 !dbg !7673 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7676, metadata !DIExpression()), !dbg !7677
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7678
  ret void, !dbg !7679
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #11 !dbg !7680 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7684, metadata !DIExpression()), !dbg !7685
  %2 = icmp ult i32 %0, 33, !dbg !7686
  br i1 %2, label %11, label %3, !dbg !7688

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7689
  br i1 %4, label %11, label %5, !dbg !7691

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7692
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7693, !range !7591
  %8 = mul nsw i32 %7, -2, !dbg !7694
  %9 = add nsw i32 %8, 62, !dbg !7694
  %10 = and i32 %9, 62, !dbg !7695
  br label %11, !dbg !7696

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7685
  ret i32 %12, !dbg !7697
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !7698 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7702, metadata !DIExpression()), !dbg !7704
  call void @llvm.dbg.value(metadata i8 %1, metadata !7703, metadata !DIExpression()), !dbg !7704
  %3 = tail call fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !7705
  %4 = icmp eq i32 %3, -22, !dbg !7707
  br i1 %4, label %5, label %7, !dbg !7708

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 314) #25, !dbg !7709
  %6 = zext i8 %1 to i32, !dbg !7709
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4.75, i32 0, i32 0), i32 noundef %6) #25, !dbg !7709
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 314) #25, !dbg !7709
  unreachable, !dbg !7709

7:                                                ; preds = %2
  ret void, !dbg !7714
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !7715 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7719, metadata !DIExpression()), !dbg !7726
  call void @llvm.dbg.value(metadata i8 %1, metadata !7720, metadata !DIExpression()), !dbg !7726
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7727
  call void @llvm.dbg.value(metadata i8 %3, metadata !7721, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7726
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #24, !dbg !7728
  call void @llvm.dbg.value(metadata i32 %4, metadata !7721, metadata !DIExpression()), !dbg !7726
  %5 = icmp ne i32 %4, -22, !dbg !7729
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7730
  call void @llvm.dbg.value(metadata i32 %4, metadata !7722, metadata !DIExpression()), !dbg !7731
  br i1 %7, label %8, label %12, !dbg !7730

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7722, metadata !DIExpression()), !dbg !7731
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #24, !dbg !7732
  %10 = add i32 %9, 1, !dbg !7735
  call void @llvm.dbg.value(metadata i32 %10, metadata !7722, metadata !DIExpression()), !dbg !7731
  %11 = icmp eq i32 %10, 8, !dbg !7736
  br i1 %11, label %12, label %8, !dbg !7737, !llvm.loop !7738

12:                                               ; preds = %8, %2
  ret i32 %4, !dbg !7740
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #14 !dbg !7741 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7744, metadata !DIExpression()), !dbg !7745
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7746
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7747
  ret void, !dbg !7748
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7749 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7754
  %2 = icmp ugt i32 %1, 8, !dbg !7756
  br i1 %2, label %3, label %4, !dbg !7757

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 341) #25, !dbg !7758
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5.76, i32 0, i32 0), i32 noundef %1, i32 noundef 8) #25, !dbg !7758
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 341) #25, !dbg !7758
  unreachable, !dbg !7758

4:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #24, !dbg !7763
  call void @llvm.dbg.value(metadata i32 0, metadata !7753, metadata !DIExpression()), !dbg !7764
  %5 = icmp eq i32 %1, 0, !dbg !7765
  br i1 %5, label %13, label %6, !dbg !7768

6:                                                ; preds = %4
  %7 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %8, !dbg !7768

8:                                                ; preds = %6, %8
  %9 = phi i32 [ 0, %6 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7753, metadata !DIExpression()), !dbg !7764
  %10 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %7, i32 %9, !dbg !7769
  tail call fastcc void @region_init(i32 noundef %9, %struct.arm_mpu_region* noundef %10) #24, !dbg !7771
  %11 = add nuw i32 %9, 1, !dbg !7772
  call void @llvm.dbg.value(metadata i32 %11, metadata !7753, metadata !DIExpression()), !dbg !7764
  %12 = icmp eq i32 %11, %1, !dbg !7765
  br i1 %12, label %13, label %8, !dbg !7768, !llvm.loop !7773

13:                                               ; preds = %8, %4
  %14 = trunc i32 %1 to i8, !dbg !7775
  store i8 %14, i8* @static_regions_num, align 1, !dbg !7776
  tail call void @arm_core_mpu_enable() #24, !dbg !7777
  %15 = load volatile i32, i32* inttoptr (i32 -536810096 to i32*), align 16, !dbg !7778
  %16 = and i32 %15, 65280, !dbg !7778
  %17 = icmp eq i32 %16, 2048, !dbg !7778
  br i1 %17, label %19, label %18, !dbg !7781

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.6.77, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 435) #25, !dbg !7782
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.78, i32 0, i32 0)) #25, !dbg !7782
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 435) #25, !dbg !7782
  unreachable, !dbg !7782

19:                                               ; preds = %13
  ret i32 0, !dbg !7784
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !7785 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7792, metadata !DIExpression()), !dbg !7795
  call void @llvm.dbg.value(metadata i8* %1, metadata !7793, metadata !DIExpression()), !dbg !7795
  call void @llvm.dbg.value(metadata i8* %0, metadata !7794, metadata !DIExpression()), !dbg !7795
  %3 = load i8, i8* %1, align 1, !dbg !7796
  %4 = icmp eq i8 %3, 0, !dbg !7797
  br i1 %4, label %13, label %5, !dbg !7798

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7792, metadata !DIExpression()), !dbg !7795
  call void @llvm.dbg.value(metadata i8* %8, metadata !7793, metadata !DIExpression()), !dbg !7795
  store i8 %6, i8* %7, align 1, !dbg !7799
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7801
  call void @llvm.dbg.value(metadata i8* %9, metadata !7792, metadata !DIExpression()), !dbg !7795
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7802
  call void @llvm.dbg.value(metadata i8* %10, metadata !7793, metadata !DIExpression()), !dbg !7795
  %11 = load i8, i8* %10, align 1, !dbg !7796
  %12 = icmp eq i8 %11, 0, !dbg !7797
  br i1 %12, label %13, label %5, !dbg !7798, !llvm.loop !7803

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7805
  ret i8* %0, !dbg !7806
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7807 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7811, metadata !DIExpression()), !dbg !7815
  call void @llvm.dbg.value(metadata i8* %1, metadata !7812, metadata !DIExpression()), !dbg !7815
  call void @llvm.dbg.value(metadata i32 %2, metadata !7813, metadata !DIExpression()), !dbg !7815
  call void @llvm.dbg.value(metadata i8* %0, metadata !7814, metadata !DIExpression()), !dbg !7815
  %4 = icmp eq i32 %2, 0, !dbg !7816
  br i1 %4, label %22, label %5, !dbg !7817

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7811, metadata !DIExpression()), !dbg !7815
  call void @llvm.dbg.value(metadata i32 %7, metadata !7813, metadata !DIExpression()), !dbg !7815
  call void @llvm.dbg.value(metadata i8* %8, metadata !7812, metadata !DIExpression()), !dbg !7815
  %9 = load i8, i8* %8, align 1, !dbg !7818
  %10 = icmp eq i8 %9, 0, !dbg !7819
  br i1 %10, label %16, label %11, !dbg !7820

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7821
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7823
  call void @llvm.dbg.value(metadata i8* %12, metadata !7812, metadata !DIExpression()), !dbg !7815
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7824
  call void @llvm.dbg.value(metadata i8* %13, metadata !7811, metadata !DIExpression()), !dbg !7815
  %14 = add i32 %7, -1, !dbg !7825
  call void @llvm.dbg.value(metadata i32 %14, metadata !7813, metadata !DIExpression()), !dbg !7815
  %15 = icmp eq i32 %14, 0, !dbg !7816
  br i1 %15, label %22, label %5, !dbg !7817, !llvm.loop !7826

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7811, metadata !DIExpression()), !dbg !7815
  call void @llvm.dbg.value(metadata i32 %18, metadata !7813, metadata !DIExpression()), !dbg !7815
  store i8 0, i8* %17, align 1, !dbg !7828
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7830
  call void @llvm.dbg.value(metadata i8* %19, metadata !7811, metadata !DIExpression()), !dbg !7815
  %20 = add i32 %18, -1, !dbg !7831
  call void @llvm.dbg.value(metadata i32 %20, metadata !7813, metadata !DIExpression()), !dbg !7815
  %21 = icmp eq i32 %20, 0, !dbg !7832
  br i1 %21, label %22, label %16, !dbg !7833, !llvm.loop !7834

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7836
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7837 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7841, metadata !DIExpression()), !dbg !7844
  call void @llvm.dbg.value(metadata i32 %1, metadata !7842, metadata !DIExpression()), !dbg !7844
  call void @llvm.dbg.value(metadata i32 %1, metadata !7843, metadata !DIExpression()), !dbg !7844
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7845

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7841, metadata !DIExpression()), !dbg !7844
  %6 = load i8, i8* %5, align 1, !dbg !7846
  %7 = icmp eq i8 %6, %3, !dbg !7847
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7848
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7849
  call void @llvm.dbg.value(metadata i8* %10, metadata !7841, metadata !DIExpression()), !dbg !7844
  br i1 %9, label %11, label %4, !dbg !7848, !llvm.loop !7851

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7853
  ret i8* %12, !dbg !7854
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7855 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7857, metadata !DIExpression()), !dbg !7860
  call void @llvm.dbg.value(metadata i32 %1, metadata !7858, metadata !DIExpression()), !dbg !7860
  call void @llvm.dbg.value(metadata i8* null, metadata !7859, metadata !DIExpression()), !dbg !7860
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7861

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7860
  call void @llvm.dbg.value(metadata i8* %6, metadata !7859, metadata !DIExpression()), !dbg !7860
  call void @llvm.dbg.value(metadata i8* %5, metadata !7857, metadata !DIExpression()), !dbg !7860
  %7 = load i8, i8* %5, align 1, !dbg !7862
  %8 = icmp eq i8 %7, %3, !dbg !7865
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7866
  call void @llvm.dbg.value(metadata i8* %9, metadata !7859, metadata !DIExpression()), !dbg !7860
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7867
  call void @llvm.dbg.value(metadata i8* %10, metadata !7857, metadata !DIExpression()), !dbg !7860
  %11 = icmp eq i8 %7, 0, !dbg !7868
  br i1 %11, label %12, label %4, !dbg !7868, !llvm.loop !7869

12:                                               ; preds = %4
  ret i8* %9, !dbg !7871
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #6 !dbg !7872 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7876, metadata !DIExpression()), !dbg !7878
  call void @llvm.dbg.value(metadata i32 0, metadata !7877, metadata !DIExpression()), !dbg !7878
  %2 = load i8, i8* %0, align 1, !dbg !7879
  %3 = icmp eq i8 %2, 0, !dbg !7880
  br i1 %3, label %11, label %4, !dbg !7881

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7877, metadata !DIExpression()), !dbg !7878
  call void @llvm.dbg.value(metadata i8* %6, metadata !7876, metadata !DIExpression()), !dbg !7878
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7882
  call void @llvm.dbg.value(metadata i8* %7, metadata !7876, metadata !DIExpression()), !dbg !7878
  %8 = add i32 %5, 1, !dbg !7884
  call void @llvm.dbg.value(metadata i32 %8, metadata !7877, metadata !DIExpression()), !dbg !7878
  %9 = load i8, i8* %7, align 1, !dbg !7879
  %10 = icmp eq i8 %9, 0, !dbg !7880
  br i1 %10, label %11, label %4, !dbg !7881, !llvm.loop !7885

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7878
  ret i32 %12, !dbg !7887
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7888 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7892, metadata !DIExpression()), !dbg !7895
  call void @llvm.dbg.value(metadata i32 %1, metadata !7893, metadata !DIExpression()), !dbg !7895
  call void @llvm.dbg.value(metadata i32 0, metadata !7894, metadata !DIExpression()), !dbg !7895
  %3 = load i8, i8* %0, align 1, !dbg !7896
  %4 = icmp ne i8 %3, 0, !dbg !7897
  %5 = icmp ne i32 %1, 0, !dbg !7898
  %6 = and i1 %4, %5, !dbg !7898
  br i1 %6, label %7, label %16, !dbg !7899

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7894, metadata !DIExpression()), !dbg !7895
  call void @llvm.dbg.value(metadata i8* %9, metadata !7892, metadata !DIExpression()), !dbg !7895
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7900
  call void @llvm.dbg.value(metadata i8* %10, metadata !7892, metadata !DIExpression()), !dbg !7895
  %11 = add nuw i32 %8, 1, !dbg !7902
  call void @llvm.dbg.value(metadata i32 %11, metadata !7894, metadata !DIExpression()), !dbg !7895
  %12 = load i8, i8* %10, align 1, !dbg !7896
  %13 = icmp ne i8 %12, 0, !dbg !7897
  %14 = icmp ult i32 %11, %1, !dbg !7898
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7898
  br i1 %15, label %7, label %16, !dbg !7899, !llvm.loop !7903

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7895
  ret i32 %17, !dbg !7905
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #6 !dbg !7906 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7910, metadata !DIExpression()), !dbg !7912
  call void @llvm.dbg.value(metadata i8* %1, metadata !7911, metadata !DIExpression()), !dbg !7912
  %3 = load i8, i8* %0, align 1, !dbg !7913
  %4 = load i8, i8* %1, align 1, !dbg !7914
  %5 = icmp ne i8 %3, %4, !dbg !7915
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !7916
  br i1 %7, label %18, label %8, !dbg !7916

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7911, metadata !DIExpression()), !dbg !7912
  call void @llvm.dbg.value(metadata i8* %10, metadata !7910, metadata !DIExpression()), !dbg !7912
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7917
  call void @llvm.dbg.value(metadata i8* %11, metadata !7910, metadata !DIExpression()), !dbg !7912
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7919
  call void @llvm.dbg.value(metadata i8* %12, metadata !7911, metadata !DIExpression()), !dbg !7912
  %13 = load i8, i8* %11, align 1, !dbg !7913
  %14 = load i8, i8* %12, align 1, !dbg !7914
  %15 = icmp ne i8 %13, %14, !dbg !7915
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !7916
  br i1 %17, label %18, label %8, !dbg !7916, !llvm.loop !7920

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !7913
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !7914
  %21 = zext i8 %19 to i32, !dbg !7923
  %22 = zext i8 %20 to i32, !dbg !7924
  %23 = sub nsw i32 %21, %22, !dbg !7925
  ret i32 %23, !dbg !7926
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #6 !dbg !7927 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7931, metadata !DIExpression()), !dbg !7934
  call void @llvm.dbg.value(metadata i8* %1, metadata !7932, metadata !DIExpression()), !dbg !7934
  call void @llvm.dbg.value(metadata i32 %2, metadata !7933, metadata !DIExpression()), !dbg !7934
  %4 = icmp eq i32 %2, 0, !dbg !7935
  br i1 %4, label %23, label %5, !dbg !7935

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7933, metadata !DIExpression()), !dbg !7934
  call void @llvm.dbg.value(metadata i8* %7, metadata !7932, metadata !DIExpression()), !dbg !7934
  call void @llvm.dbg.value(metadata i8* %8, metadata !7931, metadata !DIExpression()), !dbg !7934
  %9 = load i8, i8* %8, align 1, !dbg !7936
  %10 = load i8, i8* %7, align 1, !dbg !7937
  %11 = icmp ne i8 %9, %10, !dbg !7938
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !7939
  br i1 %13, label %19, label %14, !dbg !7939

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7940
  call void @llvm.dbg.value(metadata i8* %15, metadata !7931, metadata !DIExpression()), !dbg !7934
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7942
  call void @llvm.dbg.value(metadata i8* %16, metadata !7932, metadata !DIExpression()), !dbg !7934
  %17 = add i32 %6, -1, !dbg !7943
  call void @llvm.dbg.value(metadata i32 %17, metadata !7933, metadata !DIExpression()), !dbg !7934
  %18 = icmp eq i32 %17, 0, !dbg !7935
  br i1 %18, label %23, label %5, !dbg !7935, !llvm.loop !7944

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !7947
  %21 = zext i8 %10 to i32, !dbg !7948
  %22 = sub nsw i32 %20, %21, !dbg !7949
  br label %23, !dbg !7950

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !7950
  ret i32 %24, !dbg !7951
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #13 !dbg !7952 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7956, metadata !DIExpression()), !dbg !7961
  call void @llvm.dbg.value(metadata i8* %1, metadata !7957, metadata !DIExpression()), !dbg !7961
  call void @llvm.dbg.value(metadata i8** %2, metadata !7958, metadata !DIExpression()), !dbg !7961
  %4 = icmp eq i8* %0, null, !dbg !7962
  br i1 %4, label %5, label %7, !dbg !7962

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !7963
  br label %7, !dbg !7962

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !7962
  call void @llvm.dbg.value(metadata i8* %8, metadata !7959, metadata !DIExpression()), !dbg !7961
  %9 = load i8, i8* %8, align 1, !dbg !7964
  %10 = icmp eq i8 %9, 0, !dbg !7964
  br i1 %10, label %33, label %11, !dbg !7965

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7959, metadata !DIExpression()), !dbg !7961
  %14 = zext i8 %12 to i32, !dbg !7964
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #24, !dbg !7966
  %16 = icmp eq i8* %15, null, !dbg !7965
  br i1 %16, label %21, label %17, !dbg !7967

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7968
  call void @llvm.dbg.value(metadata i8* %18, metadata !7959, metadata !DIExpression()), !dbg !7961
  %19 = load i8, i8* %18, align 1, !dbg !7964
  %20 = icmp eq i8 %19, 0, !dbg !7964
  br i1 %20, label %33, label %11, !dbg !7965, !llvm.loop !7970

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !7960, metadata !DIExpression()), !dbg !7961
  %24 = zext i8 %22 to i32, !dbg !7972
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #24, !dbg !7973
  %26 = icmp eq i8* %25, null, !dbg !7974
  br i1 %26, label %27, label %31, !dbg !7975

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7976
  call void @llvm.dbg.value(metadata i8* %28, metadata !7960, metadata !DIExpression()), !dbg !7961
  %29 = load i8, i8* %28, align 1, !dbg !7972
  %30 = icmp eq i8 %29, 0, !dbg !7972
  br i1 %30, label %33, label %21, !dbg !7978, !llvm.loop !7979

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !7981
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7984
  br label %33, !dbg !7985

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !7961
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !7961
  store i8* %34, i8** %2, align 4, !dbg !7961
  ret i8* %35, !dbg !7986
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !7987 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7989, metadata !DIExpression()), !dbg !7991
  call void @llvm.dbg.value(metadata i8* %1, metadata !7990, metadata !DIExpression()), !dbg !7991
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !7992
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7993
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #24, !dbg !7994
  ret i8* %0, !dbg !7995
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7996 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7998, metadata !DIExpression()), !dbg !8003
  call void @llvm.dbg.value(metadata i8* %1, metadata !7999, metadata !DIExpression()), !dbg !8003
  call void @llvm.dbg.value(metadata i32 %2, metadata !8000, metadata !DIExpression()), !dbg !8003
  call void @llvm.dbg.value(metadata i8* %0, metadata !8001, metadata !DIExpression()), !dbg !8003
  %4 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !8004
  call void @llvm.dbg.value(metadata i32 %4, metadata !8002, metadata !DIExpression()), !dbg !8003
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !8005
  call void @llvm.dbg.value(metadata i8* %5, metadata !7998, metadata !DIExpression()), !dbg !8003
  call void @llvm.dbg.value(metadata i8* %1, metadata !7999, metadata !DIExpression()), !dbg !8003
  call void @llvm.dbg.value(metadata i32 %2, metadata !8000, metadata !DIExpression()), !dbg !8003
  call void @llvm.dbg.value(metadata i32 %2, metadata !8000, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8003
  %6 = icmp eq i32 %2, 0, !dbg !8006
  br i1 %6, label %18, label %7, !dbg !8007

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !8008
  call void @llvm.dbg.value(metadata i8* %9, metadata !7998, metadata !DIExpression()), !dbg !8003
  call void @llvm.dbg.value(metadata i8* %10, metadata !7999, metadata !DIExpression()), !dbg !8003
  %12 = load i8, i8* %10, align 1, !dbg !8009
  %13 = icmp eq i8 %12, 0, !dbg !8010
  br i1 %13, label %18, label %14, !dbg !8011

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8012
  call void @llvm.dbg.value(metadata i8* %15, metadata !7999, metadata !DIExpression()), !dbg !8003
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8014
  call void @llvm.dbg.value(metadata i8* %16, metadata !7998, metadata !DIExpression()), !dbg !8003
  store i8 %12, i8* %9, align 1, !dbg !8015
  call void @llvm.dbg.value(metadata i32 %11, metadata !8000, metadata !DIExpression()), !dbg !8003
  call void @llvm.dbg.value(metadata i32 %11, metadata !8000, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8003
  %17 = icmp eq i32 %11, 0, !dbg !8006
  br i1 %17, label %18, label %7, !dbg !8007, !llvm.loop !8016

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !8003
  store i8 0, i8* %19, align 1, !dbg !8018
  ret i8* %0, !dbg !8019
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #6 !dbg !8020 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8024, metadata !DIExpression()), !dbg !8029
  call void @llvm.dbg.value(metadata i8* %1, metadata !8025, metadata !DIExpression()), !dbg !8029
  call void @llvm.dbg.value(metadata i32 %2, metadata !8026, metadata !DIExpression()), !dbg !8029
  call void @llvm.dbg.value(metadata i8* %0, metadata !8027, metadata !DIExpression()), !dbg !8029
  call void @llvm.dbg.value(metadata i8* %1, metadata !8028, metadata !DIExpression()), !dbg !8029
  %4 = icmp eq i32 %2, 0, !dbg !8030
  br i1 %4, label %31, label %5, !dbg !8032

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8028, metadata !DIExpression()), !dbg !8029
  call void @llvm.dbg.value(metadata i8* %0, metadata !8027, metadata !DIExpression()), !dbg !8029
  call void @llvm.dbg.value(metadata i32 %2, metadata !8026, metadata !DIExpression()), !dbg !8029
  %6 = add i32 %2, -1, !dbg !8033
  call void @llvm.dbg.value(metadata i32 %6, metadata !8026, metadata !DIExpression()), !dbg !8029
  %7 = icmp eq i32 %6, 0, !dbg !8034
  br i1 %7, label %23, label %8, !dbg !8035

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !8036
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !8036
  br label %11, !dbg !8036

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8028, metadata !DIExpression()), !dbg !8029
  call void @llvm.dbg.value(metadata i8* %14, metadata !8027, metadata !DIExpression()), !dbg !8029
  %15 = load i8, i8* %14, align 1, !dbg !8037
  %16 = load i8, i8* %13, align 1, !dbg !8038
  %17 = icmp eq i8 %15, %16, !dbg !8039
  br i1 %17, label %18, label %23, !dbg !8036

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !8040
  call void @llvm.dbg.value(metadata i8* %19, metadata !8027, metadata !DIExpression()), !dbg !8029
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8042
  call void @llvm.dbg.value(metadata i8* %20, metadata !8028, metadata !DIExpression()), !dbg !8029
  call void @llvm.dbg.value(metadata i32 %12, metadata !8026, metadata !DIExpression()), !dbg !8029
  %21 = add i32 %12, -1, !dbg !8033
  call void @llvm.dbg.value(metadata i32 %21, metadata !8026, metadata !DIExpression()), !dbg !8029
  %22 = icmp eq i32 %21, 0, !dbg !8034
  br i1 %22, label %23, label %11, !dbg !8035, !llvm.loop !8043

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !8029
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !8029
  %26 = load i8, i8* %24, align 1, !dbg !8045
  %27 = zext i8 %26 to i32, !dbg !8045
  %28 = load i8, i8* %25, align 1, !dbg !8046
  %29 = zext i8 %28 to i32, !dbg !8046
  %30 = sub nsw i32 %27, %29, !dbg !8047
  br label %31, !dbg !8048

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !8029
  ret i32 %32, !dbg !8049
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !8050 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8054, metadata !DIExpression()), !dbg !8059
  call void @llvm.dbg.value(metadata i8* %1, metadata !8055, metadata !DIExpression()), !dbg !8059
  call void @llvm.dbg.value(metadata i32 %2, metadata !8056, metadata !DIExpression()), !dbg !8059
  call void @llvm.dbg.value(metadata i8* %0, metadata !8057, metadata !DIExpression()), !dbg !8059
  call void @llvm.dbg.value(metadata i8* %1, metadata !8058, metadata !DIExpression()), !dbg !8059
  %4 = ptrtoint i8* %0 to i32, !dbg !8060
  %5 = ptrtoint i8* %1 to i32, !dbg !8060
  %6 = sub i32 %4, %5, !dbg !8060
  %7 = icmp ult i32 %6, %2, !dbg !8062
  br i1 %7, label %10, label %8, !dbg !8063

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8058, metadata !DIExpression()), !dbg !8059
  call void @llvm.dbg.value(metadata i8* %0, metadata !8057, metadata !DIExpression()), !dbg !8059
  call void @llvm.dbg.value(metadata i32 %2, metadata !8056, metadata !DIExpression()), !dbg !8059
  %9 = icmp eq i32 %2, 0, !dbg !8064
  br i1 %9, label %26, label %17, !dbg !8066

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !8056, metadata !DIExpression()), !dbg !8059
  %12 = add i32 %11, -1, !dbg !8067
  call void @llvm.dbg.value(metadata i32 %12, metadata !8056, metadata !DIExpression()), !dbg !8059
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !8070
  %14 = load i8, i8* %13, align 1, !dbg !8070
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !8071
  store i8 %14, i8* %15, align 1, !dbg !8072
  %16 = icmp eq i32 %12, 0, !dbg !8073
  br i1 %16, label %26, label %10, !dbg !8074, !llvm.loop !8075

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !8058, metadata !DIExpression()), !dbg !8059
  call void @llvm.dbg.value(metadata i8* %19, metadata !8057, metadata !DIExpression()), !dbg !8059
  call void @llvm.dbg.value(metadata i32 %20, metadata !8056, metadata !DIExpression()), !dbg !8059
  %21 = load i8, i8* %18, align 1, !dbg !8077
  store i8 %21, i8* %19, align 1, !dbg !8079
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !8080
  call void @llvm.dbg.value(metadata i8* %22, metadata !8057, metadata !DIExpression()), !dbg !8059
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !8081
  call void @llvm.dbg.value(metadata i8* %23, metadata !8058, metadata !DIExpression()), !dbg !8059
  %24 = add i32 %20, -1, !dbg !8082
  call void @llvm.dbg.value(metadata i32 %24, metadata !8056, metadata !DIExpression()), !dbg !8059
  %25 = icmp eq i32 %24, 0, !dbg !8064
  br i1 %25, label %26, label %17, !dbg !8066, !llvm.loop !8083

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !8085
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !8086 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8092, metadata !DIExpression()), !dbg !8097
  call void @llvm.dbg.value(metadata i8* %1, metadata !8093, metadata !DIExpression()), !dbg !8097
  call void @llvm.dbg.value(metadata i32 %2, metadata !8094, metadata !DIExpression()), !dbg !8097
  call void @llvm.dbg.value(metadata i8* %0, metadata !8095, metadata !DIExpression()), !dbg !8097
  call void @llvm.dbg.value(metadata i8* %1, metadata !8096, metadata !DIExpression()), !dbg !8097
  %4 = icmp eq i32 %2, 0, !dbg !8098
  br i1 %4, label %14, label %5, !dbg !8099

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8096, metadata !DIExpression()), !dbg !8097
  call void @llvm.dbg.value(metadata i8* %7, metadata !8095, metadata !DIExpression()), !dbg !8097
  call void @llvm.dbg.value(metadata i32 %8, metadata !8094, metadata !DIExpression()), !dbg !8097
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8100
  call void @llvm.dbg.value(metadata i8* %9, metadata !8096, metadata !DIExpression()), !dbg !8097
  %10 = load i8, i8* %6, align 1, !dbg !8102
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8103
  call void @llvm.dbg.value(metadata i8* %11, metadata !8095, metadata !DIExpression()), !dbg !8097
  store i8 %10, i8* %7, align 1, !dbg !8104
  %12 = add i32 %8, -1, !dbg !8105
  call void @llvm.dbg.value(metadata i32 %12, metadata !8094, metadata !DIExpression()), !dbg !8097
  %13 = icmp eq i32 %12, 0, !dbg !8098
  br i1 %13, label %14, label %5, !dbg !8099, !llvm.loop !8106

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !8108
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #18 !dbg !8109 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8113, metadata !DIExpression()), !dbg !8118
  call void @llvm.dbg.value(metadata i32 %1, metadata !8114, metadata !DIExpression()), !dbg !8118
  call void @llvm.dbg.value(metadata i32 %2, metadata !8115, metadata !DIExpression()), !dbg !8118
  call void @llvm.dbg.value(metadata i8* %0, metadata !8116, metadata !DIExpression()), !dbg !8118
  %4 = trunc i32 %1 to i8, !dbg !8119
  call void @llvm.dbg.value(metadata i8 %4, metadata !8117, metadata !DIExpression()), !dbg !8118
  call void @llvm.dbg.value(metadata i32 %2, metadata !8115, metadata !DIExpression()), !dbg !8118
  call void @llvm.dbg.value(metadata i8* %0, metadata !8116, metadata !DIExpression()), !dbg !8118
  %5 = icmp eq i32 %2, 0, !dbg !8120
  br i1 %5, label %12, label %6, !dbg !8121

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !8115, metadata !DIExpression()), !dbg !8118
  call void @llvm.dbg.value(metadata i8* %8, metadata !8116, metadata !DIExpression()), !dbg !8118
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8122
  call void @llvm.dbg.value(metadata i8* %9, metadata !8116, metadata !DIExpression()), !dbg !8118
  store i8 %4, i8* %8, align 1, !dbg !8124
  %10 = add i32 %7, -1, !dbg !8125
  call void @llvm.dbg.value(metadata i32 %10, metadata !8115, metadata !DIExpression()), !dbg !8118
  %11 = icmp eq i32 %10, 0, !dbg !8120
  br i1 %11, label %12, label %6, !dbg !8121, !llvm.loop !8126

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !8128
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #6 !dbg !8129 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8133, metadata !DIExpression()), !dbg !8139
  call void @llvm.dbg.value(metadata i32 %1, metadata !8134, metadata !DIExpression()), !dbg !8139
  call void @llvm.dbg.value(metadata i32 %2, metadata !8135, metadata !DIExpression()), !dbg !8139
  %4 = icmp eq i32 %2, 0, !dbg !8140
  br i1 %4, label %17, label %5, !dbg !8141

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !8142

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !8143
  call void @llvm.dbg.value(metadata i8* %9, metadata !8136, metadata !DIExpression()), !dbg !8143
  call void @llvm.dbg.value(metadata i32 %8, metadata !8135, metadata !DIExpression()), !dbg !8139
  call void @llvm.dbg.value(metadata i8* %9, metadata !8136, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8143
  %10 = load i8, i8* %9, align 1, !dbg !8144
  %11 = icmp eq i8 %10, %6, !dbg !8147
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !8148
  call void @llvm.dbg.value(metadata i8* %12, metadata !8136, metadata !DIExpression()), !dbg !8143
  call void @llvm.dbg.value(metadata i32 %13, metadata !8135, metadata !DIExpression()), !dbg !8139
  br i1 %15, label %16, label %7, !dbg !8148, !llvm.loop !8149

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !8151

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !8139
  ret i8* %19, !dbg !8152
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !8153 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !8155, metadata !DIExpression()), !dbg !8156
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !8157
  ret void, !dbg !8158
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #4 !dbg !8159 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8161, metadata !DIExpression()), !dbg !8162
  ret i32 -1, !dbg !8163
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8164 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8168, metadata !DIExpression()), !dbg !8170
  call void @llvm.dbg.value(metadata i32* %1, metadata !8169, metadata !DIExpression()), !dbg !8170
  %3 = ptrtoint i32* %1 to i32, !dbg !8171
  %4 = and i32 %3, -2, !dbg !8171
  %5 = icmp eq i32 %4, 2, !dbg !8171
  br i1 %5, label %6, label %9, !dbg !8171

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8172
  %8 = tail call i32 %7(i32 noundef %0) #25, !dbg !8172
  br label %9, !dbg !8173

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !8173
  ret i32 %10, !dbg !8174
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8175 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8177, metadata !DIExpression()), !dbg !8179
  call void @llvm.dbg.value(metadata i32* %1, metadata !8178, metadata !DIExpression()), !dbg !8179
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !8180
  ret i32 %3, !dbg !8181
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !8182 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8185, metadata !DIExpression()), !dbg !8187
  call void @llvm.dbg.value(metadata i32* %1, metadata !8186, metadata !DIExpression()), !dbg !8187
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8188, !srcloc !8190
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !8191
  ret i32 %3, !dbg !8192
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !8193 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8198, metadata !DIExpression()), !dbg !8202
  call void @llvm.dbg.value(metadata i32* %1, metadata !8199, metadata !DIExpression()), !dbg !8202
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !8203
  call void @llvm.dbg.value(metadata i32 %3, metadata !8200, metadata !DIExpression()), !dbg !8202
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #24, !dbg !8204
  call void @llvm.dbg.value(metadata i32 %4, metadata !8201, metadata !DIExpression()), !dbg !8202
  %5 = icmp ne i32 %3, %4, !dbg !8205
  %6 = sext i1 %5 to i32, !dbg !8206
  ret i32 %6, !dbg !8207
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !8208 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8212, metadata !DIExpression()), !dbg !8216
  call void @llvm.dbg.value(metadata i32 %1, metadata !8213, metadata !DIExpression()), !dbg !8216
  call void @llvm.dbg.value(metadata i32 %2, metadata !8214, metadata !DIExpression()), !dbg !8216
  call void @llvm.dbg.value(metadata i32* %3, metadata !8215, metadata !DIExpression()), !dbg !8216
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8217
  ret i32 %5, !dbg !8218
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !8219 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8221, metadata !DIExpression()), !dbg !8225
  call void @llvm.dbg.value(metadata i32 %1, metadata !8222, metadata !DIExpression()), !dbg !8225
  call void @llvm.dbg.value(metadata i32 %2, metadata !8223, metadata !DIExpression()), !dbg !8225
  call void @llvm.dbg.value(metadata i32* %3, metadata !8224, metadata !DIExpression()), !dbg !8225
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8226, !srcloc !8228
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8229
  ret i32 %5, !dbg !8230
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !8231 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8233, metadata !DIExpression()), !dbg !8241
  call void @llvm.dbg.value(metadata i32 %1, metadata !8234, metadata !DIExpression()), !dbg !8241
  call void @llvm.dbg.value(metadata i32 %2, metadata !8235, metadata !DIExpression()), !dbg !8241
  call void @llvm.dbg.value(metadata i32* %3, metadata !8236, metadata !DIExpression()), !dbg !8241
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !8242
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !8244
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !8244
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !8244
  br i1 %11, label %33, label %12, !dbg !8244

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !8241
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !8241
  call void @llvm.dbg.value(metadata i8* %14, metadata !8239, metadata !DIExpression()), !dbg !8241
  call void @llvm.dbg.value(metadata i32 %13, metadata !8237, metadata !DIExpression()), !dbg !8241
  call void @llvm.dbg.value(metadata i32 %1, metadata !8238, metadata !DIExpression()), !dbg !8241
  br label %15, !dbg !8245

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !8247
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !8241
  call void @llvm.dbg.value(metadata i8* %17, metadata !8239, metadata !DIExpression()), !dbg !8241
  call void @llvm.dbg.value(metadata i32 %16, metadata !8238, metadata !DIExpression()), !dbg !8241
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8248
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8251
  call void @llvm.dbg.value(metadata i8* %19, metadata !8239, metadata !DIExpression()), !dbg !8241
  %20 = load i8, i8* %17, align 1, !dbg !8252
  %21 = zext i8 %20 to i32, !dbg !8253
  %22 = tail call i32 %18(i32 noundef %21) #25, !dbg !8248
  %23 = icmp eq i32 %22, -1, !dbg !8254
  br i1 %23, label %30, label %24, !dbg !8255

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !8256
  call void @llvm.dbg.value(metadata i32 %25, metadata !8238, metadata !DIExpression()), !dbg !8241
  %26 = icmp eq i32 %25, 0, !dbg !8257
  br i1 %26, label %27, label %15, !dbg !8258, !llvm.loop !8259

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !8261
  call void @llvm.dbg.value(metadata i32 %28, metadata !8237, metadata !DIExpression()), !dbg !8241
  %29 = icmp eq i32 %28, 0, !dbg !8262
  br i1 %29, label %30, label %12, !dbg !8263, !llvm.loop !8264

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !8241
  call void @llvm.dbg.value(metadata i32 %31, metadata !8237, metadata !DIExpression()), !dbg !8241
  call void @llvm.dbg.label(metadata !8240), !dbg !8267
  %32 = sub i32 %2, %31, !dbg !8268
  br label %33, !dbg !8269

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !8241
  ret i32 %34, !dbg !8270
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !8271 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8275, metadata !DIExpression()), !dbg !8276
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !8277
  %3 = icmp eq i32 %2, -1, !dbg !8279
  br i1 %3, label %8, label %4, !dbg !8280

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !8281
  %6 = icmp eq i32 %5, -1, !dbg !8282
  %7 = sext i1 %6 to i32, !dbg !8281
  br label %8, !dbg !8283

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !8276
  ret i32 %9, !dbg !8284
}

; Function Attrs: noinline nounwind optsize
define dso_local void @end_report() local_unnamed_addr #1 !dbg !8285 {
  %1 = load i32, i32* @test_status, align 4, !dbg !8286
  %2 = icmp eq i32 %1, 0, !dbg !8286
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.89, i32 0, i32 0)) #25, !dbg !8288
  %3 = select i1 %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3.90, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2.91, i32 0, i32 0)
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1.92, i32 0, i32 0), i8* noundef %3) #25, !dbg !8288
  ret void, !dbg !8289
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @z_impl_z_test_1cpu_start() local_unnamed_addr #4 !dbg !8290 {
  ret void, !dbg !8291
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @z_impl_z_test_1cpu_stop() local_unnamed_addr #4 !dbg !8292 {
  ret void, !dbg !8293
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_skip_failed_assumption() local_unnamed_addr #1 !dbg !8294 {
  store i1 true, i1* @current_test_failed_assumption, align 1, !dbg !8295
  tail call void @ztest_test_skip() #24, !dbg !8298
  ret void, !dbg !8299
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_test_skip() local_unnamed_addr #1 !dbg !8300 {
  %1 = load i32, i32* @phase, align 4, !dbg !8301
  switch i32 %1, label %4 [
    i32 0, label %2
    i32 1, label %3
    i32 2, label %3
  ], !dbg !8302

2:                                                ; preds = %0
  store i32 4, i32* @test_result, align 4, !dbg !8303
  br label %6, !dbg !8305

3:                                                ; preds = %0, %0
  store i32 3, i32* @test_result, align 4, !dbg !8306
  tail call fastcc void @test_finalize() #24, !dbg !8307
  br label %6, !dbg !8308

4:                                                ; preds = %0
  %5 = tail call fastcc i8* @get_friendly_phase_name(i32 noundef %1) #24, !dbg !8309
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.6.93, i32 0, i32 0), i8* noundef %5) #25, !dbg !8310
  store i32 2, i32* @test_status, align 4, !dbg !8311
  br label %6, !dbg !8312

6:                                                ; preds = %4, %3, %2
  ret void, !dbg !8313
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @test_finalize() unnamed_addr #1 !dbg !8314 {
  tail call fastcc void @k_thread_abort.101(%struct.k_thread* noundef nonnull @ztest_thread) #24, !dbg !8315
  %1 = tail call fastcc %struct.k_thread* @k_current_get.102() #26, !dbg !8318
  tail call fastcc void @k_thread_abort.101(%struct.k_thread* noundef %1) #24, !dbg !8319
  ret void, !dbg !8320
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @get_friendly_phase_name(i32 noundef %0) unnamed_addr #4 !dbg !8321 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8325, metadata !DIExpression()), !dbg !8326
  %2 = icmp ult i32 %0, 6, !dbg !8327
  br i1 %2, label %3, label %6, !dbg !8327

3:                                                ; preds = %1
  %4 = getelementptr inbounds [6 x i8*], [6 x i8*]* @switch.table.get_friendly_phase_name, i32 0, i32 %0, !dbg !8327
  %5 = load i8*, i8** %4, align 4, !dbg !8327
  br label %6, !dbg !8327

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16.94, i32 0, i32 0), %1 ], !dbg !8328
  ret i8* %7, !dbg !8330
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.101(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !8331 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8337, metadata !DIExpression()), !dbg !8338
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8339, !srcloc !8341
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !8342
  ret void, !dbg !8343
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.102() unnamed_addr #11 !dbg !8344 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.103() #26, !dbg !8347
  ret %struct.k_thread* %1, !dbg !8348
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.103() unnamed_addr #11 !dbg !8349 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8350, !srcloc !8352
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !8353
  ret %struct.k_thread* %1, !dbg !8354
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_test_fail() local_unnamed_addr #1 !dbg !8355 {
  %1 = load i32, i32* @phase, align 4, !dbg !8356
  switch i32 %1, label %4 [
    i32 0, label %2
    i32 1, label %3
    i32 2, label %3
  ], !dbg !8357

2:                                                ; preds = %0
  store i32 5, i32* @test_result, align 4, !dbg !8358
  br label %6, !dbg !8360

3:                                                ; preds = %0, %0
  store i32 2, i32* @test_result, align 4, !dbg !8361
  tail call fastcc void @test_finalize() #24, !dbg !8362
  br label %6, !dbg !8363

4:                                                ; preds = %0
  %5 = tail call fastcc i8* @get_friendly_phase_name(i32 noundef %1) #24, !dbg !8364
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4.104, i32 0, i32 0), i8* noundef %5) #25, !dbg !8365
  store i32 2, i32* @test_status, align 4, !dbg !8366
  br label %6, !dbg !8367

6:                                                ; preds = %4, %3, %2
  ret void, !dbg !8368
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_test_pass() local_unnamed_addr #1 !dbg !8369 {
  %1 = load i32, i32* @phase, align 4, !dbg !8370
  %2 = icmp eq i32 %1, 2, !dbg !8371
  br i1 %2, label %3, label %4, !dbg !8371

3:                                                ; preds = %0
  store i32 1, i32* @test_result, align 4, !dbg !8372
  br label %8, !dbg !8374

4:                                                ; preds = %0
  %5 = tail call fastcc i8* @get_friendly_phase_name(i32 noundef %1) #24, !dbg !8375
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.5.105, i32 0, i32 0), i8* noundef %5) #25, !dbg !8376
  store i32 2, i32* @test_status, align 4, !dbg !8377
  %6 = load i32, i32* @phase, align 4, !dbg !8378
  %7 = icmp eq i32 %6, 1, !dbg !8380
  br i1 %7, label %8, label %9, !dbg !8381

8:                                                ; preds = %4, %3
  tail call fastcc void @test_finalize() #24, !dbg !8382
  br label %9, !dbg !8383

9:                                                ; preds = %8, %4
  ret void, !dbg !8383
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_simple_1cpu_before(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !8384 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8386, metadata !DIExpression()), !dbg !8387
  tail call fastcc void @z_test_1cpu_start() #24, !dbg !8388
  ret void, !dbg !8389
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_test_1cpu_start() unnamed_addr #1 !dbg !8390 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8392, !srcloc !8394
  ret void, !dbg !8395
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_simple_1cpu_after(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !8396 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8398, metadata !DIExpression()), !dbg !8399
  tail call fastcc void @z_test_1cpu_stop() #24, !dbg !8400
  ret void, !dbg !8401
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_test_1cpu_stop() unnamed_addr #1 !dbg !8402 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8403, !srcloc !8405
  ret void, !dbg !8406
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %0, %struct.ztest_unit_test* noundef readonly %1) local_unnamed_addr #1 !dbg !8407 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8428, metadata !DIExpression()), !dbg !8431
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %1, metadata !8429, metadata !DIExpression()), !dbg !8431
  %3 = icmp eq %struct.ztest_unit_test* %1, null, !dbg !8432
  %4 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %1, i32 1, !dbg !8433
  %5 = select i1 %3, %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %struct.ztest_unit_test* %4, !dbg !8433
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %5, metadata !8430, metadata !DIExpression()), !dbg !8431
  %6 = icmp ult %struct.ztest_unit_test* %5, getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0), !dbg !8434
  br i1 %6, label %7, label %16, !dbg !8437

7:                                                ; preds = %2, %13
  %8 = phi %struct.ztest_unit_test* [ %14, %13 ], [ %5, %2 ]
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %8, metadata !8430, metadata !DIExpression()), !dbg !8431
  %9 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %8, i32 0, i32 0, !dbg !8438
  %10 = load i8*, i8** %9, align 4, !dbg !8438
  %11 = tail call i32 @strcmp(i8* noundef %0, i8* noundef %10) #25, !dbg !8441
  %12 = icmp eq i32 %11, 0, !dbg !8442
  br i1 %12, label %16, label %13, !dbg !8443

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %8, i32 1, !dbg !8444
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %14, metadata !8430, metadata !DIExpression()), !dbg !8431
  %15 = icmp ult %struct.ztest_unit_test* %14, getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0), !dbg !8434
  br i1 %15, label %7, label %16, !dbg !8437, !llvm.loop !8445

16:                                               ; preds = %7, %13, %2
  %17 = phi %struct.ztest_unit_test* [ null, %2 ], [ null, %13 ], [ %8, %7 ], !dbg !8431
  ret %struct.ztest_unit_test* %17, !dbg !8447
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_ztest_run_test_suite(i8* noundef %0) local_unnamed_addr #1 !dbg !8448 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8450, metadata !DIExpression()), !dbg !8451
  %2 = tail call fastcc %struct.ztest_suite_node* @ztest_find_test_suite(i8* noundef %0) #24, !dbg !8452
  %3 = tail call fastcc i32 @z_ztest_run_test_suite_ptr(%struct.ztest_suite_node* noundef %2) #24, !dbg !8453
  ret i32 %3, !dbg !8454
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.ztest_suite_node* @ztest_find_test_suite(i8* noundef %0) unnamed_addr #1 !dbg !8455 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8476, metadata !DIExpression()), !dbg !8478
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), metadata !8477, metadata !DIExpression()), !dbg !8478
  br i1 icmp ult (%struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)), label %2, label %11, !dbg !8479

2:                                                ; preds = %1, %8
  %3 = phi %struct.ztest_suite_node* [ %9, %8 ], [ getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %3, metadata !8477, metadata !DIExpression()), !dbg !8478
  %4 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %3, i32 0, i32 0, !dbg !8481
  %5 = load i8*, i8** %4, align 4, !dbg !8481
  %6 = tail call i32 @strcmp(i8* noundef %0, i8* noundef %5) #25, !dbg !8485
  %7 = icmp eq i32 %6, 0, !dbg !8486
  br i1 %7, label %11, label %8, !dbg !8487

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %3, i32 1, !dbg !8488
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %9, metadata !8477, metadata !DIExpression()), !dbg !8478
  %10 = icmp ult %struct.ztest_suite_node* %9, getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0), !dbg !8489
  br i1 %10, label %2, label %11, !dbg !8479, !llvm.loop !8490

11:                                               ; preds = %2, %8, %1
  %12 = phi %struct.ztest_suite_node* [ null, %1 ], [ null, %8 ], [ %3, %2 ], !dbg !8478
  ret %struct.ztest_suite_node* %12, !dbg !8492
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_ztest_run_test_suite_ptr(%struct.ztest_suite_node* noundef %0) unnamed_addr #1 !dbg !8493 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8497, metadata !DIExpression()), !dbg !8504
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8498, metadata !DIExpression()), !dbg !8504
  call void @llvm.dbg.value(metadata i8* null, metadata !8499, metadata !DIExpression()), !dbg !8504
  call void @llvm.dbg.value(metadata i32 0, metadata !8500, metadata !DIExpression()), !dbg !8504
  call void @llvm.dbg.value(metadata i32 0, metadata !8501, metadata !DIExpression()), !dbg !8504
  %2 = icmp eq %struct.ztest_suite_node* %0, null, !dbg !8505
  br i1 %2, label %3, label %4, !dbg !8507

3:                                                ; preds = %1
  store i32 2, i32* @test_status, align 4, !dbg !8508
  br label %68, !dbg !8510

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 0, !dbg !8511
  %6 = load i8*, i8** %5, align 4, !dbg !8511
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.17.106, i32 0, i32 0), i8* noundef %6) #25, !dbg !8511
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.89, i32 0, i32 0)) #25, !dbg !8511
  store i1 false, i1* @current_test_failed_assumption, align 1, !dbg !8513
  store i32 0, i32* @test_result, align 4, !dbg !8514
  store i32 0, i32* @phase, align 4, !dbg !8515
  %7 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 1, !dbg !8516
  %8 = load i8* ()*, i8* ()** %7, align 4, !dbg !8516
  %9 = icmp eq i8* ()* %8, null, !dbg !8518
  br i1 %9, label %12, label %10, !dbg !8519

10:                                               ; preds = %4
  %11 = tail call i8* %8() #25, !dbg !8520
  call void @llvm.dbg.value(metadata i8* %11, metadata !8499, metadata !DIExpression()), !dbg !8504
  br label %12, !dbg !8522

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ null, %4 ], !dbg !8504
  call void @llvm.dbg.value(metadata i8* %13, metadata !8499, metadata !DIExpression()), !dbg !8504
  call void @llvm.dbg.value(metadata i32 0, metadata !8502, metadata !DIExpression()), !dbg !8523
  call void @llvm.dbg.value(metadata i32 undef, metadata !8502, metadata !DIExpression()), !dbg !8523
  call void @llvm.dbg.value(metadata i32 0, metadata !8500, metadata !DIExpression()), !dbg !8504
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8498, metadata !DIExpression()), !dbg !8504
  %14 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** getelementptr inbounds (%struct.ztest_arch_api, %struct.ztest_arch_api* @ztest_api, i32 0, i32 2), align 4
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8498, metadata !DIExpression()), !dbg !8504
  br label %15, !dbg !8524

15:                                               ; preds = %12, %49
  %16 = phi %struct.ztest_unit_test* [ %19, %49 ], [ null, %12 ], !dbg !8504
  %17 = phi i32 [ %50, %49 ], [ 0, %12 ], !dbg !8527
  call void @llvm.dbg.value(metadata i32 %17, metadata !8500, metadata !DIExpression()), !dbg !8504
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %16, metadata !8498, metadata !DIExpression()), !dbg !8504
  %18 = load i8*, i8** %5, align 4, !dbg !8528
  %19 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %18, %struct.ztest_unit_test* noundef %16) #24, !dbg !8529
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %19, metadata !8498, metadata !DIExpression()), !dbg !8504
  %20 = icmp eq %struct.ztest_unit_test* %19, null, !dbg !8530
  br i1 %20, label %53, label %21, !dbg !8524

21:                                               ; preds = %15
  %22 = load i8*, i8** %5, align 4, !dbg !8531
  %23 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 0, i32 1, !dbg !8534
  %24 = load i8*, i8** %23, align 4, !dbg !8534
  %25 = tail call zeroext i1 %14(i8* noundef %22, i8* noundef %24) #25, !dbg !8535
  br i1 %25, label %26, label %49, !dbg !8536

26:                                               ; preds = %21
  %27 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 0, i32 4, !dbg !8537
  %28 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %27, align 4, !dbg !8537
  %29 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %28, i32 0, i32 0, !dbg !8539
  %30 = load i32, i32* %29, align 4, !dbg !8540
  %31 = add i32 %30, 1, !dbg !8540
  store i32 %31, i32* %29, align 4, !dbg !8540
  %32 = tail call fastcc i32 @run_test(%struct.ztest_suite_node* noundef nonnull %0, %struct.ztest_unit_test* noundef nonnull %19, i8* noundef %13) #24, !dbg !8541
  call void @llvm.dbg.value(metadata i32 %32, metadata !8501, metadata !DIExpression()), !dbg !8504
  switch i32 %32, label %49 [
    i32 0, label %33
    i32 2, label %36
    i32 1, label %39
  ], !dbg !8542

33:                                               ; preds = %26
  %34 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %27, align 4, !dbg !8543
  %35 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %34, i32 0, i32 3, !dbg !8546
  br label %42, !dbg !8547

36:                                               ; preds = %26
  %37 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %27, align 4, !dbg !8548
  %38 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %37, i32 0, i32 1, !dbg !8551
  br label %42, !dbg !8552

39:                                               ; preds = %26
  %40 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %27, align 4, !dbg !8553
  %41 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 2, !dbg !8556
  br label %42, !dbg !8557

42:                                               ; preds = %36, %39, %33
  %43 = phi i32* [ %38, %36 ], [ %41, %39 ], [ %35, %33 ]
  %44 = load i32, i32* %43, align 4, !dbg !8558
  %45 = add i32 %44, 1, !dbg !8558
  store i32 %45, i32* %43, align 4, !dbg !8558
  %46 = icmp eq i32 %32, 1, !dbg !8559
  %47 = zext i1 %46 to i32, !dbg !8561
  %48 = add nsw i32 %17, %47, !dbg !8561
  br label %49, !dbg !8561

49:                                               ; preds = %42, %26, %21
  %50 = phi i32 [ %17, %21 ], [ %17, %26 ], [ %48, %42 ], !dbg !8527
  call void @llvm.dbg.value(metadata i32 %50, metadata !8500, metadata !DIExpression()), !dbg !8504
  %51 = load i32, i32* @test_status, align 4, !dbg !8562
  %52 = icmp eq i32 %51, 2, !dbg !8564
  br i1 %52, label %59, label %15, !dbg !8565, !llvm.loop !8566

53:                                               ; preds = %15
  %54 = load i32, i32* @test_status, align 4, !dbg !8568
  %55 = icmp eq i32 %54, 0, !dbg !8524
  call void @llvm.dbg.value(metadata i32 %17, metadata !8500, metadata !DIExpression()), !dbg !8504
  %56 = icmp ne i32 %17, 0
  %57 = select i1 %55, i1 %56, i1 false, !dbg !8570
  br i1 %57, label %58, label %59, !dbg !8570

58:                                               ; preds = %53
  store i32 1, i32* @test_status, align 4, !dbg !8571
  br label %59, !dbg !8573

59:                                               ; preds = %49, %53, %58
  %60 = phi i32 [ %17, %53 ], [ %17, %58 ], [ %50, %49 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !8502, metadata !DIExpression()), !dbg !8523
  call void @llvm.dbg.value(metadata i32 %17, metadata !8500, metadata !DIExpression()), !dbg !8504
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* undef, metadata !8498, metadata !DIExpression()), !dbg !8504
  %61 = icmp sgt i32 %60, 0, !dbg !8574
  %62 = load i8*, i8** %5, align 4, !dbg !8577
  %63 = select i1 %61, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.19.107, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.18.108, i32 0, i32 0)
  tail call void (i8*, ...) @printk(i8* noundef %63, i8* noundef %62) #25, !dbg !8577
  store i32 4, i32* @phase, align 4, !dbg !8578
  %64 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 4, !dbg !8579
  %65 = load void (i8*)*, void (i8*)** %64, align 4, !dbg !8579
  %66 = icmp eq void (i8*)* %65, null, !dbg !8581
  br i1 %66, label %68, label %67, !dbg !8582

67:                                               ; preds = %59
  tail call void %65(i8* noundef %13) #25, !dbg !8583
  br label %68, !dbg !8585

68:                                               ; preds = %59, %67, %3
  %69 = phi i32 [ -1, %3 ], [ %60, %67 ], [ %60, %59 ], !dbg !8504
  ret i32 %69, !dbg !8586
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @run_test(%struct.ztest_suite_node* noundef %0, %struct.ztest_unit_test* noundef %1, i8* noundef %2) unnamed_addr #1 !dbg !8587 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8591, metadata !DIExpression()), !dbg !8595
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %1, metadata !8592, metadata !DIExpression()), !dbg !8595
  call void @llvm.dbg.value(metadata i8* %2, metadata !8593, metadata !DIExpression()), !dbg !8595
  call void @llvm.dbg.value(metadata i32 0, metadata !8594, metadata !DIExpression()), !dbg !8595
  %4 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %1, i32 0, i32 1, !dbg !8596
  %5 = load i8*, i8** %4, align 4, !dbg !8596
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.20.109, i32 0, i32 0), i8* noundef %5) #25, !dbg !8596
  store i32 1, i32* @phase, align 4, !dbg !8598
  tail call fastcc void @get_start_time_cyc() #24, !dbg !8599
  %6 = bitcast %struct.ztest_suite_node* %0 to i8*, !dbg !8602
  %7 = bitcast %struct.ztest_unit_test* %1 to i8*, !dbg !8603
  %8 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %1, i32 0, i32 3, !dbg !8604
  %9 = load i32, i32* %8, align 4, !dbg !8604
  %10 = or i32 %9, 8, !dbg !8605
  tail call fastcc void @k_thread_create(i8* noundef %6, i8* noundef %7, i8* noundef %2, i32 noundef %10) #24, !dbg !8606
  tail call fastcc void @k_object_access_grant() #24, !dbg !8607
  tail call fastcc void @k_object_access_grant() #24, !dbg !8607
  tail call fastcc void @k_object_access_grant() #24, !dbg !8607
  %11 = load i8*, i8** %4, align 4, !dbg !8608
  %12 = icmp eq i8* %11, null, !dbg !8610
  br i1 %12, label %14, label %13, !dbg !8611

13:                                               ; preds = %3
  tail call fastcc void @k_thread_name_set(i8* noundef nonnull %11) #24, !dbg !8612
  br label %14, !dbg !8614

14:                                               ; preds = %13, %3
  %15 = load i32, i32* @test_result, align 4, !dbg !8615
  %16 = and i32 %15, -2, !dbg !8617
  %17 = icmp eq i32 %16, 4, !dbg !8617
  br i1 %17, label %19, label %18, !dbg !8617

18:                                               ; preds = %14
  tail call fastcc void @k_thread_start() #24, !dbg !8618
  tail call fastcc void @k_thread_join() #24, !dbg !8620
  br label %19, !dbg !8621

19:                                               ; preds = %18, %14
  store i32 3, i32* @phase, align 4, !dbg !8622
  %20 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 3, !dbg !8623
  %21 = load void (i8*)*, void (i8*)** %20, align 4, !dbg !8623
  %22 = icmp eq void (i8*)* %21, null, !dbg !8625
  br i1 %22, label %24, label %23, !dbg !8626

23:                                               ; preds = %19
  tail call void %21(i8* noundef %2) #25, !dbg !8627
  br label %24, !dbg !8629

24:                                               ; preds = %23, %19
  tail call fastcc void @run_test_rules(i1 noundef zeroext false, %struct.ztest_unit_test* noundef nonnull %1, i8* noundef %2) #24, !dbg !8630
  tail call fastcc void @get_test_duration_ms() #24, !dbg !8631
  %25 = load i32, i32* @tc_spend_time, align 4, !dbg !8632
  %26 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %1, i32 0, i32 4, !dbg !8634
  %27 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %26, align 4, !dbg !8634
  %28 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %27, i32 0, i32 4, !dbg !8635
  %29 = load i32, i32* %28, align 4, !dbg !8635
  %30 = icmp ugt i32 %25, %29, !dbg !8636
  br i1 %30, label %31, label %32, !dbg !8637

31:                                               ; preds = %24
  store i32 %25, i32* %28, align 4, !dbg !8638
  br label %32, !dbg !8640

32:                                               ; preds = %31, %24
  store i32 5, i32* @phase, align 4, !dbg !8641
  %33 = load i32, i32* @test_result, align 4, !dbg !8642
  switch i32 %33, label %34 [
    i32 5, label %38
    i32 2, label %38
  ], !dbg !8644

34:                                               ; preds = %32
  %35 = add i32 %33, -3, !dbg !8645
  %36 = icmp ult i32 %35, 2, !dbg !8645
  %37 = select i1 %36, i32 2, i32 0, !dbg !8645
  br label %38, !dbg !8645

38:                                               ; preds = %34, %32, %32
  %39 = phi i32 [ 1, %32 ], [ 1, %32 ], [ %37, %34 ], !dbg !8595
  call void @llvm.dbg.value(metadata i32 %39, metadata !8594, metadata !DIExpression()), !dbg !8595
  tail call fastcc void @cleanup_test() #24, !dbg !8647
  call void @llvm.dbg.value(metadata i32 %39, metadata !8594, metadata !DIExpression()), !dbg !8595
  %40 = tail call fastcc i32 @get_final_test_result(%struct.ztest_unit_test* noundef nonnull %1, i32 noundef %39) #24, !dbg !8650
  call void @llvm.dbg.value(metadata i32 %40, metadata !8594, metadata !DIExpression()), !dbg !8595
  %41 = tail call fastcc i8* @TC_RESULT_TO_STR(i32 noundef %40) #24, !dbg !8651
  %42 = load i8*, i8** %4, align 4, !dbg !8651
  %43 = load i32, i32* @tc_spend_time, align 4, !dbg !8651
  %44 = freeze i32 %43
  %45 = udiv i32 %44, 1000, !dbg !8651
  %46 = mul i32 %45, 1000
  %47 = sub i32 %44, %46
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.21.110, i32 0, i32 0), i8* noundef %41, i8* noundef %42, i32 noundef %45, i32 noundef %47) #25, !dbg !8651
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.89, i32 0, i32 0)) #25, !dbg !8651
  %48 = icmp eq i32 %40, 2, !dbg !8653
  br i1 %48, label %49, label %52, !dbg !8655

49:                                               ; preds = %38
  %50 = load i1, i1* @current_test_failed_assumption, align 1, !dbg !8656
  br i1 %50, label %51, label %52, !dbg !8657

51:                                               ; preds = %49
  store i32 1, i32* @test_status, align 4, !dbg !8658
  br label %52, !dbg !8660

52:                                               ; preds = %51, %49, %38
  ret i32 %40, !dbg !8661
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @get_start_time_cyc() unnamed_addr #1 !dbg !8662 {
  %1 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !8663
  store i32 %1, i32* @tc_start_time, align 4, !dbg !8664
  ret void, !dbg !8665
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_create(i8* noundef %0, i8* noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !8666 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !8685, metadata !DIExpression()), !dbg !8686
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8676, metadata !DIExpression()), !dbg !8686
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @ztest_thread_stack, i32 0, i32 0), metadata !8677, metadata !DIExpression()), !dbg !8686
  call void @llvm.dbg.value(metadata i32 1024, metadata !8678, metadata !DIExpression()), !dbg !8686
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* @test_cb, metadata !8679, metadata !DIExpression()), !dbg !8686
  call void @llvm.dbg.value(metadata i8* %0, metadata !8680, metadata !DIExpression()), !dbg !8686
  call void @llvm.dbg.value(metadata i8* %1, metadata !8681, metadata !DIExpression()), !dbg !8686
  call void @llvm.dbg.value(metadata i8* %2, metadata !8682, metadata !DIExpression()), !dbg !8686
  call void @llvm.dbg.value(metadata i32 -1, metadata !8683, metadata !DIExpression()), !dbg !8686
  call void @llvm.dbg.value(metadata i32 %3, metadata !8684, metadata !DIExpression()), !dbg !8686
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8687, !srcloc !8689
  %5 = tail call %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef nonnull @ztest_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @ztest_thread_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @test_cb, i8* noundef %0, i8* noundef %1, i8* noundef %2, i32 noundef -1, i32 noundef %3, [1 x i64] [i64 -1]) #25, !dbg !8690
  ret void, !dbg !8691
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_object_access_grant() unnamed_addr #1 !dbg !8692 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !8697, metadata !DIExpression()), !dbg !8699
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8698, metadata !DIExpression()), !dbg !8699
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8700, !srcloc !8702
  ret void, !dbg !8703
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_name_set(i8* noundef %0) unnamed_addr #1 !dbg !8704 {
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8708, metadata !DIExpression()), !dbg !8710
  call void @llvm.dbg.value(metadata i8* %0, metadata !8709, metadata !DIExpression()), !dbg !8710
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8711, !srcloc !8713
  %2 = tail call i32 @z_impl_k_thread_name_set(%struct.k_thread* noundef nonnull @ztest_thread, i8* noundef %0) #25, !dbg !8714
  ret void, !dbg !8715
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start() unnamed_addr #1 !dbg !8716 {
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8718, metadata !DIExpression()), !dbg !8719
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8720, !srcloc !8722
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef nonnull @ztest_thread) #25, !dbg !8723
  ret void, !dbg !8724
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_join() unnamed_addr #1 !dbg !8725 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !8730, metadata !DIExpression()), !dbg !8731
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8729, metadata !DIExpression()), !dbg !8731
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8732, !srcloc !8734
  %1 = tail call i32 @z_impl_k_thread_join(%struct.k_thread* noundef nonnull @ztest_thread, [1 x i64] [i64 -1]) #25, !dbg !8735
  ret void, !dbg !8736
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @run_test_rules(i1 noundef zeroext %0, %struct.ztest_unit_test* noundef %1, i8* noundef %2) unnamed_addr #1 !dbg !8737 {
  call void @llvm.dbg.value(metadata i1 %0, metadata !8741, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8757
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %1, metadata !8742, metadata !DIExpression()), !dbg !8757
  call void @llvm.dbg.value(metadata i8* %2, metadata !8743, metadata !DIExpression()), !dbg !8757
  call void @llvm.dbg.value(metadata %struct.ztest_test_rule* getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_start, i32 0, i32 0), metadata !8744, metadata !DIExpression()), !dbg !8758
  br i1 icmp ult (%struct.ztest_test_rule* getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_start, i32 0, i32 0), %struct.ztest_test_rule* getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_end, i32 0, i32 0)), label %5, label %4, !dbg !8759

4:                                                ; preds = %17, %3
  ret void, !dbg !8760

5:                                                ; preds = %3, %17
  %6 = phi %struct.ztest_test_rule* [ %18, %17 ], [ getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.ztest_test_rule* %6, metadata !8744, metadata !DIExpression()), !dbg !8758
  br i1 %0, label %7, label %11, !dbg !8761

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.ztest_test_rule, %struct.ztest_test_rule* %6, i32 0, i32 0, !dbg !8765
  %9 = load void (%struct.ztest_unit_test*, i8*)*, void (%struct.ztest_unit_test*, i8*)** %8, align 4, !dbg !8765
  %10 = icmp eq void (%struct.ztest_unit_test*, i8*)* %9, null, !dbg !8766
  br i1 %10, label %17, label %15, !dbg !8767

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct.ztest_test_rule, %struct.ztest_test_rule* %6, i32 0, i32 1, !dbg !8768
  %13 = load void (%struct.ztest_unit_test*, i8*)*, void (%struct.ztest_unit_test*, i8*)** %12, align 4, !dbg !8768
  %14 = icmp eq void (%struct.ztest_unit_test*, i8*)* %13, null, !dbg !8770
  br i1 %14, label %17, label %15, !dbg !8771

15:                                               ; preds = %11, %7
  %16 = phi void (%struct.ztest_unit_test*, i8*)* [ %9, %7 ], [ %13, %11 ]
  tail call void %16(%struct.ztest_unit_test* noundef %1, i8* noundef %2) #25, !dbg !8772
  br label %17, !dbg !8773

17:                                               ; preds = %15, %7, %11
  %18 = getelementptr inbounds %struct.ztest_test_rule, %struct.ztest_test_rule* %6, i32 1, !dbg !8773
  call void @llvm.dbg.value(metadata %struct.ztest_test_rule* %18, metadata !8744, metadata !DIExpression()), !dbg !8758
  %19 = icmp ult %struct.ztest_test_rule* %18, getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_end, i32 0, i32 0), !dbg !8774
  br i1 %19, label %5, label %4, !dbg !8759, !llvm.loop !8775
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @get_test_duration_ms() unnamed_addr #1 !dbg !8777 {
  %1 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !8780
  %2 = load i32, i32* @tc_start_time, align 4, !dbg !8781
  %3 = sub i32 %1, %2, !dbg !8782
  call void @llvm.dbg.value(metadata i32 %3, metadata !8779, metadata !DIExpression()), !dbg !8783
  %4 = tail call fastcc i32 @k_cyc_to_ms_ceil32(i32 noundef %3) #24, !dbg !8784
  store i32 %4, i32* @tc_spend_time, align 4, !dbg !8785
  ret void, !dbg !8786
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cleanup_test() unnamed_addr #1 !dbg !8787 {
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* undef, metadata !8791, metadata !DIExpression()), !dbg !8794
  call void @llvm.dbg.value(metadata i32 0, metadata !8792, metadata !DIExpression()), !dbg !8794
  call void @llvm.dbg.value(metadata i32 0, metadata !8793, metadata !DIExpression()), !dbg !8794
  tail call fastcc void @k_thread_abort.101(%struct.k_thread* noundef nonnull @ztest_thread) #24, !dbg !8795
  call void @llvm.dbg.value(metadata i32 0, metadata !8792, metadata !DIExpression()), !dbg !8794
  ret void, !dbg !8798
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_final_test_result(%struct.ztest_unit_test* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !8799 {
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %0, metadata !8803, metadata !DIExpression()), !dbg !8814
  call void @llvm.dbg.value(metadata i32 %1, metadata !8804, metadata !DIExpression()), !dbg !8814
  call void @llvm.dbg.value(metadata i32 -1, metadata !8805, metadata !DIExpression()), !dbg !8814
  call void @llvm.dbg.value(metadata %struct.ztest_expected_result_entry* getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_start, i32 0, i32 0), metadata !8806, metadata !DIExpression()), !dbg !8815
  br i1 icmp ult (%struct.ztest_expected_result_entry* getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_start, i32 0, i32 0), %struct.ztest_expected_result_entry* getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_end, i32 0, i32 0)), label %3, label %31, !dbg !8816

3:                                                ; preds = %2
  %4 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %0, i32 0, i32 1
  %5 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %0, i32 0, i32 0
  br label %6, !dbg !8816

6:                                                ; preds = %3, %19
  %7 = phi %struct.ztest_expected_result_entry* [ getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_start, i32 0, i32 0), %3 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct.ztest_expected_result_entry* %7, metadata !8806, metadata !DIExpression()), !dbg !8815
  %8 = getelementptr inbounds %struct.ztest_expected_result_entry, %struct.ztest_expected_result_entry* %7, i32 0, i32 1, !dbg !8817
  %9 = load i8*, i8** %8, align 4, !dbg !8817
  %10 = load i8*, i8** %4, align 4, !dbg !8821
  %11 = tail call i32 @strcmp(i8* noundef %9, i8* noundef %10) #25, !dbg !8822
  %12 = icmp eq i32 %11, 0, !dbg !8823
  br i1 %12, label %13, label %19, !dbg !8824

13:                                               ; preds = %6
  %14 = getelementptr inbounds %struct.ztest_expected_result_entry, %struct.ztest_expected_result_entry* %7, i32 0, i32 0, !dbg !8825
  %15 = load i8*, i8** %14, align 4, !dbg !8825
  %16 = load i8*, i8** %5, align 4, !dbg !8826
  %17 = tail call i32 @strcmp(i8* noundef %15, i8* noundef %16) #25, !dbg !8827
  %18 = icmp eq i32 %17, 0, !dbg !8828
  br i1 %18, label %22, label %19, !dbg !8829

19:                                               ; preds = %6, %13
  %20 = getelementptr inbounds %struct.ztest_expected_result_entry, %struct.ztest_expected_result_entry* %7, i32 1, !dbg !8830
  call void @llvm.dbg.value(metadata %struct.ztest_expected_result_entry* %20, metadata !8806, metadata !DIExpression()), !dbg !8815
  %21 = icmp ult %struct.ztest_expected_result_entry* %20, getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_end, i32 0, i32 0), !dbg !8831
  br i1 %21, label %6, label %31, !dbg !8816, !llvm.loop !8832

22:                                               ; preds = %13
  %23 = getelementptr inbounds %struct.ztest_expected_result_entry, %struct.ztest_expected_result_entry* %7, i32 0, i32 2, !dbg !8834
  %24 = load i32, i32* %23, align 4, !dbg !8834
  call void @llvm.dbg.value(metadata i32 %24, metadata !8805, metadata !DIExpression()), !dbg !8814
  switch i32 %24, label %31 [
    i32 0, label %25
    i32 1, label %28
  ], !dbg !8836

25:                                               ; preds = %22
  %26 = icmp ne i32 %1, 1, !dbg !8837
  %27 = zext i1 %26 to i32, !dbg !8840
  br label %31, !dbg !8841

28:                                               ; preds = %22
  %29 = icmp ne i32 %1, 2, !dbg !8842
  %30 = zext i1 %29 to i32, !dbg !8845
  br label %31, !dbg !8846

31:                                               ; preds = %19, %2, %22, %28, %25
  %32 = phi i32 [ %27, %25 ], [ %30, %28 ], [ %1, %22 ], [ %1, %2 ], [ %1, %19 ], !dbg !8814
  ret i32 %32, !dbg !8847
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @TC_RESULT_TO_STR(i32 noundef %0) unnamed_addr #4 !dbg !8848 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8852, metadata !DIExpression()), !dbg !8853
  %2 = icmp ult i32 %0, 3, !dbg !8854
  br i1 %2, label %3, label %6, !dbg !8854

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i8*], [3 x i8*]* @switch.table.TC_RESULT_TO_STR, i32 0, i32 %0, !dbg !8854
  %5 = load i8*, i8** %4, align 4, !dbg !8854
  br label %6, !dbg !8854

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27.111, i32 0, i32 0), %1 ], !dbg !8855
  ret i8* %7, !dbg !8857
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !8858 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #24, !dbg !8859
  ret i32 %1, !dbg !8860
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_cyc_to_ms_ceil32(i32 noundef %0) unnamed_addr #4 !dbg !8861 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8864, metadata !DIExpression()), !dbg !8865
  %2 = zext i32 %0 to i64, !dbg !8866
  call void @llvm.dbg.value(metadata i64 %2, metadata !8867, metadata !DIExpression()), !dbg !8884
  call void @llvm.dbg.value(metadata i32 168000000, metadata !8872, metadata !DIExpression()), !dbg !8884
  call void @llvm.dbg.value(metadata i32 1000, metadata !8873, metadata !DIExpression()), !dbg !8884
  call void @llvm.dbg.value(metadata i8 1, metadata !8874, metadata !DIExpression()), !dbg !8884
  call void @llvm.dbg.value(metadata i8 1, metadata !8875, metadata !DIExpression()), !dbg !8884
  call void @llvm.dbg.value(metadata i8 1, metadata !8876, metadata !DIExpression()), !dbg !8884
  call void @llvm.dbg.value(metadata i8 0, metadata !8877, metadata !DIExpression()), !dbg !8884
  call void @llvm.dbg.value(metadata i8 0, metadata !8878, metadata !DIExpression()), !dbg !8884
  call void @llvm.dbg.value(metadata i8 1, metadata !8879, metadata !DIExpression()), !dbg !8884
  call void @llvm.dbg.value(metadata i64 0, metadata !8880, metadata !DIExpression()), !dbg !8884
  call void @llvm.dbg.value(metadata i64 167999, metadata !8880, metadata !DIExpression()), !dbg !8884
  call void @llvm.dbg.value(metadata i64 167999, metadata !8880, metadata !DIExpression()), !dbg !8884
  call void @llvm.dbg.value(metadata i64 167999, metadata !8880, metadata !DIExpression()), !dbg !8884
  call void @llvm.dbg.value(metadata i64 167999, metadata !8880, metadata !DIExpression()), !dbg !8884
  %3 = add nuw nsw i64 %2, 167999, !dbg !8886
  call void @llvm.dbg.value(metadata i64 %3, metadata !8867, metadata !DIExpression()), !dbg !8884
  %4 = icmp ult i32 %0, -167999
  %5 = trunc i64 %3 to i32, !dbg !8889
  %6 = udiv i32 %5, 168000, !dbg !8889
  %7 = zext i32 %6 to i64, !dbg !8889
  %8 = udiv i64 %3, 168000, !dbg !8889
  %9 = select i1 %4, i64 %7, i64 %8, !dbg !8889
  %10 = trunc i64 %9 to i32, !dbg !8891
  ret i32 %10, !dbg !8892
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !8893 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !8895
  ret i32 %1, !dbg !8896
}

; Function Attrs: noinline nounwind optsize
define internal void @test_cb(i8* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2) #1 !dbg !8897 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8899, metadata !DIExpression()), !dbg !8904
  call void @llvm.dbg.value(metadata i8* %1, metadata !8900, metadata !DIExpression()), !dbg !8904
  call void @llvm.dbg.value(metadata i8* %2, metadata !8901, metadata !DIExpression()), !dbg !8904
  call void @llvm.dbg.value(metadata i8* %0, metadata !8902, metadata !DIExpression()), !dbg !8904
  %4 = bitcast i8* %1 to %struct.ztest_unit_test*, !dbg !8905
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %4, metadata !8903, metadata !DIExpression()), !dbg !8904
  store i32 0, i32* @test_result, align 4, !dbg !8906
  tail call fastcc void @run_test_rules(i1 noundef zeroext true, %struct.ztest_unit_test* noundef %4, i8* noundef %2) #24, !dbg !8907
  %5 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !8908
  %6 = bitcast i8* %5 to void (i8*)**, !dbg !8908
  %7 = load void (i8*)*, void (i8*)** %6, align 4, !dbg !8908
  %8 = icmp eq void (i8*)* %7, null, !dbg !8910
  br i1 %8, label %10, label %9, !dbg !8911

9:                                                ; preds = %3
  tail call void %7(i8* noundef %2) #25, !dbg !8912
  br label %10, !dbg !8914

10:                                               ; preds = %9, %3
  tail call fastcc void @run_test_functions(%struct.ztest_unit_test* noundef %4, i8* noundef %2) #24, !dbg !8915
  store i32 1, i32* @test_result, align 4, !dbg !8916
  ret void, !dbg !8917
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @run_test_functions(%struct.ztest_unit_test* nocapture noundef readonly %0, i8* noundef %1) unnamed_addr #1 !dbg !8918 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* undef, metadata !8922, metadata !DIExpression()), !dbg !8925
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %0, metadata !8923, metadata !DIExpression()), !dbg !8925
  call void @llvm.dbg.value(metadata i8* %1, metadata !8924, metadata !DIExpression()), !dbg !8925
  store i32 2, i32* @phase, align 4, !dbg !8926
  %3 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %0, i32 0, i32 2, !dbg !8927
  %4 = load void (i8*)*, void (i8*)** %3, align 4, !dbg !8927
  tail call void %4(i8* noundef %1) #25, !dbg !8928
  ret void, !dbg !8929
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_ztest_run_test_suites(i8* noundef %0) local_unnamed_addr #1 !dbg !8930 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8934, metadata !DIExpression()), !dbg !8938
  call void @llvm.dbg.value(metadata i32 0, metadata !8935, metadata !DIExpression()), !dbg !8938
  %2 = load i32, i32* @test_status, align 4, !dbg !8939
  %3 = icmp eq i32 %2, 2, !dbg !8941
  br i1 %3, label %17, label %4, !dbg !8942

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), metadata !8936, metadata !DIExpression()), !dbg !8943
  call void @llvm.dbg.value(metadata i32 0, metadata !8935, metadata !DIExpression()), !dbg !8938
  br i1 icmp ult (%struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)), label %5, label %15, !dbg !8944

5:                                                ; preds = %4, %5
  %6 = phi %struct.ztest_suite_node* [ %12, %5 ], [ getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %4 ]
  %7 = phi i32 [ %9, %5 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %6, metadata !8936, metadata !DIExpression()), !dbg !8943
  call void @llvm.dbg.value(metadata i32 %7, metadata !8935, metadata !DIExpression()), !dbg !8938
  %8 = tail call fastcc i32 @__ztest_run_test_suite(%struct.ztest_suite_node* noundef nonnull %6, i8* noundef %0) #24, !dbg !8945
  %9 = add nsw i32 %8, %7, !dbg !8948
  call void @llvm.dbg.value(metadata i32 %9, metadata !8935, metadata !DIExpression()), !dbg !8938
  %10 = load i32, i32* @test_status, align 4, !dbg !8949
  %11 = icmp ne i32 %10, 2, !dbg !8951
  %12 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %6, i32 1, !dbg !8952
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %12, metadata !8936, metadata !DIExpression()), !dbg !8943
  %13 = icmp ult %struct.ztest_suite_node* %12, getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)
  %14 = select i1 %11, i1 %13, i1 false, !dbg !8953
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %12, metadata !8936, metadata !DIExpression()), !dbg !8943
  call void @llvm.dbg.value(metadata i32 %9, metadata !8935, metadata !DIExpression()), !dbg !8938
  br i1 %14, label %5, label %15, !dbg !8953, !llvm.loop !8954

15:                                               ; preds = %5, %4
  %16 = phi i32 [ 0, %4 ], [ %9, %5 ], !dbg !8938
  call void @llvm.dbg.value(metadata i32 %16, metadata !8935, metadata !DIExpression()), !dbg !8938
  tail call fastcc void @__ztest_show_suite_summary() #24, !dbg !8956
  br label %17, !dbg !8957

17:                                               ; preds = %1, %15
  %18 = phi i32 [ %16, %15 ], [ 0, %1 ], !dbg !8938
  ret i32 %18, !dbg !8958
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @__ztest_run_test_suite(%struct.ztest_suite_node* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !8959 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8963, metadata !DIExpression()), !dbg !8974
  call void @llvm.dbg.value(metadata i8* %1, metadata !8964, metadata !DIExpression()), !dbg !8974
  %3 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 6, !dbg !8975
  %4 = load %struct.ztest_suite_stats*, %struct.ztest_suite_stats** %3, align 4, !dbg !8975
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %4, metadata !8965, metadata !DIExpression()), !dbg !8974
  call void @llvm.dbg.value(metadata i32 0, metadata !8966, metadata !DIExpression()), !dbg !8974
  tail call fastcc void @__ztest_init_unit_test_result_for_suite(%struct.ztest_suite_node* noundef %0) #24, !dbg !8976
  call void @llvm.dbg.value(metadata i32 0, metadata !8967, metadata !DIExpression()), !dbg !8977
  call void @llvm.dbg.value(metadata i32 0, metadata !8966, metadata !DIExpression()), !dbg !8974
  call void @llvm.dbg.value(metadata i32 undef, metadata !8967, metadata !DIExpression()), !dbg !8977
  %5 = load i1 (i8*, %struct.ztest_suite_node*)*, i1 (i8*, %struct.ztest_suite_node*)** getelementptr inbounds (%struct.ztest_arch_api, %struct.ztest_arch_api* @ztest_api, i32 0, i32 1), align 4
  %6 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %4, i32 0, i32 1
  %7 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %4, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 0, metadata !8966, metadata !DIExpression()), !dbg !8974
  %8 = tail call zeroext i1 %5(i8* noundef %1, %struct.ztest_suite_node* noundef %0) #25, !dbg !8978
  br i1 %8, label %9, label %16, !dbg !8979

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %4, i32 0, i32 2
  %11 = tail call fastcc i32 @z_ztest_run_test_suite_ptr(%struct.ztest_suite_node* noundef nonnull %0) #24, !dbg !8980
  call void @llvm.dbg.value(metadata i32 %11, metadata !8969, metadata !DIExpression()), !dbg !8981
  call void @llvm.dbg.value(metadata i32 1, metadata !8966, metadata !DIExpression()), !dbg !8974
  %12 = load i32, i32* %7, align 4, !dbg !8982
  %13 = add i32 %12, 1, !dbg !8982
  store i32 %13, i32* %7, align 4, !dbg !8982
  %14 = icmp ne i32 %11, 0, !dbg !8983
  %15 = zext i1 %14 to i32, !dbg !8984
  br label %16, !dbg !8985

16:                                               ; preds = %2, %9
  %17 = phi i32* [ %10, %9 ], [ %6, %2 ]
  %18 = phi i32 [ %15, %9 ], [ 1, %2 ]
  %19 = phi i32 [ 1, %9 ], [ 0, %2 ], !dbg !8974
  %20 = load i32, i32* %17, align 4, !dbg !8986
  %21 = add i32 %20, %18, !dbg !8986
  store i32 %21, i32* %17, align 4, !dbg !8986
  call void @llvm.dbg.value(metadata i32 %19, metadata !8966, metadata !DIExpression()), !dbg !8974
  call void @llvm.dbg.value(metadata i32 undef, metadata !8967, metadata !DIExpression()), !dbg !8977
  ret i32 %19, !dbg !8987
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__ztest_show_suite_summary() unnamed_addr #1 !dbg !8988 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.28.115, i32 0, i32 0)) #25, !dbg !8992
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), metadata !8990, metadata !DIExpression()), !dbg !8993
  br i1 icmp ult (%struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)), label %2, label %1, !dbg !8994

1:                                                ; preds = %2, %0
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.29.116, i32 0, i32 0)) #25, !dbg !8995
  ret void, !dbg !8996

2:                                                ; preds = %0, %2
  %3 = phi %struct.ztest_suite_node* [ %4, %2 ], [ getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %3, metadata !8990, metadata !DIExpression()), !dbg !8993
  tail call fastcc void @__ztest_show_suite_summary_verbose(%struct.ztest_suite_node* noundef nonnull %3) #24, !dbg !8997
  %4 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %3, i32 1, !dbg !9000
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %4, metadata !8990, metadata !DIExpression()), !dbg !8993
  %5 = icmp ult %struct.ztest_suite_node* %4, getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0), !dbg !9001
  br i1 %5, label %2, label %1, !dbg !8994, !llvm.loop !9002
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__ztest_show_suite_summary_verbose(%struct.ztest_suite_node* nocapture noundef readonly %0) unnamed_addr #1 !dbg !9004 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !9008, metadata !DIExpression()), !dbg !9012
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !9009, metadata !DIExpression()), !dbg !9012
  call void @llvm.dbg.value(metadata i32 0, metadata !9010, metadata !DIExpression()), !dbg !9012
  call void @llvm.dbg.value(metadata i32 0, metadata !9011, metadata !DIExpression()), !dbg !9012
  tail call fastcc void @__ztest_show_suite_summary_oneline(%struct.ztest_suite_node* noundef %0) #24, !dbg !9013
  %2 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 poison, metadata !9011, metadata !DIExpression()), !dbg !9012
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !9009, metadata !DIExpression()), !dbg !9012
  %3 = load i8*, i8** %2, align 4, !dbg !9014
  %4 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %3, %struct.ztest_unit_test* noundef null) #24, !dbg !9015
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %4, metadata !9009, metadata !DIExpression()), !dbg !9012
  %5 = icmp eq %struct.ztest_unit_test* %4, null, !dbg !9016
  br i1 %5, label %36, label %6, !dbg !9017

6:                                                ; preds = %1, %20
  %7 = phi %struct.ztest_unit_test* [ %34, %20 ], [ %4, %1 ]
  %8 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 4, !dbg !9018
  %9 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !9018
  %10 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 1, !dbg !9021
  %11 = load i32, i32* %10, align 4, !dbg !9021
  %12 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 0, !dbg !9022
  %13 = load i32, i32* %12, align 4, !dbg !9022
  %14 = icmp eq i32 %11, %13, !dbg !9023
  br i1 %14, label %20, label %15, !dbg !9024

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 3, !dbg !9025
  %17 = load i32, i32* %16, align 4, !dbg !9025
  %18 = icmp ne i32 %17, %13, !dbg !9027
  %19 = zext i1 %18 to i32
  br label %20

20:                                               ; preds = %15, %6
  %21 = phi i32 [ 2, %6 ], [ %19, %15 ], !dbg !9028
  call void @llvm.dbg.value(metadata i32 %21, metadata !9010, metadata !DIExpression()), !dbg !9012
  %22 = tail call fastcc i8* @TC_RESULT_TO_STR(i32 noundef %21) #24, !dbg !9029
  %23 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 0, !dbg !9029
  %24 = load i8*, i8** %23, align 4, !dbg !9029
  %25 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 1, !dbg !9029
  %26 = load i8*, i8** %25, align 4, !dbg !9029
  %27 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 4, !dbg !9029
  %28 = load i32, i32* %27, align 4, !dbg !9029
  %29 = freeze i32 %28
  %30 = udiv i32 %29, 1000, !dbg !9029
  %31 = mul i32 %30, 1000
  %32 = sub i32 %29, %31
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.117, i32 0, i32 0), i8* noundef %22, i8* noundef %24, i8* noundef %26, i32 noundef %30, i32 noundef %32) #25, !dbg !9029
  call void @llvm.dbg.value(metadata i32 poison, metadata !9011, metadata !DIExpression()), !dbg !9012
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %7, metadata !9009, metadata !DIExpression()), !dbg !9012
  %33 = load i8*, i8** %2, align 4, !dbg !9014
  %34 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %33, %struct.ztest_unit_test* noundef nonnull %7) #24, !dbg !9015
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %34, metadata !9009, metadata !DIExpression()), !dbg !9012
  %35 = icmp eq %struct.ztest_unit_test* %34, null, !dbg !9016
  br i1 %35, label %36, label %6, !dbg !9017, !llvm.loop !9030

36:                                               ; preds = %20, %1
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31.118, i32 0, i32 0)) #25, !dbg !9032
  ret void, !dbg !9033
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__ztest_show_suite_summary_oneline(%struct.ztest_suite_node* nocapture noundef readonly %0) unnamed_addr #1 !dbg !9034 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !9036, metadata !DIExpression()), !dbg !9050
  call void @llvm.dbg.value(metadata i32 0, metadata !9037, metadata !DIExpression()), !dbg !9050
  call void @llvm.dbg.value(metadata i32 0, metadata !9038, metadata !DIExpression()), !dbg !9050
  call void @llvm.dbg.value(metadata i32 0, metadata !9039, metadata !DIExpression()), !dbg !9050
  call void @llvm.dbg.value(metadata i32 0, metadata !9040, metadata !DIExpression()), !dbg !9050
  call void @llvm.dbg.value(metadata i32 0, metadata !9041, metadata !DIExpression()), !dbg !9050
  call void @llvm.dbg.value(metadata i32 0, metadata !9042, metadata !DIExpression()), !dbg !9050
  call void @llvm.dbg.value(metadata i32 0, metadata !9043, metadata !DIExpression()), !dbg !9050
  call void @llvm.dbg.value(metadata i32 0, metadata !9044, metadata !DIExpression()), !dbg !9050
  call void @llvm.dbg.value(metadata i32 0, metadata !9045, metadata !DIExpression()), !dbg !9050
  call void @llvm.dbg.value(metadata i32 0, metadata !9046, metadata !DIExpression()), !dbg !9050
  call void @llvm.dbg.value(metadata i32 0, metadata !9047, metadata !DIExpression()), !dbg !9050
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !9048, metadata !DIExpression()), !dbg !9050
  call void @llvm.dbg.value(metadata i32 0, metadata !9049, metadata !DIExpression()), !dbg !9050
  %2 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 0, metadata !9049, metadata !DIExpression()), !dbg !9050
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !9048, metadata !DIExpression()), !dbg !9050
  call void @llvm.dbg.value(metadata i32 0, metadata !9040, metadata !DIExpression()), !dbg !9050
  call void @llvm.dbg.value(metadata i32 0, metadata !9039, metadata !DIExpression()), !dbg !9050
  call void @llvm.dbg.value(metadata i32 0, metadata !9038, metadata !DIExpression()), !dbg !9050
  call void @llvm.dbg.value(metadata i32 0, metadata !9037, metadata !DIExpression()), !dbg !9050
  %3 = load i8*, i8** %2, align 4, !dbg !9051
  %4 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %3, %struct.ztest_unit_test* noundef null) #24, !dbg !9052
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %4, metadata !9048, metadata !DIExpression()), !dbg !9050
  %5 = icmp eq %struct.ztest_unit_test* %4, null, !dbg !9053
  br i1 %5, label %58, label %6, !dbg !9054

6:                                                ; preds = %1, %34
  %7 = phi %struct.ztest_unit_test* [ %39, %34 ], [ %4, %1 ]
  %8 = phi i32 [ %18, %34 ], [ 0, %1 ]
  %9 = phi i32 [ %13, %34 ], [ 0, %1 ]
  %10 = phi i32 [ %37, %34 ], [ 0, %1 ]
  %11 = phi i32 [ %36, %34 ], [ 0, %1 ]
  %12 = phi i32 [ %35, %34 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !9049, metadata !DIExpression()), !dbg !9050
  call void @llvm.dbg.value(metadata i32 %9, metadata !9040, metadata !DIExpression()), !dbg !9050
  call void @llvm.dbg.value(metadata i32 %10, metadata !9039, metadata !DIExpression()), !dbg !9050
  call void @llvm.dbg.value(metadata i32 %11, metadata !9038, metadata !DIExpression()), !dbg !9050
  call void @llvm.dbg.value(metadata i32 %12, metadata !9037, metadata !DIExpression()), !dbg !9050
  %13 = add nuw nsw i32 %9, 1, !dbg !9055
  call void @llvm.dbg.value(metadata i32 %13, metadata !9040, metadata !DIExpression()), !dbg !9050
  %14 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 4, !dbg !9057
  %15 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %14, align 4, !dbg !9057
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 4, !dbg !9058
  %17 = load i32, i32* %16, align 4, !dbg !9058
  %18 = add i32 %17, %8, !dbg !9059
  call void @llvm.dbg.value(metadata i32 %18, metadata !9049, metadata !DIExpression()), !dbg !9050
  %19 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 1, !dbg !9060
  %20 = load i32, i32* %19, align 4, !dbg !9060
  %21 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 0, !dbg !9062
  %22 = load i32, i32* %21, align 4, !dbg !9062
  %23 = icmp eq i32 %20, %22, !dbg !9063
  br i1 %23, label %24, label %26, !dbg !9064

24:                                               ; preds = %6
  %25 = add nsw i32 %10, 1, !dbg !9065
  call void @llvm.dbg.value(metadata i32 %25, metadata !9039, metadata !DIExpression()), !dbg !9050
  br label %34, !dbg !9067

26:                                               ; preds = %6
  %27 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 3, !dbg !9068
  %28 = load i32, i32* %27, align 4, !dbg !9068
  %29 = icmp eq i32 %28, %22, !dbg !9070
  br i1 %29, label %30, label %32, !dbg !9071

30:                                               ; preds = %26
  %31 = add nsw i32 %12, 1, !dbg !9072
  call void @llvm.dbg.value(metadata i32 %31, metadata !9037, metadata !DIExpression()), !dbg !9050
  br label %34, !dbg !9074

32:                                               ; preds = %26
  %33 = add nsw i32 %11, 1, !dbg !9075
  call void @llvm.dbg.value(metadata i32 %33, metadata !9038, metadata !DIExpression()), !dbg !9050
  br label %34

34:                                               ; preds = %30, %32, %24
  %35 = phi i32 [ %12, %24 ], [ %31, %30 ], [ %12, %32 ], !dbg !9050
  %36 = phi i32 [ %11, %24 ], [ %11, %30 ], [ %33, %32 ], !dbg !9050
  %37 = phi i32 [ %25, %24 ], [ %10, %30 ], [ %10, %32 ], !dbg !9050
  call void @llvm.dbg.value(metadata i32 %18, metadata !9049, metadata !DIExpression()), !dbg !9050
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %7, metadata !9048, metadata !DIExpression()), !dbg !9050
  call void @llvm.dbg.value(metadata i32 %13, metadata !9040, metadata !DIExpression()), !dbg !9050
  call void @llvm.dbg.value(metadata i32 %37, metadata !9039, metadata !DIExpression()), !dbg !9050
  call void @llvm.dbg.value(metadata i32 %36, metadata !9038, metadata !DIExpression()), !dbg !9050
  call void @llvm.dbg.value(metadata i32 %35, metadata !9037, metadata !DIExpression()), !dbg !9050
  %38 = load i8*, i8** %2, align 4, !dbg !9051
  %39 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %38, %struct.ztest_unit_test* noundef nonnull %7) #24, !dbg !9052
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %39, metadata !9048, metadata !DIExpression()), !dbg !9050
  %40 = icmp eq %struct.ztest_unit_test* %39, null, !dbg !9053
  br i1 %40, label %41, label %6, !dbg !9054, !llvm.loop !9077

41:                                               ; preds = %34
  %42 = icmp eq i32 %13, %37, !dbg !9079
  br i1 %42, label %58, label %43, !dbg !9081

43:                                               ; preds = %41
  %44 = icmp sgt i32 %36, 0, !dbg !9082
  %45 = zext i1 %44 to i32, !dbg !9084
  call void @llvm.dbg.value(metadata i32 %45, metadata !9047, metadata !DIExpression()), !dbg !9050
  %46 = sub nsw i32 %13, %37, !dbg !9085
  call void @llvm.dbg.value(metadata i32 %46, metadata !9041, metadata !DIExpression()), !dbg !9050
  %47 = mul nsw i32 %35, 100000, !dbg !9086
  call void @llvm.dbg.value(metadata i32 %47, metadata !9042, metadata !DIExpression()), !dbg !9050
  %48 = sdiv i32 %47, %46, !dbg !9087
  call void @llvm.dbg.value(metadata i32 %48, metadata !9043, metadata !DIExpression()), !dbg !9050
  %49 = sdiv i32 %48, 1000, !dbg !9088
  call void @llvm.dbg.value(metadata i32 %49, metadata !9044, metadata !DIExpression()), !dbg !9050
  %50 = mul nsw i32 %49, -1000, !dbg !9089
  %51 = add i32 %50, %48, !dbg !9090
  %52 = sdiv i32 %51, 10, !dbg !9091
  call void @llvm.dbg.value(metadata i32 %52, metadata !9045, metadata !DIExpression()), !dbg !9050
  %53 = mul nsw i32 %52, -10, !dbg !9092
  %54 = add i32 %53, %51, !dbg !9093
  call void @llvm.dbg.value(metadata i32 %54, metadata !9046, metadata !DIExpression()), !dbg !9050
  %55 = icmp sgt i32 %54, 4, !dbg !9094
  %56 = zext i1 %55 to i32, !dbg !9096
  %57 = add nsw i32 %52, %56, !dbg !9096
  br label %58, !dbg !9096

58:                                               ; preds = %1, %43, %41
  %59 = phi i32 [ %18, %41 ], [ %18, %43 ], [ 0, %1 ]
  %60 = phi i32 [ %13, %41 ], [ %13, %43 ], [ 0, %1 ]
  %61 = phi i32 [ %37, %41 ], [ %37, %43 ], [ 0, %1 ]
  %62 = phi i32 [ %36, %41 ], [ %36, %43 ], [ 0, %1 ]
  %63 = phi i32 [ %35, %41 ], [ %35, %43 ], [ 0, %1 ]
  %64 = phi i32 [ 0, %41 ], [ %49, %43 ], [ 0, %1 ], !dbg !9097
  %65 = phi i32 [ 0, %41 ], [ %57, %43 ], [ 0, %1 ], !dbg !9097
  %66 = phi i32 [ 2, %41 ], [ %45, %43 ], [ 2, %1 ], !dbg !9097
  call void @llvm.dbg.value(metadata i32 %66, metadata !9047, metadata !DIExpression()), !dbg !9050
  call void @llvm.dbg.value(metadata i32 %65, metadata !9045, metadata !DIExpression()), !dbg !9050
  call void @llvm.dbg.value(metadata i32 %64, metadata !9044, metadata !DIExpression()), !dbg !9050
  %67 = tail call fastcc i8* @TC_RESULT_TO_STR(i32 noundef %66) #24, !dbg !9098
  %68 = load i8*, i8** %2, align 4, !dbg !9098
  %69 = freeze i32 %59
  %70 = udiv i32 %69, 1000, !dbg !9098
  %71 = mul i32 %70, 1000
  %72 = sub i32 %69, %71
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([100 x i8], [100 x i8]* @.str.32.119, i32 0, i32 0), i8* noundef %67, i32 noundef %64, i32 noundef %65, i8* noundef %68, i32 noundef %63, i32 noundef %62, i32 noundef %61, i32 noundef %60, i32 noundef %70, i32 noundef %72) #25, !dbg !9098
  ret void, !dbg !9099
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__ztest_init_unit_test_result_for_suite(%struct.ztest_suite_node* nocapture noundef readonly %0) unnamed_addr #1 !dbg !9100 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !9102, metadata !DIExpression()), !dbg !9104
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !9103, metadata !DIExpression()), !dbg !9104
  %2 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !9103, metadata !DIExpression()), !dbg !9104
  %3 = load i8*, i8** %2, align 4, !dbg !9105
  %4 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %3, %struct.ztest_unit_test* noundef null) #24, !dbg !9106
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %4, metadata !9103, metadata !DIExpression()), !dbg !9104
  %5 = icmp eq %struct.ztest_unit_test* %4, null, !dbg !9107
  br i1 %5, label %22, label %6, !dbg !9108

6:                                                ; preds = %1, %6
  %7 = phi %struct.ztest_unit_test* [ %20, %6 ], [ %4, %1 ]
  %8 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 4, !dbg !9109
  %9 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !9109
  %10 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 0, !dbg !9111
  store i32 0, i32* %10, align 4, !dbg !9112
  %11 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !9113
  %12 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %11, i32 0, i32 1, !dbg !9114
  store i32 0, i32* %12, align 4, !dbg !9115
  %13 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !9116
  %14 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %13, i32 0, i32 2, !dbg !9117
  store i32 0, i32* %14, align 4, !dbg !9118
  %15 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !9119
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 3, !dbg !9120
  store i32 0, i32* %16, align 4, !dbg !9121
  %17 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !9122
  %18 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %17, i32 0, i32 4, !dbg !9123
  store i32 0, i32* %18, align 4, !dbg !9124
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %7, metadata !9103, metadata !DIExpression()), !dbg !9104
  %19 = load i8*, i8** %2, align 4, !dbg !9105
  %20 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %19, %struct.ztest_unit_test* noundef nonnull %7) #24, !dbg !9106
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %20, metadata !9103, metadata !DIExpression()), !dbg !9104
  %21 = icmp eq %struct.ztest_unit_test* %20, null, !dbg !9107
  br i1 %21, label %22, label %6, !dbg !9108, !llvm.loop !9125

22:                                               ; preds = %6, %1
  ret void, !dbg !9127
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_verify_all_test_suites_ran() local_unnamed_addr #1 !dbg !9128 {
  call void @llvm.dbg.value(metadata i8 1, metadata !9130, metadata !DIExpression()), !dbg !9133
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), metadata !9131, metadata !DIExpression()), !dbg !9133
  call void @llvm.dbg.value(metadata i8 poison, metadata !9130, metadata !DIExpression()), !dbg !9133
  br i1 icmp ult (%struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)), label %3, label %1, !dbg !9134

1:                                                ; preds = %14, %0
  %2 = phi i1 [ true, %0 ], [ %15, %14 ]
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), metadata !9132, metadata !DIExpression()), !dbg !9133
  call void @llvm.dbg.value(metadata i8 poison, metadata !9130, metadata !DIExpression()), !dbg !9133
  br i1 icmp ult (%struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0)), label %18, label %33, !dbg !9138

3:                                                ; preds = %0, %14
  %4 = phi %struct.ztest_suite_node* [ %16, %14 ], [ getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %0 ]
  %5 = phi i1 [ %15, %14 ], [ true, %0 ]
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %4, metadata !9131, metadata !DIExpression()), !dbg !9133
  %6 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %4, i32 0, i32 6, !dbg !9140
  %7 = load %struct.ztest_suite_stats*, %struct.ztest_suite_stats** %6, align 4, !dbg !9140
  %8 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %7, i32 0, i32 0, !dbg !9144
  %9 = load i32, i32* %8, align 4, !dbg !9144
  %10 = icmp eq i32 %9, 0, !dbg !9145
  br i1 %10, label %11, label %14, !dbg !9146

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %4, i32 0, i32 0, !dbg !9147
  %13 = load i8*, i8** %12, align 4, !dbg !9147
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.7.120, i32 0, i32 0), i8* noundef %13) #25, !dbg !9149
  call void @llvm.dbg.value(metadata i8 0, metadata !9130, metadata !DIExpression()), !dbg !9133
  br label %14, !dbg !9150

14:                                               ; preds = %3, %11
  %15 = phi i1 [ false, %11 ], [ %5, %3 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !9130, metadata !DIExpression()), !dbg !9133
  %16 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %4, i32 1, !dbg !9151
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %16, metadata !9131, metadata !DIExpression()), !dbg !9133
  %17 = icmp ult %struct.ztest_suite_node* %16, getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0), !dbg !9152
  br i1 %17, label %3, label %1, !dbg !9134, !llvm.loop !9153

18:                                               ; preds = %1, %29
  %19 = phi %struct.ztest_unit_test* [ %31, %29 ], [ getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %1 ]
  %20 = phi i1 [ %30, %29 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %19, metadata !9132, metadata !DIExpression()), !dbg !9133
  %21 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 0, i32 0, !dbg !9155
  %22 = load i8*, i8** %21, align 4, !dbg !9155
  %23 = tail call fastcc %struct.ztest_suite_node* @ztest_find_test_suite(i8* noundef %22) #24, !dbg !9158
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %23, metadata !9131, metadata !DIExpression()), !dbg !9133
  %24 = icmp eq %struct.ztest_suite_node* %23, null, !dbg !9159
  br i1 %24, label %25, label %29, !dbg !9161

25:                                               ; preds = %18
  %26 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 0, i32 1, !dbg !9162
  %27 = load i8*, i8** %26, align 4, !dbg !9162
  %28 = load i8*, i8** %21, align 4, !dbg !9164
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.8.121, i32 0, i32 0), i8* noundef %27, i8* noundef %28) #25, !dbg !9165
  call void @llvm.dbg.value(metadata i8 0, metadata !9130, metadata !DIExpression()), !dbg !9133
  br label %29, !dbg !9166

29:                                               ; preds = %18, %25
  %30 = phi i1 [ false, %25 ], [ %20, %18 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !9130, metadata !DIExpression()), !dbg !9133
  %31 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 1, !dbg !9167
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %31, metadata !9132, metadata !DIExpression()), !dbg !9133
  %32 = icmp ult %struct.ztest_unit_test* %31, getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0), !dbg !9168
  br i1 %32, label %18, label %33, !dbg !9138, !llvm.loop !9169

33:                                               ; preds = %29, %1
  %34 = phi i1 [ %2, %1 ], [ %30, %29 ]
  br i1 %34, label %36, label %35, !dbg !9171

35:                                               ; preds = %33
  store i32 1, i32* @test_status, align 4, !dbg !9172
  br label %36, !dbg !9175

36:                                               ; preds = %35, %33
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), metadata !9132, metadata !DIExpression()), !dbg !9133
  br i1 icmp ult (%struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0)), label %37, label %60, !dbg !9176

37:                                               ; preds = %36, %57
  %38 = phi %struct.ztest_unit_test* [ %58, %57 ], [ getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %36 ]
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %38, metadata !9132, metadata !DIExpression()), !dbg !9133
  %39 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %38, i32 0, i32 4, !dbg !9178
  %40 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %39, align 4, !dbg !9178
  %41 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 2, !dbg !9182
  %42 = load i32, i32* %41, align 4, !dbg !9182
  %43 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 3, !dbg !9183
  %44 = load i32, i32* %43, align 4, !dbg !9183
  %45 = add i32 %44, %42, !dbg !9184
  %46 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 1, !dbg !9185
  %47 = load i32, i32* %46, align 4, !dbg !9185
  %48 = add i32 %45, %47, !dbg !9186
  %49 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 0, !dbg !9187
  %50 = load i32, i32* %49, align 4, !dbg !9187
  %51 = icmp eq i32 %48, %50, !dbg !9188
  br i1 %51, label %57, label %52, !dbg !9189

52:                                               ; preds = %37
  %53 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %38, i32 0, i32 0, !dbg !9190
  %54 = load i8*, i8** %53, align 4, !dbg !9190
  %55 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %38, i32 0, i32 1, !dbg !9192
  %56 = load i8*, i8** %55, align 4, !dbg !9192
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.122, i32 0, i32 0), i8* noundef %54, i8* noundef %56) #25, !dbg !9193
  store i32 1, i32* @test_status, align 4, !dbg !9194
  br label %57, !dbg !9195

57:                                               ; preds = %37, %52
  %58 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %38, i32 1, !dbg !9196
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %58, metadata !9132, metadata !DIExpression()), !dbg !9133
  %59 = icmp ult %struct.ztest_unit_test* %58, getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0), !dbg !9197
  br i1 %59, label %37, label %60, !dbg !9176, !llvm.loop !9198

60:                                               ; preds = %57, %36
  ret void, !dbg !9200
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_run_all(i8* noundef %0) local_unnamed_addr #1 !dbg !9201 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9203, metadata !DIExpression()), !dbg !9204
  %2 = load void (i8*)*, void (i8*)** getelementptr inbounds (%struct.ztest_arch_api, %struct.ztest_arch_api* @ztest_api, i32 0, i32 0), align 4, !dbg !9205
  tail call void %2(i8* noundef %0) #25, !dbg !9206
  ret void, !dbg !9207
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @test_main() local_unnamed_addr #1 !dbg !9208 {
  tail call void @ztest_run_all(i8* noundef null) #24, !dbg !9209
  tail call void @ztest_verify_all_test_suites_ran() #24, !dbg !9210
  ret void, !dbg !9211
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !9212 {
  tail call void @test_main() #24, !dbg !9213
  tail call void @end_report() #24, !dbg !9214
  ret void, !dbg !9215
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ztest_run_all(i8* noundef %0) #1 !dbg !9216 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9218, metadata !DIExpression()), !dbg !9219
  tail call fastcc void @ztest_run_test_suites(i8* noundef %0) #24, !dbg !9220
  ret void, !dbg !9221
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_ztest_should_suite_run(i8* noundef %0, %struct.ztest_suite_node* nocapture noundef readonly %1) #1 !dbg !9222 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9224, metadata !DIExpression()), !dbg !9227
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %1, metadata !9225, metadata !DIExpression()), !dbg !9227
  call void @llvm.dbg.value(metadata i8 1, metadata !9226, metadata !DIExpression()), !dbg !9227
  %3 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %1, i32 0, i32 5, !dbg !9228
  %4 = load i1 (i8*)*, i1 (i8*)** %3, align 4, !dbg !9228
  %5 = icmp eq i1 (i8*)* %4, null, !dbg !9230
  br i1 %5, label %8, label %6, !dbg !9231

6:                                                ; preds = %2
  %7 = tail call zeroext i1 %4(i8* noundef %0) #25, !dbg !9232
  call void @llvm.dbg.value(metadata i1 %7, metadata !9226, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9227
  br label %8, !dbg !9234

8:                                                ; preds = %6, %2
  %9 = phi i1 [ %7, %6 ], [ true, %2 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !9226, metadata !DIExpression()), !dbg !9227
  ret i1 %9, !dbg !9235
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i1 @z_ztest_should_test_run(i8* nocapture readnone %0, i8* nocapture readnone %1) #4 !dbg !9236 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !9238, metadata !DIExpression()), !dbg !9240
  call void @llvm.dbg.value(metadata i8* undef, metadata !9239, metadata !DIExpression()), !dbg !9240
  ret i1 true, !dbg !9241
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ztest_run_test_suites(i8* noundef %0) unnamed_addr #1 !dbg !9242 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9245, metadata !DIExpression()), !dbg !9246
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9247, !srcloc !9249
  %2 = tail call i32 @z_impl_ztest_run_test_suites(i8* noundef %0) #25, !dbg !9250
  ret void, !dbg !9251
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i8* @ztest_relative_filename(i8* noundef readnone returned %0) local_unnamed_addr #4 !dbg !9252 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9256, metadata !DIExpression()), !dbg !9257
  ret i8* %0, !dbg !9258
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !9259 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9261, metadata !DIExpression()), !dbg !9262
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #24, !dbg !9263
  ret void, !dbg !9264
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !9265 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9269, metadata !DIExpression()), !dbg !9275
  call void @llvm.dbg.value(metadata i32 %1, metadata !9270, metadata !DIExpression()), !dbg !9275
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !9271, metadata !DIExpression()), !dbg !9275
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !9276
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !9276
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !9276
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !9272, metadata !DIExpression()), !dbg !9275
  call void @llvm.dbg.value(metadata i32 %0, metadata !9274, metadata !DIExpression()), !dbg !9275
  %7 = icmp slt i32 %0, %1, !dbg !9277
  br i1 %7, label %8, label %22, !dbg !9280

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9274, metadata !DIExpression()), !dbg !9275
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #24, !dbg !9281
  %11 = icmp eq i32 %10, 0, !dbg !9281
  br i1 %11, label %19, label %12, !dbg !9284

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #24, !dbg !9285
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !9287
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !9287
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !9289
  br i1 %15, label %19, label %16, !dbg !9290

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !9291
  %18 = load i8*, i8** %17, align 4, !dbg !9291
  tail call void %14(i32 noundef %9, i8* noundef %18) #25, !dbg !9292
  br label %19, !dbg !9293

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !9294
  call void @llvm.dbg.value(metadata i32 %20, metadata !9274, metadata !DIExpression()), !dbg !9275
  %21 = icmp eq i32 %20, %1, !dbg !9277
  br i1 %21, label %22, label %8, !dbg !9280, !llvm.loop !9295

22:                                               ; preds = %19, %3
  ret void, !dbg !9297
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #15 !dbg !9298 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9300, metadata !DIExpression()), !dbg !9301
  %2 = shl nuw i32 1, %0, !dbg !9302
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #24, !dbg !9305
  ret i32 %3, !dbg !9306
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #14 !dbg !9307 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9311, metadata !DIExpression()), !dbg !9312
  %2 = shl nuw i32 1, %0, !dbg !9313
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #24, !dbg !9316
  ret void, !dbg !9317
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9318 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9321, metadata !DIExpression()), !dbg !9322
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9323
  ret void, !dbg !9324
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9325 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9327, metadata !DIExpression()), !dbg !9328
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !9329
  %3 = and i32 %2, %0, !dbg !9329
  %4 = icmp eq i32 %3, %0, !dbg !9330
  %5 = zext i1 %4 to i32, !dbg !9330
  ret i32 %5, !dbg !9331
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !9332 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9334, metadata !DIExpression()), !dbg !9335
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #24, !dbg !9336
  ret void, !dbg !9337
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !9338 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9340, metadata !DIExpression()), !dbg !9341
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #24, !dbg !9342
  ret void, !dbg !9343
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !9344 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9346, metadata !DIExpression()), !dbg !9347
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #24, !dbg !9348
  ret void, !dbg !9349
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !9350 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9352, metadata !DIExpression()), !dbg !9353
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #24, !dbg !9354
  ret void, !dbg !9355
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !9356 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9358, metadata !DIExpression()), !dbg !9359
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #24, !dbg !9360
  ret void, !dbg !9361
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !9362 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9364, metadata !DIExpression()), !dbg !9365
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #24, !dbg !9366
  ret void, !dbg !9367
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !9368 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9370, metadata !DIExpression()), !dbg !9371
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #24, !dbg !9372
  ret void, !dbg !9373
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !9374 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9376, metadata !DIExpression()), !dbg !9377
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #24, !dbg !9378
  ret void, !dbg !9379
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !9380 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9382, metadata !DIExpression()), !dbg !9383
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #24, !dbg !9384
  ret void, !dbg !9385
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !9386 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9388, metadata !DIExpression()), !dbg !9389
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #24, !dbg !9390
  ret void, !dbg !9391
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9392 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9394, metadata !DIExpression()), !dbg !9395
  tail call fastcc void @__stm32_exti_connect_irqs() #24, !dbg !9396
  ret i32 0, !dbg !9397
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !898 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !902, metadata !DIExpression()), !dbg !9398
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #25, !dbg !9399
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #25, !dbg !9401
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #25, !dbg !9403
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #25, !dbg !9405
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #25, !dbg !9407
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #25, !dbg !9409
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #25, !dbg !9411
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #25, !dbg !9413
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #25, !dbg !9415
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #25, !dbg !9417
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #25, !dbg !9419
  ret void, !dbg !9421
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !9422 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9424, metadata !DIExpression()), !dbg !9426
  call void @llvm.dbg.value(metadata i32 0, metadata !9425, metadata !DIExpression()), !dbg !9426
  call void @llvm.dbg.value(metadata i32 undef, metadata !9425, metadata !DIExpression()), !dbg !9426
  %2 = lshr i32 6684671, %0, !dbg !9427
  %3 = and i32 %2, 1, !dbg !9427
  %4 = or i32 %3, %0, !dbg !9429
  %5 = icmp eq i32 %4, 0, !dbg !9429
  br i1 %5, label %6, label %7, !dbg !9429

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.127, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.128, i32 0, i32 0), i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.129, i32 0, i32 0), i32 noundef 123) #25, !dbg !9430
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.129, i32 0, i32 0), i32 noundef 123) #25, !dbg !9430
  unreachable, !dbg !9430

7:                                                ; preds = %1
  %8 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !9435
  %9 = load i32, i32* %8, align 4, !dbg !9435
  call void @llvm.dbg.value(metadata i32 %9, metadata !9425, metadata !DIExpression()), !dbg !9426
  %10 = shl nuw i32 1, %0, !dbg !9436
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %10) #24, !dbg !9437
  tail call void @arch_irq_enable(i32 noundef %9) #25, !dbg !9438
  ret void, !dbg !9439
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9440 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9442, metadata !DIExpression()), !dbg !9443
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9444
  %3 = or i32 %2, %0, !dbg !9444
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9444
  ret void, !dbg !9445
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #14 !dbg !9446 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9448, metadata !DIExpression()), !dbg !9449
  %2 = icmp slt i32 %0, 32, !dbg !9450
  br i1 %2, label %3, label %5, !dbg !9452

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !9453
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #24, !dbg !9455
  br label %5, !dbg !9456

5:                                                ; preds = %1, %3
  ret void, !dbg !9457
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9458 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9460, metadata !DIExpression()), !dbg !9461
  %2 = xor i32 %0, -1, !dbg !9462
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9462
  %4 = and i32 %3, %2, !dbg !9462
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !9462
  ret void, !dbg !9463
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #14 !dbg !9464 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9468, metadata !DIExpression()), !dbg !9470
  call void @llvm.dbg.value(metadata i32 %1, metadata !9469, metadata !DIExpression()), !dbg !9470
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !9471

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !9472
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #24, !dbg !9474
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #24, !dbg !9475
  br label %11, !dbg !9476

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !9477
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #24, !dbg !9478
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #24, !dbg !9479
  br label %11, !dbg !9480

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !9481
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #24, !dbg !9482
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #24, !dbg !9483
  br label %11, !dbg !9484

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !9485
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #24, !dbg !9486
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #24, !dbg !9487
  br label %11, !dbg !9488

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !9489
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9490 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9492, metadata !DIExpression()), !dbg !9493
  %2 = xor i32 %0, -1, !dbg !9494
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9494
  %4 = and i32 %3, %2, !dbg !9494
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9494
  ret void, !dbg !9495
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9496 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9498, metadata !DIExpression()), !dbg !9499
  %2 = xor i32 %0, -1, !dbg !9500
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9500
  %4 = and i32 %3, %2, !dbg !9500
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9500
  ret void, !dbg !9501
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9502 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9504, metadata !DIExpression()), !dbg !9505
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9506
  %3 = or i32 %2, %0, !dbg !9506
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !9506
  ret void, !dbg !9507
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !9508 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9510, metadata !DIExpression()), !dbg !9511
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9512
  %3 = or i32 %2, %0, !dbg !9512
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !9512
  ret void, !dbg !9513
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #9 !dbg !9514 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9518, metadata !DIExpression()), !dbg !9524
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !9519, metadata !DIExpression()), !dbg !9524
  call void @llvm.dbg.value(metadata i8* %2, metadata !9520, metadata !DIExpression()), !dbg !9524
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !9521, metadata !DIExpression()), !dbg !9524
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !9523, metadata !DIExpression()), !dbg !9524
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !9525
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !9525
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !9527
  br i1 %6, label %7, label %9, !dbg !9528

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !9529
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !9530
  store i8* %2, i8** %8, align 4, !dbg !9531
  br label %9, !dbg !9532

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !9524
  ret i32 %10, !dbg !9533
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #7 !dbg !9534 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9536, metadata !DIExpression()), !dbg !9539
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !9537, metadata !DIExpression()), !dbg !9539
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !9538, metadata !DIExpression()), !dbg !9539
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !9540
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !9541
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !9542
  store i8* null, i8** %3, align 4, !dbg !9543
  ret void, !dbg !9544
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #14 !dbg !9545 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9547, metadata !DIExpression()), !dbg !9552
  call void @llvm.dbg.value(metadata i8* %1, metadata !9548, metadata !DIExpression()), !dbg !9552
  call void @llvm.dbg.value(metadata i8* %1, metadata !9549, metadata !DIExpression()), !dbg !9552
  %3 = bitcast i8* %1 to i32*, !dbg !9553
  %4 = load i32, i32* %3, align 4, !dbg !9553
  %5 = add i32 %4, -169, !dbg !9553
  %6 = icmp ult i32 %5, -121, !dbg !9553
  br i1 %6, label %15, label %7, !dbg !9555

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !9556
  %9 = inttoptr i32 %8 to i32*, !dbg !9557
  call void @llvm.dbg.value(metadata i32* %9, metadata !9550, metadata !DIExpression()), !dbg !9552
  %10 = load volatile i32, i32* %9, align 4, !dbg !9558
  call void @llvm.dbg.value(metadata i32 %10, metadata !9551, metadata !DIExpression()), !dbg !9552
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9559
  %12 = bitcast i8* %11 to i32*, !dbg !9559
  %13 = load i32, i32* %12, align 4, !dbg !9559
  %14 = or i32 %13, %10, !dbg !9560
  call void @llvm.dbg.value(metadata i32 %14, metadata !9551, metadata !DIExpression()), !dbg !9552
  store volatile i32 %14, i32* %9, align 4, !dbg !9561
  br label %15, !dbg !9562

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !9552
  ret i32 %16, !dbg !9563
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #14 !dbg !9564 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9566, metadata !DIExpression()), !dbg !9571
  call void @llvm.dbg.value(metadata i8* %1, metadata !9567, metadata !DIExpression()), !dbg !9571
  call void @llvm.dbg.value(metadata i8* %1, metadata !9568, metadata !DIExpression()), !dbg !9571
  %3 = bitcast i8* %1 to i32*, !dbg !9572
  %4 = load i32, i32* %3, align 4, !dbg !9572
  %5 = add i32 %4, -169, !dbg !9572
  %6 = icmp ult i32 %5, -121, !dbg !9572
  br i1 %6, label %16, label %7, !dbg !9574

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !9575
  %9 = inttoptr i32 %8 to i32*, !dbg !9576
  call void @llvm.dbg.value(metadata i32* %9, metadata !9569, metadata !DIExpression()), !dbg !9571
  %10 = load volatile i32, i32* %9, align 4, !dbg !9577
  call void @llvm.dbg.value(metadata i32 %10, metadata !9570, metadata !DIExpression()), !dbg !9571
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9578
  %12 = bitcast i8* %11 to i32*, !dbg !9578
  %13 = load i32, i32* %12, align 4, !dbg !9578
  %14 = xor i32 %13, -1, !dbg !9579
  %15 = and i32 %10, %14, !dbg !9580
  call void @llvm.dbg.value(metadata i32 %15, metadata !9570, metadata !DIExpression()), !dbg !9571
  store volatile i32 %15, i32* %9, align 4, !dbg !9581
  br label %16, !dbg !9582

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !9571
  ret i32 %17, !dbg !9583
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !9584 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9586, metadata !DIExpression()), !dbg !9594
  call void @llvm.dbg.value(metadata i8* %1, metadata !9587, metadata !DIExpression()), !dbg !9594
  call void @llvm.dbg.value(metadata i32* %2, metadata !9588, metadata !DIExpression()), !dbg !9594
  call void @llvm.dbg.value(metadata i8* %1, metadata !9589, metadata !DIExpression()), !dbg !9594
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !9595
  call void @llvm.dbg.value(metadata i32 %4, metadata !9590, metadata !DIExpression()), !dbg !9594
  call void @llvm.dbg.value(metadata i32 undef, metadata !9591, metadata !DIExpression()), !dbg !9594
  call void @llvm.dbg.value(metadata i32 undef, metadata !9592, metadata !DIExpression()), !dbg !9594
  call void @llvm.dbg.value(metadata i32 %4, metadata !9593, metadata !DIExpression()), !dbg !9594
  %5 = bitcast i8* %1 to i32*, !dbg !9596
  %6 = load i32, i32* %5, align 4, !dbg !9596
  switch i32 %6, label %21 [
    i32 48, label %19
    i32 52, label %19
    i32 56, label %19
    i32 64, label %7
    i32 68, label %9
    i32 168, label %19
    i32 6, label %19
    i32 1, label %11
    i32 2, label %14
    i32 4, label %17
    i32 5, label %18
  ], !dbg !9597

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 4) #24, !dbg !9598
  call void @llvm.dbg.value(metadata i32 %8, metadata !9591, metadata !DIExpression()), !dbg !9594
  br label %19, !dbg !9599

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #24, !dbg !9601
  call void @llvm.dbg.value(metadata i32 %10, metadata !9592, metadata !DIExpression()), !dbg !9594
  br label %19, !dbg !9602

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #25, !dbg !9603
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12, i32 noundef 2) #24, !dbg !9604
  br label %19, !dbg !9605

14:                                               ; preds = %3
  %15 = tail call i32 @get_pllsrc_frequency() #25, !dbg !9606
  %16 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %15, i32 noundef 7) #24, !dbg !9607
  br label %19, !dbg !9608

17:                                               ; preds = %3
  br label %19, !dbg !9609

18:                                               ; preds = %3
  br label %19, !dbg !9610

19:                                               ; preds = %3, %3, %3, %3, %3, %18, %17, %14, %11, %9, %7
  %20 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ %16, %14 ], [ 0, %17 ], [ 0, %18 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %20, i32* %2, align 4, !dbg !9611
  br label %21, !dbg !9612

21:                                               ; preds = %19, %3
  %22 = phi i32 [ -134, %3 ], [ 0, %19 ], !dbg !9594
  ret i32 %22, !dbg !9612
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #14 !dbg !9613 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9615, metadata !DIExpression()), !dbg !9623
  call void @llvm.dbg.value(metadata i8* %1, metadata !9616, metadata !DIExpression()), !dbg !9623
  call void @llvm.dbg.value(metadata i8* %2, metadata !9617, metadata !DIExpression()), !dbg !9623
  call void @llvm.dbg.value(metadata i8* %1, metadata !9618, metadata !DIExpression()), !dbg !9623
  %4 = bitcast i8* %1 to i32*, !dbg !9624
  %5 = load i32, i32* %4, align 4, !dbg !9624
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #24, !dbg !9625
  call void @llvm.dbg.value(metadata i32 %6, metadata !9622, metadata !DIExpression()), !dbg !9623
  %7 = icmp slt i32 %6, 0, !dbg !9626
  br i1 %7, label %22, label %8, !dbg !9628

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9618, metadata !DIExpression()), !dbg !9623
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9629
  %10 = bitcast i8* %9 to i32*, !dbg !9629
  %11 = load i32, i32* %10, align 4, !dbg !9629
  %12 = lshr i32 %11, 16, !dbg !9629
  %13 = and i32 %12, 7, !dbg !9629
  %14 = lshr i32 %11, 8, !dbg !9630
  %15 = and i32 %14, 31, !dbg !9630
  %16 = shl i32 %13, %15, !dbg !9631
  call void @llvm.dbg.value(metadata i32 %16, metadata !9621, metadata !DIExpression()), !dbg !9623
  %17 = and i32 %11, 255, !dbg !9632
  %18 = or i32 %17, 1073887232, !dbg !9633
  %19 = inttoptr i32 %18 to i32*, !dbg !9634
  call void @llvm.dbg.value(metadata i32* %19, metadata !9619, metadata !DIExpression()), !dbg !9623
  %20 = load volatile i32, i32* %19, align 4, !dbg !9635
  call void @llvm.dbg.value(metadata i32 %20, metadata !9620, metadata !DIExpression()), !dbg !9623
  %21 = or i32 %16, %20, !dbg !9636
  call void @llvm.dbg.value(metadata i32 %21, metadata !9620, metadata !DIExpression()), !dbg !9623
  store volatile i32 %21, i32* %19, align 4, !dbg !9637
  br label %22, !dbg !9638

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !9623
  ret i32 %23, !dbg !9639
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #4 !dbg !9640 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9644, metadata !DIExpression()), !dbg !9646
  call void @llvm.dbg.value(metadata i32 0, metadata !9645, metadata !DIExpression()), !dbg !9646
  %2 = add i32 %0, -1, !dbg !9647
  %3 = icmp ult i32 %2, 6, !dbg !9647
  br i1 %3, label %4, label %7, !dbg !9647

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !9647
  %6 = load i32, i32* %5, align 4, !dbg !9647
  call void @llvm.dbg.value(metadata i32 %6, metadata !9645, metadata !DIExpression()), !dbg !9646
  br label %7, !dbg !9648

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !9646
  ret i32 %8, !dbg !9649
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !9650 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9654, metadata !DIExpression()), !dbg !9656
  call void @llvm.dbg.value(metadata i32 %1, metadata !9655, metadata !DIExpression()), !dbg !9656
  %3 = udiv i32 %0, %1, !dbg !9657
  ret i32 %3, !dbg !9658
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !9659 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9663, metadata !DIExpression()), !dbg !9667
  call void @llvm.dbg.value(metadata i32 24, metadata !9664, metadata !DIExpression()), !dbg !9667
  call void @llvm.dbg.value(metadata i32 336, metadata !9665, metadata !DIExpression()), !dbg !9667
  call void @llvm.dbg.value(metadata i32 %1, metadata !9666, metadata !DIExpression()), !dbg !9667
  %3 = mul i32 %0, 336, !dbg !9668
  %4 = mul nsw i32 %1, 24, !dbg !9669
  %5 = udiv i32 %3, %4, !dbg !9670
  ret i32 %5, !dbg !9671
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !9672 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !9674, metadata !DIExpression()), !dbg !9677
  tail call void @config_enable_default_clocks() #25, !dbg !9678
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !9679
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #24, !dbg !9679
  %4 = lshr i32 %3, 4, !dbg !9679
  %5 = and i32 %4, 15, !dbg !9679
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !9679
  %7 = load i8, i8* %6, align 1, !dbg !9679
  %8 = zext i8 %7 to i32, !dbg !9679
  %9 = lshr i32 %2, %8, !dbg !9679
  call void @llvm.dbg.value(metadata i32 %9, metadata !9675, metadata !DIExpression()), !dbg !9677
  call void @llvm.dbg.value(metadata !DIArgList(i32 168000000, i8 undef), metadata !9676, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !9677
  %10 = icmp ult i32 %9, 168000000, !dbg !9680
  br i1 %10, label %11, label %13, !dbg !9682

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 168000000) #25, !dbg !9683
  br label %13, !dbg !9685

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #24, !dbg !9686
  tail call fastcc void @set_up_plls() #24, !dbg !9687
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !9688
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #24, !dbg !9691
  br label %14, !dbg !9692

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !9693
  %16 = icmp eq i32 %15, 8, !dbg !9694
  br i1 %16, label %17, label %14, !dbg !9692, !llvm.loop !9695

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 167999999, !dbg !9697
  br i1 %18, label %19, label %21, !dbg !9699

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 168000000) #25, !dbg !9700
  br label %21, !dbg !9702

21:                                               ; preds = %19, %17
  store i32 168000000, i32* @SystemCoreClock, align 4, !dbg !9703
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #24, !dbg !9704
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #24, !dbg !9705
  ret i32 0, !dbg !9706
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #15 !dbg !9707 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9709
  %2 = and i32 %1, 240, !dbg !9709
  ret i32 %2, !dbg !9710
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #14 !dbg !9711 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #24, !dbg !9712
  tail call fastcc void @LL_RCC_HSE_Enable() #24, !dbg !9717
  br label %1, !dbg !9718

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #24, !dbg !9719
  %3 = icmp eq i32 %2, 1, !dbg !9720
  br i1 %3, label %4, label %1, !dbg !9718, !llvm.loop !9721

4:                                                ; preds = %1
  ret void, !dbg !9723
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !9724 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !9725
  %2 = icmp eq i32 %1, 8, !dbg !9727
  br i1 %2, label %3, label %4, !dbg !9728

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !9729
  tail call fastcc void @stm32_clock_switch_to_hsi() #24, !dbg !9731
  br label %4, !dbg !9732

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #24, !dbg !9733
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9734
  %6 = and i32 %5, -196609, !dbg !9734
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9734
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9735
  %8 = and i32 %7, -251658241, !dbg !9735
  %9 = or i32 %8, 117440512, !dbg !9735
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9735
  tail call void @config_pll_sysclock() #25, !dbg !9736
  tail call fastcc void @LL_RCC_PLL_Enable() #24, !dbg !9737
  br label %10, !dbg !9738

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #24, !dbg !9739
  %12 = icmp eq i32 %11, 1, !dbg !9740
  br i1 %12, label %13, label %10, !dbg !9738, !llvm.loop !9741

13:                                               ; preds = %10
  ret void, !dbg !9743
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #14 !dbg !9744 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9746, metadata !DIExpression()), !dbg !9747
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9748
  %2 = and i32 %1, -241, !dbg !9748
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9748
  ret void, !dbg !9749
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #14 !dbg !9750 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9752, metadata !DIExpression()), !dbg !9753
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9754
  %3 = and i32 %2, -4, !dbg !9754
  %4 = or i32 %3, %0, !dbg !9754
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9754
  ret void, !dbg !9755
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #15 !dbg !9756 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9757
  %2 = and i32 %1, 12, !dbg !9757
  ret i32 %2, !dbg !9758
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #14 !dbg !9759 {
  call void @llvm.dbg.value(metadata i32 5120, metadata !9761, metadata !DIExpression()), !dbg !9762
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9763
  %2 = and i32 %1, -7169, !dbg !9763
  %3 = or i32 %2, 5120, !dbg !9763
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9763
  ret void, !dbg !9764
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #14 !dbg !9765 {
  call void @llvm.dbg.value(metadata i32 32768, metadata !9767, metadata !DIExpression()), !dbg !9768
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9769
  %2 = and i32 %1, -57345, !dbg !9769
  %3 = or i32 %2, 32768, !dbg !9769
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9769
  ret void, !dbg !9770
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #14 !dbg !9771 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !9772
  %2 = icmp eq i32 %1, 1, !dbg !9774
  br i1 %2, label %7, label %3, !dbg !9775

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #24, !dbg !9776
  br label %4, !dbg !9778

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !9779
  %6 = icmp eq i32 %5, 1, !dbg !9780
  br i1 %6, label %7, label %4, !dbg !9778, !llvm.loop !9781

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #24, !dbg !9783
  br label %8, !dbg !9784

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !9785
  %10 = icmp eq i32 %9, 0, !dbg !9786
  br i1 %10, label %11, label %8, !dbg !9784, !llvm.loop !9787

11:                                               ; preds = %8
  ret void, !dbg !9789
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #14 !dbg !9790 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9791
  %2 = and i32 %1, -16777217, !dbg !9791
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9791
  ret void, !dbg !9792
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #14 !dbg !9793 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9794
  %2 = or i32 %1, 16777216, !dbg !9794
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9794
  ret void, !dbg !9795
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #15 !dbg !9796 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9797
  %2 = lshr i32 %1, 25, !dbg !9798
  %3 = and i32 %2, 1, !dbg !9798
  ret i32 %3, !dbg !9799
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #15 !dbg !9800 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9801
  %2 = lshr i32 %1, 1, !dbg !9802
  %3 = and i32 %2, 1, !dbg !9802
  ret i32 %3, !dbg !9803
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #14 !dbg !9804 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9805
  %2 = or i32 %1, 1, !dbg !9805
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9805
  ret void, !dbg !9806
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #14 !dbg !9807 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9808
  %2 = and i32 %1, -262145, !dbg !9808
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9808
  ret void, !dbg !9809
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #14 !dbg !9810 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9811
  %2 = or i32 %1, 65536, !dbg !9811
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9811
  ret void, !dbg !9812
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #15 !dbg !9813 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9814
  %2 = lshr i32 %1, 17, !dbg !9815
  %3 = and i32 %2, 1, !dbg !9815
  ret i32 %3, !dbg !9816
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #4 !dbg !9817 {
  ret i32 24000000, !dbg !9819
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #14 !dbg !9823 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #24, !dbg !9824
  ret void, !dbg !9825
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #14 !dbg !9826 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !9830, metadata !DIExpression()), !dbg !9834
  call void @llvm.dbg.value(metadata i32 24, metadata !9831, metadata !DIExpression()), !dbg !9834
  call void @llvm.dbg.value(metadata i32 336, metadata !9832, metadata !DIExpression()), !dbg !9834
  call void @llvm.dbg.value(metadata i32 0, metadata !9833, metadata !DIExpression()), !dbg !9834
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9835
  %2 = and i32 %1, -4227072, !dbg !9835
  %3 = or i32 %2, 4215832, !dbg !9835
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9835
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9836
  %5 = and i32 %4, -196609, !dbg !9836
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9836
  ret void, !dbg !9837
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #19 !dbg !9838 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #24, !dbg !9839
  ret void, !dbg !9840
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #19 !dbg !9841 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !9844, metadata !DIExpression()), !dbg !9846
  %2 = bitcast i32* %1 to i8*, !dbg !9847
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !9847
  call void @llvm.dbg.declare(metadata i32* %1, metadata !9845, metadata !DIExpression()), !dbg !9848
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9849
  %4 = or i32 %3, 268435456, !dbg !9849
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9849
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !9850
  %6 = and i32 %5, 268435456, !dbg !9850
  store volatile i32 %6, i32* %1, align 4, !dbg !9851
  %7 = load volatile i32, i32* %1, align 4, !dbg !9852
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !9853
  ret void, !dbg !9853
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9854 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9856, metadata !DIExpression()), !dbg !9857
  %2 = tail call fastcc zeroext i1 @device_is_ready() #24, !dbg !9858
  br i1 %2, label %3, label %4, !dbg !9860

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #24, !dbg !9861
  br label %4, !dbg !9862

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !9857
  ret i32 %5, !dbg !9863
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !9864 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_57, metadata !9869, metadata !DIExpression()), !dbg !9870
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9871, !srcloc !9873
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #24, !dbg !9874
  ret i1 %1, !dbg !9875
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !9876 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !9877
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !9878
  ret void, !dbg !9879
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !9880 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9882, metadata !DIExpression()), !dbg !9883
  %2 = icmp eq i32 %0, 10, !dbg !9884
  br i1 %2, label %3, label %4, !dbg !9886

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #24, !dbg !9887
  br label %4, !dbg !9889

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !9890
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #24, !dbg !9891
  ret i32 %0, !dbg !9892
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9893 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_57, metadata !9896, metadata !DIExpression()), !dbg !9898
  call void @llvm.dbg.value(metadata i8 %0, metadata !9897, metadata !DIExpression()), !dbg !9898
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9899, !srcloc !9901
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #24, !dbg !9902
  ret void, !dbg !9903
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9904 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_57, metadata !9906, metadata !DIExpression()), !dbg !9909
  call void @llvm.dbg.value(metadata i8 %0, metadata !9907, metadata !DIExpression()), !dbg !9909
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_57, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9910
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !9908, metadata !DIExpression()), !dbg !9909
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !9911
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !9911
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_57, i8 noundef zeroext %0) #25, !dbg !9912
  ret void, !dbg !9913
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !9914 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_57, metadata !9916, metadata !DIExpression()), !dbg !9917
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_57) #25, !dbg !9918
  ret i1 %1, !dbg !9919
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #4 !dbg !9920 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !9969, metadata !DIExpression()), !dbg !9972
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !9970, metadata !DIExpression()), !dbg !9972
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !9971, metadata !DIExpression()), !dbg !9972
  ret void, !dbg !9973
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !9974 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9976, metadata !DIExpression()), !dbg !9981
  call void @llvm.dbg.value(metadata i8 %1, metadata !9977, metadata !DIExpression()), !dbg !9981
  call void @llvm.dbg.value(metadata i32 %2, metadata !9978, metadata !DIExpression()), !dbg !9981
  %5 = bitcast i32* %4 to i8*, !dbg !9982
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9982
  call void @llvm.dbg.value(metadata i32* %4, metadata !9980, metadata !DIExpression(DW_OP_deref)), !dbg !9981
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #24, !dbg !9983
  call void @llvm.dbg.value(metadata i32 %6, metadata !9979, metadata !DIExpression()), !dbg !9981
  %7 = icmp eq i32 %6, 0, !dbg !9984
  br i1 %7, label %8, label %31, !dbg !9986

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !9979, metadata !DIExpression()), !dbg !9981
  %9 = and i32 %2, 131072, !dbg !9987
  %10 = icmp eq i32 %9, 0, !dbg !9989
  br i1 %10, label %28, label %11, !dbg !9990

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !9991
  %13 = icmp eq i32 %12, 0, !dbg !9994
  br i1 %13, label %18, label %14, !dbg !9995

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !9996
  %16 = shl nuw i32 1, %15, !dbg !9996
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #24, !dbg !9998
  br label %25, !dbg !9999

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !10000
  %20 = icmp eq i32 %19, 0, !dbg !10002
  %21 = zext i8 %1 to i32, !dbg !9981
  br i1 %20, label %25, label %22, !dbg !10003

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !10004
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #24, !dbg !10006
  br label %25, !dbg !10007

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !10008
  %27 = load i32, i32* %4, align 4, !dbg !10009
  call void @llvm.dbg.value(metadata i32 %30, metadata !9980, metadata !DIExpression()), !dbg !9981
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #24, !dbg !10010
  br label %31, !dbg !10011

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !10008
  %30 = load i32, i32* %4, align 4, !dbg !10009
  call void @llvm.dbg.value(metadata i32 %30, metadata !9980, metadata !DIExpression()), !dbg !9981
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #24, !dbg !10010
  call void @llvm.dbg.value(metadata i32 0, metadata !9979, metadata !DIExpression()), !dbg !9981
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !10012
  ret i32 %6, !dbg !10012
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #15 !dbg !10013 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10017, metadata !DIExpression()), !dbg !10022
  call void @llvm.dbg.value(metadata i32* %1, metadata !10018, metadata !DIExpression()), !dbg !10022
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10023
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10023
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10023
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10019, metadata !DIExpression()), !dbg !10022
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10024
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10024
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10024
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10021, metadata !DIExpression()), !dbg !10022
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #24, !dbg !10025
  store i32 %9, i32* %1, align 4, !dbg !10026
  ret i32 0, !dbg !10027
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #14 !dbg !10028 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10030, metadata !DIExpression()), !dbg !10036
  call void @llvm.dbg.value(metadata i32 %1, metadata !10031, metadata !DIExpression()), !dbg !10036
  call void @llvm.dbg.value(metadata i32 %2, metadata !10032, metadata !DIExpression()), !dbg !10036
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10037
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !10037
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !10037
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !10033, metadata !DIExpression()), !dbg !10036
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !10038
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !10038
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !10038
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !10034, metadata !DIExpression()), !dbg !10036
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #24, !dbg !10039
  call void @llvm.dbg.value(metadata i32 %10, metadata !10035, metadata !DIExpression()), !dbg !10036
  %11 = xor i32 %1, -1, !dbg !10040
  %12 = and i32 %10, %11, !dbg !10041
  %13 = and i32 %2, %1, !dbg !10042
  %14 = or i32 %12, %13, !dbg !10043
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #24, !dbg !10044
  ret i32 0, !dbg !10045
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !10046 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10048, metadata !DIExpression()), !dbg !10052
  call void @llvm.dbg.value(metadata i32 %1, metadata !10049, metadata !DIExpression()), !dbg !10052
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10053
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10053
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10053
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10050, metadata !DIExpression()), !dbg !10052
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10054
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10054
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10054
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10051, metadata !DIExpression()), !dbg !10052
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !10055
  store volatile i32 %1, i32* %9, align 4, !dbg !10055
  ret i32 0, !dbg !10056
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !10057 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10059, metadata !DIExpression()), !dbg !10063
  call void @llvm.dbg.value(metadata i32 %1, metadata !10060, metadata !DIExpression()), !dbg !10063
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10064
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10064
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10064
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10061, metadata !DIExpression()), !dbg !10063
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10065
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10065
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10065
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10062, metadata !DIExpression()), !dbg !10063
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #24, !dbg !10066
  ret i32 0, !dbg !10067
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !10068 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10070, metadata !DIExpression()), !dbg !10074
  call void @llvm.dbg.value(metadata i32 %1, metadata !10071, metadata !DIExpression()), !dbg !10074
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10075
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10075
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10075
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10072, metadata !DIExpression()), !dbg !10074
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10076
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10076
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10076
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10073, metadata !DIExpression()), !dbg !10074
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !10077
  %10 = load volatile i32, i32* %9, align 4, !dbg !10077
  %11 = xor i32 %10, %1, !dbg !10077
  store volatile i32 %11, i32* %9, align 4, !dbg !10077
  ret i32 0, !dbg !10078
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !10079 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10081, metadata !DIExpression()), !dbg !10091
  call void @llvm.dbg.value(metadata i8 %1, metadata !10082, metadata !DIExpression()), !dbg !10091
  call void @llvm.dbg.value(metadata i32 %2, metadata !10083, metadata !DIExpression()), !dbg !10091
  call void @llvm.dbg.value(metadata i32 %3, metadata !10084, metadata !DIExpression()), !dbg !10091
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10092
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10092
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10092
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10085, metadata !DIExpression()), !dbg !10091
  call void @llvm.dbg.value(metadata i8* undef, metadata !10086, metadata !DIExpression()), !dbg !10091
  call void @llvm.dbg.value(metadata i32 0, metadata !10088, metadata !DIExpression()), !dbg !10091
  call void @llvm.dbg.value(metadata i32 0, metadata !10089, metadata !DIExpression()), !dbg !10091
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !10093

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !10094
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #24, !dbg !10098
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !10099
  %12 = load i32, i32* %11, align 4, !dbg !10099
  %13 = icmp eq i32 %10, %12, !dbg !10100
  br i1 %13, label %14, label %29, !dbg !10101

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #25, !dbg !10102
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #25, !dbg !10104
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #25, !dbg !10105
  br label %29, !dbg !10106

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10107
  %17 = load i8*, i8** %16, align 4, !dbg !10107
  call void @llvm.dbg.value(metadata i8* %17, metadata !10086, metadata !DIExpression()), !dbg !10091
  %18 = zext i8 %1 to i32, !dbg !10108
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #25, !dbg !10110
  %20 = icmp eq i32 %19, 0, !dbg !10111
  br i1 %20, label %21, label %29, !dbg !10112

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !10113
  %23 = load i32, i32* %22, align 4, !dbg !10113
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #24, !dbg !10114
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !10115

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !10088, metadata !DIExpression()), !dbg !10091
  br label %27, !dbg !10116

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !10088, metadata !DIExpression()), !dbg !10091
  br label %27, !dbg !10118

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !10088, metadata !DIExpression()), !dbg !10091
  br label %27, !dbg !10119

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !10091
  call void @llvm.dbg.value(metadata i32 %28, metadata !10088, metadata !DIExpression()), !dbg !10091
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #25, !dbg !10120
  tail call void @stm32_exti_enable(i32 noundef %18) #25, !dbg !10121
  br label %29, !dbg !10121

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !10091
  call void @llvm.dbg.value(metadata i32 %30, metadata !10089, metadata !DIExpression()), !dbg !10091
  call void @llvm.dbg.label(metadata !10090), !dbg !10122
  ret i32 %30, !dbg !10123
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #1 !dbg !10124 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10126, metadata !DIExpression()), !dbg !10130
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10127, metadata !DIExpression()), !dbg !10130
  call void @llvm.dbg.value(metadata i1 %2, metadata !10128, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10130
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10131
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !10131
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !10131
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !10129, metadata !DIExpression()), !dbg !10130
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !10132
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #24, !dbg !10133
  ret i32 %8, !dbg !10134
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #1 !dbg !10135 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10141, metadata !DIExpression()), !dbg !10144
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10142, metadata !DIExpression()), !dbg !10144
  call void @llvm.dbg.value(metadata i1 %2, metadata !10143, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10144
  %4 = icmp eq %struct.gpio_callback* %1, null, !dbg !10145
  br i1 %4, label %5, label %6, !dbg !10148

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.11.140, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.37.141, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.35.142, i32 0, i32 0), i32 noundef 42) #25, !dbg !10149
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.38.143, i32 0, i32 0)) #25, !dbg !10149
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.35.142, i32 0, i32 0), i32 noundef 42) #25, !dbg !10149
  unreachable, !dbg !10149

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 1, !dbg !10151
  %8 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %7, align 4, !dbg !10151
  %9 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %8, null, !dbg !10151
  br i1 %9, label %10, label %11, !dbg !10154

10:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.11.140, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.39.144, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.35.142, i32 0, i32 0), i32 noundef 43) #25, !dbg !10155
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.36.145, i32 0, i32 0)) #25, !dbg !10155
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.35.142, i32 0, i32 0), i32 noundef 43) #25, !dbg !10155
  unreachable, !dbg !10155

11:                                               ; preds = %6
  %12 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #24, !dbg !10157
  br i1 %12, label %18, label %13, !dbg !10159

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10160
  %15 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef nonnull %14) #24, !dbg !10163
  %16 = or i1 %15, %2, !dbg !10164
  %17 = select i1 %16, i32 0, i32 -22, !dbg !10164
  br i1 %2, label %19, label %21, !dbg !10164

18:                                               ; preds = %11
  br i1 %2, label %19, label %21, !dbg !10165

19:                                               ; preds = %18, %13
  %20 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10166
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef nonnull %20) #24, !dbg !10169
  br label %21, !dbg !10170

21:                                               ; preds = %13, %19, %18
  %22 = phi i32 [ %17, %13 ], [ -22, %18 ], [ 0, %19 ], !dbg !10144
  ret i32 %22, !dbg !10171
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10172 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10176, metadata !DIExpression()), !dbg !10177
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10178
  %3 = icmp eq %struct._snode* %2, null, !dbg !10178
  ret i1 %3, !dbg !10178
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #13 !dbg !10179 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10183, metadata !DIExpression()), !dbg !10187
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10184, metadata !DIExpression()), !dbg !10187
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10185, metadata !DIExpression()), !dbg !10187
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10188
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10186, metadata !DIExpression()), !dbg !10187
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10185, metadata !DIExpression()), !dbg !10187
  %4 = icmp eq %struct._snode* %3, null, !dbg !10190
  br i1 %4, label %15, label %5, !dbg !10188

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10186, metadata !DIExpression()), !dbg !10187
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10185, metadata !DIExpression()), !dbg !10187
  %6 = icmp eq %struct._snode* %3, %1, !dbg !10192
  br i1 %6, label %9, label %11, !dbg !10195

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10186, metadata !DIExpression()), !dbg !10187
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10185, metadata !DIExpression()), !dbg !10187
  %8 = icmp eq %struct._snode* %13, %1, !dbg !10192
  br i1 %8, label %9, label %11, !dbg !10195, !llvm.loop !10196

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #24, !dbg !10197
  br label %15, !dbg !10197

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10186, metadata !DIExpression()), !dbg !10187
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10185, metadata !DIExpression()), !dbg !10187
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #24, !dbg !10190
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10186, metadata !DIExpression()), !dbg !10187
  %14 = icmp eq %struct._snode* %13, null, !dbg !10190
  br i1 %14, label %15, label %7, !dbg !10188, !llvm.loop !10196

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !10199
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !10200 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10204, metadata !DIExpression()), !dbg !10206
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10205, metadata !DIExpression()), !dbg !10206
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10207
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #24, !dbg !10207
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #24, !dbg !10207
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !10208
  %5 = icmp eq %struct._snode* %4, null, !dbg !10208
  br i1 %5, label %6, label %8, !dbg !10207

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10210
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #24, !dbg !10210
  br label %8, !dbg !10210

8:                                                ; preds = %6, %2
  ret void, !dbg !10207
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10212 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10216, metadata !DIExpression()), !dbg !10217
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10218
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10218
  ret %struct._snode* %3, !dbg !10219
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !10220 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10224, metadata !DIExpression()), !dbg !10226
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10225, metadata !DIExpression()), !dbg !10226
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10227
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10228
  ret void, !dbg !10229
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !10230 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10232, metadata !DIExpression()), !dbg !10234
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10233, metadata !DIExpression()), !dbg !10234
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10235
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10236
  ret void, !dbg !10237
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10238 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10240, metadata !DIExpression()), !dbg !10241
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10242
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10242
  ret %struct._snode* %3, !dbg !10243
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !10244 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10246, metadata !DIExpression()), !dbg !10248
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10247, metadata !DIExpression()), !dbg !10248
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10249
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10250
  ret void, !dbg !10251
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #9 !dbg !10252 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10256, metadata !DIExpression()), !dbg !10259
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10257, metadata !DIExpression()), !dbg !10259
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !10258, metadata !DIExpression()), !dbg !10259
  %4 = icmp eq %struct._snode* %1, null, !dbg !10260
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #24, !dbg !10262
  br i1 %4, label %6, label %11, !dbg !10263

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #24, !dbg !10264
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !10266
  %8 = icmp eq %struct._snode* %7, %2, !dbg !10266
  br i1 %8, label %9, label %15, !dbg !10264

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10268
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #24, !dbg !10268
  br label %15, !dbg !10268

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #24, !dbg !10270
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !10272
  %13 = icmp eq %struct._snode* %12, %2, !dbg !10272
  br i1 %13, label %14, label %15, !dbg !10270

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #24, !dbg !10274
  br label %15, !dbg !10274

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #24, !dbg !10263
  ret void, !dbg !10263
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #8 !dbg !10276 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10280, metadata !DIExpression()), !dbg !10281
  %2 = icmp eq %struct._snode* %0, null, !dbg !10282
  br i1 %2, label %5, label %3, !dbg !10282

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #24, !dbg !10282
  br label %5, !dbg !10282

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !10282
  ret %struct._snode* %6, !dbg !10282
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10283 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10285, metadata !DIExpression()), !dbg !10286
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #24, !dbg !10287
  ret %struct._snode* %2, !dbg !10287
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10288 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10290, metadata !DIExpression()), !dbg !10291
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10292
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10292
  ret %struct._snode* %3, !dbg !10293
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !10294 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10296, metadata !DIExpression()), !dbg !10299
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #24, !dbg !10300, !range !10301
  call void @llvm.dbg.value(metadata i32 %2, metadata !10297, metadata !DIExpression()), !dbg !10299
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #24, !dbg !10302
  call void @llvm.dbg.value(metadata i32 %3, metadata !10298, metadata !DIExpression()), !dbg !10299
  ret i32 %3, !dbg !10303
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !10304 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10306, metadata !DIExpression()), !dbg !10309
  call void @llvm.dbg.value(metadata i8* %1, metadata !10307, metadata !DIExpression()), !dbg !10309
  call void @llvm.dbg.value(metadata i8* %1, metadata !10308, metadata !DIExpression()), !dbg !10309
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !10310
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !10310
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10311
  %6 = bitcast i8* %5 to %struct.device**, !dbg !10311
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !10311
  %8 = shl nuw i32 1, %0, !dbg !10312
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #24, !dbg !10313
  ret void, !dbg !10314
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10315 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !10319, metadata !DIExpression()), !dbg !10325
  call void @llvm.dbg.value(metadata i32 %1, metadata !10320, metadata !DIExpression()), !dbg !10325
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10321, metadata !DIExpression()), !dbg !10325
  %4 = bitcast i64* %3 to i8*, !dbg !10326
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #23, !dbg !10326
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !10323, metadata !DIExpression()), !dbg !10325
  store i64 70368744177732, i64* %3, align 8, !dbg !10327
  call void @llvm.dbg.value(metadata i64* %3, metadata !10323, metadata !DIExpression(DW_OP_deref)), !dbg !10325
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #24, !dbg !10328
  call void @llvm.dbg.value(metadata i32 %5, metadata !10324, metadata !DIExpression()), !dbg !10325
  %6 = icmp eq i32 %5, 0, !dbg !10329
  br i1 %6, label %7, label %8, !dbg !10331

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #24, !dbg !10332
  br label %8, !dbg !10333

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #23, !dbg !10334
  ret void, !dbg !10334
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !10335 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10337, metadata !DIExpression()), !dbg !10340
  call void @llvm.dbg.value(metadata i8* %0, metadata !10338, metadata !DIExpression()), !dbg !10340
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !10341
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !10339, metadata !DIExpression()), !dbg !10340
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !10342
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !10342
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #25, !dbg !10343
  ret i32 %5, !dbg !10344
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10345 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10347, metadata !DIExpression()), !dbg !10350
  call void @llvm.dbg.value(metadata i32 %1, metadata !10348, metadata !DIExpression()), !dbg !10350
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #24, !dbg !10351
  call void @llvm.dbg.value(metadata i32 %3, metadata !10349, metadata !DIExpression()), !dbg !10350
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #24, !dbg !10352
  ret void, !dbg !10353
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #4 !dbg !10354 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10358, metadata !DIExpression()), !dbg !10359
  %2 = sdiv i32 %0, 4, !dbg !10360
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !10361
  %6 = add nsw i32 %5, 16, !dbg !10362
  %7 = shl i32 15, %6, !dbg !10363
  %8 = or i32 %7, %2, !dbg !10364
  ret i32 %8, !dbg !10365
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10366 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10370, metadata !DIExpression()), !dbg !10372
  call void @llvm.dbg.value(metadata i32 %1, metadata !10371, metadata !DIExpression()), !dbg !10372
  %3 = and i32 %1, 255, !dbg !10373
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !10373
  %5 = load volatile i32, i32* %4, align 4, !dbg !10373
  %6 = lshr i32 %1, 16, !dbg !10373
  %7 = xor i32 %6, -1, !dbg !10373
  %8 = and i32 %5, %7, !dbg !10373
  call void @llvm.dbg.value(metadata i32 %6, metadata !10374, metadata !DIExpression()) #23, !dbg !10378
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !10380, !srcloc !10381
  call void @llvm.dbg.value(metadata i32 %9, metadata !10377, metadata !DIExpression()) #23, !dbg !10378
  call void @llvm.dbg.value(metadata i32 %9, metadata !10382, metadata !DIExpression()) #23, !dbg !10387
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #23, !dbg !10389, !range !7591
  %11 = shl i32 %0, %10, !dbg !10373
  %12 = or i32 %11, %8, !dbg !10373
  store volatile i32 %12, i32* %4, align 4, !dbg !10373
  ret void, !dbg !10390
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10391 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10395, metadata !DIExpression()), !dbg !10400
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !10396, metadata !DIExpression()), !dbg !10400
  call void @llvm.dbg.value(metadata i32 %2, metadata !10397, metadata !DIExpression()), !dbg !10400
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10401
  %5 = icmp eq %struct._snode* %4, null, !dbg !10401
  br i1 %5, label %24, label %6, !dbg !10401

6:                                                ; preds = %3, %22
  %7 = phi %struct._snode* [ %8, %22 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #24, !dbg !10403
  %9 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10399, metadata !DIExpression()), !dbg !10400
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %9, metadata !10398, metadata !DIExpression()), !dbg !10400
  %10 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !10404
  %11 = bitcast %struct._snode* %10 to i32*, !dbg !10404
  %12 = load i32, i32* %11, align 4, !dbg !10404
  %13 = and i32 %12, %2, !dbg !10408
  %14 = icmp eq i32 %13, 0, !dbg !10408
  br i1 %14, label %22, label %15, !dbg !10409

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !10410
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !10410
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !10410
  %19 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %18, null, !dbg !10410
  br i1 %19, label %20, label %21, !dbg !10414

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.11.140, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.34.146, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.35.142, i32 0, i32 0), i32 noundef 77) #25, !dbg !10415
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.36.145, i32 0, i32 0)) #25, !dbg !10415
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.35.142, i32 0, i32 0), i32 noundef 77) #25, !dbg !10415
  unreachable, !dbg !10415

21:                                               ; preds = %15
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %9, i32 noundef %13) #25, !dbg !10417
  br label %22, !dbg !10418

22:                                               ; preds = %6, %21
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10398, metadata !DIExpression()), !dbg !10400
  %23 = icmp eq %struct._snode* %8, null, !dbg !10419
  br i1 %23, label %24, label %6, !dbg !10419

24:                                               ; preds = %22, %3
  ret void, !dbg !10420
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !10421 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10423, metadata !DIExpression()), !dbg !10424
  %2 = and i32 %0, 255, !dbg !10425
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !10425
  %4 = load volatile i32, i32* %3, align 4, !dbg !10425
  %5 = lshr i32 %0, 16, !dbg !10425
  %6 = and i32 %4, %5, !dbg !10425
  call void @llvm.dbg.value(metadata i32 %5, metadata !10374, metadata !DIExpression()) #23, !dbg !10426
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #28, !dbg !10428, !srcloc !10381
  call void @llvm.dbg.value(metadata i32 %7, metadata !10377, metadata !DIExpression()) #23, !dbg !10426
  call void @llvm.dbg.value(metadata i32 %7, metadata !10382, metadata !DIExpression()) #23, !dbg !10429
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !10431, !range !7591
  %9 = lshr i32 %6, %8, !dbg !10432
  ret i32 %9, !dbg !10433
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !10434 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10439, metadata !DIExpression()), !dbg !10441
  call void @llvm.dbg.value(metadata i32 %1, metadata !10440, metadata !DIExpression()), !dbg !10441
  %3 = shl i32 %1, 16, !dbg !10442
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !10442
  store volatile i32 %3, i32* %4, align 4, !dbg !10442
  ret void, !dbg !10443
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #15 !dbg !10444 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10448, metadata !DIExpression()), !dbg !10449
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10450
  %3 = load volatile i32, i32* %2, align 4, !dbg !10450
  ret i32 %3, !dbg !10451
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !10452 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10454, metadata !DIExpression()), !dbg !10456
  call void @llvm.dbg.value(metadata i32 %1, metadata !10455, metadata !DIExpression()), !dbg !10456
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10457
  store volatile i32 %1, i32* %3, align 4, !dbg !10457
  ret void, !dbg !10458
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #15 !dbg !10459 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10461, metadata !DIExpression()), !dbg !10462
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !10463
  %3 = load volatile i32, i32* %2, align 4, !dbg !10463
  ret i32 %3, !dbg !10464
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #9 !dbg !10465 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10469, metadata !DIExpression()), !dbg !10471
  call void @llvm.dbg.value(metadata i32* %1, metadata !10470, metadata !DIExpression()), !dbg !10471
  %3 = and i32 %0, 131072, !dbg !10472
  %4 = icmp eq i32 %3, 0, !dbg !10474
  br i1 %4, label %22, label %5, !dbg !10475

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !10476
  %6 = and i32 %0, 2, !dbg !10478
  %7 = icmp eq i32 %6, 0, !dbg !10480
  br i1 %7, label %11, label %8, !dbg !10481

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !10482
  %10 = icmp eq i32 %9, 0, !dbg !10482
  br i1 %10, label %33, label %11, !dbg !10485

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !10486
  store i32 %12, i32* %1, align 4, !dbg !10486
  %13 = and i32 %0, 16, !dbg !10487
  %14 = icmp eq i32 %13, 0, !dbg !10489
  br i1 %14, label %17, label %15, !dbg !10490

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !10491
  br label %31, !dbg !10493

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !10494
  %19 = icmp eq i32 %18, 0, !dbg !10496
  br i1 %19, label %33, label %20, !dbg !10497

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !10498
  br label %31, !dbg !10500

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !10501
  %24 = icmp eq i32 %23, 0, !dbg !10503
  br i1 %24, label %31, label %25, !dbg !10504

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !10505
  %27 = icmp eq i32 %26, 0, !dbg !10508
  br i1 %27, label %28, label %31, !dbg !10509

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !10510
  br label %33, !dbg !10511

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !10471
  ret i32 %34, !dbg !10511
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !10512 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10516, metadata !DIExpression()), !dbg !10527
  call void @llvm.dbg.value(metadata i32 %1, metadata !10517, metadata !DIExpression()), !dbg !10527
  call void @llvm.dbg.value(metadata i32 %2, metadata !10518, metadata !DIExpression()), !dbg !10527
  call void @llvm.dbg.value(metadata i32 %3, metadata !10519, metadata !DIExpression()), !dbg !10527
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10528
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10528
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10528
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10520, metadata !DIExpression()), !dbg !10527
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !10529
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !10529
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !10529
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !10521, metadata !DIExpression()), !dbg !10527
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #24, !dbg !10530
  call void @llvm.dbg.value(metadata i32 %11, metadata !10522, metadata !DIExpression()), !dbg !10527
  %12 = and i32 %2, 48, !dbg !10531
  call void @llvm.dbg.value(metadata i32 %12, metadata !10523, metadata !DIExpression()), !dbg !10527
  call void @llvm.dbg.value(metadata i32 %2, metadata !10524, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !10527
  call void @llvm.dbg.value(metadata i32 %2, metadata !10525, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !10527
  call void @llvm.dbg.value(metadata i32 %2, metadata !10526, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !10527
  %13 = lshr i32 %2, 6, !dbg !10532
  %14 = and i32 %13, 1, !dbg !10532
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #24, !dbg !10533
  %15 = lshr i32 %2, 7, !dbg !10534
  %16 = and i32 %15, 3, !dbg !10534
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #24, !dbg !10535
  %17 = lshr i32 %2, 9, !dbg !10536
  %18 = and i32 %17, 3, !dbg !10536
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #24, !dbg !10537
  %19 = icmp eq i32 %12, 32, !dbg !10538
  br i1 %19, label %20, label %24, !dbg !10540

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !10541
  br i1 %21, label %22, label %23, !dbg !10544

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !10545
  br label %24, !dbg !10547

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !10548
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !10550
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #24, !dbg !10551
  ret void, !dbg !10552
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #4 !dbg !10553 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10555, metadata !DIExpression()), !dbg !10557
  %2 = shl nuw i32 1, %0, !dbg !10558
  call void @llvm.dbg.value(metadata i32 %2, metadata !10556, metadata !DIExpression()), !dbg !10557
  ret i32 %2, !dbg !10559
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !10560 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10564, metadata !DIExpression()), !dbg !10567
  call void @llvm.dbg.value(metadata i32 %1, metadata !10565, metadata !DIExpression()), !dbg !10567
  call void @llvm.dbg.value(metadata i32 %2, metadata !10566, metadata !DIExpression()), !dbg !10567
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !10568
  %5 = load volatile i32, i32* %4, align 4, !dbg !10568
  %6 = xor i32 %1, -1, !dbg !10568
  %7 = and i32 %5, %6, !dbg !10568
  %8 = mul i32 %2, %1, !dbg !10568
  %9 = or i32 %7, %8, !dbg !10568
  store volatile i32 %9, i32* %4, align 4, !dbg !10568
  ret void, !dbg !10569
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10570 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10572, metadata !DIExpression()), !dbg !10575
  call void @llvm.dbg.value(metadata i32 %1, metadata !10573, metadata !DIExpression()), !dbg !10575
  call void @llvm.dbg.value(metadata i32 %2, metadata !10574, metadata !DIExpression()), !dbg !10575
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !10576
  %5 = load volatile i32, i32* %4, align 4, !dbg !10576
  call void @llvm.dbg.value(metadata i32 %1, metadata !10374, metadata !DIExpression()) #23, !dbg !10577
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10579, !srcloc !10381
  call void @llvm.dbg.value(metadata i32 %6, metadata !10377, metadata !DIExpression()) #23, !dbg !10577
  call void @llvm.dbg.value(metadata i32 %6, metadata !10382, metadata !DIExpression()) #23, !dbg !10580
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10582, !range !7591
  %8 = shl nuw nsw i32 %7, 1, !dbg !10576
  %9 = shl i32 3, %8, !dbg !10576
  %10 = xor i32 %9, -1, !dbg !10576
  %11 = and i32 %5, %10, !dbg !10576
  call void @llvm.dbg.value(metadata i32 %1, metadata !10374, metadata !DIExpression()) #23, !dbg !10583
  call void @llvm.dbg.value(metadata i32 %6, metadata !10377, metadata !DIExpression()) #23, !dbg !10583
  call void @llvm.dbg.value(metadata i32 %6, metadata !10382, metadata !DIExpression()) #23, !dbg !10585
  %12 = shl i32 %2, %8, !dbg !10576
  %13 = or i32 %11, %12, !dbg !10576
  store volatile i32 %13, i32* %4, align 4, !dbg !10576
  ret void, !dbg !10587
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10588 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10590, metadata !DIExpression()), !dbg !10593
  call void @llvm.dbg.value(metadata i32 %1, metadata !10591, metadata !DIExpression()), !dbg !10593
  call void @llvm.dbg.value(metadata i32 %2, metadata !10592, metadata !DIExpression()), !dbg !10593
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !10594
  %5 = load volatile i32, i32* %4, align 4, !dbg !10594
  call void @llvm.dbg.value(metadata i32 %1, metadata !10374, metadata !DIExpression()) #23, !dbg !10595
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10597, !srcloc !10381
  call void @llvm.dbg.value(metadata i32 %6, metadata !10377, metadata !DIExpression()) #23, !dbg !10595
  call void @llvm.dbg.value(metadata i32 %6, metadata !10382, metadata !DIExpression()) #23, !dbg !10598
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10600, !range !7591
  %8 = shl nuw nsw i32 %7, 1, !dbg !10594
  %9 = shl i32 3, %8, !dbg !10594
  %10 = xor i32 %9, -1, !dbg !10594
  %11 = and i32 %5, %10, !dbg !10594
  call void @llvm.dbg.value(metadata i32 %1, metadata !10374, metadata !DIExpression()) #23, !dbg !10601
  call void @llvm.dbg.value(metadata i32 %6, metadata !10377, metadata !DIExpression()) #23, !dbg !10601
  call void @llvm.dbg.value(metadata i32 %6, metadata !10382, metadata !DIExpression()) #23, !dbg !10603
  %12 = shl i32 %2, %8, !dbg !10594
  %13 = or i32 %11, %12, !dbg !10594
  store volatile i32 %13, i32* %4, align 4, !dbg !10594
  ret void, !dbg !10605
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10606 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10608, metadata !DIExpression()), !dbg !10611
  call void @llvm.dbg.value(metadata i32 %1, metadata !10609, metadata !DIExpression()), !dbg !10611
  call void @llvm.dbg.value(metadata i32 %2, metadata !10610, metadata !DIExpression()), !dbg !10611
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !10612
  %5 = load volatile i32, i32* %4, align 4, !dbg !10612
  call void @llvm.dbg.value(metadata i32 %1, metadata !10374, metadata !DIExpression()) #23, !dbg !10613
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10615, !srcloc !10381
  call void @llvm.dbg.value(metadata i32 %6, metadata !10377, metadata !DIExpression()) #23, !dbg !10613
  call void @llvm.dbg.value(metadata i32 %6, metadata !10382, metadata !DIExpression()) #23, !dbg !10616
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10618, !range !7591
  %8 = shl nuw nsw i32 %7, 2, !dbg !10612
  %9 = shl i32 15, %8, !dbg !10612
  %10 = xor i32 %9, -1, !dbg !10612
  %11 = and i32 %5, %10, !dbg !10612
  call void @llvm.dbg.value(metadata i32 %1, metadata !10374, metadata !DIExpression()) #23, !dbg !10619
  call void @llvm.dbg.value(metadata i32 %6, metadata !10377, metadata !DIExpression()) #23, !dbg !10619
  call void @llvm.dbg.value(metadata i32 %6, metadata !10382, metadata !DIExpression()) #23, !dbg !10621
  %12 = shl i32 %2, %8, !dbg !10612
  %13 = or i32 %11, %12, !dbg !10612
  store volatile i32 %13, i32* %4, align 4, !dbg !10612
  ret void, !dbg !10623
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10624 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10626, metadata !DIExpression()), !dbg !10629
  call void @llvm.dbg.value(metadata i32 %1, metadata !10627, metadata !DIExpression()), !dbg !10629
  call void @llvm.dbg.value(metadata i32 %2, metadata !10628, metadata !DIExpression()), !dbg !10629
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !10630
  %5 = load volatile i32, i32* %4, align 4, !dbg !10630
  %6 = lshr i32 %1, 8, !dbg !10630
  call void @llvm.dbg.value(metadata i32 %6, metadata !10374, metadata !DIExpression()) #23, !dbg !10631
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !10633, !srcloc !10381
  call void @llvm.dbg.value(metadata i32 %7, metadata !10377, metadata !DIExpression()) #23, !dbg !10631
  call void @llvm.dbg.value(metadata i32 %7, metadata !10382, metadata !DIExpression()) #23, !dbg !10634
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !10636, !range !7591
  %9 = shl nuw nsw i32 %8, 2, !dbg !10630
  %10 = shl i32 15, %9, !dbg !10630
  %11 = xor i32 %10, -1, !dbg !10630
  %12 = and i32 %5, %11, !dbg !10630
  call void @llvm.dbg.value(metadata i32 %6, metadata !10374, metadata !DIExpression()) #23, !dbg !10637
  call void @llvm.dbg.value(metadata i32 %7, metadata !10377, metadata !DIExpression()) #23, !dbg !10637
  call void @llvm.dbg.value(metadata i32 %7, metadata !10382, metadata !DIExpression()) #23, !dbg !10639
  %13 = shl i32 %2, %9, !dbg !10630
  %14 = or i32 %12, %13, !dbg !10630
  store volatile i32 %14, i32* %4, align 4, !dbg !10630
  ret void, !dbg !10641
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10642 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10644, metadata !DIExpression()), !dbg !10647
  call void @llvm.dbg.value(metadata i32 %1, metadata !10645, metadata !DIExpression()), !dbg !10647
  call void @llvm.dbg.value(metadata i32 %2, metadata !10646, metadata !DIExpression()), !dbg !10647
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !10648
  %5 = load volatile i32, i32* %4, align 4, !dbg !10648
  call void @llvm.dbg.value(metadata i32 %1, metadata !10374, metadata !DIExpression()) #23, !dbg !10649
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10651, !srcloc !10381
  call void @llvm.dbg.value(metadata i32 %6, metadata !10377, metadata !DIExpression()) #23, !dbg !10649
  call void @llvm.dbg.value(metadata i32 %6, metadata !10382, metadata !DIExpression()) #23, !dbg !10652
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10654, !range !7591
  %8 = shl nuw nsw i32 %7, 1, !dbg !10648
  %9 = shl i32 3, %8, !dbg !10648
  %10 = xor i32 %9, -1, !dbg !10648
  %11 = and i32 %5, %10, !dbg !10648
  call void @llvm.dbg.value(metadata i32 %1, metadata !10374, metadata !DIExpression()) #23, !dbg !10655
  call void @llvm.dbg.value(metadata i32 %6, metadata !10377, metadata !DIExpression()) #23, !dbg !10655
  call void @llvm.dbg.value(metadata i32 %6, metadata !10382, metadata !DIExpression()) #23, !dbg !10657
  %12 = shl i32 %2, %8, !dbg !10648
  %13 = or i32 %11, %12, !dbg !10648
  store volatile i32 %13, i32* %4, align 4, !dbg !10648
  ret void, !dbg !10659
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !10660 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10662, metadata !DIExpression()), !dbg !10665
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10666
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !10666
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !10666
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !10663, metadata !DIExpression()), !dbg !10665
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !10667
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !10668
  %6 = tail call fastcc zeroext i1 @device_is_ready.158() #24, !dbg !10669
  br i1 %6, label %7, label %11, !dbg !10671

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #24, !dbg !10672
  call void @llvm.dbg.value(metadata i32 %8, metadata !10664, metadata !DIExpression()), !dbg !10665
  %9 = icmp slt i32 %8, 0, !dbg !10673
  %10 = select i1 %9, i32 %8, i32 0, !dbg !10675
  br label %11, !dbg !10675

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !10665
  ret i32 %12, !dbg !10676
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.158() unnamed_addr #1 !dbg !10677 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10681, metadata !DIExpression()), !dbg !10682
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10683, !srcloc !10685
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.159() #24, !dbg !10686
  ret i1 %1, !dbg !10687
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef readonly %0) unnamed_addr #1 !dbg !10688 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10692, metadata !DIExpression()), !dbg !10697
  call void @llvm.dbg.value(metadata i8 1, metadata !10693, metadata !DIExpression()), !dbg !10697
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10698
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !10698
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !10698
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !10694, metadata !DIExpression()), !dbg !10697
  call void @llvm.dbg.value(metadata i32 0, metadata !10695, metadata !DIExpression()), !dbg !10697
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10696, metadata !DIExpression()), !dbg !10697
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !10699
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !10702
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #24, !dbg !10703
  call void @llvm.dbg.value(metadata i32 %7, metadata !10695, metadata !DIExpression()), !dbg !10697
  ret i32 %7, !dbg !10704
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.159() unnamed_addr #1 !dbg !10705 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10707, metadata !DIExpression()), !dbg !10708
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #25, !dbg !10709
  ret i1 %1, !dbg !10710
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !10711 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10715, metadata !DIExpression()), !dbg !10723
  call void @llvm.dbg.value(metadata i32 %1, metadata !10716, metadata !DIExpression()), !dbg !10723
  call void @llvm.dbg.value(metadata i32 %2, metadata !10717, metadata !DIExpression()), !dbg !10723
  call void @llvm.dbg.value(metadata i32 %3, metadata !10718, metadata !DIExpression()), !dbg !10723
  call void @llvm.dbg.value(metadata i32 0, metadata !10719, metadata !DIExpression()), !dbg !10723
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #24, !dbg !10724
  %5 = icmp eq i32 %3, 17, !dbg !10725
  br i1 %5, label %6, label %14, !dbg !10726

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !10727
  call void @llvm.dbg.value(metadata i32 %7, metadata !10720, metadata !DIExpression()), !dbg !10728
  %8 = icmp eq i32 %7, 0, !dbg !10729
  %9 = shl nuw i32 1, %1, !dbg !10731
  br i1 %8, label %12, label %10, !dbg !10732

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !10733
  br label %14, !dbg !10735

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !10736
  br label %14, !dbg !10739

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !10740
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #19 !dbg !10741 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10743, metadata !DIExpression()), !dbg !10747
  call void @llvm.dbg.value(metadata i8* %1, metadata !10744, metadata !DIExpression()), !dbg !10747
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10748
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10748
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10748
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10745, metadata !DIExpression()), !dbg !10747
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10749
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10749
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #24, !dbg !10751
  %9 = icmp eq i32 %8, 0, !dbg !10751
  br i1 %9, label %12, label %10, !dbg !10752

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10753
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #24, !dbg !10755
  br label %12, !dbg !10756

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10757
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #24, !dbg !10759
  %15 = icmp eq i32 %14, 0, !dbg !10759
  br i1 %15, label %19, label %16, !dbg !10760

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10761
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #24, !dbg !10762
  store i8 %18, i8* %1, align 1, !dbg !10763
  br label %19, !dbg !10764

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !10747
  ret i32 %20, !dbg !10765
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !10766 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10768, metadata !DIExpression()), !dbg !10772
  call void @llvm.dbg.value(metadata i8 %1, metadata !10769, metadata !DIExpression()), !dbg !10772
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10773
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10773
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10773
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10770, metadata !DIExpression()), !dbg !10772
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !10774

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10775
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #24, !dbg !10778
  %10 = icmp eq i32 %9, 0, !dbg !10778
  br i1 %10, label %18, label %11, !dbg !10779

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10780, !srcloc !10787
  call void @llvm.dbg.value(metadata i32 undef, metadata !10783, metadata !DIExpression()) #23, !dbg !10788
  call void @llvm.dbg.value(metadata i32 undef, metadata !10784, metadata !DIExpression()) #23, !dbg !10788
  call void @llvm.dbg.value(metadata i32 undef, metadata !10771, metadata !DIExpression()), !dbg !10772
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10789
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #24, !dbg !10791
  %15 = icmp eq i32 %14, 0, !dbg !10791
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !10780
  br i1 %15, label %17, label %19, !dbg !10792

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !10783, metadata !DIExpression()) #23, !dbg !10788
  call void @llvm.dbg.value(metadata i32 %16, metadata !10771, metadata !DIExpression()), !dbg !10772
  call void @llvm.dbg.value(metadata i32 undef, metadata !10793, metadata !DIExpression()) #23, !dbg !10796
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !10798, !srcloc !10799
  br label %18, !dbg !10800

18:                                               ; preds = %17, %7
  br label %7, !dbg !10775, !llvm.loop !10801

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !10780
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10803
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #24, !dbg !10804
  call void @llvm.dbg.value(metadata i32 %20, metadata !10793, metadata !DIExpression()) #23, !dbg !10805
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !10807, !srcloc !10799
  ret void, !dbg !10808
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #19 !dbg !10809 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10811, metadata !DIExpression()), !dbg !10814
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10815
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10815
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10815
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10812, metadata !DIExpression()), !dbg !10814
  call void @llvm.dbg.value(metadata i32 0, metadata !10813, metadata !DIExpression()), !dbg !10814
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10816
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10816
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #24, !dbg !10818
  %8 = icmp ne i32 %7, 0, !dbg !10818
  %9 = zext i1 %8 to i32, !dbg !10819
  call void @llvm.dbg.value(metadata i32 %9, metadata !10813, metadata !DIExpression()), !dbg !10814
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10820
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #24, !dbg !10822
  %12 = icmp eq i32 %11, 0, !dbg !10822
  %13 = or i32 %9, 2, !dbg !10823
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !10823
  call void @llvm.dbg.value(metadata i32 %14, metadata !10813, metadata !DIExpression()), !dbg !10814
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10824
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #24, !dbg !10826
  %17 = icmp eq i32 %16, 0, !dbg !10826
  %18 = or i32 %14, 4, !dbg !10827
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !10827
  call void @llvm.dbg.value(metadata i32 %19, metadata !10813, metadata !DIExpression()), !dbg !10814
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10828
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #24, !dbg !10830
  %22 = icmp eq i32 %21, 0, !dbg !10830
  %23 = or i32 %19, 8, !dbg !10831
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !10831
  call void @llvm.dbg.value(metadata i32 %24, metadata !10813, metadata !DIExpression()), !dbg !10814
  %25 = and i32 %24, 8, !dbg !10832
  %26 = icmp eq i32 %25, 0, !dbg !10832
  br i1 %26, label %29, label %27, !dbg !10834

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10835
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #24, !dbg !10837
  br label %29, !dbg !10838

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !10839
  %31 = icmp eq i32 %30, 0, !dbg !10839
  br i1 %31, label %34, label %32, !dbg !10841

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10842
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #24, !dbg !10844
  br label %34, !dbg !10845

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !10846
  %36 = icmp eq i32 %35, 0, !dbg !10846
  br i1 %36, label %39, label %37, !dbg !10848

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10849
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #24, !dbg !10851
  br label %39, !dbg !10852

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !10853
  %41 = icmp eq i32 %40, 0, !dbg !10853
  br i1 %41, label %44, label %42, !dbg !10855

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10856
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #24, !dbg !10858
  br label %44, !dbg !10859

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10860
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #24, !dbg !10861
  ret i32 %24, !dbg !10862
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !10863 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10865, metadata !DIExpression()), !dbg !10874
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10866, metadata !DIExpression()), !dbg !10874
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10875
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10875
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10875
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10867, metadata !DIExpression()), !dbg !10874
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10876
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !10876
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !10876
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !10868, metadata !DIExpression()), !dbg !10874
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10877
  %10 = load i8, i8* %9, align 4, !dbg !10877
  %11 = zext i8 %10 to i32, !dbg !10878
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #24, !dbg !10879
  call void @llvm.dbg.value(metadata i32 %12, metadata !10870, metadata !DIExpression()), !dbg !10874
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10880
  %14 = load i8, i8* %13, align 1, !dbg !10880
  %15 = zext i8 %14 to i32, !dbg !10881
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #24, !dbg !10882
  call void @llvm.dbg.value(metadata i32 %16, metadata !10871, metadata !DIExpression()), !dbg !10874
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10883
  %18 = load i8, i8* %17, align 2, !dbg !10883
  %19 = zext i8 %18 to i32, !dbg !10884
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #24, !dbg !10885
  call void @llvm.dbg.value(metadata i32 %20, metadata !10872, metadata !DIExpression()), !dbg !10874
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10886
  %22 = load i8, i8* %21, align 1, !dbg !10886
  %23 = zext i8 %22 to i32, !dbg !10887
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #24, !dbg !10888
  call void @llvm.dbg.value(metadata i32 %24, metadata !10873, metadata !DIExpression()), !dbg !10874
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !10889

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !10891
  br i1 %26, label %69, label %27, !dbg !10893

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !10894

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !10895
  br i1 %29, label %65, label %30, !dbg !10895

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !10897
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !10874
  br i1 %31, label %38, label %34, !dbg !10899

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !10900
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
    i32 1073812480, label %36
  ], !dbg !10900

36:                                               ; preds = %34, %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !10903
  br i1 %37, label %38, label %69, !dbg !10904

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10905
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #24, !dbg !10906
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #24, !dbg !10907
  %41 = icmp eq i32 %12, %40, !dbg !10909
  br i1 %41, label %43, label %42, !dbg !10910

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #24, !dbg !10911
  br label %43, !dbg !10913

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #24, !dbg !10914
  %45 = icmp eq i32 %16, %44, !dbg !10916
  br i1 %45, label %47, label %46, !dbg !10917

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #24, !dbg !10918
  br label %47, !dbg !10920

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #24, !dbg !10921
  %49 = icmp eq i32 %20, %48, !dbg !10923
  br i1 %49, label %51, label %50, !dbg !10924

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #24, !dbg !10925
  br label %51, !dbg !10927

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #24, !dbg !10928
  %53 = icmp eq i32 %24, %52, !dbg !10930
  br i1 %53, label %55, label %54, !dbg !10931

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #24, !dbg !10932
  br label %55, !dbg !10934

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10935
  %57 = load i32, i32* %56, align 4, !dbg !10935
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !10937
  %59 = load i32, i32* %58, align 4, !dbg !10937
  %60 = icmp eq i32 %57, %59, !dbg !10938
  br i1 %60, label %63, label %61, !dbg !10939

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #24, !dbg !10940
  %62 = load i32, i32* %56, align 4, !dbg !10942
  store i32 %62, i32* %58, align 4, !dbg !10943
  br label %63, !dbg !10944

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !10945
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #24, !dbg !10946
  br label %69, !dbg !10947

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !10895
  %67 = and i8 %66, 1, !dbg !10895
  %68 = icmp eq i8 %67, 0, !dbg !10895
  br i1 %68, label %30, label %69, !dbg !10895

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !10874
  ret i32 %70, !dbg !10948
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #20 !dbg !10949 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10951, metadata !DIExpression()), !dbg !10954
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10952, metadata !DIExpression()), !dbg !10954
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10955
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !10955
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !10955
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !10953, metadata !DIExpression()), !dbg !10954
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !10956
  %7 = load i32, i32* %6, align 4, !dbg !10956
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10957
  store i32 %7, i32* %8, align 4, !dbg !10958
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !10959, !range !10960
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #24, !dbg !10961
  %11 = trunc i32 %10 to i8, !dbg !10961
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10962
  store i8 %11, i8* %12, align 4, !dbg !10963
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #24, !dbg !10964, !range !10965
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #24, !dbg !10966
  %15 = trunc i32 %14 to i8, !dbg !10966
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10967
  store i8 %15, i8* %16, align 1, !dbg !10968
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #24, !dbg !10969
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !10970, !range !10960
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #24, !dbg !10971
  %20 = trunc i32 %19 to i8, !dbg !10971
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10972
  store i8 %20, i8* %21, align 2, !dbg !10973
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #24, !dbg !10974, !range !10975
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #24, !dbg !10976
  %24 = trunc i32 %23 to i8, !dbg !10976
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10977
  store i8 %24, i8* %25, align 1, !dbg !10978
  ret i32 0, !dbg !10979
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10980 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10984, metadata !DIExpression()), !dbg !10986
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10987
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10987
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10987
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10985, metadata !DIExpression()), !dbg !10986
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10988
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10988
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #24, !dbg !10989
  ret i32 %7, !dbg !10990
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #4 !dbg !10991 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10995, metadata !DIExpression()), !dbg !10996
  %2 = icmp eq i32 %0, 1024, !dbg !10997
  %3 = select i1 %2, i32 2, i32 0, !dbg !10997
  %4 = icmp eq i32 %0, 1536, !dbg !10997
  %5 = select i1 %4, i32 1, i32 %3, !dbg !10997
  ret i32 %5, !dbg !10998
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10999 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11001, metadata !DIExpression()), !dbg !11003
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11004
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11004
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11004
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11002, metadata !DIExpression()), !dbg !11003
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11005
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11005
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #24, !dbg !11006
  ret i32 %7, !dbg !11007
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #11 !dbg !11008 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11012, metadata !DIExpression()), !dbg !11013
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !11014
  %3 = icmp ult i32 %2, 4, !dbg !11014
  br i1 %3, label %4, label %7, !dbg !11014

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !11014
  %6 = load i32, i32* %5, align 4, !dbg !11014
  br label %7, !dbg !11014

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !11015
  ret i32 %8, !dbg !11017
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !11018 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11020, metadata !DIExpression()), !dbg !11022
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11023
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11023
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11023
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11021, metadata !DIExpression()), !dbg !11022
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11024
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11024
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #24, !dbg !11025
  ret i32 %7, !dbg !11026
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !11027 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11031, metadata !DIExpression()), !dbg !11033
  call void @llvm.dbg.value(metadata i32 %1, metadata !11032, metadata !DIExpression()), !dbg !11033
  %3 = icmp eq i32 %0, 4096, !dbg !11034
  %4 = icmp eq i32 %1, 0, !dbg !11034
  %5 = select i1 %4, i32 4, i32 3, !dbg !11034
  %6 = select i1 %4, i32 3, i32 2, !dbg !11034
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !11034
  ret i32 %7, !dbg !11035
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !11036 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11038, metadata !DIExpression()), !dbg !11040
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11041
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11041
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11041
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11039, metadata !DIExpression()), !dbg !11040
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11042
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11042
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #24, !dbg !11043
  ret i32 %7, !dbg !11044
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #4 !dbg !11045 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11049, metadata !DIExpression()), !dbg !11050
  %2 = icmp eq i32 %0, 768, !dbg !11051
  %3 = zext i1 %2 to i32, !dbg !11050
  ret i32 %3, !dbg !11053
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11054 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11059, metadata !DIExpression()), !dbg !11060
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11061
  %3 = load volatile i32, i32* %2, align 4, !dbg !11061
  %4 = and i32 %3, 768, !dbg !11061
  ret i32 %4, !dbg !11062
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11063 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11065, metadata !DIExpression()), !dbg !11066
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11067
  %3 = load volatile i32, i32* %2, align 4, !dbg !11067
  %4 = and i32 %3, 4096, !dbg !11067
  ret i32 %4, !dbg !11068
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11069 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11071, metadata !DIExpression()), !dbg !11072
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11073
  %3 = load volatile i32, i32* %2, align 4, !dbg !11073
  %4 = and i32 %3, 12288, !dbg !11073
  ret i32 %4, !dbg !11074
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11075 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11077, metadata !DIExpression()), !dbg !11078
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11079
  %3 = load volatile i32, i32* %2, align 4, !dbg !11079
  %4 = and i32 %3, 1536, !dbg !11079
  ret i32 %4, !dbg !11080
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #4 !dbg !11081 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11085, metadata !DIExpression()), !dbg !11086
  %2 = icmp eq i32 %0, 2, !dbg !11087
  %3 = select i1 %2, i32 1024, i32 0, !dbg !11087
  %4 = icmp eq i32 %0, 1, !dbg !11087
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !11087
  ret i32 %5, !dbg !11088
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #4 !dbg !11089 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11093, metadata !DIExpression()), !dbg !11094
  %2 = icmp ult i32 %0, 3, !dbg !11095
  br i1 %2, label %3, label %6, !dbg !11095

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !11095
  %5 = load i32, i32* %4, align 4, !dbg !11095
  br label %6, !dbg !11095

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !11096
  ret i32 %7, !dbg !11098
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !11099 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11103, metadata !DIExpression()), !dbg !11105
  call void @llvm.dbg.value(metadata i32 %1, metadata !11104, metadata !DIExpression()), !dbg !11105
  %3 = icmp eq i32 %0, 4, !dbg !11106
  %4 = icmp eq i32 %1, 0, !dbg !11106
  %5 = select i1 %4, i32 0, i32 4096, !dbg !11106
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !11106
  ret i32 %6, !dbg !11107
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #4 !dbg !11108 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11112, metadata !DIExpression()), !dbg !11113
  %2 = icmp eq i32 %0, 1, !dbg !11114
  %3 = select i1 %2, i32 768, i32 0, !dbg !11113
  ret i32 %3, !dbg !11116
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !11117 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11121, metadata !DIExpression()), !dbg !11122
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11123
  %3 = load volatile i32, i32* %2, align 4, !dbg !11123
  %4 = and i32 %3, -8193, !dbg !11123
  store volatile i32 %4, i32* %2, align 4, !dbg !11123
  ret void, !dbg !11124
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !11125 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11129, metadata !DIExpression()), !dbg !11132
  call void @llvm.dbg.value(metadata i32 %1, metadata !11130, metadata !DIExpression()), !dbg !11132
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11133
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11133
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11133
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11131, metadata !DIExpression()), !dbg !11132
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11134
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11134
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11135
  ret void, !dbg !11136
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !11137 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11139, metadata !DIExpression()), !dbg !11142
  call void @llvm.dbg.value(metadata i32 %1, metadata !11140, metadata !DIExpression()), !dbg !11142
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11143
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11143
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11143
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11141, metadata !DIExpression()), !dbg !11142
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11144
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11144
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11145
  ret void, !dbg !11146
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !11147 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11149, metadata !DIExpression()), !dbg !11152
  call void @llvm.dbg.value(metadata i32 %1, metadata !11150, metadata !DIExpression()), !dbg !11152
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11153
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11153
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11153
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11151, metadata !DIExpression()), !dbg !11152
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11154
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11154
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11155
  ret void, !dbg !11156
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !11157 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11159, metadata !DIExpression()), !dbg !11162
  call void @llvm.dbg.value(metadata i32 %1, metadata !11160, metadata !DIExpression()), !dbg !11162
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11163
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11163
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11163
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11161, metadata !DIExpression()), !dbg !11162
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11164
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11164
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11165
  ret void, !dbg !11166
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !11167 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11169, metadata !DIExpression()), !dbg !11174
  call void @llvm.dbg.value(metadata i32 %1, metadata !11170, metadata !DIExpression()), !dbg !11174
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11175
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !11175
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !11175
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !11171, metadata !DIExpression()), !dbg !11174
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11176
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !11176
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !11176
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !11172, metadata !DIExpression()), !dbg !11174
  %10 = bitcast i32* %3 to i8*, !dbg !11177
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !11177
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !11178
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !11178
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !11182
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !11182
  %15 = load i8*, i8** %14, align 4, !dbg !11182
  call void @llvm.dbg.value(metadata i32* %3, metadata !11173, metadata !DIExpression(DW_OP_deref)), !dbg !11174
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #24, !dbg !11183
  %17 = icmp slt i32 %16, 0, !dbg !11184
  br i1 %17, label %18, label %21, !dbg !11185

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.162(i32 noundef 1) #24, !dbg !11186
  %20 = zext i8 %19 to i32, !dbg !11186
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.6.163, i32 0, i32 0), i32 noundef %20) #25, !dbg !11186
  br label %31, !dbg !11192

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !11193
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11193
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #24, !dbg !11194
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11195
  %25 = load i32, i32* %3, align 4, !dbg !11196
  call void @llvm.dbg.value(metadata i32 %25, metadata !11173, metadata !DIExpression()), !dbg !11174
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #24, !dbg !11197
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11198
  %27 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %26, i32 0, i32 2, !dbg !11198
  %28 = load volatile i32, i32* %27, align 4, !dbg !11198
  %29 = icmp ugt i32 %28, 16, !dbg !11198
  br i1 %29, label %31, label %30, !dbg !11201

30:                                               ; preds = %21
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.164, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8.165, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.9.166, i32 0, i32 0), i32 noundef 190) #25, !dbg !11202
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.10.167, i32 0, i32 0)) #25, !dbg !11202
  call void @assert_post_action(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.9.166, i32 0, i32 0), i32 noundef 190) #25, !dbg !11202
  unreachable, !dbg !11202

31:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !11204
  ret void, !dbg !11204
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !11205 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11207, metadata !DIExpression()), !dbg !11208
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11209
  %3 = load volatile i32, i32* %2, align 4, !dbg !11209
  %4 = or i32 %3, 8192, !dbg !11209
  store volatile i32 %4, i32* %2, align 4, !dbg !11209
  ret void, !dbg !11210
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !11211 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11213, metadata !DIExpression()), !dbg !11217
  call void @llvm.dbg.value(metadata i8* %1, metadata !11214, metadata !DIExpression()), !dbg !11217
  call void @llvm.dbg.value(metadata i32* %2, metadata !11215, metadata !DIExpression()), !dbg !11217
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11218
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !11218
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !11218
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !11216, metadata !DIExpression()), !dbg !11217
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !11219
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !11219
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !11221
  br i1 %9, label %12, label %10, !dbg !11222

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #25, !dbg !11223
  br label %12, !dbg !11224

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !11217
  ret i32 %13, !dbg !11225
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.162(i32 noundef %0) unnamed_addr #4 !dbg !11226 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11228, metadata !DIExpression()), !dbg !11229
  %2 = icmp eq i32 %0, 2, !dbg !11230
  %3 = select i1 %2, i8 87, i8 63, !dbg !11230
  %4 = icmp eq i32 %0, 1, !dbg !11230
  %5 = select i1 %4, i8 69, i8 %3, !dbg !11230
  ret i8 %5, !dbg !11231
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !11232 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11236, metadata !DIExpression()), !dbg !11238
  call void @llvm.dbg.value(metadata i32 0, metadata !11237, metadata !DIExpression()), !dbg !11238
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11239
  %3 = load volatile i32, i32* %2, align 4, !dbg !11239
  %4 = and i32 %3, -32769, !dbg !11239
  store volatile i32 %4, i32* %2, align 4, !dbg !11239
  ret void, !dbg !11240
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !11241 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11245, metadata !DIExpression()), !dbg !11249
  call void @llvm.dbg.value(metadata i32 %1, metadata !11246, metadata !DIExpression()), !dbg !11249
  call void @llvm.dbg.value(metadata i32 0, metadata !11247, metadata !DIExpression()), !dbg !11249
  call void @llvm.dbg.value(metadata i32 %2, metadata !11248, metadata !DIExpression()), !dbg !11249
  %4 = zext i32 %1 to i64, !dbg !11250
  %5 = mul nuw nsw i64 %4, 25, !dbg !11250
  %6 = zext i32 %2 to i64, !dbg !11250
  %7 = shl nuw nsw i64 %6, 2, !dbg !11250
  %8 = udiv i64 %5, %7, !dbg !11250
  %9 = trunc i64 %8 to i32, !dbg !11250
  %10 = udiv i32 %9, 100, !dbg !11250
  %11 = shl nuw nsw i32 %10, 4, !dbg !11250
  %12 = mul i32 %10, -100, !dbg !11250
  %13 = add i32 %12, %9, !dbg !11250
  %14 = shl i32 %13, 4, !dbg !11250
  %15 = add i32 %14, 50, !dbg !11250
  %16 = udiv i32 %15, 100, !dbg !11250
  %17 = and i32 %16, 240, !dbg !11250
  %18 = add nuw nsw i32 %17, %11, !dbg !11250
  %19 = and i32 %16, 15, !dbg !11250
  %20 = and i32 %18, 65520, !dbg !11253
  %21 = or i32 %20, %19, !dbg !11253
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !11254
  store volatile i32 %21, i32* %22, align 4, !dbg !11255
  ret void, !dbg !11256
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !11257 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11259, metadata !DIExpression()), !dbg !11261
  call void @llvm.dbg.value(metadata i32 %1, metadata !11260, metadata !DIExpression()), !dbg !11261
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11262
  %4 = load volatile i32, i32* %3, align 4, !dbg !11262
  %5 = and i32 %4, -769, !dbg !11262
  %6 = or i32 %5, %1, !dbg !11262
  store volatile i32 %6, i32* %3, align 4, !dbg !11262
  ret void, !dbg !11263
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !11264 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11266, metadata !DIExpression()), !dbg !11268
  call void @llvm.dbg.value(metadata i32 %1, metadata !11267, metadata !DIExpression()), !dbg !11268
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11269
  %4 = load volatile i32, i32* %3, align 4, !dbg !11269
  %5 = and i32 %4, -4097, !dbg !11269
  %6 = or i32 %5, %1, !dbg !11269
  store volatile i32 %6, i32* %3, align 4, !dbg !11269
  ret void, !dbg !11270
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !11271 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11273, metadata !DIExpression()), !dbg !11275
  call void @llvm.dbg.value(metadata i32 %1, metadata !11274, metadata !DIExpression()), !dbg !11275
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11276
  %4 = load volatile i32, i32* %3, align 4, !dbg !11276
  %5 = and i32 %4, -12289, !dbg !11276
  %6 = or i32 %5, %1, !dbg !11276
  store volatile i32 %6, i32* %3, align 4, !dbg !11276
  ret void, !dbg !11277
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !11278 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11280, metadata !DIExpression()), !dbg !11282
  call void @llvm.dbg.value(metadata i32 %1, metadata !11281, metadata !DIExpression()), !dbg !11282
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11283
  %4 = load volatile i32, i32* %3, align 4, !dbg !11283
  %5 = and i32 %4, -1537, !dbg !11283
  %6 = or i32 %5, %1, !dbg !11283
  store volatile i32 %6, i32* %3, align 4, !dbg !11283
  ret void, !dbg !11284
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11285 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11287, metadata !DIExpression()), !dbg !11288
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11289
  %3 = load volatile i32, i32* %2, align 4, !dbg !11289
  %4 = lshr i32 %3, 3, !dbg !11290
  %5 = and i32 %4, 1, !dbg !11290
  ret i32 %5, !dbg !11291
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11292 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11294, metadata !DIExpression()), !dbg !11295
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11296
  %3 = load volatile i32, i32* %2, align 4, !dbg !11296
  %4 = and i32 %3, 1, !dbg !11296
  ret i32 %4, !dbg !11297
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11298 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11300, metadata !DIExpression()), !dbg !11301
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11302
  %3 = load volatile i32, i32* %2, align 4, !dbg !11302
  %4 = lshr i32 %3, 1, !dbg !11303
  %5 = and i32 %4, 1, !dbg !11303
  ret i32 %5, !dbg !11304
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11305 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11307, metadata !DIExpression()), !dbg !11308
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11309
  %3 = load volatile i32, i32* %2, align 4, !dbg !11309
  %4 = lshr i32 %3, 8, !dbg !11310
  %5 = and i32 %4, 1, !dbg !11310
  ret i32 %5, !dbg !11311
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !11312 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11314, metadata !DIExpression()), !dbg !11315
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11316
  store volatile i32 -257, i32* %2, align 4, !dbg !11316
  ret void, !dbg !11317
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11318 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11320, metadata !DIExpression()), !dbg !11322
  %3 = bitcast i32* %2 to i8*, !dbg !11323
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11323
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11321, metadata !DIExpression()), !dbg !11324
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11325
  %5 = load volatile i32, i32* %4, align 4, !dbg !11325
  store volatile i32 %5, i32* %2, align 4, !dbg !11326
  %6 = load volatile i32, i32* %2, align 4, !dbg !11327
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11328
  %8 = load volatile i32, i32* %7, align 4, !dbg !11328
  store volatile i32 %8, i32* %2, align 4, !dbg !11329
  %9 = load volatile i32, i32* %2, align 4, !dbg !11330
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11331
  ret void, !dbg !11331
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11332 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11334, metadata !DIExpression()), !dbg !11336
  %3 = bitcast i32* %2 to i8*, !dbg !11337
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11337
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11335, metadata !DIExpression()), !dbg !11338
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11339
  %5 = load volatile i32, i32* %4, align 4, !dbg !11339
  store volatile i32 %5, i32* %2, align 4, !dbg !11340
  %6 = load volatile i32, i32* %2, align 4, !dbg !11341
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11342
  %8 = load volatile i32, i32* %7, align 4, !dbg !11342
  store volatile i32 %8, i32* %2, align 4, !dbg !11343
  %9 = load volatile i32, i32* %2, align 4, !dbg !11344
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11345
  ret void, !dbg !11345
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11346 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11348, metadata !DIExpression()), !dbg !11350
  %3 = bitcast i32* %2 to i8*, !dbg !11351
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11351
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11349, metadata !DIExpression()), !dbg !11352
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11353
  %5 = load volatile i32, i32* %4, align 4, !dbg !11353
  store volatile i32 %5, i32* %2, align 4, !dbg !11354
  %6 = load volatile i32, i32* %2, align 4, !dbg !11355
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11356
  %8 = load volatile i32, i32* %7, align 4, !dbg !11356
  store volatile i32 %8, i32* %2, align 4, !dbg !11357
  %9 = load volatile i32, i32* %2, align 4, !dbg !11358
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11359
  ret void, !dbg !11359
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !11360 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11362, metadata !DIExpression()), !dbg !11364
  %3 = bitcast i32* %2 to i8*, !dbg !11365
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11365
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11363, metadata !DIExpression()), !dbg !11366
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11367
  %5 = load volatile i32, i32* %4, align 4, !dbg !11367
  store volatile i32 %5, i32* %2, align 4, !dbg !11368
  %6 = load volatile i32, i32* %2, align 4, !dbg !11369
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11370
  %8 = load volatile i32, i32* %7, align 4, !dbg !11370
  store volatile i32 %8, i32* %2, align 4, !dbg !11371
  %9 = load volatile i32, i32* %2, align 4, !dbg !11372
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11373
  ret void, !dbg !11373
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11374 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11376, metadata !DIExpression()), !dbg !11377
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11378
  %3 = load volatile i32, i32* %2, align 4, !dbg !11378
  %4 = lshr i32 %3, 7, !dbg !11379
  %5 = and i32 %4, 1, !dbg !11379
  ret i32 %5, !dbg !11380
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #14 !dbg !11381 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11385, metadata !DIExpression()), !dbg !11387
  call void @llvm.dbg.value(metadata i8 %1, metadata !11386, metadata !DIExpression()), !dbg !11387
  %3 = zext i8 %1 to i32, !dbg !11388
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11389
  store volatile i32 %3, i32* %4, align 4, !dbg !11390
  ret void, !dbg !11391
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11392 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11394, metadata !DIExpression()), !dbg !11395
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11396
  %3 = load volatile i32, i32* %2, align 4, !dbg !11396
  %4 = lshr i32 %3, 5, !dbg !11397
  %5 = and i32 %4, 1, !dbg !11397
  ret i32 %5, !dbg !11398
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11399 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11403, metadata !DIExpression()), !dbg !11404
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11405
  %3 = load volatile i32, i32* %2, align 4, !dbg !11405
  %4 = trunc i32 %3 to i8, !dbg !11406
  ret i8 %4, !dbg !11407
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !11408 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11410, metadata !DIExpression()), !dbg !11416
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11417
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11417
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11417
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11411, metadata !DIExpression()), !dbg !11416
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11418
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !11418
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !11418
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !11412, metadata !DIExpression()), !dbg !11416
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #24, !dbg !11419
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !11420
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !11420
  %10 = tail call fastcc zeroext i1 @device_is_ready.175(%struct.device* noundef %9) #24, !dbg !11422
  br i1 %10, label %14, label %11, !dbg !11423

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.162(i32 noundef 1) #24, !dbg !11424
  %13 = zext i8 %12 to i32, !dbg !11424
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.176, i32 0, i32 0), i32 noundef %13) #25, !dbg !11424
  br label %62, !dbg !11430

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !11431
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !11432
  %17 = bitcast %struct._thread_arch** %16 to i8**, !dbg !11432
  %18 = load i8*, i8** %17, align 4, !dbg !11432
  %19 = tail call fastcc i32 @clock_control_on.177(%struct.device* noundef %15, i8* noundef %18) #24, !dbg !11433
  call void @llvm.dbg.value(metadata i32 %19, metadata !11415, metadata !DIExpression()), !dbg !11416
  %20 = icmp eq i32 %19, 0, !dbg !11434
  br i1 %20, label %24, label %21, !dbg !11436

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.162(i32 noundef 1) #24, !dbg !11437
  %23 = zext i8 %22 to i32, !dbg !11437
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.12.178, i32 0, i32 0), i32 noundef %23) #25, !dbg !11437
  br label %62, !dbg !11443

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !11444
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !11444
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #24, !dbg !11445
  call void @llvm.dbg.value(metadata i32 %27, metadata !11415, metadata !DIExpression()), !dbg !11416
  %28 = icmp slt i32 %27, 0, !dbg !11446
  br i1 %28, label %62, label %29, !dbg !11448

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11449
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11449
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #24, !dbg !11450
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11451
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #24, !dbg !11452
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !11453
  %34 = load i32, i32* %33, align 4, !dbg !11453
  %35 = icmp ult i32 %34, 3, !dbg !11455
  br i1 %35, label %39, label %36, !dbg !11455

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.162(i32 noundef 2) #24, !dbg !11456
  %38 = zext i8 %37 to i32, !dbg !11456
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13.179, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #25, !dbg !11456
  call void @llvm.dbg.value(metadata i32 0, metadata !11413, metadata !DIExpression()), !dbg !11416
  call void @llvm.dbg.value(metadata i32 0, metadata !11414, metadata !DIExpression()), !dbg !11416
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !11455
  %41 = load i32, i32* %40, align 4, !dbg !11455
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.14, i32 0, i32 %34, !dbg !11455
  %43 = load i32, i32* %42, align 4, !dbg !11455
  br label %44, !dbg !11455

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !11465
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !11465
  call void @llvm.dbg.value(metadata i32 %46, metadata !11414, metadata !DIExpression()), !dbg !11416
  call void @llvm.dbg.value(metadata i32 %45, metadata !11413, metadata !DIExpression()), !dbg !11416
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11466
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #24, !dbg !11467
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !11468
  %49 = load i8, i8* %48, align 4, !dbg !11468, !range !6754
  %50 = icmp eq i8 %49, 0, !dbg !11468
  br i1 %50, label %52, label %51, !dbg !11470

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #24, !dbg !11471
  br label %52, !dbg !11473

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !11474
  %54 = load i32, i32* %53, align 4, !dbg !11474
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #24, !dbg !11475
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !11476
  %56 = load i8, i8* %55, align 4, !dbg !11476, !range !6754
  %57 = icmp eq i8 %56, 0, !dbg !11476
  br i1 %57, label %60, label %58, !dbg !11478

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11479
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #24, !dbg !11481
  br label %60, !dbg !11482

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11483
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #24, !dbg !11484
  br label %62, !dbg !11485

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !11416
  ret i32 %63, !dbg !11486
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #9 !dbg !11487 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11491, metadata !DIExpression()), !dbg !11495
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11496
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !11496
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !11496
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !11492, metadata !DIExpression()), !dbg !11495
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11493, metadata !DIExpression()), !dbg !11495
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !11497
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !11498
  ret void, !dbg !11499
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.175(%struct.device* noundef %0) unnamed_addr #1 !dbg !11500 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11504, metadata !DIExpression()), !dbg !11505
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11506, !srcloc !11508
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.180(%struct.device* noundef %0) #24, !dbg !11509
  ret i1 %2, !dbg !11510
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.177(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !11511 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11513, metadata !DIExpression()), !dbg !11516
  call void @llvm.dbg.value(metadata i8* %1, metadata !11514, metadata !DIExpression()), !dbg !11516
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11517
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !11517
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !11517
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !11515, metadata !DIExpression()), !dbg !11516
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !11518
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !11518
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #25, !dbg !11519
  ret i32 %8, !dbg !11520
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !11521 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11525, metadata !DIExpression()), !dbg !11529
  call void @llvm.dbg.value(metadata i8 0, metadata !11526, metadata !DIExpression()), !dbg !11529
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !11530
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !11530
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11528, metadata !DIExpression(DW_OP_deref)), !dbg !11529
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #25, !dbg !11531
  call void @llvm.dbg.value(metadata i32 %4, metadata !11527, metadata !DIExpression()), !dbg !11529
  %5 = icmp slt i32 %4, 0, !dbg !11532
  br i1 %5, label %9, label %6, !dbg !11534

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !11535
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !11528, metadata !DIExpression()), !dbg !11529
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #24, !dbg !11536
  br label %9, !dbg !11537

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !11529
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !11538
  ret i32 %10, !dbg !11538
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !11539 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11541, metadata !DIExpression()), !dbg !11545
  call void @llvm.dbg.value(metadata i32 12, metadata !11542, metadata !DIExpression()), !dbg !11545
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !11546

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !11547, metadata !DIExpression()) #23, !dbg !11553
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #23, !dbg !11556, !srcloc !11557
  call void @llvm.dbg.value(metadata i32 %4, metadata !11552, metadata !DIExpression()) #23, !dbg !11553
  %5 = or i32 %4, 12, !dbg !11558
  call void @llvm.dbg.value(metadata i32 %5, metadata !11543, metadata !DIExpression()), !dbg !11559
  call void @llvm.dbg.value(metadata i32 %5, metadata !11560, metadata !DIExpression()) #23, !dbg !11567
  call void @llvm.dbg.value(metadata i32* %2, metadata !11565, metadata !DIExpression()) #23, !dbg !11567
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #23, !dbg !11569, !srcloc !11570
  call void @llvm.dbg.value(metadata i32 %6, metadata !11566, metadata !DIExpression()) #23, !dbg !11567
  %7 = icmp eq i32 %6, 0, !dbg !11546
  br i1 %7, label %8, label %3, !dbg !11558, !llvm.loop !11571

8:                                                ; preds = %3
  ret void, !dbg !11572
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !11573 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11575, metadata !DIExpression()), !dbg !11579
  call void @llvm.dbg.value(metadata i32 %1, metadata !11576, metadata !DIExpression()), !dbg !11579
  call void @llvm.dbg.value(metadata i32 %2, metadata !11577, metadata !DIExpression()), !dbg !11579
  call void @llvm.dbg.value(metadata i32 0, metadata !11578, metadata !DIExpression()), !dbg !11579
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11580
  %5 = load volatile i32, i32* %4, align 4, !dbg !11580
  %6 = and i32 %5, -5633, !dbg !11580
  %7 = or i32 %2, %1, !dbg !11580
  %8 = or i32 %7, %6, !dbg !11580
  store volatile i32 %8, i32* %4, align 4, !dbg !11580
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11581
  %10 = load volatile i32, i32* %9, align 4, !dbg !11581
  %11 = and i32 %10, -12289, !dbg !11581
  store volatile i32 %11, i32* %9, align 4, !dbg !11581
  ret void, !dbg !11582
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !11583 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11585, metadata !DIExpression()), !dbg !11586
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11587
  %3 = load volatile i32, i32* %2, align 4, !dbg !11587
  %4 = or i32 %3, 8, !dbg !11587
  store volatile i32 %4, i32* %2, align 4, !dbg !11587
  ret void, !dbg !11588
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !11589 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !11593, metadata !DIExpression()), !dbg !11596
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !11594, metadata !DIExpression()), !dbg !11596
  call void @llvm.dbg.value(metadata i32 0, metadata !11595, metadata !DIExpression()), !dbg !11596
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !11597
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !11597
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !11598
  %5 = load i8, i8* %4, align 4, !dbg !11598
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #25, !dbg !11599
  ret i32 %6, !dbg !11600
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.180(%struct.device* noundef %0) unnamed_addr #1 !dbg !11601 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11603, metadata !DIExpression()), !dbg !11604
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !11605
  ret i1 %2, !dbg !11606
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #14 !dbg !11607 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11609, metadata !DIExpression()), !dbg !11610
  tail call fastcc void @__NVIC_SetPriority.182() #24, !dbg !11611
  store i32 16799, i32* @last_load, align 4, !dbg !11612
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11613
  store volatile i32 16799, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11614
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11615
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11616
  %3 = or i32 %2, 7, !dbg !11616
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11616
  ret i32 0, !dbg !11617
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.182() unnamed_addr #14 !dbg !11618 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !11620, metadata !DIExpression()), !dbg !11622
  call void @llvm.dbg.value(metadata i32 1, metadata !11621, metadata !DIExpression()), !dbg !11622
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !11623
  ret void, !dbg !11626
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !11627 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11629, metadata !DIExpression()), !dbg !11631
  %2 = tail call fastcc i32 @elapsed() #24, !dbg !11632
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11633
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11634
  %5 = add i32 %4, %3, !dbg !11634
  store i32 %5, i32* @cycle_count, align 4, !dbg !11634
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11635
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !11636
  %7 = sub i32 %5, %6, !dbg !11639
  %8 = udiv i32 %7, 16800, !dbg !11640
  call void @llvm.dbg.value(metadata i32 %8, metadata !11630, metadata !DIExpression()), !dbg !11631
  %9 = mul nuw i32 %8, 16800, !dbg !11641
  %10 = add i32 %9, %6, !dbg !11642
  store i32 %10, i32* @announced_cycles, align 4, !dbg !11642
  tail call void @sys_clock_announce(i32 noundef %8) #25, !dbg !11643
  tail call void @z_arm_int_exit() #25, !dbg !11644
  ret void, !dbg !11645
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #14 !dbg !11646 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11651
  call void @llvm.dbg.value(metadata i32 %1, metadata !11648, metadata !DIExpression()), !dbg !11652
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11653
  call void @llvm.dbg.value(metadata i32 %2, metadata !11649, metadata !DIExpression()), !dbg !11652
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11654
  call void @llvm.dbg.value(metadata i32 %3, metadata !11650, metadata !DIExpression()), !dbg !11652
  %4 = and i32 %2, 65536, !dbg !11655
  %5 = icmp ne i32 %4, 0, !dbg !11655
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !11657
  %8 = load i32, i32* @last_load, align 4, !dbg !11652
  br i1 %7, label %9, label %13, !dbg !11657

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11658
  %11 = add i32 %10, %8, !dbg !11658
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !11658
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11660
  br label %13, !dbg !11661

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !11662
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11663
  %16 = add i32 %14, %15, !dbg !11664
  ret i32 %16, !dbg !11665
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !11666 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11670, metadata !DIExpression()), !dbg !11683
  call void @llvm.dbg.value(metadata i1 %1, metadata !11671, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11683
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !11684
  br i1 %4, label %5, label %8, !dbg !11684

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11686
  %7 = and i32 %6, -2, !dbg !11686
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11686
  store i32 -16777216, i32* @last_load, align 4, !dbg !11688
  br label %60, !dbg !11689

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !11690
  call void @llvm.dbg.value(metadata i32 %9, metadata !11675, metadata !DIExpression()), !dbg !11683
  br i1 %3, label %18, label %10, !dbg !11691

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !11691
  call void @llvm.dbg.value(metadata i32 undef, metadata !11670, metadata !DIExpression()), !dbg !11683
  %12 = icmp slt i32 %11, 1, !dbg !11692
  br i1 %12, label %18, label %13, !dbg !11692

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 997, !dbg !11692
  %15 = select i1 %14, i32 %11, i32 997, !dbg !11692
  %16 = mul nuw nsw i32 %15, 16800, !dbg !11692
  %17 = add nuw nsw i32 %16, 16799, !dbg !11692
  br label %18, !dbg !11692

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 16799, %10 ], [ 16749599, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !11670, metadata !DIExpression()), !dbg !11683
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11693, metadata !DIExpression()) #23, !dbg !11700
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11702, !srcloc !11708
  call void @llvm.dbg.value(metadata i32 undef, metadata !11705, metadata !DIExpression()) #23, !dbg !11709
  call void @llvm.dbg.value(metadata i32 undef, metadata !11706, metadata !DIExpression()) #23, !dbg !11709
  call void @llvm.dbg.value(metadata i32 undef, metadata !11699, metadata !DIExpression()) #23, !dbg !11700
  %21 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11710
  br i1 %21, label %23, label %22, !dbg !11713

22:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.183, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.184, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.185, i32 0, i32 0), i32 noundef 148) #25, !dbg !11714
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.186, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11714
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.185, i32 0, i32 0), i32 noundef 148) #25, !dbg !11714
  unreachable, !dbg !11714

23:                                               ; preds = %18
  %24 = extractvalue { i32, i32 } %20, 0, !dbg !11702
  call void @llvm.dbg.value(metadata i32 %24, metadata !11705, metadata !DIExpression()) #23, !dbg !11709
  call void @llvm.dbg.value(metadata i32 %24, metadata !11699, metadata !DIExpression()) #23, !dbg !11700
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11716
  call void @llvm.dbg.value(metadata i32 %24, metadata !11676, metadata !DIExpression()), !dbg !11683
  %25 = tail call fastcc i32 @elapsed() #24, !dbg !11717
  call void @llvm.dbg.value(metadata i32 %25, metadata !11681, metadata !DIExpression()), !dbg !11683
  %26 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11718
  call void @llvm.dbg.value(metadata i32 %26, metadata !11673, metadata !DIExpression()), !dbg !11683
  %27 = load i32, i32* @cycle_count, align 4, !dbg !11719
  %28 = add i32 %27, %25, !dbg !11719
  store i32 %28, i32* @cycle_count, align 4, !dbg !11719
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11720
  %29 = load i32, i32* @announced_cycles, align 4, !dbg !11721
  %30 = sub i32 %28, %29, !dbg !11722
  call void @llvm.dbg.value(metadata i32 %30, metadata !11682, metadata !DIExpression()), !dbg !11683
  %31 = icmp slt i32 %30, 0, !dbg !11723
  br i1 %31, label %41, label %32, !dbg !11725

32:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !11672, metadata !DIExpression()), !dbg !11683
  call void @llvm.dbg.value(metadata i32 undef, metadata !11672, metadata !DIExpression()), !dbg !11683
  %33 = add nuw i32 %19, %30, !dbg !11726
  %34 = urem i32 %33, 16800, !dbg !11728
  call void @llvm.dbg.value(metadata !DIArgList(i32 %33, i32 %34), metadata !11672, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11683
  %35 = sub nuw nsw i32 %19, %34, !dbg !11729
  call void @llvm.dbg.value(metadata i32 %35, metadata !11672, metadata !DIExpression()), !dbg !11683
  %36 = icmp ugt i32 %35, 1050, !dbg !11730
  br i1 %36, label %37, label %39, !dbg !11730

37:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i32 %35, metadata !11672, metadata !DIExpression()), !dbg !11683
  %38 = icmp ugt i32 %35, 16749600, !dbg !11731
  br i1 %38, label %41, label %39, !dbg !11733

39:                                               ; preds = %32, %37
  %40 = phi i32 [ %35, %37 ], [ 1050, %32 ]
  br label %41

41:                                               ; preds = %37, %23, %39
  %42 = phi i32 [ %40, %39 ], [ 1050, %23 ], [ 16749600, %37 ]
  store i32 %42, i32* @last_load, align 4, !dbg !11734
  %43 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11735
  call void @llvm.dbg.value(metadata i32 %43, metadata !11674, metadata !DIExpression()), !dbg !11683
  %44 = add nsw i32 %42, -1, !dbg !11736
  store volatile i32 %44, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11737
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11738
  %45 = icmp ult i32 %26, %43, !dbg !11739
  br i1 %45, label %46, label %51, !dbg !11741

46:                                               ; preds = %41
  %47 = load i32, i32* @cycle_count, align 4, !dbg !11742
  %48 = add i32 %26, %9, !dbg !11744
  %49 = sub i32 %48, %43, !dbg !11745
  %50 = add i32 %49, %47, !dbg !11742
  br label %55, !dbg !11746

51:                                               ; preds = %41
  %52 = sub i32 %26, %43, !dbg !11747
  %53 = load i32, i32* @cycle_count, align 4, !dbg !11749
  %54 = add i32 %52, %53, !dbg !11749
  br label %55

55:                                               ; preds = %51, %46
  %56 = phi i32 [ %54, %51 ], [ %50, %46 ], !dbg !11750
  store i32 %56, i32* @cycle_count, align 4, !dbg !11750
  call void @llvm.dbg.value(metadata i32 undef, metadata !11751, metadata !DIExpression()) #23, !dbg !11757
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11756, metadata !DIExpression()) #23, !dbg !11757
  %57 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11759
  br i1 %57, label %59, label %58, !dbg !11762

58:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.183, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.187, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.185, i32 0, i32 0), i32 noundef 194) #25, !dbg !11763
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.188, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11763
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.185, i32 0, i32 0), i32 noundef 194) #25, !dbg !11763
  unreachable, !dbg !11763

59:                                               ; preds = %55
  call void @llvm.dbg.value(metadata i32 %24, metadata !11751, metadata !DIExpression()) #23, !dbg !11757
  call void @llvm.dbg.value(metadata i32 %24, metadata !11765, metadata !DIExpression()) #23, !dbg !11768
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !11770, !srcloc !11771
  br label %60

60:                                               ; preds = %59, %5
  ret void, !dbg !11772
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !11773 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11693, metadata !DIExpression()) #23, !dbg !11777
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11779, !srcloc !11708
  call void @llvm.dbg.value(metadata i32 undef, metadata !11705, metadata !DIExpression()) #23, !dbg !11781
  call void @llvm.dbg.value(metadata i32 undef, metadata !11706, metadata !DIExpression()) #23, !dbg !11781
  call void @llvm.dbg.value(metadata i32 undef, metadata !11699, metadata !DIExpression()) #23, !dbg !11777
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11782
  br i1 %2, label %4, label %3, !dbg !11783

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.183, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.184, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.185, i32 0, i32 0), i32 noundef 148) #25, !dbg !11784
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.186, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11784
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.185, i32 0, i32 0), i32 noundef 148) #25, !dbg !11784
  unreachable, !dbg !11784

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !11705, metadata !DIExpression()) #23, !dbg !11781
  call void @llvm.dbg.value(metadata i32 undef, metadata !11699, metadata !DIExpression()) #23, !dbg !11777
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11785
  call void @llvm.dbg.value(metadata i32 undef, metadata !11775, metadata !DIExpression()), !dbg !11786
  %5 = tail call fastcc i32 @elapsed() #24, !dbg !11787
  %6 = load i32, i32* @cycle_count, align 4, !dbg !11788
  %7 = load i32, i32* @announced_cycles, align 4, !dbg !11789
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %7, i32 %6), metadata !11776, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11786
  call void @llvm.dbg.value(metadata i32 undef, metadata !11751, metadata !DIExpression()) #23, !dbg !11790
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11756, metadata !DIExpression()) #23, !dbg !11790
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11792
  br i1 %8, label %10, label %9, !dbg !11793

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.183, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.187, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.185, i32 0, i32 0), i32 noundef 194) #25, !dbg !11794
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.188, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11794
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.185, i32 0, i32 0), i32 noundef 194) #25, !dbg !11794
  unreachable, !dbg !11794

10:                                               ; preds = %4
  %11 = add i32 %6, %5, !dbg !11795
  call void @llvm.dbg.value(metadata !DIArgList(i32 %11, i32 %7), metadata !11776, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11786
  %12 = sub i32 %11, %7, !dbg !11796
  call void @llvm.dbg.value(metadata i32 %12, metadata !11776, metadata !DIExpression()), !dbg !11786
  %13 = extractvalue { i32, i32 } %1, 0, !dbg !11779
  call void @llvm.dbg.value(metadata i32 %13, metadata !11705, metadata !DIExpression()) #23, !dbg !11781
  call void @llvm.dbg.value(metadata i32 %13, metadata !11699, metadata !DIExpression()) #23, !dbg !11777
  call void @llvm.dbg.value(metadata i32 %13, metadata !11775, metadata !DIExpression()), !dbg !11786
  call void @llvm.dbg.value(metadata i32 undef, metadata !11751, metadata !DIExpression()) #23, !dbg !11790
  call void @llvm.dbg.value(metadata i32 undef, metadata !11765, metadata !DIExpression()) #23, !dbg !11797
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !11799, !srcloc !11771
  %14 = udiv i32 %12, 16800, !dbg !11800
  ret i32 %14, !dbg !11801
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !11802 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11693, metadata !DIExpression()) #23, !dbg !11806
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11808, !srcloc !11708
  call void @llvm.dbg.value(metadata i32 undef, metadata !11705, metadata !DIExpression()) #23, !dbg !11810
  call void @llvm.dbg.value(metadata i32 undef, metadata !11706, metadata !DIExpression()) #23, !dbg !11810
  call void @llvm.dbg.value(metadata i32 undef, metadata !11699, metadata !DIExpression()) #23, !dbg !11806
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11811
  br i1 %2, label %4, label %3, !dbg !11812

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.183, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.184, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.185, i32 0, i32 0), i32 noundef 148) #25, !dbg !11813
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.186, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11813
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.185, i32 0, i32 0), i32 noundef 148) #25, !dbg !11813
  unreachable, !dbg !11813

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !11705, metadata !DIExpression()) #23, !dbg !11810
  call void @llvm.dbg.value(metadata i32 undef, metadata !11699, metadata !DIExpression()) #23, !dbg !11806
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11814
  call void @llvm.dbg.value(metadata i32 undef, metadata !11804, metadata !DIExpression()), !dbg !11815
  %5 = tail call fastcc i32 @elapsed() #24, !dbg !11816
  %6 = load i32, i32* @cycle_count, align 4, !dbg !11817
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %6), metadata !11805, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !11815
  call void @llvm.dbg.value(metadata i32 undef, metadata !11751, metadata !DIExpression()) #23, !dbg !11818
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11756, metadata !DIExpression()) #23, !dbg !11818
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11820
  br i1 %7, label %9, label %8, !dbg !11821

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.183, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.187, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.185, i32 0, i32 0), i32 noundef 194) #25, !dbg !11822
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.188, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11822
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.185, i32 0, i32 0), i32 noundef 194) #25, !dbg !11822
  unreachable, !dbg !11822

9:                                                ; preds = %4
  %10 = add i32 %6, %5, !dbg !11823
  call void @llvm.dbg.value(metadata i32 %10, metadata !11805, metadata !DIExpression()), !dbg !11815
  %11 = extractvalue { i32, i32 } %1, 0, !dbg !11808
  call void @llvm.dbg.value(metadata i32 %11, metadata !11705, metadata !DIExpression()) #23, !dbg !11810
  call void @llvm.dbg.value(metadata i32 %11, metadata !11699, metadata !DIExpression()) #23, !dbg !11806
  call void @llvm.dbg.value(metadata i32 %11, metadata !11804, metadata !DIExpression()), !dbg !11815
  call void @llvm.dbg.value(metadata i32 undef, metadata !11751, metadata !DIExpression()) #23, !dbg !11818
  call void @llvm.dbg.value(metadata i32 undef, metadata !11765, metadata !DIExpression()) #23, !dbg !11824
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !11826, !srcloc !11771
  ret i32 %10, !dbg !11827
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #14 !dbg !11828 {
  %1 = load i32, i32* @last_load, align 4, !dbg !11829
  %2 = icmp eq i32 %1, -16777216, !dbg !11831
  br i1 %2, label %3, label %6, !dbg !11832

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11833
  %5 = or i32 %4, 1, !dbg !11833
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11833
  br label %6, !dbg !11835

6:                                                ; preds = %3, %0
  ret void, !dbg !11836
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #14 !dbg !11837 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11838
  %2 = and i32 %1, -2, !dbg !11838
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11838
  ret void, !dbg !11839
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #13 !dbg !11840 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11866, metadata !DIExpression()), !dbg !11869
  call void @llvm.dbg.value(metadata i8 %1, metadata !11867, metadata !DIExpression()), !dbg !11869
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11868, metadata !DIExpression()), !dbg !11869
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !11870
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11870
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !11869
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11871
  %8 = load i8, i8* %6, align 4, !dbg !11872
  %9 = zext i8 %8 to i32, !dbg !11873
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !11873
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !11874
  br i1 %11, label %18, label %24, !dbg !11875

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !11869
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11871
  %14 = load i8, i8* %6, align 4, !dbg !11872
  %15 = zext i8 %14 to i32, !dbg !11873
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !11873
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !11874
  br i1 %17, label %18, label %24, !dbg !11875, !llvm.loop !11876

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !11878
  %21 = load i8, i8* %20, align 1, !dbg !11878
  %22 = icmp eq i8 %21, %1, !dbg !11881
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !11882
  br i1 %22, label %24, label %12, !dbg !11883

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !11869
  ret i32 %25, !dbg !11884
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11885 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !11896, metadata !DIExpression()), !dbg !11912
  call void @llvm.dbg.value(metadata i8 %1, metadata !11897, metadata !DIExpression()), !dbg !11912
  call void @llvm.dbg.value(metadata i32 %2, metadata !11898, metadata !DIExpression()), !dbg !11912
  call void @llvm.dbg.value(metadata i32 0, metadata !11901, metadata !DIExpression()), !dbg !11912
  call void @llvm.dbg.value(metadata i32 0, metadata !11902, metadata !DIExpression()), !dbg !11912
  call void @llvm.dbg.value(metadata i8 0, metadata !11903, metadata !DIExpression()), !dbg !11913
  %4 = icmp eq i8 %1, 0, !dbg !11914
  br i1 %4, label %35, label %5, !dbg !11915

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !11914
  br label %9, !dbg !11915

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !11903, metadata !DIExpression()), !dbg !11913
  call void @llvm.dbg.value(metadata i32 %29, metadata !11901, metadata !DIExpression()), !dbg !11912
  %8 = icmp eq i32 %34, %6, !dbg !11914
  br i1 %8, label %35, label %9, !dbg !11915, !llvm.loop !11916

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11903, metadata !DIExpression()), !dbg !11913
  call void @llvm.dbg.value(metadata i32 %11, metadata !11901, metadata !DIExpression()), !dbg !11912
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !11918
  %13 = load i32, i32* %12, align 4, !dbg !11918
  call void @llvm.dbg.value(metadata i32 %13, metadata !11900, metadata !DIExpression()), !dbg !11912
  %14 = and i32 %13, 31, !dbg !11919
  %15 = icmp ult i32 %14, 16, !dbg !11920
  br i1 %15, label %16, label %20, !dbg !11921

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11922
  %18 = load i32, i32* %17, align 4, !dbg !11922
  %19 = or i32 %18, 32, !dbg !11924
  call void @llvm.dbg.value(metadata i32 %19, metadata !11901, metadata !DIExpression()), !dbg !11912
  br label %28, !dbg !11925

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !11926

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11927
  %23 = load i32, i32* %22, align 4, !dbg !11927
  call void @llvm.dbg.value(metadata i32 %23, metadata !11905, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !11928
  %24 = lshr i32 %23, 7, !dbg !11929
  %25 = and i32 %24, 16, !dbg !11929
  %26 = or i32 %25, %23, !dbg !11929
  call void @llvm.dbg.value(metadata i32 %26, metadata !11901, metadata !DIExpression()), !dbg !11912
  br label %28, !dbg !11930

27:                                               ; preds = %20
  br label %28

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ %11, %27 ], [ 48, %20 ], !dbg !11912
  call void @llvm.dbg.value(metadata i32 %29, metadata !11901, metadata !DIExpression()), !dbg !11912
  %30 = lshr i32 %13, 5, !dbg !11931
  %31 = and i32 %30, 255, !dbg !11931
  call void @llvm.dbg.value(metadata i32 %31, metadata !11899, metadata !DIExpression()), !dbg !11912
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #24, !dbg !11932
  call void @llvm.dbg.value(metadata i32 %32, metadata !11902, metadata !DIExpression()), !dbg !11912
  %33 = icmp slt i32 %32, 0, !dbg !11933
  %34 = add nuw nsw i32 %10, 1, !dbg !11935
  call void @llvm.dbg.value(metadata i32 %34, metadata !11903, metadata !DIExpression()), !dbg !11913
  br i1 %33, label %35, label %7, !dbg !11936

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !11937
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11938 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11942, metadata !DIExpression()), !dbg !11946
  call void @llvm.dbg.value(metadata i32 %1, metadata !11943, metadata !DIExpression()), !dbg !11946
  call void @llvm.dbg.value(metadata i32 %2, metadata !11944, metadata !DIExpression()), !dbg !11946
  %4 = icmp ugt i32 %0, 175, !dbg !11947
  br i1 %4, label %13, label %5, !dbg !11949

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !11950
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !11951
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !11951
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !11945, metadata !DIExpression()), !dbg !11946
  %9 = tail call fastcc zeroext i1 @device_is_ready.195(%struct.device* noundef %8) #24, !dbg !11952
  br i1 %9, label %10, label %13, !dbg !11954

10:                                               ; preds = %5
  %11 = and i32 %0, 15, !dbg !11955
  %12 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %11, i32 noundef %1, i32 noundef %2) #25, !dbg !11956
  br label %13, !dbg !11957

13:                                               ; preds = %5, %3, %10
  %14 = phi i32 [ %12, %10 ], [ -22, %3 ], [ -19, %5 ], !dbg !11946
  ret i32 %14, !dbg !11958
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.195(%struct.device* noundef %0) unnamed_addr #1 !dbg !11959 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11963, metadata !DIExpression()), !dbg !11964
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11965, !srcloc !11967
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.196(%struct.device* noundef %0) #24, !dbg !11968
  ret i1 %2, !dbg !11969
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.196(%struct.device* noundef %0) unnamed_addr #1 !dbg !11970 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11972, metadata !DIExpression()), !dbg !11973
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !11974
  ret i1 %2, !dbg !11975
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #4 !dbg !11976 {
  ret void, !dbg !11977
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #15 !dbg !11978 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11980, metadata !DIExpression()), !dbg !11985
  call void @llvm.dbg.value(metadata i32 0, metadata !11981, metadata !DIExpression()), !dbg !11985
  call void @llvm.dbg.value(metadata i32 2, metadata !11982, metadata !DIExpression()), !dbg !11985
  call void @llvm.dbg.value(metadata i32 0, metadata !11983, metadata !DIExpression()), !dbg !11985
  call void @llvm.dbg.value(metadata i32 2, metadata !11984, metadata !DIExpression()), !dbg !11985
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11986
  %2 = and i32 %1, 12, !dbg !11987
  call void @llvm.dbg.value(metadata i32 %2, metadata !11980, metadata !DIExpression()), !dbg !11985
  switch i32 %2, label %21 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !11988

3:                                                ; preds = %0
  br label %21, !dbg !11989

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11991
  call void @llvm.dbg.value(metadata i32 %5, metadata !11983, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !11985
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11992
  %7 = and i32 %6, 63, !dbg !11993
  call void @llvm.dbg.value(metadata i32 %7, metadata !11984, metadata !DIExpression()), !dbg !11985
  %8 = and i32 %5, 4194304, !dbg !11994
  %9 = icmp eq i32 %8, 0, !dbg !11994
  %10 = select i1 %9, i32 16000000, i32 24000000
  %11 = udiv i32 %10, %7, !dbg !11996
  %12 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11996
  %13 = lshr i32 %12, 6, !dbg !11996
  %14 = and i32 %13, 511, !dbg !11996
  %15 = mul i32 %14, %11, !dbg !11996
  call void @llvm.dbg.value(metadata i32 %15, metadata !11981, metadata !DIExpression()), !dbg !11985
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11997
  %17 = lshr i32 %16, 15, !dbg !11998
  %18 = and i32 %17, 6, !dbg !11998
  %19 = add nuw nsw i32 %18, 2, !dbg !11998
  call void @llvm.dbg.value(metadata i32 %19, metadata !11982, metadata !DIExpression()), !dbg !11985
  %20 = udiv i32 %15, %19, !dbg !11999
  br label %21, !dbg !12000

21:                                               ; preds = %0, %4, %3
  %22 = phi i32 [ %20, %4 ], [ 24000000, %3 ], [ 16000000, %0 ]
  store i32 %22, i32* @SystemCoreClock, align 4, !dbg !12001
  %23 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12002
  %24 = lshr i32 %23, 4, !dbg !12003
  %25 = and i32 %24, 15, !dbg !12003
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %25, !dbg !12004
  %27 = load i8, i8* %26, align 1, !dbg !12004
  %28 = zext i8 %27 to i32, !dbg !12004
  call void @llvm.dbg.value(metadata i32 %28, metadata !11980, metadata !DIExpression()), !dbg !11985
  %29 = lshr i32 %22, %28, !dbg !12005
  store i32 %29, i32* @SystemCoreClock, align 4, !dbg !12005
  ret void, !dbg !12006
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !12007 {
  ret i32 0, !dbg !12012
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !12013 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12039, metadata !DIExpression()), !dbg !12050
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !12051
  br i1 %3, label %311, label %4, !dbg !12053

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12054
  %6 = load i32, i32* %5, align 4, !dbg !12054
  %7 = and i32 %6, 1, !dbg !12056
  %8 = icmp eq i32 %7, 0, !dbg !12057
  br i1 %8, label %66, label %9, !dbg !12058

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12059
  %11 = and i32 %10, 12, !dbg !12059
  %12 = icmp eq i32 %11, 4, !dbg !12062
  br i1 %12, label %21, label %13, !dbg !12063

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12064
  %15 = and i32 %14, 12, !dbg !12064
  %16 = icmp eq i32 %15, 8, !dbg !12065
  br i1 %16, label %17, label %29, !dbg !12066

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12067
  %19 = and i32 %18, 4194304, !dbg !12068
  %20 = icmp eq i32 %19, 0, !dbg !12069
  br i1 %20, label %29, label %21, !dbg !12070

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12071
  %23 = and i32 %22, 131072, !dbg !12071
  %24 = icmp eq i32 %23, 0, !dbg !12071
  br i1 %24, label %66, label %25, !dbg !12074

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12075
  %27 = load i32, i32* %26, align 4, !dbg !12075
  %28 = icmp eq i32 %27, 0, !dbg !12076
  br i1 %28, label %311, label %66, !dbg !12077

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12078
  %31 = load i32, i32* %30, align 4, !dbg !12078
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !12082

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12083
  %34 = or i32 %33, 65536, !dbg !12083
  br label %45, !dbg !12083

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12085
  %37 = or i32 %36, 262144, !dbg !12085
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12085
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12085
  %39 = or i32 %38, 65536, !dbg !12085
  br label %45, !dbg !12085

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12088
  %42 = and i32 %41, -65537, !dbg !12088
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12088
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12088
  %44 = and i32 %43, -262145, !dbg !12088
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12090
  %47 = load i32, i32* %30, align 4, !dbg !12091
  %48 = icmp eq i32 %47, 0, !dbg !12093
  %49 = tail call i32 @HAL_GetTick() #25, !dbg !12094
  call void @llvm.dbg.value(metadata i32 %49, metadata !12040, metadata !DIExpression()), !dbg !12050
  call void @llvm.dbg.value(metadata i32 %49, metadata !12040, metadata !DIExpression()), !dbg !12050
  br i1 %48, label %58, label %50, !dbg !12095

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12096
  %52 = and i32 %51, 131072, !dbg !12098
  %53 = icmp eq i32 %52, 0, !dbg !12098
  br i1 %53, label %54, label %66, !dbg !12099

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #25, !dbg !12100
  %56 = sub i32 %55, %49, !dbg !12103
  %57 = icmp ugt i32 %56, 100, !dbg !12104
  br i1 %57, label %311, label %50, !dbg !12105, !llvm.loop !12106

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12108
  %60 = and i32 %59, 131072, !dbg !12108
  %61 = icmp eq i32 %60, 0, !dbg !12108
  br i1 %61, label %66, label %62, !dbg !12110

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #25, !dbg !12111
  %64 = sub i32 %63, %49, !dbg !12114
  %65 = icmp ugt i32 %64, 100, !dbg !12115
  br i1 %65, label %311, label %58, !dbg !12116, !llvm.loop !12117

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !12119
  %68 = and i32 %67, 2, !dbg !12121
  %69 = icmp eq i32 %68, 0, !dbg !12122
  br i1 %69, label %121, label %70, !dbg !12123

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12124
  %72 = and i32 %71, 12, !dbg !12124
  %73 = icmp eq i32 %72, 0, !dbg !12127
  br i1 %73, label %82, label %74, !dbg !12128

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12129
  %76 = and i32 %75, 12, !dbg !12129
  %77 = icmp eq i32 %76, 8, !dbg !12130
  br i1 %77, label %78, label %90, !dbg !12131

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12132
  %80 = and i32 %79, 4194304, !dbg !12133
  %81 = icmp eq i32 %80, 0, !dbg !12134
  br i1 %81, label %82, label %90, !dbg !12135

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12136
  %84 = and i32 %83, 2, !dbg !12136
  %85 = icmp eq i32 %84, 0, !dbg !12136
  br i1 %85, label %114, label %86, !dbg !12139

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12140
  %88 = load i32, i32* %87, align 4, !dbg !12140
  %89 = icmp eq i32 %88, 1, !dbg !12141
  br i1 %89, label %114, label %311, !dbg !12142

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12143
  %92 = load i32, i32* %91, align 4, !dbg !12143
  %93 = icmp eq i32 %92, 0, !dbg !12146
  br i1 %93, label %104, label %94, !dbg !12147

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12148
  %95 = tail call i32 @HAL_GetTick() #25, !dbg !12150
  call void @llvm.dbg.value(metadata i32 %95, metadata !12040, metadata !DIExpression()), !dbg !12050
  br label %96, !dbg !12151

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12152
  %98 = and i32 %97, 2, !dbg !12153
  %99 = icmp eq i32 %98, 0, !dbg !12153
  br i1 %99, label %100, label %114, !dbg !12151

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #25, !dbg !12154
  %102 = sub i32 %101, %95, !dbg !12157
  %103 = icmp ugt i32 %102, 2, !dbg !12158
  br i1 %103, label %311, label %96, !dbg !12159, !llvm.loop !12160

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12162
  %105 = tail call i32 @HAL_GetTick() #25, !dbg !12164
  call void @llvm.dbg.value(metadata i32 %105, metadata !12040, metadata !DIExpression()), !dbg !12050
  br label %106, !dbg !12165

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12166
  %108 = and i32 %107, 2, !dbg !12166
  %109 = icmp eq i32 %108, 0, !dbg !12166
  br i1 %109, label %121, label %110, !dbg !12165

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #25, !dbg !12167
  %112 = sub i32 %111, %105, !dbg !12170
  %113 = icmp ugt i32 %112, 2, !dbg !12171
  br i1 %113, label %311, label %106, !dbg !12172, !llvm.loop !12173

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12175
  %116 = and i32 %115, -249, !dbg !12175
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12175
  %118 = load i32, i32* %117, align 4, !dbg !12175
  %119 = shl i32 %118, 3, !dbg !12175
  %120 = or i32 %119, %116, !dbg !12175
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12175
  br label %121, !dbg !12176

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !12176
  %123 = and i32 %122, 8, !dbg !12178
  %124 = icmp eq i32 %123, 0, !dbg !12179
  br i1 %124, label %149, label %125, !dbg !12180

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12181
  %127 = load i32, i32* %126, align 4, !dbg !12181
  %128 = icmp eq i32 %127, 0, !dbg !12184
  br i1 %128, label %139, label %129, !dbg !12185

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12186
  %130 = tail call i32 @HAL_GetTick() #25, !dbg !12188
  call void @llvm.dbg.value(metadata i32 %130, metadata !12040, metadata !DIExpression()), !dbg !12050
  br label %131, !dbg !12189

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12190
  %133 = and i32 %132, 2, !dbg !12191
  %134 = icmp eq i32 %133, 0, !dbg !12191
  br i1 %134, label %135, label %149, !dbg !12189

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #25, !dbg !12192
  %137 = sub i32 %136, %130, !dbg !12195
  %138 = icmp ugt i32 %137, 2, !dbg !12196
  br i1 %138, label %311, label %131, !dbg !12197, !llvm.loop !12198

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !12200
  %140 = tail call i32 @HAL_GetTick() #25, !dbg !12202
  call void @llvm.dbg.value(metadata i32 %140, metadata !12040, metadata !DIExpression()), !dbg !12050
  br label %141, !dbg !12203

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12204
  %143 = and i32 %142, 2, !dbg !12204
  %144 = icmp eq i32 %143, 0, !dbg !12204
  br i1 %144, label %149, label %145, !dbg !12203

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #25, !dbg !12205
  %147 = sub i32 %146, %140, !dbg !12208
  %148 = icmp ugt i32 %147, 2, !dbg !12209
  br i1 %148, label %311, label %141, !dbg !12210, !llvm.loop !12211

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !12213
  %151 = and i32 %150, 4, !dbg !12214
  %152 = icmp eq i32 %151, 0, !dbg !12215
  br i1 %152, label %221, label %153, !dbg !12216

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !12042, metadata !DIExpression()), !dbg !12217
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12218
  %155 = and i32 %154, 268435456, !dbg !12218
  %156 = icmp eq i32 %155, 0, !dbg !12218
  br i1 %156, label %157, label %164, !dbg !12219

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !12220
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !12220
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12046, metadata !DIExpression()), !dbg !12220
  store volatile i32 0, i32* %2, align 4, !dbg !12220
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12220
  %160 = or i32 %159, 268435456, !dbg !12220
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12220
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12220
  %162 = and i32 %161, 268435456, !dbg !12220
  store volatile i32 %162, i32* %2, align 4, !dbg !12220
  %163 = load volatile i32, i32* %2, align 4, !dbg !12220
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !12221
  call void @llvm.dbg.value(metadata i32 1, metadata !12042, metadata !DIExpression()), !dbg !12217
  br label %164, !dbg !12222

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !12042, metadata !DIExpression()), !dbg !12217
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12223
  %166 = and i32 %165, 256, !dbg !12223
  %167 = icmp eq i32 %166, 0, !dbg !12223
  br i1 %167, label %168, label %180, !dbg !12225

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12226
  %170 = or i32 %169, 256, !dbg !12226
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12226
  %171 = tail call i32 @HAL_GetTick() #25, !dbg !12228
  call void @llvm.dbg.value(metadata i32 %171, metadata !12040, metadata !DIExpression()), !dbg !12050
  br label %172, !dbg !12229

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12230
  %174 = and i32 %173, 256, !dbg !12230
  %175 = icmp eq i32 %174, 0, !dbg !12230
  br i1 %175, label %176, label %180, !dbg !12229

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #25, !dbg !12231
  %178 = sub i32 %177, %171, !dbg !12234
  %179 = icmp ugt i32 %178, 2, !dbg !12235
  br i1 %179, label %311, label %172, !dbg !12236, !llvm.loop !12237

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12239
  %182 = load i32, i32* %181, align 4, !dbg !12239
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !12242

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12243
  %185 = or i32 %184, 1, !dbg !12243
  br label %196, !dbg !12243

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12245
  %188 = or i32 %187, 4, !dbg !12245
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12245
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12245
  %190 = or i32 %189, 1, !dbg !12245
  br label %196, !dbg !12245

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12248
  %193 = and i32 %192, -2, !dbg !12248
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12248
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12248
  %195 = and i32 %194, -5, !dbg !12248
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12250
  %198 = load i32, i32* %181, align 4, !dbg !12251
  %199 = icmp eq i32 %198, 0, !dbg !12253
  %200 = tail call i32 @HAL_GetTick() #25, !dbg !12254
  call void @llvm.dbg.value(metadata i32 %200, metadata !12040, metadata !DIExpression()), !dbg !12050
  call void @llvm.dbg.value(metadata i32 %200, metadata !12040, metadata !DIExpression()), !dbg !12050
  br i1 %199, label %209, label %201, !dbg !12255

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12256
  %203 = and i32 %202, 2, !dbg !12258
  %204 = icmp eq i32 %203, 0, !dbg !12258
  br i1 %204, label %205, label %217, !dbg !12259

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #25, !dbg !12260
  %207 = sub i32 %206, %200, !dbg !12263
  %208 = icmp ugt i32 %207, 5000, !dbg !12264
  br i1 %208, label %311, label %201, !dbg !12265, !llvm.loop !12266

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12268
  %211 = and i32 %210, 2, !dbg !12268
  %212 = icmp eq i32 %211, 0, !dbg !12268
  br i1 %212, label %217, label %213, !dbg !12270

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #25, !dbg !12271
  %215 = sub i32 %214, %200, !dbg !12274
  %216 = icmp ugt i32 %215, 5000, !dbg !12275
  br i1 %216, label %311, label %209, !dbg !12276, !llvm.loop !12277

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !12279

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12280
  %220 = and i32 %219, -268435457, !dbg !12280
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !12280
  br label %221, !dbg !12283

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12284
  %223 = load i32, i32* %222, align 4, !dbg !12284
  %224 = icmp eq i32 %223, 0, !dbg !12286
  br i1 %224, label %310, label %225, !dbg !12287

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12288
  %227 = and i32 %226, 12, !dbg !12288
  %228 = icmp eq i32 %227, 8, !dbg !12291
  br i1 %228, label %277, label %229, !dbg !12292

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !12293
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12296
  %231 = tail call i32 @HAL_GetTick() #25, !dbg !12296
  call void @llvm.dbg.value(metadata i32 %231, metadata !12040, metadata !DIExpression()), !dbg !12050
  call void @llvm.dbg.value(metadata i32 %231, metadata !12040, metadata !DIExpression()), !dbg !12050
  br i1 %230, label %232, label %269, !dbg !12297

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12298
  %234 = and i32 %233, 33554432, !dbg !12298
  %235 = icmp eq i32 %234, 0, !dbg !12298
  br i1 %235, label %240, label %236, !dbg !12300

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #25, !dbg !12301
  %238 = sub i32 %237, %231, !dbg !12304
  %239 = icmp ugt i32 %238, 2, !dbg !12305
  br i1 %239, label %311, label %232, !dbg !12306, !llvm.loop !12307

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12309
  %242 = load i32, i32* %241, align 4, !dbg !12309
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12309
  %244 = load i32, i32* %243, align 4, !dbg !12309
  %245 = or i32 %244, %242, !dbg !12309
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12309
  %247 = load i32, i32* %246, align 4, !dbg !12309
  %248 = shl i32 %247, 6, !dbg !12309
  %249 = or i32 %245, %248, !dbg !12309
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12309
  %251 = load i32, i32* %250, align 4, !dbg !12309
  %252 = shl i32 %251, 15, !dbg !12309
  %253 = add i32 %252, -65536, !dbg !12309
  %254 = and i32 %253, -65536, !dbg !12309
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12309
  %256 = load i32, i32* %255, align 4, !dbg !12309
  %257 = shl i32 %256, 24, !dbg !12309
  %258 = or i32 %249, %257, !dbg !12309
  %259 = or i32 %258, %254, !dbg !12309
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12309
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12310
  %260 = tail call i32 @HAL_GetTick() #25, !dbg !12311
  call void @llvm.dbg.value(metadata i32 %260, metadata !12040, metadata !DIExpression()), !dbg !12050
  br label %261, !dbg !12312

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12313
  %263 = and i32 %262, 33554432, !dbg !12314
  %264 = icmp eq i32 %263, 0, !dbg !12314
  br i1 %264, label %265, label %310, !dbg !12312

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #25, !dbg !12315
  %267 = sub i32 %266, %260, !dbg !12318
  %268 = icmp ugt i32 %267, 2, !dbg !12319
  br i1 %268, label %311, label %261, !dbg !12320, !llvm.loop !12321

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12323
  %271 = and i32 %270, 33554432, !dbg !12323
  %272 = icmp eq i32 %271, 0, !dbg !12323
  br i1 %272, label %310, label %273, !dbg !12325

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #25, !dbg !12326
  %275 = sub i32 %274, %231, !dbg !12329
  %276 = icmp ugt i32 %275, 2, !dbg !12330
  br i1 %276, label %311, label %269, !dbg !12331, !llvm.loop !12332

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !12334
  br i1 %278, label %311, label %279, !dbg !12337

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12338
  call void @llvm.dbg.value(metadata i32 %280, metadata !12041, metadata !DIExpression()), !dbg !12050
  %281 = and i32 %280, 4194304, !dbg !12340
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12342
  %283 = load i32, i32* %282, align 4, !dbg !12342
  %284 = icmp eq i32 %281, %283, !dbg !12343
  br i1 %284, label %285, label %311, !dbg !12344

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !12345
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12346
  %288 = load i32, i32* %287, align 4, !dbg !12346
  %289 = icmp eq i32 %286, %288, !dbg !12347
  br i1 %289, label %290, label %311, !dbg !12348

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !12349
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12350
  %293 = load i32, i32* %292, align 4, !dbg !12350
  %294 = shl i32 %293, 6, !dbg !12351
  %295 = icmp eq i32 %291, %294, !dbg !12352
  br i1 %295, label %296, label %311, !dbg !12353

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !12354
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12355
  %299 = load i32, i32* %298, align 4, !dbg !12355
  %300 = shl i32 %299, 15, !dbg !12356
  %301 = add i32 %300, -65536, !dbg !12356
  %302 = and i32 %301, -65536, !dbg !12356
  %303 = icmp eq i32 %297, %302, !dbg !12357
  br i1 %303, label %304, label %311, !dbg !12358

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !12359
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12360
  %307 = load i32, i32* %306, align 4, !dbg !12360
  %308 = shl i32 %307, 24, !dbg !12361
  %309 = icmp eq i32 %305, %308, !dbg !12362
  br i1 %309, label %310, label %311, !dbg !12363

310:                                              ; preds = %269, %261, %304, %221
  br label %311, !dbg !12364

311:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %277, %86, %25, %1, %310
  %312 = phi i32 [ 0, %310 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !12050
  ret i32 %312, !dbg !12365
}

; Function Attrs: optsize
declare !dbg !12366 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.ztest_unit_test_stats* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12368 {
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test_stats* %0, metadata !12381, metadata !DIExpression()), !dbg !12384
  call void @llvm.dbg.value(metadata i32 %1, metadata !12382, metadata !DIExpression()), !dbg !12384
  %3 = icmp eq %struct.ztest_unit_test_stats* %0, null, !dbg !12385
  br i1 %3, label %115, label %4, !dbg !12387

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12388
  %6 = and i32 %5, 15, !dbg !12388
  %7 = icmp ult i32 %6, %1, !dbg !12390
  br i1 %7, label %8, label %13, !dbg !12391

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !12392
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !12392
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12394
  %11 = and i32 %10, 15, !dbg !12394
  %12 = icmp eq i32 %11, %1, !dbg !12396
  br i1 %12, label %13, label %115, !dbg !12397

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 0, !dbg !12398
  %15 = load i32, i32* %14, align 4, !dbg !12398
  %16 = and i32 %15, 2, !dbg !12400
  %17 = icmp eq i32 %16, 0, !dbg !12401
  br i1 %17, label %39, label %18, !dbg !12402

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !12403
  %20 = icmp eq i32 %19, 0, !dbg !12406
  br i1 %20, label %25, label %21, !dbg !12407

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12408
  %23 = or i32 %22, 7168, !dbg !12408
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12408
  %24 = load i32, i32* %14, align 4, !dbg !12410
  br label %25, !dbg !12412

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !12410
  %27 = and i32 %26, 8, !dbg !12413
  %28 = icmp eq i32 %27, 0, !dbg !12414
  br i1 %28, label %32, label %29, !dbg !12415

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12416
  %31 = or i32 %30, 57344, !dbg !12416
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12416
  br label %32, !dbg !12418

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12419
  %34 = and i32 %33, -241, !dbg !12419
  %35 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 2, !dbg !12419
  %36 = load i32, i32* %35, align 4, !dbg !12419
  %37 = or i32 %34, %36, !dbg !12419
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12419
  %38 = load i32, i32* %14, align 4, !dbg !12420
  br label %39, !dbg !12422

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !12420
  %41 = and i32 %40, 1, !dbg !12423
  %42 = icmp eq i32 %41, 0, !dbg !12424
  br i1 %42, label %73, label %43, !dbg !12425

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 1, !dbg !12426
  %45 = load i32, i32* %44, align 4, !dbg !12426
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !12429

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12430
  %48 = and i32 %47, 131072, !dbg !12433
  %49 = icmp eq i32 %48, 0, !dbg !12433
  br i1 %49, label %115, label %58, !dbg !12434

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12435
  %52 = and i32 %51, 33554432, !dbg !12439
  %53 = icmp eq i32 %52, 0, !dbg !12439
  br i1 %53, label %115, label %58, !dbg !12440

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12441
  %56 = and i32 %55, 2, !dbg !12444
  %57 = icmp eq i32 %56, 0, !dbg !12444
  br i1 %57, label %115, label %58, !dbg !12445

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12446
  %60 = and i32 %59, -4, !dbg !12446
  %61 = or i32 %60, %45, !dbg !12446
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12446
  %62 = tail call i32 @HAL_GetTick() #25, !dbg !12447
  call void @llvm.dbg.value(metadata i32 %62, metadata !12383, metadata !DIExpression()), !dbg !12384
  br label %63, !dbg !12448

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12449
  %65 = and i32 %64, 12, !dbg !12449
  %66 = load i32, i32* %44, align 4, !dbg !12450
  %67 = shl i32 %66, 2, !dbg !12451
  %68 = icmp eq i32 %65, %67, !dbg !12452
  br i1 %68, label %73, label %69, !dbg !12448

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #25, !dbg !12453
  %71 = sub i32 %70, %62, !dbg !12456
  %72 = icmp ugt i32 %71, 5000, !dbg !12457
  br i1 %72, label %115, label %63, !dbg !12458, !llvm.loop !12459

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12461
  %75 = and i32 %74, 15, !dbg !12461
  %76 = icmp ugt i32 %75, %1, !dbg !12463
  br i1 %76, label %77, label %82, !dbg !12464

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !12465
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !12465
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12467
  %80 = and i32 %79, 15, !dbg !12467
  %81 = icmp eq i32 %80, %1, !dbg !12469
  br i1 %81, label %82, label %115, !dbg !12470

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !12471
  %84 = and i32 %83, 4, !dbg !12473
  %85 = icmp eq i32 %84, 0, !dbg !12474
  br i1 %85, label %93, label %86, !dbg !12475

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12476
  %88 = and i32 %87, -7169, !dbg !12476
  %89 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 3, !dbg !12476
  %90 = load i32, i32* %89, align 4, !dbg !12476
  %91 = or i32 %88, %90, !dbg !12476
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12476
  %92 = load i32, i32* %14, align 4, !dbg !12478
  br label %93, !dbg !12480

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !12478
  %95 = and i32 %94, 8, !dbg !12481
  %96 = icmp eq i32 %95, 0, !dbg !12482
  br i1 %96, label %104, label %97, !dbg !12483

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12484
  %99 = and i32 %98, -57345, !dbg !12484
  %100 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 4, !dbg !12484
  %101 = load i32, i32* %100, align 4, !dbg !12484
  %102 = shl i32 %101, 3, !dbg !12484
  %103 = or i32 %102, %99, !dbg !12484
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12484
  br label %104, !dbg !12486

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #24, !dbg !12487
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12488
  %107 = lshr i32 %106, 4, !dbg !12489
  %108 = and i32 %107, 15, !dbg !12489
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !12490
  %110 = load i8, i8* %109, align 1, !dbg !12490
  %111 = zext i8 %110 to i32, !dbg !12490
  %112 = lshr i32 %105, %111, !dbg !12491
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !12492
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !12493
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #25, !dbg !12494
  br label %115, !dbg !12495

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !12384
  ret i32 %116, !dbg !12496
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !12497 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12499, metadata !DIExpression()), !dbg !12503
  call void @llvm.dbg.value(metadata i32 0, metadata !12500, metadata !DIExpression()), !dbg !12503
  call void @llvm.dbg.value(metadata i32 0, metadata !12501, metadata !DIExpression()), !dbg !12503
  call void @llvm.dbg.value(metadata i32 0, metadata !12502, metadata !DIExpression()), !dbg !12503
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12504
  %2 = and i32 %1, 12, !dbg !12505
  switch i32 %2, label %24 [
    i32 8, label %4
    i32 4, label %3
  ], !dbg !12506

3:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 24000000, metadata !12502, metadata !DIExpression()), !dbg !12503
  br label %24, !dbg !12507

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12510
  %6 = and i32 %5, 63, !dbg !12512
  call void @llvm.dbg.value(metadata i32 %6, metadata !12499, metadata !DIExpression()), !dbg !12503
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12513
  %8 = and i32 %7, 4194304, !dbg !12513
  %9 = icmp eq i32 %8, 0, !dbg !12515
  %10 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12516
  %11 = lshr i32 %10, 6, !dbg !12516
  %12 = and i32 %11, 511, !dbg !12516
  %13 = zext i32 %12 to i64, !dbg !12516
  %14 = select i1 %9, i64 16000000, i64 24000000
  %15 = mul nuw nsw i64 %14, %13, !dbg !12516
  %16 = zext i32 %6 to i64, !dbg !12516
  %17 = udiv i64 %15, %16, !dbg !12516
  %18 = trunc i64 %17 to i32, !dbg !12516
  call void @llvm.dbg.value(metadata i32 %18, metadata !12500, metadata !DIExpression()), !dbg !12503
  %19 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12517
  %20 = lshr i32 %19, 15, !dbg !12518
  %21 = and i32 %20, 6, !dbg !12518
  %22 = add nuw nsw i32 %21, 2, !dbg !12518
  call void @llvm.dbg.value(metadata i32 %22, metadata !12501, metadata !DIExpression()), !dbg !12503
  %23 = udiv i32 %18, %22, !dbg !12519
  call void @llvm.dbg.value(metadata i32 %23, metadata !12502, metadata !DIExpression()), !dbg !12503
  br label %24, !dbg !12520

24:                                               ; preds = %0, %4, %3
  %25 = phi i32 [ %23, %4 ], [ 24000000, %3 ], [ 16000000, %0 ], !dbg !12521
  call void @llvm.dbg.value(metadata i32 %25, metadata !12502, metadata !DIExpression()), !dbg !12503
  ret i32 %25, !dbg !12522
}

; Function Attrs: optsize
declare !dbg !12523 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12526 {
  %4 = alloca %struct.ztest_unit_test_stats, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12530, metadata !DIExpression()), !dbg !12550
  call void @llvm.dbg.value(metadata i32 %1, metadata !12531, metadata !DIExpression()), !dbg !12550
  call void @llvm.dbg.value(metadata i32 %2, metadata !12532, metadata !DIExpression()), !dbg !12550
  %7 = bitcast %struct.ztest_unit_test_stats* %4 to i8*, !dbg !12551
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #23, !dbg !12551
  call void @llvm.dbg.declare(metadata %struct.ztest_unit_test_stats* %4, metadata !12533, metadata !DIExpression()), !dbg !12552
  %8 = icmp eq i32 %0, 0, !dbg !12553
  br i1 %8, label %9, label %23, !dbg !12554

9:                                                ; preds = %3
  %10 = bitcast i32* %5 to i8*, !dbg !12555
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10), !dbg !12555
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12543, metadata !DIExpression()), !dbg !12555
  store volatile i32 0, i32* %5, align 4, !dbg !12555
  %11 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12555
  %12 = or i32 %11, 1, !dbg !12555
  store volatile i32 %12, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12555
  %13 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12555
  %14 = and i32 %13, 1, !dbg !12555
  store volatile i32 %14, i32* %5, align 4, !dbg !12555
  %15 = load volatile i32, i32* %5, align 4, !dbg !12555
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10), !dbg !12556
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 0, !dbg !12557
  store i32 256, i32* %16, align 4, !dbg !12558
  %17 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 1, !dbg !12559
  store i32 2, i32* %17, align 4, !dbg !12560
  %18 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 3, !dbg !12561
  store i32 3, i32* %18, align 4, !dbg !12562
  %19 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 2, !dbg !12563
  store i32 0, i32* %19, align 4, !dbg !12564
  %20 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 4, !dbg !12565
  store i32 0, i32* %20, align 4, !dbg !12566
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.ztest_unit_test_stats* noundef nonnull %4) #25, !dbg !12567
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12568
  %22 = and i32 %21, -123731969, !dbg !12568
  br label %38, !dbg !12569

23:                                               ; preds = %3
  %24 = bitcast i32* %6 to i8*, !dbg !12570
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24), !dbg !12570
  call void @llvm.dbg.declare(metadata i32* %6, metadata !12547, metadata !DIExpression()), !dbg !12570
  store volatile i32 0, i32* %6, align 4, !dbg !12570
  %25 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12570
  %26 = or i32 %25, 4, !dbg !12570
  store volatile i32 %26, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12570
  %27 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !12570
  %28 = and i32 %27, 4, !dbg !12570
  store volatile i32 %28, i32* %6, align 4, !dbg !12570
  %29 = load volatile i32, i32* %6, align 4, !dbg !12570
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24), !dbg !12571
  %30 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 0, !dbg !12572
  store i32 512, i32* %30, align 4, !dbg !12573
  %31 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 1, !dbg !12574
  store i32 2, i32* %31, align 4, !dbg !12575
  %32 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 3, !dbg !12576
  store i32 3, i32* %32, align 4, !dbg !12577
  %33 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 2, !dbg !12578
  store i32 0, i32* %33, align 4, !dbg !12579
  %34 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 4, !dbg !12580
  store i32 0, i32* %34, align 4, !dbg !12581
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073874944 to %struct.GPIO_TypeDef*), %struct.ztest_unit_test_stats* noundef nonnull %4) #25, !dbg !12582
  %35 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12583
  %36 = and i32 %35, 134217727, !dbg !12583
  %37 = shl i32 %2, 3, !dbg !12583
  br label %38

38:                                               ; preds = %23, %9
  %39 = phi i32 [ %37, %23 ], [ %2, %9 ]
  %40 = phi i32 [ %36, %23 ], [ %22, %9 ]
  %41 = or i32 %39, %1, !dbg !12584
  %42 = or i32 %41, %40, !dbg !12584
  store volatile i32 %42, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12584
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #23, !dbg !12585
  ret void, !dbg !12585
}

; Function Attrs: optsize
declare !dbg !12586 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.ztest_unit_test_stats* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #14 !dbg !12590 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !12591
  ret void, !dbg !12592
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #14 !dbg !12593 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !12594
  ret void, !dbg !12595
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #8 !dbg !12596 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !12597
  ret i32 %1, !dbg !12598
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #15 !dbg !12599 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !12600
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12601
  %3 = lshr i32 %2, 10, !dbg !12602
  %4 = and i32 %3, 7, !dbg !12602
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !12603
  %6 = load i8, i8* %5, align 1, !dbg !12603
  %7 = zext i8 %6 to i32, !dbg !12603
  %8 = lshr i32 %1, %7, !dbg !12604
  ret i32 %8, !dbg !12605
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #15 !dbg !12606 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !12607
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12608
  %3 = lshr i32 %2, 13, !dbg !12609
  %4 = and i32 %3, 7, !dbg !12609
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !12610
  %6 = load i8, i8* %5, align 1, !dbg !12610
  %7 = zext i8 %6 to i32, !dbg !12610
  %8 = lshr i32 %1, %7, !dbg !12611
  ret i32 %8, !dbg !12612
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !12613 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12617, metadata !DIExpression()), !dbg !12618
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12619
  store i32 15, i32* %2, align 4, !dbg !12620
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12621
  %4 = and i32 %3, 262144, !dbg !12623
  %5 = icmp eq i32 %4, 0, !dbg !12624
  br i1 %5, label %8, label %6, !dbg !12625

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12626
  store i32 327680, i32* %7, align 4, !dbg !12628
  br label %15, !dbg !12629

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12630
  %10 = and i32 %9, 65536, !dbg !12632
  %11 = icmp eq i32 %10, 0, !dbg !12633
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12634
  br i1 %11, label %14, label %13, !dbg !12635

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !12636
  br label %15, !dbg !12638

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !12639
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12641
  %17 = and i32 %16, 1, !dbg !12643
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12644
  store i32 %17, i32* %18, align 4, !dbg !12646
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12647
  %20 = lshr i32 %19, 3, !dbg !12648
  %21 = and i32 %20, 31, !dbg !12648
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12649
  store i32 %21, i32* %22, align 4, !dbg !12650
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12651
  %24 = and i32 %23, 4, !dbg !12653
  %25 = icmp eq i32 %24, 0, !dbg !12654
  br i1 %25, label %28, label %26, !dbg !12655

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12656
  store i32 5, i32* %27, align 4, !dbg !12658
  br label %35, !dbg !12659

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12660
  %30 = and i32 %29, 1, !dbg !12662
  %31 = icmp eq i32 %30, 0, !dbg !12663
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12664
  br i1 %31, label %34, label %33, !dbg !12665

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !12666
  br label %35, !dbg !12668

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !12669
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12671
  %37 = and i32 %36, 1, !dbg !12673
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12674
  store i32 %37, i32* %38, align 4, !dbg !12676
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12677
  %40 = and i32 %39, 16777216, !dbg !12679
  %41 = icmp eq i32 %40, 0, !dbg !12680
  %42 = select i1 %41, i32 1, i32 2, !dbg !12681
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12682
  store i32 %42, i32* %43, align 4, !dbg !12684
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12685
  %45 = and i32 %44, 4194304, !dbg !12686
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12687
  store i32 %45, i32* %46, align 4, !dbg !12688
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12689
  %48 = and i32 %47, 63, !dbg !12690
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12691
  store i32 %48, i32* %49, align 4, !dbg !12692
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12693
  %51 = lshr i32 %50, 6, !dbg !12694
  %52 = and i32 %51, 511, !dbg !12694
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12695
  store i32 %52, i32* %53, align 4, !dbg !12696
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12697
  %55 = shl i32 %54, 1, !dbg !12698
  %56 = and i32 %55, 393216, !dbg !12698
  %57 = add nuw nsw i32 %56, 131072, !dbg !12698
  %58 = lshr exact i32 %57, 16, !dbg !12699
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12700
  store i32 %58, i32* %59, align 4, !dbg !12701
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12702
  %61 = lshr i32 %60, 24, !dbg !12703
  %62 = and i32 %61, 15, !dbg !12703
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12704
  store i32 %62, i32* %63, align 4, !dbg !12705
  ret void, !dbg !12706
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.ztest_unit_test_stats* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #15 !dbg !12707 {
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test_stats* %0, metadata !12711, metadata !DIExpression()), !dbg !12713
  call void @llvm.dbg.value(metadata i32* %1, metadata !12712, metadata !DIExpression()), !dbg !12713
  %3 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 0, !dbg !12714
  store i32 15, i32* %3, align 4, !dbg !12715
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12716
  %5 = and i32 %4, 3, !dbg !12717
  %6 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 1, !dbg !12718
  store i32 %5, i32* %6, align 4, !dbg !12719
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12720
  %8 = and i32 %7, 240, !dbg !12721
  %9 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 2, !dbg !12722
  store i32 %8, i32* %9, align 4, !dbg !12723
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12724
  %11 = and i32 %10, 7168, !dbg !12725
  %12 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 3, !dbg !12726
  store i32 %11, i32* %12, align 4, !dbg !12727
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12728
  %14 = lshr i32 %13, 3, !dbg !12729
  %15 = and i32 %14, 7168, !dbg !12729
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 4, !dbg !12730
  store i32 %15, i32* %16, align 4, !dbg !12731
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12732
  %18 = and i32 %17, 15, !dbg !12733
  store i32 %18, i32* %1, align 4, !dbg !12734
  ret void, !dbg !12735
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !12736 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12737
  %2 = and i32 %1, 128, !dbg !12737
  %3 = icmp eq i32 %2, 0, !dbg !12737
  br i1 %3, label %5, label %4, !dbg !12739

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #24, !dbg !12740
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !12742
  br label %5, !dbg !12743

5:                                                ; preds = %4, %0
  ret void, !dbg !12744
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !12745 {
  ret void, !dbg !12746
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #14 !dbg !12747 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12750, metadata !DIExpression()), !dbg !12751
  tail call fastcc void @LL_InitTick(i32 noundef %0) #24, !dbg !12752
  ret void, !dbg !12753
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #14 !dbg !12754 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12757, metadata !DIExpression()), !dbg !12759
  call void @llvm.dbg.value(metadata i32 1000, metadata !12758, metadata !DIExpression()), !dbg !12759
  %2 = udiv i32 %0, 1000, !dbg !12760
  %3 = add nsw i32 %2, -1, !dbg !12761
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12762
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12763
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12764
  ret void, !dbg !12765
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #19 !dbg !12766 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12768, metadata !DIExpression()), !dbg !12770
  %3 = bitcast i32* %2 to i8*, !dbg !12771
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12771
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12769, metadata !DIExpression()), !dbg !12772
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12773
  store volatile i32 %4, i32* %2, align 4, !dbg !12772
  %5 = load volatile i32, i32* %2, align 4, !dbg !12774
  %6 = icmp eq i32 %0, -1, !dbg !12775
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12768, metadata !DIExpression()), !dbg !12770
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !12770
  call void @llvm.dbg.value(metadata i32 %8, metadata !12768, metadata !DIExpression()), !dbg !12770
  br label %9, !dbg !12777

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12768, metadata !DIExpression()), !dbg !12770
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12778
  call void @llvm.dbg.value(metadata i32 undef, metadata !12768, metadata !DIExpression()), !dbg !12770
  %12 = shl i32 %11, 15, !dbg !12770
  %13 = ashr i32 %12, 31, !dbg !12770
  %14 = add i32 %13, %10, !dbg !12770
  call void @llvm.dbg.value(metadata i32 %14, metadata !12768, metadata !DIExpression()), !dbg !12770
  %15 = icmp eq i32 %14, 0, !dbg !12777
  br i1 %15, label %16, label %9, !dbg !12777

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12781
  ret void, !dbg !12781
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #7 !dbg !12782 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12784, metadata !DIExpression()), !dbg !12785
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !12786
  ret void, !dbg !12787
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #14 !dbg !12788 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12793, metadata !DIExpression()), !dbg !12798
  call void @llvm.dbg.value(metadata i32 0, metadata !12796, metadata !DIExpression()), !dbg !12798
  call void @llvm.dbg.value(metadata i32 0, metadata !12797, metadata !DIExpression()), !dbg !12798
  %2 = icmp eq i32 %0, 0, !dbg !12799
  br i1 %2, label %72, label %3, !dbg !12801

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !12802
  %5 = icmp eq i32 %4, 49152, !dbg !12805
  br i1 %5, label %6, label %21, !dbg !12806

6:                                                ; preds = %3
  %7 = icmp ult i32 %0, 150000001, !dbg !12807
  %8 = select i1 %7, i32 0, i32 5, !dbg !12810
  call void @llvm.dbg.value(metadata i32 %8, metadata !12796, metadata !DIExpression()), !dbg !12798
  %9 = add i32 %0, -120000001, !dbg !12811
  %10 = icmp ult i32 %9, 30000000, !dbg !12811
  %11 = select i1 %10, i32 4, i32 %8, !dbg !12811
  call void @llvm.dbg.value(metadata i32 %11, metadata !12796, metadata !DIExpression()), !dbg !12798
  %12 = icmp ult i32 %9, -30000000, !dbg !12813
  %13 = select i1 %12, i32 %11, i32 3, !dbg !12813
  call void @llvm.dbg.value(metadata i32 %13, metadata !12796, metadata !DIExpression()), !dbg !12798
  %14 = icmp ugt i32 %0, 60000000, !dbg !12815
  %15 = icmp eq i32 %13, 0
  %16 = and i1 %14, %15, !dbg !12817
  br i1 %16, label %21, label %17, !dbg !12817

17:                                               ; preds = %6
  %18 = icmp ugt i32 %0, 30000000, !dbg !12818
  %19 = and i1 %18, %15, !dbg !12821
  %20 = select i1 %19, i32 1, i32 %13, !dbg !12821
  br label %21, !dbg !12821

21:                                               ; preds = %17, %6, %3
  %22 = phi i32 [ 0, %3 ], [ 2, %6 ], [ %20, %17 ], !dbg !12798
  call void @llvm.dbg.value(metadata i32 %22, metadata !12796, metadata !DIExpression()), !dbg !12798
  %23 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !12822
  %24 = icmp eq i32 %23, 32768, !dbg !12824
  br i1 %24, label %25, label %45, !dbg !12825

25:                                               ; preds = %21
  %26 = icmp ugt i32 %0, 150000000, !dbg !12826
  %27 = icmp eq i32 %22, 0
  %28 = and i1 %26, %27, !dbg !12829
  %29 = select i1 %28, i32 5, i32 %22, !dbg !12829
  call void @llvm.dbg.value(metadata i32 %29, metadata !12796, metadata !DIExpression()), !dbg !12798
  %30 = icmp ugt i32 %0, 12000000, !dbg !12830
  %31 = icmp eq i32 %29, 0
  %32 = and i1 %30, %31, !dbg !12832
  %33 = select i1 %32, i32 4, i32 %29, !dbg !12832
  call void @llvm.dbg.value(metadata i32 %33, metadata !12796, metadata !DIExpression()), !dbg !12798
  %34 = icmp ugt i32 %0, 90000000, !dbg !12833
  %35 = icmp eq i32 %33, 0
  %36 = and i1 %34, %35, !dbg !12835
  %37 = select i1 %36, i32 3, i32 %33, !dbg !12835
  call void @llvm.dbg.value(metadata i32 %37, metadata !12796, metadata !DIExpression()), !dbg !12798
  %38 = icmp ugt i32 %0, 60000000, !dbg !12836
  %39 = icmp eq i32 %37, 0
  %40 = select i1 %38, i1 %39, i1 false, !dbg !12838
  br i1 %40, label %45, label %41, !dbg !12838

41:                                               ; preds = %25
  %42 = icmp ugt i32 %0, 30000000, !dbg !12839
  %43 = select i1 %42, i1 %39, i1 false, !dbg !12842
  %44 = select i1 %43, i32 1, i32 %37, !dbg !12842
  br label %45, !dbg !12842

45:                                               ; preds = %41, %25, %21
  %46 = phi i32 [ %22, %21 ], [ 2, %25 ], [ %44, %41 ], !dbg !12843
  call void @llvm.dbg.value(metadata i32 %46, metadata !12796, metadata !DIExpression()), !dbg !12798
  %47 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !12844
  %48 = icmp eq i32 %47, 16384, !dbg !12846
  br i1 %48, label %49, label %61, !dbg !12847

49:                                               ; preds = %45
  %50 = icmp ugt i32 %0, 90000000, !dbg !12848
  %51 = icmp eq i32 %46, 0
  %52 = select i1 %50, i1 %51, i1 false, !dbg !12851
  %53 = select i1 %52, i32 3, i32 %46, !dbg !12851
  call void @llvm.dbg.value(metadata i32 %53, metadata !12796, metadata !DIExpression()), !dbg !12798
  %54 = icmp ugt i32 %0, 60000000, !dbg !12852
  %55 = icmp eq i32 %53, 0
  %56 = select i1 %54, i1 %55, i1 false, !dbg !12854
  br i1 %56, label %61, label %57, !dbg !12854

57:                                               ; preds = %49
  %58 = icmp ugt i32 %0, 30000000, !dbg !12855
  %59 = select i1 %58, i1 %55, i1 false, !dbg !12858
  %60 = select i1 %59, i32 1, i32 %53, !dbg !12858
  br label %61, !dbg !12858

61:                                               ; preds = %57, %49, %45
  %62 = phi i32 [ %46, %45 ], [ 2, %49 ], [ %60, %57 ], !dbg !12843
  call void @llvm.dbg.value(metadata i32 %62, metadata !12796, metadata !DIExpression()), !dbg !12798
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %62) #24, !dbg !12859
  call void @llvm.dbg.value(metadata i32 2, metadata !12794, metadata !DIExpression()), !dbg !12798
  br label %63, !dbg !12860

63:                                               ; preds = %63, %61
  %64 = phi i32 [ 2, %61 ], [ %66, %63 ], !dbg !12843
  call void @llvm.dbg.value(metadata i32 %64, metadata !12794, metadata !DIExpression()), !dbg !12798
  %65 = tail call fastcc i32 @LL_FLASH_GetLatency() #24, !dbg !12861
  call void @llvm.dbg.value(metadata i32 %65, metadata !12795, metadata !DIExpression()), !dbg !12798
  %66 = add nsw i32 %64, -1, !dbg !12863
  call void @llvm.dbg.value(metadata i32 %66, metadata !12794, metadata !DIExpression()), !dbg !12798
  %67 = icmp ne i32 %65, %62, !dbg !12864
  %68 = icmp ne i32 %66, 0, !dbg !12865
  %69 = select i1 %67, i1 %68, i1 false, !dbg !12865
  br i1 %69, label %63, label %70, !dbg !12866, !llvm.loop !12867

70:                                               ; preds = %63
  %71 = zext i1 %67 to i32
  br label %72

72:                                               ; preds = %70, %1
  %73 = phi i32 [ 1, %1 ], [ %71, %70 ], !dbg !12869
  call void @llvm.dbg.value(metadata i32 %73, metadata !12797, metadata !DIExpression()), !dbg !12798
  ret i32 %73, !dbg !12870
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #15 !dbg !12871 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12873
  %2 = and i32 %1, 49152, !dbg !12873
  ret i32 %2, !dbg !12874
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #14 !dbg !12875 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12877, metadata !DIExpression()), !dbg !12878
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12879
  %3 = and i32 %2, -16, !dbg !12879
  %4 = or i32 %3, %0, !dbg !12879
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12879
  ret void, !dbg !12880
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #15 !dbg !12881 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12882
  %2 = and i32 %1, 15, !dbg !12882
  ret i32 %2, !dbg !12883
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct.ztest_suite_stats* nocapture noundef readonly %0, %struct.ztest_suite_stats* nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !12884 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %0, metadata !12902, metadata !DIExpression()), !dbg !12906
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %1, metadata !12903, metadata !DIExpression()), !dbg !12906
  call void @llvm.dbg.value(metadata i32 0, metadata !12904, metadata !DIExpression()), !dbg !12906
  call void @llvm.dbg.value(metadata i32 0, metadata !12905, metadata !DIExpression()), !dbg !12906
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !12907
  %4 = icmp eq i32 %3, 0, !dbg !12909
  br i1 %4, label %5, label %21, !dbg !12910

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct.ztest_suite_stats* noundef %0) #24, !dbg !12911
  call void @llvm.dbg.value(metadata i32 %6, metadata !12905, metadata !DIExpression()), !dbg !12906
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.205() #24, !dbg !12913
  %8 = icmp eq i32 %7, 1, !dbg !12915
  br i1 %8, label %13, label %9, !dbg !12916

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.206() #24, !dbg !12917
  br label %10, !dbg !12919

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.205() #24, !dbg !12920
  %12 = icmp eq i32 %11, 1, !dbg !12921
  br i1 %12, label %13, label %10, !dbg !12919, !llvm.loop !12922

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %0, i32 0, i32 0, !dbg !12924
  %15 = load i32, i32* %14, align 4, !dbg !12924
  %16 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %0, i32 0, i32 1, !dbg !12925
  %17 = load i32, i32* %16, align 4, !dbg !12925
  %18 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %0, i32 0, i32 2, !dbg !12926
  %19 = load i32, i32* %18, align 4, !dbg !12926
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.207(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #24, !dbg !12927
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct.ztest_suite_stats* noundef %1) #24, !dbg !12928
  call void @llvm.dbg.value(metadata i32 %20, metadata !12904, metadata !DIExpression()), !dbg !12906
  br label %21, !dbg !12929

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !12930
  call void @llvm.dbg.value(metadata i32 %22, metadata !12904, metadata !DIExpression()), !dbg !12906
  ret i32 %22, !dbg !12931
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #15 !dbg !12932 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12936, metadata !DIExpression()), !dbg !12937
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.209() #24, !dbg !12938
  %2 = icmp ne i32 %1, 0, !dbg !12940
  call void @llvm.dbg.value(metadata i1 %2, metadata !12936, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12937
  %3 = tail call fastcc i32 @LL_RCC_PLLSAI_IsReady() #24, !dbg !12941
  %4 = icmp ne i32 %3, 0, !dbg !12943
  call void @llvm.dbg.value(metadata i1 undef, metadata !12936, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12937
  %5 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #24, !dbg !12944
  %6 = icmp ne i32 %5, 0, !dbg !12946
  %7 = select i1 %6, i1 true, i1 %4, !dbg !12947
  %8 = select i1 %7, i1 true, i1 %2, !dbg !12947
  %9 = zext i1 %8 to i32, !dbg !12947
  call void @llvm.dbg.value(metadata i32 %9, metadata !12936, metadata !DIExpression()), !dbg !12937
  ret i32 %9, !dbg !12948
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct.ztest_suite_stats* nocapture noundef readonly %1) unnamed_addr #8 !dbg !12949 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12953, metadata !DIExpression()), !dbg !12956
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %1, metadata !12954, metadata !DIExpression()), !dbg !12956
  call void @llvm.dbg.value(metadata i32 0, metadata !12955, metadata !DIExpression()), !dbg !12956
  %3 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 0, !dbg !12957
  %4 = load i32, i32* %3, align 4, !dbg !12957
  %5 = and i32 %4, 63, !dbg !12958
  %6 = udiv i32 %0, %5, !dbg !12959
  call void @llvm.dbg.value(metadata i32 %6, metadata !12955, metadata !DIExpression()), !dbg !12956
  %7 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 1, !dbg !12960
  %8 = load i32, i32* %7, align 4, !dbg !12960
  %9 = and i32 %8, 511, !dbg !12961
  %10 = mul i32 %9, %6, !dbg !12962
  call void @llvm.dbg.value(metadata i32 %10, metadata !12955, metadata !DIExpression()), !dbg !12956
  %11 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 2, !dbg !12963
  %12 = load i32, i32* %11, align 4, !dbg !12963
  %13 = lshr i32 %12, 15, !dbg !12964
  %14 = and i32 %13, 131070, !dbg !12964
  %15 = add nuw nsw i32 %14, 2, !dbg !12964
  %16 = udiv i32 %10, %15, !dbg !12965
  call void @llvm.dbg.value(metadata i32 %16, metadata !12955, metadata !DIExpression()), !dbg !12956
  ret i32 %16, !dbg !12966
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.205() unnamed_addr #15 !dbg !12967 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12968
  %2 = lshr i32 %1, 1, !dbg !12969
  %3 = and i32 %2, 1, !dbg !12969
  ret i32 %3, !dbg !12970
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.206() unnamed_addr #14 !dbg !12971 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12972
  %2 = or i32 %1, 1, !dbg !12972
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12972
  ret void, !dbg !12973
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.207(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #14 !dbg !12974 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12976, metadata !DIExpression()), !dbg !12980
  call void @llvm.dbg.value(metadata i32 %1, metadata !12977, metadata !DIExpression()), !dbg !12980
  call void @llvm.dbg.value(metadata i32 %2, metadata !12978, metadata !DIExpression()), !dbg !12980
  call void @llvm.dbg.value(metadata i32 %3, metadata !12979, metadata !DIExpression()), !dbg !12980
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12981
  %6 = and i32 %5, -4227072, !dbg !12981
  %7 = or i32 %1, %0, !dbg !12981
  %8 = shl i32 %2, 6, !dbg !12981
  %9 = or i32 %7, %8, !dbg !12981
  %10 = or i32 %9, %6, !dbg !12981
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12981
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12982
  %12 = and i32 %11, -196609, !dbg !12982
  %13 = or i32 %12, %3, !dbg !12982
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12982
  ret void, !dbg !12983
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct.ztest_suite_stats* nocapture noundef readonly %1) unnamed_addr #14 !dbg !12984 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12988, metadata !DIExpression()), !dbg !12992
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %1, metadata !12989, metadata !DIExpression()), !dbg !12992
  call void @llvm.dbg.value(metadata i32 0, metadata !12990, metadata !DIExpression()), !dbg !12992
  call void @llvm.dbg.value(metadata i32 0, metadata !12991, metadata !DIExpression()), !dbg !12992
  %3 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 0, !dbg !12993
  %4 = load i32, i32* %3, align 4, !dbg !12993
  %5 = lshr i32 %4, 4, !dbg !12993
  %6 = and i32 %5, 15, !dbg !12993
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !12993
  %8 = load i8, i8* %7, align 1, !dbg !12993
  %9 = zext i8 %8 to i32, !dbg !12993
  %10 = lshr i32 %0, %9, !dbg !12993
  call void @llvm.dbg.value(metadata i32 %10, metadata !12991, metadata !DIExpression()), !dbg !12992
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !12994
  %12 = icmp ult i32 %11, %10, !dbg !12996
  br i1 %12, label %13, label %16, !dbg !12997

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !12998
  call void @llvm.dbg.value(metadata i32 %14, metadata !12990, metadata !DIExpression()), !dbg !12992
  %15 = icmp eq i32 %14, 0, !dbg !13000
  br i1 %15, label %16, label %30, !dbg !13002

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.208() #24, !dbg !13003
  br label %17, !dbg !13005

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.209() #24, !dbg !13006
  %19 = icmp eq i32 %18, 1, !dbg !13007
  br i1 %19, label %20, label %17, !dbg !13005, !llvm.loop !13008

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !13010
  tail call fastcc void @LL_RCC_SetAHBPrescaler.210(i32 noundef %21) #24, !dbg !13011
  tail call fastcc void @LL_RCC_SetSysClkSource.211() #24, !dbg !13012
  br label %22, !dbg !13013

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.212() #24, !dbg !13014
  %24 = icmp eq i32 %23, 8, !dbg !13015
  br i1 %24, label %25, label %22, !dbg !13013, !llvm.loop !13016

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 1, !dbg !13018
  %27 = load i32, i32* %26, align 4, !dbg !13018
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.213(i32 noundef %27) #24, !dbg !13019
  %28 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 2, !dbg !13020
  %29 = load i32, i32* %28, align 4, !dbg !13020
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.214(i32 noundef %29) #24, !dbg !13021
  br label %30, !dbg !13022

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !13023
  %33 = icmp ugt i32 %32, %10, !dbg !13025
  br i1 %33, label %34, label %36, !dbg !13026

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !13027
  call void @llvm.dbg.value(metadata i32 %35, metadata !12990, metadata !DIExpression()), !dbg !12992
  br label %36, !dbg !13029

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !12992
  call void @llvm.dbg.value(metadata i32 %37, metadata !12990, metadata !DIExpression()), !dbg !12992
  %38 = icmp eq i32 %37, 0, !dbg !13030
  br i1 %38, label %39, label %40, !dbg !13032

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #24, !dbg !13033
  br label %40, !dbg !13035

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !13036
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.208() unnamed_addr #14 !dbg !13037 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13038
  %2 = or i32 %1, 16777216, !dbg !13038
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13038
  ret void, !dbg !13039
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.209() unnamed_addr #15 !dbg !13040 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13041
  %2 = lshr i32 %1, 25, !dbg !13042
  %3 = and i32 %2, 1, !dbg !13042
  ret i32 %3, !dbg !13043
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.210(i32 noundef %0) unnamed_addr #14 !dbg !13044 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13046, metadata !DIExpression()), !dbg !13047
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13048
  %3 = and i32 %2, -241, !dbg !13048
  %4 = or i32 %3, %0, !dbg !13048
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13048
  ret void, !dbg !13049
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.211() unnamed_addr #14 !dbg !13050 {
  call void @llvm.dbg.value(metadata i32 2, metadata !13052, metadata !DIExpression()), !dbg !13053
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13054
  %2 = and i32 %1, -4, !dbg !13054
  %3 = or i32 %2, 2, !dbg !13054
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13054
  ret void, !dbg !13055
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.212() unnamed_addr #15 !dbg !13056 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13057
  %2 = and i32 %1, 12, !dbg !13057
  ret i32 %2, !dbg !13058
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.213(i32 noundef %0) unnamed_addr #14 !dbg !13059 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13061, metadata !DIExpression()), !dbg !13062
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13063
  %3 = and i32 %2, -7169, !dbg !13063
  %4 = or i32 %3, %0, !dbg !13063
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13063
  ret void, !dbg !13064
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.214(i32 noundef %0) unnamed_addr #14 !dbg !13065 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13067, metadata !DIExpression()), !dbg !13068
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13069
  %3 = and i32 %2, -57345, !dbg !13069
  %4 = or i32 %3, %0, !dbg !13069
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13069
  ret void, !dbg !13070
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLSAI_IsReady() unnamed_addr #15 !dbg !13071 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13072
  %2 = lshr i32 %1, 29, !dbg !13073
  %3 = and i32 %2, 1, !dbg !13073
  ret i32 %3, !dbg !13074
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #15 !dbg !13075 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13076
  %2 = lshr i32 %1, 27, !dbg !13077
  %3 = and i32 %2, 1, !dbg !13077
  ret i32 %3, !dbg !13078
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct.ztest_suite_stats* nocapture noundef readonly %2, %struct.ztest_suite_stats* nocapture noundef readonly %3) local_unnamed_addr #14 !dbg !13079 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13083, metadata !DIExpression()), !dbg !13089
  call void @llvm.dbg.value(metadata i32 %1, metadata !13084, metadata !DIExpression()), !dbg !13089
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %2, metadata !13085, metadata !DIExpression()), !dbg !13089
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %3, metadata !13086, metadata !DIExpression()), !dbg !13089
  call void @llvm.dbg.value(metadata i32 0, metadata !13087, metadata !DIExpression()), !dbg !13089
  call void @llvm.dbg.value(metadata i32 0, metadata !13088, metadata !DIExpression()), !dbg !13089
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !13090
  %6 = icmp eq i32 %5, 0, !dbg !13092
  br i1 %6, label %7, label %27, !dbg !13093

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct.ztest_suite_stats* noundef %2) #24, !dbg !13094
  call void @llvm.dbg.value(metadata i32 %8, metadata !13088, metadata !DIExpression()), !dbg !13089
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.215() #24, !dbg !13096
  %10 = icmp eq i32 %9, 1, !dbg !13098
  br i1 %10, label %19, label %11, !dbg !13099

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !13100
  br i1 %12, label %13, label %14, !dbg !13103

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #24, !dbg !13104
  br label %15, !dbg !13106

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.216() #24, !dbg !13107
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.217() #24, !dbg !13109
  br label %16, !dbg !13110

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.215() #24, !dbg !13111
  %18 = icmp eq i32 %17, 1, !dbg !13112
  br i1 %18, label %19, label %16, !dbg !13110, !llvm.loop !13113

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %2, i32 0, i32 0, !dbg !13115
  %21 = load i32, i32* %20, align 4, !dbg !13115
  %22 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %2, i32 0, i32 1, !dbg !13116
  %23 = load i32, i32* %22, align 4, !dbg !13116
  %24 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %2, i32 0, i32 2, !dbg !13117
  %25 = load i32, i32* %24, align 4, !dbg !13117
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.207(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #24, !dbg !13118
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct.ztest_suite_stats* noundef %3) #24, !dbg !13119
  call void @llvm.dbg.value(metadata i32 %26, metadata !13087, metadata !DIExpression()), !dbg !13089
  br label %27, !dbg !13120

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !13121
  call void @llvm.dbg.value(metadata i32 %28, metadata !13087, metadata !DIExpression()), !dbg !13089
  ret i32 %28, !dbg !13122
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.215() unnamed_addr #15 !dbg !13123 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13124
  %2 = lshr i32 %1, 17, !dbg !13125
  %3 = and i32 %2, 1, !dbg !13125
  ret i32 %3, !dbg !13126
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #14 !dbg !13127 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13128
  %2 = or i32 %1, 262144, !dbg !13128
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13128
  ret void, !dbg !13129
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.216() unnamed_addr #14 !dbg !13130 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13131
  %2 = and i32 %1, -262145, !dbg !13131
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13131
  ret void, !dbg !13132
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.217() unnamed_addr #14 !dbg !13133 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13134
  %2 = or i32 %1, 65536, !dbg !13134
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13134
  ret void, !dbg !13135
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #21 !dbg !13136 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13139, metadata !DIExpression()), !dbg !13155
  call void @llvm.dbg.value(metadata i32 undef, metadata !13139, metadata !DIExpression()), !dbg !13155
  call void @llvm.dbg.value(metadata i32 undef, metadata !13139, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !13155
  ret void, !dbg !13156
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !13157 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13161, metadata !DIExpression()), !dbg !13163
  %2 = icmp eq i8* %0, null, !dbg !13164
  br i1 %2, label %29, label %3, !dbg !13166

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !13167
  %5 = icmp eq i8 %4, 0, !dbg !13168
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !13169
  br i1 %6, label %29, label %8, !dbg !13169

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13162, metadata !DIExpression()), !dbg !13163
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !13170

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !13162, metadata !DIExpression()), !dbg !13163
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #24, !dbg !13172
  br i1 %10, label %11, label %15, !dbg !13177

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !13178
  %13 = load i8*, i8** %12, align 4, !dbg !13178
  %14 = icmp eq i8* %13, %0, !dbg !13179
  br i1 %14, label %29, label %15, !dbg !13180

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !13181
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !13162, metadata !DIExpression()), !dbg !13163
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13182
  br i1 %17, label %7, label %8, !dbg !13183, !llvm.loop !13184

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !13162, metadata !DIExpression()), !dbg !13163
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #24, !dbg !13186
  br i1 %20, label %21, label %26, !dbg !13190

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !13191
  %23 = load i8*, i8** %22, align 4, !dbg !13191
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #25, !dbg !13192
  %25 = icmp eq i32 %24, 0, !dbg !13193
  br i1 %25, label %29, label %26, !dbg !13194

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !13195
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !13162, metadata !DIExpression()), !dbg !13163
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13196
  br i1 %28, label %29, label %18, !dbg !13170, !llvm.loop !13197

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !13163
  ret %struct.device* %30, !dbg !13199
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #8 !dbg !13200 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13204, metadata !DIExpression()), !dbg !13205
  %2 = icmp eq %struct.device* %0, null, !dbg !13206
  br i1 %2, label %14, label %3, !dbg !13208

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !13209
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !13209
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !13210
  %7 = load i8, i8* %6, align 1, !dbg !13210
  %8 = and i8 %7, 1, !dbg !13210
  %9 = icmp eq i8 %8, 0, !dbg !13210
  br i1 %9, label %14, label %10, !dbg !13211

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !13212
  %12 = load i8, i8* %11, align 1, !dbg !13212
  %13 = icmp eq i8 %12, 0, !dbg !13213
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !13205
  ret i1 %15, !dbg !13214
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #7 !dbg !13215 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !13220, metadata !DIExpression()), !dbg !13221
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !13222
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !13223
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13224 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13232, metadata !DIExpression()), !dbg !13237
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13233, metadata !DIExpression()), !dbg !13237
  call void @llvm.dbg.value(metadata i8* %2, metadata !13234, metadata !DIExpression()), !dbg !13237
  %5 = bitcast i32* %4 to i8*, !dbg !13238
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13238
  call void @llvm.dbg.value(metadata i32 0, metadata !13235, metadata !DIExpression()), !dbg !13237
  store i32 0, i32* %4, align 4, !dbg !13239
  call void @llvm.dbg.value(metadata i32* %4, metadata !13235, metadata !DIExpression(DW_OP_deref)), !dbg !13237
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !13240
  call void @llvm.dbg.value(metadata i16* %6, metadata !13236, metadata !DIExpression()), !dbg !13237
  %7 = load i32, i32* %4, align 4, !dbg !13241
  call void @llvm.dbg.value(metadata i32 %7, metadata !13235, metadata !DIExpression()), !dbg !13237
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !13242
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13243
  ret i32 %8, !dbg !13244
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !13245 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13249, metadata !DIExpression()), !dbg !13255
  call void @llvm.dbg.value(metadata i32* %1, metadata !13250, metadata !DIExpression()), !dbg !13255
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13256
  %4 = load i16*, i16** %3, align 4, !dbg !13256
  call void @llvm.dbg.value(metadata i16* %4, metadata !13251, metadata !DIExpression()), !dbg !13255
  %5 = icmp eq i16* %4, null, !dbg !13257
  br i1 %5, label %14, label %6, !dbg !13258

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !13259
  call void @llvm.dbg.value(metadata i32 %7, metadata !13252, metadata !DIExpression()), !dbg !13259
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !13260
  %9 = load i16, i16* %8, align 2, !dbg !13260
  %10 = add i16 %9, -32767, !dbg !13261
  %11 = icmp ult i16 %10, 2, !dbg !13261
  %12 = add i32 %7, 1, !dbg !13262
  call void @llvm.dbg.value(metadata i32 %12, metadata !13252, metadata !DIExpression()), !dbg !13259
  br i1 %11, label %13, label %6, !dbg !13261, !llvm.loop !13264

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !13267
  br label %14, !dbg !13268

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !13269
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !13270 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !13274, metadata !DIExpression()), !dbg !13285
  call void @llvm.dbg.value(metadata i32 %1, metadata !13275, metadata !DIExpression()), !dbg !13285
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !13276, metadata !DIExpression()), !dbg !13285
  call void @llvm.dbg.value(metadata i8* %3, metadata !13277, metadata !DIExpression()), !dbg !13285
  call void @llvm.dbg.value(metadata i32 0, metadata !13278, metadata !DIExpression()), !dbg !13286
  %5 = icmp eq i32 %1, 0, !dbg !13287
  br i1 %5, label %16, label %8, !dbg !13288

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !13278, metadata !DIExpression()), !dbg !13286
  %7 = icmp eq i32 %15, %1, !dbg !13287
  br i1 %7, label %16, label %8, !dbg !13288, !llvm.loop !13289

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !13278, metadata !DIExpression()), !dbg !13286
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !13291
  %11 = load i16, i16* %10, align 2, !dbg !13291
  call void @llvm.dbg.value(metadata i16 %11, metadata !13280, metadata !DIExpression()), !dbg !13292
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #24, !dbg !13293
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !13283, metadata !DIExpression()), !dbg !13292
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #25, !dbg !13294
  call void @llvm.dbg.value(metadata i32 %13, metadata !13284, metadata !DIExpression()), !dbg !13292
  %14 = icmp slt i32 %13, 0, !dbg !13295
  %15 = add nuw i32 %9, 1, !dbg !13297
  call void @llvm.dbg.value(metadata i32 %15, metadata !13278, metadata !DIExpression()), !dbg !13286
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !13298
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #4 !dbg !13299 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !13303, metadata !DIExpression()), !dbg !13306
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !13304, metadata !DIExpression()), !dbg !13306
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !13305, metadata !DIExpression()), !dbg !13306
  %2 = sext i16 %0 to i32, !dbg !13307
  %3 = icmp slt i16 %0, 1, !dbg !13309
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !13310
  %6 = add nsw i32 %2, -1, !dbg !13310
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !13310
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !13310
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !13304, metadata !DIExpression()), !dbg !13306
  ret %struct.device* %8, !dbg !13311
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13312 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13314, metadata !DIExpression()), !dbg !13319
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13315, metadata !DIExpression()), !dbg !13319
  call void @llvm.dbg.value(metadata i8* %2, metadata !13316, metadata !DIExpression()), !dbg !13319
  %5 = bitcast i32* %4 to i8*, !dbg !13320
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13320
  call void @llvm.dbg.value(metadata i32 0, metadata !13317, metadata !DIExpression()), !dbg !13319
  store i32 0, i32* %4, align 4, !dbg !13321
  call void @llvm.dbg.value(metadata i32* %4, metadata !13317, metadata !DIExpression(DW_OP_deref)), !dbg !13319
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !13322
  call void @llvm.dbg.value(metadata i16* %6, metadata !13318, metadata !DIExpression()), !dbg !13319
  %7 = load i32, i32* %4, align 4, !dbg !13323
  call void @llvm.dbg.value(metadata i32 %7, metadata !13317, metadata !DIExpression()), !dbg !13319
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !13324
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13325
  ret i32 %8, !dbg !13326
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !13327 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13329, metadata !DIExpression()), !dbg !13334
  call void @llvm.dbg.value(metadata i32* %1, metadata !13330, metadata !DIExpression()), !dbg !13334
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13335
  %4 = load i16*, i16** %3, align 4, !dbg !13335
  call void @llvm.dbg.value(metadata i16* %4, metadata !13331, metadata !DIExpression()), !dbg !13334
  call void @llvm.dbg.value(metadata i32 0, metadata !13332, metadata !DIExpression()), !dbg !13334
  call void @llvm.dbg.value(metadata i32 0, metadata !13333, metadata !DIExpression()), !dbg !13334
  %5 = icmp eq i16* %4, null, !dbg !13336
  br i1 %5, label %22, label %6, !dbg !13338

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !13332, metadata !DIExpression()), !dbg !13334
  call void @llvm.dbg.value(metadata i16* %8, metadata !13331, metadata !DIExpression()), !dbg !13334
  %9 = load i16, i16* %8, align 2, !dbg !13339
  %10 = icmp eq i16 %9, -32768, !dbg !13343
  call void @llvm.dbg.value(metadata i32 undef, metadata !13332, metadata !DIExpression()), !dbg !13334
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !13344
  call void @llvm.dbg.value(metadata i16* %11, metadata !13331, metadata !DIExpression()), !dbg !13334
  %12 = zext i1 %10 to i32, !dbg !13345
  %13 = add i32 %7, %12, !dbg !13345
  call void @llvm.dbg.value(metadata i32 %13, metadata !13332, metadata !DIExpression()), !dbg !13334
  %14 = icmp eq i32 %13, 2, !dbg !13346
  br i1 %14, label %15, label %6, !dbg !13347

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !13334
  call void @llvm.dbg.value(metadata i32 %16, metadata !13333, metadata !DIExpression()), !dbg !13334
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !13348
  %18 = load i16, i16* %17, align 2, !dbg !13348
  %19 = icmp eq i16 %18, 32767, !dbg !13349
  %20 = add i32 %16, 1, !dbg !13350
  call void @llvm.dbg.value(metadata i32 %20, metadata !13333, metadata !DIExpression()), !dbg !13334
  br i1 %19, label %21, label %15, !dbg !13352, !llvm.loop !13353

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !13355
  br label %22, !dbg !13356

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !13357
  call void @llvm.dbg.value(metadata i16* %23, metadata !13331, metadata !DIExpression()), !dbg !13334
  ret i16* %23, !dbg !13358
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #8 !dbg !13359 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13362
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 5, !dbg !13363
  ret i32* %2, !dbg !13364
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #4 !dbg !13365 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13516, metadata !DIExpression()), !dbg !13519
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !13517, metadata !DIExpression()), !dbg !13519
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13518, metadata !DIExpression()), !dbg !13519
  ret void, !dbg !13520
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !13521 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13525, metadata !DIExpression()), !dbg !13527
  call void @llvm.dbg.value(metadata i32 %1, metadata !13526, metadata !DIExpression()), !dbg !13527
  ret void, !dbg !13528
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !13529 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13533, metadata !DIExpression()), !dbg !13535
  call void @llvm.dbg.value(metadata i32 %1, metadata !13534, metadata !DIExpression()), !dbg !13535
  ret void, !dbg !13536
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !13537 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13541, metadata !DIExpression()), !dbg !13543
  call void @llvm.dbg.value(metadata i8* %1, metadata !13542, metadata !DIExpression()), !dbg !13543
  ret i32 -134, !dbg !13544
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !13545 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13549, metadata !DIExpression()), !dbg !13551
  call void @llvm.dbg.value(metadata i8* %1, metadata !13550, metadata !DIExpression()), !dbg !13551
  ret i32 -134, !dbg !13552
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !13553 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13556, metadata !DIExpression()), !dbg !13557
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13558, !srcloc !13564
  call void @llvm.dbg.value(metadata i32 undef, metadata !13561, metadata !DIExpression()) #23, !dbg !13565
  call void @llvm.dbg.value(metadata i32 undef, metadata !13562, metadata !DIExpression()) #23, !dbg !13565
  br label %3, !dbg !13566

3:                                                ; preds = %3, %1
  br label %3, !dbg !13567, !llvm.loop !13570
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13573 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13577, metadata !DIExpression()), !dbg !13579
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13578, metadata !DIExpression()), !dbg !13579
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.222, i32 0, i32 0), i32 noundef 69) #25, !dbg !13580
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !13585
  unreachable, !dbg !13585
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !13586 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13588, metadata !DIExpression()), !dbg !13589
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !13590
  unreachable, !dbg !13590
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13591 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13593, metadata !DIExpression()), !dbg !13597
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13594, metadata !DIExpression()), !dbg !13597
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13598, !srcloc !13564
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !13598
  call void @llvm.dbg.value(metadata i32 %4, metadata !13561, metadata !DIExpression()) #23, !dbg !13600
  call void @llvm.dbg.value(metadata i32 undef, metadata !13562, metadata !DIExpression()) #23, !dbg !13600
  call void @llvm.dbg.value(metadata i32 %4, metadata !13595, metadata !DIExpression()), !dbg !13597
  %5 = tail call fastcc %struct.k_thread* @k_current_get.225() #26, !dbg !13601
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13596, metadata !DIExpression()), !dbg !13597
  %6 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #24, !dbg !13602
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.226, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %6, i32 noundef 0) #25, !dbg !13602
  %7 = icmp eq %struct.__esf* %1, null, !dbg !13607
  br i1 %7, label %20, label %8, !dbg !13609

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13610, metadata !DIExpression()), !dbg !13615
  %9 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !13617
  %10 = load i32, i32* %9, align 4, !dbg !13617
  %11 = and i32 %10, 511, !dbg !13618
  %12 = icmp eq i32 %11, 0, !dbg !13619
  br i1 %12, label %14, label %13, !dbg !13620

13:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.227, i32 0, i32 0), i32 noundef 69) #25, !dbg !13621
  br label %14, !dbg !13627

14:                                               ; preds = %8, %13
  %15 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #24, !dbg !13628
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.228, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %15) #25, !dbg !13628
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #24, !dbg !13633
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13610, metadata !DIExpression()), !dbg !13634
  %16 = load i32, i32* %9, align 4, !dbg !13639
  %17 = and i32 %16, 511, !dbg !13640
  %18 = icmp eq i32 %17, 0, !dbg !13641
  br i1 %18, label %22, label %19, !dbg !13642

19:                                               ; preds = %14
  call void @llvm.dbg.value(metadata i32 %4, metadata !13643, metadata !DIExpression()) #23, !dbg !13646
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !13649, !srcloc !13650
  br label %25, !dbg !13651

20:                                               ; preds = %2
  %21 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #24, !dbg !13628
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.228, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %21) #25, !dbg !13628
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #24, !dbg !13633
  br label %22, !dbg !13652

22:                                               ; preds = %20, %14
  %23 = icmp eq i32 %0, 1, !dbg !13653
  call void @llvm.dbg.value(metadata i32 %4, metadata !13643, metadata !DIExpression()) #23, !dbg !13656
  call void @llvm.dbg.value(metadata i32 %4, metadata !13643, metadata !DIExpression()) #23, !dbg !13659
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !13597
  br i1 %23, label %25, label %24, !dbg !13661

24:                                               ; preds = %22
  tail call fastcc void @k_thread_abort.229(%struct.k_thread* noundef %5) #24, !dbg !13662
  br label %25, !dbg !13665

25:                                               ; preds = %22, %24, %19
  ret void, !dbg !13665
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.225() unnamed_addr #11 !dbg !13666 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.237() #26, !dbg !13670
  ret %struct.k_thread* %1, !dbg !13671
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #4 !dbg !13672 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13676, metadata !DIExpression()), !dbg !13677
  %2 = icmp ult i32 %0, 5, !dbg !13678
  br i1 %2, label %3, label %6, !dbg !13678

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !13678
  %5 = load i8*, i8** %4, align 4, !dbg !13678
  br label %6, !dbg !13678

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.231, i32 0, i32 0), %1 ], !dbg !13679
  ret i8* %7, !dbg !13681
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13682 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13686, metadata !DIExpression()), !dbg !13688
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !13689
  br i1 %2, label %9, label %3, !dbg !13690

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #25, !dbg !13691
  call void @llvm.dbg.value(metadata i8* %4, metadata !13687, metadata !DIExpression()), !dbg !13688
  %5 = icmp eq i8* %4, null, !dbg !13692
  br i1 %5, label %9, label %6, !dbg !13694

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !13695
  %8 = icmp eq i8 %7, 0, !dbg !13696
  br i1 %8, label %9, label %10, !dbg !13697

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.230, i32 0, i32 0), metadata !13687, metadata !DIExpression()), !dbg !13688
  br label %10, !dbg !13698

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.230, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !13688
  call void @llvm.dbg.value(metadata i8* %11, metadata !13687, metadata !DIExpression()), !dbg !13688
  ret i8* %11, !dbg !13700
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.229(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13701 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13705, metadata !DIExpression()), !dbg !13706
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13707, !srcloc !13709
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !13710
  ret void, !dbg !13711
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.237() unnamed_addr #11 !dbg !13712 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13713, !srcloc !13715
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !13716
  ret %struct.k_thread* %1, !dbg !13717
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13718 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13722, metadata !DIExpression()), !dbg !13725
  call void @llvm.dbg.value(metadata i32 %1, metadata !13723, metadata !DIExpression()), !dbg !13725
  call void @llvm.dbg.value(metadata i32 %2, metadata !13724, metadata !DIExpression()), !dbg !13725
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #25, !dbg !13726
  ret void, !dbg !13727
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13728 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13732, metadata !DIExpression()), !dbg !13735
  call void @llvm.dbg.value(metadata i8* %1, metadata !13733, metadata !DIExpression()), !dbg !13735
  call void @llvm.dbg.value(metadata i32 %2, metadata !13734, metadata !DIExpression()), !dbg !13735
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #25, !dbg !13736
  ret void, !dbg !13737
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !13738 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #24, !dbg !13739
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__ccm_bss_end to i32), i32 ptrtoint ([0 x i8]* @__ccm_bss_start to i32))) #24, !dbg !13740
  ret void, !dbg !13741
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !13742 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13744, metadata !DIExpression()), !dbg !13745
  tail call fastcc void @init_idle_thread(i32 noundef %0) #24, !dbg !13746
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13747
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !13748
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !13749
  %4 = trunc i32 %0 to i8, !dbg !13750
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !13751
  store i8 %4, i8* %5, align 4, !dbg !13752
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !13753
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #24, !dbg !13754
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !13755
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !13756
  store i8* %8, i8** %9, align 4, !dbg !13757
  ret void, !dbg !13758
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !13759 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13761, metadata !DIExpression()), !dbg !13767
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13768
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13762, metadata !DIExpression()), !dbg !13767
  %3 = getelementptr inbounds [1 x [4160 x %struct.z_thread_stack_element]], [1 x [4160 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !13769
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !13763, metadata !DIExpression()), !dbg !13767
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.244, i32 0, i32 0), metadata !13766, metadata !DIExpression()), !dbg !13767
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !13770
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !13771
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 4096, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.244, i32 0, i32 0)) #25, !dbg !13772
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #24, !dbg !13773
  ret void, !dbg !13774
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !13775 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13779, metadata !DIExpression()), !dbg !13780
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !13781
  ret i8* %2, !dbg !13782
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !13783 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13788, metadata !DIExpression()), !dbg !13789
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13790
  %3 = load i8, i8* %2, align 1, !dbg !13791
  %4 = and i8 %3, -5, !dbg !13791
  store i8 %4, i8* %2, align 1, !dbg !13791
  ret void, !dbg !13792
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #10 !dbg !13793 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #24, !dbg !13796
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #25, !dbg !13797
  %3 = ptrtoint i8* %2 to i32, !dbg !13806
  %4 = add i32 %3, 2048, !dbg !13807
  call void @llvm.dbg.value(metadata i32 %4, metadata !13801, metadata !DIExpression()) #23, !dbg !13808
  call void @llvm.dbg.value(metadata i32 %4, metadata !13809, metadata !DIExpression()) #23, !dbg !13812
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !13814, !srcloc !13815
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13816
  %6 = or i32 %5, 512, !dbg !13816
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13816
  tail call fastcc void @__NVIC_SetPriority.247(i32 noundef -2, i32 noundef 255) #25, !dbg !13817
  tail call fastcc void @__NVIC_SetPriority.247(i32 noundef -5, i32 noundef 0) #25, !dbg !13820
  tail call fastcc void @__NVIC_SetPriority.247(i32 noundef -12, i32 noundef 0) #25, !dbg !13821
  tail call fastcc void @__NVIC_SetPriority.247(i32 noundef -11, i32 noundef 0) #25, !dbg !13822
  tail call fastcc void @__NVIC_SetPriority.247(i32 noundef -10, i32 noundef 0) #25, !dbg !13823
  tail call fastcc void @__NVIC_SetPriority.247(i32 noundef -4, i32 noundef 0) #25, !dbg !13824
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13825
  %8 = or i32 %7, 458752, !dbg !13825
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13825
  tail call void @z_arm_fault_init() #25, !dbg !13826
  tail call void @z_arm_cpu_idle_init() #25, !dbg !13827
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13828
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !13831
  %9 = tail call i32 @z_arm_mpu_init() #25, !dbg !13832
  tail call void @z_arm_configure_static_mpu_regions() #25, !dbg !13833
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !13834
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %10) #23, !dbg !13834
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !13795, metadata !DIExpression()), !dbg !13835
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #24, !dbg !13836
  call void @z_device_state_init() #25, !dbg !13837
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #24, !dbg !13838
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #24, !dbg !13839
  %11 = call fastcc i8* @prepare_multithreading() #24, !dbg !13840
  call fastcc void @switch_to_main_thread(i8* noundef %11) #29, !dbg !13841
  unreachable, !dbg !13841
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2327 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2331, metadata !DIExpression()), !dbg !13842
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !13843
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !13843
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2332, metadata !DIExpression()), !dbg !13842
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2332, metadata !DIExpression()), !dbg !13842
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !13844
  br i1 %7, label %8, label %35, !dbg !13845

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2332, metadata !DIExpression()), !dbg !13842
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !13846
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !13846
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2342, metadata !DIExpression()), !dbg !13847
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !13848
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !13848
  %14 = tail call i32 %13(%struct.device* noundef %11) #25, !dbg !13849
  call void @llvm.dbg.value(metadata i32 %14, metadata !2346, metadata !DIExpression()), !dbg !13847
  %15 = icmp eq %struct.device* %11, null, !dbg !13850
  br i1 %15, label %32, label %16, !dbg !13852

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !13853
  br i1 %17, label %26, label %18, !dbg !13856

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !13857
  call void @llvm.dbg.value(metadata i32 %19, metadata !2346, metadata !DIExpression()), !dbg !13847
  %20 = icmp ult i32 %19, 255, !dbg !13859
  %21 = select i1 %20, i32 %19, i32 255, !dbg !13859
  call void @llvm.dbg.value(metadata i32 %21, metadata !2346, metadata !DIExpression()), !dbg !13847
  %22 = trunc i32 %21 to i8, !dbg !13860
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13861
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !13861
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !13862
  store i8 %22, i8* %25, align 1, !dbg !13863
  br label %26, !dbg !13864

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13865
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !13865
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !13866
  %30 = load i8, i8* %29, align 1, !dbg !13867
  %31 = or i8 %30, 1, !dbg !13867
  store i8 %31, i8* %29, align 1, !dbg !13867
  br label %32, !dbg !13868

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !13869
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2332, metadata !DIExpression()), !dbg !13842
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !13844
  br i1 %34, label %8, label %35, !dbg !13845, !llvm.loop !13870

35:                                               ; preds = %32, %1
  ret void, !dbg !13872
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.247(i32 noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !13873 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13875, metadata !DIExpression()), !dbg !13877
  call void @llvm.dbg.value(metadata i32 %1, metadata !13876, metadata !DIExpression()), !dbg !13877
  %3 = trunc i32 %1 to i8, !dbg !13878
  %4 = shl i8 %3, 4, !dbg !13878
  %5 = and i32 %0, 15, !dbg !13881
  %6 = add nsw i32 %5, -4, !dbg !13882
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !13883
  store volatile i8 %4, i8* %7, align 1, !dbg !13884
  ret void, !dbg !13885
}

; Function Attrs: optsize
declare !dbg !13886 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #7 !dbg !13887 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13890, metadata !DIExpression()), !dbg !13891
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13892
  store i8 1, i8* %2, align 1, !dbg !13893
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !13894
  store i8 1, i8* %3, align 4, !dbg !13895
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !13896
  store i32 0, i32* %4, align 4, !dbg !13897
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !13898
  store i32 0, i32* %5, align 4, !dbg !13899
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, !dbg !13900
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !13901
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13902
  ret void, !dbg !13903
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !13904 {
  tail call void @z_sched_init() #25, !dbg !13909
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13910
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.248, i32 0, i32 0)) #25, !dbg !13911
  call void @llvm.dbg.value(metadata i8* %1, metadata !13908, metadata !DIExpression()), !dbg !13912
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !13913
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !13914
  tail call void @z_init_cpu(i32 noundef 0) #24, !dbg !13915
  ret i8* %1, !dbg !13916
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #10 !dbg !13917 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13921, metadata !DIExpression()), !dbg !13922
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #25, !dbg !13923
  unreachable, !dbg !13924
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !13925 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13927, metadata !DIExpression()), !dbg !13930
  call void @llvm.dbg.value(metadata i8* %1, metadata !13928, metadata !DIExpression()), !dbg !13930
  call void @llvm.dbg.value(metadata i8* %2, metadata !13929, metadata !DIExpression()), !dbg !13930
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !13931
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #24, !dbg !13932
  tail call void @boot_banner() #25, !dbg !13933
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #24, !dbg !13934
  tail call void @z_init_static_threads() #25, !dbg !13935
  tail call void @main() #25, !dbg !13936
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13937
  %5 = and i8 %4, -2, !dbg !13937
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13937
  ret void, !dbg !13938
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #4 !dbg !13939 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13949, metadata !DIExpression()), !dbg !13951
  call void @llvm.dbg.value(metadata i8* %1, metadata !13950, metadata !DIExpression()), !dbg !13951
  ret void, !dbg !13952
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #4 !dbg !13953 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13955, metadata !DIExpression()), !dbg !13957
  call void @llvm.dbg.value(metadata i8* %1, metadata !13956, metadata !DIExpression()), !dbg !13957
  ret void, !dbg !13958
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !13959 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13960, !srcloc !13967
  call void @llvm.dbg.value(metadata i32 %1, metadata !13963, metadata !DIExpression()) #23, !dbg !13968
  %2 = icmp ne i32 %1, 0, !dbg !13969
  ret i1 %2, !dbg !13970
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #9 !dbg !13971 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13972
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13973
  %3 = load i8, i8* %2, align 4, !dbg !13974
  %4 = or i8 %3, 1, !dbg !13974
  store i8 %4, i8* %2, align 4, !dbg !13974
  ret void, !dbg !13975
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #9 !dbg !13976 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13977
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13978
  %3 = load i8, i8* %2, align 4, !dbg !13979
  %4 = and i8 %3, -2, !dbg !13979
  store i8 %4, i8* %2, align 4, !dbg !13979
  ret void, !dbg !13980
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #8 !dbg !13981 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13982
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13983
  %3 = load i8, i8* %2, align 4, !dbg !13983
  %4 = and i8 %3, 1, !dbg !13984
  %5 = icmp ne i8 %4, 0, !dbg !13985
  ret i1 %5, !dbg !13986
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13987 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13991, metadata !DIExpression()), !dbg !13993
  call void @llvm.dbg.value(metadata i8* %1, metadata !13992, metadata !DIExpression()), !dbg !13993
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13994
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %0, !dbg !13996
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13991, metadata !DIExpression()), !dbg !13993
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 0, !dbg !13997
  %7 = tail call i8* @strncpy(i8* noundef nonnull %6, i8* noundef %1, i32 noundef 31) #25, !dbg !13998
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 31, !dbg !13999
  store i8 0, i8* %8, align 1, !dbg !14000
  ret i32 0, !dbg !14001
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local nonnull i8* @k_thread_name_get(%struct.k_thread* noundef readnone %0) local_unnamed_addr #4 !dbg !14002 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14006, metadata !DIExpression()), !dbg !14007
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !14008
  ret i8* %2, !dbg !14009
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14010 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14014, metadata !DIExpression()), !dbg !14017
  call void @llvm.dbg.value(metadata i8* %1, metadata !14015, metadata !DIExpression()), !dbg !14017
  call void @llvm.dbg.value(metadata i32 %2, metadata !14016, metadata !DIExpression()), !dbg !14017
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !14018
  %5 = tail call i8* @strncpy(i8* noundef %1, i8* noundef nonnull %4, i32 noundef %2) #25, !dbg !14019
  ret i32 0, !dbg !14020
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2357 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2474, metadata !DIExpression()), !dbg !14021
  call void @llvm.dbg.value(metadata i8* %1, metadata !2475, metadata !DIExpression()), !dbg !14021
  call void @llvm.dbg.value(metadata i32 %2, metadata !2476, metadata !DIExpression()), !dbg !14021
  call void @llvm.dbg.value(metadata i32 0, metadata !2477, metadata !DIExpression()), !dbg !14021
  call void @llvm.dbg.value(metadata i8 undef, metadata !2479, metadata !DIExpression()), !dbg !14021
  %4 = icmp eq i8* %1, null, !dbg !14022
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !14024
  br i1 %6, label %46, label %7, !dbg !14024

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14025
  %9 = load i8, i8* %8, align 1, !dbg !14025
  call void @llvm.dbg.value(metadata i8 %9, metadata !2479, metadata !DIExpression()), !dbg !14021
  %10 = add i32 %2, -1, !dbg !14026
  call void @llvm.dbg.value(metadata i32 %10, metadata !2476, metadata !DIExpression()), !dbg !14021
  call void @llvm.dbg.value(metadata i8 0, metadata !2480, metadata !DIExpression()), !dbg !14027
  call void @llvm.dbg.value(metadata i8 %9, metadata !2479, metadata !DIExpression()), !dbg !14021
  call void @llvm.dbg.value(metadata i32 0, metadata !2477, metadata !DIExpression()), !dbg !14021
  %11 = icmp eq i8 %9, 0, !dbg !14028
  br i1 %11, label %12, label %15, !dbg !14030

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !14031
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !14032
  store i8 0, i8* %14, align 1, !dbg !14033
  br label %46, !dbg !14034

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2480, metadata !DIExpression()), !dbg !14027
  call void @llvm.dbg.value(metadata i8 %17, metadata !2479, metadata !DIExpression()), !dbg !14021
  call void @llvm.dbg.value(metadata i32 %18, metadata !2477, metadata !DIExpression()), !dbg !14021
  %19 = zext i8 %17 to i32, !dbg !14035
  %20 = zext i8 %16 to i32, !dbg !14036
  %21 = shl nuw i32 1, %20, !dbg !14036
  call void @llvm.dbg.value(metadata i32 %21, metadata !2478, metadata !DIExpression()), !dbg !14021
  %22 = and i32 %21, %19, !dbg !14038
  %23 = icmp eq i32 %22, 0, !dbg !14040
  br i1 %23, label %42, label %24, !dbg !14041

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !14042
  %26 = sub i32 %10, %18, !dbg !14043
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !14044
  %28 = load i8*, i8** %27, align 4, !dbg !14044
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !14045
  %30 = load i32, i32* %29, align 4, !dbg !14045
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #24, !dbg !14046
  %32 = add i32 %31, %18, !dbg !14047
  call void @llvm.dbg.value(metadata i32 %32, metadata !2477, metadata !DIExpression()), !dbg !14021
  %33 = trunc i32 %21 to i8, !dbg !14048
  %34 = xor i8 %33, -1, !dbg !14048
  %35 = and i8 %17, %34, !dbg !14048
  call void @llvm.dbg.value(metadata i8 %35, metadata !2479, metadata !DIExpression()), !dbg !14021
  %36 = icmp eq i8 %35, 0, !dbg !14049
  br i1 %36, label %12, label %37, !dbg !14051

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !14052
  %39 = sub i32 %10, %32, !dbg !14054
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.253, i32 0, i32 0), i32 noundef 1) #24, !dbg !14055
  %41 = add i32 %40, %32, !dbg !14056
  call void @llvm.dbg.value(metadata i32 %41, metadata !2477, metadata !DIExpression()), !dbg !14021
  br label %42, !dbg !14057

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !14021
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !14021
  call void @llvm.dbg.value(metadata i8 %44, metadata !2479, metadata !DIExpression()), !dbg !14021
  call void @llvm.dbg.value(metadata i32 %43, metadata !2477, metadata !DIExpression()), !dbg !14021
  %45 = add i8 %16, 1, !dbg !14058
  call void @llvm.dbg.value(metadata i8 %45, metadata !2480, metadata !DIExpression()), !dbg !14027
  br label %15, !dbg !14030

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.254, i32 0, i32 0), %3 ], !dbg !14021
  ret i8* %47, !dbg !14059
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !14060 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14064, metadata !DIExpression()), !dbg !14069
  call void @llvm.dbg.value(metadata i32 %1, metadata !14065, metadata !DIExpression()), !dbg !14069
  call void @llvm.dbg.value(metadata i8* %2, metadata !14066, metadata !DIExpression()), !dbg !14069
  call void @llvm.dbg.value(metadata i32 %3, metadata !14067, metadata !DIExpression()), !dbg !14069
  %5 = icmp ult i32 %1, %3, !dbg !14070
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !14070
  call void @llvm.dbg.value(metadata i32 %6, metadata !14068, metadata !DIExpression()), !dbg !14069
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #25, !dbg !14071
  ret i32 %6, !dbg !14072
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14073 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14077, metadata !DIExpression()), !dbg !14078
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #25, !dbg !14079
  ret void, !dbg !14080
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef %9) local_unnamed_addr #1 !dbg !14081 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14090, metadata !DIExpression()), !dbg !14101
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14091, metadata !DIExpression()), !dbg !14101
  call void @llvm.dbg.value(metadata i32 %2, metadata !14092, metadata !DIExpression()), !dbg !14101
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14093, metadata !DIExpression()), !dbg !14101
  call void @llvm.dbg.value(metadata i8* %4, metadata !14094, metadata !DIExpression()), !dbg !14101
  call void @llvm.dbg.value(metadata i8* %5, metadata !14095, metadata !DIExpression()), !dbg !14101
  call void @llvm.dbg.value(metadata i8* %6, metadata !14096, metadata !DIExpression()), !dbg !14101
  call void @llvm.dbg.value(metadata i32 %7, metadata !14097, metadata !DIExpression()), !dbg !14101
  call void @llvm.dbg.value(metadata i32 %8, metadata !14098, metadata !DIExpression()), !dbg !14101
  call void @llvm.dbg.value(metadata i8* %9, metadata !14099, metadata !DIExpression()), !dbg !14101
  %11 = icmp eq i32 %7, 15, !dbg !14102
  br i1 %11, label %12, label %15, !dbg !14102

12:                                               ; preds = %10
  %13 = bitcast void (i8*, i8*, i8*)* %3 to i8*, !dbg !14102
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef %13) #24, !dbg !14102
  br i1 %14, label %19, label %18, !dbg !14102

15:                                               ; preds = %10
  %16 = add i32 %7, 16, !dbg !14102
  %17 = icmp ult i32 %16, 31, !dbg !14102
  br i1 %17, label %19, label %18, !dbg !14102

18:                                               ; preds = %12, %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([128 x i8], [128 x i8]* @.str.10.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.268, i32 0, i32 0), i32 noundef 536) #25, !dbg !14106
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12.269, i32 0, i32 0), i32 noundef %7, i32 noundef 14, i32 noundef -16) #25, !dbg !14106
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.268, i32 0, i32 0), i32 noundef 536) #25, !dbg !14106
  unreachable, !dbg !14106

19:                                               ; preds = %15, %12
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14108
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %20) #24, !dbg !14109
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !14110
  tail call void @z_init_thread_base(%struct._thread_base* noundef %21, i32 noundef %7, i32 noundef 4, i32 noundef %8) #24, !dbg !14111
  %22 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #24, !dbg !14112
  call void @llvm.dbg.value(metadata i8* %22, metadata !14100, metadata !DIExpression()), !dbg !14101
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %22, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #25, !dbg !14113
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !14114
  store i8* null, i8** %23, align 4, !dbg !14115
  %24 = icmp eq i8* %9, null, !dbg !14116
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !14118
  br i1 %24, label %29, label %26, !dbg !14119

26:                                               ; preds = %19
  %27 = tail call i8* @strncpy(i8* noundef nonnull %25, i8* noundef nonnull %9, i32 noundef 31) #25, !dbg !14120
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 31, !dbg !14122
  store i8 0, i8* %28, align 1, !dbg !14123
  br label %30, !dbg !14124

29:                                               ; preds = %19
  store i8 0, i8* %25, align 8, !dbg !14125
  br label %30

30:                                               ; preds = %29, %26
  %31 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14127
  %32 = icmp eq %struct.k_thread* %31, null, !dbg !14127
  br i1 %32, label %36, label %33, !dbg !14129

33:                                               ; preds = %30
  %34 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %31, i32 0, i32 7, !dbg !14130
  %35 = load %struct.k_heap*, %struct.k_heap** %34, align 8, !dbg !14130
  br label %36, !dbg !14131

36:                                               ; preds = %30, %33
  %37 = phi %struct.k_heap* [ %35, %33 ], [ null, %30 ], !dbg !14101
  %38 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, !dbg !14132
  store %struct.k_heap* %37, %struct.k_heap** %38, align 8, !dbg !14134
  ret i8* %22, !dbg !14135
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef readnone %0) unnamed_addr #4 !dbg !14136 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14140, metadata !DIExpression()), !dbg !14141
  %2 = icmp eq i8* %0, bitcast (void (i8*, i8*, i8*)* @idle to i8*), !dbg !14142
  ret i1 %2, !dbg !14143
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #7 !dbg !14144 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14149, metadata !DIExpression()), !dbg !14150
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !14151
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #24, !dbg !14152
  ret void, !dbg !14153
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #7 !dbg !14154 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14159, metadata !DIExpression()), !dbg !14163
  call void @llvm.dbg.value(metadata i32 %1, metadata !14160, metadata !DIExpression()), !dbg !14163
  call void @llvm.dbg.value(metadata i32 %2, metadata !14161, metadata !DIExpression()), !dbg !14163
  call void @llvm.dbg.value(metadata i32 %3, metadata !14162, metadata !DIExpression()), !dbg !14163
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !14164
  store %union.anon* null, %union.anon** %5, align 8, !dbg !14165
  %6 = trunc i32 %3 to i8, !dbg !14166
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !14167
  store i8 %6, i8* %7, align 4, !dbg !14168
  %8 = trunc i32 %2 to i8, !dbg !14169
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !14170
  store i8 %8, i8* %9, align 1, !dbg !14171
  %10 = trunc i32 %1 to i8, !dbg !14172
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !14173
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !14173
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !14173
  store i8 %10, i8* %13, align 2, !dbg !14174
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !14175
  store i8 0, i8* %14, align 1, !dbg !14176
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #24, !dbg !14177
  ret void, !dbg !14178
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !14179 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14183, metadata !DIExpression()), !dbg !14191
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14184, metadata !DIExpression()), !dbg !14191
  call void @llvm.dbg.value(metadata i32 %2, metadata !14185, metadata !DIExpression()), !dbg !14191
  call void @llvm.dbg.value(metadata i32 0, metadata !14190, metadata !DIExpression()), !dbg !14191
  %4 = add i32 %2, 7, !dbg !14192
  %5 = and i32 %4, -8, !dbg !14192
  %6 = add i32 %5, 64, !dbg !14192
  call void @llvm.dbg.value(metadata i32 %6, metadata !14186, metadata !DIExpression()), !dbg !14191
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.270(%struct.z_thread_stack_element* noundef %1) #24, !dbg !14194
  call void @llvm.dbg.value(metadata i8* %7, metadata !14189, metadata !DIExpression()), !dbg !14191
  call void @llvm.dbg.value(metadata i32 %5, metadata !14187, metadata !DIExpression()), !dbg !14191
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !14195
  call void @llvm.dbg.value(metadata i8* %8, metadata !14188, metadata !DIExpression()), !dbg !14191
  call void @llvm.dbg.value(metadata i32 0, metadata !14190, metadata !DIExpression()), !dbg !14191
  %9 = ptrtoint i8* %7 to i32, !dbg !14196
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !14197
  store i32 %9, i32* %10, align 4, !dbg !14198
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !14199
  store i32 %5, i32* %11, align 4, !dbg !14200
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 2, !dbg !14201
  store i32 0, i32* %12, align 4, !dbg !14202
  call void @llvm.dbg.value(metadata i8* %8, metadata !14188, metadata !DIExpression()), !dbg !14191
  ret i8* %8, !dbg !14203
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.270(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !14204 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14208, metadata !DIExpression()), !dbg !14209
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14210
  ret i8* %2, !dbg !14211
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !14212 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14217, metadata !DIExpression()), !dbg !14218
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !14219
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !14220
  ret void, !dbg !14221
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !14222 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14224, metadata !DIExpression()), !dbg !14225
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14226
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #24, !dbg !14227
  ret void, !dbg !14228
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !14229 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14233, metadata !DIExpression()), !dbg !14234
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14235
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14236
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14237
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14238
  ret void, !dbg !14239
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !14240 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14245, metadata !DIExpression()), !dbg !14246
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14247
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14248
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14249
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14250
  ret void, !dbg !14251
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !14252 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14269, metadata !DIExpression()), !dbg !14270
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14260, metadata !DIExpression()), !dbg !14270
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14261, metadata !DIExpression()), !dbg !14270
  call void @llvm.dbg.value(metadata i32 %2, metadata !14262, metadata !DIExpression()), !dbg !14270
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14263, metadata !DIExpression()), !dbg !14270
  call void @llvm.dbg.value(metadata i8* %4, metadata !14264, metadata !DIExpression()), !dbg !14270
  call void @llvm.dbg.value(metadata i8* %5, metadata !14265, metadata !DIExpression()), !dbg !14270
  call void @llvm.dbg.value(metadata i8* %6, metadata !14266, metadata !DIExpression()), !dbg !14270
  call void @llvm.dbg.value(metadata i32 %7, metadata !14267, metadata !DIExpression()), !dbg !14270
  call void @llvm.dbg.value(metadata i32 %8, metadata !14268, metadata !DIExpression()), !dbg !14270
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14271, !srcloc !13967
  call void @llvm.dbg.value(metadata i32 %11, metadata !13963, metadata !DIExpression()) #23, !dbg !14276
  %12 = icmp eq i32 %11, 0, !dbg !14277
  br i1 %12, label %14, label %13, !dbg !14278

13:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.268, i32 0, i32 0), i32 noundef 647) #25, !dbg !14279
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14.274, i32 0, i32 0)) #25, !dbg !14279
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.268, i32 0, i32 0), i32 noundef 647) #25, !dbg !14279
  unreachable, !dbg !14279

14:                                               ; preds = %10
  %15 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %15, metadata !14269, metadata !DIExpression()), !dbg !14270
  %16 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef null) #24, !dbg !14281
  %17 = icmp eq i64 %15, -1, !dbg !14282
  br i1 %17, label %19, label %18, !dbg !14284

18:                                               ; preds = %14
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #24, !dbg !14285
  br label %19, !dbg !14287

19:                                               ; preds = %18, %14
  ret %struct.k_thread* %0, !dbg !14288
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14289 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14294, metadata !DIExpression()), !dbg !14295
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14293, metadata !DIExpression()), !dbg !14295
  %4 = icmp eq i64 %3, 0, !dbg !14296
  br i1 %4, label %5, label %6, !dbg !14298

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start.275(%struct.k_thread* noundef %0) #24, !dbg !14299
  br label %7, !dbg !14301

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !14302
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !14304
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start.275(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14305 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14309, metadata !DIExpression()), !dbg !14310
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !14311, !srcloc !14313
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !14314
  ret void, !dbg !14315
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14316 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14319, metadata !DIExpression()), !dbg !14320
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14318, metadata !DIExpression()), !dbg !14320
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14321
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !14322
  ret void, !dbg !14323
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !14324 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14326, metadata !DIExpression()), !dbg !14346
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %1, label %2, !dbg !14347

1:                                                ; preds = %6, %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.278, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.268, i32 0, i32 0), i32 noundef 750) #25, !dbg !14351
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.279, i32 0, i32 0)) #25, !dbg !14351
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.268, i32 0, i32 0), i32 noundef 750) #25, !dbg !14351
  unreachable, !dbg !14351

2:                                                ; preds = %0, %6
  %3 = phi %struct._static_thread_data* [ %31, %6 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !14326, metadata !DIExpression()), !dbg !14346
  %4 = icmp ult %struct._static_thread_data* %3, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14354
  br i1 %4, label %6, label %5, !dbg !14355

5:                                                ; preds = %2
  tail call void @k_sched_lock() #25, !dbg !14356
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14344, metadata !DIExpression()), !dbg !14357
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %33, label %34, !dbg !14358

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !14362
  %8 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !14362
  %9 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !14364
  %10 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %9, align 4, !dbg !14364
  %11 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !14365
  %12 = load i32, i32* %11, align 4, !dbg !14365
  %13 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !14366
  %14 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %13, align 4, !dbg !14366
  %15 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !14367
  %16 = load i8*, i8** %15, align 4, !dbg !14367
  %17 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !14368
  %18 = load i8*, i8** %17, align 4, !dbg !14368
  %19 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !14369
  %20 = load i8*, i8** %19, align 4, !dbg !14369
  %21 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !14370
  %22 = load i32, i32* %21, align 4, !dbg !14370
  %23 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !14371
  %24 = load i32, i32* %23, align 4, !dbg !14371
  %25 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 11, !dbg !14372
  %26 = load i8*, i8** %25, align 4, !dbg !14372
  %27 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %8, %struct.z_thread_stack_element* noundef %10, i32 noundef %12, void (i8*, i8*, i8*)* noundef %14, i8* noundef %16, i8* noundef %18, i8* noundef %20, i32 noundef %22, i32 noundef %24, i8* noundef %26) #24, !dbg !14373
  %28 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !14374
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 2, !dbg !14375
  %30 = bitcast i8** %29 to %struct._static_thread_data**, !dbg !14376
  store %struct._static_thread_data* %3, %struct._static_thread_data** %30, align 4, !dbg !14376
  %31 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !14377
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !14326, metadata !DIExpression()), !dbg !14346
  %32 = icmp ugt %struct._static_thread_data* %31, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14378
  br i1 %32, label %1, label %2, !dbg !14347, !llvm.loop !14379

33:                                               ; preds = %50, %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.278, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.268, i32 0, i32 0), i32 noundef 781) #25, !dbg !14381
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.279, i32 0, i32 0)) #25, !dbg !14381
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.268, i32 0, i32 0), i32 noundef 781) #25, !dbg !14381
  unreachable, !dbg !14381

34:                                               ; preds = %5, %50
  %35 = phi %struct._static_thread_data* [ %51, %50 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %5 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %35, metadata !14344, metadata !DIExpression()), !dbg !14357
  %36 = icmp ult %struct._static_thread_data* %35, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14384
  br i1 %36, label %38, label %37, !dbg !14385

37:                                               ; preds = %34
  tail call void @k_sched_unlock() #25, !dbg !14386
  ret void, !dbg !14387

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 9, !dbg !14388
  %40 = load i32, i32* %39, align 4, !dbg !14388
  %41 = icmp eq i32 %40, -1, !dbg !14391
  br i1 %41, label %50, label %42, !dbg !14392

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 0, !dbg !14393
  %44 = load %struct.k_thread*, %struct.k_thread** %43, align 4, !dbg !14393
  %45 = icmp sgt i32 %40, 0, !dbg !14395
  %46 = select i1 %45, i32 %40, i32 0, !dbg !14395
  %47 = zext i32 %46 to i64, !dbg !14395
  %48 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %47) #24, !dbg !14395
  %49 = insertvalue [1 x i64] poison, i64 %48, 0, !dbg !14396
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %44, [1 x i64] %49) #24, !dbg !14396
  br label %50, !dbg !14397

50:                                               ; preds = %38, %42
  %51 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 1, !dbg !14398
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %51, metadata !14344, metadata !DIExpression()), !dbg !14357
  %52 = icmp ugt %struct._static_thread_data* %51, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14399
  br i1 %52, label %33, label %34, !dbg !14358, !llvm.loop !14400
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !14402 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14406, metadata !DIExpression()), !dbg !14407
  call void @llvm.dbg.value(metadata i64 %0, metadata !14408, metadata !DIExpression()), !dbg !14423
  call void @llvm.dbg.value(metadata i32 1000, metadata !14411, metadata !DIExpression()), !dbg !14423
  call void @llvm.dbg.value(metadata i32 10000, metadata !14412, metadata !DIExpression()), !dbg !14423
  call void @llvm.dbg.value(metadata i8 1, metadata !14413, metadata !DIExpression()), !dbg !14423
  call void @llvm.dbg.value(metadata i8 0, metadata !14414, metadata !DIExpression()), !dbg !14423
  call void @llvm.dbg.value(metadata i8 1, metadata !14415, metadata !DIExpression()), !dbg !14423
  call void @llvm.dbg.value(metadata i8 0, metadata !14416, metadata !DIExpression()), !dbg !14423
  call void @llvm.dbg.value(metadata i8 1, metadata !14417, metadata !DIExpression()), !dbg !14423
  call void @llvm.dbg.value(metadata i8 0, metadata !14418, metadata !DIExpression()), !dbg !14423
  call void @llvm.dbg.value(metadata i64 0, metadata !14419, metadata !DIExpression()), !dbg !14423
  call void @llvm.dbg.value(metadata i64 0, metadata !14419, metadata !DIExpression()), !dbg !14423
  %2 = mul i64 %0, 10, !dbg !14425
  ret i64 %2, !dbg !14431
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #10 !dbg !14432 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !14434, metadata !DIExpression()), !dbg !14438
  call void @llvm.dbg.value(metadata i8* %1, metadata !14435, metadata !DIExpression()), !dbg !14438
  call void @llvm.dbg.value(metadata i8* %2, metadata !14436, metadata !DIExpression()), !dbg !14438
  call void @llvm.dbg.value(metadata i8* %3, metadata !14437, metadata !DIExpression()), !dbg !14438
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14439
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !14440
  %7 = load i8, i8* %6, align 4, !dbg !14441
  %8 = or i8 %7, 4, !dbg !14441
  store i8 %8, i8* %6, align 4, !dbg !14441
  tail call void @z_thread_essential_clear() #24, !dbg !14442
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !14443
  unreachable, !dbg !14443
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !14444 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14449, metadata !DIExpression()), !dbg !14451
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !14452
  %3 = load i32, i32* %2, align 4, !dbg !14452
  call void @llvm.dbg.value(metadata i32 %3, metadata !14450, metadata !DIExpression()), !dbg !14451
  %4 = icmp eq i32 %3, 0, !dbg !14453
  br i1 %4, label %10, label %5, !dbg !14455

5:                                                ; preds = %1
  %6 = and i32 %3, 3, !dbg !14456
  %7 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !14459
  %8 = zext i8 %7 to i32, !dbg !14460
  %9 = icmp eq i32 %6, %8, !dbg !14461
  br i1 %9, label %11, label %10, !dbg !14462

10:                                               ; preds = %5, %1
  br label %11, !dbg !14463

11:                                               ; preds = %5, %10
  %12 = phi i1 [ true, %10 ], [ false, %5 ], !dbg !14451
  ret i1 %12, !dbg !14464
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* nocapture noundef %0) local_unnamed_addr #9 !dbg !14465 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14467, metadata !DIExpression()), !dbg !14468
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !14469
  %3 = load i32, i32* %2, align 4, !dbg !14469
  %4 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !14471
  %5 = zext i8 %4 to i32, !dbg !14472
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14473
  %7 = ptrtoint %struct.k_thread* %6 to i32, !dbg !14474
  %8 = or i32 %7, %5, !dbg !14475
  %9 = icmp eq i32 %3, %8, !dbg !14476
  br i1 %9, label %10, label %11, !dbg !14477

10:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !14478
  br label %11, !dbg !14479

11:                                               ; preds = %1, %10
  ret i1 %9, !dbg !14480
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_spin_lock_set_owner(%struct.k_spinlock* nocapture noundef writeonly %0) local_unnamed_addr #9 !dbg !14481 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14485, metadata !DIExpression()), !dbg !14486
  %2 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !14487
  %3 = zext i8 %2 to i32, !dbg !14488
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14489
  %5 = ptrtoint %struct.k_thread* %4 to i32, !dbg !14490
  %6 = or i32 %5, %3, !dbg !14491
  %7 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !14492
  store i32 %6, i32* %7, align 4, !dbg !14493
  ret void, !dbg !14494
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #4 !dbg !14495 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14499, metadata !DIExpression()), !dbg !14500
  ret i32 -134, !dbg !14501
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #4 !dbg !14502 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14506, metadata !DIExpression()), !dbg !14508
  call void @llvm.dbg.value(metadata i32 %1, metadata !14507, metadata !DIExpression()), !dbg !14508
  ret i32 -134, !dbg !14509
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct._cpu_arch* noundef readnone %1) local_unnamed_addr #4 !dbg !14510 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14517, metadata !DIExpression()), !dbg !14519
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %1, metadata !14518, metadata !DIExpression()), !dbg !14519
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !14520
  %4 = icmp eq %struct._cpu_arch* %1, null
  %5 = or i1 %3, %4, !dbg !14522
  %6 = select i1 %5, i32 -22, i32 0, !dbg !14519
  ret i32 %6, !dbg !14523
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct._cpu_arch* noundef readnone %0) local_unnamed_addr #4 !dbg !14524 {
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %0, metadata !14528, metadata !DIExpression()), !dbg !14529
  %2 = icmp eq %struct._cpu_arch* %0, null, !dbg !14530
  %3 = select i1 %2, i32 -22, i32 0, !dbg !14529
  ret i32 %3, !dbg !14532
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !14533 {
  tail call void @sys_clock_idle_exit() #25, !dbg !14535
  ret void, !dbg !14536
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #10 !dbg !14537 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14539, metadata !DIExpression()), !dbg !14542
  call void @llvm.dbg.value(metadata i8* %1, metadata !14540, metadata !DIExpression()), !dbg !14542
  call void @llvm.dbg.value(metadata i8* %2, metadata !14541, metadata !DIExpression()), !dbg !14542
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14543
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !14543
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !14543
  %7 = load i8, i8* %6, align 2, !dbg !14543
  %8 = icmp sgt i8 %7, -1, !dbg !14543
  br i1 %8, label %10, label %9, !dbg !14546

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.290, i32 0, i32 0), i32 noundef 39) #25, !dbg !14547
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.290, i32 0, i32 0), i32 noundef 39) #25, !dbg !14547
  unreachable, !dbg !14547

10:                                               ; preds = %3, %10
  %11 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14549, !srcloc !14556
  call void @llvm.dbg.value(metadata i32 undef, metadata !14552, metadata !DIExpression()) #23, !dbg !14557
  call void @llvm.dbg.value(metadata i32 undef, metadata !14553, metadata !DIExpression()) #23, !dbg !14557
  tail call fastcc void @k_cpu_idle() #24, !dbg !14558
  br label %10, !dbg !14559, !llvm.loop !14560
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !14562 {
  tail call void @arch_cpu_idle() #25, !dbg !14563
  ret void, !dbg !14564
}

; Function Attrs: optsize
declare !dbg !14565 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !14566 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14570, metadata !DIExpression()), !dbg !14574
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14571, metadata !DIExpression()), !dbg !14574
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14575
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !14575
  %5 = load i8, i8* %4, align 2, !dbg !14575
  call void @llvm.dbg.value(metadata i8 %5, metadata !14572, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14574
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !14576
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !14576
  %8 = load i8, i8* %7, align 2, !dbg !14576
  call void @llvm.dbg.value(metadata i8 %8, metadata !14573, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14574
  %9 = icmp eq i8 %8, %5, !dbg !14577
  %10 = sext i8 %5 to i32, !dbg !14579
  %11 = sext i8 %8 to i32, !dbg !14579
  %12 = sub nsw i32 %11, %10, !dbg !14579
  %13 = select i1 %9, i32 0, i32 %12, !dbg !14579
  ret i32 %13, !dbg !14580
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !14581 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14585, metadata !DIExpression()), !dbg !14586
  %2 = tail call fastcc i32 @slice_time() #24, !dbg !14587
  %3 = icmp eq i32 %2, 0, !dbg !14589
  br i1 %3, label %8, label %4, !dbg !14590

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #25, !dbg !14591
  %6 = add i32 %5, %2, !dbg !14593
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14594
  %7 = tail call fastcc i32 @slice_time() #24, !dbg !14595
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #25, !dbg !14596
  br label %8, !dbg !14597

8:                                                ; preds = %4, %1
  ret void, !dbg !14598
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #8 !dbg !14599 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14603, metadata !DIExpression()), !dbg !14605
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !14606
  call void @llvm.dbg.value(metadata i32 %1, metadata !14604, metadata !DIExpression()), !dbg !14605
  ret i32 %1, !dbg !14607
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14608 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14612, metadata !DIExpression()), !dbg !14621
  call void @llvm.dbg.value(metadata i32 %1, metadata !14613, metadata !DIExpression()), !dbg !14621
  call void @llvm.dbg.value(metadata i32 0, metadata !14614, metadata !DIExpression()), !dbg !14622
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14623, metadata !DIExpression()) #23, !dbg !14630
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14632, !srcloc !14638
  call void @llvm.dbg.value(metadata i32 undef, metadata !14635, metadata !DIExpression()) #23, !dbg !14639
  call void @llvm.dbg.value(metadata i32 undef, metadata !14636, metadata !DIExpression()) #23, !dbg !14639
  call void @llvm.dbg.value(metadata i32 undef, metadata !14629, metadata !DIExpression()) #23, !dbg !14630
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14640
  br i1 %4, label %6, label %5, !dbg !14643

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 148) #25, !dbg !14644
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.294, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14644
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 148) #25, !dbg !14644
  unreachable, !dbg !14644

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14635, metadata !DIExpression()) #23, !dbg !14639
  call void @llvm.dbg.value(metadata i32 undef, metadata !14629, metadata !DIExpression()) #23, !dbg !14630
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14646
  call void @llvm.dbg.value(metadata i32 undef, metadata !14620, metadata !DIExpression()), !dbg !14622
  call void @llvm.dbg.value(metadata i32 undef, metadata !14614, metadata !DIExpression()), !dbg !14622
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14647
  %7 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #24, !dbg !14650
  %8 = icmp sgt i32 %0, 0, !dbg !14651
  %9 = icmp sgt i32 %7, 2, !dbg !14653
  %10 = select i1 %9, i32 %7, i32 2, !dbg !14653
  %11 = select i1 %8, i32 %10, i32 %7, !dbg !14653
  store i32 %11, i32* @slice_ticks, align 4, !dbg !14654
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !14655
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14656
  call void @llvm.dbg.value(metadata i32 undef, metadata !14657, metadata !DIExpression()) #23, !dbg !14663
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14662, metadata !DIExpression()) #23, !dbg !14663
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14665
  br i1 %12, label %14, label %13, !dbg !14668

13:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 194) #25, !dbg !14669
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.296, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14669
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 194) #25, !dbg !14669
  unreachable, !dbg !14669

14:                                               ; preds = %6
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !14632
  call void @llvm.dbg.value(metadata i32 %15, metadata !14635, metadata !DIExpression()) #23, !dbg !14639
  call void @llvm.dbg.value(metadata i32 %15, metadata !14629, metadata !DIExpression()) #23, !dbg !14630
  call void @llvm.dbg.value(metadata i32 %15, metadata !14620, metadata !DIExpression()), !dbg !14622
  call void @llvm.dbg.value(metadata i32 undef, metadata !14657, metadata !DIExpression()) #23, !dbg !14663
  call void @llvm.dbg.value(metadata i32 undef, metadata !14671, metadata !DIExpression()) #23, !dbg !14674
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !14676, !srcloc !14677
  call void @llvm.dbg.value(metadata i32 1, metadata !14614, metadata !DIExpression()), !dbg !14622
  call void @llvm.dbg.value(metadata i32 undef, metadata !14614, metadata !DIExpression()), !dbg !14622
  ret void, !dbg !14678
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #4 !dbg !14679 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14681, metadata !DIExpression()), !dbg !14682
  call void @llvm.dbg.value(metadata i32 %0, metadata !14683, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14698
  call void @llvm.dbg.value(metadata i32 1000, metadata !14686, metadata !DIExpression()), !dbg !14698
  call void @llvm.dbg.value(metadata i32 10000, metadata !14687, metadata !DIExpression()), !dbg !14698
  call void @llvm.dbg.value(metadata i8 1, metadata !14688, metadata !DIExpression()), !dbg !14698
  call void @llvm.dbg.value(metadata i1 true, metadata !14689, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14698
  call void @llvm.dbg.value(metadata i1 true, metadata !14690, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14698
  call void @llvm.dbg.value(metadata i8 0, metadata !14691, metadata !DIExpression()), !dbg !14698
  call void @llvm.dbg.value(metadata i1 true, metadata !14692, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14698
  call void @llvm.dbg.value(metadata i1 false, metadata !14693, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14698
  call void @llvm.dbg.value(metadata i64 0, metadata !14694, metadata !DIExpression()), !dbg !14698
  call void @llvm.dbg.value(metadata i64 0, metadata !14694, metadata !DIExpression()), !dbg !14698
  %2 = mul i32 %0, 10, !dbg !14700
  ret i32 %2, !dbg !14706
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !14707 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14709, metadata !DIExpression()), !dbg !14711
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14623, metadata !DIExpression()) #23, !dbg !14712
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14714, !srcloc !14638
  call void @llvm.dbg.value(metadata i32 undef, metadata !14635, metadata !DIExpression()) #23, !dbg !14716
  call void @llvm.dbg.value(metadata i32 undef, metadata !14636, metadata !DIExpression()) #23, !dbg !14716
  call void @llvm.dbg.value(metadata i32 undef, metadata !14629, metadata !DIExpression()) #23, !dbg !14712
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14717
  br i1 %3, label %5, label %4, !dbg !14718

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 148) #25, !dbg !14719
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.294, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14719
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 148) #25, !dbg !14719
  unreachable, !dbg !14719

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14714
  call void @llvm.dbg.value(metadata i32 %6, metadata !14635, metadata !DIExpression()) #23, !dbg !14716
  call void @llvm.dbg.value(metadata i32 %6, metadata !14629, metadata !DIExpression()) #23, !dbg !14712
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14720
  call void @llvm.dbg.value(metadata i32 %6, metadata !14710, metadata !DIExpression()), !dbg !14711
  %7 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14721
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14723
  %9 = icmp eq %struct.k_thread* %7, %8, !dbg !14724
  br i1 %9, label %10, label %14, !dbg !14725

10:                                               ; preds = %5
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14726
  call void @llvm.dbg.value(metadata i32 undef, metadata !14657, metadata !DIExpression()) #23, !dbg !14728
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14662, metadata !DIExpression()) #23, !dbg !14728
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14730
  br i1 %11, label %13, label %12, !dbg !14731

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 194) #25, !dbg !14732
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.296, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14732
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 194) #25, !dbg !14732
  unreachable, !dbg !14732

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %6, metadata !14657, metadata !DIExpression()) #23, !dbg !14728
  call void @llvm.dbg.value(metadata i32 %6, metadata !14671, metadata !DIExpression()) #23, !dbg !14733
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !14735, !srcloc !14677
  br label %33, !dbg !14736

14:                                               ; preds = %5
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14737
  %15 = tail call fastcc i32 @slice_time() #24, !dbg !14738
  %16 = icmp eq i32 %15, 0, !dbg !14738
  br i1 %16, label %27, label %17, !dbg !14740

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %8) #24, !dbg !14741
  br i1 %18, label %19, label %27, !dbg !14742

19:                                               ; preds = %17
  %20 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14743
  %21 = icmp sgt i32 %20, %0, !dbg !14746
  br i1 %21, label %25, label %22, !dbg !14747

22:                                               ; preds = %19
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14748
  %24 = tail call fastcc i32 @slice_expired_locked([1 x i32] %23) #24, !dbg !14748
  call void @llvm.dbg.value(metadata i32 %24, metadata !14710, metadata !DIExpression()), !dbg !14711
  br label %28, !dbg !14750

25:                                               ; preds = %19
  %26 = sub nsw i32 %20, %0, !dbg !14751
  store i32 %26, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14751
  br label %28

27:                                               ; preds = %17, %14
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14753
  br label %28

28:                                               ; preds = %22, %25, %27
  %29 = phi i32 [ %24, %22 ], [ %6, %25 ], [ %6, %27 ], !dbg !14711
  call void @llvm.dbg.value(metadata i32 %29, metadata !14710, metadata !DIExpression()), !dbg !14711
  call void @llvm.dbg.value(metadata i32 undef, metadata !14657, metadata !DIExpression()) #23, !dbg !14755
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14662, metadata !DIExpression()) #23, !dbg !14755
  %30 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14757
  br i1 %30, label %32, label %31, !dbg !14758

31:                                               ; preds = %28
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 194) #25, !dbg !14759
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.296, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14759
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 194) #25, !dbg !14759
  unreachable, !dbg !14759

32:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %29, metadata !14657, metadata !DIExpression()) #23, !dbg !14755
  call void @llvm.dbg.value(metadata i32 %29, metadata !14671, metadata !DIExpression()) #23, !dbg !14760
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %29) #23, !dbg !14762, !srcloc !14677
  br label %33, !dbg !14763

33:                                               ; preds = %32, %13
  ret void, !dbg !14763
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #8 !dbg !14764 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14768, metadata !DIExpression()), !dbg !14770
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #24, !dbg !14771
  %3 = icmp eq i32 %2, 0, !dbg !14771
  br i1 %3, label %16, label %4, !dbg !14772

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !14773
  br i1 %5, label %16, label %6, !dbg !14774

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14775
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !14775
  %9 = load i8, i8* %8, align 2, !dbg !14775
  %10 = sext i8 %9 to i32, !dbg !14776
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !14777
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #24, !dbg !14778
  br i1 %12, label %16, label %13, !dbg !14779

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #24, !dbg !14780
  %15 = xor i1 %14, true, !dbg !14781
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !14770
  call void @llvm.dbg.value(metadata i1 %17, metadata !14769, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14770
  ret i1 %17, !dbg !14782
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !14783 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14787, metadata !DIExpression()), !dbg !14789
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14790
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14788, metadata !DIExpression()), !dbg !14789
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #24, !dbg !14791
  br i1 %3, label %5, label %4, !dbg !14793

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #24, !dbg !14794
  br label %5, !dbg !14796

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !14787, metadata !DIExpression()), !dbg !14789
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14797
  ret i32 %6, !dbg !14798
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14799 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14801, metadata !DIExpression()), !dbg !14803
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14804
  %3 = load i8, i8* %2, align 1, !dbg !14804
  call void @llvm.dbg.value(metadata i8 %3, metadata !14802, metadata !DIExpression()), !dbg !14803
  %4 = and i8 %3, 31, !dbg !14805
  %5 = icmp ne i8 %4, 0, !dbg !14806
  ret i1 %5, !dbg !14807
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14808 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14810, metadata !DIExpression()), !dbg !14811
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !14812
  br i1 %2, label %3, label %7, !dbg !14814

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14815, metadata !DIExpression()) #23, !dbg !14818
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14821
  %5 = load i8, i8* %4, align 1, !dbg !14822
  %6 = and i8 %5, 127, !dbg !14822
  store i8 %6, i8* %4, align 1, !dbg !14822
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14823, metadata !DIExpression()) #23, !dbg !14826
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14830
  br label %7, !dbg !14831

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14832, metadata !DIExpression()) #23, !dbg !14835
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14837
  %9 = load i8, i8* %8, align 1, !dbg !14838
  %10 = or i8 %9, -128, !dbg !14838
  store i8 %10, i8* %8, align 1, !dbg !14838
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14839, metadata !DIExpression()) #23, !dbg !14842
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14846, metadata !DIExpression()) #23, !dbg !14854
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14852, metadata !DIExpression()) #23, !dbg !14854
  %11 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !14856
  br i1 %11, label %12, label %13, !dbg !14859

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.297, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.298, i32 0, i32 0), i32 noundef 186) #25, !dbg !14860
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.298, i32 0, i32 0), i32 noundef 186) #25, !dbg !14860
  unreachable, !dbg !14860

13:                                               ; preds = %7
  %14 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14862
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !14853, metadata !DIExpression()) #23, !dbg !14854
  %15 = icmp eq %struct._dnode* %14, null, !dbg !14864
  br i1 %15, label %26, label %16, !dbg !14862

16:                                               ; preds = %13, %23
  %17 = phi %struct._dnode* [ %24, %23 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !14853, metadata !DIExpression()) #23, !dbg !14854
  %18 = bitcast %struct._dnode* %17 to %struct.k_thread*, !dbg !14866
  call void @llvm.dbg.value(metadata %struct.k_thread* %18, metadata !14853, metadata !DIExpression()) #23, !dbg !14854
  %19 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %18) #25, !dbg !14867
  %20 = icmp sgt i32 %19, 0, !dbg !14870
  br i1 %20, label %21, label %23, !dbg !14871

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14872
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %17, %struct._dnode* noundef %22) #25, !dbg !14874
  br label %28, !dbg !14875

23:                                               ; preds = %16
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %17) #25, !dbg !14864
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14853, metadata !DIExpression()) #23, !dbg !14854
  %25 = icmp eq %struct._dnode* %24, null, !dbg !14864
  br i1 %25, label %26, label %16, !dbg !14862, !llvm.loop !14876

26:                                               ; preds = %23, %13
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14878
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %27) #25, !dbg !14879
  br label %28, !dbg !14880

28:                                               ; preds = %21, %26
  %29 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14881
  %30 = icmp eq %struct.k_thread* %29, %0, !dbg !14882
  %31 = zext i1 %30 to i32, !dbg !14882
  tail call fastcc void @update_cache(i32 noundef %31) #24, !dbg !14883
  ret void, !dbg !14884
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14885 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14887, metadata !DIExpression()), !dbg !14888
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0, i32 noundef 128) #24, !dbg !14889
  ret i1 %2, !dbg !14890
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14891 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !14893, metadata !DIExpression()), !dbg !14895
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14894, metadata !DIExpression()), !dbg !14895
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !14896
  br i1 %3, label %4, label %5, !dbg !14899

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.297, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.298, i32 0, i32 0), i32 noundef 1139) #25, !dbg !14900
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.298, i32 0, i32 0), i32 noundef 1139) #25, !dbg !14900
  unreachable, !dbg !14900

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !14902
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %6) #24, !dbg !14903
  ret void, !dbg !14904
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #4 !dbg !14905 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14907, metadata !DIExpression()), !dbg !14908
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !14909
  ret i1 %2, !dbg !14910
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !14911 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14915, metadata !DIExpression()), !dbg !14916
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #24, !dbg !14917
  br i1 %2, label %6, label %3, !dbg !14917

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14918
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14918
  br label %6, !dbg !14917

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14917
  ret %struct._dnode* %7, !dbg !14919
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !14920 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14924, metadata !DIExpression()), !dbg !14928
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14925, metadata !DIExpression()), !dbg !14928
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14929
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14929
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14926, metadata !DIExpression()), !dbg !14928
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14930
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !14931
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14932
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !14933
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14934
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14935
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14936
  ret void, !dbg !14937
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !14938 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14942, metadata !DIExpression()), !dbg !14944
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14943, metadata !DIExpression()), !dbg !14944
  %3 = icmp eq %struct._dnode* %1, null, !dbg !14945
  br i1 %3, label %6, label %4, !dbg !14946

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #24, !dbg !14947
  br label %6, !dbg !14946

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !14946
  ret %struct._dnode* %7, !dbg !14948
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !14949 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14953, metadata !DIExpression()), !dbg !14956
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14954, metadata !DIExpression()), !dbg !14956
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14957
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14957
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14955, metadata !DIExpression()), !dbg !14956
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14958
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !14959
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14960
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !14961
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14962
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14963
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14964
  ret void, !dbg !14965
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !14966 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14968, metadata !DIExpression()), !dbg !14970
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14971
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14978, metadata !DIExpression()) #23, !dbg !14980
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14981
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !14982
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !14982
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14969, metadata !DIExpression()), !dbg !14970
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14983, metadata !DIExpression()) #23, !dbg !14989
  call void @llvm.dbg.value(metadata i32 %0, metadata !14988, metadata !DIExpression()) #23, !dbg !14989
  %6 = icmp eq i32 %0, 0, !dbg !14992
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14994
  br i1 %6, label %8, label %18, !dbg !14995

8:                                                ; preds = %1
  %9 = icmp eq %struct.k_thread* %7, null, !dbg !14996
  br i1 %9, label %10, label %11, !dbg !14999

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.298, i32 0, i32 0), i32 noundef 137) #25, !dbg !15000
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.300, i32 0, i32 0)) #25, !dbg !15000
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.298, i32 0, i32 0), i32 noundef 137) #25, !dbg !15000
  unreachable, !dbg !15000

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %7) #25, !dbg !15002
  br i1 %12, label %18, label %13, !dbg !15004

13:                                               ; preds = %11
  %14 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #25, !dbg !15005
  br i1 %14, label %18, label %15, !dbg !15007

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef nonnull %7) #25, !dbg !15008
  %17 = icmp eq i32 %16, 0, !dbg !15008
  br i1 %17, label %21, label %18, !dbg !15010

18:                                               ; preds = %1, %13, %11, %15
  %19 = icmp eq %struct.k_thread* %5, %7, !dbg !15011
  br i1 %19, label %21, label %20, !dbg !15014

20:                                               ; preds = %18
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !15015
  br label %21, !dbg !15017

21:                                               ; preds = %15, %18, %20
  %22 = phi %struct.k_thread* [ %5, %20 ], [ %5, %18 ], [ %7, %15 ], !dbg !14994
  store %struct.k_thread* %22, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14994
  ret void, !dbg !15018
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #8 !dbg !15019 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15023, metadata !DIExpression()), !dbg !15026
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15024, metadata !DIExpression()), !dbg !15026
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #24, !dbg !15027
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !15025, metadata !DIExpression()), !dbg !15026
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15024, metadata !DIExpression()), !dbg !15026
  ret %struct.k_thread* %3, !dbg !15028
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15029 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15031, metadata !DIExpression()), !dbg !15032
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15033
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !15034
  %4 = xor i1 %3, true, !dbg !15035
  ret i1 %4, !dbg !15036
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15037 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15039, metadata !DIExpression()), !dbg !15040
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !15041
  %3 = load i16, i16* %2, align 2, !dbg !15041
  %4 = icmp ult i16 %3, 128, !dbg !15042
  %5 = zext i1 %4 to i32, !dbg !15042
  ret i32 %5, !dbg !15043
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15044 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15050, metadata !DIExpression()), !dbg !15051
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15052
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #24, !dbg !15053
  %4 = xor i1 %3, true, !dbg !15054
  ret i1 %4, !dbg !15055
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15056 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15062, metadata !DIExpression()), !dbg !15063
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15064
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15064
  %4 = icmp ne %struct._dnode* %3, null, !dbg !15065
  ret i1 %4, !dbg !15066
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !15067 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15069, metadata !DIExpression()), !dbg !15071
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15070, metadata !DIExpression()), !dbg !15071
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15072
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15072
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !15073
  br i1 %5, label %9, label %6, !dbg !15074

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15075
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !15075
  br label %9, !dbg !15074

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !15074
  ret %struct._dnode* %10, !dbg !15076
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !15077 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15081, metadata !DIExpression()), !dbg !15082
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15083
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15083
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !15084
  ret i1 %4, !dbg !15085
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !15086 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15090, metadata !DIExpression()), !dbg !15093
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15094
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15094
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15091, metadata !DIExpression()), !dbg !15093
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15095
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15095
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !15092, metadata !DIExpression()), !dbg !15093
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !15096
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !15097
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !15098
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !15099
  tail call fastcc void @sys_dnode_init.301(%struct._dnode* noundef %0) #24, !dbg !15100
  ret void, !dbg !15101
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.301(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !15102 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15104, metadata !DIExpression()), !dbg !15105
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15106
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15107
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15108
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15109
  ret void, !dbg !15110
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #8 !dbg !15111 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15115, metadata !DIExpression()), !dbg !15117
  call void @llvm.dbg.value(metadata i32 %1, metadata !15116, metadata !DIExpression()), !dbg !15117
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15118
  %4 = load i8, i8* %3, align 1, !dbg !15118
  %5 = zext i8 %4 to i32, !dbg !15119
  %6 = and i32 %5, %1, !dbg !15120
  %7 = icmp ne i32 %6, 0, !dbg !15121
  ret i1 %7, !dbg !15122
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !15123 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15127, metadata !DIExpression()), !dbg !15129
  call void @llvm.dbg.value(metadata i32 %1, metadata !15128, metadata !DIExpression()), !dbg !15129
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #24, !dbg !15130
  ret i1 %3, !dbg !15131
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !15132 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15134, metadata !DIExpression()), !dbg !15136
  call void @llvm.dbg.value(metadata i32 %1, metadata !15135, metadata !DIExpression()), !dbg !15136
  %3 = icmp slt i32 %0, %1, !dbg !15137
  ret i1 %3, !dbg !15138
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15139 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15141, metadata !DIExpression()), !dbg !15145
  call void @llvm.dbg.value(metadata i32 0, metadata !15142, metadata !DIExpression()), !dbg !15146
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14623, metadata !DIExpression()) #23, !dbg !15147
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15149, !srcloc !14638
  call void @llvm.dbg.value(metadata i32 undef, metadata !14635, metadata !DIExpression()) #23, !dbg !15151
  call void @llvm.dbg.value(metadata i32 undef, metadata !14636, metadata !DIExpression()) #23, !dbg !15151
  call void @llvm.dbg.value(metadata i32 undef, metadata !14629, metadata !DIExpression()) #23, !dbg !15147
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15152
  br i1 %3, label %5, label %4, !dbg !15153

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 148) #25, !dbg !15154
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.294, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15154
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 148) #25, !dbg !15154
  unreachable, !dbg !15154

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14635, metadata !DIExpression()) #23, !dbg !15151
  call void @llvm.dbg.value(metadata i32 undef, metadata !14629, metadata !DIExpression()) #23, !dbg !15147
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15155
  call void @llvm.dbg.value(metadata i32 undef, metadata !15144, metadata !DIExpression()), !dbg !15146
  call void @llvm.dbg.value(metadata i32 undef, metadata !15142, metadata !DIExpression()), !dbg !15146
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15156
  call void @llvm.dbg.value(metadata i32 undef, metadata !14657, metadata !DIExpression()) #23, !dbg !15161
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14662, metadata !DIExpression()) #23, !dbg !15161
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15163
  br i1 %6, label %8, label %7, !dbg !15164

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 194) #25, !dbg !15165
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.296, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15165
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 194) #25, !dbg !15165
  unreachable, !dbg !15165

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15149
  call void @llvm.dbg.value(metadata i32 %9, metadata !14635, metadata !DIExpression()) #23, !dbg !15151
  call void @llvm.dbg.value(metadata i32 %9, metadata !14629, metadata !DIExpression()) #23, !dbg !15147
  call void @llvm.dbg.value(metadata i32 %9, metadata !15144, metadata !DIExpression()), !dbg !15146
  call void @llvm.dbg.value(metadata i32 undef, metadata !14657, metadata !DIExpression()) #23, !dbg !15161
  call void @llvm.dbg.value(metadata i32 undef, metadata !14671, metadata !DIExpression()) #23, !dbg !15166
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15168, !srcloc !14677
  call void @llvm.dbg.value(metadata i32 1, metadata !15142, metadata !DIExpression()), !dbg !15146
  call void @llvm.dbg.value(metadata i32 undef, metadata !15142, metadata !DIExpression()), !dbg !15146
  ret void, !dbg !15169
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15170 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15172, metadata !DIExpression()), !dbg !15173
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15174
  br i1 %2, label %27, label %3, !dbg !15176

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !15177
  br i1 %4, label %5, label %27, !dbg !15178

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14832, metadata !DIExpression()) #23, !dbg !15179
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15182
  %7 = load i8, i8* %6, align 1, !dbg !15183
  %8 = or i8 %7, -128, !dbg !15183
  store i8 %8, i8* %6, align 1, !dbg !15183
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14839, metadata !DIExpression()) #23, !dbg !15184
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14846, metadata !DIExpression()) #23, !dbg !15186
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14852, metadata !DIExpression()) #23, !dbg !15186
  %9 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !15188
  br i1 %9, label %10, label %11, !dbg !15189

10:                                               ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.297, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.298, i32 0, i32 0), i32 noundef 186) #25, !dbg !15190
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.298, i32 0, i32 0), i32 noundef 186) #25, !dbg !15190
  unreachable, !dbg !15190

11:                                               ; preds = %5
  %12 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15191
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !14853, metadata !DIExpression()) #23, !dbg !15186
  %13 = icmp eq %struct._dnode* %12, null, !dbg !15192
  br i1 %13, label %24, label %14, !dbg !15191

14:                                               ; preds = %11, %21
  %15 = phi %struct._dnode* [ %22, %21 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !14853, metadata !DIExpression()) #23, !dbg !15186
  %16 = bitcast %struct._dnode* %15 to %struct.k_thread*, !dbg !15193
  call void @llvm.dbg.value(metadata %struct.k_thread* %16, metadata !14853, metadata !DIExpression()) #23, !dbg !15186
  %17 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %16) #25, !dbg !15194
  %18 = icmp sgt i32 %17, 0, !dbg !15195
  br i1 %18, label %19, label %21, !dbg !15196

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15197
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %15, %struct._dnode* noundef %20) #25, !dbg !15198
  br label %26, !dbg !15199

21:                                               ; preds = %14
  %22 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %15) #25, !dbg !15192
  call void @llvm.dbg.value(metadata %struct._dnode* %22, metadata !14853, metadata !DIExpression()) #23, !dbg !15186
  %23 = icmp eq %struct._dnode* %22, null, !dbg !15192
  br i1 %23, label %24, label %14, !dbg !15191, !llvm.loop !15200

24:                                               ; preds = %21, %11
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15202
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %25) #25, !dbg !15203
  br label %26, !dbg !15204

26:                                               ; preds = %19, %24
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !15205
  br label %27, !dbg !15206

27:                                               ; preds = %26, %3, %1
  ret void, !dbg !15207
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15208 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15210, metadata !DIExpression()), !dbg !15211
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !15212
  br i1 %2, label %6, label %3, !dbg !15213

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #24, !dbg !15214
  %5 = xor i1 %4, true, !dbg !15213
  br label %6, !dbg !15213

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !15215
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15216 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15218, metadata !DIExpression()), !dbg !15222
  call void @llvm.dbg.value(metadata i32 0, metadata !15219, metadata !DIExpression()), !dbg !15223
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14623, metadata !DIExpression()) #23, !dbg !15224
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15226, !srcloc !14638
  call void @llvm.dbg.value(metadata i32 undef, metadata !14635, metadata !DIExpression()) #23, !dbg !15228
  call void @llvm.dbg.value(metadata i32 undef, metadata !14636, metadata !DIExpression()) #23, !dbg !15228
  call void @llvm.dbg.value(metadata i32 undef, metadata !14629, metadata !DIExpression()) #23, !dbg !15224
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15229
  br i1 %3, label %5, label %4, !dbg !15230

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 148) #25, !dbg !15231
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.294, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15231
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 148) #25, !dbg !15231
  unreachable, !dbg !15231

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14635, metadata !DIExpression()) #23, !dbg !15228
  call void @llvm.dbg.value(metadata i32 undef, metadata !14629, metadata !DIExpression()) #23, !dbg !15224
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15232
  call void @llvm.dbg.value(metadata i32 undef, metadata !15221, metadata !DIExpression()), !dbg !15223
  call void @llvm.dbg.value(metadata i32 undef, metadata !15219, metadata !DIExpression()), !dbg !15223
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #24, !dbg !15233
  call void @llvm.dbg.value(metadata i32 undef, metadata !14657, metadata !DIExpression()) #23, !dbg !15236
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14662, metadata !DIExpression()) #23, !dbg !15236
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15238
  br i1 %6, label %8, label %7, !dbg !15239

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 194) #25, !dbg !15240
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.296, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15240
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 194) #25, !dbg !15240
  unreachable, !dbg !15240

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15226
  call void @llvm.dbg.value(metadata i32 %9, metadata !14635, metadata !DIExpression()) #23, !dbg !15228
  call void @llvm.dbg.value(metadata i32 %9, metadata !14629, metadata !DIExpression()) #23, !dbg !15224
  call void @llvm.dbg.value(metadata i32 %9, metadata !15221, metadata !DIExpression()), !dbg !15223
  call void @llvm.dbg.value(metadata i32 undef, metadata !14657, metadata !DIExpression()) #23, !dbg !15236
  call void @llvm.dbg.value(metadata i32 undef, metadata !14671, metadata !DIExpression()) #23, !dbg !15241
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15243, !srcloc !14677
  call void @llvm.dbg.value(metadata i32 1, metadata !15219, metadata !DIExpression()), !dbg !15223
  call void @llvm.dbg.value(metadata i32 undef, metadata !15219, metadata !DIExpression()), !dbg !15223
  ret void, !dbg !15244
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15245 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15247, metadata !DIExpression()), !dbg !15249
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14623, metadata !DIExpression()) #23, !dbg !15250
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15252, !srcloc !14638
  call void @llvm.dbg.value(metadata i32 undef, metadata !14635, metadata !DIExpression()) #23, !dbg !15254
  call void @llvm.dbg.value(metadata i32 undef, metadata !14636, metadata !DIExpression()) #23, !dbg !15254
  call void @llvm.dbg.value(metadata i32 undef, metadata !14629, metadata !DIExpression()) #23, !dbg !15250
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15255
  br i1 %3, label %5, label %4, !dbg !15256

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 148) #25, !dbg !15257
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.294, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15257
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 148) #25, !dbg !15257
  unreachable, !dbg !15257

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !15252
  call void @llvm.dbg.value(metadata i32 %6, metadata !14635, metadata !DIExpression()) #23, !dbg !15254
  call void @llvm.dbg.value(metadata i32 %6, metadata !14629, metadata !DIExpression()) #23, !dbg !15250
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15258
  call void @llvm.dbg.value(metadata i32 %6, metadata !15248, metadata !DIExpression()), !dbg !15249
  %7 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #24, !dbg !15259
  br i1 %7, label %8, label %12, !dbg !15261

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14657, metadata !DIExpression()) #23, !dbg !15262
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14662, metadata !DIExpression()) #23, !dbg !15262
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15265
  br i1 %9, label %11, label %10, !dbg !15266

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 194) #25, !dbg !15267
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.296, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15267
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 194) #25, !dbg !15267
  unreachable, !dbg !15267

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !14657, metadata !DIExpression()) #23, !dbg !15262
  call void @llvm.dbg.value(metadata i32 %6, metadata !14671, metadata !DIExpression()) #23, !dbg !15268
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !15270, !srcloc !14677
  br label %14, !dbg !15271

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_started.306(%struct.k_thread* noundef %0) #24, !dbg !15272
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15273
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !15274
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #24, !dbg !15274
  br label %14, !dbg !15275

14:                                               ; preds = %12, %11
  ret void, !dbg !15275
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15276 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15278, metadata !DIExpression()), !dbg !15279
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15280
  %3 = load i8, i8* %2, align 1, !dbg !15280
  %4 = and i8 %3, 4, !dbg !15281
  %5 = icmp eq i8 %4, 0, !dbg !15282
  ret i1 %5, !dbg !15283
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.306(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15284 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15286, metadata !DIExpression()), !dbg !15287
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15288
  %3 = load i8, i8* %2, align 1, !dbg !15289
  %4 = and i8 %3, -5, !dbg !15289
  store i8 %4, i8* %2, align 1, !dbg !15289
  ret void, !dbg !15290
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !15291 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !15294, metadata !DIExpression()), !dbg !15295
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15293, metadata !DIExpression()), !dbg !15295
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #24, !dbg !15296
  br i1 %4, label %5, label %12, !dbg !15298

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #24, !dbg !15299
  br i1 %6, label %7, label %12, !dbg !15300

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !15301, metadata !DIExpression()) #23, !dbg !15307
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15306, metadata !DIExpression()) #23, !dbg !15307
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15310, metadata !DIExpression()) #23, !dbg !15315
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !15317
  br i1 %8, label %10, label %9, !dbg !15320

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 225) #25, !dbg !15321
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.296, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !15321
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 225) #25, !dbg !15321
  unreachable, !dbg !15321

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 %3, metadata !15301, metadata !DIExpression()) #23, !dbg !15307
  %11 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !15323
  br label %16, !dbg !15324

12:                                               ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14657, metadata !DIExpression()) #23, !dbg !15325
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14662, metadata !DIExpression()) #23, !dbg !15325
  %13 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !15328
  br i1 %13, label %15, label %14, !dbg !15329

14:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 194) #25, !dbg !15330
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.296, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !15330
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 194) #25, !dbg !15330
  unreachable, !dbg !15330

15:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 %3, metadata !14657, metadata !DIExpression()) #23, !dbg !15325
  call void @llvm.dbg.value(metadata i32 %3, metadata !14671, metadata !DIExpression()) #23, !dbg !15331
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15333, !srcloc !14677
  br label %16

16:                                               ; preds = %15, %10
  ret void, !dbg !15334
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !15335 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15339, metadata !DIExpression()), !dbg !15340
  call void @llvm.dbg.value(metadata i32 %0, metadata !15341, metadata !DIExpression()), !dbg !15346
  %2 = icmp eq i32 %0, 0, !dbg !15348
  br i1 %2, label %3, label %6, !dbg !15349

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15350, !srcloc !15357
  call void @llvm.dbg.value(metadata i32 %4, metadata !15353, metadata !DIExpression()) #23, !dbg !15358
  %5 = icmp eq i32 %4, 0, !dbg !15359
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !15340
  ret i1 %7, !dbg !15360
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #8 !dbg !15361 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15364
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15363, metadata !DIExpression()), !dbg !15365
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15366
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !15367
  ret i1 %3, !dbg !15368
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !15369 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15371, metadata !DIExpression()), !dbg !15373
  %2 = tail call i32 @arch_swap(i32 noundef %0) #25, !dbg !15374
  call void @llvm.dbg.value(metadata i32 %2, metadata !15372, metadata !DIExpression()), !dbg !15373
  ret i32 %2, !dbg !15375
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15376 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15378, metadata !DIExpression()), !dbg !15382
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !15383
  call void @llvm.dbg.value(metadata i32 0, metadata !15379, metadata !DIExpression()), !dbg !15384
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14623, metadata !DIExpression()) #23, !dbg !15385
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15387, !srcloc !14638
  call void @llvm.dbg.value(metadata i32 undef, metadata !14635, metadata !DIExpression()) #23, !dbg !15389
  call void @llvm.dbg.value(metadata i32 undef, metadata !14636, metadata !DIExpression()) #23, !dbg !15389
  call void @llvm.dbg.value(metadata i32 undef, metadata !14629, metadata !DIExpression()) #23, !dbg !15385
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15390
  br i1 %4, label %6, label %5, !dbg !15391

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 148) #25, !dbg !15392
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.294, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15392
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 148) #25, !dbg !15392
  unreachable, !dbg !15392

6:                                                ; preds = %1
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !15387
  call void @llvm.dbg.value(metadata i32 %7, metadata !14635, metadata !DIExpression()) #23, !dbg !15389
  call void @llvm.dbg.value(metadata i32 %7, metadata !14629, metadata !DIExpression()) #23, !dbg !15385
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15393
  call void @llvm.dbg.value(metadata i32 %7, metadata !15381, metadata !DIExpression()), !dbg !15384
  call void @llvm.dbg.value(metadata i32 undef, metadata !15379, metadata !DIExpression()), !dbg !15384
  %8 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15394
  br i1 %8, label %9, label %13, !dbg !15398

9:                                                ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14815, metadata !DIExpression()) #23, !dbg !15399
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15402
  %11 = load i8, i8* %10, align 1, !dbg !15403
  %12 = and i8 %11, 127, !dbg !15403
  store i8 %12, i8* %10, align 1, !dbg !15403
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14823, metadata !DIExpression()) #23, !dbg !15404
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15406
  br label %13, !dbg !15407

13:                                               ; preds = %9, %6
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #24, !dbg !15408
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15409
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !15410
  %16 = zext i1 %15 to i32, !dbg !15410
  tail call fastcc void @update_cache(i32 noundef %16) #24, !dbg !15411
  call void @llvm.dbg.value(metadata i32 undef, metadata !14657, metadata !DIExpression()) #23, !dbg !15412
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14662, metadata !DIExpression()) #23, !dbg !15412
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15414
  br i1 %17, label %19, label %18, !dbg !15415

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 194) #25, !dbg !15416
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.296, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15416
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 194) #25, !dbg !15416
  unreachable, !dbg !15416

19:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %7, metadata !14657, metadata !DIExpression()) #23, !dbg !15412
  call void @llvm.dbg.value(metadata i32 %7, metadata !14671, metadata !DIExpression()) #23, !dbg !15417
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !15419, !srcloc !14677
  call void @llvm.dbg.value(metadata i32 1, metadata !15379, metadata !DIExpression()), !dbg !15384
  call void @llvm.dbg.value(metadata i32 undef, metadata !15379, metadata !DIExpression()), !dbg !15384
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15420
  %21 = icmp eq %struct.k_thread* %20, %0, !dbg !15422
  br i1 %21, label %22, label %23, !dbg !15423

22:                                               ; preds = %19
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15424
  br label %23, !dbg !15426

23:                                               ; preds = %22, %19
  ret void, !dbg !15427
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15428 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15430, metadata !DIExpression()), !dbg !15431
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15432
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !15433
  ret i32 %3, !dbg !15434
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15435 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15437, metadata !DIExpression()), !dbg !15438
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15439
  %3 = load i8, i8* %2, align 1, !dbg !15440
  %4 = or i8 %3, 16, !dbg !15440
  store i8 %4, i8* %2, align 1, !dbg !15440
  ret void, !dbg !15441
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !15442 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15443, !srcloc !14638
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15443
  call void @llvm.dbg.value(metadata i32 %2, metadata !14635, metadata !DIExpression()) #23, !dbg !15445
  call void @llvm.dbg.value(metadata i32 undef, metadata !14636, metadata !DIExpression()) #23, !dbg !15445
  tail call void @z_reschedule_irqlock(i32 noundef %2) #24, !dbg !15446
  ret void, !dbg !15447
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !15448 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15450, metadata !DIExpression()), !dbg !15451
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #24, !dbg !15452
  br i1 %2, label %3, label %5, !dbg !15454

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !15455
  br label %6, !dbg !15457

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !14671, metadata !DIExpression()) #23, !dbg !15458
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !15461, !srcloc !14677
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !15462
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15463 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15465, metadata !DIExpression()), !dbg !15467
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14623, metadata !DIExpression()) #23, !dbg !15468
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15470, !srcloc !14638
  call void @llvm.dbg.value(metadata i32 undef, metadata !14635, metadata !DIExpression()) #23, !dbg !15472
  call void @llvm.dbg.value(metadata i32 undef, metadata !14636, metadata !DIExpression()) #23, !dbg !15472
  call void @llvm.dbg.value(metadata i32 undef, metadata !14629, metadata !DIExpression()) #23, !dbg !15468
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15473
  br i1 %3, label %5, label %4, !dbg !15474

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 148) #25, !dbg !15475
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.294, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15475
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 148) #25, !dbg !15475
  unreachable, !dbg !15475

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !15470
  call void @llvm.dbg.value(metadata i32 %6, metadata !14635, metadata !DIExpression()) #23, !dbg !15472
  call void @llvm.dbg.value(metadata i32 %6, metadata !14629, metadata !DIExpression()) #23, !dbg !15468
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15476
  call void @llvm.dbg.value(metadata i32 %6, metadata !15466, metadata !DIExpression()), !dbg !15467
  %7 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #24, !dbg !15477
  br i1 %7, label %12, label %8, !dbg !15479

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14657, metadata !DIExpression()) #23, !dbg !15480
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14662, metadata !DIExpression()) #23, !dbg !15480
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15483
  br i1 %9, label %11, label %10, !dbg !15484

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 194) #25, !dbg !15485
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.296, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15485
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 194) #25, !dbg !15485
  unreachable, !dbg !15485

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !14657, metadata !DIExpression()) #23, !dbg !15480
  call void @llvm.dbg.value(metadata i32 %6, metadata !14671, metadata !DIExpression()) #23, !dbg !15486
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !15488, !srcloc !14677
  br label %14, !dbg !15489

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !15490
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15491
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !15492
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #24, !dbg !15492
  br label %14, !dbg !15493

14:                                               ; preds = %12, %11
  ret void, !dbg !15493
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15494 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15496, metadata !DIExpression()), !dbg !15497
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15498
  %3 = load i8, i8* %2, align 1, !dbg !15498
  %4 = and i8 %3, 16, !dbg !15499
  %5 = icmp ne i8 %4, 0, !dbg !15500
  ret i1 %5, !dbg !15501
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15502 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15504, metadata !DIExpression()), !dbg !15505
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15506
  %3 = load i8, i8* %2, align 1, !dbg !15507
  %4 = and i8 %3, -17, !dbg !15507
  store i8 %4, i8* %2, align 1, !dbg !15507
  ret void, !dbg !15508
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15509 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15519, metadata !DIExpression()), !dbg !15523
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15517, metadata !DIExpression()), !dbg !15523
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15518, metadata !DIExpression()), !dbg !15523
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15524
  %5 = icmp eq %struct.k_thread* %4, %0, !dbg !15524
  br i1 %5, label %9, label %6, !dbg !15524

6:                                                ; preds = %3
  %7 = tail call fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* noundef %0) #24, !dbg !15524
  br i1 %7, label %9, label %8, !dbg !15527

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.307, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.298, i32 0, i32 0), i32 noundef 773) #25, !dbg !15528
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.298, i32 0, i32 0), i32 noundef 773) #25, !dbg !15528
  unreachable, !dbg !15528

9:                                                ; preds = %3, %6
  call void @llvm.dbg.value(metadata i32 0, metadata !15520, metadata !DIExpression()), !dbg !15530
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14623, metadata !DIExpression()) #23, !dbg !15531
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15533, !srcloc !14638
  call void @llvm.dbg.value(metadata i32 undef, metadata !14635, metadata !DIExpression()) #23, !dbg !15535
  call void @llvm.dbg.value(metadata i32 undef, metadata !14636, metadata !DIExpression()) #23, !dbg !15535
  call void @llvm.dbg.value(metadata i32 undef, metadata !14629, metadata !DIExpression()) #23, !dbg !15531
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15536
  br i1 %11, label %13, label %12, !dbg !15537

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 148) #25, !dbg !15538
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.294, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15538
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 148) #25, !dbg !15538
  unreachable, !dbg !15538

13:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14635, metadata !DIExpression()) #23, !dbg !15535
  call void @llvm.dbg.value(metadata i32 undef, metadata !14629, metadata !DIExpression()) #23, !dbg !15531
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15539
  call void @llvm.dbg.value(metadata i32 undef, metadata !15522, metadata !DIExpression()), !dbg !15530
  call void @llvm.dbg.value(metadata i32 undef, metadata !15520, metadata !DIExpression()), !dbg !15530
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #24, !dbg !15540
  call void @llvm.dbg.value(metadata i32 undef, metadata !14657, metadata !DIExpression()) #23, !dbg !15543
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14662, metadata !DIExpression()) #23, !dbg !15543
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15545
  br i1 %14, label %16, label %15, !dbg !15546

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 194) #25, !dbg !15547
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.296, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15547
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 194) #25, !dbg !15547
  unreachable, !dbg !15547

16:                                               ; preds = %13
  %17 = extractvalue { i32, i32 } %10, 0, !dbg !15533
  call void @llvm.dbg.value(metadata i32 %17, metadata !14635, metadata !DIExpression()) #23, !dbg !15535
  call void @llvm.dbg.value(metadata i32 %17, metadata !14629, metadata !DIExpression()) #23, !dbg !15531
  call void @llvm.dbg.value(metadata i32 %17, metadata !15522, metadata !DIExpression()), !dbg !15530
  call void @llvm.dbg.value(metadata i32 undef, metadata !14657, metadata !DIExpression()) #23, !dbg !15543
  call void @llvm.dbg.value(metadata i32 undef, metadata !14671, metadata !DIExpression()) #23, !dbg !15548
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %17) #23, !dbg !15550, !srcloc !14677
  call void @llvm.dbg.value(metadata i32 1, metadata !15520, metadata !DIExpression()), !dbg !15530
  call void @llvm.dbg.value(metadata i32 undef, metadata !15520, metadata !DIExpression()), !dbg !15530
  ret void, !dbg !15551
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15552 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15554, metadata !DIExpression()), !dbg !15555
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15556
  %3 = load i8, i8* %2, align 1, !dbg !15556
  %4 = and i8 %3, 1, !dbg !15557
  %5 = icmp ne i8 %4, 0, !dbg !15558
  ret i1 %5, !dbg !15559
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !15560 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15564, metadata !DIExpression()), !dbg !15565
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15562, metadata !DIExpression()), !dbg !15565
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15563, metadata !DIExpression()), !dbg !15565
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #24, !dbg !15566
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #24, !dbg !15567
  ret void, !dbg !15568
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !15569 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15573, metadata !DIExpression()), !dbg !15575
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15574, metadata !DIExpression()), !dbg !15575
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #24, !dbg !15576
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #24, !dbg !15577
  %3 = icmp eq %union.anon* %1, null, !dbg !15578
  br i1 %3, label %24, label %4, !dbg !15580

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15581
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !15583
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !15584
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !14846, metadata !DIExpression()) #23, !dbg !15585
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14852, metadata !DIExpression()) #23, !dbg !15585
  %7 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !15587
  br i1 %7, label %8, label %9, !dbg !15588

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.297, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.298, i32 0, i32 0), i32 noundef 186) #25, !dbg !15589
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.298, i32 0, i32 0), i32 noundef 186) #25, !dbg !15589
  unreachable, !dbg !15589

9:                                                ; preds = %4
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #25, !dbg !15590
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14853, metadata !DIExpression()) #23, !dbg !15585
  %11 = icmp eq %struct._dnode* %10, null, !dbg !15591
  br i1 %11, label %22, label %12, !dbg !15590

12:                                               ; preds = %9, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !14853, metadata !DIExpression()) #23, !dbg !15585
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !15592
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14853, metadata !DIExpression()) #23, !dbg !15585
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %14) #25, !dbg !15593
  %16 = icmp sgt i32 %15, 0, !dbg !15594
  br i1 %16, label %17, label %19, !dbg !15595

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15596
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #25, !dbg !15597
  br label %24, !dbg !15598

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %13) #25, !dbg !15591
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14853, metadata !DIExpression()) #23, !dbg !15585
  %21 = icmp eq %struct._dnode* %20, null, !dbg !15591
  br i1 %21, label %22, label %12, !dbg !15590, !llvm.loop !15599

22:                                               ; preds = %19, %9
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15601
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %23) #25, !dbg !15602
  br label %24, !dbg !15603

24:                                               ; preds = %22, %17, %2
  ret void, !dbg !15604
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15605 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15610, metadata !DIExpression()), !dbg !15611
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15609, metadata !DIExpression()), !dbg !15611
  %4 = icmp eq i64 %3, -1, !dbg !15612
  br i1 %4, label %6, label %5, !dbg !15614

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.308(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !15615
  br label %6, !dbg !15617

6:                                                ; preds = %5, %2
  ret void, !dbg !15618
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.308(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15619 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15622, metadata !DIExpression()), !dbg !15623
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15621, metadata !DIExpression()), !dbg !15623
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15624
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !15625
  ret void, !dbg !15626
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !15627 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15629, metadata !DIExpression()), !dbg !15637
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !15638
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !15638
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15630, metadata !DIExpression()), !dbg !15637
  call void @llvm.dbg.value(metadata i32 0, metadata !15631, metadata !DIExpression()), !dbg !15639
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14623, metadata !DIExpression()) #23, !dbg !15640
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15642, !srcloc !14638
  call void @llvm.dbg.value(metadata i32 undef, metadata !14635, metadata !DIExpression()) #23, !dbg !15644
  call void @llvm.dbg.value(metadata i32 undef, metadata !14636, metadata !DIExpression()) #23, !dbg !15644
  call void @llvm.dbg.value(metadata i32 undef, metadata !14629, metadata !DIExpression()) #23, !dbg !15640
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15645
  br i1 %5, label %7, label %6, !dbg !15646

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 148) #25, !dbg !15647
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.294, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15647
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 148) #25, !dbg !15647
  unreachable, !dbg !15647

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14635, metadata !DIExpression()) #23, !dbg !15644
  call void @llvm.dbg.value(metadata i32 undef, metadata !14629, metadata !DIExpression()) #23, !dbg !15640
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15648
  call void @llvm.dbg.value(metadata i32 undef, metadata !15633, metadata !DIExpression()), !dbg !15639
  call void @llvm.dbg.value(metadata i32 undef, metadata !15631, metadata !DIExpression()), !dbg !15639
  %8 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !15649
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %8, i32 0, i32 3, !dbg !15650
  %10 = load i8, i8* %9, align 1, !dbg !15650
  %11 = and i8 %10, 40, !dbg !15651
  %12 = icmp eq i8 %11, 0, !dbg !15651
  call void @llvm.dbg.value(metadata i1 %12, metadata !15634, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15652
  br i1 %12, label %13, label %20, !dbg !15653

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !15654
  %15 = bitcast void (%struct._timeout*)** %14 to %union.anon**, !dbg !15654
  %16 = load %union.anon*, %union.anon** %15, align 8, !dbg !15654
  %17 = icmp eq %union.anon* %16, null, !dbg !15658
  br i1 %17, label %19, label %18, !dbg !15659

18:                                               ; preds = %13
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #24, !dbg !15660
  br label %19, !dbg !15662

19:                                               ; preds = %18, %13
  tail call fastcc void @z_mark_thread_as_started.306(%struct.k_thread* noundef nonnull %3) #24, !dbg !15663
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #24, !dbg !15664
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #24, !dbg !15665
  br label %20, !dbg !15666

20:                                               ; preds = %19, %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !14657, metadata !DIExpression()) #23, !dbg !15667
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14662, metadata !DIExpression()) #23, !dbg !15667
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15669
  br i1 %21, label %23, label %22, !dbg !15670

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 194) #25, !dbg !15671
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.296, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15671
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 194) #25, !dbg !15671
  unreachable, !dbg !15671

23:                                               ; preds = %20
  %24 = extractvalue { i32, i32 } %4, 0, !dbg !15642
  call void @llvm.dbg.value(metadata i32 %24, metadata !14635, metadata !DIExpression()) #23, !dbg !15644
  call void @llvm.dbg.value(metadata i32 %24, metadata !14629, metadata !DIExpression()) #23, !dbg !15640
  call void @llvm.dbg.value(metadata i32 %24, metadata !15633, metadata !DIExpression()), !dbg !15639
  call void @llvm.dbg.value(metadata i32 undef, metadata !14657, metadata !DIExpression()) #23, !dbg !15667
  call void @llvm.dbg.value(metadata i32 undef, metadata !14671, metadata !DIExpression()) #23, !dbg !15672
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !15674, !srcloc !14677
  call void @llvm.dbg.value(metadata i32 1, metadata !15631, metadata !DIExpression()), !dbg !15639
  call void @llvm.dbg.value(metadata i32 undef, metadata !15631, metadata !DIExpression()), !dbg !15639
  ret void, !dbg !15675
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15676 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15678, metadata !DIExpression()), !dbg !15679
  %2 = tail call fastcc %union.anon* @pended_on_thread(%struct.k_thread* noundef %0) #24, !dbg !15680
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !15681
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #24, !dbg !15682
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15683
  store %union.anon* null, %union.anon** %3, align 8, !dbg !15684
  ret void, !dbg !15685
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %union.anon* @pended_on_thread(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #1 !dbg !15686 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15690, metadata !DIExpression()), !dbg !15691
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15692
  %3 = load %union.anon*, %union.anon** %2, align 8, !dbg !15692
  %4 = icmp eq %union.anon* %3, null, !dbg !15692
  br i1 %4, label %5, label %6, !dbg !15695

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.311, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.298, i32 0, i32 0), i32 noundef 726) #25, !dbg !15696
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.298, i32 0, i32 0), i32 noundef 726) #25, !dbg !15696
  unreachable, !dbg !15696

6:                                                ; preds = %1
  ret %union.anon* %3, !dbg !15698
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15699 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15701, metadata !DIExpression()), !dbg !15702
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15703
  %3 = load i8, i8* %2, align 1, !dbg !15704
  %4 = and i8 %3, -3, !dbg !15704
  store i8 %4, i8* %2, align 1, !dbg !15704
  ret void, !dbg !15705
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15706 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15708, metadata !DIExpression()), !dbg !15709
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15710
  br i1 %2, label %3, label %7, !dbg !15712

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14815, metadata !DIExpression()) #23, !dbg !15713
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15716
  %5 = load i8, i8* %4, align 1, !dbg !15717
  %6 = and i8 %5, 127, !dbg !15717
  store i8 %6, i8* %4, align 1, !dbg !15717
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14823, metadata !DIExpression()) #23, !dbg !15718
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15720
  br label %7, !dbg !15721

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15722
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !15723
  %10 = zext i1 %9 to i32, !dbg !15723
  tail call fastcc void @update_cache(i32 noundef %10) #24, !dbg !15724
  ret void, !dbg !15725
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15726 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15728, metadata !DIExpression()), !dbg !15729
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15730
  %3 = load i8, i8* %2, align 1, !dbg !15731
  %4 = or i8 %3, 2, !dbg !15731
  store i8 %4, i8* %2, align 1, !dbg !15731
  ret void, !dbg !15732
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* noundef %0) local_unnamed_addr #22 !dbg !15733 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15735, metadata !DIExpression()), !dbg !15739
  call void @llvm.dbg.value(metadata i32 0, metadata !15736, metadata !DIExpression()), !dbg !15740
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14623, metadata !DIExpression()) #23, !dbg !15741
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15743, !srcloc !14638
  call void @llvm.dbg.value(metadata i32 undef, metadata !14635, metadata !DIExpression()) #23, !dbg !15745
  call void @llvm.dbg.value(metadata i32 undef, metadata !14636, metadata !DIExpression()) #23, !dbg !15745
  call void @llvm.dbg.value(metadata i32 undef, metadata !14629, metadata !DIExpression()) #23, !dbg !15741
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15746
  br i1 %3, label %5, label %4, !dbg !15747

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 148) #25, !dbg !15748
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.294, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15748
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 148) #25, !dbg !15748
  unreachable, !dbg !15748

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14635, metadata !DIExpression()) #23, !dbg !15745
  call void @llvm.dbg.value(metadata i32 undef, metadata !14629, metadata !DIExpression()) #23, !dbg !15741
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15749
  call void @llvm.dbg.value(metadata i32 undef, metadata !15738, metadata !DIExpression()), !dbg !15740
  call void @llvm.dbg.value(metadata i32 undef, metadata !15736, metadata !DIExpression()), !dbg !15740
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !15750
  call void @llvm.dbg.value(metadata i32 undef, metadata !14657, metadata !DIExpression()) #23, !dbg !15753
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14662, metadata !DIExpression()) #23, !dbg !15753
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15755
  br i1 %6, label %8, label %7, !dbg !15756

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 194) #25, !dbg !15757
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.296, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15757
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 194) #25, !dbg !15757
  unreachable, !dbg !15757

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15743
  call void @llvm.dbg.value(metadata i32 %9, metadata !14635, metadata !DIExpression()) #23, !dbg !15745
  call void @llvm.dbg.value(metadata i32 %9, metadata !14629, metadata !DIExpression()) #23, !dbg !15741
  call void @llvm.dbg.value(metadata i32 %9, metadata !15738, metadata !DIExpression()), !dbg !15740
  call void @llvm.dbg.value(metadata i32 undef, metadata !14657, metadata !DIExpression()) #23, !dbg !15753
  call void @llvm.dbg.value(metadata i32 undef, metadata !14671, metadata !DIExpression()) #23, !dbg !15758
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15760, !srcloc !14677
  call void @llvm.dbg.value(metadata i32 1, metadata !15736, metadata !DIExpression()), !dbg !15740
  call void @llvm.dbg.value(metadata i32 undef, metadata !15736, metadata !DIExpression()), !dbg !15740
  ret void, !dbg !15761
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15762 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15768, metadata !DIExpression()), !dbg !15773
  call void @llvm.dbg.value(metadata i32 %0, metadata !15766, metadata !DIExpression()), !dbg !15773
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15767, metadata !DIExpression()), !dbg !15773
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15774
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #24, !dbg !15775
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15776
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15777
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !15778
  call void @llvm.dbg.value(metadata i32 %6, metadata !15769, metadata !DIExpression()), !dbg !15773
  call void @llvm.dbg.value(metadata i32 0, metadata !15770, metadata !DIExpression()), !dbg !15779
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14623, metadata !DIExpression()) #23, !dbg !15780
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15782, !srcloc !14638
  call void @llvm.dbg.value(metadata i32 undef, metadata !14635, metadata !DIExpression()) #23, !dbg !15784
  call void @llvm.dbg.value(metadata i32 undef, metadata !14636, metadata !DIExpression()) #23, !dbg !15784
  call void @llvm.dbg.value(metadata i32 undef, metadata !14629, metadata !DIExpression()) #23, !dbg !15780
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15785
  br i1 %8, label %10, label %9, !dbg !15786

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 148) #25, !dbg !15787
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.294, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15787
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 148) #25, !dbg !15787
  unreachable, !dbg !15787

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !14635, metadata !DIExpression()) #23, !dbg !15784
  call void @llvm.dbg.value(metadata i32 undef, metadata !14629, metadata !DIExpression()) #23, !dbg !15780
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15788
  call void @llvm.dbg.value(metadata i32 undef, metadata !15772, metadata !DIExpression()), !dbg !15779
  call void @llvm.dbg.value(metadata i32 undef, metadata !15770, metadata !DIExpression()), !dbg !15779
  %11 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15789
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15793
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !15794
  br i1 %13, label %14, label %15, !dbg !15795

14:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15796
  br label %15, !dbg !15798

15:                                               ; preds = %10, %14
  call void @llvm.dbg.value(metadata i32 undef, metadata !14657, metadata !DIExpression()) #23, !dbg !15799
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14662, metadata !DIExpression()) #23, !dbg !15799
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15801
  br i1 %16, label %18, label %17, !dbg !15802

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 194) #25, !dbg !15803
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.296, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15803
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 194) #25, !dbg !15803
  unreachable, !dbg !15803

18:                                               ; preds = %15
  %19 = extractvalue { i32, i32 } %7, 0, !dbg !15782
  call void @llvm.dbg.value(metadata i32 %19, metadata !14635, metadata !DIExpression()) #23, !dbg !15784
  call void @llvm.dbg.value(metadata i32 %19, metadata !14629, metadata !DIExpression()) #23, !dbg !15780
  call void @llvm.dbg.value(metadata i32 %19, metadata !15772, metadata !DIExpression()), !dbg !15779
  call void @llvm.dbg.value(metadata i32 undef, metadata !14657, metadata !DIExpression()) #23, !dbg !15799
  call void @llvm.dbg.value(metadata i32 undef, metadata !14671, metadata !DIExpression()) #23, !dbg !15804
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #23, !dbg !15806, !srcloc !14677
  call void @llvm.dbg.value(metadata i32 1, metadata !15770, metadata !DIExpression()), !dbg !15779
  call void @llvm.dbg.value(metadata i32 undef, metadata !15770, metadata !DIExpression()), !dbg !15779
  ret i32 %6, !dbg !15807
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !15808 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15813, metadata !DIExpression()), !dbg !15816
  call void @llvm.dbg.value(metadata i64 undef, metadata !15815, metadata !DIExpression()), !dbg !15816
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15812, metadata !DIExpression()), !dbg !15816
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !15814, metadata !DIExpression()), !dbg !15816
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15817
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15818
  %6 = icmp eq %struct.k_spinlock* %0, @sched_spinlock, !dbg !15819
  br i1 %6, label %7, label %8, !dbg !15822

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3.312, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.298, i32 0, i32 0), i32 noundef 846) #25, !dbg !15823
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.298, i32 0, i32 0), i32 noundef 846) #25, !dbg !15823
  unreachable, !dbg !15823

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14623, metadata !DIExpression()) #23, !dbg !15825
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15827, !srcloc !14638
  call void @llvm.dbg.value(metadata i32 undef, metadata !14635, metadata !DIExpression()) #23, !dbg !15829
  call void @llvm.dbg.value(metadata i32 undef, metadata !14636, metadata !DIExpression()) #23, !dbg !15829
  call void @llvm.dbg.value(metadata i32 undef, metadata !14629, metadata !DIExpression()) #23, !dbg !15825
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15830
  br i1 %10, label %12, label %11, !dbg !15831

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 148) #25, !dbg !15832
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.294, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15832
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 148) #25, !dbg !15832
  unreachable, !dbg !15832

12:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !14635, metadata !DIExpression()) #23, !dbg !15829
  call void @llvm.dbg.value(metadata i32 undef, metadata !14629, metadata !DIExpression()) #23, !dbg !15825
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15833
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15834
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %13, %union.anon* noundef %2, [1 x i64] %3) #24, !dbg !15835
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15310, metadata !DIExpression()) #23, !dbg !15836
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !15838
  br i1 %14, label %16, label %15, !dbg !15839

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 225) #25, !dbg !15840
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.296, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !15840
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 225) #25, !dbg !15840
  unreachable, !dbg !15840

16:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !15301, metadata !DIExpression()) #23, !dbg !15841
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15306, metadata !DIExpression()) #23, !dbg !15841
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15310, metadata !DIExpression()) #23, !dbg !15843
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15845
  br i1 %17, label %19, label %18, !dbg !15846

18:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 225) #25, !dbg !15847
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.296, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15847
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 225) #25, !dbg !15847
  unreachable, !dbg !15847

19:                                               ; preds = %16
  %20 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %20, metadata !15301, metadata !DIExpression()) #23, !dbg !15841
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %20) #25, !dbg !15848
  ret i32 %21, !dbg !15849
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15850 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15854, metadata !DIExpression()), !dbg !15859
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15855, metadata !DIExpression()), !dbg !15859
  call void @llvm.dbg.value(metadata i32 0, metadata !15856, metadata !DIExpression()), !dbg !15860
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14623, metadata !DIExpression()) #23, !dbg !15861
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15863, !srcloc !14638
  call void @llvm.dbg.value(metadata i32 undef, metadata !14635, metadata !DIExpression()) #23, !dbg !15865
  call void @llvm.dbg.value(metadata i32 undef, metadata !14636, metadata !DIExpression()) #23, !dbg !15865
  call void @llvm.dbg.value(metadata i32 undef, metadata !14629, metadata !DIExpression()) #23, !dbg !15861
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15866
  br i1 %3, label %5, label %4, !dbg !15867

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 148) #25, !dbg !15868
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.294, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15868
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 148) #25, !dbg !15868
  unreachable, !dbg !15868

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14635, metadata !DIExpression()) #23, !dbg !15865
  call void @llvm.dbg.value(metadata i32 undef, metadata !14629, metadata !DIExpression()) #23, !dbg !15861
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15869
  call void @llvm.dbg.value(metadata i32 undef, metadata !15858, metadata !DIExpression()), !dbg !15860
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15855, metadata !DIExpression()), !dbg !15859
  call void @llvm.dbg.value(metadata i32 undef, metadata !15856, metadata !DIExpression()), !dbg !15860
  %6 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #24, !dbg !15870
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15855, metadata !DIExpression()), !dbg !15859
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15873
  br i1 %8, label %10, label %9, !dbg !15875

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15876
  br label %10, !dbg !15878

10:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14657, metadata !DIExpression()) #23, !dbg !15879
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14662, metadata !DIExpression()) #23, !dbg !15879
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15881
  br i1 %11, label %13, label %12, !dbg !15882

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 194) #25, !dbg !15883
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.296, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15883
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 194) #25, !dbg !15883
  unreachable, !dbg !15883

13:                                               ; preds = %10
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !15863
  call void @llvm.dbg.value(metadata i32 %14, metadata !14635, metadata !DIExpression()) #23, !dbg !15865
  call void @llvm.dbg.value(metadata i32 %14, metadata !14629, metadata !DIExpression()) #23, !dbg !15861
  call void @llvm.dbg.value(metadata i32 %14, metadata !15858, metadata !DIExpression()), !dbg !15860
  call void @llvm.dbg.value(metadata i32 undef, metadata !14657, metadata !DIExpression()) #23, !dbg !15879
  call void @llvm.dbg.value(metadata i32 undef, metadata !14671, metadata !DIExpression()) #23, !dbg !15884
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !15886, !srcloc !14677
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15855, metadata !DIExpression()), !dbg !15859
  call void @llvm.dbg.value(metadata i32 undef, metadata !15856, metadata !DIExpression()), !dbg !15860
  ret %struct.k_thread* %7, !dbg !15887
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15888 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15890, metadata !DIExpression()), !dbg !15895
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15891, metadata !DIExpression()), !dbg !15895
  call void @llvm.dbg.value(metadata i32 0, metadata !15892, metadata !DIExpression()), !dbg !15896
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14623, metadata !DIExpression()) #23, !dbg !15897
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15899, !srcloc !14638
  call void @llvm.dbg.value(metadata i32 undef, metadata !14635, metadata !DIExpression()) #23, !dbg !15901
  call void @llvm.dbg.value(metadata i32 undef, metadata !14636, metadata !DIExpression()) #23, !dbg !15901
  call void @llvm.dbg.value(metadata i32 undef, metadata !14629, metadata !DIExpression()) #23, !dbg !15897
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15902
  br i1 %3, label %5, label %4, !dbg !15903

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 148) #25, !dbg !15904
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.294, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15904
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 148) #25, !dbg !15904
  unreachable, !dbg !15904

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14635, metadata !DIExpression()) #23, !dbg !15901
  call void @llvm.dbg.value(metadata i32 undef, metadata !14629, metadata !DIExpression()) #23, !dbg !15897
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15905
  call void @llvm.dbg.value(metadata i32 undef, metadata !15894, metadata !DIExpression()), !dbg !15896
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15891, metadata !DIExpression()), !dbg !15895
  call void @llvm.dbg.value(metadata i32 undef, metadata !15892, metadata !DIExpression()), !dbg !15896
  %6 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #24, !dbg !15906
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15891, metadata !DIExpression()), !dbg !15895
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15909
  br i1 %8, label %11, label %9, !dbg !15911

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15912
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15914
  br label %11, !dbg !15915

11:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14657, metadata !DIExpression()) #23, !dbg !15916
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14662, metadata !DIExpression()) #23, !dbg !15916
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15918
  br i1 %12, label %14, label %13, !dbg !15919

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 194) #25, !dbg !15920
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.296, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15920
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 194) #25, !dbg !15920
  unreachable, !dbg !15920

14:                                               ; preds = %11
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !15899
  call void @llvm.dbg.value(metadata i32 %15, metadata !14635, metadata !DIExpression()) #23, !dbg !15901
  call void @llvm.dbg.value(metadata i32 %15, metadata !14629, metadata !DIExpression()) #23, !dbg !15897
  call void @llvm.dbg.value(metadata i32 %15, metadata !15894, metadata !DIExpression()), !dbg !15896
  call void @llvm.dbg.value(metadata i32 undef, metadata !14657, metadata !DIExpression()) #23, !dbg !15916
  call void @llvm.dbg.value(metadata i32 undef, metadata !14671, metadata !DIExpression()) #23, !dbg !15921
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !15923, !srcloc !14677
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15891, metadata !DIExpression()), !dbg !15895
  call void @llvm.dbg.value(metadata i32 undef, metadata !15892, metadata !DIExpression()), !dbg !15896
  ret %struct.k_thread* %7, !dbg !15924
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15925 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15927, metadata !DIExpression()), !dbg !15928
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15735, metadata !DIExpression()) #23, !dbg !15929
  call void @llvm.dbg.value(metadata i32 0, metadata !15736, metadata !DIExpression()) #23, !dbg !15931
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14623, metadata !DIExpression()) #23, !dbg !15932
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15934, !srcloc !14638
  call void @llvm.dbg.value(metadata i32 undef, metadata !14635, metadata !DIExpression()) #23, !dbg !15936
  call void @llvm.dbg.value(metadata i32 undef, metadata !14636, metadata !DIExpression()) #23, !dbg !15936
  call void @llvm.dbg.value(metadata i32 undef, metadata !14629, metadata !DIExpression()) #23, !dbg !15932
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15937
  br i1 %3, label %5, label %4, !dbg !15938

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 148) #25, !dbg !15939
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.294, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15939
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 148) #25, !dbg !15939
  unreachable, !dbg !15939

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14635, metadata !DIExpression()) #23, !dbg !15936
  call void @llvm.dbg.value(metadata i32 undef, metadata !14629, metadata !DIExpression()) #23, !dbg !15932
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15940
  call void @llvm.dbg.value(metadata i32 undef, metadata !15738, metadata !DIExpression()) #23, !dbg !15931
  call void @llvm.dbg.value(metadata i32 undef, metadata !15736, metadata !DIExpression()) #23, !dbg !15931
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !15941
  call void @llvm.dbg.value(metadata i32 undef, metadata !14657, metadata !DIExpression()) #23, !dbg !15942
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14662, metadata !DIExpression()) #23, !dbg !15942
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15944
  br i1 %6, label %8, label %7, !dbg !15945

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 194) #25, !dbg !15946
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.296, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15946
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 194) #25, !dbg !15946
  unreachable, !dbg !15946

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15934
  call void @llvm.dbg.value(metadata i32 %9, metadata !14635, metadata !DIExpression()) #23, !dbg !15936
  call void @llvm.dbg.value(metadata i32 %9, metadata !14629, metadata !DIExpression()) #23, !dbg !15932
  call void @llvm.dbg.value(metadata i32 %9, metadata !15738, metadata !DIExpression()) #23, !dbg !15931
  call void @llvm.dbg.value(metadata i32 undef, metadata !14657, metadata !DIExpression()) #23, !dbg !15942
  call void @llvm.dbg.value(metadata i32 undef, metadata !14671, metadata !DIExpression()) #23, !dbg !15947
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15949, !srcloc !14677
  call void @llvm.dbg.value(metadata i32 1, metadata !15736, metadata !DIExpression()) #23, !dbg !15931
  call void @llvm.dbg.value(metadata i32 undef, metadata !15736, metadata !DIExpression()) #23, !dbg !15931
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !15950
  ret void, !dbg !15951
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15952 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15954, metadata !DIExpression()), !dbg !15960
  call void @llvm.dbg.value(metadata i32 %1, metadata !15955, metadata !DIExpression()), !dbg !15960
  call void @llvm.dbg.value(metadata i8 0, metadata !15956, metadata !DIExpression()), !dbg !15960
  call void @llvm.dbg.value(metadata i32 0, metadata !15957, metadata !DIExpression()), !dbg !15961
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14623, metadata !DIExpression()) #23, !dbg !15962
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15964, !srcloc !14638
  call void @llvm.dbg.value(metadata i32 undef, metadata !14635, metadata !DIExpression()) #23, !dbg !15966
  call void @llvm.dbg.value(metadata i32 undef, metadata !14636, metadata !DIExpression()) #23, !dbg !15966
  call void @llvm.dbg.value(metadata i32 undef, metadata !14629, metadata !DIExpression()) #23, !dbg !15962
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15967
  br i1 %4, label %6, label %5, !dbg !15968

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 148) #25, !dbg !15969
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.294, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15969
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 148) #25, !dbg !15969
  unreachable, !dbg !15969

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14635, metadata !DIExpression()) #23, !dbg !15966
  call void @llvm.dbg.value(metadata i32 undef, metadata !14629, metadata !DIExpression()) #23, !dbg !15962
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15970
  call void @llvm.dbg.value(metadata i32 undef, metadata !15959, metadata !DIExpression()), !dbg !15961
  call void @llvm.dbg.value(metadata i8 poison, metadata !15956, metadata !DIExpression()), !dbg !15960
  call void @llvm.dbg.value(metadata i32 undef, metadata !15957, metadata !DIExpression()), !dbg !15961
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !15971
  call void @llvm.dbg.value(metadata i1 %9, metadata !15956, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15960
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %11 = bitcast %union.anon.2* %10 to i8*
  %12 = trunc i32 %1 to i8
  br i1 %9, label %13, label %34, !dbg !15974

13:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14815, metadata !DIExpression()) #23, !dbg !15975
  %14 = load i8, i8* %7, align 1, !dbg !15981
  %15 = and i8 %14, 127, !dbg !15981
  store i8 %15, i8* %7, align 1, !dbg !15981
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14823, metadata !DIExpression()) #23, !dbg !15982
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15984
  store i8 %12, i8* %11, align 2, !dbg !15985
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14832, metadata !DIExpression()) #23, !dbg !15986
  %16 = load i8, i8* %7, align 1, !dbg !15988
  %17 = or i8 %16, -128, !dbg !15988
  store i8 %17, i8* %7, align 1, !dbg !15988
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14839, metadata !DIExpression()) #23, !dbg !15989
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14846, metadata !DIExpression()) #23, !dbg !15991
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14852, metadata !DIExpression()) #23, !dbg !15991
  %18 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !15993
  br i1 %18, label %19, label %20, !dbg !15994

19:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.297, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.298, i32 0, i32 0), i32 noundef 186) #25, !dbg !15995
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.298, i32 0, i32 0), i32 noundef 186) #25, !dbg !15995
  unreachable, !dbg !15995

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15996
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !14853, metadata !DIExpression()) #23, !dbg !15991
  %22 = icmp eq %struct._dnode* %21, null, !dbg !15997
  br i1 %22, label %32, label %23, !dbg !15996

23:                                               ; preds = %20, %29
  %24 = phi %struct._dnode* [ %30, %29 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14853, metadata !DIExpression()) #23, !dbg !15991
  %25 = bitcast %struct._dnode* %24 to %struct.k_thread*, !dbg !15998
  call void @llvm.dbg.value(metadata %struct.k_thread* %25, metadata !14853, metadata !DIExpression()) #23, !dbg !15991
  %26 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %25) #25, !dbg !15999
  %27 = icmp sgt i32 %26, 0, !dbg !16000
  br i1 %27, label %28, label %29, !dbg !16001

28:                                               ; preds = %23
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %24, %struct._dnode* noundef %8) #25, !dbg !16002
  br label %33, !dbg !16003

29:                                               ; preds = %23
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %24) #25, !dbg !15997
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !14853, metadata !DIExpression()) #23, !dbg !15991
  %31 = icmp eq %struct._dnode* %30, null, !dbg !15997
  br i1 %31, label %32, label %23, !dbg !15996, !llvm.loop !16004

32:                                               ; preds = %29, %20
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %8) #25, !dbg !16006
  br label %33, !dbg !16007

33:                                               ; preds = %28, %32
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !16008
  br label %35, !dbg !16009

34:                                               ; preds = %6
  store i8 %12, i8* %11, align 2, !dbg !16010
  br label %35

35:                                               ; preds = %33, %34
  call void @llvm.dbg.value(metadata i32 undef, metadata !14657, metadata !DIExpression()) #23, !dbg !16012
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14662, metadata !DIExpression()) #23, !dbg !16012
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16014
  br i1 %36, label %38, label %37, !dbg !16015

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 194) #25, !dbg !16016
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.296, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16016
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 194) #25, !dbg !16016
  unreachable, !dbg !16016

38:                                               ; preds = %35
  %39 = extractvalue { i32, i32 } %3, 0, !dbg !15964
  call void @llvm.dbg.value(metadata i32 %39, metadata !14635, metadata !DIExpression()) #23, !dbg !15966
  call void @llvm.dbg.value(metadata i32 %39, metadata !14629, metadata !DIExpression()) #23, !dbg !15962
  call void @llvm.dbg.value(metadata i32 %39, metadata !15959, metadata !DIExpression()), !dbg !15961
  call void @llvm.dbg.value(metadata i32 undef, metadata !14657, metadata !DIExpression()) #23, !dbg !16012
  call void @llvm.dbg.value(metadata i32 undef, metadata !14671, metadata !DIExpression()) #23, !dbg !16017
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %39) #23, !dbg !16019, !srcloc !14677
  call void @llvm.dbg.value(metadata i8 poison, metadata !15956, metadata !DIExpression()), !dbg !15960
  call void @llvm.dbg.value(metadata i32 undef, metadata !15957, metadata !DIExpression()), !dbg !15961
  ret i1 %9, !dbg !16020
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16021 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16025, metadata !DIExpression()), !dbg !16028
  call void @llvm.dbg.value(metadata i32 %1, metadata !16026, metadata !DIExpression()), !dbg !16028
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !16029
  call void @llvm.dbg.value(metadata i1 %3, metadata !16027, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16028
  br i1 %3, label %4, label %12, !dbg !16030

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16032
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !16033
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !16033
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !16033
  %9 = load i8, i8* %8, align 1, !dbg !16033
  %10 = icmp eq i8 %9, 0, !dbg !16034
  br i1 %10, label %11, label %12, !dbg !16035

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !16036
  br label %12, !dbg !16038

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !16039
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !16040 {
  call void @llvm.dbg.value(metadata i32 0, metadata !16042, metadata !DIExpression()), !dbg !16045
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14623, metadata !DIExpression()) #23, !dbg !16046
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16048, !srcloc !14638
  call void @llvm.dbg.value(metadata i32 undef, metadata !14635, metadata !DIExpression()) #23, !dbg !16050
  call void @llvm.dbg.value(metadata i32 undef, metadata !14636, metadata !DIExpression()) #23, !dbg !16050
  call void @llvm.dbg.value(metadata i32 undef, metadata !14629, metadata !DIExpression()) #23, !dbg !16046
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16051
  br i1 %2, label %4, label %3, !dbg !16052

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 148) #25, !dbg !16053
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.294, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16053
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 148) #25, !dbg !16053
  unreachable, !dbg !16053

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14635, metadata !DIExpression()) #23, !dbg !16050
  call void @llvm.dbg.value(metadata i32 undef, metadata !14629, metadata !DIExpression()) #23, !dbg !16046
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16054
  call void @llvm.dbg.value(metadata i32 undef, metadata !16044, metadata !DIExpression()), !dbg !16045
  call void @llvm.dbg.value(metadata i32 undef, metadata !16042, metadata !DIExpression()), !dbg !16045
  tail call fastcc void @z_sched_lock() #24, !dbg !16055
  call void @llvm.dbg.value(metadata i32 undef, metadata !14657, metadata !DIExpression()) #23, !dbg !16058
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14662, metadata !DIExpression()) #23, !dbg !16058
  %5 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16060
  br i1 %5, label %7, label %6, !dbg !16061

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 194) #25, !dbg !16062
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.296, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16062
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 194) #25, !dbg !16062
  unreachable, !dbg !16062

7:                                                ; preds = %4
  %8 = extractvalue { i32, i32 } %1, 0, !dbg !16048
  call void @llvm.dbg.value(metadata i32 %8, metadata !14635, metadata !DIExpression()) #23, !dbg !16050
  call void @llvm.dbg.value(metadata i32 %8, metadata !14629, metadata !DIExpression()) #23, !dbg !16046
  call void @llvm.dbg.value(metadata i32 %8, metadata !16044, metadata !DIExpression()), !dbg !16045
  call void @llvm.dbg.value(metadata i32 undef, metadata !14657, metadata !DIExpression()) #23, !dbg !16058
  call void @llvm.dbg.value(metadata i32 undef, metadata !14671, metadata !DIExpression()) #23, !dbg !16063
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !16065, !srcloc !14677
  call void @llvm.dbg.value(metadata i32 1, metadata !16042, metadata !DIExpression()), !dbg !16045
  call void @llvm.dbg.value(metadata i32 undef, metadata !16042, metadata !DIExpression()), !dbg !16045
  ret void, !dbg !16066
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !16067 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16068, !srcloc !15357
  call void @llvm.dbg.value(metadata i32 %1, metadata !15353, metadata !DIExpression()) #23, !dbg !16073
  %2 = icmp eq i32 %1, 0, !dbg !16074
  br i1 %2, label %4, label %3, !dbg !16075

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.315, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.316, i32 0, i32 0), i32 noundef 253) #25, !dbg !16076
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.300, i32 0, i32 0)) #25, !dbg !16076
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.316, i32 0, i32 0), i32 noundef 253) #25, !dbg !16076
  unreachable, !dbg !16076

4:                                                ; preds = %0
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16078
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !16078
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !16078
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !16078
  %9 = load i8, i8* %8, align 1, !dbg !16078
  %10 = icmp eq i8 %9, 1, !dbg !16078
  br i1 %10, label %11, label %12, !dbg !16081

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.22.317, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.316, i32 0, i32 0), i32 noundef 254) #25, !dbg !16082
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.300, i32 0, i32 0)) #25, !dbg !16082
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.316, i32 0, i32 0), i32 noundef 254) #25, !dbg !16082
  unreachable, !dbg !16082

12:                                               ; preds = %4
  %13 = add i8 %9, -1, !dbg !16084
  store i8 %13, i8* %8, align 1, !dbg !16084
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16085, !srcloc !16087
  ret void, !dbg !16088
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !16089 {
  call void @llvm.dbg.value(metadata i32 0, metadata !16091, metadata !DIExpression()), !dbg !16094
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14623, metadata !DIExpression()) #23, !dbg !16095
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16097, !srcloc !14638
  call void @llvm.dbg.value(metadata i32 undef, metadata !14635, metadata !DIExpression()) #23, !dbg !16099
  call void @llvm.dbg.value(metadata i32 undef, metadata !14636, metadata !DIExpression()) #23, !dbg !16099
  call void @llvm.dbg.value(metadata i32 undef, metadata !14629, metadata !DIExpression()) #23, !dbg !16095
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16100
  br i1 %2, label %4, label %3, !dbg !16101

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 148) #25, !dbg !16102
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.294, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16102
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 148) #25, !dbg !16102
  unreachable, !dbg !16102

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14635, metadata !DIExpression()) #23, !dbg !16099
  call void @llvm.dbg.value(metadata i32 undef, metadata !14629, metadata !DIExpression()) #23, !dbg !16095
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16103
  call void @llvm.dbg.value(metadata i32 undef, metadata !16093, metadata !DIExpression()), !dbg !16094
  call void @llvm.dbg.value(metadata i32 undef, metadata !16091, metadata !DIExpression()), !dbg !16094
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16104
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !16104
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !16104
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !16104
  %9 = load i8, i8* %8, align 1, !dbg !16104
  %10 = icmp eq i8 %9, 0, !dbg !16104
  br i1 %10, label %11, label %12, !dbg !16109

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.298, i32 0, i32 0), i32 noundef 999) #25, !dbg !16110
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.300, i32 0, i32 0)) #25, !dbg !16110
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.298, i32 0, i32 0), i32 noundef 999) #25, !dbg !16110
  unreachable, !dbg !16110

12:                                               ; preds = %4
  %13 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16112, !srcloc !15357
  call void @llvm.dbg.value(metadata i32 %13, metadata !15353, metadata !DIExpression()) #23, !dbg !16117
  %14 = icmp eq i32 %13, 0, !dbg !16118
  br i1 %14, label %16, label %15, !dbg !16119

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.315, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.298, i32 0, i32 0), i32 noundef 1000) #25, !dbg !16120
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.300, i32 0, i32 0)) #25, !dbg !16120
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.298, i32 0, i32 0), i32 noundef 1000) #25, !dbg !16120
  unreachable, !dbg !16120

16:                                               ; preds = %12
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16122
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %17, i32 0, i32 0, i32 4, !dbg !16123
  %19 = bitcast %union.anon.2* %18 to %struct.device_state*, !dbg !16123
  %20 = getelementptr inbounds %struct.device_state, %struct.device_state* %19, i32 0, i32 1, !dbg !16123
  %21 = load i8, i8* %20, align 1, !dbg !16124
  %22 = add i8 %21, 1, !dbg !16124
  store i8 %22, i8* %20, align 1, !dbg !16124
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !16125
  call void @llvm.dbg.value(metadata i32 undef, metadata !14657, metadata !DIExpression()) #23, !dbg !16126
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14662, metadata !DIExpression()) #23, !dbg !16126
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16128
  br i1 %23, label %25, label %24, !dbg !16129

24:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 194) #25, !dbg !16130
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.296, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16130
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 194) #25, !dbg !16130
  unreachable, !dbg !16130

25:                                               ; preds = %16
  %26 = extractvalue { i32, i32 } %1, 0, !dbg !16097
  call void @llvm.dbg.value(metadata i32 %26, metadata !14635, metadata !DIExpression()) #23, !dbg !16099
  call void @llvm.dbg.value(metadata i32 %26, metadata !14629, metadata !DIExpression()) #23, !dbg !16095
  call void @llvm.dbg.value(metadata i32 %26, metadata !16093, metadata !DIExpression()), !dbg !16094
  call void @llvm.dbg.value(metadata i32 undef, metadata !14657, metadata !DIExpression()) #23, !dbg !16126
  call void @llvm.dbg.value(metadata i32 undef, metadata !14671, metadata !DIExpression()) #23, !dbg !16131
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %26) #23, !dbg !16133, !srcloc !14677
  call void @llvm.dbg.value(metadata i32 1, metadata !16091, metadata !DIExpression()), !dbg !16094
  call void @llvm.dbg.value(metadata i32 undef, metadata !16091, metadata !DIExpression()), !dbg !16094
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !16134
  ret void, !dbg !16135
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #8 !dbg !16136 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16137
  ret %struct.k_thread* %1, !dbg !16138
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !16139 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !16143, metadata !DIExpression()), !dbg !16148
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !16144, metadata !DIExpression()), !dbg !16148
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !16149
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16145, metadata !DIExpression()), !dbg !16148
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !16150
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16146, metadata !DIExpression()), !dbg !16148
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #24, !dbg !16151
  call void @llvm.dbg.value(metadata i32 %5, metadata !16147, metadata !DIExpression()), !dbg !16148
  %6 = icmp sgt i32 %5, 0, !dbg !16152
  br i1 %6, label %17, label %7, !dbg !16154

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !16155
  br i1 %8, label %17, label %9, !dbg !16157

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !16158
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !16158
  %12 = load i32, i32* %11, align 8, !dbg !16158
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !16160
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !16160
  %15 = load i32, i32* %14, align 8, !dbg !16160
  %16 = icmp ult i32 %12, %15, !dbg !16161
  br label %17, !dbg !16162

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !16163
  ret i1 %18, !dbg !16164
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16165 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16182, metadata !DIExpression()), !dbg !16197
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16183, metadata !DIExpression()), !dbg !16197
  %4 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !16198
  br i1 %4, label %5, label %6, !dbg !16201

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.297, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.298, i32 0, i32 0), i32 noundef 1179) #25, !dbg !16202
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.298, i32 0, i32 0), i32 noundef 1179) #25, !dbg !16202
  unreachable, !dbg !16202

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16204
  %8 = load i32, i32* %7, align 4, !dbg !16205
  %9 = add nsw i32 %8, 1, !dbg !16205
  store i32 %9, i32* %7, align 4, !dbg !16205
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !16206
  store i32 %8, i32* %10, align 8, !dbg !16207
  %11 = load i32, i32* %7, align 4, !dbg !16208
  %12 = icmp eq i32 %11, 0, !dbg !16209
  br i1 %12, label %13, label %35, !dbg !16210

13:                                               ; preds = %6
  %14 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !16211
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #23, !dbg !16211
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !16185, metadata !DIExpression()), !dbg !16211
  %15 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16211
  %16 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !16211
  %17 = load i32, i32* %16, align 4, !dbg !16211
  %18 = shl i32 %17, 2, !dbg !16211
  %19 = alloca i8, i32 %18, align 8, !dbg !16211
  %20 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !16211
  store i8* %19, i8** %20, align 4, !dbg !16211
  %21 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !16211
  %22 = alloca i8, i32 %17, align 8, !dbg !16211
  store i8* %22, i8** %21, align 4, !dbg !16211
  %23 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !16211
  store i32 -1, i32* %23, align 4, !dbg !16211
  %24 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16212
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !16194, metadata !DIExpression()), !dbg !16213
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !16184, metadata !DIExpression()), !dbg !16197
  %25 = icmp eq %struct.rbnode* %24, null, !dbg !16214
  br i1 %25, label %26, label %27, !dbg !16211

26:                                               ; preds = %27, %13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #23, !dbg !16214
  br label %35, !dbg !16215

27:                                               ; preds = %13, %27
  %28 = phi %struct.rbnode* [ %33, %27 ], [ %24, %13 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %28, metadata !16184, metadata !DIExpression()), !dbg !16197
  %29 = load i32, i32* %7, align 4, !dbg !16216
  %30 = add nsw i32 %29, 1, !dbg !16216
  store i32 %30, i32* %7, align 4, !dbg !16216
  %31 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %28, i32 2, !dbg !16218
  %32 = bitcast %struct.rbnode* %31 to i32*, !dbg !16218
  store i32 %29, i32* %32, align 8, !dbg !16219
  %33 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16212
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !16194, metadata !DIExpression()), !dbg !16213
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !16184, metadata !DIExpression()), !dbg !16197
  %34 = icmp eq %struct.rbnode* %33, null, !dbg !16214
  br i1 %34, label %26, label %27, !dbg !16211, !llvm.loop !16220

35:                                               ; preds = %26, %6
  %36 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16222
  %37 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16223
  call void @rb_insert(%struct.rbtree* noundef %36, %struct.rbnode* noundef %37) #25, !dbg !16224
  ret void, !dbg !16225
}

; Function Attrs: optsize
declare !dbg !16226 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !16231 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16234 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16236, metadata !DIExpression()), !dbg !16238
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16237, metadata !DIExpression()), !dbg !16238
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !16239
  br i1 %3, label %4, label %5, !dbg !16242

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.297, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.298, i32 0, i32 0), i32 noundef 1200) #25, !dbg !16243
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.298, i32 0, i32 0), i32 noundef 1200) #25, !dbg !16243
  unreachable, !dbg !16243

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16245
  %7 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16246
  tail call void @rb_remove(%struct.rbtree* noundef %6, %struct.rbnode* noundef %7) #25, !dbg !16247
  %8 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !16248
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !16248
  %10 = icmp eq %struct.rbnode* %9, null, !dbg !16250
  br i1 %10, label %11, label %13, !dbg !16251

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16252
  store i32 0, i32* %12, align 4, !dbg !16254
  br label %13, !dbg !16255

13:                                               ; preds = %11, %5
  ret void, !dbg !16256
}

; Function Attrs: optsize
declare !dbg !16257 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !16258 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16262, metadata !DIExpression()), !dbg !16265
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16263, metadata !DIExpression()), !dbg !16265
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16266
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #24, !dbg !16267
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !16264, metadata !DIExpression()), !dbg !16265
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16263, metadata !DIExpression()), !dbg !16265
  ret %struct.k_thread* %4, !dbg !16268
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !16269 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !16273, metadata !DIExpression()), !dbg !16274
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #25, !dbg !16275
  ret %struct.rbnode* %2, !dbg !16276
}

; Function Attrs: optsize
declare !dbg !16277 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #16 !dbg !16280 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !16290, metadata !DIExpression()), !dbg !16294
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !16295
  %3 = load i32, i32* %2, align 4, !dbg !16295
  %4 = icmp eq i32 %3, 0, !dbg !16297
  br i1 %4, label %10, label %5, !dbg !16298

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16291, metadata !DIExpression()), !dbg !16294
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !16299, !range !7591
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !16300
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !16292, metadata !DIExpression()), !dbg !16294
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #24, !dbg !16301
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !16293, metadata !DIExpression()), !dbg !16294
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16291, metadata !DIExpression()), !dbg !16294
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !16294
  ret %struct.k_thread* %11, !dbg !16302
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !16303 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16307, metadata !DIExpression()), !dbg !16310
  call void @llvm.dbg.value(metadata i32 0, metadata !16308, metadata !DIExpression()), !dbg !16310
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !16311
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16309, metadata !DIExpression()), !dbg !16310
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16312
  br i1 %3, label %8, label %4, !dbg !16313

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16314
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16316
  call void @llvm.dbg.value(metadata i32 1, metadata !16308, metadata !DIExpression()), !dbg !16310
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !16311
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16309, metadata !DIExpression()), !dbg !16310
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16312
  br i1 %7, label %8, label %4, !dbg !16313, !llvm.loop !16317

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !16310
  ret i32 %9, !dbg !16319
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #8 !dbg !16320 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16322, metadata !DIExpression()), !dbg !16323
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !16324
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #24, !dbg !16325
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !16326
  ret %struct.k_thread* %4, !dbg !16327
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #7 !dbg !16328 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !16337, metadata !DIExpression()), !dbg !16338
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !16339
  tail call fastcc void @sys_dlist_init.321(%struct._dnode* noundef nonnull %2) #24, !dbg !16340
  ret void, !dbg !16341
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.321(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !16342 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16346, metadata !DIExpression()), !dbg !16347
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16348
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16349
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16350
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16351
  ret void, !dbg !16352
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !16353 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #24, !dbg !16354
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #24, !dbg !16355
  ret void, !dbg !16356
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !16357 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16362, metadata !DIExpression()), !dbg !16363
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !16364
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !16364
  %4 = load i8, i8* %3, align 2, !dbg !16364
  %5 = sext i8 %4 to i32, !dbg !16365
  ret i32 %5, !dbg !16366
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16367 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16371, metadata !DIExpression()), !dbg !16374
  call void @llvm.dbg.value(metadata i32 %1, metadata !16372, metadata !DIExpression()), !dbg !16374
  %3 = add i32 %1, 16, !dbg !16375
  %4 = icmp ult i32 %3, 31, !dbg !16375
  br i1 %4, label %6, label %5, !dbg !16375

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([134 x i8], [134 x i8]* @.str.8.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.298, i32 0, i32 0), i32 noundef 1331) #25, !dbg !16379
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9.325, i32 0, i32 0), i32 noundef %1, i32 noundef 14, i32 noundef -16) #25, !dbg !16379
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.298, i32 0, i32 0), i32 noundef 1331) #25, !dbg !16379
  unreachable, !dbg !16379

6:                                                ; preds = %2
  %7 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16381, !srcloc !15357
  call void @llvm.dbg.value(metadata i32 %7, metadata !15353, metadata !DIExpression()) #23, !dbg !16386
  %8 = icmp eq i32 %7, 0, !dbg !16387
  br i1 %8, label %10, label %9, !dbg !16388

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.315, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.298, i32 0, i32 0), i32 noundef 1332) #25, !dbg !16389
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.300, i32 0, i32 0)) #25, !dbg !16389
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.298, i32 0, i32 0), i32 noundef 1332) #25, !dbg !16389
  unreachable, !dbg !16389

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16373, metadata !DIExpression()), !dbg !16374
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !16391
  ret void, !dbg !16392
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !16393 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #24, !dbg !16394
  br i1 %1, label %8, label %2, !dbg !16395

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !16396
  br i1 %3, label %8, label %4, !dbg !16397

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16398
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #24, !dbg !16399
  %7 = xor i1 %6, true, !dbg !16397
  br label %8, !dbg !16397

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !16400
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #8 !dbg !16401 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !16402, !range !6754
  %2 = icmp eq i8 %1, 0, !dbg !16402
  ret i1 %2, !dbg !16403
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !16404 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16407, !srcloc !15357
  call void @llvm.dbg.value(metadata i32 %1, metadata !15353, metadata !DIExpression()) #23, !dbg !16412
  %2 = icmp eq i32 %1, 0, !dbg !16413
  br i1 %2, label %4, label %3, !dbg !16414

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.315, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.298, i32 0, i32 0), i32 noundef 1392) #25, !dbg !16415
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.300, i32 0, i32 0)) #25, !dbg !16415
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.298, i32 0, i32 0), i32 noundef 1392) #25, !dbg !16415
  unreachable, !dbg !16415

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14623, metadata !DIExpression()) #23, !dbg !16417
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16419, !srcloc !14638
  call void @llvm.dbg.value(metadata i32 undef, metadata !14635, metadata !DIExpression()) #23, !dbg !16421
  call void @llvm.dbg.value(metadata i32 undef, metadata !14636, metadata !DIExpression()) #23, !dbg !16421
  call void @llvm.dbg.value(metadata i32 undef, metadata !14629, metadata !DIExpression()) #23, !dbg !16417
  %6 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16422
  br i1 %6, label %8, label %7, !dbg !16423

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 148) #25, !dbg !16424
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.294, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16424
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 148) #25, !dbg !16424
  unreachable, !dbg !16424

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !14635, metadata !DIExpression()) #23, !dbg !16421
  call void @llvm.dbg.value(metadata i32 undef, metadata !14629, metadata !DIExpression()) #23, !dbg !16417
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16425
  call void @llvm.dbg.value(metadata i32 undef, metadata !16406, metadata !DIExpression()), !dbg !16426
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16427
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14815, metadata !DIExpression()) #23, !dbg !16430
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 3, !dbg !16432
  %11 = load i8, i8* %10, align 1, !dbg !16433
  %12 = and i8 %11, 127, !dbg !16433
  store i8 %12, i8* %10, align 1, !dbg !16433
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14823, metadata !DIExpression()) #23, !dbg !16434
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %9) #25, !dbg !16436
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16437
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14832, metadata !DIExpression()) #23, !dbg !16438
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 3, !dbg !16440
  %15 = load i8, i8* %14, align 1, !dbg !16441
  %16 = or i8 %15, -128, !dbg !16441
  store i8 %16, i8* %14, align 1, !dbg !16441
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14839, metadata !DIExpression()) #23, !dbg !16442
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14846, metadata !DIExpression()) #23, !dbg !16444
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14852, metadata !DIExpression()) #23, !dbg !16444
  %17 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %13) #25, !dbg !16446
  br i1 %17, label %18, label %19, !dbg !16447

18:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.297, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.298, i32 0, i32 0), i32 noundef 186) #25, !dbg !16448
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.298, i32 0, i32 0), i32 noundef 186) #25, !dbg !16448
  unreachable, !dbg !16448

19:                                               ; preds = %8
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !16449
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14853, metadata !DIExpression()) #23, !dbg !16444
  %21 = icmp eq %struct._dnode* %20, null, !dbg !16450
  br i1 %21, label %32, label %22, !dbg !16449

22:                                               ; preds = %19, %29
  %23 = phi %struct._dnode* [ %30, %29 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %23, metadata !14853, metadata !DIExpression()) #23, !dbg !16444
  %24 = bitcast %struct._dnode* %23 to %struct.k_thread*, !dbg !16451
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !14853, metadata !DIExpression()) #23, !dbg !16444
  %25 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %13, %struct.k_thread* noundef nonnull %24) #25, !dbg !16452
  %26 = icmp sgt i32 %25, 0, !dbg !16453
  br i1 %26, label %27, label %29, !dbg !16454

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !16455
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %23, %struct._dnode* noundef %28) #25, !dbg !16456
  br label %34, !dbg !16457

29:                                               ; preds = %22
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %23) #25, !dbg !16450
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !14853, metadata !DIExpression()) #23, !dbg !16444
  %31 = icmp eq %struct._dnode* %30, null, !dbg !16450
  br i1 %31, label %32, label %22, !dbg !16449, !llvm.loop !16458

32:                                               ; preds = %29, %19
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !16460
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %33) #25, !dbg !16461
  br label %34, !dbg !16462

34:                                               ; preds = %27, %32
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !16463
  call void @llvm.dbg.value(metadata i32 undef, metadata !15301, metadata !DIExpression()) #23, !dbg !16464
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15306, metadata !DIExpression()) #23, !dbg !16464
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15310, metadata !DIExpression()) #23, !dbg !16466
  %35 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16468
  br i1 %35, label %37, label %36, !dbg !16469

36:                                               ; preds = %34
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 225) #25, !dbg !16470
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.296, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16470
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 225) #25, !dbg !16470
  unreachable, !dbg !16470

37:                                               ; preds = %34
  %38 = extractvalue { i32, i32 } %5, 0, !dbg !16419
  call void @llvm.dbg.value(metadata i32 %38, metadata !14635, metadata !DIExpression()) #23, !dbg !16421
  call void @llvm.dbg.value(metadata i32 %38, metadata !14629, metadata !DIExpression()) #23, !dbg !16417
  call void @llvm.dbg.value(metadata i32 %38, metadata !16406, metadata !DIExpression()), !dbg !16426
  call void @llvm.dbg.value(metadata i32 undef, metadata !15301, metadata !DIExpression()) #23, !dbg !16464
  %39 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %38) #25, !dbg !16471
  ret void, !dbg !16472
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !16473 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16477, metadata !DIExpression()), !dbg !16480
  %3 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16481, !srcloc !15357
  call void @llvm.dbg.value(metadata i32 %3, metadata !15353, metadata !DIExpression()) #23, !dbg !16486
  %4 = icmp eq i32 %3, 0, !dbg !16487
  br i1 %4, label %6, label %5, !dbg !16488

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.315, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.298, i32 0, i32 0), i32 noundef 1463) #25, !dbg !16489
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.300, i32 0, i32 0)) #25, !dbg !16489
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.298, i32 0, i32 0), i32 noundef 1463) #25, !dbg !16489
  unreachable, !dbg !16489

6:                                                ; preds = %1
  %7 = icmp eq i64 %2, -1, !dbg !16491
  br i1 %7, label %8, label %10, !dbg !16493

8:                                                ; preds = %6
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16494
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %9) #24, !dbg !16496
  br label %15, !dbg !16497

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i64 %2, metadata !16478, metadata !DIExpression()), !dbg !16480
  %11 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #24, !dbg !16498
  %12 = sext i32 %11 to i64, !dbg !16498
  call void @llvm.dbg.value(metadata i64 %12, metadata !16478, metadata !DIExpression()), !dbg !16480
  %13 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %12) #24, !dbg !16499
  %14 = trunc i64 %13 to i32, !dbg !16499
  call void @llvm.dbg.value(metadata i32 %14, metadata !16479, metadata !DIExpression()), !dbg !16480
  br label %15

15:                                               ; preds = %10, %8
  %16 = phi i32 [ -1, %8 ], [ %14, %10 ], !dbg !16480
  ret i32 %16, !dbg !16500
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16501 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16505, metadata !DIExpression()), !dbg !16506
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16507, !srcloc !16509
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #24, !dbg !16510
  ret void, !dbg !16511
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !16512 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16516, metadata !DIExpression()), !dbg !16520
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16521, !srcloc !15357
  call void @llvm.dbg.value(metadata i32 %2, metadata !15353, metadata !DIExpression()) #23, !dbg !16526
  %3 = icmp eq i32 %2, 0, !dbg !16527
  br i1 %3, label %5, label %4, !dbg !16528

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.315, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.298, i32 0, i32 0), i32 noundef 1420) #25, !dbg !16529
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.300, i32 0, i32 0)) #25, !dbg !16529
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.298, i32 0, i32 0), i32 noundef 1420) #25, !dbg !16529
  unreachable, !dbg !16529

5:                                                ; preds = %1
  %6 = icmp eq i64 %0, 0, !dbg !16531
  br i1 %6, label %7, label %8, !dbg !16533

7:                                                ; preds = %5
  tail call fastcc void @k_yield() #24, !dbg !16534
  br label %43, !dbg !16536

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i64 %0, metadata !16518, metadata !DIExpression()), !dbg !16520
  %9 = icmp sgt i64 %0, -3, !dbg !16537
  br i1 %9, label %10, label %14, !dbg !16539

10:                                               ; preds = %8
  %11 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !16540
  %12 = trunc i64 %0 to i32, !dbg !16542
  %13 = add i32 %11, %12, !dbg !16542
  call void @llvm.dbg.value(metadata i32 %13, metadata !16517, metadata !DIExpression()), !dbg !16520
  br label %17, !dbg !16543

14:                                               ; preds = %8
  %15 = trunc i64 %0 to i32, !dbg !16544
  %16 = sub i32 -2, %15, !dbg !16544
  call void @llvm.dbg.value(metadata i32 %16, metadata !16517, metadata !DIExpression()), !dbg !16520
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i32 [ %13, %10 ], [ %16, %14 ], !dbg !16546
  call void @llvm.dbg.value(metadata i32 %18, metadata !16517, metadata !DIExpression()), !dbg !16520
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14623, metadata !DIExpression()) #23, !dbg !16547
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16549, !srcloc !14638
  call void @llvm.dbg.value(metadata i32 undef, metadata !14635, metadata !DIExpression()) #23, !dbg !16551
  call void @llvm.dbg.value(metadata i32 undef, metadata !14636, metadata !DIExpression()) #23, !dbg !16551
  call void @llvm.dbg.value(metadata i32 undef, metadata !14629, metadata !DIExpression()) #23, !dbg !16547
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16552
  br i1 %20, label %22, label %21, !dbg !16553

21:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 148) #25, !dbg !16554
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.294, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16554
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 148) #25, !dbg !16554
  unreachable, !dbg !16554

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !14635, metadata !DIExpression()) #23, !dbg !16551
  call void @llvm.dbg.value(metadata i32 undef, metadata !14629, metadata !DIExpression()) #23, !dbg !16547
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16555
  call void @llvm.dbg.value(metadata i32 undef, metadata !16519, metadata !DIExpression()), !dbg !16520
  %23 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16556
  store %struct.k_thread* %23, %struct.k_thread** @pending_current, align 4, !dbg !16557
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %23) #24, !dbg !16558
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16559
  %25 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !16560
  tail call fastcc void @z_add_thread_timeout.308(%struct.k_thread* noundef %24, [1 x i64] %25) #24, !dbg !16560
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16561
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %26) #24, !dbg !16562
  call void @llvm.dbg.value(metadata i32 undef, metadata !15301, metadata !DIExpression()) #23, !dbg !16563
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15306, metadata !DIExpression()) #23, !dbg !16563
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15310, metadata !DIExpression()) #23, !dbg !16565
  %27 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16567
  br i1 %27, label %29, label %28, !dbg !16568

28:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 225) #25, !dbg !16569
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.296, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16569
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 225) #25, !dbg !16569
  unreachable, !dbg !16569

29:                                               ; preds = %22
  %30 = extractvalue { i32, i32 } %19, 0, !dbg !16549
  call void @llvm.dbg.value(metadata i32 %30, metadata !14635, metadata !DIExpression()) #23, !dbg !16551
  call void @llvm.dbg.value(metadata i32 %30, metadata !14629, metadata !DIExpression()) #23, !dbg !16547
  call void @llvm.dbg.value(metadata i32 %30, metadata !16519, metadata !DIExpression()), !dbg !16520
  call void @llvm.dbg.value(metadata i32 undef, metadata !15301, metadata !DIExpression()) #23, !dbg !16563
  %31 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %30) #25, !dbg !16570
  %32 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16571
  %33 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %32, i32 noundef 16) #24, !dbg !16571
  br i1 %33, label %34, label %35, !dbg !16574

34:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.23.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.298, i32 0, i32 0), i32 noundef 1448) #25, !dbg !16575
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.300, i32 0, i32 0)) #25, !dbg !16575
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.298, i32 0, i32 0), i32 noundef 1448) #25, !dbg !16575
  unreachable, !dbg !16575

35:                                               ; preds = %29
  %36 = zext i32 %18 to i64, !dbg !16577
  %37 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !16578
  %38 = zext i32 %37 to i64, !dbg !16578
  %39 = sub nsw i64 %36, %38, !dbg !16579
  call void @llvm.dbg.value(metadata i64 %39, metadata !16516, metadata !DIExpression()), !dbg !16520
  %40 = icmp sgt i64 %39, 0, !dbg !16580
  %41 = select i1 %40, i64 %39, i64 0, !dbg !16580
  %42 = trunc i64 %41 to i32, !dbg !16580
  br label %43

43:                                               ; preds = %35, %7
  %44 = phi i32 [ 0, %7 ], [ %42, %35 ], !dbg !16520
  ret i32 %44, !dbg !16581
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #4 !dbg !16582 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16584, metadata !DIExpression()), !dbg !16585
  call void @llvm.dbg.value(metadata i64 %0, metadata !14683, metadata !DIExpression()), !dbg !16586
  call void @llvm.dbg.value(metadata i32 10000, metadata !14686, metadata !DIExpression()), !dbg !16586
  call void @llvm.dbg.value(metadata i32 1000, metadata !14687, metadata !DIExpression()), !dbg !16586
  call void @llvm.dbg.value(metadata i8 1, metadata !14688, metadata !DIExpression()), !dbg !16586
  call void @llvm.dbg.value(metadata i1 false, metadata !14689, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16586
  call void @llvm.dbg.value(metadata i1 false, metadata !14690, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16586
  call void @llvm.dbg.value(metadata i8 0, metadata !14691, metadata !DIExpression()), !dbg !16586
  call void @llvm.dbg.value(metadata i1 false, metadata !14692, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16586
  call void @llvm.dbg.value(metadata i1 true, metadata !14693, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16586
  call void @llvm.dbg.value(metadata i64 0, metadata !14694, metadata !DIExpression()), !dbg !16586
  call void @llvm.dbg.value(metadata i64 0, metadata !14694, metadata !DIExpression()), !dbg !16586
  call void @llvm.dbg.value(metadata i64 %0, metadata !14683, metadata !DIExpression()), !dbg !16586
  %2 = udiv i64 %0, 10, !dbg !16588
  ret i64 %2, !dbg !16592
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !16593 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16594, !srcloc !16596
  tail call void @z_impl_k_yield() #24, !dbg !16597
  ret void, !dbg !16598
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !16599 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16603, metadata !DIExpression()), !dbg !16605
  %2 = sext i32 %0 to i64, !dbg !16606
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #24, !dbg !16607
  call void @llvm.dbg.value(metadata i64 %3, metadata !16604, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16605
  %4 = shl i64 %3, 32, !dbg !16608
  %5 = ashr exact i64 %4, 32, !dbg !16608
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #24, !dbg !16609
  call void @llvm.dbg.value(metadata i32 %6, metadata !16604, metadata !DIExpression()), !dbg !16605
  %7 = sext i32 %6 to i64, !dbg !16610
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #24, !dbg !16611
  %9 = trunc i64 %8 to i32, !dbg !16611
  ret i32 %9, !dbg !16612
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !16613 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16615, metadata !DIExpression()), !dbg !16616
  call void @llvm.dbg.value(metadata i64 %0, metadata !14683, metadata !DIExpression()), !dbg !16617
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14686, metadata !DIExpression()), !dbg !16617
  call void @llvm.dbg.value(metadata i32 10000, metadata !14687, metadata !DIExpression()), !dbg !16617
  call void @llvm.dbg.value(metadata i8 1, metadata !14688, metadata !DIExpression()), !dbg !16617
  call void @llvm.dbg.value(metadata i1 false, metadata !14689, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16617
  call void @llvm.dbg.value(metadata i1 true, metadata !14690, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16617
  call void @llvm.dbg.value(metadata i8 0, metadata !14691, metadata !DIExpression()), !dbg !16617
  call void @llvm.dbg.value(metadata i1 false, metadata !14692, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16617
  call void @llvm.dbg.value(metadata i1 true, metadata !14693, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16617
  call void @llvm.dbg.value(metadata i64 0, metadata !14694, metadata !DIExpression()), !dbg !16617
  call void @llvm.dbg.value(metadata i64 0, metadata !14694, metadata !DIExpression()), !dbg !16617
  %2 = add i64 %0, 99, !dbg !16619
  call void @llvm.dbg.value(metadata i64 %2, metadata !14683, metadata !DIExpression()), !dbg !16617
  %3 = udiv i64 %2, 100, !dbg !16620
  ret i64 %3, !dbg !16621
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #4 !dbg !16622 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16624, metadata !DIExpression()), !dbg !16625
  call void @llvm.dbg.value(metadata i64 %0, metadata !14683, metadata !DIExpression()), !dbg !16626
  call void @llvm.dbg.value(metadata i32 10000, metadata !14686, metadata !DIExpression()), !dbg !16626
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14687, metadata !DIExpression()), !dbg !16626
  call void @llvm.dbg.value(metadata i8 1, metadata !14688, metadata !DIExpression()), !dbg !16626
  call void @llvm.dbg.value(metadata i1 false, metadata !14689, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16626
  call void @llvm.dbg.value(metadata i1 false, metadata !14690, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16626
  call void @llvm.dbg.value(metadata i8 0, metadata !14691, metadata !DIExpression()), !dbg !16626
  call void @llvm.dbg.value(metadata i1 true, metadata !14692, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16626
  call void @llvm.dbg.value(metadata i1 false, metadata !14693, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16626
  call void @llvm.dbg.value(metadata i64 0, metadata !14694, metadata !DIExpression()), !dbg !16626
  call void @llvm.dbg.value(metadata i64 0, metadata !14694, metadata !DIExpression()), !dbg !16626
  %2 = mul i64 %0, 100, !dbg !16628
  ret i64 %2, !dbg !16630
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16631 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16633, metadata !DIExpression()), !dbg !16634
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #24, !dbg !16635
  br i1 %2, label %14, label %3, !dbg !16637

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !16638
  %5 = icmp slt i32 %4, 0, !dbg !16640
  br i1 %5, label %6, label %10, !dbg !16641

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16642
  %8 = load i8, i8* %7, align 1, !dbg !16642
  %9 = icmp eq i8 %8, 16, !dbg !16645
  br i1 %9, label %10, label %14, !dbg !16646

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !16647
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #24, !dbg !16648
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16649, !srcloc !15357
  call void @llvm.dbg.value(metadata i32 %11, metadata !15353, metadata !DIExpression()) #23, !dbg !16653
  %12 = icmp eq i32 %11, 0, !dbg !16654
  br i1 %12, label %13, label %14, !dbg !16655

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !16656
  br label %14, !dbg !16658

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !16659
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16660 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16662, metadata !DIExpression()), !dbg !16663
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16664
  %3 = load i8, i8* %2, align 1, !dbg !16664
  %4 = and i8 %3, 2, !dbg !16665
  %5 = icmp ne i8 %4, 0, !dbg !16666
  ret i1 %5, !dbg !16667
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #8 !dbg !16668 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16673
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16672, metadata !DIExpression()), !dbg !16674
  ret %struct.k_thread* %1, !dbg !16675
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !16676 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16677, !srcloc !15357
  call void @llvm.dbg.value(metadata i32 %1, metadata !15353, metadata !DIExpression()) #23, !dbg !16680
  %2 = icmp eq i32 %1, 0, !dbg !16681
  br i1 %2, label %3, label %8, !dbg !16682

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16683
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #24, !dbg !16684
  %6 = icmp ne i32 %5, 0, !dbg !16682
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !16685
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16686 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16688, metadata !DIExpression()), !dbg !16690
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14623, metadata !DIExpression()) #23, !dbg !16691
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16693, !srcloc !14638
  call void @llvm.dbg.value(metadata i32 undef, metadata !14635, metadata !DIExpression()) #23, !dbg !16695
  call void @llvm.dbg.value(metadata i32 undef, metadata !14636, metadata !DIExpression()) #23, !dbg !16695
  call void @llvm.dbg.value(metadata i32 undef, metadata !14629, metadata !DIExpression()) #23, !dbg !16691
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16696
  br i1 %3, label %5, label %4, !dbg !16697

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 148) #25, !dbg !16698
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.294, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16698
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 148) #25, !dbg !16698
  unreachable, !dbg !16698

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !16693
  call void @llvm.dbg.value(metadata i32 %6, metadata !14635, metadata !DIExpression()) #23, !dbg !16695
  call void @llvm.dbg.value(metadata i32 %6, metadata !14629, metadata !DIExpression()) #23, !dbg !16691
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16699
  call void @llvm.dbg.value(metadata i32 %6, metadata !16689, metadata !DIExpression()), !dbg !16690
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !16700
  %8 = load i8, i8* %7, align 4, !dbg !16700
  %9 = and i8 %8, 1, !dbg !16702
  %10 = icmp eq i8 %9, 0, !dbg !16703
  br i1 %10, label %15, label %11, !dbg !16704

11:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14657, metadata !DIExpression()) #23, !dbg !16705
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14662, metadata !DIExpression()) #23, !dbg !16705
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16708
  br i1 %12, label %14, label %13, !dbg !16709

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 194) #25, !dbg !16710
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.296, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16710
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 194) #25, !dbg !16710
  unreachable, !dbg !16710

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %6, metadata !14657, metadata !DIExpression()) #23, !dbg !16705
  call void @llvm.dbg.value(metadata i32 %6, metadata !14671, metadata !DIExpression()) #23, !dbg !16711
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16713, !srcloc !14677
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.331, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.298, i32 0, i32 0), i32 noundef 1731) #25, !dbg !16714
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.332, i32 0, i32 0), %struct.k_thread* noundef nonnull %0) #25, !dbg !16714
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.298, i32 0, i32 0), i32 noundef 1731) #25, !dbg !16714
  unreachable, !dbg !16714

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16718
  %17 = load i8, i8* %16, align 1, !dbg !16718
  %18 = and i8 %17, 8, !dbg !16720
  %19 = icmp eq i8 %18, 0, !dbg !16721
  br i1 %19, label %24, label %20, !dbg !16722

20:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 undef, metadata !14657, metadata !DIExpression()) #23, !dbg !16723
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14662, metadata !DIExpression()) #23, !dbg !16723
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16726
  br i1 %21, label %23, label %22, !dbg !16727

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 194) #25, !dbg !16728
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.296, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16728
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 194) #25, !dbg !16728
  unreachable, !dbg !16728

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %6, metadata !14657, metadata !DIExpression()) #23, !dbg !16723
  call void @llvm.dbg.value(metadata i32 %6, metadata !14671, metadata !DIExpression()) #23, !dbg !16729
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16731, !srcloc !14677
  br label %39, !dbg !16732

24:                                               ; preds = %15
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #24, !dbg !16733
  %25 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16734
  %26 = icmp eq %struct.k_thread* %25, %0, !dbg !16736
  br i1 %26, label %27, label %35, !dbg !16737

27:                                               ; preds = %24
  %28 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16738, !srcloc !15357
  call void @llvm.dbg.value(metadata i32 %28, metadata !15353, metadata !DIExpression()) #23, !dbg !16741
  %29 = icmp eq i32 %28, 0, !dbg !16742
  br i1 %29, label %30, label %35, !dbg !16743

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !15301, metadata !DIExpression()) #23, !dbg !16744
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15306, metadata !DIExpression()) #23, !dbg !16744
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15310, metadata !DIExpression()) #23, !dbg !16747
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16749
  br i1 %31, label %33, label %32, !dbg !16750

32:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 225) #25, !dbg !16751
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.296, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16751
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 225) #25, !dbg !16751
  unreachable, !dbg !16751

33:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %6, metadata !15301, metadata !DIExpression()) #23, !dbg !16744
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %6) #25, !dbg !16752
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.331, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.298, i32 0, i32 0), i32 noundef 1778) #25, !dbg !16753
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.333, i32 0, i32 0)) #25, !dbg !16753
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.298, i32 0, i32 0), i32 noundef 1778) #25, !dbg !16753
  unreachable, !dbg !16753

35:                                               ; preds = %27, %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !14657, metadata !DIExpression()) #23, !dbg !16757
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14662, metadata !DIExpression()) #23, !dbg !16757
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16759
  br i1 %36, label %38, label %37, !dbg !16760

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 194) #25, !dbg !16761
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.296, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16761
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 194) #25, !dbg !16761
  unreachable, !dbg !16761

38:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %6, metadata !14657, metadata !DIExpression()) #23, !dbg !16757
  call void @llvm.dbg.value(metadata i32 %6, metadata !14671, metadata !DIExpression()) #23, !dbg !16762
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16764, !srcloc !14677
  br label %39, !dbg !16765

39:                                               ; preds = %38, %23
  ret void, !dbg !16765
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16766 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16768, metadata !DIExpression()), !dbg !16769
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16770
  %3 = load i8, i8* %2, align 1, !dbg !16770
  %4 = and i8 %3, 8, !dbg !16772
  %5 = icmp eq i8 %4, 0, !dbg !16773
  br i1 %5, label %6, label %20, !dbg !16774

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !16775
  %8 = or i8 %7, 8, !dbg !16775
  store i8 %8, i8* %2, align 1, !dbg !16775
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #24, !dbg !16777
  br i1 %9, label %10, label %12, !dbg !16779

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14815, metadata !DIExpression()) #23, !dbg !16780
  %11 = and i8 %8, 95, !dbg !16783
  store i8 %11, i8* %2, align 1, !dbg !16783
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14823, metadata !DIExpression()) #23, !dbg !16784
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #25, !dbg !16786
  br label %12, !dbg !16787

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16788
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !16788
  %15 = icmp eq %union.anon* %14, null, !dbg !16790
  br i1 %15, label %17, label %16, !dbg !16791

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !16792
  br label %17, !dbg !16794

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !16795
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16796
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #24, !dbg !16797
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !16798
  br label %20, !dbg !16799

20:                                               ; preds = %17, %1
  ret void, !dbg !16800
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !16801 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16805, metadata !DIExpression()), !dbg !16807
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !16808
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16806, metadata !DIExpression()), !dbg !16807
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16809
  br i1 %3, label %10, label %4, !dbg !16810

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !16811
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !16813
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16814, metadata !DIExpression()), !dbg !16820
  call void @llvm.dbg.value(metadata i32 0, metadata !16819, metadata !DIExpression()), !dbg !16820
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 8, i32 1, !dbg !16822
  store i32 0, i32* %7, align 4, !dbg !16823
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16824
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !16808
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16806, metadata !DIExpression()), !dbg !16807
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16809
  br i1 %9, label %10, label %4, !dbg !16810, !llvm.loop !16825

10:                                               ; preds = %4, %1
  ret void, !dbg !16827
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !16828 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16833, metadata !DIExpression()), !dbg !16836
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16832, metadata !DIExpression()), !dbg !16836
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14623, metadata !DIExpression()) #23, !dbg !16837
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16839, !srcloc !14638
  call void @llvm.dbg.value(metadata i32 undef, metadata !14635, metadata !DIExpression()) #23, !dbg !16841
  call void @llvm.dbg.value(metadata i32 undef, metadata !14636, metadata !DIExpression()) #23, !dbg !16841
  call void @llvm.dbg.value(metadata i32 undef, metadata !14629, metadata !DIExpression()) #23, !dbg !16837
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16842
  br i1 %4, label %6, label %5, !dbg !16843

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 148) #25, !dbg !16844
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.294, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16844
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 148) #25, !dbg !16844
  unreachable, !dbg !16844

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !16839
  call void @llvm.dbg.value(metadata i32 %7, metadata !14635, metadata !DIExpression()) #23, !dbg !16841
  call void @llvm.dbg.value(metadata i32 %7, metadata !14629, metadata !DIExpression()) #23, !dbg !16837
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16845
  call void @llvm.dbg.value(metadata i32 %7, metadata !16834, metadata !DIExpression()), !dbg !16836
  call void @llvm.dbg.value(metadata i32 0, metadata !16835, metadata !DIExpression()), !dbg !16836
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16846
  %9 = load i8, i8* %8, align 1, !dbg !16846
  %10 = and i8 %9, 8, !dbg !16848
  %11 = icmp eq i8 %10, 0, !dbg !16849
  br i1 %11, label %12, label %35, !dbg !16850

12:                                               ; preds = %6
  %13 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %13, metadata !16833, metadata !DIExpression()), !dbg !16836
  %14 = icmp eq i64 %13, 0, !dbg !16851
  br i1 %14, label %35, label %15, !dbg !16853

15:                                               ; preds = %12
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16854
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !16856
  br i1 %17, label %35, label %18, !dbg !16857

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16858
  %20 = load %union.anon*, %union.anon** %19, align 8, !dbg !16858
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %16, i32 0, i32 3, !dbg !16859
  %22 = icmp eq %union.anon* %20, %21, !dbg !16860
  br i1 %22, label %35, label %23, !dbg !16861

23:                                               ; preds = %18
  %24 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16862, !srcloc !15357
  call void @llvm.dbg.value(metadata i32 %24, metadata !15353, metadata !DIExpression()) #23, !dbg !16868
  %25 = icmp eq i32 %24, 0, !dbg !16869
  br i1 %25, label %27, label %26, !dbg !16870

26:                                               ; preds = %23
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.315, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.298, i32 0, i32 0), i32 noundef 1809) #25, !dbg !16871
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13.336, i32 0, i32 0)) #25, !dbg !16871
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.298, i32 0, i32 0), i32 noundef 1809) #25, !dbg !16871
  unreachable, !dbg !16871

27:                                               ; preds = %23
  %28 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16873
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16874
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %28, %union.anon* noundef nonnull %29) #24, !dbg !16875
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16876
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %30, [1 x i64] %1) #24, !dbg !16877
  call void @llvm.dbg.value(metadata i32 undef, metadata !15301, metadata !DIExpression()) #23, !dbg !16878
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15306, metadata !DIExpression()) #23, !dbg !16878
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15310, metadata !DIExpression()) #23, !dbg !16880
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16882
  br i1 %31, label %33, label %32, !dbg !16883

32:                                               ; preds = %27
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 225) #25, !dbg !16884
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.296, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16884
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 225) #25, !dbg !16884
  unreachable, !dbg !16884

33:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %7, metadata !15301, metadata !DIExpression()) #23, !dbg !16878
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %7) #25, !dbg !16885
  call void @llvm.dbg.value(metadata i32 %34, metadata !16835, metadata !DIExpression()), !dbg !16836
  br label %40, !dbg !16886

35:                                               ; preds = %15, %18, %12, %6
  %36 = phi i32 [ 0, %6 ], [ -16, %12 ], [ -45, %18 ], [ -45, %15 ], !dbg !16887
  call void @llvm.dbg.value(metadata i32 %36, metadata !16835, metadata !DIExpression()), !dbg !16836
  call void @llvm.dbg.value(metadata i32 undef, metadata !14657, metadata !DIExpression()) #23, !dbg !16888
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14662, metadata !DIExpression()) #23, !dbg !16888
  %37 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16890
  br i1 %37, label %39, label %38, !dbg !16891

38:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 194) #25, !dbg !16892
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.296, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16892
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 194) #25, !dbg !16892
  unreachable, !dbg !16892

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %7, metadata !14657, metadata !DIExpression()) #23, !dbg !16888
  call void @llvm.dbg.value(metadata i32 %7, metadata !14671, metadata !DIExpression()) #23, !dbg !16893
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !16895, !srcloc !14677
  br label %40, !dbg !16896

40:                                               ; preds = %39, %33
  %41 = phi i32 [ %36, %39 ], [ %34, %33 ], !dbg !16836
  ret i32 %41, !dbg !16897
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !16898 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16902, metadata !DIExpression()), !dbg !16910
  call void @llvm.dbg.value(metadata i32 %1, metadata !16903, metadata !DIExpression()), !dbg !16910
  call void @llvm.dbg.value(metadata i8* %2, metadata !16904, metadata !DIExpression()), !dbg !16910
  call void @llvm.dbg.value(metadata i8 0, metadata !16906, metadata !DIExpression()), !dbg !16910
  call void @llvm.dbg.value(metadata i32 0, metadata !16907, metadata !DIExpression()), !dbg !16911
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14623, metadata !DIExpression()) #23, !dbg !16912
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16914, !srcloc !14638
  call void @llvm.dbg.value(metadata i32 undef, metadata !14635, metadata !DIExpression()) #23, !dbg !16916
  call void @llvm.dbg.value(metadata i32 undef, metadata !14636, metadata !DIExpression()) #23, !dbg !16916
  call void @llvm.dbg.value(metadata i32 undef, metadata !14629, metadata !DIExpression()) #23, !dbg !16912
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16917
  br i1 %5, label %7, label %6, !dbg !16918

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 148) #25, !dbg !16919
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.294, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16919
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 148) #25, !dbg !16919
  unreachable, !dbg !16919

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !14635, metadata !DIExpression()) #23, !dbg !16916
  call void @llvm.dbg.value(metadata i32 undef, metadata !14629, metadata !DIExpression()) #23, !dbg !16912
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16920
  call void @llvm.dbg.value(metadata i32 undef, metadata !16909, metadata !DIExpression()), !dbg !16911
  call void @llvm.dbg.value(metadata i8 poison, metadata !16906, metadata !DIExpression()), !dbg !16910
  call void @llvm.dbg.value(metadata i32 undef, metadata !16907, metadata !DIExpression()), !dbg !16911
  %8 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %9 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %8) #24, !dbg !16921
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16905, metadata !DIExpression()), !dbg !16910
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !16924
  br i1 %10, label %15, label %11, !dbg !16926

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16927, metadata !DIExpression()), !dbg !16935
  call void @llvm.dbg.value(metadata i32 %1, metadata !16933, metadata !DIExpression()), !dbg !16935
  call void @llvm.dbg.value(metadata i8* %2, metadata !16934, metadata !DIExpression()), !dbg !16935
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16814, metadata !DIExpression()), !dbg !16938
  call void @llvm.dbg.value(metadata i32 %1, metadata !16819, metadata !DIExpression()), !dbg !16938
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 8, i32 1, !dbg !16940
  store i32 %1, i32* %12, align 4, !dbg !16941
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16942
  store i8* %2, i8** %13, align 4, !dbg !16943
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %9) #24, !dbg !16944
  %14 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %9) #24, !dbg !16945
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %9) #24, !dbg !16946
  call void @llvm.dbg.value(metadata i8 1, metadata !16906, metadata !DIExpression()), !dbg !16910
  br label %15, !dbg !16947

15:                                               ; preds = %7, %11
  call void @llvm.dbg.value(metadata i8 poison, metadata !16906, metadata !DIExpression()), !dbg !16910
  call void @llvm.dbg.value(metadata i32 undef, metadata !14657, metadata !DIExpression()) #23, !dbg !16948
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14662, metadata !DIExpression()) #23, !dbg !16948
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16950
  br i1 %16, label %18, label %17, !dbg !16951

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 194) #25, !dbg !16952
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.296, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16952
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.293, i32 0, i32 0), i32 noundef 194) #25, !dbg !16952
  unreachable, !dbg !16952

18:                                               ; preds = %15
  %19 = xor i1 %10, true, !dbg !16910
  %20 = extractvalue { i32, i32 } %4, 0, !dbg !16914
  call void @llvm.dbg.value(metadata i32 %20, metadata !14635, metadata !DIExpression()) #23, !dbg !16916
  call void @llvm.dbg.value(metadata i32 %20, metadata !14629, metadata !DIExpression()) #23, !dbg !16912
  call void @llvm.dbg.value(metadata i32 %20, metadata !16909, metadata !DIExpression()), !dbg !16911
  call void @llvm.dbg.value(metadata i32 undef, metadata !14657, metadata !DIExpression()) #23, !dbg !16948
  call void @llvm.dbg.value(metadata i32 undef, metadata !14671, metadata !DIExpression()) #23, !dbg !16953
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !16955, !srcloc !14677
  call void @llvm.dbg.value(metadata i8 poison, metadata !16906, metadata !DIExpression()), !dbg !16910
  call void @llvm.dbg.value(metadata i32 undef, metadata !16907, metadata !DIExpression()), !dbg !16911
  ret i1 %19, !dbg !16956
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !16957 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16963, metadata !DIExpression()), !dbg !16968
  call void @llvm.dbg.value(metadata i64 undef, metadata !16965, metadata !DIExpression()), !dbg !16968
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16962, metadata !DIExpression()), !dbg !16968
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !16964, metadata !DIExpression()), !dbg !16968
  call void @llvm.dbg.value(metadata i8** %4, metadata !16966, metadata !DIExpression()), !dbg !16968
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #24, !dbg !16969
  call void @llvm.dbg.value(metadata i32 %6, metadata !16967, metadata !DIExpression()), !dbg !16968
  %7 = icmp eq i8** %4, null, !dbg !16970
  br i1 %7, label %12, label %8, !dbg !16972

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16973
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16975
  %11 = load i8*, i8** %10, align 4, !dbg !16975
  store i8* %11, i8** %4, align 4, !dbg !16976
  br label %12, !dbg !16977

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !16978
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !16979 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #25, !dbg !16981
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #25, !dbg !16982
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_data_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ccm_data_rom_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__ccm_data_end to i32), i32 ptrtoint ([0 x i8]* @__ccm_data_start to i32))) #25, !dbg !16983
  ret void, !dbg !16984
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16985 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !16995, metadata !DIExpression()), !dbg !17012
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16993, metadata !DIExpression()), !dbg !17012
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !16994, metadata !DIExpression()), !dbg !17012
  %5 = icmp eq i64 %4, -1, !dbg !17013
  br i1 %5, label %63, label %6, !dbg !17015

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17016
  %8 = tail call fastcc zeroext i1 @sys_dnode_is_linked.341(%struct._dnode* noundef %7) #24, !dbg !17016
  br i1 %8, label %9, label %10, !dbg !17019

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.343, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.344, i32 0, i32 0), i32 noundef 99) #25, !dbg !17020
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.345, i32 0, i32 0)) #25, !dbg !17020
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.344, i32 0, i32 0), i32 noundef 99) #25, !dbg !17020
  unreachable, !dbg !17020

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !17022
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %11, align 8, !dbg !17023
  call void @llvm.dbg.value(metadata i32 0, metadata !16996, metadata !DIExpression()), !dbg !17024
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17025, metadata !DIExpression()) #23, !dbg !17032
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17034, !srcloc !17040
  call void @llvm.dbg.value(metadata i32 undef, metadata !17037, metadata !DIExpression()) #23, !dbg !17041
  call void @llvm.dbg.value(metadata i32 undef, metadata !17038, metadata !DIExpression()) #23, !dbg !17041
  call void @llvm.dbg.value(metadata i32 undef, metadata !17031, metadata !DIExpression()) #23, !dbg !17032
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17042
  br i1 %13, label %15, label %14, !dbg !17045

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !17046
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.348, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17046
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !17046
  unreachable, !dbg !17046

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !17034
  call void @llvm.dbg.value(metadata i32 %16, metadata !17037, metadata !DIExpression()) #23, !dbg !17041
  call void @llvm.dbg.value(metadata i32 %16, metadata !17031, metadata !DIExpression()) #23, !dbg !17032
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17048
  call void @llvm.dbg.value(metadata i32 %16, metadata !17002, metadata !DIExpression()), !dbg !17024
  call void @llvm.dbg.value(metadata i32 undef, metadata !16996, metadata !DIExpression()), !dbg !17024
  %17 = icmp slt i64 %4, -1, !dbg !17049
  br i1 %17, label %18, label %24, !dbg !17050

18:                                               ; preds = %15
  %19 = load i64, i64* @curr_tick, align 8, !dbg !17051
  %20 = add i64 %4, %19, !dbg !17052
  %21 = sub i64 -2, %20, !dbg !17052
  call void @llvm.dbg.value(metadata i64 %21, metadata !17006, metadata !DIExpression()), !dbg !17053
  %22 = icmp sgt i64 %21, 1, !dbg !17054
  %23 = select i1 %22, i64 %21, i64 1, !dbg !17054
  br label %29, !dbg !17055

24:                                               ; preds = %15
  %25 = add nuw nsw i64 %4, 1, !dbg !17056
  %26 = tail call fastcc i32 @elapsed.349() #24, !dbg !17058
  %27 = sext i32 %26 to i64, !dbg !17058
  %28 = add nsw i64 %25, %27, !dbg !17059
  br label %29

29:                                               ; preds = %24, %18
  %30 = phi i64 [ %23, %18 ], [ %28, %24 ], !dbg !17060
  %31 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17061
  store i64 %30, i64* %31, align 8, !dbg !17062
  %32 = tail call fastcc %struct._timeout* @first() #24, !dbg !17063
  call void @llvm.dbg.value(metadata %struct._timeout* %32, metadata !17003, metadata !DIExpression()), !dbg !17065
  %33 = icmp eq %struct._timeout* %32, null, !dbg !17066
  br i1 %33, label %48, label %34, !dbg !17066

34:                                               ; preds = %29, %44
  %35 = phi i64 [ %45, %44 ], [ %30, %29 ], !dbg !17067
  %36 = phi %struct._timeout* [ %46, %44 ], [ %32, %29 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %36, metadata !17003, metadata !DIExpression()), !dbg !17065
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !17071
  %38 = load i64, i64* %37, align 8, !dbg !17071
  %39 = icmp slt i64 %35, %38, !dbg !17072
  br i1 %39, label %40, label %44, !dbg !17073

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !17071
  %42 = sub nsw i64 %38, %35, !dbg !17074
  store i64 %42, i64* %41, align 8, !dbg !17074
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 0, !dbg !17076
  tail call fastcc void @sys_dlist_insert.350(%struct._dnode* noundef nonnull %43, %struct._dnode* noundef nonnull %7) #24, !dbg !17077
  br label %49, !dbg !17078

44:                                               ; preds = %34
  %45 = sub nsw i64 %35, %38, !dbg !17079
  store i64 %45, i64* %31, align 8, !dbg !17079
  %46 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %36) #24, !dbg !17080
  call void @llvm.dbg.value(metadata %struct._timeout* %46, metadata !17003, metadata !DIExpression()), !dbg !17065
  %47 = icmp eq %struct._timeout* %46, null, !dbg !17066
  br i1 %47, label %48, label %34, !dbg !17066, !llvm.loop !17081

48:                                               ; preds = %44, %29
  tail call fastcc void @sys_dlist_append.351(%struct._dnode* noundef nonnull %7) #24, !dbg !17083
  br label %49, !dbg !17086

49:                                               ; preds = %40, %48
  %50 = tail call fastcc %struct._timeout* @first() #24, !dbg !17087
  %51 = icmp eq %struct._timeout* %50, %0, !dbg !17088
  br i1 %51, label %52, label %59, !dbg !17089

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @next_timeout() #24, !dbg !17090
  call void @llvm.dbg.value(metadata i32 %53, metadata !17009, metadata !DIExpression()), !dbg !17091
  %54 = icmp ne i32 %53, 0, !dbg !17092
  %55 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %56 = icmp eq i32 %55, %53
  %57 = select i1 %54, i1 %56, i1 false, !dbg !17094
  br i1 %57, label %59, label %58, !dbg !17094

58:                                               ; preds = %52
  tail call void @sys_clock_set_timeout(i32 noundef %53, i1 noundef zeroext false) #25, !dbg !17095
  br label %59, !dbg !17097

59:                                               ; preds = %58, %52, %49
  call void @llvm.dbg.value(metadata i32 undef, metadata !17098, metadata !DIExpression()) #23, !dbg !17104
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17103, metadata !DIExpression()) #23, !dbg !17104
  %60 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17106
  br i1 %60, label %62, label %61, !dbg !17109

61:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !17110
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17110
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !17110
  unreachable, !dbg !17110

62:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !17098, metadata !DIExpression()) #23, !dbg !17104
  call void @llvm.dbg.value(metadata i32 %16, metadata !17112, metadata !DIExpression()) #23, !dbg !17115
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !17117, !srcloc !17118
  call void @llvm.dbg.value(metadata i32 undef, metadata !16996, metadata !DIExpression()), !dbg !17024
  br label %63

63:                                               ; preds = %3, %62
  ret void, !dbg !17119
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.341(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !17120 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17126, metadata !DIExpression()), !dbg !17127
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17128
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17128
  %4 = icmp ne %struct._dnode* %3, null, !dbg !17129
  ret i1 %4, !dbg !17130
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.349() unnamed_addr #1 !dbg !17131 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !17134
  %2 = icmp eq i32 %1, 0, !dbg !17135
  br i1 %2, label %3, label %5, !dbg !17134

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #25, !dbg !17136
  br label %5, !dbg !17134

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !17134
  ret i32 %6, !dbg !17137
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #8 !dbg !17138 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.356() #24, !dbg !17144
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17142, metadata !DIExpression()), !dbg !17145
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !17146
  ret %struct._timeout* %2, !dbg !17147
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.350(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !17148 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17152, metadata !DIExpression()), !dbg !17156
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17153, metadata !DIExpression()), !dbg !17156
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17157
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !17157
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !17154, metadata !DIExpression()), !dbg !17156
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !17158
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !17159
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !17160
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !17161
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !17162
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !17163
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !17164
  ret void, !dbg !17165
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #8 !dbg !17166 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17170, metadata !DIExpression()), !dbg !17172
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17173
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.354(%struct._dnode* noundef %2) #24, !dbg !17174
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17171, metadata !DIExpression()), !dbg !17172
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !17175
  ret %struct._timeout* %4, !dbg !17176
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.351(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !17177 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17182, metadata !DIExpression()), !dbg !17185
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17183, metadata !DIExpression()), !dbg !17185
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17186
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !17184, metadata !DIExpression()), !dbg !17185
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17187
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !17188
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17189
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !17190
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !17191
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !17192
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17193
  ret void, !dbg !17194
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !17195 {
  %1 = tail call fastcc %struct._timeout* @first() #24, !dbg !17200
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !17197, metadata !DIExpression()), !dbg !17201
  %2 = tail call fastcc i32 @elapsed.349() #24, !dbg !17202
  call void @llvm.dbg.value(metadata i32 %2, metadata !17198, metadata !DIExpression()), !dbg !17201
  %3 = icmp eq %struct._timeout* %1, null, !dbg !17203
  br i1 %3, label %14, label %4, !dbg !17205

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !17206
  %6 = load i64, i64* %5, align 8, !dbg !17206
  %7 = sext i32 %2 to i64, !dbg !17207
  %8 = sub nsw i64 %6, %7, !dbg !17208
  %9 = icmp sgt i64 %8, 2147483647, !dbg !17209
  br i1 %9, label %14, label %10, !dbg !17210

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !17211
  %12 = select i1 %11, i64 %8, i64 0, !dbg !17211
  %13 = trunc i64 %12 to i32, !dbg !17211
  call void @llvm.dbg.value(metadata i32 %13, metadata !17199, metadata !DIExpression()), !dbg !17201
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !17213
  call void @llvm.dbg.value(metadata i32 %15, metadata !17199, metadata !DIExpression()), !dbg !17201
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !17214
  %17 = icmp ne i32 %16, 0, !dbg !17216
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !17217
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !17217
  call void @llvm.dbg.value(metadata i32 %20, metadata !17199, metadata !DIExpression()), !dbg !17201
  ret i32 %20, !dbg !17218
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.354(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !17219 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17223, metadata !DIExpression()), !dbg !17225
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17224, metadata !DIExpression()), !dbg !17225
  %2 = icmp eq %struct._dnode* %0, null, !dbg !17226
  br i1 %2, label %5, label %3, !dbg !17227

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.355(%struct._dnode* noundef nonnull %0) #24, !dbg !17228
  br label %5, !dbg !17227

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !17227
  ret %struct._dnode* %6, !dbg !17229
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.355(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !17230 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17232, metadata !DIExpression()), !dbg !17234
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17233, metadata !DIExpression()), !dbg !17234
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17235
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !17236
  br i1 %3, label %7, label %4, !dbg !17237

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17238
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !17238
  br label %7, !dbg !17237

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !17237
  ret %struct._dnode* %8, !dbg !17239
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.356() unnamed_addr #8 !dbg !17240 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17244, metadata !DIExpression()), !dbg !17245
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.357() #24, !dbg !17246
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !17246
  ret %struct._dnode* %3, !dbg !17247
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.357() unnamed_addr #8 !dbg !17248 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17252, metadata !DIExpression()), !dbg !17253
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !17254
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !17255
  ret i1 %2, !dbg !17256
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17257 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17261, metadata !DIExpression()), !dbg !17266
  call void @llvm.dbg.value(metadata i32 -22, metadata !17262, metadata !DIExpression()), !dbg !17266
  call void @llvm.dbg.value(metadata i32 0, metadata !17263, metadata !DIExpression()), !dbg !17267
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17025, metadata !DIExpression()) #23, !dbg !17268
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17270, !srcloc !17040
  call void @llvm.dbg.value(metadata i32 undef, metadata !17037, metadata !DIExpression()) #23, !dbg !17272
  call void @llvm.dbg.value(metadata i32 undef, metadata !17038, metadata !DIExpression()) #23, !dbg !17272
  call void @llvm.dbg.value(metadata i32 undef, metadata !17031, metadata !DIExpression()) #23, !dbg !17268
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17273
  br i1 %3, label %5, label %4, !dbg !17274

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !17275
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.348, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17275
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !17275
  unreachable, !dbg !17275

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !17037, metadata !DIExpression()) #23, !dbg !17272
  call void @llvm.dbg.value(metadata i32 undef, metadata !17031, metadata !DIExpression()) #23, !dbg !17268
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17276
  call void @llvm.dbg.value(metadata i32 undef, metadata !17265, metadata !DIExpression()), !dbg !17267
  call void @llvm.dbg.value(metadata i32 -22, metadata !17262, metadata !DIExpression()), !dbg !17266
  call void @llvm.dbg.value(metadata i32 undef, metadata !17263, metadata !DIExpression()), !dbg !17267
  %6 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !17262, metadata !DIExpression()), !dbg !17266
  %7 = tail call fastcc zeroext i1 @sys_dnode_is_linked.341(%struct._dnode* noundef %6) #24, !dbg !17277
  br i1 %7, label %8, label %9, !dbg !17281

8:                                                ; preds = %5
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #24, !dbg !17282
  call void @llvm.dbg.value(metadata i32 0, metadata !17262, metadata !DIExpression()), !dbg !17266
  br label %9, !dbg !17284

9:                                                ; preds = %5, %8
  %10 = phi i32 [ 0, %8 ], [ -22, %5 ], !dbg !17266
  call void @llvm.dbg.value(metadata i32 %10, metadata !17262, metadata !DIExpression()), !dbg !17266
  call void @llvm.dbg.value(metadata i32 undef, metadata !17098, metadata !DIExpression()) #23, !dbg !17285
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17103, metadata !DIExpression()) #23, !dbg !17285
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17287
  br i1 %11, label %13, label %12, !dbg !17288

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !17289
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17289
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !17289
  unreachable, !dbg !17289

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !17270
  call void @llvm.dbg.value(metadata i32 %14, metadata !17037, metadata !DIExpression()) #23, !dbg !17272
  call void @llvm.dbg.value(metadata i32 %14, metadata !17031, metadata !DIExpression()) #23, !dbg !17268
  call void @llvm.dbg.value(metadata i32 %14, metadata !17265, metadata !DIExpression()), !dbg !17267
  call void @llvm.dbg.value(metadata i32 undef, metadata !17098, metadata !DIExpression()) #23, !dbg !17285
  call void @llvm.dbg.value(metadata i32 undef, metadata !17112, metadata !DIExpression()) #23, !dbg !17290
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !17292, !srcloc !17118
  call void @llvm.dbg.value(metadata i32 %10, metadata !17262, metadata !DIExpression()), !dbg !17266
  call void @llvm.dbg.value(metadata i32 undef, metadata !17263, metadata !DIExpression()), !dbg !17267
  ret i32 %10, !dbg !17293
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #9 !dbg !17294 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17296, metadata !DIExpression()), !dbg !17297
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #24, !dbg !17298
  %3 = icmp eq %struct._timeout* %2, null, !dbg !17300
  br i1 %3, label %10, label %4, !dbg !17301

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17302
  %6 = load i64, i64* %5, align 8, !dbg !17302
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !17304
  %8 = load i64, i64* %7, align 8, !dbg !17305
  %9 = add nsw i64 %8, %6, !dbg !17305
  store i64 %9, i64* %7, align 8, !dbg !17305
  br label %10, !dbg !17306

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17307
  tail call fastcc void @sys_dlist_remove.360(%struct._dnode* noundef %11) #24, !dbg !17308
  ret void, !dbg !17309
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.360(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !17310 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17314, metadata !DIExpression()), !dbg !17317
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17318
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17318
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17315, metadata !DIExpression()), !dbg !17317
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17319
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !17319
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !17316, metadata !DIExpression()), !dbg !17317
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !17320
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !17321
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !17322
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !17323
  tail call fastcc void @sys_dnode_init.361(%struct._dnode* noundef %0) #24, !dbg !17324
  ret void, !dbg !17325
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.361(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !17326 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17328, metadata !DIExpression()), !dbg !17329
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17330
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !17331
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17332
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !17333
  ret void, !dbg !17334
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17335 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17341, metadata !DIExpression()), !dbg !17346
  call void @llvm.dbg.value(metadata i64 0, metadata !17342, metadata !DIExpression()), !dbg !17346
  call void @llvm.dbg.value(metadata i32 0, metadata !17343, metadata !DIExpression()), !dbg !17347
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17025, metadata !DIExpression()) #23, !dbg !17348
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17350, !srcloc !17040
  call void @llvm.dbg.value(metadata i32 undef, metadata !17037, metadata !DIExpression()) #23, !dbg !17352
  call void @llvm.dbg.value(metadata i32 undef, metadata !17038, metadata !DIExpression()) #23, !dbg !17352
  call void @llvm.dbg.value(metadata i32 undef, metadata !17031, metadata !DIExpression()) #23, !dbg !17348
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17353
  br i1 %3, label %5, label %4, !dbg !17354

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !17355
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.348, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17355
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !17355
  unreachable, !dbg !17355

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !17037, metadata !DIExpression()) #23, !dbg !17352
  call void @llvm.dbg.value(metadata i32 undef, metadata !17031, metadata !DIExpression()) #23, !dbg !17348
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17356
  call void @llvm.dbg.value(metadata i32 undef, metadata !17345, metadata !DIExpression()), !dbg !17347
  call void @llvm.dbg.value(metadata i64 0, metadata !17342, metadata !DIExpression()), !dbg !17346
  call void @llvm.dbg.value(metadata i32 undef, metadata !17343, metadata !DIExpression()), !dbg !17347
  %6 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !17357
  call void @llvm.dbg.value(metadata i64 %6, metadata !17342, metadata !DIExpression()), !dbg !17346
  call void @llvm.dbg.value(metadata i32 undef, metadata !17098, metadata !DIExpression()) #23, !dbg !17360
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17103, metadata !DIExpression()) #23, !dbg !17360
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17362
  br i1 %7, label %9, label %8, !dbg !17363

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !17364
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17364
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !17364
  unreachable, !dbg !17364

9:                                                ; preds = %5
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !17350
  call void @llvm.dbg.value(metadata i32 %10, metadata !17037, metadata !DIExpression()) #23, !dbg !17352
  call void @llvm.dbg.value(metadata i32 %10, metadata !17031, metadata !DIExpression()) #23, !dbg !17348
  call void @llvm.dbg.value(metadata i32 %10, metadata !17345, metadata !DIExpression()), !dbg !17347
  call void @llvm.dbg.value(metadata i32 undef, metadata !17098, metadata !DIExpression()) #23, !dbg !17360
  call void @llvm.dbg.value(metadata i32 undef, metadata !17112, metadata !DIExpression()) #23, !dbg !17365
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !17367, !srcloc !17118
  call void @llvm.dbg.value(metadata i64 %6, metadata !17342, metadata !DIExpression()), !dbg !17346
  call void @llvm.dbg.value(metadata i32 undef, metadata !17343, metadata !DIExpression()), !dbg !17347
  ret i64 %6, !dbg !17368
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !17369 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17371, metadata !DIExpression()), !dbg !17375
  call void @llvm.dbg.value(metadata i64 0, metadata !17372, metadata !DIExpression()), !dbg !17375
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.362(%struct._timeout* noundef %0) #24, !dbg !17376
  br i1 %2, label %21, label %3, !dbg !17378

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #24, !dbg !17379
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !17373, metadata !DIExpression()), !dbg !17380
  call void @llvm.dbg.value(metadata i64 0, metadata !17372, metadata !DIExpression()), !dbg !17375
  %5 = icmp eq %struct._timeout* %4, null, !dbg !17381
  br i1 %5, label %16, label %6, !dbg !17383

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !17373, metadata !DIExpression()), !dbg !17380
  call void @llvm.dbg.value(metadata i64 %8, metadata !17372, metadata !DIExpression()), !dbg !17375
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !17384
  %10 = load i64, i64* %9, align 8, !dbg !17384
  %11 = add nsw i64 %10, %8, !dbg !17386
  call void @llvm.dbg.value(metadata i64 %11, metadata !17372, metadata !DIExpression()), !dbg !17375
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !17387
  br i1 %12, label %16, label %13, !dbg !17389

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #24, !dbg !17390
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !17373, metadata !DIExpression()), !dbg !17380
  call void @llvm.dbg.value(metadata i64 %11, metadata !17372, metadata !DIExpression()), !dbg !17375
  %15 = icmp eq %struct._timeout* %14, null, !dbg !17381
  br i1 %15, label %16, label %6, !dbg !17383, !llvm.loop !17391

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !17375
  call void @llvm.dbg.value(metadata i64 %17, metadata !17372, metadata !DIExpression()), !dbg !17375
  %18 = tail call fastcc i32 @elapsed.349() #24, !dbg !17393
  %19 = sext i32 %18 to i64, !dbg !17393
  %20 = sub nsw i64 %17, %19, !dbg !17394
  br label %21, !dbg !17395

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !17375
  ret i64 %22, !dbg !17396
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.362(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !17397 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17401, metadata !DIExpression()), !dbg !17402
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17403
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.341(%struct._dnode* noundef %2) #24, !dbg !17404
  %4 = xor i1 %3, true, !dbg !17405
  ret i1 %4, !dbg !17406
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17407 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17409, metadata !DIExpression()), !dbg !17414
  call void @llvm.dbg.value(metadata i64 0, metadata !17410, metadata !DIExpression()), !dbg !17414
  call void @llvm.dbg.value(metadata i32 0, metadata !17411, metadata !DIExpression()), !dbg !17415
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17025, metadata !DIExpression()) #23, !dbg !17416
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17418, !srcloc !17040
  call void @llvm.dbg.value(metadata i32 undef, metadata !17037, metadata !DIExpression()) #23, !dbg !17420
  call void @llvm.dbg.value(metadata i32 undef, metadata !17038, metadata !DIExpression()) #23, !dbg !17420
  call void @llvm.dbg.value(metadata i32 undef, metadata !17031, metadata !DIExpression()) #23, !dbg !17416
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17421
  br i1 %3, label %5, label %4, !dbg !17422

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !17423
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.348, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17423
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !17423
  unreachable, !dbg !17423

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !17037, metadata !DIExpression()) #23, !dbg !17420
  call void @llvm.dbg.value(metadata i32 undef, metadata !17031, metadata !DIExpression()) #23, !dbg !17416
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17424
  call void @llvm.dbg.value(metadata i32 undef, metadata !17413, metadata !DIExpression()), !dbg !17415
  call void @llvm.dbg.value(metadata i64 0, metadata !17410, metadata !DIExpression()), !dbg !17414
  call void @llvm.dbg.value(metadata i32 undef, metadata !17411, metadata !DIExpression()), !dbg !17415
  %6 = load i64, i64* @curr_tick, align 8, !dbg !17425
  %7 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !17428
  call void @llvm.dbg.value(metadata !DIArgList(i64 %6, i64 %7), metadata !17410, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17414
  call void @llvm.dbg.value(metadata i32 undef, metadata !17098, metadata !DIExpression()) #23, !dbg !17429
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17103, metadata !DIExpression()) #23, !dbg !17429
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17431
  br i1 %8, label %10, label %9, !dbg !17432

9:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !17433
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17433
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !17433
  unreachable, !dbg !17433

10:                                               ; preds = %5
  %11 = extractvalue { i32, i32 } %2, 0, !dbg !17418
  call void @llvm.dbg.value(metadata i32 %11, metadata !17037, metadata !DIExpression()) #23, !dbg !17420
  call void @llvm.dbg.value(metadata i32 %11, metadata !17031, metadata !DIExpression()) #23, !dbg !17416
  call void @llvm.dbg.value(metadata i32 %11, metadata !17413, metadata !DIExpression()), !dbg !17415
  call void @llvm.dbg.value(metadata !DIArgList(i64 %7, i64 %6), metadata !17410, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17414
  call void @llvm.dbg.value(metadata i32 undef, metadata !17098, metadata !DIExpression()) #23, !dbg !17429
  call void @llvm.dbg.value(metadata i32 undef, metadata !17112, metadata !DIExpression()) #23, !dbg !17434
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !17436, !srcloc !17118
  call void @llvm.dbg.value(metadata i32 undef, metadata !17411, metadata !DIExpression()), !dbg !17415
  %12 = add i64 %7, %6, !dbg !17437
  ret i64 %12, !dbg !17438
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !17439 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !17441, metadata !DIExpression()), !dbg !17445
  call void @llvm.dbg.value(metadata i32 0, metadata !17442, metadata !DIExpression()), !dbg !17446
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17025, metadata !DIExpression()) #23, !dbg !17447
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17449, !srcloc !17040
  call void @llvm.dbg.value(metadata i32 undef, metadata !17037, metadata !DIExpression()) #23, !dbg !17451
  call void @llvm.dbg.value(metadata i32 undef, metadata !17038, metadata !DIExpression()) #23, !dbg !17451
  call void @llvm.dbg.value(metadata i32 undef, metadata !17031, metadata !DIExpression()) #23, !dbg !17447
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17452
  br i1 %2, label %4, label %3, !dbg !17453

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !17454
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.348, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17454
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !17454
  unreachable, !dbg !17454

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !17037, metadata !DIExpression()) #23, !dbg !17451
  call void @llvm.dbg.value(metadata i32 undef, metadata !17031, metadata !DIExpression()) #23, !dbg !17447
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17455
  call void @llvm.dbg.value(metadata i32 undef, metadata !17444, metadata !DIExpression()), !dbg !17446
  call void @llvm.dbg.value(metadata i32 -1, metadata !17441, metadata !DIExpression()), !dbg !17445
  call void @llvm.dbg.value(metadata i32 undef, metadata !17442, metadata !DIExpression()), !dbg !17446
  %5 = tail call fastcc i32 @next_timeout() #24, !dbg !17456
  call void @llvm.dbg.value(metadata i32 %5, metadata !17441, metadata !DIExpression()), !dbg !17445
  call void @llvm.dbg.value(metadata i32 undef, metadata !17098, metadata !DIExpression()) #23, !dbg !17459
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17103, metadata !DIExpression()) #23, !dbg !17459
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17461
  br i1 %6, label %8, label %7, !dbg !17462

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !17463
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17463
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !17463
  unreachable, !dbg !17463

8:                                                ; preds = %4
  %9 = extractvalue { i32, i32 } %1, 0, !dbg !17449
  call void @llvm.dbg.value(metadata i32 %9, metadata !17037, metadata !DIExpression()) #23, !dbg !17451
  call void @llvm.dbg.value(metadata i32 %9, metadata !17031, metadata !DIExpression()) #23, !dbg !17447
  call void @llvm.dbg.value(metadata i32 %9, metadata !17444, metadata !DIExpression()), !dbg !17446
  call void @llvm.dbg.value(metadata i32 undef, metadata !17098, metadata !DIExpression()) #23, !dbg !17459
  call void @llvm.dbg.value(metadata i32 undef, metadata !17112, metadata !DIExpression()) #23, !dbg !17464
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !17466, !srcloc !17118
  call void @llvm.dbg.value(metadata i32 %5, metadata !17441, metadata !DIExpression()), !dbg !17445
  call void @llvm.dbg.value(metadata i32 undef, metadata !17442, metadata !DIExpression()), !dbg !17446
  ret i32 %5, !dbg !17467
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !17468 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17470, metadata !DIExpression()), !dbg !17480
  call void @llvm.dbg.value(metadata i1 %1, metadata !17471, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17480
  call void @llvm.dbg.value(metadata i32 0, metadata !17472, metadata !DIExpression()), !dbg !17481
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17025, metadata !DIExpression()) #23, !dbg !17482
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17484, !srcloc !17040
  call void @llvm.dbg.value(metadata i32 undef, metadata !17037, metadata !DIExpression()) #23, !dbg !17486
  call void @llvm.dbg.value(metadata i32 undef, metadata !17038, metadata !DIExpression()) #23, !dbg !17486
  call void @llvm.dbg.value(metadata i32 undef, metadata !17031, metadata !DIExpression()) #23, !dbg !17482
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17487
  br i1 %4, label %6, label %5, !dbg !17488

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !17489
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.348, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17489
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !17489
  unreachable, !dbg !17489

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !17037, metadata !DIExpression()) #23, !dbg !17486
  call void @llvm.dbg.value(metadata i32 undef, metadata !17031, metadata !DIExpression()) #23, !dbg !17482
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17490
  call void @llvm.dbg.value(metadata i32 undef, metadata !17474, metadata !DIExpression()), !dbg !17481
  call void @llvm.dbg.value(metadata i32 undef, metadata !17472, metadata !DIExpression()), !dbg !17481
  %7 = tail call fastcc i32 @next_timeout() #24, !dbg !17491
  call void @llvm.dbg.value(metadata i32 %7, metadata !17475, metadata !DIExpression()), !dbg !17492
  call void @llvm.dbg.value(metadata i1 undef, metadata !17478, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17492
  %8 = icmp slt i32 %7, 2, !dbg !17493
  call void @llvm.dbg.value(metadata i1 %8, metadata !17479, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17492
  %9 = icmp slt i32 %7, %0
  %10 = or i1 %8, %9, !dbg !17494
  call void @llvm.dbg.value(metadata i1 %9, metadata !17478, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17492
  br i1 %10, label %14, label %11, !dbg !17494

11:                                               ; preds = %6
  %12 = icmp sgt i32 %7, %0, !dbg !17496
  %13 = select i1 %12, i32 %0, i32 %7, !dbg !17496
  tail call void @sys_clock_set_timeout(i32 noundef %13, i1 noundef zeroext %1) #25, !dbg !17498
  br label %14, !dbg !17499

14:                                               ; preds = %11, %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !17098, metadata !DIExpression()) #23, !dbg !17500
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17103, metadata !DIExpression()) #23, !dbg !17500
  %15 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17502
  br i1 %15, label %17, label %16, !dbg !17503

16:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !17504
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17504
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !17504
  unreachable, !dbg !17504

17:                                               ; preds = %14
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !17484
  call void @llvm.dbg.value(metadata i32 %18, metadata !17037, metadata !DIExpression()) #23, !dbg !17486
  call void @llvm.dbg.value(metadata i32 %18, metadata !17031, metadata !DIExpression()) #23, !dbg !17482
  call void @llvm.dbg.value(metadata i32 %18, metadata !17474, metadata !DIExpression()), !dbg !17481
  call void @llvm.dbg.value(metadata i32 undef, metadata !17098, metadata !DIExpression()) #23, !dbg !17500
  call void @llvm.dbg.value(metadata i32 undef, metadata !17112, metadata !DIExpression()) #23, !dbg !17505
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !17507, !srcloc !17118
  call void @llvm.dbg.value(metadata i32 1, metadata !17472, metadata !DIExpression()), !dbg !17481
  call void @llvm.dbg.value(metadata i32 undef, metadata !17472, metadata !DIExpression()), !dbg !17481
  ret void, !dbg !17508
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !17509 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17513, metadata !DIExpression()), !dbg !17518
  tail call void @z_time_slice(i32 noundef %0) #25, !dbg !17519
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17025, metadata !DIExpression()) #23, !dbg !17520
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17522, !srcloc !17040
  call void @llvm.dbg.value(metadata i32 undef, metadata !17037, metadata !DIExpression()) #23, !dbg !17524
  call void @llvm.dbg.value(metadata i32 undef, metadata !17038, metadata !DIExpression()) #23, !dbg !17524
  call void @llvm.dbg.value(metadata i32 undef, metadata !17031, metadata !DIExpression()) #23, !dbg !17520
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17525
  br i1 %3, label %5, label %4, !dbg !17526

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !17527
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.348, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17527
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !17527
  unreachable, !dbg !17527

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !17037, metadata !DIExpression()) #23, !dbg !17524
  call void @llvm.dbg.value(metadata i32 undef, metadata !17031, metadata !DIExpression()) #23, !dbg !17520
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17528
  call void @llvm.dbg.value(metadata i32 undef, metadata !17514, metadata !DIExpression()), !dbg !17518
  store i32 %0, i32* @announce_remaining, align 4, !dbg !17518
  call void @llvm.dbg.value(metadata i32 undef, metadata !17514, metadata !DIExpression()), !dbg !17518
  %6 = tail call fastcc %struct._timeout* @first() #24, !dbg !17529
  %7 = icmp eq %struct._timeout* %6, null, !dbg !17530
  br i1 %7, label %37, label %8, !dbg !17531

8:                                                ; preds = %5, %30
  %9 = phi %struct._timeout* [ %33, %30 ], [ %6, %5 ]
  %10 = phi { i32, i32 } [ %27, %30 ], [ %2, %5 ]
  %11 = phi i32 [ %32, %30 ], [ %0, %5 ]
  %12 = extractvalue { i32, i32 } %10, 0, !dbg !17518
  %13 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 2, !dbg !17532
  %14 = load i64, i64* %13, align 8, !dbg !17532
  %15 = sext i32 %11 to i64, !dbg !17533
  %16 = icmp sgt i64 %14, %15, !dbg !17534
  br i1 %16, label %35, label %17, !dbg !17535

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct._timeout* %9, metadata !17515, metadata !DIExpression()), !dbg !17536
  %18 = trunc i64 %14 to i32, !dbg !17537
  call void @llvm.dbg.value(metadata i32 %18, metadata !17517, metadata !DIExpression()), !dbg !17536
  %19 = sext i32 %18 to i64, !dbg !17538
  %20 = load i64, i64* @curr_tick, align 8, !dbg !17539
  %21 = add i64 %20, %19, !dbg !17539
  store i64 %21, i64* @curr_tick, align 8, !dbg !17539
  store i64 0, i64* %13, align 8, !dbg !17540
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %9) #24, !dbg !17541
  call void @llvm.dbg.value(metadata i32 undef, metadata !17098, metadata !DIExpression()) #23, !dbg !17542
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17103, metadata !DIExpression()) #23, !dbg !17542
  %22 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17544
  br i1 %22, label %24, label %23, !dbg !17545

23:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !17546
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17546
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !17546
  unreachable, !dbg !17546

24:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %12, metadata !17098, metadata !DIExpression()) #23, !dbg !17542
  call void @llvm.dbg.value(metadata i32 %12, metadata !17112, metadata !DIExpression()) #23, !dbg !17547
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !17549, !srcloc !17118
  %25 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 1, !dbg !17550
  %26 = load void (%struct._timeout*)*, void (%struct._timeout*)** %25, align 8, !dbg !17550
  tail call void %26(%struct._timeout* noundef nonnull %9) #25, !dbg !17551
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17025, metadata !DIExpression()) #23, !dbg !17552
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17554, !srcloc !17040
  call void @llvm.dbg.value(metadata i32 undef, metadata !17037, metadata !DIExpression()) #23, !dbg !17556
  call void @llvm.dbg.value(metadata i32 undef, metadata !17038, metadata !DIExpression()) #23, !dbg !17556
  call void @llvm.dbg.value(metadata i32 undef, metadata !17031, metadata !DIExpression()) #23, !dbg !17552
  %28 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17557
  br i1 %28, label %30, label %29, !dbg !17558

29:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !17559
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.348, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17559
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !17559
  unreachable, !dbg !17559

30:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !17037, metadata !DIExpression()) #23, !dbg !17556
  call void @llvm.dbg.value(metadata i32 undef, metadata !17031, metadata !DIExpression()) #23, !dbg !17552
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17560
  call void @llvm.dbg.value(metadata i32 undef, metadata !17514, metadata !DIExpression()), !dbg !17518
  %31 = load i32, i32* @announce_remaining, align 4, !dbg !17561
  %32 = sub nsw i32 %31, %18, !dbg !17561
  store i32 %32, i32* @announce_remaining, align 4, !dbg !17518
  call void @llvm.dbg.value(metadata i32 undef, metadata !17514, metadata !DIExpression()), !dbg !17518
  %33 = tail call fastcc %struct._timeout* @first() #24, !dbg !17529
  %34 = icmp eq %struct._timeout* %33, null, !dbg !17530
  br i1 %34, label %37, label %8, !dbg !17531, !llvm.loop !17562

35:                                               ; preds = %8
  %36 = sub nsw i64 %14, %15, !dbg !17564
  store i64 %36, i64* %13, align 8, !dbg !17564
  br label %41, !dbg !17567

37:                                               ; preds = %30, %5
  %38 = phi { i32, i32 } [ %2, %5 ], [ %27, %30 ]
  %39 = phi i32 [ %0, %5 ], [ %32, %30 ], !dbg !17518
  %40 = sext i32 %39 to i64, !dbg !17568
  br label %41, !dbg !17568

41:                                               ; preds = %37, %35
  %42 = phi i64 [ %40, %37 ], [ %15, %35 ], !dbg !17568
  %43 = phi { i32, i32 } [ %38, %37 ], [ %10, %35 ]
  %44 = load i64, i64* @curr_tick, align 8, !dbg !17569
  %45 = add i64 %44, %42, !dbg !17569
  store i64 %45, i64* @curr_tick, align 8, !dbg !17569
  store i32 0, i32* @announce_remaining, align 4, !dbg !17570
  %46 = tail call fastcc i32 @next_timeout() #24, !dbg !17571
  tail call void @sys_clock_set_timeout(i32 noundef %46, i1 noundef zeroext false) #25, !dbg !17572
  call void @llvm.dbg.value(metadata i32 undef, metadata !17098, metadata !DIExpression()) #23, !dbg !17573
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17103, metadata !DIExpression()) #23, !dbg !17573
  %47 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17575
  br i1 %47, label %49, label %48, !dbg !17576

48:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !17577
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17577
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !17577
  unreachable, !dbg !17577

49:                                               ; preds = %41
  %50 = extractvalue { i32, i32 } %43, 0, !dbg !17518
  call void @llvm.dbg.value(metadata i32 %50, metadata !17098, metadata !DIExpression()) #23, !dbg !17573
  call void @llvm.dbg.value(metadata i32 %50, metadata !17112, metadata !DIExpression()) #23, !dbg !17578
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %50) #23, !dbg !17580, !srcloc !17118
  ret void, !dbg !17581
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !17582 {
  call void @llvm.dbg.value(metadata i64 0, metadata !17586, metadata !DIExpression()), !dbg !17590
  call void @llvm.dbg.value(metadata i32 0, metadata !17587, metadata !DIExpression()), !dbg !17591
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17025, metadata !DIExpression()) #23, !dbg !17592
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17594, !srcloc !17040
  call void @llvm.dbg.value(metadata i32 undef, metadata !17037, metadata !DIExpression()) #23, !dbg !17596
  call void @llvm.dbg.value(metadata i32 undef, metadata !17038, metadata !DIExpression()) #23, !dbg !17596
  call void @llvm.dbg.value(metadata i32 undef, metadata !17031, metadata !DIExpression()) #23, !dbg !17592
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17597
  br i1 %2, label %4, label %3, !dbg !17598

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !17599
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.348, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17599
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !17599
  unreachable, !dbg !17599

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !17037, metadata !DIExpression()) #23, !dbg !17596
  call void @llvm.dbg.value(metadata i32 undef, metadata !17031, metadata !DIExpression()) #23, !dbg !17592
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17600
  call void @llvm.dbg.value(metadata i32 undef, metadata !17589, metadata !DIExpression()), !dbg !17591
  call void @llvm.dbg.value(metadata i64 0, metadata !17586, metadata !DIExpression()), !dbg !17590
  call void @llvm.dbg.value(metadata i32 undef, metadata !17587, metadata !DIExpression()), !dbg !17591
  %5 = load i64, i64* @curr_tick, align 8, !dbg !17601
  %6 = tail call fastcc i32 @elapsed.349() #24, !dbg !17604
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !17586, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !17590
  call void @llvm.dbg.value(metadata i32 undef, metadata !17098, metadata !DIExpression()) #23, !dbg !17605
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17103, metadata !DIExpression()) #23, !dbg !17605
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17607
  br i1 %7, label %9, label %8, !dbg !17608

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !17609
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17609
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !17609
  unreachable, !dbg !17609

9:                                                ; preds = %4
  %10 = extractvalue { i32, i32 } %1, 0, !dbg !17594
  call void @llvm.dbg.value(metadata i32 %10, metadata !17037, metadata !DIExpression()) #23, !dbg !17596
  call void @llvm.dbg.value(metadata i32 %10, metadata !17031, metadata !DIExpression()) #23, !dbg !17592
  call void @llvm.dbg.value(metadata i32 %10, metadata !17589, metadata !DIExpression()), !dbg !17591
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !17586, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !17590
  call void @llvm.dbg.value(metadata !DIArgList(i32 %6, i64 %5), metadata !17586, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17590
  call void @llvm.dbg.value(metadata i32 undef, metadata !17098, metadata !DIExpression()) #23, !dbg !17605
  call void @llvm.dbg.value(metadata i32 undef, metadata !17112, metadata !DIExpression()) #23, !dbg !17610
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !17612, !srcloc !17118
  call void @llvm.dbg.value(metadata i32 undef, metadata !17587, metadata !DIExpression()), !dbg !17591
  %11 = sext i32 %6 to i64, !dbg !17604
  %12 = add i64 %5, %11, !dbg !17613
  ret i64 %12, !dbg !17614
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !17615 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !17616
  %2 = trunc i64 %1 to i32, !dbg !17617
  ret i32 %2, !dbg !17618
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !17619 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !17620
  ret i64 %1, !dbg !17621
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !17622 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17624, metadata !DIExpression()), !dbg !17631
  %2 = icmp eq i32 %0, 0, !dbg !17632
  br i1 %2, label %10, label %3, !dbg !17634

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32.369() #24, !dbg !17635
  call void @llvm.dbg.value(metadata i32 %4, metadata !17625, metadata !DIExpression()), !dbg !17631
  %5 = mul i32 %0, 168, !dbg !17636
  call void @llvm.dbg.value(metadata i32 %5, metadata !17626, metadata !DIExpression()), !dbg !17631
  br label %6, !dbg !17637

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32.369() #24, !dbg !17638
  call void @llvm.dbg.value(metadata i32 %7, metadata !17627, metadata !DIExpression()), !dbg !17639
  %8 = sub i32 %7, %4, !dbg !17640
  %9 = icmp ult i32 %8, %5, !dbg !17642
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !17643
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32.369() unnamed_addr #1 !dbg !17644 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32.370() #24, !dbg !17645
  ret i32 %1, !dbg !17646
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32.370() unnamed_addr #1 !dbg !17647 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !17648
  ret i32 %1, !dbg !17649
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !17650 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17654, metadata !DIExpression()), !dbg !17656
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !17657

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #24, !dbg !17658
  br label %14, !dbg !17662

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !17655, metadata !DIExpression()), !dbg !17656
  %6 = icmp slt i64 %2, -1, !dbg !17663
  br i1 %6, label %7, label %9, !dbg !17666

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !17667
  br label %14, !dbg !17668

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #24, !dbg !17670
  %11 = icmp ugt i64 %2, 1, !dbg !17671
  %12 = select i1 %11, i64 %2, i64 1, !dbg !17671
  %13 = add nsw i64 %10, %12, !dbg !17672
  br label %14, !dbg !17673

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !17674
  ret i64 %15, !dbg !17675
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !17676 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.373, i32 0, i32 0)) #25, !dbg !17678
  ret void, !dbg !17679
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nofree nosync nounwind willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { nofree nosync nounwind willreturn }
attributes #6 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { argmemonly nofree nounwind willreturn writeonly }
attributes #13 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin optsize "no-builtins" }
attributes #25 = { nobuiltin nounwind optsize "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #27 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #28 = { nounwind readnone }
attributes #29 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!935, !2, !2642, !27, !177, !209, !2644, !2646, !2680, !2682, !218, !268, !2684, !2687, !2698, !2744, !2746, !2774, !2802, !2845, !2917, !2962, !297, !458, !2990, !494, !504, !529, !696, !731, !981, !2995, !1118, !1184, !1523, !1827, !3034, !1942, !2032, !3036, !3122, !3187, !2084, !3190, !2091, !2465, !3208, !2485, !3210, !2603, !3213}
!llvm.ident = !{!3215, !3215, !3215, !3215, !3215, !3215, !3215, !3215, !3215, !3215, !3215, !3215, !3215, !3215, !3215, !3215, !3215, !3215, !3215, !3215, !3215, !3215, !3215, !3215, !3215, !3215, !3215, !3215, !3215, !3215, !3215, !3215, !3215, !3215, !3215, !3215, !3215, !3215, !3215, !3215, !3215, !3215, !3215, !3215, !3215, !3215, !3215, !3215, !3215, !3215, !3215}
!llvm.module.flags = !{!3216, !3217, !3218, !3219, !3220, !3221, !3222, !3223, !3224}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 103, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 5824, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 91)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 2912, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "z_ztest_suite_node_stats_test_pytest", scope: !27, file: !111, line: 8, type: !149, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, globals: !108, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/testsuite/pytest/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_ZTEST_SUITE_NODE", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_ZTEST_SUITE_STATS", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_ZTEST_UNIT_TEST", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_ZTEST_TEST_RULE", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 66)
!101 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 67)
!102 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 68)
!103 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 69)
!104 = !DIEnumerator(name: "K_OBJ_LAST", value: 70)
!105 = !{!106, !107}
!106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!107 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!108 = !{!109, !155, !25, !173}
!109 = !DIGlobalVariableExpression(var: !110, expr: !DIExpression())
!110 = distinct !DIGlobalVariable(name: "z_ztest_test_node_test_pytest", scope: !27, file: !111, line: 8, type: !112, isLocal: true, isDefinition: true, align: 32)
!111 = !DIFile(filename: "zephyr/samples/subsys/testsuite/pytest/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!112 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !113)
!113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_node", file: !114, line: 177, size: 224, elements: !115)
!114 = !DIFile(filename: "zephyr/subsys/testsuite/ztest/include/zephyr/ztest_test_new.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!115 = !{!116, !121, !127, !133, !136, !139, !146}
!116 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !113, file: !114, line: 179, baseType: !117, size: 32)
!117 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !118)
!118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !119, size: 32)
!119 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !120)
!120 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!121 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !113, file: !114, line: 182, baseType: !122, size: 32, offset: 32)
!122 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !123)
!123 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_setup_t", file: !114, line: 141, baseType: !124)
!124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !125, size: 32)
!125 = !DISubroutineType(types: !126)
!126 = !{!106}
!127 = !DIDerivedType(tag: DW_TAG_member, name: "before", scope: !113, file: !114, line: 185, baseType: !128, size: 32, offset: 64)
!128 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !129)
!129 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_before_t", file: !114, line: 148, baseType: !130)
!130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !131, size: 32)
!131 = !DISubroutineType(types: !132)
!132 = !{null, !106}
!133 = !DIDerivedType(tag: DW_TAG_member, name: "after", scope: !113, file: !114, line: 188, baseType: !134, size: 32, offset: 96)
!134 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !135)
!135 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_after_t", file: !114, line: 155, baseType: !130)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "teardown", scope: !113, file: !114, line: 191, baseType: !137, size: 32, offset: 128)
!137 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !138)
!138 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_teardown_t", file: !114, line: 162, baseType: !130)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "predicate", scope: !113, file: !114, line: 194, baseType: !140, size: 32, offset: 160)
!140 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !141)
!141 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_predicate_t", file: !114, line: 171, baseType: !142)
!142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !143, size: 32)
!143 = !DISubroutineType(types: !144)
!144 = !{!145, !13}
!145 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !113, file: !114, line: 197, baseType: !147, size: 32, offset: 192)
!147 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !148)
!148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !149, size: 32)
!149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_stats", file: !114, line: 114, size: 96, elements: !150)
!150 = !{!151, !153, !154}
!151 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !149, file: !114, line: 116, baseType: !152, size: 32)
!152 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !149, file: !114, line: 118, baseType: !152, size: 32, offset: 32)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !149, file: !114, line: 120, baseType: !152, size: 32, offset: 64)
!155 = !DIGlobalVariableExpression(var: !156, expr: !DIExpression())
!156 = distinct !DIGlobalVariable(name: "z_ztest_unit_test__test_pytest__test_pytest", scope: !27, file: !111, line: 10, type: !157, isLocal: true, isDefinition: true, align: 32)
!157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_unit_test", file: !114, line: 97, size: 160, elements: !158)
!158 = !{!159, !160, !161, !162, !163}
!159 = !DIDerivedType(tag: DW_TAG_member, name: "test_suite_name", scope: !157, file: !114, line: 98, baseType: !118, size: 32)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !157, file: !114, line: 99, baseType: !118, size: 32, offset: 32)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !157, file: !114, line: 100, baseType: !130, size: 32, offset: 64)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "thread_options", scope: !157, file: !114, line: 101, baseType: !152, size: 32, offset: 96)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !157, file: !114, line: 104, baseType: !164, size: 32, offset: 128)
!164 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !165)
!165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !166, size: 32)
!166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_unit_test_stats", file: !114, line: 123, size: 160, elements: !167)
!167 = !{!168, !169, !170, !171, !172}
!168 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !166, file: !114, line: 125, baseType: !152, size: 32)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !166, file: !114, line: 127, baseType: !152, size: 32, offset: 32)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !166, file: !114, line: 129, baseType: !152, size: 32, offset: 64)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "pass_count", scope: !166, file: !114, line: 131, baseType: !152, size: 32, offset: 96)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "duration_worst_ms", scope: !166, file: !114, line: 133, baseType: !152, size: 32, offset: 128)
!173 = !DIGlobalVariableExpression(var: !174, expr: !DIExpression())
!174 = distinct !DIGlobalVariable(name: "z_ztest_unit_test_stats_test_pytest_test_pytest", scope: !27, file: !111, line: 10, type: !166, isLocal: false, isDefinition: true)
!175 = !DIGlobalVariableExpression(var: !176, expr: !DIExpression())
!176 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !177, file: !200, line: 18, type: !201, isLocal: false, isDefinition: true)
!177 = distinct !DICompileUnit(language: DW_LANG_C99, file: !178, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !179, globals: !199, splitDebugInlining: false, nameTableKind: None)
!178 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest")
!179 = !{!22, !106, !24, !180, !182, !184, !185, !107, !187, !188, !190, !192, !193, !194, !197, !118}
!180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 32)
!181 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 32)
!183 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 32)
!185 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !186, line: 214, baseType: !32)
!186 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !189, size: 32)
!189 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 32)
!191 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !193, size: 32)
!193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 32)
!194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !195, size: 32)
!195 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !196)
!196 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!197 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !198)
!198 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!199 = !{!175}
!200 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!201 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !202)
!202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !203, line: 16, size: 64, elements: !204)
!203 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!204 = !{!205, !206}
!205 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !202, file: !203, line: 17, baseType: !118, size: 32)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !202, file: !203, line: 18, baseType: !195, size: 8, offset: 32)
!207 = !DIGlobalVariableExpression(var: !208, expr: !DIExpression())
!208 = distinct !DIGlobalVariable(name: "_char_out", scope: !209, file: !212, line: 54, type: !213, isLocal: false, isDefinition: true)
!209 = distinct !DICompileUnit(language: DW_LANG_C99, file: !210, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, globals: !211, splitDebugInlining: false, nameTableKind: None)
!210 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest")
!211 = !{!207}
!212 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !214, size: 32)
!214 = !DISubroutineType(types: !215)
!215 = !{!107, !107}
!216 = !DIGlobalVariableExpression(var: !217, expr: !DIExpression())
!217 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !218, file: !235, line: 56, type: !236, isLocal: true, isDefinition: true, align: 32)
!218 = distinct !DICompileUnit(language: DW_LANG_C99, file: !219, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !220, globals: !234, splitDebugInlining: false, nameTableKind: None)
!219 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest")
!220 = !{!221}
!221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 32)
!222 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !223, line: 501, baseType: !224)
!223 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f427xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!224 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 492, size: 224, elements: !225)
!225 = !{!226, !228, !229, !230, !231, !232, !233}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !224, file: !223, line: 494, baseType: !227, size: 32)
!227 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !152)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !224, file: !223, line: 495, baseType: !227, size: 32, offset: 32)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !224, file: !223, line: 496, baseType: !227, size: 32, offset: 64)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !224, file: !223, line: 497, baseType: !227, size: 32, offset: 96)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !224, file: !223, line: 498, baseType: !227, size: 32, offset: 128)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !224, file: !223, line: 499, baseType: !227, size: 32, offset: 160)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !224, file: !223, line: 500, baseType: !227, size: 32, offset: 192)
!234 = !{!216}
!235 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!236 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !237)
!237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !239)
!238 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!239 = !{!240, !265}
!240 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !237, file: !238, line: 60, baseType: !241, size: 32)
!241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !242, size: 32)
!242 = !DISubroutineType(types: !243)
!243 = !{!107, !244}
!244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !245, size: 32)
!245 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !246)
!246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !248)
!247 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!248 = !{!249, !250, !251, !252, !258, !259}
!249 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !246, file: !247, line: 380, baseType: !118, size: 32)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !246, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !246, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !246, file: !247, line: 386, baseType: !253, size: 32, offset: 96)
!253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !254, size: 32)
!254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !255)
!255 = !{!256, !257}
!256 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !254, file: !247, line: 359, baseType: !195, size: 8)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !254, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !246, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !246, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !261, size: 32)
!261 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !262)
!262 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !247, line: 43, baseType: !263)
!263 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !264)
!264 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !237, file: !238, line: 65, baseType: !244, size: 32, offset: 32)
!266 = !DIGlobalVariableExpression(var: !267, expr: !DIExpression())
!267 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !268, file: !271, line: 71, type: !272, isLocal: true, isDefinition: true, align: 32)
!268 = distinct !DICompileUnit(language: DW_LANG_C99, file: !269, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !270, splitDebugInlining: false, nameTableKind: None)
!269 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest")
!270 = !{!266}
!271 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!272 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !273)
!273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !274)
!274 = !{!275, !294}
!275 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !273, file: !238, line: 60, baseType: !276, size: 32)
!276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 32)
!277 = !DISubroutineType(types: !278)
!278 = !{!107, !279}
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 32)
!280 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !281)
!281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !282)
!282 = !{!283, !284, !285, !286, !292, !293}
!283 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !281, file: !247, line: 380, baseType: !118, size: 32)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !281, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !281, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !281, file: !247, line: 386, baseType: !287, size: 32, offset: 96)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 32)
!288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !289)
!289 = !{!290, !291}
!290 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !288, file: !247, line: 359, baseType: !195, size: 8)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !288, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !281, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !281, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !273, file: !238, line: 65, baseType: !279, size: 32, offset: 32)
!295 = !DIGlobalVariableExpression(var: !296, expr: !DIExpression())
!296 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !297, file: !304, line: 17, type: !451, isLocal: false, isDefinition: true)
!297 = distinct !DICompileUnit(language: DW_LANG_C99, file: !298, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, globals: !300, splitDebugInlining: false, nameTableKind: None)
!298 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest")
!299 = !{!185, !107, !152, !106}
!300 = !{!295, !301, !447}
!301 = !DIGlobalVariableExpression(var: !302, expr: !DIExpression())
!302 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !303, file: !304, line: 198, type: !433, isLocal: true, isDefinition: true)
!303 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !304, file: !304, line: 175, type: !305, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !428)
!304 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!305 = !DISubroutineType(types: !306)
!306 = !{null, !307}
!307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !308, size: 32)
!308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !310)
!309 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!310 = !{!311, !377, !390, !391, !392, !396, !397, !403, !423}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !308, file: !309, line: 247, baseType: !312, size: 384)
!312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !313)
!313 = !{!314, !342, !350, !351, !352, !363, !364, !365}
!314 = !DIDerivedType(tag: DW_TAG_member, scope: !312, file: !309, line: 60, baseType: !315, size: 64)
!315 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !312, file: !309, line: 60, size: 64, elements: !316)
!316 = !{!317, !333}
!317 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !315, file: !309, line: 61, baseType: !318, size: 64)
!318 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !320)
!319 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !321)
!321 = !{!322, !328}
!322 = !DIDerivedType(tag: DW_TAG_member, scope: !320, file: !319, line: 38, baseType: !323, size: 32)
!323 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !320, file: !319, line: 38, size: 32, elements: !324)
!324 = !{!325, !327}
!325 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !323, file: !319, line: 39, baseType: !326, size: 32)
!326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 32)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !323, file: !319, line: 40, baseType: !326, size: 32)
!328 = !DIDerivedType(tag: DW_TAG_member, scope: !320, file: !319, line: 42, baseType: !329, size: 32, offset: 32)
!329 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !320, file: !319, line: 42, size: 32, elements: !330)
!330 = !{!331, !332}
!331 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !329, file: !319, line: 43, baseType: !326, size: 32)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !329, file: !319, line: 44, baseType: !326, size: 32)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !315, file: !309, line: 62, baseType: !334, size: 64)
!334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !336)
!335 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!336 = !{!337}
!337 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !334, file: !335, line: 50, baseType: !338, size: 64)
!338 = !DICompositeType(tag: DW_TAG_array_type, baseType: !339, size: 64, elements: !340)
!339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !334, size: 32)
!340 = !{!341}
!341 = !DISubrange(count: 2)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !312, file: !309, line: 68, baseType: !343, size: 32, offset: 64)
!343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 32)
!344 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !346)
!345 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!346 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !347)
!347 = !{!348}
!348 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !346, file: !345, line: 232, baseType: !349, size: 64)
!349 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !320)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !312, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !312, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!352 = !DIDerivedType(tag: DW_TAG_member, scope: !312, file: !309, line: 90, baseType: !353, size: 16, offset: 112)
!353 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !312, file: !309, line: 90, size: 16, elements: !354)
!354 = !{!355, !362}
!355 = !DIDerivedType(tag: DW_TAG_member, scope: !353, file: !309, line: 91, baseType: !356, size: 16)
!356 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !353, file: !309, line: 91, size: 16, elements: !357)
!357 = !{!358, !361}
!358 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !356, file: !309, line: 96, baseType: !359, size: 8)
!359 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !360)
!360 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !356, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !353, file: !309, line: 100, baseType: !197, size: 16)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !312, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !312, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !312, file: !309, line: 131, baseType: !366, size: 192, offset: 192)
!366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !367)
!367 = !{!368, !369, !375}
!368 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !366, file: !345, line: 245, baseType: !318, size: 64)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !366, file: !345, line: 246, baseType: !370, size: 32, offset: 64)
!370 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !371)
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !372, size: 32)
!372 = !DISubroutineType(types: !373)
!373 = !{null, !374}
!374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !366, size: 32)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !366, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!376 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !191)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !308, file: !309, line: 250, baseType: !378, size: 288, offset: 384)
!378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !380)
!379 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!380 = !{!381, !382, !383, !384, !385, !386, !387, !388, !389}
!381 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !378, file: !379, line: 26, baseType: !152, size: 32)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !378, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !378, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !378, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !378, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !378, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !378, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !378, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !378, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !308, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !308, file: !309, line: 256, baseType: !344, size: 64, offset: 704)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !308, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!393 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 256, elements: !394)
!394 = !{!395}
!395 = !DISubrange(count: 32)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !308, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !308, file: !309, line: 300, baseType: !398, size: 96, offset: 1056)
!398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !399)
!399 = !{!400, !401, !402}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !398, file: !309, line: 153, baseType: !22, size: 32)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !398, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !398, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !308, file: !309, line: 325, baseType: !404, size: 32, offset: 1152)
!404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !405, size: 32)
!405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !407)
!406 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!407 = !{!408, !417, !418}
!408 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !405, file: !406, line: 5074, baseType: !409, size: 96)
!409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !411)
!410 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!411 = !{!412, !415, !416}
!412 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !409, file: !410, line: 57, baseType: !413, size: 32)
!413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !414, size: 32)
!414 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !410, line: 57, flags: DIFlagFwdDecl)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !409, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !409, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !405, file: !406, line: 5075, baseType: !344, size: 64, offset: 96)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !405, file: !406, line: 5076, baseType: !419, size: 32, offset: 160)
!419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !421)
!420 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!421 = !{!422}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !419, file: !420, line: 52, baseType: !22, size: 32)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !308, file: !309, line: 343, baseType: !424, size: 64, offset: 1184)
!424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !425)
!425 = !{!426, !427}
!426 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !424, file: !379, line: 63, baseType: !152, size: 32)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !424, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!428 = !{!429, !430, !431, !432}
!429 = !DILocalVariable(name: "thread", arg: 1, scope: !303, file: !304, line: 175, type: !307)
!430 = !DILocalVariable(name: "region_num", scope: !303, file: !304, line: 200, type: !195)
!431 = !DILocalVariable(name: "guard_start", scope: !303, file: !304, line: 265, type: !22)
!432 = !DILocalVariable(name: "guard_size", scope: !303, file: !304, line: 266, type: !185)
!433 = !DICompositeType(tag: DW_TAG_array_type, baseType: !434, size: 96, elements: !445)
!434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !435, line: 52, size: 96, elements: !436)
!435 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!436 = !{!437, !438, !439}
!437 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !434, file: !435, line: 53, baseType: !22, size: 32)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !434, file: !435, line: 54, baseType: !185, size: 32, offset: 32)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !434, file: !435, line: 55, baseType: !440, size: 32, offset: 64)
!440 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !441, line: 151, baseType: !442)
!441 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!442 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !441, line: 149, size: 32, elements: !443)
!443 = !{!444}
!444 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !442, file: !441, line: 150, baseType: !152, size: 32)
!445 = !{!446}
!446 = !DISubrange(count: 1)
!447 = !DIGlobalVariableExpression(var: !448, expr: !DIExpression())
!448 = distinct !DIGlobalVariable(name: "static_regions", scope: !297, file: !304, line: 62, type: !449, isLocal: true, isDefinition: true)
!449 = !DICompositeType(tag: DW_TAG_array_type, baseType: !450, size: 96, elements: !445)
!450 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !434)
!451 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !452)
!452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !203, line: 16, size: 64, elements: !453)
!453 = !{!454, !455}
!454 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !452, file: !203, line: 17, baseType: !118, size: 32)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !452, file: !203, line: 18, baseType: !195, size: 8, offset: 32)
!456 = !DIGlobalVariableExpression(var: !457, expr: !DIExpression())
!457 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !458, file: !491, line: 39, type: !195, isLocal: true, isDefinition: true)
!458 = distinct !DICompileUnit(language: DW_LANG_C99, file: !459, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !460, globals: !490, splitDebugInlining: false, nameTableKind: None)
!459 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest")
!460 = !{!461, !106, !107, !478, !195}
!461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !462, size: 32)
!462 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !463, line: 1226, baseType: !464)
!463 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!464 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 1213, size: 352, elements: !465)
!465 = !{!466, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477}
!466 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !464, file: !463, line: 1215, baseType: !467, size: 32)
!467 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !227)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !464, file: !463, line: 1216, baseType: !227, size: 32, offset: 32)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !464, file: !463, line: 1217, baseType: !227, size: 32, offset: 64)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !464, file: !463, line: 1218, baseType: !227, size: 32, offset: 96)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !464, file: !463, line: 1219, baseType: !227, size: 32, offset: 128)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !464, file: !463, line: 1220, baseType: !227, size: 32, offset: 160)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !464, file: !463, line: 1221, baseType: !227, size: 32, offset: 192)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !464, file: !463, line: 1222, baseType: !227, size: 32, offset: 224)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !464, file: !463, line: 1223, baseType: !227, size: 32, offset: 256)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !464, file: !463, line: 1224, baseType: !227, size: 32, offset: 288)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !464, file: !463, line: 1225, baseType: !227, size: 32, offset: 320)
!478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !479, size: 32)
!479 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !480)
!480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !481, line: 27, size: 96, elements: !482)
!481 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!482 = !{!483, !484, !485}
!483 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !480, file: !481, line: 29, baseType: !152, size: 32)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !480, file: !481, line: 31, baseType: !118, size: 32, offset: 32)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !480, file: !481, line: 37, baseType: !486, size: 32, offset: 64)
!486 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !441, line: 146, baseType: !487)
!487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !441, line: 141, size: 32, elements: !488)
!488 = !{!489}
!489 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !487, file: !441, line: 143, baseType: !152, size: 32)
!490 = !{!456}
!491 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!492 = !DIGlobalVariableExpression(var: !493, expr: !DIExpression())
!493 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !494, file: !501, line: 21, type: !213, isLocal: true, isDefinition: true)
!494 = distinct !DICompileUnit(language: DW_LANG_C99, file: !495, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !496, globals: !500, splitDebugInlining: false, nameTableKind: None)
!495 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest")
!496 = !{!497, !107, !106}
!497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !498, size: 32)
!498 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !499, line: 22, baseType: !107)
!499 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!500 = !{!492}
!501 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!502 = !DIGlobalVariableExpression(var: !503, expr: !DIExpression())
!503 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !504, file: !509, line: 13, type: !526, isLocal: true, isDefinition: true)
!504 = distinct !DICompileUnit(language: DW_LANG_C99, file: !505, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !506, splitDebugInlining: false, nameTableKind: None)
!505 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest")
!506 = !{!507, !502}
!507 = !DIGlobalVariableExpression(var: !508, expr: !DIExpression())
!508 = distinct !DIGlobalVariable(name: "mpu_config", scope: !504, file: !509, line: 37, type: !510, isLocal: false, isDefinition: true)
!509 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!510 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !511)
!511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !481, line: 41, size: 64, elements: !512)
!512 = !{!513, !514}
!513 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !511, file: !481, line: 43, baseType: !152, size: 32)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !511, file: !481, line: 45, baseType: !515, size: 32, offset: 32)
!515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !516, size: 32)
!516 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !517)
!517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !481, line: 27, size: 96, elements: !518)
!518 = !{!519, !520, !521}
!519 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !517, file: !481, line: 29, baseType: !152, size: 32)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !517, file: !481, line: 31, baseType: !118, size: 32, offset: 32)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !517, file: !481, line: 37, baseType: !522, size: 32, offset: 64)
!522 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !441, line: 146, baseType: !523)
!523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !441, line: 141, size: 32, elements: !524)
!524 = !{!525}
!525 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !523, file: !441, line: 143, baseType: !152, size: 32)
!526 = !DICompositeType(tag: DW_TAG_array_type, baseType: !516, size: 192, elements: !340)
!527 = !DIGlobalVariableExpression(var: !528, expr: !DIExpression())
!528 = distinct !DIGlobalVariable(name: "phase", scope: !529, file: !533, line: 61, type: !532, isLocal: false, isDefinition: true)
!529 = distinct !DICompileUnit(language: DW_LANG_C99, file: !530, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !531, retainedTypes: !558, globals: !568, splitDebugInlining: false, nameTableKind: None)
!530 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/testsuite/ztest/src/ztest_new.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest")
!531 = !{!532, !541, !549, !30, !554}
!532 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ztest_phase", file: !533, line: 40, baseType: !32, size: 32, elements: !534)
!533 = !DIFile(filename: "zephyr/subsys/testsuite/ztest/src/ztest_new.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!534 = !{!535, !536, !537, !538, !539, !540}
!535 = !DIEnumerator(name: "TEST_PHASE_SETUP", value: 0)
!536 = !DIEnumerator(name: "TEST_PHASE_BEFORE", value: 1)
!537 = !DIEnumerator(name: "TEST_PHASE_TEST", value: 2)
!538 = !DIEnumerator(name: "TEST_PHASE_AFTER", value: 3)
!539 = !DIEnumerator(name: "TEST_PHASE_TEARDOWN", value: 4)
!540 = !DIEnumerator(name: "TEST_PHASE_FRAMEWORK", value: 5)
!541 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ztest_result", file: !533, line: 226, baseType: !32, size: 32, elements: !542)
!542 = !{!543, !544, !545, !546, !547, !548}
!543 = !DIEnumerator(name: "ZTEST_RESULT_PENDING", value: 0)
!544 = !DIEnumerator(name: "ZTEST_RESULT_PASS", value: 1)
!545 = !DIEnumerator(name: "ZTEST_RESULT_FAIL", value: 2)
!546 = !DIEnumerator(name: "ZTEST_RESULT_SKIP", value: 3)
!547 = !DIEnumerator(name: "ZTEST_RESULT_SUITE_SKIP", value: 4)
!548 = !DIEnumerator(name: "ZTEST_RESULT_SUITE_FAIL", value: 5)
!549 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ztest_status", file: !533, line: 52, baseType: !32, size: 32, elements: !550)
!550 = !{!551, !552, !553}
!551 = !DIEnumerator(name: "ZTEST_STATUS_OK", value: 0)
!552 = !DIEnumerator(name: "ZTEST_STATUS_HAS_FAILURE", value: 1)
!553 = !DIEnumerator(name: "ZTEST_STATUS_CRITICAL_ERROR", value: 2)
!554 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ztest_expected_result", file: !114, line: 36, baseType: !32, size: 32, elements: !555)
!555 = !{!556, !557}
!556 = !DIEnumerator(name: "ZTEST_EXPECTED_RESULT_FAIL", value: 0)
!557 = !DIEnumerator(name: "ZTEST_EXPECTED_RESULT_SKIP", value: 1)
!558 = !{!106, !107, !185, !559, !564, !152, !566}
!559 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !560, line: 46, baseType: !561)
!560 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !562, size: 32)
!562 = !DISubroutineType(types: !563)
!563 = !{null, !106, !106, !106}
!564 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !565, line: 46, baseType: !376)
!565 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!566 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !567)
!567 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!568 = !{!527, !569, !571, !573, !582, !584, !688, !691}
!569 = !DIGlobalVariableExpression(var: !570, expr: !DIExpression())
!570 = distinct !DIGlobalVariable(name: "test_result", scope: !529, file: !533, line: 234, type: !541, isLocal: true, isDefinition: true)
!571 = !DIGlobalVariableExpression(var: !572, expr: !DIExpression())
!572 = distinct !DIGlobalVariable(name: "current_test_failed_assumption", scope: !529, file: !533, line: 294, type: !145, isLocal: true, isDefinition: true)
!573 = !DIGlobalVariableExpression(var: !574, expr: !DIExpression())
!574 = distinct !DIGlobalVariable(name: "ztest_thread_stack", scope: !529, file: !533, line: 430, type: !575, isLocal: false, isDefinition: true, align: 512)
!575 = !DICompositeType(tag: DW_TAG_array_type, baseType: !576, size: 8704, elements: !580)
!576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !577, line: 47, size: 8, elements: !578)
!577 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!578 = !{!579}
!579 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !576, file: !577, line: 48, baseType: !120, size: 8)
!580 = !{!581}
!581 = !DISubrange(count: 1088)
!582 = !DIGlobalVariableExpression(var: !583, expr: !DIExpression())
!583 = distinct !DIGlobalVariable(name: "test_status", scope: !529, file: !533, line: 63, type: !549, isLocal: true, isDefinition: true)
!584 = !DIGlobalVariableExpression(var: !585, expr: !DIExpression())
!585 = distinct !DIGlobalVariable(name: "ztest_thread", scope: !529, file: !533, line: 17, type: !586, isLocal: true, isDefinition: true)
!586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !587)
!587 = !{!588, !646, !658, !659, !660, !661, !662, !668, !683}
!588 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !586, file: !309, line: 247, baseType: !589, size: 384)
!589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !590)
!590 = !{!591, !615, !622, !623, !624, !633, !634, !635}
!591 = !DIDerivedType(tag: DW_TAG_member, scope: !589, file: !309, line: 60, baseType: !592, size: 64)
!592 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !589, file: !309, line: 60, size: 64, elements: !593)
!593 = !{!594, !609}
!594 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !592, file: !309, line: 61, baseType: !595, size: 64)
!595 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !596)
!596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !597)
!597 = !{!598, !604}
!598 = !DIDerivedType(tag: DW_TAG_member, scope: !596, file: !319, line: 38, baseType: !599, size: 32)
!599 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !596, file: !319, line: 38, size: 32, elements: !600)
!600 = !{!601, !603}
!601 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !599, file: !319, line: 39, baseType: !602, size: 32)
!602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !596, size: 32)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !599, file: !319, line: 40, baseType: !602, size: 32)
!604 = !DIDerivedType(tag: DW_TAG_member, scope: !596, file: !319, line: 42, baseType: !605, size: 32, offset: 32)
!605 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !596, file: !319, line: 42, size: 32, elements: !606)
!606 = !{!607, !608}
!607 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !605, file: !319, line: 43, baseType: !602, size: 32)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !605, file: !319, line: 44, baseType: !602, size: 32)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !592, file: !309, line: 62, baseType: !610, size: 64)
!610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !611)
!611 = !{!612}
!612 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !610, file: !335, line: 50, baseType: !613, size: 64)
!613 = !DICompositeType(tag: DW_TAG_array_type, baseType: !614, size: 64, elements: !340)
!614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !610, size: 32)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !589, file: !309, line: 68, baseType: !616, size: 32, offset: 64)
!616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !617, size: 32)
!617 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !618)
!618 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !619)
!619 = !{!620}
!620 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !618, file: !345, line: 232, baseType: !621, size: 64)
!621 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !596)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !589, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !589, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!624 = !DIDerivedType(tag: DW_TAG_member, scope: !589, file: !309, line: 90, baseType: !625, size: 16, offset: 112)
!625 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !589, file: !309, line: 90, size: 16, elements: !626)
!626 = !{!627, !632}
!627 = !DIDerivedType(tag: DW_TAG_member, scope: !625, file: !309, line: 91, baseType: !628, size: 16)
!628 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !625, file: !309, line: 91, size: 16, elements: !629)
!629 = !{!630, !631}
!630 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !628, file: !309, line: 96, baseType: !359, size: 8)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !628, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !625, file: !309, line: 100, baseType: !197, size: 16)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !589, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !589, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !589, file: !309, line: 131, baseType: !636, size: 192, offset: 192)
!636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !637)
!637 = !{!638, !639, !645}
!638 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !636, file: !345, line: 245, baseType: !595, size: 64)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !636, file: !345, line: 246, baseType: !640, size: 32, offset: 64)
!640 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !641)
!641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !642, size: 32)
!642 = !DISubroutineType(types: !643)
!643 = !{null, !644}
!644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !636, size: 32)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !636, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !586, file: !309, line: 250, baseType: !647, size: 288, offset: 384)
!647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !648)
!648 = !{!649, !650, !651, !652, !653, !654, !655, !656, !657}
!649 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !647, file: !379, line: 26, baseType: !152, size: 32)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !647, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !647, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !647, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !647, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !647, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !647, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !647, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !647, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !586, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !586, file: !309, line: 256, baseType: !617, size: 64, offset: 704)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !586, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !586, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !586, file: !309, line: 300, baseType: !663, size: 96, offset: 1056)
!663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !664)
!664 = !{!665, !666, !667}
!665 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !663, file: !309, line: 153, baseType: !22, size: 32)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !663, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !663, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !586, file: !309, line: 325, baseType: !669, size: 32, offset: 1152)
!669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !670, size: 32)
!670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !671)
!671 = !{!672, !678, !679}
!672 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !670, file: !406, line: 5074, baseType: !673, size: 96)
!673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !674)
!674 = !{!675, !676, !677}
!675 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !673, file: !410, line: 57, baseType: !413, size: 32)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !673, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !673, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !670, file: !406, line: 5075, baseType: !617, size: 64, offset: 96)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !670, file: !406, line: 5076, baseType: !680, size: 32, offset: 160)
!680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !681)
!681 = !{!682}
!682 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !680, file: !420, line: 52, baseType: !22, size: 32)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !586, file: !309, line: 343, baseType: !684, size: 64, offset: 1184)
!684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !685)
!685 = !{!686, !687}
!686 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !684, file: !379, line: 63, baseType: !152, size: 32)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !684, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!688 = !DIGlobalVariableExpression(var: !689, expr: !DIExpression())
!689 = distinct !DIGlobalVariable(name: "tc_start_time", scope: !529, file: !690, line: 95, type: !152, isLocal: true, isDefinition: true)
!690 = !DIFile(filename: "zephyr/subsys/testsuite/include/zephyr/tc_util.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!691 = !DIGlobalVariableExpression(var: !692, expr: !DIExpression())
!692 = distinct !DIGlobalVariable(name: "tc_spend_time", scope: !529, file: !690, line: 96, type: !152, isLocal: true, isDefinition: true)
!693 = !DIGlobalVariableExpression(var: !572, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!694 = !DIGlobalVariableExpression(var: !695, expr: !DIExpression())
!695 = distinct !DIGlobalVariable(name: "ztest_api", scope: !696, file: !699, line: 70, type: !700, isLocal: false, isDefinition: true)
!696 = distinct !DICompileUnit(language: DW_LANG_C99, file: !697, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, globals: !698, splitDebugInlining: false, nameTableKind: None)
!697 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/testsuite/ztest/src/ztest_defaults.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest")
!698 = !{!694}
!699 = !DIFile(filename: "zephyr/subsys/testsuite/ztest/src/ztest_defaults.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!700 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !701)
!701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_arch_api", file: !114, line: 499, size: 96, elements: !702)
!702 = !{!703, !704, !725}
!703 = !DIDerivedType(tag: DW_TAG_member, name: "run_all", scope: !701, file: !114, line: 500, baseType: !16, size: 32)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "should_suite_run", scope: !701, file: !114, line: 501, baseType: !705, size: 32, offset: 32)
!705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !706, size: 32)
!706 = !DISubroutineType(types: !707)
!707 = !{!145, !13, !708}
!708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 32)
!709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_node", file: !114, line: 177, size: 224, elements: !710)
!710 = !{!711, !712, !713, !714, !715, !716, !717}
!711 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !709, file: !114, line: 179, baseType: !117, size: 32)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !709, file: !114, line: 182, baseType: !122, size: 32, offset: 32)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "before", scope: !709, file: !114, line: 185, baseType: !128, size: 32, offset: 64)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "after", scope: !709, file: !114, line: 188, baseType: !134, size: 32, offset: 96)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "teardown", scope: !709, file: !114, line: 191, baseType: !137, size: 32, offset: 128)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "predicate", scope: !709, file: !114, line: 194, baseType: !140, size: 32, offset: 160)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !709, file: !114, line: 197, baseType: !718, size: 32, offset: 192)
!718 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !719)
!719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !720, size: 32)
!720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_stats", file: !114, line: 114, size: 96, elements: !721)
!721 = !{!722, !723, !724}
!722 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !720, file: !114, line: 116, baseType: !152, size: 32)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !720, file: !114, line: 118, baseType: !152, size: 32, offset: 32)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !720, file: !114, line: 120, baseType: !152, size: 32, offset: 64)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "should_test_run", scope: !701, file: !114, line: 502, baseType: !726, size: 32, offset: 64)
!726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !727, size: 32)
!727 = !DISubroutineType(types: !728)
!728 = !{!145, !118, !118}
!729 = !DIGlobalVariableExpression(var: !730, expr: !DIExpression())
!730 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !731, file: !846, line: 72, type: !930, isLocal: true, isDefinition: true)
!731 = distinct !DICompileUnit(language: DW_LANG_C99, file: !732, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !733, retainedTypes: !832, globals: !843, splitDebugInlining: false, nameTableKind: None)
!732 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest")
!733 = !{!30, !734}
!734 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !223, line: 65, baseType: !107, size: 32, elements: !735)
!735 = !{!736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831}
!736 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!737 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!738 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!739 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!740 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!741 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!742 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!743 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!744 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!745 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!746 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!747 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!748 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!749 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!750 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!751 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!752 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!753 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!754 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!755 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!756 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!757 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!758 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!759 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!760 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!761 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!762 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!763 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!764 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!765 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!766 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!767 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!768 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!769 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!770 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!771 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!772 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!773 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!774 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!775 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!776 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!777 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!778 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!779 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!780 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!781 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!782 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!783 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!784 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!785 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!786 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!787 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!788 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!789 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!790 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!791 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!792 = !DIEnumerator(name: "FMC_IRQn", value: 48)
!793 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!794 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!795 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!796 = !DIEnumerator(name: "UART4_IRQn", value: 52)
!797 = !DIEnumerator(name: "UART5_IRQn", value: 53)
!798 = !DIEnumerator(name: "TIM6_DAC_IRQn", value: 54)
!799 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!800 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!801 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!802 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!803 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!804 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!805 = !DIEnumerator(name: "ETH_IRQn", value: 61)
!806 = !DIEnumerator(name: "ETH_WKUP_IRQn", value: 62)
!807 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!808 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!809 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!810 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!811 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!812 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!813 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!814 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!815 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!816 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!817 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!818 = !DIEnumerator(name: "OTG_HS_EP1_OUT_IRQn", value: 74)
!819 = !DIEnumerator(name: "OTG_HS_EP1_IN_IRQn", value: 75)
!820 = !DIEnumerator(name: "OTG_HS_WKUP_IRQn", value: 76)
!821 = !DIEnumerator(name: "OTG_HS_IRQn", value: 77)
!822 = !DIEnumerator(name: "DCMI_IRQn", value: 78)
!823 = !DIEnumerator(name: "HASH_RNG_IRQn", value: 80)
!824 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!825 = !DIEnumerator(name: "UART7_IRQn", value: 82)
!826 = !DIEnumerator(name: "UART8_IRQn", value: 83)
!827 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!828 = !DIEnumerator(name: "SPI5_IRQn", value: 85)
!829 = !DIEnumerator(name: "SPI6_IRQn", value: 86)
!830 = !DIEnumerator(name: "SAI1_IRQn", value: 87)
!831 = !DIEnumerator(name: "DMA2D_IRQn", value: 90)
!832 = !{!185, !107, !106, !833}
!833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !834, size: 32)
!834 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !223, line: 486, baseType: !835)
!835 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 478, size: 192, elements: !836)
!836 = !{!837, !838, !839, !840, !841, !842}
!837 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !835, file: !223, line: 480, baseType: !227, size: 32)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !835, file: !223, line: 481, baseType: !227, size: 32, offset: 32)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !835, file: !223, line: 482, baseType: !227, size: 32, offset: 64)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !835, file: !223, line: 483, baseType: !227, size: 32, offset: 96)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !835, file: !223, line: 484, baseType: !227, size: 32, offset: 128)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !835, file: !223, line: 485, baseType: !227, size: 32, offset: 160)
!843 = !{!844, !850, !866, !877, !894, !729, !896, !910, !912, !914, !916, !918, !920, !922, !924, !926, !928}
!844 = !DIGlobalVariableExpression(var: !845, expr: !DIExpression())
!845 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !731, file: !846, line: 424, type: !847, isLocal: false, isDefinition: true, align: 16)
!846 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!847 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 64, elements: !848)
!848 = !{!849}
!849 = !DISubrange(count: 4)
!850 = !DIGlobalVariableExpression(var: !851, expr: !DIExpression())
!851 = distinct !DIGlobalVariable(name: "__device_dts_ord_42", scope: !731, file: !846, line: 424, type: !852, isLocal: false, isDefinition: true, align: 32)
!852 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !853)
!853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !854)
!854 = !{!855, !856, !857, !858, !864, !865}
!855 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !853, file: !247, line: 380, baseType: !118, size: 32)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !853, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !853, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !853, file: !247, line: 386, baseType: !859, size: 32, offset: 96)
!859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !860, size: 32)
!860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !861)
!861 = !{!862, !863}
!862 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !860, file: !247, line: 359, baseType: !195, size: 8)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !860, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !853, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !853, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!866 = !DIGlobalVariableExpression(var: !867, expr: !DIExpression())
!867 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_42", scope: !731, file: !846, line: 424, type: !868, isLocal: true, isDefinition: true, align: 32)
!868 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !869)
!869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !870)
!870 = !{!871, !876}
!871 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !869, file: !238, line: 60, baseType: !872, size: 32)
!872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !873, size: 32)
!873 = !DISubroutineType(types: !874)
!874 = !{!107, !875}
!875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !852, size: 32)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !869, file: !238, line: 65, baseType: !875, size: 32, offset: 32)
!877 = !DIGlobalVariableExpression(var: !878, expr: !DIExpression())
!878 = distinct !DIGlobalVariable(name: "exti_data", scope: !731, file: !846, line: 423, type: !879, isLocal: true, isDefinition: true)
!879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !846, line: 107, size: 1472, elements: !880)
!880 = !{!881}
!881 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !879, file: !846, line: 109, baseType: !882, size: 1472)
!882 = !DICompositeType(tag: DW_TAG_array_type, baseType: !883, size: 1472, elements: !892)
!883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !846, line: 101, size: 64, elements: !884)
!884 = !{!885, !891}
!885 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !883, file: !846, line: 102, baseType: !886, size: 32)
!886 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !887, line: 63, baseType: !888)
!887 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !889, size: 32)
!889 = !DISubroutineType(types: !890)
!890 = !{null, !107, !106}
!891 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !883, file: !846, line: 103, baseType: !106, size: 32, offset: 32)
!892 = !{!893}
!893 = !DISubrange(count: 23)
!894 = !DIGlobalVariableExpression(var: !895, expr: !DIExpression())
!895 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_42", scope: !731, file: !846, line: 424, type: !860, isLocal: true, isDefinition: true, align: 8)
!896 = !DIGlobalVariableExpression(var: !897, expr: !DIExpression())
!897 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !898, file: !846, line: 493, type: !903, isLocal: true, isDefinition: true, align: 32)
!898 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !846, file: !846, line: 460, type: !899, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !901)
!899 = !DISubroutineType(types: !900)
!900 = !{null, !875}
!901 = !{!902}
!902 = !DILocalVariable(name: "dev", arg: 1, scope: !898, file: !846, line: 460, type: !875)
!903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !904)
!904 = !{!905, !907, !908, !909}
!905 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !903, file: !10, line: 55, baseType: !906, size: 32)
!906 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !107)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !903, file: !10, line: 57, baseType: !906, size: 32, offset: 32)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !903, file: !10, line: 59, baseType: !106, size: 32, offset: 64)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !903, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!910 = !DIGlobalVariableExpression(var: !911, expr: !DIExpression())
!911 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !898, file: !846, line: 497, type: !903, isLocal: true, isDefinition: true, align: 32)
!912 = !DIGlobalVariableExpression(var: !913, expr: !DIExpression())
!913 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !898, file: !846, line: 507, type: !903, isLocal: true, isDefinition: true, align: 32)
!914 = !DIGlobalVariableExpression(var: !915, expr: !DIExpression())
!915 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !898, file: !846, line: 512, type: !903, isLocal: true, isDefinition: true, align: 32)
!916 = !DIGlobalVariableExpression(var: !917, expr: !DIExpression())
!917 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !898, file: !846, line: 516, type: !903, isLocal: true, isDefinition: true, align: 32)
!918 = !DIGlobalVariableExpression(var: !919, expr: !DIExpression())
!919 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !898, file: !846, line: 523, type: !903, isLocal: true, isDefinition: true, align: 32)
!920 = !DIGlobalVariableExpression(var: !921, expr: !DIExpression())
!921 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !898, file: !846, line: 527, type: !903, isLocal: true, isDefinition: true, align: 32)
!922 = !DIGlobalVariableExpression(var: !923, expr: !DIExpression())
!923 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !898, file: !846, line: 581, type: !903, isLocal: true, isDefinition: true, align: 32)
!924 = !DIGlobalVariableExpression(var: !925, expr: !DIExpression())
!925 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !898, file: !846, line: 586, type: !903, isLocal: true, isDefinition: true, align: 32)
!926 = !DIGlobalVariableExpression(var: !927, expr: !DIExpression())
!927 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !898, file: !846, line: 591, type: !903, isLocal: true, isDefinition: true, align: 32)
!928 = !DIGlobalVariableExpression(var: !929, expr: !DIExpression())
!929 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !898, file: !846, line: 595, type: !903, isLocal: true, isDefinition: true, align: 32)
!930 = !DICompositeType(tag: DW_TAG_array_type, baseType: !931, size: 736, elements: !892)
!931 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !932)
!932 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !223, line: 165, baseType: !734)
!933 = !DIGlobalVariableExpression(var: !934, expr: !DIExpression())
!934 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !935, file: !940, line: 29, type: !976, isLocal: false, isDefinition: true, align: 16)
!935 = distinct !DICompileUnit(language: DW_LANG_C99, file: !936, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !937, splitDebugInlining: false, nameTableKind: None)
!936 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest")
!937 = !{!938, !933, !944, !946, !948, !950, !952, !954, !956, !958, !960, !962, !964, !966, !968, !970, !972, !974}
!938 = !DIGlobalVariableExpression(var: !939, expr: !DIExpression())
!939 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !935, file: !940, line: 24, type: !941, isLocal: false, isDefinition: true, align: 16)
!940 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest")
!941 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 304, elements: !942)
!942 = !{!943}
!943 = !DISubrange(count: 19)
!944 = !DIGlobalVariableExpression(var: !945, expr: !DIExpression())
!945 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_106", scope: !935, file: !940, line: 36, type: !847, isLocal: false, isDefinition: true, align: 16)
!946 = !DIGlobalVariableExpression(var: !947, expr: !DIExpression())
!947 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_105", scope: !935, file: !940, line: 43, type: !847, isLocal: false, isDefinition: true, align: 16)
!948 = !DIGlobalVariableExpression(var: !949, expr: !DIExpression())
!949 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_104", scope: !935, file: !940, line: 50, type: !847, isLocal: false, isDefinition: true, align: 16)
!950 = !DIGlobalVariableExpression(var: !951, expr: !DIExpression())
!951 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_103", scope: !935, file: !940, line: 57, type: !847, isLocal: false, isDefinition: true, align: 16)
!952 = !DIGlobalVariableExpression(var: !953, expr: !DIExpression())
!953 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_102", scope: !935, file: !940, line: 64, type: !847, isLocal: false, isDefinition: true, align: 16)
!954 = !DIGlobalVariableExpression(var: !955, expr: !DIExpression())
!955 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_101", scope: !935, file: !940, line: 71, type: !847, isLocal: false, isDefinition: true, align: 16)
!956 = !DIGlobalVariableExpression(var: !957, expr: !DIExpression())
!957 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_24", scope: !935, file: !940, line: 78, type: !847, isLocal: false, isDefinition: true, align: 16)
!958 = !DIGlobalVariableExpression(var: !959, expr: !DIExpression())
!959 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_100", scope: !935, file: !940, line: 85, type: !847, isLocal: false, isDefinition: true, align: 16)
!960 = !DIGlobalVariableExpression(var: !961, expr: !DIExpression())
!961 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_99", scope: !935, file: !940, line: 92, type: !847, isLocal: false, isDefinition: true, align: 16)
!962 = !DIGlobalVariableExpression(var: !963, expr: !DIExpression())
!963 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_98", scope: !935, file: !940, line: 99, type: !847, isLocal: false, isDefinition: true, align: 16)
!964 = !DIGlobalVariableExpression(var: !965, expr: !DIExpression())
!965 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_97", scope: !935, file: !940, line: 106, type: !847, isLocal: false, isDefinition: true, align: 16)
!966 = !DIGlobalVariableExpression(var: !967, expr: !DIExpression())
!967 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_60", scope: !935, file: !940, line: 113, type: !847, isLocal: false, isDefinition: true, align: 16)
!968 = !DIGlobalVariableExpression(var: !969, expr: !DIExpression())
!969 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_57", scope: !935, file: !940, line: 120, type: !847, isLocal: false, isDefinition: true, align: 16)
!970 = !DIGlobalVariableExpression(var: !971, expr: !DIExpression())
!971 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_52", scope: !935, file: !940, line: 127, type: !847, isLocal: false, isDefinition: true, align: 16)
!972 = !DIGlobalVariableExpression(var: !973, expr: !DIExpression())
!973 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_49", scope: !935, file: !940, line: 134, type: !847, isLocal: false, isDefinition: true, align: 16)
!974 = !DIGlobalVariableExpression(var: !975, expr: !DIExpression())
!975 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_63", scope: !935, file: !940, line: 141, type: !847, isLocal: false, isDefinition: true, align: 16)
!976 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 48, elements: !977)
!977 = !{!978}
!978 = !DISubrange(count: 3)
!979 = !DIGlobalVariableExpression(var: !980, expr: !DIExpression())
!980 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !981, file: !1044, line: 398, type: !1077, isLocal: true, isDefinition: true)
!981 = distinct !DICompileUnit(language: DW_LANG_C99, file: !982, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !983, retainedTypes: !996, globals: !1041, splitDebugInlining: false, nameTableKind: None)
!982 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest")
!983 = !{!984, !30, !989}
!984 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !985, line: 197, baseType: !32, size: 32, elements: !986)
!985 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!986 = !{!987, !988}
!987 = !DIEnumerator(name: "SUCCESS", value: 0)
!988 = !DIEnumerator(name: "ERROR", value: 1)
!989 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !990, line: 44, baseType: !32, size: 32, elements: !991)
!990 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!991 = !{!992, !993, !994, !995}
!992 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!993 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!994 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!995 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!996 = !{!106, !107, !152, !997, !1034, !1040}
!997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !998, size: 32)
!998 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 677, baseType: !999)
!999 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 643, size: 1152, elements: !1000)
!1000 = !{!1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033}
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !999, file: !223, line: 645, baseType: !227, size: 32)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !999, file: !223, line: 646, baseType: !227, size: 32, offset: 32)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !999, file: !223, line: 647, baseType: !227, size: 32, offset: 64)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !999, file: !223, line: 648, baseType: !227, size: 32, offset: 96)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !999, file: !223, line: 649, baseType: !227, size: 32, offset: 128)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !999, file: !223, line: 650, baseType: !227, size: 32, offset: 160)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !999, file: !223, line: 651, baseType: !227, size: 32, offset: 192)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !999, file: !223, line: 652, baseType: !152, size: 32, offset: 224)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !999, file: !223, line: 653, baseType: !227, size: 32, offset: 256)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !999, file: !223, line: 654, baseType: !227, size: 32, offset: 288)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !999, file: !223, line: 655, baseType: !1012, size: 64, offset: 320)
!1012 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 64, elements: !340)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !999, file: !223, line: 656, baseType: !227, size: 32, offset: 384)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !999, file: !223, line: 657, baseType: !227, size: 32, offset: 416)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !999, file: !223, line: 658, baseType: !227, size: 32, offset: 448)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !999, file: !223, line: 659, baseType: !152, size: 32, offset: 480)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !999, file: !223, line: 660, baseType: !227, size: 32, offset: 512)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !999, file: !223, line: 661, baseType: !227, size: 32, offset: 544)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !999, file: !223, line: 662, baseType: !1012, size: 64, offset: 576)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !999, file: !223, line: 663, baseType: !227, size: 32, offset: 640)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !999, file: !223, line: 664, baseType: !227, size: 32, offset: 672)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !999, file: !223, line: 665, baseType: !227, size: 32, offset: 704)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !999, file: !223, line: 666, baseType: !152, size: 32, offset: 736)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !999, file: !223, line: 667, baseType: !227, size: 32, offset: 768)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !999, file: !223, line: 668, baseType: !227, size: 32, offset: 800)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !999, file: !223, line: 669, baseType: !1012, size: 64, offset: 832)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !999, file: !223, line: 670, baseType: !227, size: 32, offset: 896)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !999, file: !223, line: 671, baseType: !227, size: 32, offset: 928)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !999, file: !223, line: 672, baseType: !1012, size: 64, offset: 960)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !999, file: !223, line: 673, baseType: !227, size: 32, offset: 1024)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !999, file: !223, line: 674, baseType: !227, size: 32, offset: 1056)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !999, file: !223, line: 675, baseType: !227, size: 32, offset: 1088)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !999, file: !223, line: 676, baseType: !227, size: 32, offset: 1120)
!1034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1035, size: 32)
!1035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1036, line: 343, size: 64, elements: !1037)
!1036 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1037 = !{!1038, !1039}
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1035, file: !1036, line: 344, baseType: !152, size: 32)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1035, file: !1036, line: 345, baseType: !152, size: 32, offset: 32)
!1040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !152, size: 32)
!1041 = !{!1042, !1048, !1064, !1075, !979}
!1042 = !DIGlobalVariableExpression(var: !1043, expr: !DIExpression())
!1043 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !981, file: !1044, line: 752, type: !1045, isLocal: false, isDefinition: true, align: 16)
!1044 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1045 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 1024, elements: !1046)
!1046 = !{!1047}
!1047 = !DISubrange(count: 64)
!1048 = !DIGlobalVariableExpression(var: !1049, expr: !DIExpression())
!1049 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !981, file: !1044, line: 752, type: !1050, isLocal: false, isDefinition: true, align: 32)
!1050 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1051)
!1051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1052)
!1052 = !{!1053, !1054, !1055, !1056, !1062, !1063}
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1051, file: !247, line: 380, baseType: !118, size: 32)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1051, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1051, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1051, file: !247, line: 386, baseType: !1057, size: 32, offset: 96)
!1057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1058, size: 32)
!1058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1059)
!1059 = !{!1060, !1061}
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1058, file: !247, line: 359, baseType: !195, size: 8)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1058, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1051, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1051, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1064 = !DIGlobalVariableExpression(var: !1065, expr: !DIExpression())
!1065 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !981, file: !1044, line: 752, type: !1066, isLocal: true, isDefinition: true, align: 32)
!1066 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1067)
!1067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !1068)
!1068 = !{!1069, !1074}
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1067, file: !238, line: 60, baseType: !1070, size: 32)
!1070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1071, size: 32)
!1071 = !DISubroutineType(types: !1072)
!1072 = !{!107, !1073}
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1050, size: 32)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1067, file: !238, line: 65, baseType: !1073, size: 32, offset: 32)
!1075 = !DIGlobalVariableExpression(var: !1076, expr: !DIExpression())
!1076 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !981, file: !1044, line: 752, type: !1058, isLocal: true, isDefinition: true, align: 8)
!1077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !990, line: 100, size: 224, elements: !1078)
!1078 = !{!1079, !1085, !1086, !1095, !1100, !1105, !1111}
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1077, file: !990, line: 101, baseType: !1080, size: 32)
!1080 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !990, line: 76, baseType: !1081)
!1081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1082, size: 32)
!1082 = !DISubroutineType(types: !1083)
!1083 = !{!107, !1073, !1084}
!1084 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !990, line: 56, baseType: !106)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1077, file: !990, line: 102, baseType: !1080, size: 32, offset: 32)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1077, file: !990, line: 103, baseType: !1087, size: 32, offset: 64)
!1087 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !990, line: 83, baseType: !1088)
!1088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1089, size: 32)
!1089 = !DISubroutineType(types: !1090)
!1090 = !{!107, !1073, !1084, !1091, !106}
!1091 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !990, line: 72, baseType: !1092)
!1092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1093, size: 32)
!1093 = !DISubroutineType(types: !1094)
!1094 = !{null, !1073, !1084, !106}
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1077, file: !990, line: 104, baseType: !1096, size: 32, offset: 96)
!1096 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !990, line: 79, baseType: !1097)
!1097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1098, size: 32)
!1098 = !DISubroutineType(types: !1099)
!1099 = !{!107, !1073, !1084, !1040}
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1077, file: !990, line: 105, baseType: !1101, size: 32, offset: 128)
!1101 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !990, line: 88, baseType: !1102)
!1102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 32)
!1103 = !DISubroutineType(types: !1104)
!1104 = !{!989, !1073, !1084}
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1077, file: !990, line: 106, baseType: !1106, size: 32, offset: 160)
!1106 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !990, line: 92, baseType: !1107)
!1107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1108, size: 32)
!1108 = !DISubroutineType(types: !1109)
!1109 = !{!107, !1073, !1084, !1110}
!1110 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !990, line: 64, baseType: !106)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1077, file: !990, line: 107, baseType: !1112, size: 32, offset: 192)
!1112 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !990, line: 96, baseType: !1113)
!1113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1114, size: 32)
!1114 = !DISubroutineType(types: !1115)
!1115 = !{!107, !1073, !1084, !106}
!1116 = !DIGlobalVariableExpression(var: !1117, expr: !DIExpression())
!1117 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1118, file: !1175, line: 603, type: !1177, isLocal: true, isDefinition: true, align: 32)
!1118 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1119, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1120, globals: !1172, splitDebugInlining: false, nameTableKind: None)
!1119 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest")
!1120 = !{!106, !107, !1121}
!1121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1122, size: 32)
!1122 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1123)
!1123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1124, line: 336, size: 160, elements: !1125)
!1124 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1125 = !{!1126, !1146, !1150, !1154, !1167}
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1123, file: !1124, line: 365, baseType: !1127, size: 32)
!1127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1128, size: 32)
!1128 = !DISubroutineType(types: !1129)
!1129 = !{!107, !1130, !1145}
!1130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1131, size: 32)
!1131 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1132)
!1132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1133)
!1133 = !{!1134, !1135, !1136, !1137, !1143, !1144}
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1132, file: !247, line: 380, baseType: !118, size: 32)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1132, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1132, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1132, file: !247, line: 386, baseType: !1138, size: 32, offset: 96)
!1138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1139, size: 32)
!1139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1140)
!1140 = !{!1141, !1142}
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1139, file: !247, line: 359, baseType: !195, size: 8)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1139, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1132, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1132, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !196, size: 32)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1123, file: !1124, line: 366, baseType: !1147, size: 32, offset: 32)
!1147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1148, size: 32)
!1148 = !DISubroutineType(types: !1149)
!1149 = !{null, !1130, !196}
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1123, file: !1124, line: 374, baseType: !1151, size: 32, offset: 64)
!1151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1152, size: 32)
!1152 = !DISubroutineType(types: !1153)
!1153 = !{!107, !1130}
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1123, file: !1124, line: 377, baseType: !1155, size: 32, offset: 96)
!1155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1156, size: 32)
!1156 = !DISubroutineType(types: !1157)
!1157 = !{!107, !1130, !1158}
!1158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1159, size: 32)
!1159 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1160)
!1160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1124, line: 122, size: 64, elements: !1161)
!1161 = !{!1162, !1163, !1164, !1165, !1166}
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1160, file: !1124, line: 123, baseType: !152, size: 32)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1160, file: !1124, line: 124, baseType: !195, size: 8, offset: 32)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1160, file: !1124, line: 125, baseType: !195, size: 8, offset: 40)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1160, file: !1124, line: 126, baseType: !195, size: 8, offset: 48)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1160, file: !1124, line: 127, baseType: !195, size: 8, offset: 56)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1123, file: !1124, line: 379, baseType: !1168, size: 32, offset: 128)
!1168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1169, size: 32)
!1169 = !DISubroutineType(types: !1170)
!1170 = !{!107, !1130, !1171}
!1171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1160, size: 32)
!1172 = !{!1116, !1173}
!1173 = !DIGlobalVariableExpression(var: !1174, expr: !DIExpression())
!1174 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1118, file: !1175, line: 38, type: !1176, isLocal: true, isDefinition: true)
!1175 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1176 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1130)
!1177 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1178)
!1178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !1179)
!1179 = !{!1180, !1181}
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1178, file: !238, line: 60, baseType: !1151, size: 32)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1178, file: !238, line: 65, baseType: !1130, size: 32, offset: 32)
!1182 = !DIGlobalVariableExpression(var: !1183, expr: !DIExpression())
!1183 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1184, file: !1353, line: 762, type: !1492, isLocal: true, isDefinition: true)
!1184 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1185, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1186, retainedTypes: !1204, globals: !1350, splitDebugInlining: false, nameTableKind: None)
!1185 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest")
!1186 = !{!30, !1187, !1193, !1198, !989}
!1187 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1188, line: 506, baseType: !32, size: 32, elements: !1189)
!1188 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1189 = !{!1190, !1191, !1192}
!1190 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1191 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1192 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1193 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1188, line: 512, baseType: !32, size: 32, elements: !1194)
!1194 = !{!1195, !1196, !1197}
!1195 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1196 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1197 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1198 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !887, line: 43, baseType: !32, size: 32, elements: !1199)
!1199 = !{!1200, !1201, !1202, !1203}
!1200 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1201 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1202 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1203 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1204 = !{!106, !107, !1205, !1275, !1280, !1240, !1193, !1187, !1285, !1286, !152, !1300, !1255, !193, !1310, !1311}
!1205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1206, size: 32)
!1206 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1207)
!1207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1188, line: 523, size: 288, elements: !1208)
!1208 = !{!1209, !1230, !1236, !1241, !1245, !1246, !1247, !1251, !1271}
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1207, file: !1188, line: 524, baseType: !1210, size: 32)
!1210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1211, size: 32)
!1211 = !DISubroutineType(types: !1212)
!1212 = !{!107, !1213, !1228, !1229}
!1213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1214, size: 32)
!1214 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1215)
!1215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1216)
!1216 = !{!1217, !1218, !1219, !1220, !1226, !1227}
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1215, file: !247, line: 380, baseType: !118, size: 32)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1215, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1215, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1215, file: !247, line: 386, baseType: !1221, size: 32, offset: 96)
!1221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1222, size: 32)
!1222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1223)
!1223 = !{!1224, !1225}
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1222, file: !247, line: 359, baseType: !195, size: 8)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1222, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1215, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1215, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1228 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1188, line: 237, baseType: !195)
!1229 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1188, line: 257, baseType: !152)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1207, file: !1188, line: 530, baseType: !1231, size: 32, offset: 32)
!1231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1232, size: 32)
!1232 = !DISubroutineType(types: !1233)
!1233 = !{!107, !1213, !1234}
!1234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1235, size: 32)
!1235 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1188, line: 229, baseType: !152)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1207, file: !1188, line: 532, baseType: !1237, size: 32, offset: 64)
!1237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1238, size: 32)
!1238 = !DISubroutineType(types: !1239)
!1239 = !{!107, !1213, !1240, !1235}
!1240 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1188, line: 216, baseType: !152)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1207, file: !1188, line: 535, baseType: !1242, size: 32, offset: 96)
!1242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1243, size: 32)
!1243 = !DISubroutineType(types: !1244)
!1244 = !{!107, !1213, !1240}
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1207, file: !1188, line: 537, baseType: !1242, size: 32, offset: 128)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1207, file: !1188, line: 539, baseType: !1242, size: 32, offset: 160)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1207, file: !1188, line: 541, baseType: !1248, size: 32, offset: 192)
!1248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1249, size: 32)
!1249 = !DISubroutineType(types: !1250)
!1250 = !{!107, !1213, !1228, !1187, !1193}
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1207, file: !1188, line: 544, baseType: !1252, size: 32, offset: 224)
!1252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1253, size: 32)
!1253 = !DISubroutineType(types: !1254)
!1254 = !{!107, !1213, !1255, !145}
!1255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1256, size: 32)
!1256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1188, line: 478, size: 96, elements: !1257)
!1257 = !{!1258, !1265, !1270}
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1256, file: !1188, line: 482, baseType: !1259, size: 32)
!1259 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1260, line: 33, baseType: !1261)
!1260 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1260, line: 29, size: 32, elements: !1262)
!1262 = !{!1263}
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1261, file: !1260, line: 30, baseType: !1264, size: 32)
!1264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1261, size: 32)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1256, file: !1188, line: 485, baseType: !1266, size: 32, offset: 32)
!1266 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1188, line: 464, baseType: !1267)
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 32)
!1268 = !DISubroutineType(types: !1269)
!1269 = !{null, !1213, !1255, !1240}
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1256, file: !1188, line: 493, baseType: !1240, size: 32, offset: 64)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1207, file: !1188, line: 547, baseType: !1272, size: 32, offset: 256)
!1272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1273, size: 32)
!1273 = !DISubroutineType(types: !1274)
!1274 = !{!152, !1213}
!1275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1276, size: 32)
!1276 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1277)
!1277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1188, line: 428, size: 32, elements: !1278)
!1278 = !{!1279}
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1277, file: !1188, line: 434, baseType: !1240, size: 32)
!1280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1281, size: 32)
!1281 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1282)
!1282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1188, line: 441, size: 32, elements: !1283)
!1283 = !{!1284}
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1282, file: !1188, line: 447, baseType: !1240, size: 32)
!1285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1282, size: 32)
!1286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1287, size: 32)
!1287 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !223, line: 583, baseType: !1288)
!1288 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 572, size: 320, elements: !1289)
!1289 = !{!1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298}
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1288, file: !223, line: 574, baseType: !227, size: 32)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1288, file: !223, line: 575, baseType: !227, size: 32, offset: 32)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1288, file: !223, line: 576, baseType: !227, size: 32, offset: 64)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1288, file: !223, line: 577, baseType: !227, size: 32, offset: 96)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1288, file: !223, line: 578, baseType: !227, size: 32, offset: 128)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1288, file: !223, line: 579, baseType: !227, size: 32, offset: 160)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1288, file: !223, line: 580, baseType: !227, size: 32, offset: 192)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1288, file: !223, line: 581, baseType: !227, size: 32, offset: 224)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1288, file: !223, line: 582, baseType: !1299, size: 64, offset: 256)
!1299 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 64, elements: !340)
!1300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1301, size: 32)
!1301 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !223, line: 596, baseType: !1302)
!1302 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 589, size: 288, elements: !1303)
!1303 = !{!1304, !1305, !1306, !1308, !1309}
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1302, file: !223, line: 591, baseType: !227, size: 32)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1302, file: !223, line: 592, baseType: !227, size: 32, offset: 32)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1302, file: !223, line: 593, baseType: !1307, size: 128, offset: 64)
!1307 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 128, elements: !848)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1302, file: !223, line: 594, baseType: !1012, size: 64, offset: 192)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1302, file: !223, line: 595, baseType: !227, size: 32, offset: 256)
!1310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1084, size: 32)
!1311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1312, size: 32)
!1312 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1313)
!1313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !990, line: 100, size: 224, elements: !1314)
!1314 = !{!1315, !1320, !1321, !1330, !1335, !1340, !1345}
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1313, file: !990, line: 101, baseType: !1316, size: 32)
!1316 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !990, line: 76, baseType: !1317)
!1317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1318, size: 32)
!1318 = !DISubroutineType(types: !1319)
!1319 = !{!107, !1213, !1084}
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1313, file: !990, line: 102, baseType: !1316, size: 32, offset: 32)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1313, file: !990, line: 103, baseType: !1322, size: 32, offset: 64)
!1322 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !990, line: 83, baseType: !1323)
!1323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1324, size: 32)
!1324 = !DISubroutineType(types: !1325)
!1325 = !{!107, !1213, !1084, !1326, !106}
!1326 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !990, line: 72, baseType: !1327)
!1327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1328, size: 32)
!1328 = !DISubroutineType(types: !1329)
!1329 = !{null, !1213, !1084, !106}
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1313, file: !990, line: 104, baseType: !1331, size: 32, offset: 96)
!1331 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !990, line: 79, baseType: !1332)
!1332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1333, size: 32)
!1333 = !DISubroutineType(types: !1334)
!1334 = !{!107, !1213, !1084, !1040}
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1313, file: !990, line: 105, baseType: !1336, size: 32, offset: 128)
!1336 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !990, line: 88, baseType: !1337)
!1337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1338, size: 32)
!1338 = !DISubroutineType(types: !1339)
!1339 = !{!989, !1213, !1084}
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1313, file: !990, line: 106, baseType: !1341, size: 32, offset: 160)
!1341 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !990, line: 92, baseType: !1342)
!1342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1343, size: 32)
!1343 = !DISubroutineType(types: !1344)
!1344 = !{!107, !1213, !1084, !1110}
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1313, file: !990, line: 107, baseType: !1346, size: 32, offset: 192)
!1346 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !990, line: 96, baseType: !1347)
!1347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1348, size: 32)
!1348 = !DISubroutineType(types: !1349)
!1349 = !{!107, !1213, !1084, !106}
!1350 = !{!1351, !1357, !1359, !1369, !1371, !1373, !1375, !1377, !1379, !1381, !1383, !1385, !1387, !1392, !1394, !1396, !1398, !1400, !1402, !1404, !1406, !1408, !1410, !1412, !1414, !1416, !1418, !1420, !1422, !1424, !1426, !1428, !1430, !1432, !1446, !1448, !1450, !1452, !1454, !1456, !1458, !1460, !1462, !1464, !1466, !1468, !1470, !1472, !1474, !1476, !1478, !1480, !1482, !1484, !1486, !1182, !1488, !1490, !1503, !1505, !1507, !1509, !1511, !1513, !1515, !1517, !1519}
!1351 = !DIGlobalVariableExpression(var: !1352, expr: !DIExpression())
!1352 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_97", scope: !1184, file: !1353, line: 762, type: !1354, isLocal: false, isDefinition: true, align: 16)
!1353 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1354 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 80, elements: !1355)
!1355 = !{!1356}
!1356 = !DISubrange(count: 5)
!1357 = !DIGlobalVariableExpression(var: !1358, expr: !DIExpression())
!1358 = distinct !DIGlobalVariable(name: "__device_dts_ord_97", scope: !1184, file: !1353, line: 762, type: !1214, isLocal: false, isDefinition: true, align: 32)
!1359 = !DIGlobalVariableExpression(var: !1360, expr: !DIExpression())
!1360 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_97", scope: !1184, file: !1353, line: 762, type: !1361, isLocal: true, isDefinition: true, align: 32)
!1361 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1362)
!1362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !1363)
!1363 = !{!1364, !1368}
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1362, file: !238, line: 60, baseType: !1365, size: 32)
!1365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1366, size: 32)
!1366 = !DISubroutineType(types: !1367)
!1367 = !{!107, !1213}
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1362, file: !238, line: 65, baseType: !1213, size: 32, offset: 32)
!1369 = !DIGlobalVariableExpression(var: !1370, expr: !DIExpression())
!1370 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_98", scope: !1184, file: !1353, line: 766, type: !1354, isLocal: false, isDefinition: true, align: 16)
!1371 = !DIGlobalVariableExpression(var: !1372, expr: !DIExpression())
!1372 = distinct !DIGlobalVariable(name: "__device_dts_ord_98", scope: !1184, file: !1353, line: 766, type: !1214, isLocal: false, isDefinition: true, align: 32)
!1373 = !DIGlobalVariableExpression(var: !1374, expr: !DIExpression())
!1374 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_98", scope: !1184, file: !1353, line: 766, type: !1361, isLocal: true, isDefinition: true, align: 32)
!1375 = !DIGlobalVariableExpression(var: !1376, expr: !DIExpression())
!1376 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_99", scope: !1184, file: !1353, line: 770, type: !1354, isLocal: false, isDefinition: true, align: 16)
!1377 = !DIGlobalVariableExpression(var: !1378, expr: !DIExpression())
!1378 = distinct !DIGlobalVariable(name: "__device_dts_ord_99", scope: !1184, file: !1353, line: 770, type: !1214, isLocal: false, isDefinition: true, align: 32)
!1379 = !DIGlobalVariableExpression(var: !1380, expr: !DIExpression())
!1380 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_99", scope: !1184, file: !1353, line: 770, type: !1361, isLocal: true, isDefinition: true, align: 32)
!1381 = !DIGlobalVariableExpression(var: !1382, expr: !DIExpression())
!1382 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_100", scope: !1184, file: !1353, line: 774, type: !1354, isLocal: false, isDefinition: true, align: 16)
!1383 = !DIGlobalVariableExpression(var: !1384, expr: !DIExpression())
!1384 = distinct !DIGlobalVariable(name: "__device_dts_ord_100", scope: !1184, file: !1353, line: 774, type: !1214, isLocal: false, isDefinition: true, align: 32)
!1385 = !DIGlobalVariableExpression(var: !1386, expr: !DIExpression())
!1386 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_100", scope: !1184, file: !1353, line: 774, type: !1361, isLocal: true, isDefinition: true, align: 32)
!1387 = !DIGlobalVariableExpression(var: !1388, expr: !DIExpression())
!1388 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_24", scope: !1184, file: !1353, line: 778, type: !1389, isLocal: false, isDefinition: true, align: 16)
!1389 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 112, elements: !1390)
!1390 = !{!1391}
!1391 = !DISubrange(count: 7)
!1392 = !DIGlobalVariableExpression(var: !1393, expr: !DIExpression())
!1393 = distinct !DIGlobalVariable(name: "__device_dts_ord_24", scope: !1184, file: !1353, line: 778, type: !1214, isLocal: false, isDefinition: true, align: 32)
!1394 = !DIGlobalVariableExpression(var: !1395, expr: !DIExpression())
!1395 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_24", scope: !1184, file: !1353, line: 778, type: !1361, isLocal: true, isDefinition: true, align: 32)
!1396 = !DIGlobalVariableExpression(var: !1397, expr: !DIExpression())
!1397 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_101", scope: !1184, file: !1353, line: 782, type: !1354, isLocal: false, isDefinition: true, align: 16)
!1398 = !DIGlobalVariableExpression(var: !1399, expr: !DIExpression())
!1399 = distinct !DIGlobalVariable(name: "__device_dts_ord_101", scope: !1184, file: !1353, line: 782, type: !1214, isLocal: false, isDefinition: true, align: 32)
!1400 = !DIGlobalVariableExpression(var: !1401, expr: !DIExpression())
!1401 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_101", scope: !1184, file: !1353, line: 782, type: !1361, isLocal: true, isDefinition: true, align: 32)
!1402 = !DIGlobalVariableExpression(var: !1403, expr: !DIExpression())
!1403 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_102", scope: !1184, file: !1353, line: 786, type: !1354, isLocal: false, isDefinition: true, align: 16)
!1404 = !DIGlobalVariableExpression(var: !1405, expr: !DIExpression())
!1405 = distinct !DIGlobalVariable(name: "__device_dts_ord_102", scope: !1184, file: !1353, line: 786, type: !1214, isLocal: false, isDefinition: true, align: 32)
!1406 = !DIGlobalVariableExpression(var: !1407, expr: !DIExpression())
!1407 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_102", scope: !1184, file: !1353, line: 786, type: !1361, isLocal: true, isDefinition: true, align: 32)
!1408 = !DIGlobalVariableExpression(var: !1409, expr: !DIExpression())
!1409 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_103", scope: !1184, file: !1353, line: 790, type: !1354, isLocal: false, isDefinition: true, align: 16)
!1410 = !DIGlobalVariableExpression(var: !1411, expr: !DIExpression())
!1411 = distinct !DIGlobalVariable(name: "__device_dts_ord_103", scope: !1184, file: !1353, line: 790, type: !1214, isLocal: false, isDefinition: true, align: 32)
!1412 = !DIGlobalVariableExpression(var: !1413, expr: !DIExpression())
!1413 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_103", scope: !1184, file: !1353, line: 790, type: !1361, isLocal: true, isDefinition: true, align: 32)
!1414 = !DIGlobalVariableExpression(var: !1415, expr: !DIExpression())
!1415 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_104", scope: !1184, file: !1353, line: 794, type: !1354, isLocal: false, isDefinition: true, align: 16)
!1416 = !DIGlobalVariableExpression(var: !1417, expr: !DIExpression())
!1417 = distinct !DIGlobalVariable(name: "__device_dts_ord_104", scope: !1184, file: !1353, line: 794, type: !1214, isLocal: false, isDefinition: true, align: 32)
!1418 = !DIGlobalVariableExpression(var: !1419, expr: !DIExpression())
!1419 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_104", scope: !1184, file: !1353, line: 794, type: !1361, isLocal: true, isDefinition: true, align: 32)
!1420 = !DIGlobalVariableExpression(var: !1421, expr: !DIExpression())
!1421 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_105", scope: !1184, file: !1353, line: 798, type: !1354, isLocal: false, isDefinition: true, align: 16)
!1422 = !DIGlobalVariableExpression(var: !1423, expr: !DIExpression())
!1423 = distinct !DIGlobalVariable(name: "__device_dts_ord_105", scope: !1184, file: !1353, line: 798, type: !1214, isLocal: false, isDefinition: true, align: 32)
!1424 = !DIGlobalVariableExpression(var: !1425, expr: !DIExpression())
!1425 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_105", scope: !1184, file: !1353, line: 798, type: !1361, isLocal: true, isDefinition: true, align: 32)
!1426 = !DIGlobalVariableExpression(var: !1427, expr: !DIExpression())
!1427 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_106", scope: !1184, file: !1353, line: 802, type: !1354, isLocal: false, isDefinition: true, align: 16)
!1428 = !DIGlobalVariableExpression(var: !1429, expr: !DIExpression())
!1429 = distinct !DIGlobalVariable(name: "__device_dts_ord_106", scope: !1184, file: !1353, line: 802, type: !1214, isLocal: false, isDefinition: true, align: 32)
!1430 = !DIGlobalVariableExpression(var: !1431, expr: !DIExpression())
!1431 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_106", scope: !1184, file: !1353, line: 802, type: !1361, isLocal: true, isDefinition: true, align: 32)
!1432 = !DIGlobalVariableExpression(var: !1433, expr: !DIExpression())
!1433 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1184, file: !1353, line: 762, type: !1434, isLocal: true, isDefinition: true)
!1434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1435, line: 237, size: 128, elements: !1436)
!1435 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1436 = !{!1437, !1438, !1439}
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1434, file: !1435, line: 239, baseType: !1282, size: 32)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1434, file: !1435, line: 241, baseType: !1213, size: 32, offset: 32)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1434, file: !1435, line: 243, baseType: !1440, size: 64, offset: 64)
!1440 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1260, line: 40, baseType: !1441)
!1441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1260, line: 35, size: 64, elements: !1442)
!1442 = !{!1443, !1445}
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1441, file: !1260, line: 36, baseType: !1444, size: 32)
!1444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1259, size: 32)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1441, file: !1260, line: 37, baseType: !1444, size: 32, offset: 32)
!1446 = !DIGlobalVariableExpression(var: !1447, expr: !DIExpression())
!1447 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_97", scope: !1184, file: !1353, line: 762, type: !1222, isLocal: true, isDefinition: true, align: 8)
!1448 = !DIGlobalVariableExpression(var: !1449, expr: !DIExpression())
!1449 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1184, file: !1353, line: 766, type: !1434, isLocal: true, isDefinition: true)
!1450 = !DIGlobalVariableExpression(var: !1451, expr: !DIExpression())
!1451 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_98", scope: !1184, file: !1353, line: 766, type: !1222, isLocal: true, isDefinition: true, align: 8)
!1452 = !DIGlobalVariableExpression(var: !1453, expr: !DIExpression())
!1453 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1184, file: !1353, line: 770, type: !1434, isLocal: true, isDefinition: true)
!1454 = !DIGlobalVariableExpression(var: !1455, expr: !DIExpression())
!1455 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_99", scope: !1184, file: !1353, line: 770, type: !1222, isLocal: true, isDefinition: true, align: 8)
!1456 = !DIGlobalVariableExpression(var: !1457, expr: !DIExpression())
!1457 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1184, file: !1353, line: 774, type: !1434, isLocal: true, isDefinition: true)
!1458 = !DIGlobalVariableExpression(var: !1459, expr: !DIExpression())
!1459 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_100", scope: !1184, file: !1353, line: 774, type: !1222, isLocal: true, isDefinition: true, align: 8)
!1460 = !DIGlobalVariableExpression(var: !1461, expr: !DIExpression())
!1461 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1184, file: !1353, line: 778, type: !1434, isLocal: true, isDefinition: true)
!1462 = !DIGlobalVariableExpression(var: !1463, expr: !DIExpression())
!1463 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_24", scope: !1184, file: !1353, line: 778, type: !1222, isLocal: true, isDefinition: true, align: 8)
!1464 = !DIGlobalVariableExpression(var: !1465, expr: !DIExpression())
!1465 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1184, file: !1353, line: 782, type: !1434, isLocal: true, isDefinition: true)
!1466 = !DIGlobalVariableExpression(var: !1467, expr: !DIExpression())
!1467 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_101", scope: !1184, file: !1353, line: 782, type: !1222, isLocal: true, isDefinition: true, align: 8)
!1468 = !DIGlobalVariableExpression(var: !1469, expr: !DIExpression())
!1469 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1184, file: !1353, line: 786, type: !1434, isLocal: true, isDefinition: true)
!1470 = !DIGlobalVariableExpression(var: !1471, expr: !DIExpression())
!1471 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_102", scope: !1184, file: !1353, line: 786, type: !1222, isLocal: true, isDefinition: true, align: 8)
!1472 = !DIGlobalVariableExpression(var: !1473, expr: !DIExpression())
!1473 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1184, file: !1353, line: 790, type: !1434, isLocal: true, isDefinition: true)
!1474 = !DIGlobalVariableExpression(var: !1475, expr: !DIExpression())
!1475 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_103", scope: !1184, file: !1353, line: 790, type: !1222, isLocal: true, isDefinition: true, align: 8)
!1476 = !DIGlobalVariableExpression(var: !1477, expr: !DIExpression())
!1477 = distinct !DIGlobalVariable(name: "gpio_stm32_data_i", scope: !1184, file: !1353, line: 794, type: !1434, isLocal: true, isDefinition: true)
!1478 = !DIGlobalVariableExpression(var: !1479, expr: !DIExpression())
!1479 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_104", scope: !1184, file: !1353, line: 794, type: !1222, isLocal: true, isDefinition: true, align: 8)
!1480 = !DIGlobalVariableExpression(var: !1481, expr: !DIExpression())
!1481 = distinct !DIGlobalVariable(name: "gpio_stm32_data_j", scope: !1184, file: !1353, line: 798, type: !1434, isLocal: true, isDefinition: true)
!1482 = !DIGlobalVariableExpression(var: !1483, expr: !DIExpression())
!1483 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_105", scope: !1184, file: !1353, line: 798, type: !1222, isLocal: true, isDefinition: true, align: 8)
!1484 = !DIGlobalVariableExpression(var: !1485, expr: !DIExpression())
!1485 = distinct !DIGlobalVariable(name: "gpio_stm32_data_k", scope: !1184, file: !1353, line: 802, type: !1434, isLocal: true, isDefinition: true)
!1486 = !DIGlobalVariableExpression(var: !1487, expr: !DIExpression())
!1487 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_106", scope: !1184, file: !1353, line: 802, type: !1222, isLocal: true, isDefinition: true, align: 8)
!1488 = !DIGlobalVariableExpression(var: !1489, expr: !DIExpression())
!1489 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1184, file: !1353, line: 656, type: !1206, isLocal: true, isDefinition: true)
!1490 = !DIGlobalVariableExpression(var: !1491, expr: !DIExpression())
!1491 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1184, file: !1353, line: 766, type: !1492, isLocal: true, isDefinition: true)
!1492 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1493)
!1493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1435, line: 224, size: 160, elements: !1494)
!1494 = !{!1495, !1496, !1497, !1498}
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1493, file: !1435, line: 226, baseType: !1277, size: 32)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1493, file: !1435, line: 228, baseType: !1040, size: 32, offset: 32)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1493, file: !1435, line: 230, baseType: !107, size: 32, offset: 64)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1493, file: !1435, line: 231, baseType: !1499, size: 64, offset: 96)
!1499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1036, line: 343, size: 64, elements: !1500)
!1500 = !{!1501, !1502}
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1499, file: !1036, line: 344, baseType: !152, size: 32)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1499, file: !1036, line: 345, baseType: !152, size: 32, offset: 32)
!1503 = !DIGlobalVariableExpression(var: !1504, expr: !DIExpression())
!1504 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1184, file: !1353, line: 770, type: !1492, isLocal: true, isDefinition: true)
!1505 = !DIGlobalVariableExpression(var: !1506, expr: !DIExpression())
!1506 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1184, file: !1353, line: 774, type: !1492, isLocal: true, isDefinition: true)
!1507 = !DIGlobalVariableExpression(var: !1508, expr: !DIExpression())
!1508 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1184, file: !1353, line: 778, type: !1492, isLocal: true, isDefinition: true)
!1509 = !DIGlobalVariableExpression(var: !1510, expr: !DIExpression())
!1510 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1184, file: !1353, line: 782, type: !1492, isLocal: true, isDefinition: true)
!1511 = !DIGlobalVariableExpression(var: !1512, expr: !DIExpression())
!1512 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1184, file: !1353, line: 786, type: !1492, isLocal: true, isDefinition: true)
!1513 = !DIGlobalVariableExpression(var: !1514, expr: !DIExpression())
!1514 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1184, file: !1353, line: 790, type: !1492, isLocal: true, isDefinition: true)
!1515 = !DIGlobalVariableExpression(var: !1516, expr: !DIExpression())
!1516 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_i", scope: !1184, file: !1353, line: 794, type: !1492, isLocal: true, isDefinition: true)
!1517 = !DIGlobalVariableExpression(var: !1518, expr: !DIExpression())
!1518 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_j", scope: !1184, file: !1353, line: 798, type: !1492, isLocal: true, isDefinition: true)
!1519 = !DIGlobalVariableExpression(var: !1520, expr: !DIExpression())
!1520 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_k", scope: !1184, file: !1353, line: 802, type: !1492, isLocal: true, isDefinition: true)
!1521 = !DIGlobalVariableExpression(var: !1522, expr: !DIExpression())
!1522 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !1523, file: !1662, line: 44, type: !1820, isLocal: false, isDefinition: true)
!1523 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1524, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1525, retainedTypes: !1558, globals: !1659, splitDebugInlining: false, nameTableKind: None)
!1524 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest")
!1525 = !{!30, !1526, !1533, !1540, !1547, !1553, !989}
!1526 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !1124, line: 47, baseType: !32, size: 32, elements: !1527)
!1527 = !{!1528, !1529, !1530, !1531, !1532}
!1528 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1529 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1530 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1531 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1532 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1533 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !1124, line: 75, baseType: !32, size: 32, elements: !1534)
!1534 = !{!1535, !1536, !1537, !1538, !1539}
!1535 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1536 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1537 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1538 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1539 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1540 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !1124, line: 92, baseType: !32, size: 32, elements: !1541)
!1541 = !{!1542, !1543, !1544, !1545, !1546}
!1542 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1543 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1544 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1545 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1546 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1547 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !1124, line: 84, baseType: !32, size: 32, elements: !1548)
!1548 = !{!1549, !1550, !1551, !1552}
!1549 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1550 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1551 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1552 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1553 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !1124, line: 107, baseType: !32, size: 32, elements: !1554)
!1554 = !{!1555, !1556, !1557}
!1555 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1556 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1557 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1558 = !{!106, !107, !1559, !196, !195, !1608, !152, !1084, !1619, !197, !566, !1658}
!1559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1560, size: 32)
!1560 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1561)
!1561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1124, line: 336, size: 160, elements: !1562)
!1562 = !{!1563, !1582, !1586, !1590, !1603}
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1561, file: !1124, line: 365, baseType: !1564, size: 32)
!1564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1565, size: 32)
!1565 = !DISubroutineType(types: !1566)
!1566 = !{!107, !1567, !1145}
!1567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1568, size: 32)
!1568 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1569)
!1569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1570)
!1570 = !{!1571, !1572, !1573, !1574, !1580, !1581}
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1569, file: !247, line: 380, baseType: !118, size: 32)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1569, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1569, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1569, file: !247, line: 386, baseType: !1575, size: 32, offset: 96)
!1575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1576, size: 32)
!1576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1577)
!1577 = !{!1578, !1579}
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1576, file: !247, line: 359, baseType: !195, size: 8)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1576, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1569, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1569, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1561, file: !1124, line: 366, baseType: !1583, size: 32, offset: 32)
!1583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1584, size: 32)
!1584 = !DISubroutineType(types: !1585)
!1585 = !{null, !1567, !196}
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1561, file: !1124, line: 374, baseType: !1587, size: 32, offset: 64)
!1587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1588, size: 32)
!1588 = !DISubroutineType(types: !1589)
!1589 = !{!107, !1567}
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1561, file: !1124, line: 377, baseType: !1591, size: 32, offset: 96)
!1591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1592, size: 32)
!1592 = !DISubroutineType(types: !1593)
!1593 = !{!107, !1567, !1594}
!1594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1595, size: 32)
!1595 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1596)
!1596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1124, line: 122, size: 64, elements: !1597)
!1597 = !{!1598, !1599, !1600, !1601, !1602}
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1596, file: !1124, line: 123, baseType: !152, size: 32)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1596, file: !1124, line: 124, baseType: !195, size: 8, offset: 32)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1596, file: !1124, line: 125, baseType: !195, size: 8, offset: 40)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1596, file: !1124, line: 126, baseType: !195, size: 8, offset: 48)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1596, file: !1124, line: 127, baseType: !195, size: 8, offset: 56)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1561, file: !1124, line: 379, baseType: !1604, size: 32, offset: 128)
!1604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1605, size: 32)
!1605 = !DISubroutineType(types: !1606)
!1606 = !{!107, !1567, !1607}
!1607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1596, size: 32)
!1608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1609, size: 32)
!1609 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !223, line: 836, baseType: !1610)
!1610 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 827, size: 224, elements: !1611)
!1611 = !{!1612, !1613, !1614, !1615, !1616, !1617, !1618}
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1610, file: !223, line: 829, baseType: !227, size: 32)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1610, file: !223, line: 830, baseType: !227, size: 32, offset: 32)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1610, file: !223, line: 831, baseType: !227, size: 32, offset: 64)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1610, file: !223, line: 832, baseType: !227, size: 32, offset: 96)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1610, file: !223, line: 833, baseType: !227, size: 32, offset: 128)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1610, file: !223, line: 834, baseType: !227, size: 32, offset: 160)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1610, file: !223, line: 835, baseType: !227, size: 32, offset: 192)
!1619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1620, size: 32)
!1620 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1621)
!1621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !990, line: 100, size: 224, elements: !1622)
!1622 = !{!1623, !1628, !1629, !1638, !1643, !1648, !1653}
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1621, file: !990, line: 101, baseType: !1624, size: 32)
!1624 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !990, line: 76, baseType: !1625)
!1625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1626, size: 32)
!1626 = !DISubroutineType(types: !1627)
!1627 = !{!107, !1567, !1084}
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1621, file: !990, line: 102, baseType: !1624, size: 32, offset: 32)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1621, file: !990, line: 103, baseType: !1630, size: 32, offset: 64)
!1630 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !990, line: 83, baseType: !1631)
!1631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1632, size: 32)
!1632 = !DISubroutineType(types: !1633)
!1633 = !{!107, !1567, !1084, !1634, !106}
!1634 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !990, line: 72, baseType: !1635)
!1635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 32)
!1636 = !DISubroutineType(types: !1637)
!1637 = !{null, !1567, !1084, !106}
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1621, file: !990, line: 104, baseType: !1639, size: 32, offset: 96)
!1639 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !990, line: 79, baseType: !1640)
!1640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1641, size: 32)
!1641 = !DISubroutineType(types: !1642)
!1642 = !{!107, !1567, !1084, !1040}
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1621, file: !990, line: 105, baseType: !1644, size: 32, offset: 128)
!1644 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !990, line: 88, baseType: !1645)
!1645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1646, size: 32)
!1646 = !DISubroutineType(types: !1647)
!1647 = !{!989, !1567, !1084}
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1621, file: !990, line: 106, baseType: !1649, size: 32, offset: 160)
!1649 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !990, line: 92, baseType: !1650)
!1650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1651, size: 32)
!1651 = !DISubroutineType(types: !1652)
!1652 = !{!107, !1567, !1084, !1110}
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1621, file: !990, line: 107, baseType: !1654, size: 32, offset: 192)
!1654 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !990, line: 96, baseType: !1655)
!1655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1656, size: 32)
!1656 = !DISubroutineType(types: !1657)
!1657 = !{!107, !1567, !1084, !106}
!1658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 32)
!1659 = !{!1521, !1660, !1666, !1668, !1675, !1677, !1679, !1681, !1683, !1685, !1687, !1689, !1691, !1693, !1695, !1697, !1699, !1701, !1703, !1705, !1707, !1709, !1753, !1756, !1758, !1761, !1764, !1766, !1772, !1774, !1776, !1778, !1780, !1782, !1784, !1786, !1788, !1790, !1792, !1794, !1796, !1798, !1800, !1802, !1804, !1806, !1808, !1810, !1812, !1814, !1816, !1818}
!1660 = !DIGlobalVariableExpression(var: !1661, expr: !DIExpression())
!1661 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_63", scope: !1523, file: !1662, line: 1914, type: !1663, isLocal: false, isDefinition: true, align: 16)
!1662 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1663 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 128, elements: !1664)
!1664 = !{!1665}
!1665 = !DISubrange(count: 8)
!1666 = !DIGlobalVariableExpression(var: !1667, expr: !DIExpression())
!1667 = distinct !DIGlobalVariable(name: "__device_dts_ord_63", scope: !1523, file: !1662, line: 1914, type: !1568, isLocal: false, isDefinition: true, align: 32)
!1668 = !DIGlobalVariableExpression(var: !1669, expr: !DIExpression())
!1669 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_63", scope: !1523, file: !1662, line: 1914, type: !1670, isLocal: true, isDefinition: true, align: 32)
!1670 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1671)
!1671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !1672)
!1672 = !{!1673, !1674}
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1671, file: !238, line: 60, baseType: !1587, size: 32)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1671, file: !238, line: 65, baseType: !1567, size: 32, offset: 32)
!1675 = !DIGlobalVariableExpression(var: !1676, expr: !DIExpression())
!1676 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_49", scope: !1523, file: !1662, line: 1914, type: !1663, isLocal: false, isDefinition: true, align: 16)
!1677 = !DIGlobalVariableExpression(var: !1678, expr: !DIExpression())
!1678 = distinct !DIGlobalVariable(name: "__device_dts_ord_49", scope: !1523, file: !1662, line: 1914, type: !1568, isLocal: false, isDefinition: true, align: 32)
!1679 = !DIGlobalVariableExpression(var: !1680, expr: !DIExpression())
!1680 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_49", scope: !1523, file: !1662, line: 1914, type: !1670, isLocal: true, isDefinition: true, align: 32)
!1681 = !DIGlobalVariableExpression(var: !1682, expr: !DIExpression())
!1682 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_52", scope: !1523, file: !1662, line: 1914, type: !1663, isLocal: false, isDefinition: true, align: 16)
!1683 = !DIGlobalVariableExpression(var: !1684, expr: !DIExpression())
!1684 = distinct !DIGlobalVariable(name: "__device_dts_ord_52", scope: !1523, file: !1662, line: 1914, type: !1568, isLocal: false, isDefinition: true, align: 32)
!1685 = !DIGlobalVariableExpression(var: !1686, expr: !DIExpression())
!1686 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_52", scope: !1523, file: !1662, line: 1914, type: !1670, isLocal: true, isDefinition: true, align: 32)
!1687 = !DIGlobalVariableExpression(var: !1688, expr: !DIExpression())
!1688 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_57", scope: !1523, file: !1662, line: 1914, type: !1663, isLocal: false, isDefinition: true, align: 16)
!1689 = !DIGlobalVariableExpression(var: !1690, expr: !DIExpression())
!1690 = distinct !DIGlobalVariable(name: "__device_dts_ord_57", scope: !1523, file: !1662, line: 1914, type: !1568, isLocal: false, isDefinition: true, align: 32)
!1691 = !DIGlobalVariableExpression(var: !1692, expr: !DIExpression())
!1692 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_57", scope: !1523, file: !1662, line: 1914, type: !1670, isLocal: true, isDefinition: true, align: 32)
!1693 = !DIGlobalVariableExpression(var: !1694, expr: !DIExpression())
!1694 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_60", scope: !1523, file: !1662, line: 1914, type: !1663, isLocal: false, isDefinition: true, align: 16)
!1695 = !DIGlobalVariableExpression(var: !1696, expr: !DIExpression())
!1696 = distinct !DIGlobalVariable(name: "__device_dts_ord_60", scope: !1523, file: !1662, line: 1914, type: !1568, isLocal: false, isDefinition: true, align: 32)
!1697 = !DIGlobalVariableExpression(var: !1698, expr: !DIExpression())
!1698 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_60", scope: !1523, file: !1662, line: 1914, type: !1670, isLocal: true, isDefinition: true, align: 32)
!1699 = !DIGlobalVariableExpression(var: !1700, expr: !DIExpression())
!1700 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_63", scope: !1523, file: !1662, line: 1914, type: !1576, isLocal: true, isDefinition: true, align: 8)
!1701 = !DIGlobalVariableExpression(var: !1702, expr: !DIExpression())
!1702 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_49", scope: !1523, file: !1662, line: 1914, type: !1576, isLocal: true, isDefinition: true, align: 8)
!1703 = !DIGlobalVariableExpression(var: !1704, expr: !DIExpression())
!1704 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_52", scope: !1523, file: !1662, line: 1914, type: !1576, isLocal: true, isDefinition: true, align: 8)
!1705 = !DIGlobalVariableExpression(var: !1706, expr: !DIExpression())
!1706 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_57", scope: !1523, file: !1662, line: 1914, type: !1576, isLocal: true, isDefinition: true, align: 8)
!1707 = !DIGlobalVariableExpression(var: !1708, expr: !DIExpression())
!1708 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_60", scope: !1523, file: !1662, line: 1914, type: !1576, isLocal: true, isDefinition: true, align: 8)
!1709 = !DIGlobalVariableExpression(var: !1710, expr: !DIExpression())
!1710 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1523, file: !1662, line: 1914, type: !1711, isLocal: true, isDefinition: true)
!1711 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1712)
!1712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1713, line: 22, size: 224, elements: !1714)
!1713 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1714 = !{!1715, !1716, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730}
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1712, file: !1713, line: 24, baseType: !1608, size: 32)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1712, file: !1713, line: 26, baseType: !1717, size: 32, offset: 32)
!1717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1718, size: 32)
!1718 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1719)
!1719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1036, line: 343, size: 64, elements: !1720)
!1720 = !{!1721, !1722}
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1719, file: !1036, line: 344, baseType: !152, size: 32)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1719, file: !1036, line: 345, baseType: !152, size: 32, offset: 32)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1712, file: !1713, line: 28, baseType: !185, size: 32, offset: 64)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1712, file: !1713, line: 30, baseType: !145, size: 8, offset: 96)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1712, file: !1713, line: 32, baseType: !107, size: 32, offset: 128)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1712, file: !1713, line: 34, baseType: !145, size: 8, offset: 160)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1712, file: !1713, line: 36, baseType: !145, size: 8, offset: 168)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1712, file: !1713, line: 38, baseType: !145, size: 8, offset: 176)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1712, file: !1713, line: 40, baseType: !145, size: 8, offset: 184)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1712, file: !1713, line: 41, baseType: !1731, size: 32, offset: 192)
!1731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1732, size: 32)
!1732 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1733)
!1733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1734, line: 60, size: 64, elements: !1735)
!1734 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1735 = !{!1736, !1752}
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1733, file: !1734, line: 69, baseType: !1737, size: 32)
!1737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1738, size: 32)
!1738 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1739)
!1739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1734, line: 50, size: 64, elements: !1740)
!1740 = !{!1741, !1750, !1751}
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1739, file: !1734, line: 52, baseType: !1742, size: 32)
!1742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1743, size: 32)
!1743 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1744)
!1744 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1745, line: 37, baseType: !1746)
!1745 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1745, line: 32, size: 64, elements: !1747)
!1747 = !{!1748, !1749}
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1746, file: !1745, line: 34, baseType: !152, size: 32)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1746, file: !1745, line: 36, baseType: !152, size: 32, offset: 32)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1739, file: !1734, line: 54, baseType: !195, size: 8, offset: 32)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1739, file: !1734, line: 56, baseType: !195, size: 8, offset: 40)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1733, file: !1734, line: 71, baseType: !195, size: 8, offset: 32)
!1753 = !DIGlobalVariableExpression(var: !1754, expr: !DIExpression())
!1754 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1523, file: !1662, line: 1914, type: !1755, isLocal: true, isDefinition: true)
!1755 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1718, size: 64, elements: !445)
!1756 = !DIGlobalVariableExpression(var: !1757, expr: !DIExpression())
!1757 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_63", scope: !1523, file: !1662, line: 1914, type: !1732, isLocal: true, isDefinition: true)
!1758 = !DIGlobalVariableExpression(var: !1759, expr: !DIExpression())
!1759 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_63", scope: !1523, file: !1662, line: 1914, type: !1760, isLocal: true, isDefinition: true)
!1760 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1738, size: 64, elements: !445)
!1761 = !DIGlobalVariableExpression(var: !1762, expr: !DIExpression())
!1762 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_63", scope: !1523, file: !1662, line: 1914, type: !1763, isLocal: true, isDefinition: true)
!1763 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1743, size: 128, elements: !340)
!1764 = !DIGlobalVariableExpression(var: !1765, expr: !DIExpression())
!1765 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1523, file: !1662, line: 1539, type: !1560, isLocal: true, isDefinition: true)
!1766 = !DIGlobalVariableExpression(var: !1767, expr: !DIExpression())
!1767 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1523, file: !1662, line: 1914, type: !1768, isLocal: true, isDefinition: true)
!1768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1713, line: 74, size: 64, elements: !1769)
!1769 = !{!1770, !1771}
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1768, file: !1713, line: 76, baseType: !152, size: 32)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1768, file: !1713, line: 78, baseType: !1567, size: 32, offset: 32)
!1772 = !DIGlobalVariableExpression(var: !1773, expr: !DIExpression())
!1773 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_1", scope: !1523, file: !1662, line: 1914, type: !1711, isLocal: true, isDefinition: true)
!1774 = !DIGlobalVariableExpression(var: !1775, expr: !DIExpression())
!1775 = distinct !DIGlobalVariable(name: "pclken_1", scope: !1523, file: !1662, line: 1914, type: !1755, isLocal: true, isDefinition: true)
!1776 = !DIGlobalVariableExpression(var: !1777, expr: !DIExpression())
!1777 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_49", scope: !1523, file: !1662, line: 1914, type: !1732, isLocal: true, isDefinition: true)
!1778 = !DIGlobalVariableExpression(var: !1779, expr: !DIExpression())
!1779 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_49", scope: !1523, file: !1662, line: 1914, type: !1760, isLocal: true, isDefinition: true)
!1780 = !DIGlobalVariableExpression(var: !1781, expr: !DIExpression())
!1781 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_49", scope: !1523, file: !1662, line: 1914, type: !1763, isLocal: true, isDefinition: true)
!1782 = !DIGlobalVariableExpression(var: !1783, expr: !DIExpression())
!1783 = distinct !DIGlobalVariable(name: "uart_stm32_data_1", scope: !1523, file: !1662, line: 1914, type: !1768, isLocal: true, isDefinition: true)
!1784 = !DIGlobalVariableExpression(var: !1785, expr: !DIExpression())
!1785 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_2", scope: !1523, file: !1662, line: 1914, type: !1711, isLocal: true, isDefinition: true)
!1786 = !DIGlobalVariableExpression(var: !1787, expr: !DIExpression())
!1787 = distinct !DIGlobalVariable(name: "pclken_2", scope: !1523, file: !1662, line: 1914, type: !1755, isLocal: true, isDefinition: true)
!1788 = !DIGlobalVariableExpression(var: !1789, expr: !DIExpression())
!1789 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_52", scope: !1523, file: !1662, line: 1914, type: !1732, isLocal: true, isDefinition: true)
!1790 = !DIGlobalVariableExpression(var: !1791, expr: !DIExpression())
!1791 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_52", scope: !1523, file: !1662, line: 1914, type: !1760, isLocal: true, isDefinition: true)
!1792 = !DIGlobalVariableExpression(var: !1793, expr: !DIExpression())
!1793 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_52", scope: !1523, file: !1662, line: 1914, type: !1763, isLocal: true, isDefinition: true)
!1794 = !DIGlobalVariableExpression(var: !1795, expr: !DIExpression())
!1795 = distinct !DIGlobalVariable(name: "uart_stm32_data_2", scope: !1523, file: !1662, line: 1914, type: !1768, isLocal: true, isDefinition: true)
!1796 = !DIGlobalVariableExpression(var: !1797, expr: !DIExpression())
!1797 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_3", scope: !1523, file: !1662, line: 1914, type: !1711, isLocal: true, isDefinition: true)
!1798 = !DIGlobalVariableExpression(var: !1799, expr: !DIExpression())
!1799 = distinct !DIGlobalVariable(name: "pclken_3", scope: !1523, file: !1662, line: 1914, type: !1755, isLocal: true, isDefinition: true)
!1800 = !DIGlobalVariableExpression(var: !1801, expr: !DIExpression())
!1801 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_57", scope: !1523, file: !1662, line: 1914, type: !1732, isLocal: true, isDefinition: true)
!1802 = !DIGlobalVariableExpression(var: !1803, expr: !DIExpression())
!1803 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_57", scope: !1523, file: !1662, line: 1914, type: !1760, isLocal: true, isDefinition: true)
!1804 = !DIGlobalVariableExpression(var: !1805, expr: !DIExpression())
!1805 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_57", scope: !1523, file: !1662, line: 1914, type: !1763, isLocal: true, isDefinition: true)
!1806 = !DIGlobalVariableExpression(var: !1807, expr: !DIExpression())
!1807 = distinct !DIGlobalVariable(name: "uart_stm32_data_3", scope: !1523, file: !1662, line: 1914, type: !1768, isLocal: true, isDefinition: true)
!1808 = !DIGlobalVariableExpression(var: !1809, expr: !DIExpression())
!1809 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_4", scope: !1523, file: !1662, line: 1914, type: !1711, isLocal: true, isDefinition: true)
!1810 = !DIGlobalVariableExpression(var: !1811, expr: !DIExpression())
!1811 = distinct !DIGlobalVariable(name: "pclken_4", scope: !1523, file: !1662, line: 1914, type: !1755, isLocal: true, isDefinition: true)
!1812 = !DIGlobalVariableExpression(var: !1813, expr: !DIExpression())
!1813 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_60", scope: !1523, file: !1662, line: 1914, type: !1732, isLocal: true, isDefinition: true)
!1814 = !DIGlobalVariableExpression(var: !1815, expr: !DIExpression())
!1815 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_60", scope: !1523, file: !1662, line: 1914, type: !1760, isLocal: true, isDefinition: true)
!1816 = !DIGlobalVariableExpression(var: !1817, expr: !DIExpression())
!1817 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_60", scope: !1523, file: !1662, line: 1914, type: !1763, isLocal: true, isDefinition: true)
!1818 = !DIGlobalVariableExpression(var: !1819, expr: !DIExpression())
!1819 = distinct !DIGlobalVariable(name: "uart_stm32_data_4", scope: !1523, file: !1662, line: 1914, type: !1768, isLocal: true, isDefinition: true)
!1820 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1821)
!1821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !203, line: 16, size: 64, elements: !1822)
!1822 = !{!1823, !1824}
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1821, file: !203, line: 17, baseType: !118, size: 32)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1821, file: !203, line: 18, baseType: !195, size: 8, offset: 32)
!1825 = !DIGlobalVariableExpression(var: !1826, expr: !DIExpression())
!1826 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1827, file: !1905, line: 65, type: !227, isLocal: true, isDefinition: true)
!1827 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1828, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1829, retainedTypes: !1830, globals: !1902, splitDebugInlining: false, nameTableKind: None)
!1828 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest")
!1829 = !{!734}
!1830 = !{!564, !1831, !906, !195, !152, !1839, !1870}
!1831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1832, size: 32)
!1832 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !463, line: 770, baseType: !1833)
!1833 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 764, size: 128, elements: !1834)
!1834 = !{!1835, !1836, !1837, !1838}
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1833, file: !463, line: 766, baseType: !227, size: 32)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1833, file: !463, line: 767, baseType: !227, size: 32, offset: 32)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1833, file: !463, line: 768, baseType: !227, size: 32, offset: 64)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1833, file: !463, line: 769, baseType: !467, size: 32, offset: 96)
!1839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1840, size: 32)
!1840 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !463, line: 426, baseType: !1841)
!1841 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 411, size: 28704, elements: !1842)
!1842 = !{!1843, !1845, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1860, !1865, !1869}
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1841, file: !463, line: 413, baseType: !1844, size: 256)
!1844 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 256, elements: !1664)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1841, file: !463, line: 414, baseType: !1846, size: 768, offset: 256)
!1846 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 768, elements: !1847)
!1847 = !{!1848}
!1848 = !DISubrange(count: 24)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1841, file: !463, line: 415, baseType: !1844, size: 256, offset: 1024)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1841, file: !463, line: 416, baseType: !1846, size: 768, offset: 1280)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1841, file: !463, line: 417, baseType: !1844, size: 256, offset: 2048)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1841, file: !463, line: 418, baseType: !1846, size: 768, offset: 2304)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1841, file: !463, line: 419, baseType: !1844, size: 256, offset: 3072)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1841, file: !463, line: 420, baseType: !1846, size: 768, offset: 3328)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1841, file: !463, line: 421, baseType: !1844, size: 256, offset: 4096)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1841, file: !463, line: 422, baseType: !1857, size: 1792, offset: 4352)
!1857 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 1792, elements: !1858)
!1858 = !{!1859}
!1859 = !DISubrange(count: 56)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1841, file: !463, line: 423, baseType: !1861, size: 1920, offset: 6144)
!1861 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1862, size: 1920, elements: !1863)
!1862 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !195)
!1863 = !{!1864}
!1864 = !DISubrange(count: 240)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1841, file: !463, line: 424, baseType: !1866, size: 20608, offset: 8064)
!1866 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 20608, elements: !1867)
!1867 = !{!1868}
!1868 = !DISubrange(count: 644)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1841, file: !463, line: 425, baseType: !227, size: 32, offset: 28672)
!1870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1871, size: 32)
!1871 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !1872)
!1872 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !1873)
!1873 = !{!1874, !1875, !1876, !1877, !1878, !1879, !1880, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1893, !1894, !1895, !1897, !1899, !1901}
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1872, file: !463, line: 447, baseType: !467, size: 32)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1872, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1872, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1872, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1872, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1872, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1872, file: !463, line: 453, baseType: !1881, size: 96, offset: 192)
!1881 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1862, size: 96, elements: !1882)
!1882 = !{!1883}
!1883 = !DISubrange(count: 12)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1872, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1872, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1872, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1872, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1872, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1872, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1872, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1872, file: !463, line: 461, baseType: !1892, size: 64, offset: 512)
!1892 = !DICompositeType(tag: DW_TAG_array_type, baseType: !467, size: 64, elements: !340)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1872, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1872, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1872, file: !463, line: 464, baseType: !1896, size: 128, offset: 640)
!1896 = !DICompositeType(tag: DW_TAG_array_type, baseType: !467, size: 128, elements: !848)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1872, file: !463, line: 465, baseType: !1898, size: 160, offset: 768)
!1898 = !DICompositeType(tag: DW_TAG_array_type, baseType: !467, size: 160, elements: !1355)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1872, file: !463, line: 466, baseType: !1900, size: 160, offset: 928)
!1900 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 160, elements: !1355)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1872, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!1902 = !{!1903, !1929, !1934, !1936, !1938, !1825}
!1903 = !DIGlobalVariableExpression(var: !1904, expr: !DIExpression())
!1904 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1827, file: !1905, line: 285, type: !1906, isLocal: true, isDefinition: true, align: 32)
!1905 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1906 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1907)
!1907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !1908)
!1908 = !{!1909, !1928}
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1907, file: !238, line: 60, baseType: !1910, size: 32)
!1910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1911, size: 32)
!1911 = !DISubroutineType(types: !1912)
!1912 = !{!107, !1913}
!1913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1914, size: 32)
!1914 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1915)
!1915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1916)
!1916 = !{!1917, !1918, !1919, !1920, !1926, !1927}
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1915, file: !247, line: 380, baseType: !118, size: 32)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1915, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1915, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1915, file: !247, line: 386, baseType: !1921, size: 32, offset: 96)
!1921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1922, size: 32)
!1922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1923)
!1923 = !{!1924, !1925}
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1922, file: !247, line: 359, baseType: !195, size: 8)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1922, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1915, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1915, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1907, file: !238, line: 65, baseType: !1913, size: 32, offset: 32)
!1929 = !DIGlobalVariableExpression(var: !1930, expr: !DIExpression())
!1930 = distinct !DIGlobalVariable(name: "lock", scope: !1827, file: !1905, line: 34, type: !1931, isLocal: true, isDefinition: true)
!1931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !1932)
!1932 = !{!1933}
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1931, file: !420, line: 52, baseType: !22, size: 32)
!1934 = !DIGlobalVariableExpression(var: !1935, expr: !DIExpression())
!1935 = distinct !DIGlobalVariable(name: "last_load", scope: !1827, file: !1905, line: 36, type: !152, isLocal: true, isDefinition: true)
!1936 = !DIGlobalVariableExpression(var: !1937, expr: !DIExpression())
!1937 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1827, file: !1905, line: 48, type: !152, isLocal: true, isDefinition: true)
!1938 = !DIGlobalVariableExpression(var: !1939, expr: !DIExpression())
!1939 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1827, file: !1905, line: 54, type: !152, isLocal: true, isDefinition: true)
!1940 = !DIGlobalVariableExpression(var: !1941, expr: !DIExpression())
!1941 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1942, file: !2024, line: 22, type: !2026, isLocal: true, isDefinition: true)
!1942 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1943, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1944, retainedTypes: !1945, globals: !2021, splitDebugInlining: false, nameTableKind: None)
!1943 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest")
!1944 = !{!1187, !1193}
!1945 = !{!1946, !2010, !2015, !1240, !1193, !1187, !2020, !106}
!1946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1947, size: 32)
!1947 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1948)
!1948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1188, line: 523, size: 288, elements: !1949)
!1949 = !{!1950, !1969, !1973, !1977, !1981, !1982, !1983, !1987, !2006}
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1948, file: !1188, line: 524, baseType: !1951, size: 32)
!1951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1952, size: 32)
!1952 = !DISubroutineType(types: !1953)
!1953 = !{!107, !1954, !1228, !1229}
!1954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1955, size: 32)
!1955 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1956)
!1956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !1957)
!1957 = !{!1958, !1959, !1960, !1961, !1967, !1968}
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1956, file: !247, line: 380, baseType: !118, size: 32)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1956, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1956, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1956, file: !247, line: 386, baseType: !1962, size: 32, offset: 96)
!1962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1963, size: 32)
!1963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !1964)
!1964 = !{!1965, !1966}
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1963, file: !247, line: 359, baseType: !195, size: 8)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1963, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1956, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1956, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1948, file: !1188, line: 530, baseType: !1970, size: 32, offset: 32)
!1970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1971, size: 32)
!1971 = !DISubroutineType(types: !1972)
!1972 = !{!107, !1954, !1234}
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1948, file: !1188, line: 532, baseType: !1974, size: 32, offset: 64)
!1974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1975, size: 32)
!1975 = !DISubroutineType(types: !1976)
!1976 = !{!107, !1954, !1240, !1235}
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1948, file: !1188, line: 535, baseType: !1978, size: 32, offset: 96)
!1978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1979, size: 32)
!1979 = !DISubroutineType(types: !1980)
!1980 = !{!107, !1954, !1240}
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1948, file: !1188, line: 537, baseType: !1978, size: 32, offset: 128)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1948, file: !1188, line: 539, baseType: !1978, size: 32, offset: 160)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1948, file: !1188, line: 541, baseType: !1984, size: 32, offset: 192)
!1984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1985, size: 32)
!1985 = !DISubroutineType(types: !1986)
!1986 = !{!107, !1954, !1228, !1187, !1193}
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1948, file: !1188, line: 544, baseType: !1988, size: 32, offset: 224)
!1988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1989, size: 32)
!1989 = !DISubroutineType(types: !1990)
!1990 = !{!107, !1954, !1991, !145}
!1991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1992, size: 32)
!1992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1188, line: 478, size: 96, elements: !1993)
!1993 = !{!1994, !2000, !2005}
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1992, file: !1188, line: 482, baseType: !1995, size: 32)
!1995 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1260, line: 33, baseType: !1996)
!1996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1260, line: 29, size: 32, elements: !1997)
!1997 = !{!1998}
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1996, file: !1260, line: 30, baseType: !1999, size: 32)
!1999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1996, size: 32)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1992, file: !1188, line: 485, baseType: !2001, size: 32, offset: 32)
!2001 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1188, line: 464, baseType: !2002)
!2002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2003, size: 32)
!2003 = !DISubroutineType(types: !2004)
!2004 = !{null, !1954, !1991, !1240}
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1992, file: !1188, line: 493, baseType: !1240, size: 32, offset: 64)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1948, file: !1188, line: 547, baseType: !2007, size: 32, offset: 256)
!2007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2008, size: 32)
!2008 = !DISubroutineType(types: !2009)
!2009 = !{!152, !1954}
!2010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2011, size: 32)
!2011 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2012)
!2012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1188, line: 428, size: 32, elements: !2013)
!2013 = !{!2014}
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !2012, file: !1188, line: 434, baseType: !1240, size: 32)
!2015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2016, size: 32)
!2016 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2017)
!2017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1188, line: 441, size: 32, elements: !2018)
!2018 = !{!2019}
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !2017, file: !1188, line: 447, baseType: !1240, size: 32)
!2020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2017, size: 32)
!2021 = !{!2022, !1940}
!2022 = !DIGlobalVariableExpression(var: !2023, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!2023 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1942, file: !2024, line: 37, type: !2025, isLocal: true, isDefinition: true)
!2024 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2025 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !185)
!2026 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2027, size: 352, elements: !2028)
!2027 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1954)
!2028 = !{!2029}
!2029 = !DISubrange(count: 11)
!2030 = !DIGlobalVariableExpression(var: !2031, expr: !DIExpression())
!2031 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !2032, file: !2074, line: 139, type: !2081, isLocal: false, isDefinition: true)
!2032 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2033, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2034, globals: !2071, splitDebugInlining: false, nameTableKind: None)
!2033 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest")
!2034 = !{!2035}
!2035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2036, size: 32)
!2036 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 677, baseType: !2037)
!2037 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 643, size: 1152, elements: !2038)
!2038 = !{!2039, !2040, !2041, !2042, !2043, !2044, !2045, !2046, !2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054, !2055, !2056, !2057, !2058, !2059, !2060, !2061, !2062, !2063, !2064, !2065, !2066, !2067, !2068, !2069, !2070}
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2037, file: !223, line: 645, baseType: !227, size: 32)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2037, file: !223, line: 646, baseType: !227, size: 32, offset: 32)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2037, file: !223, line: 647, baseType: !227, size: 32, offset: 64)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2037, file: !223, line: 648, baseType: !227, size: 32, offset: 96)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2037, file: !223, line: 649, baseType: !227, size: 32, offset: 128)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2037, file: !223, line: 650, baseType: !227, size: 32, offset: 160)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2037, file: !223, line: 651, baseType: !227, size: 32, offset: 192)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2037, file: !223, line: 652, baseType: !152, size: 32, offset: 224)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2037, file: !223, line: 653, baseType: !227, size: 32, offset: 256)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2037, file: !223, line: 654, baseType: !227, size: 32, offset: 288)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2037, file: !223, line: 655, baseType: !1012, size: 64, offset: 320)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2037, file: !223, line: 656, baseType: !227, size: 32, offset: 384)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2037, file: !223, line: 657, baseType: !227, size: 32, offset: 416)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2037, file: !223, line: 658, baseType: !227, size: 32, offset: 448)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2037, file: !223, line: 659, baseType: !152, size: 32, offset: 480)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2037, file: !223, line: 660, baseType: !227, size: 32, offset: 512)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2037, file: !223, line: 661, baseType: !227, size: 32, offset: 544)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2037, file: !223, line: 662, baseType: !1012, size: 64, offset: 576)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2037, file: !223, line: 663, baseType: !227, size: 32, offset: 640)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2037, file: !223, line: 664, baseType: !227, size: 32, offset: 672)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2037, file: !223, line: 665, baseType: !227, size: 32, offset: 704)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2037, file: !223, line: 666, baseType: !152, size: 32, offset: 736)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2037, file: !223, line: 667, baseType: !227, size: 32, offset: 768)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2037, file: !223, line: 668, baseType: !227, size: 32, offset: 800)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2037, file: !223, line: 669, baseType: !1012, size: 64, offset: 832)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2037, file: !223, line: 670, baseType: !227, size: 32, offset: 896)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2037, file: !223, line: 671, baseType: !227, size: 32, offset: 928)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2037, file: !223, line: 672, baseType: !1012, size: 64, offset: 960)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2037, file: !223, line: 673, baseType: !227, size: 32, offset: 1024)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2037, file: !223, line: 674, baseType: !227, size: 32, offset: 1056)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !2037, file: !223, line: 675, baseType: !227, size: 32, offset: 1088)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2037, file: !223, line: 676, baseType: !227, size: 32, offset: 1120)
!2071 = !{!2072, !2075, !2030}
!2072 = !DIGlobalVariableExpression(var: !2073, expr: !DIExpression())
!2073 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !2032, file: !2074, line: 137, type: !152, isLocal: false, isDefinition: true)
!2074 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2075 = !DIGlobalVariableExpression(var: !2076, expr: !DIExpression())
!2076 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !2032, file: !2074, line: 138, type: !2077, isLocal: false, isDefinition: true)
!2077 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2078, size: 128, elements: !2079)
!2078 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !195)
!2079 = !{!2080}
!2080 = !DISubrange(count: 16)
!2081 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2078, size: 64, elements: !1664)
!2082 = !DIGlobalVariableExpression(var: !2083, expr: !DIExpression())
!2083 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !2084, file: !2087, line: 23, type: !2088, isLocal: false, isDefinition: true)
!2084 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2085, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, globals: !2086, splitDebugInlining: false, nameTableKind: None)
!2085 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest")
!2086 = !{!2082}
!2087 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2088 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !107)
!2089 = !DIGlobalVariableExpression(var: !2090, expr: !DIExpression())
!2090 = distinct !DIGlobalVariable(name: "log_const_os", scope: !2091, file: !2095, line: 37, type: !2350, isLocal: false, isDefinition: true)
!2091 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2092, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2093, retainedTypes: !2102, globals: !2175, splitDebugInlining: false, nameTableKind: None)
!2092 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest")
!2093 = !{!2094, !30, !734}
!2094 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !2095, line: 63, baseType: !32, size: 32, elements: !2096)
!2095 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2096 = !{!2097, !2098, !2099, !2100, !2101}
!2097 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!2098 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!2099 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!2100 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!2101 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!2102 = !{!22, !185, !106, !107, !2103, !193, !152, !2133, !906, !195, !2158}
!2103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2104, size: 32)
!2104 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2105)
!2105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !2106, line: 51, size: 64, elements: !2107)
!2106 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2107 = !{!2108, !2128}
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !2105, file: !2106, line: 52, baseType: !2109, size: 32)
!2109 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !2106, line: 38, baseType: !2110)
!2110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2111, size: 32)
!2111 = !DISubroutineType(types: !2112)
!2112 = !{!107, !2113, !194, !197}
!2113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2114, size: 32)
!2114 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2115)
!2115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !2116)
!2116 = !{!2117, !2118, !2119, !2120, !2126, !2127}
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2115, file: !247, line: 380, baseType: !118, size: 32)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2115, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2115, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2115, file: !247, line: 386, baseType: !2121, size: 32, offset: 96)
!2121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2122, size: 32)
!2122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !2123)
!2123 = !{!2124, !2125}
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2122, file: !247, line: 359, baseType: !195, size: 8)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2122, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2115, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2115, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !2105, file: !2106, line: 53, baseType: !2129, size: 32, offset: 32)
!2129 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !2106, line: 47, baseType: !2130)
!2130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2131, size: 32)
!2131 = !DISubroutineType(types: !2132)
!2132 = !{!107, !2113, !194, !197, !152}
!2133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2134, size: 32)
!2134 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2135)
!2135 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2136)
!2136 = !{!2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2145, !2146, !2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155, !2156, !2157}
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2135, file: !463, line: 447, baseType: !467, size: 32)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2135, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2135, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2135, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2135, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2135, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2135, file: !463, line: 453, baseType: !1881, size: 96, offset: 192)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2135, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2135, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2135, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2135, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2135, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2135, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2135, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2135, file: !463, line: 461, baseType: !1892, size: 64, offset: 512)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2135, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2135, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2135, file: !463, line: 464, baseType: !1896, size: 128, offset: 640)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2135, file: !463, line: 465, baseType: !1898, size: 160, offset: 768)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2135, file: !463, line: 466, baseType: !1900, size: 160, offset: 928)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2135, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2159, size: 32)
!2159 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !463, line: 426, baseType: !2160)
!2160 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 411, size: 28704, elements: !2161)
!2161 = !{!2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169, !2170, !2171, !2172, !2173, !2174}
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2160, file: !463, line: 413, baseType: !1844, size: 256)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2160, file: !463, line: 414, baseType: !1846, size: 768, offset: 256)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2160, file: !463, line: 415, baseType: !1844, size: 256, offset: 1024)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2160, file: !463, line: 416, baseType: !1846, size: 768, offset: 1280)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2160, file: !463, line: 417, baseType: !1844, size: 256, offset: 2048)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2160, file: !463, line: 418, baseType: !1846, size: 768, offset: 2304)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2160, file: !463, line: 419, baseType: !1844, size: 256, offset: 3072)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2160, file: !463, line: 420, baseType: !1846, size: 768, offset: 3328)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2160, file: !463, line: 421, baseType: !1844, size: 256, offset: 4096)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2160, file: !463, line: 422, baseType: !1857, size: 1792, offset: 4352)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2160, file: !463, line: 423, baseType: !1861, size: 1920, offset: 6144)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2160, file: !463, line: 424, baseType: !1866, size: 20608, offset: 8064)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2160, file: !463, line: 425, baseType: !227, size: 32, offset: 28672)
!2175 = !{!2089, !2176, !2302, !2308, !2310, !2313, !2318, !2320, !2325}
!2176 = !DIGlobalVariableExpression(var: !2177, expr: !DIExpression())
!2177 = distinct !DIGlobalVariable(name: "_kernel", scope: !2091, file: !2095, line: 40, type: !2178, isLocal: false, isDefinition: true)
!2178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !345, line: 158, size: 288, elements: !2179)
!2179 = !{!2180, !2297}
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2178, file: !345, line: 159, baseType: !2181, size: 192)
!2181 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2182, size: 192, elements: !445)
!2182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !345, line: 100, size: 192, elements: !2183)
!2183 = !{!2184, !2185, !2186, !2290, !2291, !2292, !2293}
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2182, file: !345, line: 102, baseType: !152, size: 32)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2182, file: !345, line: 105, baseType: !193, size: 32, offset: 32)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2182, file: !345, line: 108, baseType: !2187, size: 32, offset: 64)
!2187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2188, size: 32)
!2188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !2189)
!2189 = !{!2190, !2248, !2260, !2261, !2262, !2263, !2264, !2270, !2285}
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2188, file: !309, line: 247, baseType: !2191, size: 384)
!2191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !2192)
!2192 = !{!2193, !2217, !2224, !2225, !2226, !2235, !2236, !2237}
!2193 = !DIDerivedType(tag: DW_TAG_member, scope: !2191, file: !309, line: 60, baseType: !2194, size: 64)
!2194 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2191, file: !309, line: 60, size: 64, elements: !2195)
!2195 = !{!2196, !2211}
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2194, file: !309, line: 61, baseType: !2197, size: 64)
!2197 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !2198)
!2198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !2199)
!2199 = !{!2200, !2206}
!2200 = !DIDerivedType(tag: DW_TAG_member, scope: !2198, file: !319, line: 38, baseType: !2201, size: 32)
!2201 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2198, file: !319, line: 38, size: 32, elements: !2202)
!2202 = !{!2203, !2205}
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2201, file: !319, line: 39, baseType: !2204, size: 32)
!2204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2198, size: 32)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2201, file: !319, line: 40, baseType: !2204, size: 32)
!2206 = !DIDerivedType(tag: DW_TAG_member, scope: !2198, file: !319, line: 42, baseType: !2207, size: 32, offset: 32)
!2207 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2198, file: !319, line: 42, size: 32, elements: !2208)
!2208 = !{!2209, !2210}
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2207, file: !319, line: 43, baseType: !2204, size: 32)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2207, file: !319, line: 44, baseType: !2204, size: 32)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2194, file: !309, line: 62, baseType: !2212, size: 64)
!2212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !2213)
!2213 = !{!2214}
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2212, file: !335, line: 50, baseType: !2215, size: 64)
!2215 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2216, size: 64, elements: !340)
!2216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2212, size: 32)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2191, file: !309, line: 68, baseType: !2218, size: 32, offset: 64)
!2218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2219, size: 32)
!2219 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !2220)
!2220 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !2221)
!2221 = !{!2222}
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2220, file: !345, line: 232, baseType: !2223, size: 64)
!2223 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !2198)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2191, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2191, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!2226 = !DIDerivedType(tag: DW_TAG_member, scope: !2191, file: !309, line: 90, baseType: !2227, size: 16, offset: 112)
!2227 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2191, file: !309, line: 90, size: 16, elements: !2228)
!2228 = !{!2229, !2234}
!2229 = !DIDerivedType(tag: DW_TAG_member, scope: !2227, file: !309, line: 91, baseType: !2230, size: 16)
!2230 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2227, file: !309, line: 91, size: 16, elements: !2231)
!2231 = !{!2232, !2233}
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2230, file: !309, line: 96, baseType: !359, size: 8)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2230, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2227, file: !309, line: 100, baseType: !197, size: 16)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2191, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2191, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2191, file: !309, line: 131, baseType: !2238, size: 192, offset: 192)
!2238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !2239)
!2239 = !{!2240, !2241, !2247}
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2238, file: !345, line: 245, baseType: !2197, size: 64)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2238, file: !345, line: 246, baseType: !2242, size: 32, offset: 64)
!2242 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !2243)
!2243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2244, size: 32)
!2244 = !DISubroutineType(types: !2245)
!2245 = !{null, !2246}
!2246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2238, size: 32)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2238, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2188, file: !309, line: 250, baseType: !2249, size: 288, offset: 384)
!2249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !2250)
!2250 = !{!2251, !2252, !2253, !2254, !2255, !2256, !2257, !2258, !2259}
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2249, file: !379, line: 26, baseType: !152, size: 32)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2249, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2249, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2249, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2249, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2249, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2249, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2249, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2249, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2188, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2188, file: !309, line: 256, baseType: !2219, size: 64, offset: 704)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2188, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2188, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2188, file: !309, line: 300, baseType: !2265, size: 96, offset: 1056)
!2265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !2266)
!2266 = !{!2267, !2268, !2269}
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2265, file: !309, line: 153, baseType: !22, size: 32)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2265, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2265, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2188, file: !309, line: 325, baseType: !2271, size: 32, offset: 1152)
!2271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2272, size: 32)
!2272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !2273)
!2273 = !{!2274, !2280, !2281}
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2272, file: !406, line: 5074, baseType: !2275, size: 96)
!2275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !2276)
!2276 = !{!2277, !2278, !2279}
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2275, file: !410, line: 57, baseType: !413, size: 32)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2275, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2275, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2272, file: !406, line: 5075, baseType: !2219, size: 64, offset: 96)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2272, file: !406, line: 5076, baseType: !2282, size: 32, offset: 160)
!2282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !2283)
!2283 = !{!2284}
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2282, file: !420, line: 52, baseType: !22, size: 32)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2188, file: !309, line: 343, baseType: !2286, size: 64, offset: 1184)
!2286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !2287)
!2287 = !{!2288, !2289}
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2286, file: !379, line: 63, baseType: !152, size: 32)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2286, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2182, file: !345, line: 111, baseType: !2187, size: 32, offset: 96)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2182, file: !345, line: 124, baseType: !107, size: 32, offset: 128)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2182, file: !345, line: 127, baseType: !195, size: 8, offset: 160)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2182, file: !345, line: 153, baseType: !2294, offset: 168)
!2294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2295, line: 33, elements: !2296)
!2295 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2296 = !{}
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2178, file: !345, line: 170, baseType: !2298, size: 96, offset: 192)
!2298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !345, line: 83, size: 96, elements: !2299)
!2299 = !{!2300, !2301}
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2298, file: !345, line: 86, baseType: !2187, size: 32)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2298, file: !345, line: 90, baseType: !2223, size: 64, offset: 32)
!2302 = !DIGlobalVariableExpression(var: !2303, expr: !DIExpression())
!2303 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !2091, file: !2095, line: 43, type: !2304, isLocal: false, isDefinition: true, align: 512)
!2304 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2305, size: 8704, elements: !580)
!2305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !577, line: 47, size: 8, elements: !2306)
!2306 = !{!2307}
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2305, file: !577, line: 48, baseType: !120, size: 8)
!2308 = !DIGlobalVariableExpression(var: !2309, expr: !DIExpression())
!2309 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !2091, file: !2095, line: 44, type: !2188, isLocal: false, isDefinition: true)
!2310 = !DIGlobalVariableExpression(var: !2311, expr: !DIExpression())
!2311 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !2091, file: !2095, line: 48, type: !2312, isLocal: false, isDefinition: true)
!2312 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2188, size: 1280, elements: !445)
!2313 = !DIGlobalVariableExpression(var: !2314, expr: !DIExpression())
!2314 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !2091, file: !2095, line: 86, type: !2315, isLocal: false, isDefinition: true, align: 512)
!2315 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2305, size: 16896, elements: !2316)
!2316 = !{!446, !2317}
!2317 = !DISubrange(count: 2112)
!2318 = !DIGlobalVariableExpression(var: !2319, expr: !DIExpression())
!2319 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !2091, file: !2095, line: 217, type: !145, isLocal: false, isDefinition: true)
!2320 = !DIGlobalVariableExpression(var: !2321, expr: !DIExpression())
!2321 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !2091, file: !2095, line: 50, type: !2322, isLocal: true, isDefinition: true, align: 512)
!2322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2305, size: 33280, elements: !2323)
!2323 = !{!446, !2324}
!2324 = !DISubrange(count: 4160)
!2325 = !DIGlobalVariableExpression(var: !2326, expr: !DIExpression())
!2326 = distinct !DIGlobalVariable(name: "levels", scope: !2327, file: !2095, line: 232, type: !2347, isLocal: true, isDefinition: true)
!2327 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !2095, file: !2095, line: 230, type: !2328, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2091, retainedNodes: !2330)
!2328 = !DISubroutineType(types: !2329)
!2329 = !{null, !2094}
!2330 = !{!2331, !2332, !2342, !2346}
!2331 = !DILocalVariable(name: "level", arg: 1, scope: !2327, file: !2095, line: 230, type: !2094)
!2332 = !DILocalVariable(name: "entry", scope: !2327, file: !2095, line: 244, type: !2333)
!2333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2334, size: 32)
!2334 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2335)
!2335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !238, line: 51, size: 64, elements: !2336)
!2336 = !{!2337, !2341}
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2335, file: !238, line: 60, baseType: !2338, size: 32)
!2338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2339, size: 32)
!2339 = !DISubroutineType(types: !2340)
!2340 = !{!107, !2113}
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2335, file: !238, line: 65, baseType: !2113, size: 32, offset: 32)
!2342 = !DILocalVariable(name: "dev", scope: !2343, file: !2095, line: 247, type: !2113)
!2343 = distinct !DILexicalBlock(scope: !2344, file: !2095, line: 246, column: 64)
!2344 = distinct !DILexicalBlock(scope: !2345, file: !2095, line: 246, column: 2)
!2345 = distinct !DILexicalBlock(scope: !2327, file: !2095, line: 246, column: 2)
!2346 = !DILocalVariable(name: "rc", scope: !2343, file: !2095, line: 248, type: !107)
!2347 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2333, size: 192, elements: !2348)
!2348 = !{!2349}
!2349 = !DISubrange(count: 6)
!2350 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2351)
!2351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !203, line: 16, size: 64, elements: !2352)
!2352 = !{!2353, !2354}
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2351, file: !203, line: 17, baseType: !118, size: 32)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2351, file: !203, line: 18, baseType: !195, size: 8, offset: 32)
!2355 = !DIGlobalVariableExpression(var: !2356, expr: !DIExpression())
!2356 = distinct !DIGlobalVariable(name: "states_str", scope: !2357, file: !2358, line: 276, type: !2482, isLocal: true, isDefinition: true)
!2357 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2358, file: !2358, line: 271, type: !2359, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !2473)
!2358 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2359 = !DISubroutineType(types: !2360)
!2360 = !{!118, !2361, !193, !185}
!2361 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !2362)
!2362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2363, size: 32)
!2363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !2364)
!2364 = !{!2365, !2423, !2435, !2436, !2437, !2438, !2439, !2445, !2460}
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2363, file: !309, line: 247, baseType: !2366, size: 384)
!2366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !2367)
!2367 = !{!2368, !2392, !2399, !2400, !2401, !2410, !2411, !2412}
!2368 = !DIDerivedType(tag: DW_TAG_member, scope: !2366, file: !309, line: 60, baseType: !2369, size: 64)
!2369 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2366, file: !309, line: 60, size: 64, elements: !2370)
!2370 = !{!2371, !2386}
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2369, file: !309, line: 61, baseType: !2372, size: 64)
!2372 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !2373)
!2373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !2374)
!2374 = !{!2375, !2381}
!2375 = !DIDerivedType(tag: DW_TAG_member, scope: !2373, file: !319, line: 38, baseType: !2376, size: 32)
!2376 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2373, file: !319, line: 38, size: 32, elements: !2377)
!2377 = !{!2378, !2380}
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2376, file: !319, line: 39, baseType: !2379, size: 32)
!2379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2373, size: 32)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2376, file: !319, line: 40, baseType: !2379, size: 32)
!2381 = !DIDerivedType(tag: DW_TAG_member, scope: !2373, file: !319, line: 42, baseType: !2382, size: 32, offset: 32)
!2382 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2373, file: !319, line: 42, size: 32, elements: !2383)
!2383 = !{!2384, !2385}
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2382, file: !319, line: 43, baseType: !2379, size: 32)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2382, file: !319, line: 44, baseType: !2379, size: 32)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2369, file: !309, line: 62, baseType: !2387, size: 64)
!2387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !2388)
!2388 = !{!2389}
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2387, file: !335, line: 50, baseType: !2390, size: 64)
!2390 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2391, size: 64, elements: !340)
!2391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2387, size: 32)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2366, file: !309, line: 68, baseType: !2393, size: 32, offset: 64)
!2393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2394, size: 32)
!2394 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !2395)
!2395 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !2396)
!2396 = !{!2397}
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2395, file: !345, line: 232, baseType: !2398, size: 64)
!2398 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !2373)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2366, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2366, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!2401 = !DIDerivedType(tag: DW_TAG_member, scope: !2366, file: !309, line: 90, baseType: !2402, size: 16, offset: 112)
!2402 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2366, file: !309, line: 90, size: 16, elements: !2403)
!2403 = !{!2404, !2409}
!2404 = !DIDerivedType(tag: DW_TAG_member, scope: !2402, file: !309, line: 91, baseType: !2405, size: 16)
!2405 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2402, file: !309, line: 91, size: 16, elements: !2406)
!2406 = !{!2407, !2408}
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2405, file: !309, line: 96, baseType: !359, size: 8)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2405, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2402, file: !309, line: 100, baseType: !197, size: 16)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2366, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2366, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2366, file: !309, line: 131, baseType: !2413, size: 192, offset: 192)
!2413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !2414)
!2414 = !{!2415, !2416, !2422}
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2413, file: !345, line: 245, baseType: !2372, size: 64)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2413, file: !345, line: 246, baseType: !2417, size: 32, offset: 64)
!2417 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !2418)
!2418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2419, size: 32)
!2419 = !DISubroutineType(types: !2420)
!2420 = !{null, !2421}
!2421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2413, size: 32)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2413, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2363, file: !309, line: 250, baseType: !2424, size: 288, offset: 384)
!2424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !2425)
!2425 = !{!2426, !2427, !2428, !2429, !2430, !2431, !2432, !2433, !2434}
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2424, file: !379, line: 26, baseType: !152, size: 32)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2424, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2424, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2424, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2424, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2424, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2424, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2424, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2424, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2363, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2363, file: !309, line: 256, baseType: !2394, size: 64, offset: 704)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2363, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2363, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2363, file: !309, line: 300, baseType: !2440, size: 96, offset: 1056)
!2440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !2441)
!2441 = !{!2442, !2443, !2444}
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2440, file: !309, line: 153, baseType: !22, size: 32)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2440, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2440, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2363, file: !309, line: 325, baseType: !2446, size: 32, offset: 1152)
!2446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2447, size: 32)
!2447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !2448)
!2448 = !{!2449, !2455, !2456}
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2447, file: !406, line: 5074, baseType: !2450, size: 96)
!2450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !2451)
!2451 = !{!2452, !2453, !2454}
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2450, file: !410, line: 57, baseType: !413, size: 32)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2450, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2450, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2447, file: !406, line: 5075, baseType: !2394, size: 64, offset: 96)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2447, file: !406, line: 5076, baseType: !2457, size: 32, offset: 160)
!2457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !2458)
!2458 = !{!2459}
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2457, file: !420, line: 52, baseType: !22, size: 32)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2363, file: !309, line: 343, baseType: !2461, size: 64, offset: 1184)
!2461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !2462)
!2462 = !{!2463, !2464}
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2461, file: !379, line: 63, baseType: !152, size: 32)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2461, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!2465 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2466, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2467, globals: !2469, splitDebugInlining: false, nameTableKind: None)
!2466 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest")
!2467 = !{!106, !118, !564, !195, !22, !107, !2468, !24, !185, !193, !152, !566}
!2468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2372, size: 32)
!2469 = !{!2355, !2470}
!2470 = !DIGlobalVariableExpression(var: !2471, expr: !DIExpression())
!2471 = distinct !DIGlobalVariable(name: "states_sz", scope: !2357, file: !2358, line: 279, type: !2472, isLocal: true, isDefinition: true)
!2472 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2025, size: 256, elements: !1664)
!2473 = !{!2474, !2475, !2476, !2477, !2478, !2479, !2480}
!2474 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2357, file: !2358, line: 271, type: !2361)
!2475 = !DILocalVariable(name: "buf", arg: 2, scope: !2357, file: !2358, line: 271, type: !193)
!2476 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2357, file: !2358, line: 271, type: !185)
!2477 = !DILocalVariable(name: "off", scope: !2357, file: !2358, line: 273, type: !185)
!2478 = !DILocalVariable(name: "bit", scope: !2357, file: !2358, line: 274, type: !195)
!2479 = !DILocalVariable(name: "thread_state", scope: !2357, file: !2358, line: 275, type: !195)
!2480 = !DILocalVariable(name: "index", scope: !2481, file: !2358, line: 293, type: !195)
!2481 = distinct !DILexicalBlock(scope: !2357, file: !2358, line: 293, column: 2)
!2482 = !DICompositeType(tag: DW_TAG_array_type, baseType: !118, size: 256, elements: !1664)
!2483 = !DIGlobalVariableExpression(var: !2484, expr: !DIExpression())
!2484 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2485, file: !2596, line: 56, type: !2583, isLocal: false, isDefinition: true)
!2485 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2486, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2487, globals: !2593, splitDebugInlining: false, nameTableKind: None)
!2486 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest")
!2487 = !{!2488, !193, !106, !2591, !194, !564, !906, !107, !152, !566, !2592}
!2488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2489, size: 32)
!2489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !2490)
!2490 = !{!2491, !2549, !2561, !2562, !2563, !2564, !2565, !2571, !2586}
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2489, file: !309, line: 247, baseType: !2492, size: 384)
!2492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !2493)
!2493 = !{!2494, !2518, !2525, !2526, !2527, !2536, !2537, !2538}
!2494 = !DIDerivedType(tag: DW_TAG_member, scope: !2492, file: !309, line: 60, baseType: !2495, size: 64)
!2495 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2492, file: !309, line: 60, size: 64, elements: !2496)
!2496 = !{!2497, !2512}
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2495, file: !309, line: 61, baseType: !2498, size: 64)
!2498 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !2499)
!2499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !2500)
!2500 = !{!2501, !2507}
!2501 = !DIDerivedType(tag: DW_TAG_member, scope: !2499, file: !319, line: 38, baseType: !2502, size: 32)
!2502 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2499, file: !319, line: 38, size: 32, elements: !2503)
!2503 = !{!2504, !2506}
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2502, file: !319, line: 39, baseType: !2505, size: 32)
!2505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2499, size: 32)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2502, file: !319, line: 40, baseType: !2505, size: 32)
!2507 = !DIDerivedType(tag: DW_TAG_member, scope: !2499, file: !319, line: 42, baseType: !2508, size: 32, offset: 32)
!2508 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2499, file: !319, line: 42, size: 32, elements: !2509)
!2509 = !{!2510, !2511}
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2508, file: !319, line: 43, baseType: !2505, size: 32)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2508, file: !319, line: 44, baseType: !2505, size: 32)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2495, file: !309, line: 62, baseType: !2513, size: 64)
!2513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !2514)
!2514 = !{!2515}
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2513, file: !335, line: 50, baseType: !2516, size: 64)
!2516 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2517, size: 64, elements: !340)
!2517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2513, size: 32)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2492, file: !309, line: 68, baseType: !2519, size: 32, offset: 64)
!2519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2520, size: 32)
!2520 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !2521)
!2521 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !2522)
!2522 = !{!2523}
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2521, file: !345, line: 232, baseType: !2524, size: 64)
!2524 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !2499)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2492, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2492, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!2527 = !DIDerivedType(tag: DW_TAG_member, scope: !2492, file: !309, line: 90, baseType: !2528, size: 16, offset: 112)
!2528 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2492, file: !309, line: 90, size: 16, elements: !2529)
!2529 = !{!2530, !2535}
!2530 = !DIDerivedType(tag: DW_TAG_member, scope: !2528, file: !309, line: 91, baseType: !2531, size: 16)
!2531 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2528, file: !309, line: 91, size: 16, elements: !2532)
!2532 = !{!2533, !2534}
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2531, file: !309, line: 96, baseType: !359, size: 8)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2531, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2528, file: !309, line: 100, baseType: !197, size: 16)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2492, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2492, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2492, file: !309, line: 131, baseType: !2539, size: 192, offset: 192)
!2539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !2540)
!2540 = !{!2541, !2542, !2548}
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2539, file: !345, line: 245, baseType: !2498, size: 64)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2539, file: !345, line: 246, baseType: !2543, size: 32, offset: 64)
!2543 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !2544)
!2544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2545, size: 32)
!2545 = !DISubroutineType(types: !2546)
!2546 = !{null, !2547}
!2547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2539, size: 32)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2539, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2489, file: !309, line: 250, baseType: !2550, size: 288, offset: 384)
!2550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !2551)
!2551 = !{!2552, !2553, !2554, !2555, !2556, !2557, !2558, !2559, !2560}
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2550, file: !379, line: 26, baseType: !152, size: 32)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2550, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2550, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2550, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2550, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2550, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2550, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2550, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2550, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2489, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2489, file: !309, line: 256, baseType: !2520, size: 64, offset: 704)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2489, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2489, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2489, file: !309, line: 300, baseType: !2566, size: 96, offset: 1056)
!2566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !2567)
!2567 = !{!2568, !2569, !2570}
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2566, file: !309, line: 153, baseType: !22, size: 32)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2566, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2566, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2489, file: !309, line: 325, baseType: !2572, size: 32, offset: 1152)
!2572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2573, size: 32)
!2573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !2574)
!2574 = !{!2575, !2581, !2582}
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2573, file: !406, line: 5074, baseType: !2576, size: 96)
!2576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !2577)
!2577 = !{!2578, !2579, !2580}
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2576, file: !410, line: 57, baseType: !413, size: 32)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2576, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2576, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2573, file: !406, line: 5075, baseType: !2520, size: 64, offset: 96)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2573, file: !406, line: 5076, baseType: !2583, size: 32, offset: 160)
!2583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !2584)
!2584 = !{!2585}
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2583, file: !420, line: 52, baseType: !22, size: 32)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2489, file: !309, line: 343, baseType: !2587, size: 64, offset: 1184)
!2587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !2588)
!2588 = !{!2589, !2590}
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2587, file: !379, line: 63, baseType: !152, size: 32)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2587, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!2591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2517, size: 32)
!2592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2498, size: 32)
!2593 = !{!2483, !2594, !2597, !2599}
!2594 = !DIGlobalVariableExpression(var: !2595, expr: !DIExpression())
!2595 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2485, file: !2596, line: 404, type: !107, isLocal: true, isDefinition: true)
!2596 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2597 = !DIGlobalVariableExpression(var: !2598, expr: !DIExpression())
!2598 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2485, file: !2596, line: 405, type: !107, isLocal: true, isDefinition: true)
!2599 = !DIGlobalVariableExpression(var: !2600, expr: !DIExpression())
!2600 = distinct !DIGlobalVariable(name: "pending_current", scope: !2485, file: !2596, line: 425, type: !2488, isLocal: true, isDefinition: true)
!2601 = !DIGlobalVariableExpression(var: !2602, expr: !DIExpression())
!2602 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2603, file: !2633, line: 19, type: !2639, isLocal: true, isDefinition: true)
!2603 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2604, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2605, globals: !2630, splitDebugInlining: false, nameTableKind: None)
!2604 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest")
!2605 = !{!564, !106, !906, !152, !566, !107, !2606, !193, !376}
!2606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2607, size: 32)
!2607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !2608)
!2608 = !{!2609, !2624, !2629}
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2607, file: !345, line: 245, baseType: !2610, size: 64)
!2610 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !2611)
!2611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !2612)
!2612 = !{!2613, !2619}
!2613 = !DIDerivedType(tag: DW_TAG_member, scope: !2611, file: !319, line: 38, baseType: !2614, size: 32)
!2614 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2611, file: !319, line: 38, size: 32, elements: !2615)
!2615 = !{!2616, !2618}
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2614, file: !319, line: 39, baseType: !2617, size: 32)
!2617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2611, size: 32)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2614, file: !319, line: 40, baseType: !2617, size: 32)
!2619 = !DIDerivedType(tag: DW_TAG_member, scope: !2611, file: !319, line: 42, baseType: !2620, size: 32, offset: 32)
!2620 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2611, file: !319, line: 42, size: 32, elements: !2621)
!2621 = !{!2622, !2623}
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2620, file: !319, line: 43, baseType: !2617, size: 32)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2620, file: !319, line: 44, baseType: !2617, size: 32)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2607, file: !345, line: 246, baseType: !2625, size: 32, offset: 64)
!2625 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !2626)
!2626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2627, size: 32)
!2627 = !DISubroutineType(types: !2628)
!2628 = !{null, !2606}
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2607, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!2630 = !{!2631, !2601, !2634, !2636}
!2631 = !DIGlobalVariableExpression(var: !2632, expr: !DIExpression())
!2632 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2603, file: !2633, line: 15, type: !566, isLocal: true, isDefinition: true)
!2633 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2634 = !DIGlobalVariableExpression(var: !2635, expr: !DIExpression())
!2635 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2603, file: !2633, line: 25, type: !107, isLocal: true, isDefinition: true)
!2636 = !DIGlobalVariableExpression(var: !2637, expr: !DIExpression())
!2637 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2603, file: !2633, line: 17, type: !2638, isLocal: true, isDefinition: true)
!2638 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !2611)
!2639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !2640)
!2640 = !{!2641}
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2639, file: !420, line: 52, baseType: !22, size: 32)
!2642 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2643, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2643 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest")
!2644 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2645, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2645 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest")
!2646 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2647, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2648, retainedTypes: !2668, splitDebugInlining: false, nameTableKind: None)
!2647 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest")
!2648 = !{!2649, !2657}
!2649 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2650, line: 69, baseType: !32, size: 32, elements: !2651)
!2650 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2651 = !{!2652, !2653, !2654, !2655, !2656}
!2652 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2653 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2654 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2655 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2656 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2657 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2650, line: 56, baseType: !32, size: 32, elements: !2658)
!2658 = !{!2659, !2660, !2661, !2662, !2663, !2664, !2665, !2666, !2667}
!2659 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2660 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2661 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2662 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2663 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2664 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2665 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2666 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2667 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2668 = !{!107, !2649, !2657, !2669, !360, !264, !2671, !2672, !196, !198, !118, !185, !106, !22, !32, !187, !2674, !2675, !189, !188, !191, !190, !2670, !2676, !2677, !2678, !2679}
!2669 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2650, line: 31, baseType: !2670)
!2670 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !191)
!2671 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !186, line: 329, baseType: !32)
!2672 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2650, line: 32, baseType: !2673)
!2673 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !567)
!2674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !360, size: 32)
!2675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !264, size: 32)
!2676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2670, size: 32)
!2677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 32)
!2678 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !186, line: 145, baseType: !107)
!2679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2678, size: 32)
!2680 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2681, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2681 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest")
!2682 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2683, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2683 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest")
!2684 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2685, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2686, splitDebugInlining: false, nameTableKind: None)
!2685 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest")
!2686 = !{!118, !196, !107, !32}
!2687 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2688, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2689, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2688 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest")
!2689 = !{!2690, !30}
!2690 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2691, line: 27, baseType: !32, size: 32, elements: !2692)
!2691 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2692 = !{!2693, !2694, !2695, !2696, !2697}
!2693 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2694 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2695 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2696 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2697 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2698 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2699, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2700, retainedTypes: !2701, splitDebugInlining: false, nameTableKind: None)
!2699 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest")
!2700 = !{!734, !2690, !30}
!2701 = !{!932, !2702, !106, !107, !906, !152, !195, !2719}
!2702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2703, size: 32)
!2703 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !463, line: 426, baseType: !2704)
!2704 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 411, size: 28704, elements: !2705)
!2705 = !{!2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717, !2718}
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2704, file: !463, line: 413, baseType: !1844, size: 256)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2704, file: !463, line: 414, baseType: !1846, size: 768, offset: 256)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2704, file: !463, line: 415, baseType: !1844, size: 256, offset: 1024)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2704, file: !463, line: 416, baseType: !1846, size: 768, offset: 1280)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2704, file: !463, line: 417, baseType: !1844, size: 256, offset: 2048)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2704, file: !463, line: 418, baseType: !1846, size: 768, offset: 2304)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2704, file: !463, line: 419, baseType: !1844, size: 256, offset: 3072)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2704, file: !463, line: 420, baseType: !1846, size: 768, offset: 3328)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2704, file: !463, line: 421, baseType: !1844, size: 256, offset: 4096)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2704, file: !463, line: 422, baseType: !1857, size: 1792, offset: 4352)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2704, file: !463, line: 423, baseType: !1861, size: 1920, offset: 6144)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2704, file: !463, line: 424, baseType: !1866, size: 20608, offset: 8064)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2704, file: !463, line: 425, baseType: !227, size: 32, offset: 28672)
!2719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2720, size: 32)
!2720 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2721)
!2721 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2722)
!2722 = !{!2723, !2724, !2725, !2726, !2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741, !2742, !2743}
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2721, file: !463, line: 447, baseType: !467, size: 32)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2721, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2721, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2721, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2721, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2721, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2721, file: !463, line: 453, baseType: !1881, size: 96, offset: 192)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2721, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2721, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2721, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2721, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2721, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2721, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2721, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2721, file: !463, line: 461, baseType: !1892, size: 64, offset: 512)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2721, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2721, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2721, file: !463, line: 464, baseType: !1896, size: 128, offset: 640)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2721, file: !463, line: 465, baseType: !1898, size: 160, offset: 768)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2721, file: !463, line: 466, baseType: !1900, size: 160, offset: 928)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2721, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2744 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2745, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2745 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest")
!2746 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2747, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2748, splitDebugInlining: false, nameTableKind: None)
!2747 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest")
!2748 = !{!106, !107, !22, !2749}
!2749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2750, size: 32)
!2750 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2751)
!2751 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2752)
!2752 = !{!2753, !2754, !2755, !2756, !2757, !2758, !2759, !2760, !2761, !2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769, !2770, !2771, !2772, !2773}
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2751, file: !463, line: 447, baseType: !467, size: 32)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2751, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2751, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2751, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2751, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2751, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2751, file: !463, line: 453, baseType: !1881, size: 96, offset: 192)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2751, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2751, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2751, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2751, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2751, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2751, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2751, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2751, file: !463, line: 461, baseType: !1892, size: 64, offset: 512)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2751, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2751, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2751, file: !463, line: 464, baseType: !1896, size: 128, offset: 640)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2751, file: !463, line: 465, baseType: !1898, size: 160, offset: 768)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2751, file: !463, line: 466, baseType: !1900, size: 160, offset: 928)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2751, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2774 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2775, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2776, splitDebugInlining: false, nameTableKind: None)
!2775 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest")
!2776 = !{!2777, !106, !107}
!2777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2778, size: 32)
!2778 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2779)
!2779 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2780)
!2780 = !{!2781, !2782, !2783, !2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801}
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2779, file: !463, line: 447, baseType: !467, size: 32)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2779, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2779, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2779, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2779, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2779, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2779, file: !463, line: 453, baseType: !1881, size: 96, offset: 192)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2779, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2779, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2779, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2779, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2779, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2779, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2779, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2779, file: !463, line: 461, baseType: !1892, size: 64, offset: 512)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2779, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2779, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2779, file: !463, line: 464, baseType: !1896, size: 128, offset: 640)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2779, file: !463, line: 465, baseType: !1898, size: 160, offset: 768)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2779, file: !463, line: 466, baseType: !1900, size: 160, offset: 928)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2779, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2802 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2803, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2804, splitDebugInlining: false, nameTableKind: None)
!2803 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest")
!2804 = !{!2805, !152, !106, !107}
!2805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2806, size: 32)
!2806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2807, line: 98, size: 256, elements: !2808)
!2807 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2808 = !{!2809, !2814, !2819, !2824, !2829, !2834, !2839, !2844}
!2809 = !DIDerivedType(tag: DW_TAG_member, scope: !2806, file: !2807, line: 99, baseType: !2810, size: 32)
!2810 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2806, file: !2807, line: 99, size: 32, elements: !2811)
!2811 = !{!2812, !2813}
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2810, file: !2807, line: 99, baseType: !152, size: 32)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2810, file: !2807, line: 99, baseType: !152, size: 32)
!2814 = !DIDerivedType(tag: DW_TAG_member, scope: !2806, file: !2807, line: 100, baseType: !2815, size: 32, offset: 32)
!2815 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2806, file: !2807, line: 100, size: 32, elements: !2816)
!2816 = !{!2817, !2818}
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2815, file: !2807, line: 100, baseType: !152, size: 32)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2815, file: !2807, line: 100, baseType: !152, size: 32)
!2819 = !DIDerivedType(tag: DW_TAG_member, scope: !2806, file: !2807, line: 101, baseType: !2820, size: 32, offset: 64)
!2820 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2806, file: !2807, line: 101, size: 32, elements: !2821)
!2821 = !{!2822, !2823}
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2820, file: !2807, line: 101, baseType: !152, size: 32)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2820, file: !2807, line: 101, baseType: !152, size: 32)
!2824 = !DIDerivedType(tag: DW_TAG_member, scope: !2806, file: !2807, line: 102, baseType: !2825, size: 32, offset: 96)
!2825 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2806, file: !2807, line: 102, size: 32, elements: !2826)
!2826 = !{!2827, !2828}
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2825, file: !2807, line: 102, baseType: !152, size: 32)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2825, file: !2807, line: 102, baseType: !152, size: 32)
!2829 = !DIDerivedType(tag: DW_TAG_member, scope: !2806, file: !2807, line: 103, baseType: !2830, size: 32, offset: 128)
!2830 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2806, file: !2807, line: 103, size: 32, elements: !2831)
!2831 = !{!2832, !2833}
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2830, file: !2807, line: 103, baseType: !152, size: 32)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2830, file: !2807, line: 103, baseType: !152, size: 32)
!2834 = !DIDerivedType(tag: DW_TAG_member, scope: !2806, file: !2807, line: 104, baseType: !2835, size: 32, offset: 160)
!2835 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2806, file: !2807, line: 104, size: 32, elements: !2836)
!2836 = !{!2837, !2838}
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2835, file: !2807, line: 104, baseType: !152, size: 32)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2835, file: !2807, line: 104, baseType: !152, size: 32)
!2839 = !DIDerivedType(tag: DW_TAG_member, scope: !2806, file: !2807, line: 105, baseType: !2840, size: 32, offset: 192)
!2840 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2806, file: !2807, line: 105, size: 32, elements: !2841)
!2841 = !{!2842, !2843}
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2840, file: !2807, line: 105, baseType: !152, size: 32)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2840, file: !2807, line: 105, baseType: !152, size: 32)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2806, file: !2807, line: 106, baseType: !152, size: 32, offset: 224)
!2845 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2846, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2689, retainedTypes: !2847, splitDebugInlining: false, nameTableKind: None)
!2846 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest")
!2847 = !{!2848, !106, !107, !2873, !2916, !152}
!2848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2849, size: 32)
!2849 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2850)
!2850 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2851)
!2851 = !{!2852, !2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871, !2872}
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2850, file: !463, line: 447, baseType: !467, size: 32)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2850, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2850, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2850, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2850, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2850, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2850, file: !463, line: 453, baseType: !1881, size: 96, offset: 192)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2850, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2850, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2850, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2850, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2850, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2850, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2850, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2850, file: !463, line: 461, baseType: !1892, size: 64, offset: 512)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2850, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2850, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2850, file: !463, line: 464, baseType: !1896, size: 128, offset: 640)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2850, file: !463, line: 465, baseType: !1898, size: 160, offset: 768)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2850, file: !463, line: 466, baseType: !1900, size: 160, offset: 928)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2850, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2874, size: 32)
!2874 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2807, line: 141, baseType: !2875)
!2875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2807, line: 97, size: 256, elements: !2876)
!2876 = !{!2877}
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2875, file: !2807, line: 107, baseType: !2878, size: 256)
!2878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2807, line: 98, size: 256, elements: !2879)
!2879 = !{!2880, !2885, !2890, !2895, !2900, !2905, !2910, !2915}
!2880 = !DIDerivedType(tag: DW_TAG_member, scope: !2878, file: !2807, line: 99, baseType: !2881, size: 32)
!2881 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2878, file: !2807, line: 99, size: 32, elements: !2882)
!2882 = !{!2883, !2884}
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2881, file: !2807, line: 99, baseType: !152, size: 32)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2881, file: !2807, line: 99, baseType: !152, size: 32)
!2885 = !DIDerivedType(tag: DW_TAG_member, scope: !2878, file: !2807, line: 100, baseType: !2886, size: 32, offset: 32)
!2886 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2878, file: !2807, line: 100, size: 32, elements: !2887)
!2887 = !{!2888, !2889}
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2886, file: !2807, line: 100, baseType: !152, size: 32)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2886, file: !2807, line: 100, baseType: !152, size: 32)
!2890 = !DIDerivedType(tag: DW_TAG_member, scope: !2878, file: !2807, line: 101, baseType: !2891, size: 32, offset: 64)
!2891 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2878, file: !2807, line: 101, size: 32, elements: !2892)
!2892 = !{!2893, !2894}
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2891, file: !2807, line: 101, baseType: !152, size: 32)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2891, file: !2807, line: 101, baseType: !152, size: 32)
!2895 = !DIDerivedType(tag: DW_TAG_member, scope: !2878, file: !2807, line: 102, baseType: !2896, size: 32, offset: 96)
!2896 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2878, file: !2807, line: 102, size: 32, elements: !2897)
!2897 = !{!2898, !2899}
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2896, file: !2807, line: 102, baseType: !152, size: 32)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2896, file: !2807, line: 102, baseType: !152, size: 32)
!2900 = !DIDerivedType(tag: DW_TAG_member, scope: !2878, file: !2807, line: 103, baseType: !2901, size: 32, offset: 128)
!2901 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2878, file: !2807, line: 103, size: 32, elements: !2902)
!2902 = !{!2903, !2904}
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2901, file: !2807, line: 103, baseType: !152, size: 32)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2901, file: !2807, line: 103, baseType: !152, size: 32)
!2905 = !DIDerivedType(tag: DW_TAG_member, scope: !2878, file: !2807, line: 104, baseType: !2906, size: 32, offset: 160)
!2906 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2878, file: !2807, line: 104, size: 32, elements: !2907)
!2907 = !{!2908, !2909}
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2906, file: !2807, line: 104, baseType: !152, size: 32)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2906, file: !2807, line: 104, baseType: !152, size: 32)
!2910 = !DIDerivedType(tag: DW_TAG_member, scope: !2878, file: !2807, line: 105, baseType: !2911, size: 32, offset: 192)
!2911 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2878, file: !2807, line: 105, size: 32, elements: !2912)
!2912 = !{!2913, !2914}
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2911, file: !2807, line: 105, baseType: !152, size: 32)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2911, file: !2807, line: 105, baseType: !152, size: 32)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2878, file: !2807, line: 106, baseType: !152, size: 32, offset: 224)
!2916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !197, size: 32)
!2917 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2918, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1829, retainedTypes: !2919, splitDebugInlining: false, nameTableKind: None)
!2918 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest")
!2919 = !{!932, !906, !195, !152, !2920, !2937}
!2920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2921, size: 32)
!2921 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !463, line: 426, baseType: !2922)
!2922 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 411, size: 28704, elements: !2923)
!2923 = !{!2924, !2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933, !2934, !2935, !2936}
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2922, file: !463, line: 413, baseType: !1844, size: 256)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2922, file: !463, line: 414, baseType: !1846, size: 768, offset: 256)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2922, file: !463, line: 415, baseType: !1844, size: 256, offset: 1024)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2922, file: !463, line: 416, baseType: !1846, size: 768, offset: 1280)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2922, file: !463, line: 417, baseType: !1844, size: 256, offset: 2048)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2922, file: !463, line: 418, baseType: !1846, size: 768, offset: 2304)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2922, file: !463, line: 419, baseType: !1844, size: 256, offset: 3072)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2922, file: !463, line: 420, baseType: !1846, size: 768, offset: 3328)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2922, file: !463, line: 421, baseType: !1844, size: 256, offset: 4096)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2922, file: !463, line: 422, baseType: !1857, size: 1792, offset: 4352)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2922, file: !463, line: 423, baseType: !1861, size: 1920, offset: 6144)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2922, file: !463, line: 424, baseType: !1866, size: 20608, offset: 8064)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2922, file: !463, line: 425, baseType: !227, size: 32, offset: 28672)
!2937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2938, size: 32)
!2938 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2939)
!2939 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2940)
!2940 = !{!2941, !2942, !2943, !2944, !2945, !2946, !2947, !2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961}
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2939, file: !463, line: 447, baseType: !467, size: 32)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2939, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2939, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2939, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2939, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2939, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2939, file: !463, line: 453, baseType: !1881, size: 96, offset: 192)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2939, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2939, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2939, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2939, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2939, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2939, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2939, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2939, file: !463, line: 461, baseType: !1892, size: 64, offset: 512)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2939, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2939, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2939, file: !463, line: 464, baseType: !1896, size: 128, offset: 640)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2939, file: !463, line: 465, baseType: !1898, size: 160, offset: 768)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2939, file: !463, line: 466, baseType: !1900, size: 160, offset: 928)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2939, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2962 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2963, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2964, splitDebugInlining: false, nameTableKind: None)
!2963 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest")
!2964 = !{!2965, !106, !107}
!2965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2966, size: 32)
!2966 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !463, line: 468, baseType: !2967)
!2967 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 445, size: 1120, elements: !2968)
!2968 = !{!2969, !2970, !2971, !2972, !2973, !2974, !2975, !2976, !2977, !2978, !2979, !2980, !2981, !2982, !2983, !2984, !2985, !2986, !2987, !2988, !2989}
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2967, file: !463, line: 447, baseType: !467, size: 32)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2967, file: !463, line: 448, baseType: !227, size: 32, offset: 32)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2967, file: !463, line: 449, baseType: !227, size: 32, offset: 64)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2967, file: !463, line: 450, baseType: !227, size: 32, offset: 96)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2967, file: !463, line: 451, baseType: !227, size: 32, offset: 128)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2967, file: !463, line: 452, baseType: !227, size: 32, offset: 160)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2967, file: !463, line: 453, baseType: !1881, size: 96, offset: 192)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2967, file: !463, line: 454, baseType: !227, size: 32, offset: 288)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2967, file: !463, line: 455, baseType: !227, size: 32, offset: 320)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2967, file: !463, line: 456, baseType: !227, size: 32, offset: 352)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2967, file: !463, line: 457, baseType: !227, size: 32, offset: 384)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2967, file: !463, line: 458, baseType: !227, size: 32, offset: 416)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2967, file: !463, line: 459, baseType: !227, size: 32, offset: 448)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2967, file: !463, line: 460, baseType: !227, size: 32, offset: 480)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2967, file: !463, line: 461, baseType: !1892, size: 64, offset: 512)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2967, file: !463, line: 462, baseType: !467, size: 32, offset: 576)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2967, file: !463, line: 463, baseType: !467, size: 32, offset: 608)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2967, file: !463, line: 464, baseType: !1896, size: 128, offset: 640)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2967, file: !463, line: 465, baseType: !1898, size: 160, offset: 768)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2967, file: !463, line: 466, baseType: !1900, size: 160, offset: 928)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2967, file: !463, line: 467, baseType: !227, size: 32, offset: 1088)
!2990 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2991, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2992, splitDebugInlining: false, nameTableKind: None)
!2991 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest")
!2992 = !{!120, !193, !185, !1145, !2993, !196, !106}
!2993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2994, size: 32)
!2994 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !196)
!2995 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2996, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2997, splitDebugInlining: false, nameTableKind: None)
!2996 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest")
!2997 = !{!2998}
!2998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2999, size: 32)
!2999 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 677, baseType: !3000)
!3000 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 643, size: 1152, elements: !3001)
!3001 = !{!3002, !3003, !3004, !3005, !3006, !3007, !3008, !3009, !3010, !3011, !3012, !3013, !3014, !3015, !3016, !3017, !3018, !3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033}
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3000, file: !223, line: 645, baseType: !227, size: 32)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3000, file: !223, line: 646, baseType: !227, size: 32, offset: 32)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3000, file: !223, line: 647, baseType: !227, size: 32, offset: 64)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3000, file: !223, line: 648, baseType: !227, size: 32, offset: 96)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3000, file: !223, line: 649, baseType: !227, size: 32, offset: 128)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3000, file: !223, line: 650, baseType: !227, size: 32, offset: 160)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3000, file: !223, line: 651, baseType: !227, size: 32, offset: 192)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3000, file: !223, line: 652, baseType: !152, size: 32, offset: 224)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3000, file: !223, line: 653, baseType: !227, size: 32, offset: 256)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3000, file: !223, line: 654, baseType: !227, size: 32, offset: 288)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3000, file: !223, line: 655, baseType: !1012, size: 64, offset: 320)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3000, file: !223, line: 656, baseType: !227, size: 32, offset: 384)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3000, file: !223, line: 657, baseType: !227, size: 32, offset: 416)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3000, file: !223, line: 658, baseType: !227, size: 32, offset: 448)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3000, file: !223, line: 659, baseType: !152, size: 32, offset: 480)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3000, file: !223, line: 660, baseType: !227, size: 32, offset: 512)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3000, file: !223, line: 661, baseType: !227, size: 32, offset: 544)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3000, file: !223, line: 662, baseType: !1012, size: 64, offset: 576)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3000, file: !223, line: 663, baseType: !227, size: 32, offset: 640)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3000, file: !223, line: 664, baseType: !227, size: 32, offset: 672)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3000, file: !223, line: 665, baseType: !227, size: 32, offset: 704)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3000, file: !223, line: 666, baseType: !152, size: 32, offset: 736)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3000, file: !223, line: 667, baseType: !227, size: 32, offset: 768)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3000, file: !223, line: 668, baseType: !227, size: 32, offset: 800)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3000, file: !223, line: 669, baseType: !1012, size: 64, offset: 832)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3000, file: !223, line: 670, baseType: !227, size: 32, offset: 896)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3000, file: !223, line: 671, baseType: !227, size: 32, offset: 928)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3000, file: !223, line: 672, baseType: !1012, size: 64, offset: 960)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3000, file: !223, line: 673, baseType: !227, size: 32, offset: 1024)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3000, file: !223, line: 674, baseType: !227, size: 32, offset: 1056)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !3000, file: !223, line: 675, baseType: !227, size: 32, offset: 1088)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3000, file: !223, line: 676, baseType: !227, size: 32, offset: 1120)
!3034 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3035, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3035 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest")
!3036 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3037, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3038, retainedTypes: !3054, splitDebugInlining: false, nameTableKind: None)
!3037 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest")
!3038 = !{!3039, !3046, !3050}
!3039 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3040, line: 38, baseType: !32, size: 32, elements: !3041)
!3040 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3041 = !{!3042, !3043, !3044, !3045}
!3042 = !DIEnumerator(name: "HAL_OK", value: 0)
!3043 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!3044 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!3045 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!3046 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !985, line: 184, baseType: !32, size: 32, elements: !3047)
!3047 = !{!3048, !3049}
!3048 = !DIEnumerator(name: "RESET", value: 0)
!3049 = !DIEnumerator(name: "SET", value: 1)
!3050 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !985, line: 190, baseType: !32, size: 32, elements: !3051)
!3051 = !{!3052, !3053}
!3052 = !DIEnumerator(name: "DISABLE", value: 0)
!3053 = !DIEnumerator(name: "ENABLE", value: 1)
!3054 = !{!106, !3055, !195, !152, !1658, !3091, !3097, !3108, !197, !3109, !566}
!3055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3056, size: 32)
!3056 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 677, baseType: !3057)
!3057 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 643, size: 1152, elements: !3058)
!3058 = !{!3059, !3060, !3061, !3062, !3063, !3064, !3065, !3066, !3067, !3068, !3069, !3070, !3071, !3072, !3073, !3074, !3075, !3076, !3077, !3078, !3079, !3080, !3081, !3082, !3083, !3084, !3085, !3086, !3087, !3088, !3089, !3090}
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3057, file: !223, line: 645, baseType: !227, size: 32)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3057, file: !223, line: 646, baseType: !227, size: 32, offset: 32)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3057, file: !223, line: 647, baseType: !227, size: 32, offset: 64)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3057, file: !223, line: 648, baseType: !227, size: 32, offset: 96)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3057, file: !223, line: 649, baseType: !227, size: 32, offset: 128)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3057, file: !223, line: 650, baseType: !227, size: 32, offset: 160)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3057, file: !223, line: 651, baseType: !227, size: 32, offset: 192)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3057, file: !223, line: 652, baseType: !152, size: 32, offset: 224)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3057, file: !223, line: 653, baseType: !227, size: 32, offset: 256)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3057, file: !223, line: 654, baseType: !227, size: 32, offset: 288)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3057, file: !223, line: 655, baseType: !1012, size: 64, offset: 320)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3057, file: !223, line: 656, baseType: !227, size: 32, offset: 384)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3057, file: !223, line: 657, baseType: !227, size: 32, offset: 416)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3057, file: !223, line: 658, baseType: !227, size: 32, offset: 448)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3057, file: !223, line: 659, baseType: !152, size: 32, offset: 480)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3057, file: !223, line: 660, baseType: !227, size: 32, offset: 512)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3057, file: !223, line: 661, baseType: !227, size: 32, offset: 544)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3057, file: !223, line: 662, baseType: !1012, size: 64, offset: 576)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3057, file: !223, line: 663, baseType: !227, size: 32, offset: 640)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3057, file: !223, line: 664, baseType: !227, size: 32, offset: 672)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3057, file: !223, line: 665, baseType: !227, size: 32, offset: 704)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3057, file: !223, line: 666, baseType: !152, size: 32, offset: 736)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3057, file: !223, line: 667, baseType: !227, size: 32, offset: 768)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3057, file: !223, line: 668, baseType: !227, size: 32, offset: 800)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3057, file: !223, line: 669, baseType: !1012, size: 64, offset: 832)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3057, file: !223, line: 670, baseType: !227, size: 32, offset: 896)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3057, file: !223, line: 671, baseType: !227, size: 32, offset: 928)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3057, file: !223, line: 672, baseType: !1012, size: 64, offset: 960)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3057, file: !223, line: 673, baseType: !227, size: 32, offset: 1024)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3057, file: !223, line: 674, baseType: !227, size: 32, offset: 1056)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !3057, file: !223, line: 675, baseType: !227, size: 32, offset: 1088)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3057, file: !223, line: 676, baseType: !227, size: 32, offset: 1120)
!3091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3092, size: 32)
!3092 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !223, line: 637, baseType: !3093)
!3093 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 633, size: 64, elements: !3094)
!3094 = !{!3095, !3096}
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3093, file: !223, line: 635, baseType: !227, size: 32)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3093, file: !223, line: 636, baseType: !227, size: 32, offset: 32)
!3097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3098, size: 32)
!3098 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !223, line: 501, baseType: !3099)
!3099 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 492, size: 224, elements: !3100)
!3100 = !{!3101, !3102, !3103, !3104, !3105, !3106, !3107}
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3099, file: !223, line: 494, baseType: !227, size: 32)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3099, file: !223, line: 495, baseType: !227, size: 32, offset: 32)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3099, file: !223, line: 496, baseType: !227, size: 32, offset: 64)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3099, file: !223, line: 497, baseType: !227, size: 32, offset: 96)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3099, file: !223, line: 498, baseType: !227, size: 32, offset: 128)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3099, file: !223, line: 499, baseType: !227, size: 32, offset: 160)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3099, file: !223, line: 500, baseType: !227, size: 32, offset: 192)
!3108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1862, size: 32)
!3109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3110, size: 32)
!3110 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !223, line: 583, baseType: !3111)
!3111 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 572, size: 320, elements: !3112)
!3112 = !{!3113, !3114, !3115, !3116, !3117, !3118, !3119, !3120, !3121}
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !3111, file: !223, line: 574, baseType: !227, size: 32)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !3111, file: !223, line: 575, baseType: !227, size: 32, offset: 32)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !3111, file: !223, line: 576, baseType: !227, size: 32, offset: 64)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !3111, file: !223, line: 577, baseType: !227, size: 32, offset: 96)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !3111, file: !223, line: 578, baseType: !227, size: 32, offset: 128)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !3111, file: !223, line: 579, baseType: !227, size: 32, offset: 160)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !3111, file: !223, line: 580, baseType: !227, size: 32, offset: 192)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !3111, file: !223, line: 581, baseType: !227, size: 32, offset: 224)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !3111, file: !223, line: 582, baseType: !1299, size: 64, offset: 256)
!3122 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3123, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3124, retainedTypes: !3125, splitDebugInlining: false, nameTableKind: None)
!3123 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest")
!3124 = !{!984}
!3125 = !{!3126, !152, !3134, !3140, !3151}
!3126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3127, size: 32)
!3127 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !463, line: 770, baseType: !3128)
!3128 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 764, size: 128, elements: !3129)
!3129 = !{!3130, !3131, !3132, !3133}
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3128, file: !463, line: 766, baseType: !227, size: 32)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3128, file: !463, line: 767, baseType: !227, size: 32, offset: 32)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3128, file: !463, line: 768, baseType: !227, size: 32, offset: 64)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3128, file: !463, line: 769, baseType: !467, size: 32, offset: 96)
!3134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3135, size: 32)
!3135 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !223, line: 637, baseType: !3136)
!3136 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 633, size: 64, elements: !3137)
!3137 = !{!3138, !3139}
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3136, file: !223, line: 635, baseType: !227, size: 32)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3136, file: !223, line: 636, baseType: !227, size: 32, offset: 32)
!3140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3141, size: 32)
!3141 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !223, line: 501, baseType: !3142)
!3142 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 492, size: 224, elements: !3143)
!3143 = !{!3144, !3145, !3146, !3147, !3148, !3149, !3150}
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3142, file: !223, line: 494, baseType: !227, size: 32)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3142, file: !223, line: 495, baseType: !227, size: 32, offset: 32)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3142, file: !223, line: 496, baseType: !227, size: 32, offset: 64)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3142, file: !223, line: 497, baseType: !227, size: 32, offset: 96)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3142, file: !223, line: 498, baseType: !227, size: 32, offset: 128)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3142, file: !223, line: 499, baseType: !227, size: 32, offset: 160)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3142, file: !223, line: 500, baseType: !227, size: 32, offset: 192)
!3151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3152, size: 32)
!3152 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 677, baseType: !3153)
!3153 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 643, size: 1152, elements: !3154)
!3154 = !{!3155, !3156, !3157, !3158, !3159, !3160, !3161, !3162, !3163, !3164, !3165, !3166, !3167, !3168, !3169, !3170, !3171, !3172, !3173, !3174, !3175, !3176, !3177, !3178, !3179, !3180, !3181, !3182, !3183, !3184, !3185, !3186}
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3153, file: !223, line: 645, baseType: !227, size: 32)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3153, file: !223, line: 646, baseType: !227, size: 32, offset: 32)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3153, file: !223, line: 647, baseType: !227, size: 32, offset: 64)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3153, file: !223, line: 648, baseType: !227, size: 32, offset: 96)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3153, file: !223, line: 649, baseType: !227, size: 32, offset: 128)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3153, file: !223, line: 650, baseType: !227, size: 32, offset: 160)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3153, file: !223, line: 651, baseType: !227, size: 32, offset: 192)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3153, file: !223, line: 652, baseType: !152, size: 32, offset: 224)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3153, file: !223, line: 653, baseType: !227, size: 32, offset: 256)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3153, file: !223, line: 654, baseType: !227, size: 32, offset: 288)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3153, file: !223, line: 655, baseType: !1012, size: 64, offset: 320)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3153, file: !223, line: 656, baseType: !227, size: 32, offset: 384)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3153, file: !223, line: 657, baseType: !227, size: 32, offset: 416)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3153, file: !223, line: 658, baseType: !227, size: 32, offset: 448)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3153, file: !223, line: 659, baseType: !152, size: 32, offset: 480)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3153, file: !223, line: 660, baseType: !227, size: 32, offset: 512)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3153, file: !223, line: 661, baseType: !227, size: 32, offset: 544)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3153, file: !223, line: 662, baseType: !1012, size: 64, offset: 576)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3153, file: !223, line: 663, baseType: !227, size: 32, offset: 640)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3153, file: !223, line: 664, baseType: !227, size: 32, offset: 672)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3153, file: !223, line: 665, baseType: !227, size: 32, offset: 704)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3153, file: !223, line: 666, baseType: !152, size: 32, offset: 736)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3153, file: !223, line: 667, baseType: !227, size: 32, offset: 768)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3153, file: !223, line: 668, baseType: !227, size: 32, offset: 800)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3153, file: !223, line: 669, baseType: !1012, size: 64, offset: 832)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3153, file: !223, line: 670, baseType: !227, size: 32, offset: 896)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3153, file: !223, line: 671, baseType: !227, size: 32, offset: 928)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3153, file: !223, line: 672, baseType: !1012, size: 64, offset: 960)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3153, file: !223, line: 673, baseType: !227, size: 32, offset: 1024)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3153, file: !223, line: 674, baseType: !227, size: 32, offset: 1056)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !3153, file: !223, line: 675, baseType: !227, size: 32, offset: 1088)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3153, file: !223, line: 676, baseType: !227, size: 32, offset: 1120)
!3187 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3188, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3189, splitDebugInlining: false, nameTableKind: None)
!3188 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest")
!3189 = !{!106, !185}
!3190 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3191, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3192, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!3191 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest")
!3192 = !{!3193, !3200, !2690, !30}
!3193 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3194, line: 14, baseType: !32, size: 32, elements: !3195)
!3194 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3195 = !{!3196, !3197, !3198, !3199}
!3196 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3197 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3198 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3199 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3200 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3194, line: 42, baseType: !32, size: 32, elements: !3201)
!3201 = !{!3202, !3203, !3204, !3205, !3206, !3207}
!3202 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3203 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3204 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3205 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3206 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3207 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3208 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3209, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!3209 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest")
!3210 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3211, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3212, splitDebugInlining: false, nameTableKind: None)
!3211 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest")
!3212 = !{!22, !106, !107}
!3213 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3214, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!3214 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest")
!3215 = !{!"Ubuntu clang version 14.0.6"}
!3216 = !{i32 7, !"Dwarf Version", i32 4}
!3217 = !{i32 2, !"Debug Info Version", i32 3}
!3218 = !{i32 1, !"wchar_size", i32 4}
!3219 = !{i32 1, !"min_enum_size", i32 4}
!3220 = !{i32 1, !"branch-target-enforcement", i32 0}
!3221 = !{i32 1, !"sign-return-address", i32 0}
!3222 = !{i32 1, !"sign-return-address-all", i32 0}
!3223 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3224 = !{i32 7, !"frame-pointer", i32 2}
!3225 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3226, file: !3226, line: 26, type: !3227, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2642, retainedNodes: !2296)
!3226 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3227 = !DISubroutineType(types: !3228)
!3228 = !{null}
!3229 = !DILocation(line: 28, column: 1, scope: !3225)
!3230 = !{i64 2155759492, i64 2155759512, i64 2155759575}
!3231 = !DILocation(line: 29, column: 1, scope: !3225)
!3232 = !{i64 2155759907, i64 2155759927, i64 2155759990}
!3233 = !DILocation(line: 30, column: 1, scope: !3225)
!3234 = !{i64 2155760326, i64 2155760346, i64 2155760409}
!3235 = !DILocation(line: 31, column: 1, scope: !3225)
!3236 = !{i64 2155760745, i64 2155760765, i64 2155760828}
!3237 = !DILocation(line: 33, column: 1, scope: !3225)
!3238 = !{i64 2155761037, i64 2155761057, i64 2155761120}
!3239 = !DILocation(line: 35, column: 1, scope: !3225)
!3240 = !{i64 2155761362, i64 2155761382, i64 2155761445}
!3241 = !DILocation(line: 50, column: 1, scope: !3225)
!3242 = !{i64 2155761789, i64 2155761809, i64 2155761872}
!3243 = !DILocation(line: 54, column: 1, scope: !3225)
!3244 = !{i64 2155762228, i64 2155762248, i64 2155762311}
!3245 = !DILocation(line: 61, column: 1, scope: !3225)
!3246 = !{i64 2155762545, i64 2155762565, i64 2155762628}
!3247 = !DILocation(line: 63, column: 1, scope: !3225)
!3248 = !{i64 2155762925, i64 2155762945, i64 2155763008}
!3249 = !DILocation(line: 64, column: 1, scope: !3225)
!3250 = !{i64 2155763447, i64 2155763467, i64 2155763530}
!3251 = !DILocation(line: 65, column: 1, scope: !3225)
!3252 = !{i64 2155763945, i64 2155763965, i64 2155764028}
!3253 = !DILocation(line: 66, column: 1, scope: !3225)
!3254 = !{i64 2155764427, i64 2155764447, i64 2155764510}
!3255 = !DILocation(line: 67, column: 1, scope: !3225)
!3256 = !{i64 2155764934, i64 2155764954, i64 2155765017}
!3257 = !DILocation(line: 68, column: 1, scope: !3225)
!3258 = !{i64 2155765422, i64 2155765442, i64 2155765505}
!3259 = !DILocation(line: 70, column: 1, scope: !3225)
!3260 = !{i64 2155765890, i64 2155765910, i64 2155765973}
!3261 = !DILocation(line: 71, column: 1, scope: !3225)
!3262 = !{i64 2155766332, i64 2155766352, i64 2155766415}
!3263 = !DILocation(line: 72, column: 1, scope: !3225)
!3264 = !{i64 2155766790, i64 2155766810, i64 2155766873}
!3265 = !DILocation(line: 79, column: 1, scope: !3225)
!3266 = !{i64 2155771305, i64 2155771325, i64 2155771388}
!3267 = !DILocation(line: 80, column: 1, scope: !3225)
!3268 = !{i64 2155771816, i64 2155771836, i64 2155771899}
!3269 = !DILocation(line: 82, column: 1, scope: !3225)
!3270 = !{i64 2155772307, i64 2155772327, i64 2155772390}
!3271 = !DILocation(line: 97, column: 1, scope: !3225)
!3272 = !{i64 2155772644, i64 2155772664, i64 2155772727}
!3273 = !DILocation(line: 99, column: 1, scope: !3225)
!3274 = !{i64 2155772862, i64 2155772882, i64 2155772945}
!3275 = !DILocation(line: 102, column: 1, scope: !3225)
!3276 = !{i64 2155773119, i64 2155773139, i64 2155773202}
!3277 = !DILocation(line: 105, column: 1, scope: !3225)
!3278 = !{i64 2155773359, i64 2155773379, i64 2155773442}
!3279 = !DILocation(line: 115, column: 1, scope: !3225)
!3280 = !{i64 2155773698, i64 2155773718, i64 2155773781}
!3281 = !DILocation(line: 118, column: 1, scope: !3225)
!3282 = !{i64 2155774042, i64 2155774062, i64 2155774125}
!3283 = !DILocation(line: 32, column: 1, scope: !3284)
!3284 = !DILexicalBlockFile(scope: !3225, file: !3285, discriminator: 0)
!3285 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3286 = !{i64 2155774398, i64 2155774418, i64 2155774481}
!3287 = !DILocation(line: 33, column: 1, scope: !3284)
!3288 = !{i64 2155774910, i64 2155774930, i64 2155774993}
!3289 = !DILocation(line: 53, column: 1, scope: !3284)
!3290 = !{i64 2155775418, i64 2155775438, i64 2155775501}
!3291 = !DILocation(line: 54, column: 1, scope: !3284)
!3292 = !{i64 2155775836, i64 2155775856, i64 2155775919}
!3293 = !DILocation(line: 55, column: 1, scope: !3284)
!3294 = !{i64 2155776254, i64 2155776274, i64 2155776337}
!3295 = !DILocation(line: 56, column: 1, scope: !3284)
!3296 = !{i64 2155776672, i64 2155776692, i64 2155776755}
!3297 = !DILocation(line: 57, column: 1, scope: !3284)
!3298 = !{i64 2155777090, i64 2155777110, i64 2155777173}
!3299 = !DILocation(line: 58, column: 1, scope: !3284)
!3300 = !{i64 2155777508, i64 2155777528, i64 2155777591}
!3301 = !DILocation(line: 59, column: 1, scope: !3284)
!3302 = !{i64 2155777926, i64 2155777946, i64 2155778009}
!3303 = !DILocation(line: 60, column: 1, scope: !3284)
!3304 = !{i64 2155778350, i64 2155778370, i64 2155778433}
!3305 = !DILocation(line: 61, column: 1, scope: !3284)
!3306 = !{i64 2155778667, i64 2155778687, i64 2155778750}
!3307 = !DILocation(line: 70, column: 1, scope: !3284)
!3308 = !{i64 2155778896, i64 2155778916, i64 2155778979}
!3309 = !DILocation(line: 72, column: 1, scope: !3284)
!3310 = !{i64 2155779228, i64 2155779248, i64 2155779311}
!3311 = !DILocation(line: 73, column: 1, scope: !3284)
!3312 = !{i64 2155779678, i64 2155779698, i64 2155779761}
!3313 = !DILocation(line: 74, column: 1, scope: !3284)
!3314 = !{i64 2155780128, i64 2155780148, i64 2155780211}
!3315 = !DILocation(line: 75, column: 1, scope: !3284)
!3316 = !{i64 2155780578, i64 2155780598, i64 2155780661}
!3317 = !DILocation(line: 76, column: 1, scope: !3284)
!3318 = !{i64 2155785089, i64 2155785109, i64 2155785172}
!3319 = !DILocation(line: 77, column: 1, scope: !3284)
!3320 = !{i64 2155785539, i64 2155785559, i64 2155785622}
!3321 = !DILocation(line: 78, column: 1, scope: !3284)
!3322 = !{i64 2155785989, i64 2155786009, i64 2155786072}
!3323 = !DILocation(line: 79, column: 1, scope: !3284)
!3324 = !{i64 2155786439, i64 2155786459, i64 2155786522}
!3325 = !DILocation(line: 80, column: 1, scope: !3284)
!3326 = !{i64 2155786892, i64 2155786912, i64 2155786975}
!3327 = !DILocation(line: 84, column: 1, scope: !3284)
!3328 = !{i64 2155787224, i64 2155787244, i64 2155787307}
!3329 = !DILocation(line: 91, column: 1, scope: !3284)
!3330 = !{i64 2155787621, i64 2155787641, i64 2155787704}
!3331 = !DILocation(line: 93, column: 1, scope: !3284)
!3332 = !{i64 2155787988, i64 2155788008, i64 2155788071}
!3333 = !DILocation(line: 106, column: 1, scope: !3284)
!3334 = !{i64 2155788258, i64 2155788278, i64 2155788341}
!3335 = !DILocation(line: 11, column: 1, scope: !3336)
!3336 = !DILexicalBlockFile(scope: !3225, file: !3337, discriminator: 0)
!3337 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3338 = distinct !DISubprogram(name: "_test_pytest_test_pytest_wrapper", scope: !111, file: !111, line: 10, type: !131, scopeLine: 10, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3339)
!3339 = !{!3340}
!3340 = !DILocalVariable(name: "data", arg: 1, scope: !3338, file: !111, line: 10, type: !106)
!3341 = !DILocation(line: 0, scope: !3338)
!3342 = !DILocation(line: 10, column: 1, scope: !3338)
!3343 = distinct !DISubprogram(name: "test_pytest_test_pytest", scope: !111, file: !111, line: 10, type: !3227, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2296)
!3344 = !DILocation(line: 12, column: 2, scope: !3343)
!3345 = !DILocation(line: 13, column: 1, scope: !3343)
!3346 = distinct !DISubprogram(name: "cbvprintf_package", scope: !200, file: !200, line: 233, type: !3347, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3356)
!3347 = !DISubroutineType(types: !3348)
!3348 = !{!107, !106, !185, !152, !118, !3349}
!3349 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3350, line: 99, baseType: !3351)
!3350 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3351 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3350, line: 40, baseType: !3352)
!3352 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !200, baseType: !3353)
!3353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3354)
!3354 = !{!3355}
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3353, file: !200, line: 18, baseType: !106, size: 32)
!3356 = !{!3357, !3358, !3359, !3360, !3361, !3362, !3363, !3364, !3365, !3366, !3368, !3369, !3370, !3371, !3372, !3373, !3374, !3375, !3376, !3377, !3378, !3379, !3392, !3401, !3404, !3405, !3408, !3411, !3414, !3417, !3423}
!3357 = !DILocalVariable(name: "packaged", arg: 1, scope: !3346, file: !200, line: 233, type: !106)
!3358 = !DILocalVariable(name: "len", arg: 2, scope: !3346, file: !200, line: 233, type: !185)
!3359 = !DILocalVariable(name: "flags", arg: 3, scope: !3346, file: !200, line: 233, type: !152)
!3360 = !DILocalVariable(name: "fmt", arg: 4, scope: !3346, file: !200, line: 234, type: !118)
!3361 = !DILocalVariable(name: "ap", arg: 5, scope: !3346, file: !200, line: 234, type: !3349)
!3362 = !DILocalVariable(name: "buf0", scope: !3346, file: !200, line: 247, type: !194)
!3363 = !DILocalVariable(name: "buf", scope: !3346, file: !200, line: 248, type: !194)
!3364 = !DILocalVariable(name: "size", scope: !3346, file: !200, line: 249, type: !32)
!3365 = !DILocalVariable(name: "align", scope: !3346, file: !200, line: 250, type: !32)
!3366 = !DILocalVariable(name: "str_ptr_pos", scope: !3346, file: !200, line: 251, type: !3367)
!3367 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 128, elements: !2079)
!3368 = !DILocalVariable(name: "str_ptr_arg", scope: !3346, file: !200, line: 252, type: !3367)
!3369 = !DILocalVariable(name: "s_idx", scope: !3346, file: !200, line: 253, type: !32)
!3370 = !DILocalVariable(name: "s_rw_cnt", scope: !3346, file: !200, line: 254, type: !32)
!3371 = !DILocalVariable(name: "s_ro_cnt", scope: !3346, file: !200, line: 255, type: !32)
!3372 = !DILocalVariable(name: "arg_idx", scope: !3346, file: !200, line: 256, type: !107)
!3373 = !DILocalVariable(name: "i", scope: !3346, file: !200, line: 257, type: !32)
!3374 = !DILocalVariable(name: "s", scope: !3346, file: !200, line: 258, type: !118)
!3375 = !DILocalVariable(name: "parsing", scope: !3346, file: !200, line: 259, type: !145)
!3376 = !DILocalVariable(name: "rws_pos_en", scope: !3346, file: !200, line: 263, type: !145)
!3377 = !DILocalVariable(name: "fros_cnt", scope: !3346, file: !200, line: 268, type: !107)
!3378 = !DILocalVariable(name: "is_str_arg", scope: !3346, file: !200, line: 269, type: !145)
!3379 = !DILocalVariable(name: "pkg_hdr", scope: !3346, file: !200, line: 270, type: !3380)
!3380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3381, size: 32)
!3381 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !3382, line: 78, size: 32, elements: !3383)
!3382 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3383 = !{!3384, !3391}
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !3381, file: !3382, line: 80, baseType: !3385, size: 32)
!3385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !3382, line: 45, size: 32, elements: !3386)
!3386 = !{!3387, !3388, !3389, !3390}
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3385, file: !3382, line: 47, baseType: !195, size: 8)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !3385, file: !3382, line: 50, baseType: !195, size: 8, offset: 8)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !3385, file: !3382, line: 53, baseType: !195, size: 8, offset: 16)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !3385, file: !3382, line: 56, baseType: !195, size: 8, offset: 24)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !3381, file: !3382, line: 82, baseType: !106, size: 32)
!3392 = !DILocalVariable(name: "v", scope: !3393, file: !200, line: 567, type: !3397)
!3393 = distinct !DILexicalBlock(scope: !3394, file: !200, line: 562, column: 14)
!3394 = distinct !DILexicalBlock(scope: !3395, file: !200, line: 481, column: 18)
!3395 = distinct !DILexicalBlock(scope: !3396, file: !200, line: 466, column: 3)
!3396 = distinct !DILexicalBlock(scope: !3346, file: !200, line: 343, column: 15)
!3397 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3346, file: !200, line: 567, size: 64, elements: !3398)
!3398 = !{!3399, !3400}
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3397, file: !200, line: 567, baseType: !183, size: 64)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !3397, file: !200, line: 567, baseType: !181, size: 64)
!3401 = !DILocalVariable(name: "is_ro", scope: !3402, file: !200, line: 620, type: !145)
!3402 = distinct !DILexicalBlock(scope: !3403, file: !200, line: 613, column: 19)
!3403 = distinct !DILexicalBlock(scope: !3396, file: !200, line: 613, column: 7)
!3404 = !DILocalVariable(name: "do_ro", scope: !3402, file: !200, line: 621, type: !145)
!3405 = !DILocalVariable(name: "s_ptr_idx", scope: !3406, file: !200, line: 626, type: !152)
!3406 = distinct !DILexicalBlock(scope: !3407, file: !200, line: 625, column: 11)
!3407 = distinct !DILexicalBlock(scope: !3402, file: !200, line: 623, column: 8)
!3408 = !DILocalVariable(name: "v", scope: !3409, file: !200, line: 684, type: !107)
!3409 = distinct !DILexicalBlock(scope: !3410, file: !200, line: 683, column: 35)
!3410 = distinct !DILexicalBlock(scope: !3403, file: !200, line: 683, column: 14)
!3411 = !DILocalVariable(name: "v", scope: !3412, file: !200, line: 691, type: !189)
!3412 = distinct !DILexicalBlock(scope: !3413, file: !200, line: 690, column: 36)
!3413 = distinct !DILexicalBlock(scope: !3410, file: !200, line: 690, column: 14)
!3414 = !DILocalVariable(name: "v", scope: !3415, file: !200, line: 698, type: !191)
!3415 = distinct !DILexicalBlock(scope: !3416, file: !200, line: 697, column: 41)
!3416 = distinct !DILexicalBlock(scope: !3413, file: !200, line: 697, column: 14)
!3417 = !DILocalVariable(name: "pos", scope: !3418, file: !200, line: 762, type: !195)
!3418 = distinct !DILexicalBlock(scope: !3419, file: !200, line: 757, column: 31)
!3419 = distinct !DILexicalBlock(scope: !3420, file: !200, line: 757, column: 3)
!3420 = distinct !DILexicalBlock(scope: !3421, file: !200, line: 757, column: 3)
!3421 = distinct !DILexicalBlock(scope: !3422, file: !200, line: 756, column: 16)
!3422 = distinct !DILexicalBlock(scope: !3346, file: !200, line: 756, column: 6)
!3423 = !DILabel(scope: !3402, name: "process_string", file: !200, line: 615)
!3424 = !DILocation(line: 0, scope: !3346)
!3425 = !DILocation(line: 251, column: 2, scope: !3346)
!3426 = !DILocation(line: 251, column: 10, scope: !3346)
!3427 = !DILocation(line: 252, column: 2, scope: !3346)
!3428 = !DILocation(line: 252, column: 10, scope: !3346)
!3429 = !DILocation(line: 263, column: 29, scope: !3346)
!3430 = !DILocation(line: 263, column: 21, scope: !3346)
!3431 = !DILocation(line: 268, column: 21, scope: !3346)
!3432 = !DILocation(line: 268, column: 19, scope: !3346)
!3433 = !DILocation(line: 273, column: 6, scope: !3434)
!3434 = distinct !DILexicalBlock(scope: !3346, file: !200, line: 273, column: 6)
!3435 = !DILocation(line: 273, column: 26, scope: !3434)
!3436 = !DILocation(line: 273, column: 6, scope: !3346)
!3437 = !DILocation(line: 297, column: 6, scope: !3346)
!3438 = !DILocation(line: 305, column: 11, scope: !3439)
!3439 = distinct !DILexicalBlock(scope: !3346, file: !200, line: 305, column: 6)
!3440 = !DILocation(line: 305, column: 6, scope: !3346)
!3441 = !DILocation(line: 327, column: 19, scope: !3442)
!3442 = distinct !DILexicalBlock(scope: !3346, file: !200, line: 327, column: 6)
!3443 = !DILocation(line: 327, column: 22, scope: !3442)
!3444 = !DILocation(line: 327, column: 33, scope: !3442)
!3445 = !DILocation(line: 327, column: 50, scope: !3442)
!3446 = !DILocation(line: 327, column: 6, scope: !3346)
!3447 = !DILocation(line: 338, column: 9, scope: !3346)
!3448 = !DILocation(line: 341, column: 2, scope: !3346)
!3449 = !DILocation(line: 472, column: 8, scope: !3395)
!3450 = !DILocation(line: 473, column: 14, scope: !3451)
!3451 = distinct !DILexicalBlock(scope: !3452, file: !200, line: 473, column: 9)
!3452 = distinct !DILexicalBlock(scope: !3453, file: !200, line: 472, column: 18)
!3453 = distinct !DILexicalBlock(scope: !3395, file: !200, line: 472, column: 8)
!3454 = !DILocation(line: 473, column: 9, scope: !3452)
!3455 = !DILocation(line: 479, column: 5, scope: !3452)
!3456 = !DILocation(line: 468, column: 9, scope: !3457)
!3457 = distinct !DILexicalBlock(scope: !3395, file: !200, line: 468, column: 8)
!3458 = !DILocation(line: 468, column: 8, scope: !3457)
!3459 = !DILocation(line: 468, column: 15, scope: !3457)
!3460 = !DILocation(line: 468, column: 8, scope: !3395)
!3461 = distinct !{!3461, !3462, !3463}
!3462 = !DILocation(line: 343, column: 2, scope: !3346)
!3463 = !DILocation(line: 712, column: 2, scope: !3346)
!3464 = !DILocation(line: 481, column: 4, scope: !3395)
!3465 = !DILocation(line: 484, column: 12, scope: !3394)
!3466 = !DILocation(line: 485, column: 5, scope: !3394)
!3467 = !DILocation(line: 505, column: 5, scope: !3394)
!3468 = !DILocation(line: 518, column: 5, scope: !3394)
!3469 = !DILocation(line: 523, column: 5, scope: !3394)
!3470 = !DILocation(line: 532, column: 9, scope: !3471)
!3471 = distinct !DILexicalBlock(scope: !3394, file: !200, line: 532, column: 9)
!3472 = !DILocation(line: 532, column: 17, scope: !3471)
!3473 = !DILocation(line: 532, column: 9, scope: !3394)
!3474 = !DILocation(line: 533, column: 10, scope: !3475)
!3475 = distinct !DILexicalBlock(scope: !3476, file: !200, line: 533, column: 10)
!3476 = distinct !DILexicalBlock(scope: !3471, file: !200, line: 532, column: 25)
!3477 = !DILocation(line: 533, column: 18, scope: !3475)
!3478 = !DILocation(line: 0, scope: !3479)
!3479 = distinct !DILexicalBlock(scope: !3393, file: !200, line: 569, column: 9)
!3480 = !DILocation(line: 0, scope: !3393)
!3481 = !DILocation(line: 579, column: 20, scope: !3393)
!3482 = !DILocation(line: 579, column: 11, scope: !3393)
!3483 = !DILocation(line: 580, column: 9, scope: !3393)
!3484 = !DILocation(line: 582, column: 21, scope: !3485)
!3485 = distinct !DILexicalBlock(scope: !3486, file: !200, line: 582, column: 10)
!3486 = distinct !DILexicalBlock(scope: !3487, file: !200, line: 580, column: 23)
!3487 = distinct !DILexicalBlock(scope: !3393, file: !200, line: 580, column: 9)
!3488 = !DILocation(line: 582, column: 28, scope: !3485)
!3489 = !DILocation(line: 582, column: 10, scope: !3486)
!3490 = !DILocation(line: 0, scope: !3491)
!3491 = distinct !DILexicalBlock(scope: !3492, file: !200, line: 587, column: 17)
!3492 = distinct !DILexicalBlock(scope: !3486, file: !200, line: 585, column: 10)
!3493 = !DILocation(line: 593, column: 9, scope: !3393)
!3494 = !DILocation(line: 600, column: 5, scope: !3394)
!3495 = !DILocation(line: 605, column: 18, scope: !3396)
!3496 = !DILocation(line: 605, column: 9, scope: !3396)
!3497 = !DILocation(line: 608, column: 20, scope: !3498)
!3498 = distinct !DILexicalBlock(scope: !3396, file: !200, line: 608, column: 7)
!3499 = !DILocation(line: 608, column: 23, scope: !3498)
!3500 = !DILocation(line: 608, column: 34, scope: !3498)
!3501 = !DILocation(line: 608, column: 41, scope: !3498)
!3502 = !DILocation(line: 608, column: 7, scope: !3396)
!3503 = !DILocation(line: 613, column: 7, scope: !3396)
!3504 = !DILocation(line: 614, column: 8, scope: !3402)
!3505 = !DILocation(line: 614, column: 4, scope: !3402)
!3506 = !DILocation(line: 256, column: 6, scope: !3346)
!3507 = !DILocation(line: 254, column: 15, scope: !3346)
!3508 = !DILocation(line: 320, column: 7, scope: !3509)
!3509 = distinct !DILexicalBlock(scope: !3439, file: !200, line: 305, column: 20)
!3510 = !DILocation(line: 615, column: 1, scope: !3402)
!3511 = !DILocation(line: 616, column: 8, scope: !3402)
!3512 = !DILocation(line: 617, column: 5, scope: !3513)
!3513 = distinct !DILexicalBlock(scope: !3514, file: !200, line: 616, column: 22)
!3514 = distinct !DILexicalBlock(scope: !3402, file: !200, line: 616, column: 8)
!3515 = !DILocation(line: 617, column: 25, scope: !3513)
!3516 = !DILocation(line: 618, column: 4, scope: !3513)
!3517 = !DILocation(line: 620, column: 26, scope: !3402)
!3518 = !DILocation(line: 620, column: 29, scope: !3402)
!3519 = !DILocation(line: 620, column: 17, scope: !3402)
!3520 = !DILocation(line: 620, column: 43, scope: !3402)
!3521 = !DILocation(line: 0, scope: !3402)
!3522 = !DILocation(line: 623, column: 14, scope: !3407)
!3523 = !DILocation(line: 626, column: 26, scope: !3406)
!3524 = !DILocation(line: 626, column: 37, scope: !3406)
!3525 = !DILocation(line: 0, scope: !3406)
!3526 = !DILocation(line: 634, column: 15, scope: !3527)
!3527 = distinct !DILexicalBlock(scope: !3406, file: !200, line: 634, column: 9)
!3528 = !DILocation(line: 635, column: 6, scope: !3529)
!3529 = distinct !DILexicalBlock(scope: !3530, file: !200, line: 635, column: 6)
!3530 = distinct !DILexicalBlock(scope: !3531, file: !200, line: 635, column: 6)
!3531 = distinct !DILexicalBlock(scope: !3532, file: !200, line: 635, column: 6)
!3532 = distinct !DILexicalBlock(scope: !3527, file: !200, line: 634, column: 44)
!3533 = !DILocation(line: 639, column: 15, scope: !3534)
!3534 = distinct !DILexicalBlock(scope: !3406, file: !200, line: 639, column: 9)
!3535 = !DILocation(line: 639, column: 9, scope: !3406)
!3536 = !DILocation(line: 640, column: 6, scope: !3537)
!3537 = distinct !DILexicalBlock(scope: !3538, file: !200, line: 640, column: 6)
!3538 = distinct !DILexicalBlock(scope: !3539, file: !200, line: 640, column: 6)
!3539 = distinct !DILexicalBlock(scope: !3540, file: !200, line: 640, column: 6)
!3540 = distinct !DILexicalBlock(scope: !3534, file: !200, line: 639, column: 43)
!3541 = !DILocation(line: 644, column: 9, scope: !3406)
!3542 = !DILocation(line: 649, column: 27, scope: !3543)
!3543 = distinct !DILexicalBlock(scope: !3544, file: !200, line: 644, column: 23)
!3544 = distinct !DILexicalBlock(scope: !3406, file: !200, line: 644, column: 9)
!3545 = !DILocation(line: 649, column: 6, scope: !3543)
!3546 = !DILocation(line: 649, column: 25, scope: !3543)
!3547 = !DILocation(line: 650, column: 27, scope: !3543)
!3548 = !DILocation(line: 650, column: 6, scope: !3543)
!3549 = !DILocation(line: 650, column: 25, scope: !3543)
!3550 = !DILocation(line: 651, column: 10, scope: !3543)
!3551 = !DILocation(line: 653, column: 26, scope: !3552)
!3552 = distinct !DILexicalBlock(scope: !3553, file: !200, line: 651, column: 17)
!3553 = distinct !DILexicalBlock(scope: !3543, file: !200, line: 651, column: 10)
!3554 = !DILocation(line: 654, column: 15, scope: !3552)
!3555 = !DILocation(line: 655, column: 6, scope: !3552)
!3556 = !DILocation(line: 656, column: 15, scope: !3557)
!3557 = distinct !DILexicalBlock(scope: !3553, file: !200, line: 655, column: 13)
!3558 = !DILocation(line: 658, column: 16, scope: !3544)
!3559 = !DILocation(line: 663, column: 10, scope: !3560)
!3560 = distinct !DILexicalBlock(scope: !3561, file: !200, line: 658, column: 23)
!3561 = distinct !DILexicalBlock(scope: !3544, file: !200, line: 658, column: 16)
!3562 = !DILocation(line: 664, column: 5, scope: !3560)
!3563 = !DILocation(line: 664, column: 16, scope: !3561)
!3564 = !DILocation(line: 669, column: 10, scope: !3565)
!3565 = distinct !DILexicalBlock(scope: !3566, file: !200, line: 664, column: 28)
!3566 = distinct !DILexicalBlock(scope: !3561, file: !200, line: 664, column: 16)
!3567 = !DILocation(line: 670, column: 5, scope: !3565)
!3568 = !DILocation(line: 675, column: 13, scope: !3569)
!3569 = distinct !DILexicalBlock(scope: !3566, file: !200, line: 670, column: 12)
!3570 = !DILocation(line: 675, column: 27, scope: !3569)
!3571 = !DILocation(line: 675, column: 10, scope: !3569)
!3572 = !DILocation(line: 678, column: 10, scope: !3406)
!3573 = !DILocation(line: 680, column: 8, scope: !3402)
!3574 = !DILocation(line: 683, column: 14, scope: !3403)
!3575 = !DILocation(line: 684, column: 12, scope: !3409)
!3576 = !DILocation(line: 0, scope: !3409)
!3577 = !DILocation(line: 686, column: 8, scope: !3409)
!3578 = !DILocation(line: 687, column: 5, scope: !3579)
!3579 = distinct !DILexicalBlock(scope: !3580, file: !200, line: 686, column: 22)
!3580 = distinct !DILexicalBlock(scope: !3409, file: !200, line: 686, column: 8)
!3581 = !DILocation(line: 687, column: 17, scope: !3579)
!3582 = !DILocation(line: 688, column: 4, scope: !3579)
!3583 = !DILocation(line: 698, column: 18, scope: !3415)
!3584 = !DILocation(line: 0, scope: !3415)
!3585 = !DILocation(line: 700, column: 8, scope: !3415)
!3586 = !DILocation(line: 704, column: 6, scope: !3587)
!3587 = distinct !DILexicalBlock(scope: !3588, file: !200, line: 703, column: 12)
!3588 = distinct !DILexicalBlock(scope: !3589, file: !200, line: 701, column: 9)
!3589 = distinct !DILexicalBlock(scope: !3590, file: !200, line: 700, column: 22)
!3590 = distinct !DILexicalBlock(scope: !3415, file: !200, line: 700, column: 8)
!3591 = !DILocation(line: 704, column: 24, scope: !3587)
!3592 = !DILocation(line: 706, column: 4, scope: !3589)
!3593 = !DILocation(line: 709, column: 4, scope: !3594)
!3594 = distinct !DILexicalBlock(scope: !3595, file: !200, line: 709, column: 4)
!3595 = distinct !DILexicalBlock(scope: !3596, file: !200, line: 709, column: 4)
!3596 = distinct !DILexicalBlock(scope: !3597, file: !200, line: 709, column: 4)
!3597 = distinct !DILexicalBlock(scope: !3416, file: !200, line: 708, column: 10)
!3598 = !DILocation(line: 0, scope: !3410)
!3599 = !DILocation(line: 0, scope: !3396)
!3600 = !DILocation(line: 720, column: 6, scope: !3601)
!3601 = distinct !DILexicalBlock(scope: !3346, file: !200, line: 720, column: 6)
!3602 = !DILocation(line: 720, column: 17, scope: !3601)
!3603 = !DILocation(line: 720, column: 31, scope: !3601)
!3604 = !DILocation(line: 720, column: 6, scope: !3346)
!3605 = !DILocation(line: 721, column: 3, scope: !3606)
!3606 = distinct !DILexicalBlock(scope: !3607, file: !200, line: 721, column: 3)
!3607 = distinct !DILexicalBlock(scope: !3608, file: !200, line: 721, column: 3)
!3608 = distinct !DILexicalBlock(scope: !3609, file: !200, line: 721, column: 3)
!3609 = distinct !DILexicalBlock(scope: !3601, file: !200, line: 720, column: 38)
!3610 = !DILocation(line: 729, column: 6, scope: !3346)
!3611 = !DILocation(line: 730, column: 21, scope: !3612)
!3612 = distinct !DILexicalBlock(scope: !3613, file: !200, line: 729, column: 20)
!3613 = distinct !DILexicalBlock(scope: !3346, file: !200, line: 729, column: 6)
!3614 = !DILocation(line: 730, column: 27, scope: !3612)
!3615 = !DILocation(line: 730, column: 3, scope: !3612)
!3616 = !DILocation(line: 737, column: 22, scope: !3346)
!3617 = !DILocation(line: 737, column: 20, scope: !3346)
!3618 = !DILocation(line: 0, scope: !3619)
!3619 = distinct !DILexicalBlock(scope: !3346, file: !200, line: 739, column: 6)
!3620 = !DILocation(line: 745, column: 17, scope: !3621)
!3621 = distinct !DILexicalBlock(scope: !3619, file: !200, line: 743, column: 9)
!3622 = !DILocation(line: 745, column: 25, scope: !3621)
!3623 = !DILocation(line: 746, column: 17, scope: !3621)
!3624 = !DILocation(line: 746, column: 28, scope: !3621)
!3625 = !DILocation(line: 749, column: 29, scope: !3346)
!3626 = !DILocation(line: 749, column: 16, scope: !3346)
!3627 = !DILocation(line: 749, column: 27, scope: !3346)
!3628 = !DILocation(line: 756, column: 6, scope: !3422)
!3629 = !DILocation(line: 756, column: 6, scope: !3346)
!3630 = !DILocation(line: 757, column: 3, scope: !3420)
!3631 = !DILocation(line: 758, column: 10, scope: !3632)
!3632 = distinct !DILexicalBlock(scope: !3418, file: !200, line: 758, column: 8)
!3633 = !DILocation(line: 758, column: 25, scope: !3632)
!3634 = !DILocation(line: 758, column: 8, scope: !3418)
!3635 = !DILocation(line: 0, scope: !3418)
!3636 = !DILocation(line: 765, column: 8, scope: !3637)
!3637 = distinct !DILexicalBlock(scope: !3418, file: !200, line: 765, column: 8)
!3638 = !DILocation(line: 765, column: 19, scope: !3637)
!3639 = !DILocation(line: 765, column: 23, scope: !3637)
!3640 = !DILocation(line: 765, column: 8, scope: !3418)
!3641 = !DILocation(line: 762, column: 33, scope: !3418)
!3642 = !DILocation(line: 769, column: 8, scope: !3418)
!3643 = !DILocation(line: 769, column: 11, scope: !3418)
!3644 = !DILocation(line: 757, column: 27, scope: !3419)
!3645 = !DILocation(line: 757, column: 17, scope: !3419)
!3646 = distinct !{!3646, !3630, !3647}
!3647 = !DILocation(line: 770, column: 3, scope: !3420)
!3648 = !DILocation(line: 774, column: 16, scope: !3649)
!3649 = distinct !DILexicalBlock(scope: !3650, file: !200, line: 774, column: 2)
!3650 = distinct !DILexicalBlock(scope: !3346, file: !200, line: 774, column: 2)
!3651 = !DILocation(line: 774, column: 2, scope: !3650)
!3652 = !DILocation(line: 776, column: 16, scope: !3653)
!3653 = distinct !DILexicalBlock(scope: !3654, file: !200, line: 776, column: 7)
!3654 = distinct !DILexicalBlock(scope: !3649, file: !200, line: 774, column: 30)
!3655 = !DILocation(line: 776, column: 19, scope: !3653)
!3656 = !DILocation(line: 776, column: 34, scope: !3653)
!3657 = !DILocation(line: 776, column: 7, scope: !3654)
!3658 = !DILocation(line: 780, column: 7, scope: !3654)
!3659 = !DILocation(line: 782, column: 13, scope: !3660)
!3660 = distinct !DILexicalBlock(scope: !3661, file: !200, line: 780, column: 19)
!3661 = distinct !DILexicalBlock(scope: !3654, file: !200, line: 780, column: 7)
!3662 = !DILocation(line: 782, column: 8, scope: !3660)
!3663 = !DILocation(line: 782, column: 11, scope: !3660)
!3664 = !DILocation(line: 783, column: 3, scope: !3660)
!3665 = !DILocation(line: 785, column: 26, scope: !3666)
!3666 = distinct !DILexicalBlock(scope: !3661, file: !200, line: 783, column: 10)
!3667 = !DILocation(line: 785, column: 41, scope: !3666)
!3668 = !DILocation(line: 785, column: 24, scope: !3666)
!3669 = !DILocation(line: 785, column: 8, scope: !3666)
!3670 = !DILocation(line: 787, column: 52, scope: !3666)
!3671 = !DILocation(line: 789, column: 11, scope: !3666)
!3672 = !DILocation(line: 789, column: 21, scope: !3666)
!3673 = !DILocation(line: 0, scope: !3661)
!3674 = !DILocation(line: 793, column: 7, scope: !3675)
!3675 = distinct !DILexicalBlock(scope: !3654, file: !200, line: 793, column: 7)
!3676 = !DILocation(line: 793, column: 18, scope: !3675)
!3677 = !DILocation(line: 793, column: 22, scope: !3675)
!3678 = !DILocation(line: 793, column: 29, scope: !3675)
!3679 = !DILocation(line: 793, column: 7, scope: !3654)
!3680 = !DILocation(line: 797, column: 12, scope: !3654)
!3681 = !DILocation(line: 797, column: 7, scope: !3654)
!3682 = !DILocation(line: 797, column: 10, scope: !3654)
!3683 = !DILocation(line: 799, column: 3, scope: !3654)
!3684 = !DILocation(line: 800, column: 7, scope: !3654)
!3685 = !DILocation(line: 801, column: 2, scope: !3654)
!3686 = !DILocation(line: 338, column: 4, scope: !3346)
!3687 = !DILocation(line: 774, column: 26, scope: !3649)
!3688 = distinct !{!3688, !3651, !3689}
!3689 = !DILocation(line: 801, column: 2, scope: !3650)
!3690 = !DILocation(line: 808, column: 9, scope: !3346)
!3691 = !DILocation(line: 808, column: 2, scope: !3346)
!3692 = !DILocation(line: 813, column: 1, scope: !3346)
!3693 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !200, file: !200, line: 33, type: !3694, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3696)
!3694 = !DISubroutineType(types: !3695)
!3695 = !{!145, !118}
!3696 = !{!3697}
!3697 = !DILocalVariable(name: "addr", arg: 1, scope: !3693, file: !200, line: 33, type: !118)
!3698 = !DILocation(line: 0, scope: !3693)
!3699 = !DILocation(line: 41, column: 9, scope: !3693)
!3700 = !DILocation(line: 41, column: 2, scope: !3693)
!3701 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !3702, file: !3702, line: 24, type: !143, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3703)
!3702 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3703 = !{!3704}
!3704 = !DILocalVariable(name: "addr", arg: 1, scope: !3701, file: !3702, line: 24, type: !13)
!3705 = !DILocation(line: 0, scope: !3701)
!3706 = !DILocation(line: 49, column: 30, scope: !3701)
!3707 = !DILocation(line: 49, column: 57, scope: !3701)
!3708 = !DILocation(line: 49, column: 2, scope: !3701)
!3709 = distinct !DISubprogram(name: "cbprintf_package", scope: !200, file: !200, line: 815, type: !3710, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3712)
!3710 = !DISubroutineType(types: !3711)
!3711 = !{!107, !106, !185, !152, !118, null}
!3712 = !{!3713, !3714, !3715, !3716, !3717, !3718}
!3713 = !DILocalVariable(name: "packaged", arg: 1, scope: !3709, file: !200, line: 815, type: !106)
!3714 = !DILocalVariable(name: "len", arg: 2, scope: !3709, file: !200, line: 815, type: !185)
!3715 = !DILocalVariable(name: "flags", arg: 3, scope: !3709, file: !200, line: 815, type: !152)
!3716 = !DILocalVariable(name: "format", arg: 4, scope: !3709, file: !200, line: 816, type: !118)
!3717 = !DILocalVariable(name: "ap", scope: !3709, file: !200, line: 818, type: !3349)
!3718 = !DILocalVariable(name: "ret", scope: !3709, file: !200, line: 819, type: !107)
!3719 = !DILocation(line: 0, scope: !3709)
!3720 = !DILocation(line: 818, column: 2, scope: !3709)
!3721 = !DILocation(line: 818, column: 10, scope: !3709)
!3722 = !DILocation(line: 821, column: 2, scope: !3709)
!3723 = !DILocation(line: 822, column: 8, scope: !3709)
!3724 = !DILocation(line: 823, column: 2, scope: !3709)
!3725 = !DILocation(line: 825, column: 1, scope: !3709)
!3726 = !DILocation(line: 824, column: 2, scope: !3709)
!3727 = distinct !DISubprogram(name: "cbpprintf_external", scope: !200, file: !200, line: 827, type: !3728, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3738)
!3728 = !DISubroutineType(types: !3729)
!3729 = !{!107, !3730, !3734, !106, !106}
!3730 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3382, line: 297, baseType: !3731)
!3731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3732, size: 32)
!3732 = !DISubroutineType(types: !3733)
!3733 = !{!107, null}
!3734 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !3382, line: 328, baseType: !3735)
!3735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3736, size: 32)
!3736 = !DISubroutineType(types: !3737)
!3737 = !{!107, !3730, !106, !118, !3349}
!3738 = !{!3739, !3740, !3741, !3742, !3743, !3744, !3750, !3751, !3752, !3753, !3754, !3755, !3756, !3757}
!3739 = !DILocalVariable(name: "out", arg: 1, scope: !3727, file: !200, line: 827, type: !3730)
!3740 = !DILocalVariable(name: "formatter", arg: 2, scope: !3727, file: !200, line: 828, type: !3734)
!3741 = !DILocalVariable(name: "ctx", arg: 3, scope: !3727, file: !200, line: 829, type: !106)
!3742 = !DILocalVariable(name: "packaged", arg: 4, scope: !3727, file: !200, line: 829, type: !106)
!3743 = !DILocalVariable(name: "buf", scope: !3727, file: !200, line: 831, type: !194)
!3744 = !DILocalVariable(name: "hdr", scope: !3727, file: !200, line: 832, type: !3745)
!3745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3746, size: 32)
!3746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !3382, line: 96, size: 64, elements: !3747)
!3747 = !{!3748, !3749}
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !3746, file: !3382, line: 98, baseType: !3381, size: 32)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !3746, file: !3382, line: 101, baseType: !193, size: 32, offset: 32)
!3750 = !DILocalVariable(name: "s", scope: !3727, file: !200, line: 833, type: !193)
!3751 = !DILocalVariable(name: "ps", scope: !3727, file: !200, line: 833, type: !192)
!3752 = !DILocalVariable(name: "i", scope: !3727, file: !200, line: 834, type: !32)
!3753 = !DILocalVariable(name: "args_size", scope: !3727, file: !200, line: 834, type: !32)
!3754 = !DILocalVariable(name: "s_nbr", scope: !3727, file: !200, line: 834, type: !32)
!3755 = !DILocalVariable(name: "ros_nbr", scope: !3727, file: !200, line: 834, type: !32)
!3756 = !DILocalVariable(name: "rws_nbr", scope: !3727, file: !200, line: 834, type: !32)
!3757 = !DILocalVariable(name: "s_idx", scope: !3727, file: !200, line: 834, type: !32)
!3758 = !DILocation(line: 0, scope: !3727)
!3759 = !DILocation(line: 836, column: 10, scope: !3760)
!3760 = distinct !DILexicalBlock(scope: !3727, file: !200, line: 836, column: 6)
!3761 = !DILocation(line: 836, column: 6, scope: !3727)
!3762 = !DILocation(line: 842, column: 28, scope: !3727)
!3763 = !DILocation(line: 842, column: 14, scope: !3727)
!3764 = !DILocation(line: 852, column: 16, scope: !3765)
!3765 = distinct !DILexicalBlock(scope: !3766, file: !200, line: 852, column: 2)
!3766 = distinct !DILexicalBlock(scope: !3727, file: !200, line: 852, column: 2)
!3767 = !DILocation(line: 852, column: 2, scope: !3766)
!3768 = !DILocation(line: 841, column: 28, scope: !3727)
!3769 = !DILocation(line: 841, column: 14, scope: !3727)
!3770 = !DILocation(line: 841, column: 32, scope: !3727)
!3771 = !DILocation(line: 847, column: 19, scope: !3727)
!3772 = !DILocation(line: 843, column: 28, scope: !3727)
!3773 = !DILocation(line: 843, column: 14, scope: !3727)
!3774 = !DILocation(line: 847, column: 31, scope: !3727)
!3775 = !DILocation(line: 844, column: 28, scope: !3727)
!3776 = !DILocation(line: 844, column: 14, scope: !3727)
!3777 = !DILocation(line: 847, column: 45, scope: !3727)
!3778 = !DILocation(line: 847, column: 41, scope: !3727)
!3779 = !DILocation(line: 854, column: 24, scope: !3780)
!3780 = distinct !DILexicalBlock(scope: !3765, file: !200, line: 852, column: 30)
!3781 = !DILocation(line: 854, column: 11, scope: !3780)
!3782 = !DILocation(line: 855, column: 30, scope: !3780)
!3783 = !DILocation(line: 855, column: 22, scope: !3780)
!3784 = !DILocation(line: 855, column: 8, scope: !3780)
!3785 = !DILocation(line: 857, column: 7, scope: !3780)
!3786 = !DILocation(line: 859, column: 8, scope: !3780)
!3787 = !DILocation(line: 859, column: 18, scope: !3780)
!3788 = !DILocation(line: 859, column: 5, scope: !3780)
!3789 = !DILocation(line: 852, column: 26, scope: !3765)
!3790 = distinct !{!3790, !3767, !3791}
!3791 = !DILocation(line: 860, column: 2, scope: !3766)
!3792 = !DILocation(line: 863, column: 6, scope: !3727)
!3793 = !DILocation(line: 866, column: 56, scope: !3727)
!3794 = !DILocation(line: 866, column: 9, scope: !3727)
!3795 = !DILocation(line: 866, column: 2, scope: !3727)
!3796 = !DILocation(line: 867, column: 1, scope: !3727)
!3797 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !200, file: !200, line: 179, type: !3798, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3800)
!3798 = !DISubroutineType(types: !3799)
!3799 = !{!107, !3730, !3734, !106, !118, !106}
!3800 = !{!3801, !3802, !3803, !3804, !3805, !3806}
!3801 = !DILocalVariable(name: "out", arg: 1, scope: !3797, file: !200, line: 179, type: !3730)
!3802 = !DILocalVariable(name: "formatter", arg: 2, scope: !3797, file: !200, line: 180, type: !3734)
!3803 = !DILocalVariable(name: "ctx", arg: 3, scope: !3797, file: !200, line: 181, type: !106)
!3804 = !DILocalVariable(name: "fmt", arg: 4, scope: !3797, file: !200, line: 182, type: !118)
!3805 = !DILocalVariable(name: "buf", arg: 5, scope: !3797, file: !200, line: 182, type: !106)
!3806 = !DILocalVariable(name: "u", scope: !3797, file: !200, line: 187, type: !3807)
!3807 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3797, file: !200, line: 184, size: 32, elements: !3808)
!3808 = !{!3809, !3810}
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !3807, file: !200, line: 185, baseType: !3349, size: 32)
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3807, file: !200, line: 186, baseType: !106, size: 32)
!3811 = !DILocation(line: 0, scope: !3797)
!3812 = !DILocation(line: 191, column: 9, scope: !3797)
!3813 = !DILocation(line: 191, column: 2, scope: !3797)
!3814 = distinct !DISubprogram(name: "is_ptr", scope: !200, file: !200, line: 881, type: !3815, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3817)
!3815 = !DISubroutineType(types: !3816)
!3816 = !{!145, !118, !107}
!3817 = !{!3818, !3819, !3820, !3821, !3822}
!3818 = !DILocalVariable(name: "fmt", arg: 1, scope: !3814, file: !200, line: 881, type: !118)
!3819 = !DILocalVariable(name: "n", arg: 2, scope: !3814, file: !200, line: 881, type: !107)
!3820 = !DILocalVariable(name: "c", scope: !3814, file: !200, line: 883, type: !120)
!3821 = !DILocalVariable(name: "mod", scope: !3814, file: !200, line: 884, type: !145)
!3822 = !DILocalVariable(name: "cnt", scope: !3814, file: !200, line: 885, type: !107)
!3823 = !DILocation(line: 0, scope: !3814)
!3824 = !DILocation(line: 887, column: 14, scope: !3814)
!3825 = !DILocation(line: 887, column: 22, scope: !3814)
!3826 = !DILocation(line: 887, column: 2, scope: !3814)
!3827 = !DILocation(line: 887, column: 18, scope: !3814)
!3828 = !DILocation(line: 888, column: 7, scope: !3829)
!3829 = distinct !DILexicalBlock(scope: !3814, file: !200, line: 887, column: 31)
!3830 = !DILocation(line: 889, column: 12, scope: !3831)
!3831 = distinct !DILexicalBlock(scope: !3832, file: !200, line: 889, column: 8)
!3832 = distinct !DILexicalBlock(scope: !3833, file: !200, line: 888, column: 12)
!3833 = distinct !DILexicalBlock(scope: !3829, file: !200, line: 888, column: 7)
!3834 = !DILocation(line: 889, column: 8, scope: !3832)
!3835 = !DILocation(line: 890, column: 11, scope: !3836)
!3836 = distinct !DILexicalBlock(scope: !3837, file: !200, line: 890, column: 9)
!3837 = distinct !DILexicalBlock(scope: !3831, file: !200, line: 889, column: 18)
!3838 = !DILocation(line: 890, column: 9, scope: !3837)
!3839 = !DILocation(line: 892, column: 16, scope: !3840)
!3840 = distinct !DILexicalBlock(scope: !3836, file: !200, line: 892, column: 16)
!3841 = !DILocation(line: 892, column: 16, scope: !3836)
!3842 = !DILocation(line: 895, column: 15, scope: !3843)
!3843 = distinct !DILexicalBlock(scope: !3831, file: !200, line: 895, column: 15)
!3844 = !DILocation(line: 895, column: 15, scope: !3831)
!3845 = !DILocation(line: 900, column: 9, scope: !3846)
!3846 = distinct !DILexicalBlock(scope: !3829, file: !200, line: 900, column: 7)
!3847 = !DILocation(line: 900, column: 7, scope: !3829)
!3848 = distinct !{!3848, !3826, !3849}
!3849 = !DILocation(line: 903, column: 2, scope: !3814)
!3850 = !DILocation(line: 906, column: 1, scope: !3814)
!3851 = distinct !DISubprogram(name: "is_fmt_spec", scope: !200, file: !200, line: 873, type: !3852, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3854)
!3852 = !DISubroutineType(types: !3853)
!3853 = !{!145, !120}
!3854 = !{!3855}
!3855 = !DILocalVariable(name: "c", arg: 1, scope: !3851, file: !200, line: 873, type: !120)
!3856 = !DILocation(line: 0, scope: !3851)
!3857 = !DILocation(line: 875, column: 19, scope: !3851)
!3858 = !DILocation(line: 875, column: 2, scope: !3851)
!3859 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !200, file: !200, line: 908, type: !3860, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3866)
!3860 = !DISubroutineType(types: !3861)
!3861 = !{!107, !106, !185, !3862, !106, !152, !2916, !185}
!3862 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !3382, line: 308, baseType: !3863)
!3863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3864, size: 32)
!3864 = !DISubroutineType(types: !3865)
!3865 = !{!107, !13, !185, !106}
!3866 = !{!3867, !3868, !3869, !3870, !3871, !3872, !3873, !3874, !3875, !3876, !3877, !3878, !3879, !3880, !3881, !3882, !3884, !3885, !3886, !3887, !3888, !3894, !3897, !3898, !3899, !3901, !3904, !3905, !3906, !3907, !3908, !3909, !3910, !3911, !3912, !3913, !3914, !3915, !3917, !3920, !3921, !3922, !3923, !3924, !3925, !3927, !3930, !3931, !3932}
!3867 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !3859, file: !200, line: 908, type: !106)
!3868 = !DILocalVariable(name: "in_len", arg: 2, scope: !3859, file: !200, line: 909, type: !185)
!3869 = !DILocalVariable(name: "cb", arg: 3, scope: !3859, file: !200, line: 910, type: !3862)
!3870 = !DILocalVariable(name: "ctx", arg: 4, scope: !3859, file: !200, line: 911, type: !106)
!3871 = !DILocalVariable(name: "flags", arg: 5, scope: !3859, file: !200, line: 912, type: !152)
!3872 = !DILocalVariable(name: "strl", arg: 6, scope: !3859, file: !200, line: 913, type: !2916)
!3873 = !DILocalVariable(name: "strl_len", arg: 7, scope: !3859, file: !200, line: 914, type: !185)
!3874 = !DILocalVariable(name: "buf", scope: !3859, file: !200, line: 918, type: !194)
!3875 = !DILocalVariable(name: "buf32", scope: !3859, file: !200, line: 919, type: !1040)
!3876 = !DILocalVariable(name: "args_size", scope: !3859, file: !200, line: 920, type: !32)
!3877 = !DILocalVariable(name: "ros_nbr", scope: !3859, file: !200, line: 920, type: !32)
!3878 = !DILocalVariable(name: "rws_nbr", scope: !3859, file: !200, line: 920, type: !32)
!3879 = !DILocalVariable(name: "fmt_present", scope: !3859, file: !200, line: 921, type: !145)
!3880 = !DILocalVariable(name: "rw_cpy", scope: !3859, file: !200, line: 922, type: !145)
!3881 = !DILocalVariable(name: "ro_cpy", scope: !3859, file: !200, line: 923, type: !145)
!3882 = !DILocalVariable(name: "in_desc", scope: !3859, file: !200, line: 924, type: !3883)
!3883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3385, size: 32)
!3884 = !DILocalVariable(name: "out_len", scope: !3859, file: !200, line: 960, type: !107)
!3885 = !DILocalVariable(name: "fmt", scope: !3859, file: !200, line: 965, type: !118)
!3886 = !DILocalVariable(name: "str_pos", scope: !3859, file: !200, line: 966, type: !194)
!3887 = !DILocalVariable(name: "strl_cnt", scope: !3859, file: !200, line: 967, type: !185)
!3888 = !DILocalVariable(name: "i", scope: !3889, file: !200, line: 973, type: !107)
!3889 = distinct !DILexicalBlock(scope: !3890, file: !200, line: 973, column: 4)
!3890 = distinct !DILexicalBlock(scope: !3891, file: !200, line: 972, column: 15)
!3891 = distinct !DILexicalBlock(scope: !3892, file: !200, line: 972, column: 7)
!3892 = distinct !DILexicalBlock(scope: !3893, file: !200, line: 970, column: 18)
!3893 = distinct !DILexicalBlock(scope: !3859, file: !200, line: 970, column: 6)
!3894 = !DILocalVariable(name: "str", scope: !3895, file: !200, line: 974, type: !118)
!3895 = distinct !DILexicalBlock(scope: !3896, file: !200, line: 973, column: 38)
!3896 = distinct !DILexicalBlock(scope: !3889, file: !200, line: 973, column: 4)
!3897 = !DILocalVariable(name: "len", scope: !3895, file: !200, line: 975, type: !107)
!3898 = !DILocalVariable(name: "drop_ro_str_pos", scope: !3892, file: !200, line: 990, type: !145)
!3899 = !DILocalVariable(name: "i", scope: !3900, file: !200, line: 995, type: !107)
!3900 = distinct !DILexicalBlock(scope: !3892, file: !200, line: 995, column: 3)
!3901 = !DILocalVariable(name: "arg_idx", scope: !3902, file: !200, line: 996, type: !195)
!3902 = distinct !DILexicalBlock(scope: !3903, file: !200, line: 995, column: 37)
!3903 = distinct !DILexicalBlock(scope: !3900, file: !200, line: 995, column: 3)
!3904 = !DILocalVariable(name: "arg_pos", scope: !3902, file: !200, line: 997, type: !195)
!3905 = !DILocalVariable(name: "str", scope: !3902, file: !200, line: 998, type: !118)
!3906 = !DILocalVariable(name: "is_ro", scope: !3902, file: !200, line: 999, type: !145)
!3907 = !DILocalVariable(name: "len", scope: !3902, file: !200, line: 1000, type: !107)
!3908 = !DILocalVariable(name: "out_desc", scope: !3859, file: !200, line: 1038, type: !3385)
!3909 = !DILocalVariable(name: "cpy_str_pos", scope: !3859, file: !200, line: 1040, type: !3367)
!3910 = !DILocalVariable(name: "keep_str_pos", scope: !3859, file: !200, line: 1042, type: !3367)
!3911 = !DILocalVariable(name: "scpy_cnt", scope: !3859, file: !200, line: 1043, type: !195)
!3912 = !DILocalVariable(name: "keep_cnt", scope: !3859, file: !200, line: 1044, type: !195)
!3913 = !DILocalVariable(name: "dst", scope: !3859, file: !200, line: 1045, type: !194)
!3914 = !DILocalVariable(name: "rv", scope: !3859, file: !200, line: 1046, type: !107)
!3915 = !DILocalVariable(name: "i", scope: !3916, file: !200, line: 1074, type: !107)
!3916 = distinct !DILexicalBlock(scope: !3859, file: !200, line: 1074, column: 2)
!3917 = !DILocalVariable(name: "arg_idx", scope: !3918, file: !200, line: 1075, type: !195)
!3918 = distinct !DILexicalBlock(scope: !3919, file: !200, line: 1074, column: 36)
!3919 = distinct !DILexicalBlock(scope: !3916, file: !200, line: 1074, column: 2)
!3920 = !DILocalVariable(name: "arg_pos", scope: !3918, file: !200, line: 1076, type: !195)
!3921 = !DILocalVariable(name: "str", scope: !3918, file: !200, line: 1077, type: !118)
!3922 = !DILocalVariable(name: "is_ro", scope: !3918, file: !200, line: 1078, type: !145)
!3923 = !DILocalVariable(name: "in_desc_backup", scope: !3859, file: !200, line: 1114, type: !3385)
!3924 = !DILocalVariable(name: "strs_len", scope: !3859, file: !200, line: 1134, type: !185)
!3925 = !DILocalVariable(name: "i", scope: !3926, file: !200, line: 1143, type: !107)
!3926 = distinct !DILexicalBlock(scope: !3859, file: !200, line: 1143, column: 2)
!3927 = !DILocalVariable(name: "loc", scope: !3928, file: !200, line: 1144, type: !195)
!3928 = distinct !DILexicalBlock(scope: !3929, file: !200, line: 1143, column: 37)
!3929 = distinct !DILexicalBlock(scope: !3926, file: !200, line: 1143, column: 2)
!3930 = !DILocalVariable(name: "str", scope: !3928, file: !200, line: 1145, type: !118)
!3931 = !DILocalVariable(name: "str_len", scope: !3928, file: !200, line: 1146, type: !197)
!3932 = !DILabel(scope: !3933, name: "calculate_string_length", file: !200, line: 1021)
!3933 = distinct !DILexicalBlock(scope: !3934, file: !200, line: 1020, column: 56)
!3934 = distinct !DILexicalBlock(scope: !3935, file: !200, line: 1020, column: 15)
!3935 = distinct !DILexicalBlock(scope: !3902, file: !200, line: 1014, column: 8)
!3936 = !DILocation(line: 0, scope: !3859)
!3937 = !DILocation(line: 916, column: 2, scope: !3938)
!3938 = distinct !DILexicalBlock(scope: !3939, file: !200, line: 916, column: 2)
!3939 = distinct !DILexicalBlock(scope: !3859, file: !200, line: 916, column: 2)
!3940 = !DILocation(line: 916, column: 2, scope: !3939)
!3941 = !DILocation(line: 916, column: 2, scope: !3942)
!3942 = distinct !DILexicalBlock(scope: !3938, file: !200, line: 916, column: 2)
!3943 = !DILocation(line: 919, column: 20, scope: !3859)
!3944 = !DILocation(line: 921, column: 27, scope: !3859)
!3945 = !DILocation(line: 921, column: 21, scope: !3859)
!3946 = !DILocation(line: 926, column: 18, scope: !3859)
!3947 = !DILocation(line: 926, column: 11, scope: !3859)
!3948 = !DILocation(line: 926, column: 34, scope: !3859)
!3949 = !DILocation(line: 931, column: 21, scope: !3859)
!3950 = !DILocation(line: 931, column: 12, scope: !3859)
!3951 = !DILocation(line: 932, column: 11, scope: !3859)
!3952 = !DILocation(line: 932, column: 19, scope: !3859)
!3953 = !DILocation(line: 938, column: 21, scope: !3859)
!3954 = !DILocation(line: 938, column: 12, scope: !3859)
!3955 = !DILocation(line: 939, column: 19, scope: !3859)
!3956 = !DILocation(line: 939, column: 23, scope: !3859)
!3957 = !DILocation(line: 946, column: 14, scope: !3958)
!3958 = distinct !DILexicalBlock(scope: !3859, file: !200, line: 946, column: 6)
!3959 = !DILocation(line: 947, column: 7, scope: !3960)
!3960 = distinct !DILexicalBlock(scope: !3961, file: !200, line: 947, column: 7)
!3961 = distinct !DILexicalBlock(scope: !3958, file: !200, line: 946, column: 26)
!3962 = !DILocation(line: 947, column: 7, scope: !3961)
!3963 = !DILocation(line: 948, column: 4, scope: !3964)
!3964 = distinct !DILexicalBlock(scope: !3960, file: !200, line: 947, column: 11)
!3965 = !DILocation(line: 949, column: 3, scope: !3964)
!3966 = !DILocation(line: 958, column: 23, scope: !3859)
!3967 = !DILocation(line: 958, column: 14, scope: !3859)
!3968 = !DILocation(line: 958, column: 27, scope: !3859)
!3969 = !DILocation(line: 965, column: 41, scope: !3859)
!3970 = !DILocation(line: 965, column: 20, scope: !3859)
!3971 = !DILocation(line: 966, column: 22, scope: !3859)
!3972 = !DILocation(line: 970, column: 9, scope: !3893)
!3973 = !DILocation(line: 970, column: 6, scope: !3859)
!3974 = !DILocation(line: 972, column: 7, scope: !3892)
!3975 = !DILocation(line: 0, scope: !3889)
!3976 = !DILocation(line: 973, column: 4, scope: !3889)
!3977 = !DILocation(line: 974, column: 46, scope: !3895)
!3978 = !DILocation(line: 974, column: 40, scope: !3895)
!3979 = !DILocation(line: 974, column: 23, scope: !3895)
!3980 = !DILocation(line: 0, scope: !3895)
!3981 = !DILocation(line: 975, column: 15, scope: !3895)
!3982 = !DILocation(line: 978, column: 14, scope: !3983)
!3983 = distinct !DILexicalBlock(scope: !3895, file: !200, line: 978, column: 9)
!3984 = !DILocation(line: 979, column: 25, scope: !3985)
!3985 = distinct !DILexicalBlock(scope: !3983, file: !200, line: 978, column: 38)
!3986 = !DILocation(line: 979, column: 19, scope: !3985)
!3987 = !DILocation(line: 979, column: 6, scope: !3985)
!3988 = !DILocation(line: 979, column: 23, scope: !3985)
!3989 = !DILocation(line: 980, column: 5, scope: !3985)
!3990 = !DILocation(line: 981, column: 13, scope: !3895)
!3991 = !DILocation(line: 982, column: 12, scope: !3895)
!3992 = !DILocation(line: 973, column: 34, scope: !3896)
!3993 = !DILocation(line: 973, column: 22, scope: !3896)
!3994 = distinct !{!3994, !3976, !3995}
!3995 = !DILocation(line: 983, column: 4, scope: !3889)
!3996 = !DILocation(line: 985, column: 16, scope: !3997)
!3997 = distinct !DILexicalBlock(scope: !3998, file: !200, line: 985, column: 8)
!3998 = distinct !DILexicalBlock(scope: !3891, file: !200, line: 984, column: 10)
!3999 = !DILocation(line: 967, column: 9, scope: !3859)
!4000 = !DILocation(line: 971, column: 11, scope: !3892)
!4001 = !DILocation(line: 0, scope: !3892)
!4002 = !DILocation(line: 0, scope: !3900)
!4003 = !DILocation(line: 995, column: 21, scope: !3903)
!4004 = !DILocation(line: 995, column: 3, scope: !3900)
!4005 = !DILocation(line: 990, column: 34, scope: !3892)
!4006 = !DILocation(line: 990, column: 26, scope: !3892)
!4007 = !DILocation(line: 996, column: 30, scope: !3902)
!4008 = !DILocation(line: 0, scope: !3902)
!4009 = !DILocation(line: 997, column: 30, scope: !3902)
!4010 = !DILocation(line: 997, column: 22, scope: !3902)
!4011 = !DILocation(line: 998, column: 39, scope: !3902)
!4012 = !DILocation(line: 998, column: 22, scope: !3902)
!4013 = !DILocation(line: 999, column: 17, scope: !3902)
!4014 = !DILocation(line: 1002, column: 20, scope: !4015)
!4015 = distinct !DILexicalBlock(scope: !3902, file: !200, line: 1002, column: 8)
!4016 = !DILocation(line: 996, column: 22, scope: !3902)
!4017 = !DILocation(line: 1002, column: 35, scope: !4015)
!4018 = !DILocation(line: 1002, column: 23, scope: !4015)
!4019 = !DILocation(line: 1002, column: 8, scope: !3902)
!4020 = !DILocation(line: 1003, column: 5, scope: !4021)
!4021 = distinct !DILexicalBlock(scope: !4022, file: !200, line: 1003, column: 5)
!4022 = distinct !DILexicalBlock(scope: !4023, file: !200, line: 1003, column: 5)
!4023 = distinct !DILexicalBlock(scope: !4024, file: !200, line: 1003, column: 5)
!4024 = distinct !DILexicalBlock(scope: !4025, file: !200, line: 1003, column: 5)
!4025 = distinct !DILexicalBlock(scope: !4015, file: !200, line: 1002, column: 45)
!4026 = !DILocation(line: 1010, column: 13, scope: !4025)
!4027 = !DILocation(line: 1011, column: 5, scope: !4025)
!4028 = !DILocation(line: 1014, column: 8, scope: !3902)
!4029 = !DILocation(line: 1015, column: 9, scope: !4030)
!4030 = distinct !DILexicalBlock(scope: !3935, file: !200, line: 1014, column: 15)
!4031 = !DILocation(line: 1018, column: 14, scope: !4032)
!4032 = distinct !DILexicalBlock(scope: !4033, file: !200, line: 1017, column: 12)
!4033 = distinct !DILexicalBlock(scope: !4030, file: !200, line: 1015, column: 9)
!4034 = !DILocation(line: 1020, column: 4, scope: !4030)
!4035 = !DILocation(line: 1020, column: 15, scope: !3935)
!4036 = !DILocation(line: 1021, column: 1, scope: !3933)
!4037 = !DILocation(line: 1022, column: 11, scope: !3933)
!4038 = !DILocation(line: 1025, column: 14, scope: !4039)
!4039 = distinct !DILexicalBlock(scope: !3933, file: !200, line: 1025, column: 9)
!4040 = !DILocation(line: 1026, column: 25, scope: !4041)
!4041 = distinct !DILexicalBlock(scope: !4039, file: !200, line: 1025, column: 38)
!4042 = !DILocation(line: 1026, column: 19, scope: !4041)
!4043 = !DILocation(line: 1026, column: 6, scope: !4041)
!4044 = !DILocation(line: 1026, column: 23, scope: !4041)
!4045 = !DILocation(line: 1027, column: 5, scope: !4041)
!4046 = !DILocation(line: 1031, column: 21, scope: !3933)
!4047 = !DILocation(line: 1031, column: 13, scope: !3933)
!4048 = !DILocation(line: 1032, column: 4, scope: !3933)
!4049 = !DILocation(line: 995, column: 33, scope: !3903)
!4050 = distinct !{!4050, !4004, !4051}
!4051 = !DILocation(line: 1033, column: 3, scope: !3900)
!4052 = !DILocation(line: 1040, column: 10, scope: !3859)
!4053 = !DILocation(line: 1042, column: 10, scope: !3859)
!4054 = !DILocation(line: 1052, column: 6, scope: !3859)
!4055 = !DILocation(line: 1055, column: 9, scope: !4056)
!4056 = distinct !DILexicalBlock(scope: !4057, file: !200, line: 1052, column: 14)
!4057 = distinct !DILexicalBlock(scope: !3859, file: !200, line: 1052, column: 6)
!4058 = !DILocation(line: 1056, column: 2, scope: !4056)
!4059 = !DILocation(line: 1056, column: 21, scope: !4060)
!4060 = distinct !DILexicalBlock(scope: !4057, file: !200, line: 1056, column: 13)
!4061 = !DILocation(line: 1066, column: 3, scope: !4062)
!4062 = distinct !DILexicalBlock(scope: !4063, file: !200, line: 1065, column: 11)
!4063 = distinct !DILexicalBlock(scope: !3859, file: !200, line: 1065, column: 6)
!4064 = !DILocation(line: 1067, column: 2, scope: !4062)
!4065 = !DILocation(line: 1068, column: 10, scope: !3859)
!4066 = !DILocation(line: 0, scope: !3916)
!4067 = !DILocation(line: 1074, column: 20, scope: !3919)
!4068 = !DILocation(line: 1074, column: 2, scope: !3916)
!4069 = !DILocation(line: 1110, column: 24, scope: !3859)
!4070 = !DILocation(line: 1053, column: 12, scope: !4056)
!4071 = !DILocation(line: 1054, column: 12, scope: !4056)
!4072 = !DILocation(line: 1108, column: 30, scope: !3859)
!4073 = !DILocation(line: 1108, column: 40, scope: !3859)
!4074 = !DILocation(line: 1108, column: 38, scope: !3859)
!4075 = !DILocation(line: 1109, column: 31, scope: !3859)
!4076 = !DILocation(line: 1109, column: 24, scope: !3859)
!4077 = !DILocation(line: 1110, column: 31, scope: !3859)
!4078 = !DILocation(line: 1114, column: 31, scope: !3859)
!4079 = !DILocation(line: 1114, column: 48, scope: !3859)
!4080 = !DILocation(line: 1115, column: 13, scope: !3859)
!4081 = !DILocation(line: 1118, column: 7, scope: !3859)
!4082 = !DILocation(line: 1119, column: 9, scope: !4083)
!4083 = distinct !DILexicalBlock(scope: !3859, file: !200, line: 1119, column: 6)
!4084 = !DILocation(line: 1119, column: 6, scope: !3859)
!4085 = !DILocation(line: 1075, column: 29, scope: !3918)
!4086 = !DILocation(line: 1075, column: 21, scope: !3918)
!4087 = !DILocation(line: 0, scope: !3918)
!4088 = !DILocation(line: 1076, column: 29, scope: !3918)
!4089 = !DILocation(line: 1076, column: 21, scope: !3918)
!4090 = !DILocation(line: 1077, column: 38, scope: !3918)
!4091 = !DILocation(line: 1077, column: 21, scope: !3918)
!4092 = !DILocation(line: 1078, column: 16, scope: !3918)
!4093 = !DILocation(line: 1080, column: 19, scope: !4094)
!4094 = distinct !DILexicalBlock(scope: !3918, file: !200, line: 1080, column: 7)
!4095 = !DILocation(line: 1080, column: 34, scope: !4094)
!4096 = !DILocation(line: 1080, column: 22, scope: !4094)
!4097 = !DILocation(line: 1080, column: 7, scope: !3918)
!4098 = !DILocation(line: 1084, column: 7, scope: !3918)
!4099 = !DILocation(line: 1085, column: 8, scope: !4100)
!4100 = distinct !DILexicalBlock(scope: !4101, file: !200, line: 1084, column: 14)
!4101 = distinct !DILexicalBlock(scope: !3918, file: !200, line: 1084, column: 7)
!4102 = !DILocation(line: 1086, column: 5, scope: !4103)
!4103 = distinct !DILexicalBlock(scope: !4104, file: !200, line: 1086, column: 5)
!4104 = distinct !DILexicalBlock(scope: !4105, file: !200, line: 1086, column: 5)
!4105 = distinct !DILexicalBlock(scope: !4106, file: !200, line: 1085, column: 49)
!4106 = distinct !DILexicalBlock(scope: !4100, file: !200, line: 1085, column: 8)
!4107 = !DILocation(line: 1086, column: 5, scope: !4104)
!4108 = !DILocation(line: 1086, column: 5, scope: !4109)
!4109 = distinct !DILexicalBlock(scope: !4103, file: !200, line: 1086, column: 5)
!4110 = !DILocation(line: 1087, column: 25, scope: !4105)
!4111 = !DILocation(line: 1087, column: 5, scope: !4105)
!4112 = !DILocation(line: 1088, column: 4, scope: !4105)
!4113 = !DILocation(line: 1088, column: 15, scope: !4106)
!4114 = !DILocation(line: 1089, column: 5, scope: !4115)
!4115 = distinct !DILexicalBlock(scope: !4116, file: !200, line: 1089, column: 5)
!4116 = distinct !DILexicalBlock(scope: !4117, file: !200, line: 1089, column: 5)
!4117 = distinct !DILexicalBlock(scope: !4118, file: !200, line: 1088, column: 61)
!4118 = distinct !DILexicalBlock(scope: !4106, file: !200, line: 1088, column: 15)
!4119 = !DILocation(line: 1089, column: 5, scope: !4116)
!4120 = !DILocation(line: 1089, column: 5, scope: !4121)
!4121 = distinct !DILexicalBlock(scope: !4115, file: !200, line: 1089, column: 5)
!4122 = !DILocation(line: 1090, column: 26, scope: !4117)
!4123 = !DILocation(line: 1090, column: 5, scope: !4117)
!4124 = !DILocation(line: 1091, column: 4, scope: !4117)
!4125 = !DILocation(line: 1095, column: 8, scope: !4126)
!4126 = distinct !DILexicalBlock(scope: !4101, file: !200, line: 1094, column: 10)
!4127 = !DILocation(line: 1096, column: 5, scope: !4128)
!4128 = distinct !DILexicalBlock(scope: !4129, file: !200, line: 1096, column: 5)
!4129 = distinct !DILexicalBlock(scope: !4130, file: !200, line: 1096, column: 5)
!4130 = distinct !DILexicalBlock(scope: !4131, file: !200, line: 1095, column: 49)
!4131 = distinct !DILexicalBlock(scope: !4126, file: !200, line: 1095, column: 8)
!4132 = !DILocation(line: 1096, column: 5, scope: !4129)
!4133 = !DILocation(line: 1096, column: 5, scope: !4134)
!4134 = distinct !DILexicalBlock(scope: !4128, file: !200, line: 1096, column: 5)
!4135 = !DILocation(line: 1097, column: 25, scope: !4130)
!4136 = !DILocation(line: 1097, column: 5, scope: !4130)
!4137 = !DILocation(line: 1098, column: 4, scope: !4130)
!4138 = !DILocation(line: 1099, column: 5, scope: !4139)
!4139 = distinct !DILexicalBlock(scope: !4140, file: !200, line: 1099, column: 5)
!4140 = distinct !DILexicalBlock(scope: !4141, file: !200, line: 1099, column: 5)
!4141 = distinct !DILexicalBlock(scope: !4131, file: !200, line: 1098, column: 11)
!4142 = !DILocation(line: 1099, column: 5, scope: !4140)
!4143 = !DILocation(line: 1099, column: 5, scope: !4144)
!4144 = distinct !DILexicalBlock(scope: !4139, file: !200, line: 1099, column: 5)
!4145 = !DILocation(line: 1100, column: 26, scope: !4141)
!4146 = !DILocation(line: 1100, column: 5, scope: !4141)
!4147 = !DILocation(line: 1100, column: 30, scope: !4141)
!4148 = !DILocation(line: 1101, column: 26, scope: !4141)
!4149 = !DILocation(line: 1101, column: 5, scope: !4141)
!4150 = !DILocation(line: 0, scope: !4101)
!4151 = !DILocation(line: 1074, column: 32, scope: !3919)
!4152 = distinct !{!4152, !4068, !4153}
!4153 = !DILocation(line: 1104, column: 2, scope: !3916)
!4154 = !DILocation(line: 1124, column: 13, scope: !3859)
!4155 = !DILocation(line: 1127, column: 10, scope: !3859)
!4156 = !DILocation(line: 1127, column: 7, scope: !3859)
!4157 = !DILocation(line: 1128, column: 9, scope: !4158)
!4158 = distinct !DILexicalBlock(scope: !3859, file: !200, line: 1128, column: 6)
!4159 = !DILocation(line: 1128, column: 6, scope: !3859)
!4160 = !DILocation(line: 1134, column: 27, scope: !3859)
!4161 = !DILocation(line: 1136, column: 7, scope: !3859)
!4162 = !DILocation(line: 1137, column: 9, scope: !4163)
!4163 = distinct !DILexicalBlock(scope: !3859, file: !200, line: 1137, column: 6)
!4164 = !DILocation(line: 1137, column: 6, scope: !3859)
!4165 = !DILocation(line: 1131, column: 10, scope: !3859)
!4166 = !DILocation(line: 1140, column: 10, scope: !3859)
!4167 = !DILocation(line: 0, scope: !3926)
!4168 = !DILocation(line: 1143, column: 20, scope: !3929)
!4169 = !DILocation(line: 1143, column: 2, scope: !3926)
!4170 = !DILocation(line: 1144, column: 3, scope: !3928)
!4171 = !DILocation(line: 1144, column: 17, scope: !3928)
!4172 = !DILocation(line: 0, scope: !3928)
!4173 = !DILocation(line: 1144, column: 11, scope: !3928)
!4174 = !DILocation(line: 1145, column: 38, scope: !3928)
!4175 = !DILocation(line: 1145, column: 21, scope: !3928)
!4176 = !DILocation(line: 1146, column: 22, scope: !3928)
!4177 = !DILocation(line: 1146, column: 29, scope: !3928)
!4178 = !DILocation(line: 1148, column: 8, scope: !3928)
!4179 = !DILocation(line: 1149, column: 10, scope: !4180)
!4180 = distinct !DILexicalBlock(scope: !3928, file: !200, line: 1149, column: 7)
!4181 = !DILocation(line: 1149, column: 7, scope: !3928)
!4182 = !DILocation(line: 1154, column: 8, scope: !3928)
!4183 = !DILocation(line: 1155, column: 10, scope: !4184)
!4184 = distinct !DILexicalBlock(scope: !3928, file: !200, line: 1155, column: 7)
!4185 = !DILocation(line: 1155, column: 7, scope: !3928)
!4186 = !DILocation(line: 1159, column: 2, scope: !3929)
!4187 = !DILocation(line: 1152, column: 11, scope: !3928)
!4188 = !DILocation(line: 1158, column: 11, scope: !3928)
!4189 = !DILocation(line: 1143, column: 33, scope: !3929)
!4190 = distinct !{!4190, !4169, !4191}
!4191 = !DILocation(line: 1159, column: 2, scope: !3926)
!4192 = !DILocation(line: 1162, column: 8, scope: !3859)
!4193 = !DILocation(line: 1164, column: 2, scope: !3859)
!4194 = !DILocation(line: 1165, column: 1, scope: !3859)
!4195 = distinct !DISubprogram(name: "get_package_len", scope: !200, file: !200, line: 196, type: !4196, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !4198)
!4196 = !DISubroutineType(types: !4197)
!4197 = !{!185, !106}
!4198 = !{!4199, !4200, !4201, !4202, !4203, !4204, !4205}
!4199 = !DILocalVariable(name: "packaged", arg: 1, scope: !4195, file: !200, line: 196, type: !106)
!4200 = !DILocalVariable(name: "buf", scope: !4195, file: !200, line: 200, type: !194)
!4201 = !DILocalVariable(name: "start", scope: !4195, file: !200, line: 201, type: !194)
!4202 = !DILocalVariable(name: "args_size", scope: !4195, file: !200, line: 202, type: !32)
!4203 = !DILocalVariable(name: "s_nbr", scope: !4195, file: !200, line: 202, type: !32)
!4204 = !DILocalVariable(name: "ros_nbr", scope: !4195, file: !200, line: 202, type: !32)
!4205 = !DILocalVariable(name: "i", scope: !4206, file: !200, line: 215, type: !107)
!4206 = distinct !DILexicalBlock(scope: !4195, file: !200, line: 215, column: 2)
!4207 = !DILocation(line: 0, scope: !4195)
!4208 = !DILocation(line: 198, column: 2, scope: !4209)
!4209 = distinct !DILexicalBlock(scope: !4210, file: !200, line: 198, column: 2)
!4210 = distinct !DILexicalBlock(scope: !4195, file: !200, line: 198, column: 2)
!4211 = !DILocation(line: 198, column: 2, scope: !4210)
!4212 = !DILocation(line: 198, column: 2, scope: !4213)
!4213 = distinct !DILexicalBlock(scope: !4209, file: !200, line: 198, column: 2)
!4214 = !DILocation(line: 204, column: 14, scope: !4195)
!4215 = !DILocation(line: 204, column: 21, scope: !4195)
!4216 = !DILocation(line: 205, column: 14, scope: !4195)
!4217 = !DILocation(line: 206, column: 14, scope: !4195)
!4218 = !DILocation(line: 209, column: 6, scope: !4195)
!4219 = !DILocation(line: 212, column: 6, scope: !4195)
!4220 = !DILocation(line: 0, scope: !4206)
!4221 = !DILocation(line: 215, column: 20, scope: !4222)
!4222 = distinct !DILexicalBlock(scope: !4206, file: !200, line: 215, column: 2)
!4223 = !DILocation(line: 215, column: 2, scope: !4206)
!4224 = !DILocation(line: 220, column: 33, scope: !4195)
!4225 = !DILocation(line: 220, column: 2, scope: !4195)
!4226 = !DILocation(line: 216, column: 6, scope: !4227)
!4227 = distinct !DILexicalBlock(scope: !4222, file: !200, line: 215, column: 34)
!4228 = !DILocation(line: 217, column: 10, scope: !4227)
!4229 = !DILocation(line: 217, column: 36, scope: !4227)
!4230 = !DILocation(line: 217, column: 7, scope: !4227)
!4231 = !DILocation(line: 215, column: 30, scope: !4222)
!4232 = distinct !{!4232, !4223, !4233}
!4233 = !DILocation(line: 218, column: 2, scope: !4206)
!4234 = distinct !DISubprogram(name: "append_string", scope: !200, file: !200, line: 223, type: !4235, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !4237)
!4235 = !DISubroutineType(types: !4236)
!4236 = !{!107, !3862, !106, !118, !197}
!4237 = !{!4238, !4239, !4240, !4241}
!4238 = !DILocalVariable(name: "cb", arg: 1, scope: !4234, file: !200, line: 223, type: !3862)
!4239 = !DILocalVariable(name: "ctx", arg: 2, scope: !4234, file: !200, line: 223, type: !106)
!4240 = !DILocalVariable(name: "str", arg: 3, scope: !4234, file: !200, line: 223, type: !118)
!4241 = !DILocalVariable(name: "strl", arg: 4, scope: !4234, file: !200, line: 223, type: !197)
!4242 = !DILocation(line: 0, scope: !4234)
!4243 = !DILocation(line: 225, column: 9, scope: !4244)
!4244 = distinct !DILexicalBlock(scope: !4234, file: !200, line: 225, column: 6)
!4245 = !DILocation(line: 225, column: 6, scope: !4234)
!4246 = !DILocation(line: 226, column: 14, scope: !4247)
!4247 = distinct !DILexicalBlock(scope: !4244, file: !200, line: 225, column: 18)
!4248 = !DILocation(line: 226, column: 12, scope: !4247)
!4249 = !DILocation(line: 226, column: 3, scope: !4247)
!4250 = !DILocation(line: 229, column: 14, scope: !4234)
!4251 = !DILocation(line: 229, column: 9, scope: !4234)
!4252 = !DILocation(line: 229, column: 27, scope: !4234)
!4253 = !DILocation(line: 229, column: 39, scope: !4234)
!4254 = !DILocation(line: 230, column: 17, scope: !4234)
!4255 = !DILocation(line: 230, column: 9, scope: !4234)
!4256 = !DILocation(line: 230, column: 2, scope: !4234)
!4257 = !DILocation(line: 231, column: 1, scope: !4234)
!4258 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !212, file: !212, line: 45, type: !214, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4259)
!4259 = !{!4260}
!4260 = !DILocalVariable(name: "c", arg: 1, scope: !4258, file: !212, line: 45, type: !107)
!4261 = !DILocation(line: 0, scope: !4258)
!4262 = !DILocation(line: 50, column: 2, scope: !4258)
!4263 = distinct !DISubprogram(name: "__printk_hook_install", scope: !212, file: !212, line: 63, type: !4264, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4266)
!4264 = !DISubroutineType(types: !4265)
!4265 = !{null, !213}
!4266 = !{!4267}
!4267 = !DILocalVariable(name: "fn", arg: 1, scope: !4263, file: !212, line: 63, type: !213)
!4268 = !DILocation(line: 0, scope: !4263)
!4269 = !DILocation(line: 65, column: 12, scope: !4263)
!4270 = !DILocation(line: 66, column: 1, scope: !4263)
!4271 = distinct !DISubprogram(name: "__printk_get_hook", scope: !212, file: !212, line: 76, type: !125, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !2296)
!4272 = !DILocation(line: 78, column: 9, scope: !4271)
!4273 = !DILocation(line: 78, column: 2, scope: !4271)
!4274 = distinct !DISubprogram(name: "vprintk", scope: !212, file: !212, line: 113, type: !4275, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4283)
!4275 = !DISubroutineType(types: !4276)
!4276 = !{null, !118, !4277}
!4277 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3350, line: 99, baseType: !4278)
!4278 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3350, line: 40, baseType: !4279)
!4279 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !212, baseType: !4280)
!4280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4281)
!4281 = !{!4282}
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4280, file: !212, line: 79, baseType: !106, size: 32)
!4283 = !{!4284, !4285, !4286}
!4284 = !DILocalVariable(name: "fmt", arg: 1, scope: !4274, file: !212, line: 113, type: !118)
!4285 = !DILocalVariable(name: "ap", arg: 2, scope: !4274, file: !212, line: 113, type: !4277)
!4286 = !DILocalVariable(name: "ctx", scope: !4287, file: !212, line: 121, type: !4289)
!4287 = distinct !DILexicalBlock(scope: !4288, file: !212, line: 120, column: 27)
!4288 = distinct !DILexicalBlock(scope: !4274, file: !212, line: 120, column: 6)
!4289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !212, line: 81, size: 32, elements: !4290)
!4290 = !{!4291, !4292}
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !4289, file: !212, line: 85, baseType: !32, size: 32)
!4292 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4289, file: !212, line: 86, baseType: !4293, offset: 32)
!4293 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, elements: !4294)
!4294 = !{!4295}
!4295 = !DISubrange(count: 0)
!4296 = !DILocation(line: 0, scope: !4274)
!4297 = !DILocation(line: 148, column: 3, scope: !4298)
!4298 = distinct !DILexicalBlock(scope: !4288, file: !212, line: 138, column: 9)
!4299 = !DILocation(line: 155, column: 1, scope: !4274)
!4300 = distinct !DISubprogram(name: "char_out", scope: !212, file: !212, line: 107, type: !4301, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4303)
!4301 = !DISubroutineType(types: !4302)
!4302 = !{!107, !107, !106}
!4303 = !{!4304, !4305}
!4304 = !DILocalVariable(name: "c", arg: 1, scope: !4300, file: !212, line: 107, type: !107)
!4305 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !4300, file: !212, line: 107, type: !106)
!4306 = !DILocation(line: 0, scope: !4300)
!4307 = !DILocation(line: 110, column: 9, scope: !4300)
!4308 = !DILocation(line: 110, column: 2, scope: !4300)
!4309 = distinct !DISubprogram(name: "cbvprintf", scope: !3382, file: !3382, line: 739, type: !4310, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4312)
!4310 = !DISubroutineType(types: !4311)
!4311 = !{!107, !3730, !106, !118, !4277}
!4312 = !{!4313, !4314, !4315, !4316}
!4313 = !DILocalVariable(name: "out", arg: 1, scope: !4309, file: !3382, line: 739, type: !3730)
!4314 = !DILocalVariable(name: "ctx", arg: 2, scope: !4309, file: !3382, line: 739, type: !106)
!4315 = !DILocalVariable(name: "format", arg: 3, scope: !4309, file: !3382, line: 739, type: !118)
!4316 = !DILocalVariable(name: "ap", arg: 4, scope: !4309, file: !3382, line: 739, type: !4277)
!4317 = !DILocation(line: 0, scope: !4309)
!4318 = !DILocation(line: 741, column: 9, scope: !4309)
!4319 = !DILocation(line: 741, column: 2, scope: !4309)
!4320 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !212, file: !212, line: 157, type: !4321, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4323)
!4321 = !DISubroutineType(types: !4322)
!4322 = !{null, !193, !185}
!4323 = !{!4324, !4325, !4326}
!4324 = !DILocalVariable(name: "c", arg: 1, scope: !4320, file: !212, line: 157, type: !193)
!4325 = !DILocalVariable(name: "n", arg: 2, scope: !4320, file: !212, line: 157, type: !185)
!4326 = !DILocalVariable(name: "i", scope: !4320, file: !212, line: 159, type: !185)
!4327 = !DILocation(line: 0, scope: !4320)
!4328 = !DILocation(line: 164, column: 16, scope: !4329)
!4329 = distinct !DILexicalBlock(scope: !4330, file: !212, line: 164, column: 2)
!4330 = distinct !DILexicalBlock(scope: !4320, file: !212, line: 164, column: 2)
!4331 = !DILocation(line: 164, column: 2, scope: !4330)
!4332 = !DILocation(line: 165, column: 3, scope: !4333)
!4333 = distinct !DILexicalBlock(scope: !4329, file: !212, line: 164, column: 26)
!4334 = !DILocation(line: 165, column: 13, scope: !4333)
!4335 = !DILocation(line: 164, column: 22, scope: !4329)
!4336 = distinct !{!4336, !4331, !4337}
!4337 = !DILocation(line: 166, column: 2, scope: !4330)
!4338 = !DILocation(line: 171, column: 1, scope: !4320)
!4339 = distinct !DISubprogram(name: "printk", scope: !212, file: !212, line: 203, type: !4340, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4342)
!4340 = !DISubroutineType(types: !4341)
!4341 = !{null, !118, null}
!4342 = !{!4343, !4344}
!4343 = !DILocalVariable(name: "fmt", arg: 1, scope: !4339, file: !212, line: 203, type: !118)
!4344 = !DILocalVariable(name: "ap", scope: !4339, file: !212, line: 205, type: !4277)
!4345 = !DILocation(line: 0, scope: !4339)
!4346 = !DILocation(line: 205, column: 2, scope: !4339)
!4347 = !DILocation(line: 205, column: 10, scope: !4339)
!4348 = !DILocation(line: 207, column: 2, scope: !4339)
!4349 = !DILocation(line: 209, column: 2, scope: !4339)
!4350 = !DILocation(line: 211, column: 2, scope: !4339)
!4351 = !DILocation(line: 212, column: 1, scope: !4339)
!4352 = distinct !DISubprogram(name: "snprintk", scope: !212, file: !212, line: 239, type: !4353, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4355)
!4353 = !DISubroutineType(types: !4354)
!4354 = !{!107, !193, !185, !118, null}
!4355 = !{!4356, !4357, !4358, !4359, !4360}
!4356 = !DILocalVariable(name: "str", arg: 1, scope: !4352, file: !212, line: 239, type: !193)
!4357 = !DILocalVariable(name: "size", arg: 2, scope: !4352, file: !212, line: 239, type: !185)
!4358 = !DILocalVariable(name: "fmt", arg: 3, scope: !4352, file: !212, line: 239, type: !118)
!4359 = !DILocalVariable(name: "ap", scope: !4352, file: !212, line: 241, type: !4277)
!4360 = !DILocalVariable(name: "ret", scope: !4352, file: !212, line: 242, type: !107)
!4361 = !DILocation(line: 0, scope: !4352)
!4362 = !DILocation(line: 241, column: 2, scope: !4352)
!4363 = !DILocation(line: 241, column: 10, scope: !4352)
!4364 = !DILocation(line: 244, column: 2, scope: !4352)
!4365 = !DILocation(line: 245, column: 8, scope: !4352)
!4366 = !DILocation(line: 246, column: 2, scope: !4352)
!4367 = !DILocation(line: 249, column: 1, scope: !4352)
!4368 = !DILocation(line: 248, column: 2, scope: !4352)
!4369 = distinct !DISubprogram(name: "vsnprintk", scope: !212, file: !212, line: 251, type: !4370, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4372)
!4370 = !DISubroutineType(types: !4371)
!4371 = !{!107, !193, !185, !118, !4277}
!4372 = !{!4373, !4374, !4375, !4376, !4377}
!4373 = !DILocalVariable(name: "str", arg: 1, scope: !4369, file: !212, line: 251, type: !193)
!4374 = !DILocalVariable(name: "size", arg: 2, scope: !4369, file: !212, line: 251, type: !185)
!4375 = !DILocalVariable(name: "fmt", arg: 3, scope: !4369, file: !212, line: 251, type: !118)
!4376 = !DILocalVariable(name: "ap", arg: 4, scope: !4369, file: !212, line: 251, type: !4277)
!4377 = !DILocalVariable(name: "ctx", scope: !4369, file: !212, line: 253, type: !4378)
!4378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !212, line: 217, size: 96, elements: !4379)
!4379 = !{!4380, !4381, !4382}
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4378, file: !212, line: 218, baseType: !193, size: 32)
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4378, file: !212, line: 219, baseType: !107, size: 32, offset: 32)
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4378, file: !212, line: 220, baseType: !107, size: 32, offset: 64)
!4383 = !DILocation(line: 0, scope: !4369)
!4384 = !DILocation(line: 253, column: 2, scope: !4369)
!4385 = !DILocation(line: 253, column: 21, scope: !4369)
!4386 = !DILocation(line: 253, column: 27, scope: !4369)
!4387 = !DILocation(line: 255, column: 2, scope: !4369)
!4388 = !DILocation(line: 257, column: 10, scope: !4389)
!4389 = distinct !DILexicalBlock(scope: !4369, file: !212, line: 257, column: 6)
!4390 = !DILocation(line: 257, column: 22, scope: !4389)
!4391 = !DILocation(line: 257, column: 16, scope: !4389)
!4392 = !DILocation(line: 257, column: 6, scope: !4369)
!4393 = !DILocation(line: 258, column: 3, scope: !4394)
!4394 = distinct !DILexicalBlock(scope: !4389, file: !212, line: 257, column: 27)
!4395 = !DILocation(line: 258, column: 18, scope: !4394)
!4396 = !DILocation(line: 259, column: 2, scope: !4394)
!4397 = !DILocation(line: 262, column: 1, scope: !4369)
!4398 = !DILocation(line: 261, column: 2, scope: !4369)
!4399 = distinct !DISubprogram(name: "str_out", scope: !212, file: !212, line: 223, type: !4400, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4403)
!4400 = !DISubroutineType(types: !4401)
!4401 = !{!107, !107, !4402}
!4402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4378, size: 32)
!4403 = !{!4404, !4405}
!4404 = !DILocalVariable(name: "c", arg: 1, scope: !4399, file: !212, line: 223, type: !107)
!4405 = !DILocalVariable(name: "ctx", arg: 2, scope: !4399, file: !212, line: 223, type: !4402)
!4406 = !DILocation(line: 0, scope: !4399)
!4407 = !DILocation(line: 225, column: 11, scope: !4408)
!4408 = distinct !DILexicalBlock(scope: !4399, file: !212, line: 225, column: 6)
!4409 = !DILocation(line: 225, column: 15, scope: !4408)
!4410 = !DILocation(line: 0, scope: !4408)
!4411 = !DILocation(line: 225, column: 23, scope: !4408)
!4412 = !DILocation(line: 225, column: 45, scope: !4408)
!4413 = !DILocation(line: 225, column: 37, scope: !4408)
!4414 = !DILocation(line: 225, column: 6, scope: !4399)
!4415 = !DILocation(line: 226, column: 8, scope: !4416)
!4416 = distinct !DILexicalBlock(scope: !4408, file: !212, line: 225, column: 50)
!4417 = !DILocation(line: 226, column: 13, scope: !4416)
!4418 = !DILocation(line: 227, column: 3, scope: !4416)
!4419 = !DILocation(line: 230, column: 29, scope: !4420)
!4420 = distinct !DILexicalBlock(scope: !4399, file: !212, line: 230, column: 6)
!4421 = !DILocation(line: 230, column: 17, scope: !4420)
!4422 = !DILocation(line: 230, column: 6, scope: !4399)
!4423 = !DILocation(line: 231, column: 22, scope: !4424)
!4424 = distinct !DILexicalBlock(scope: !4420, file: !212, line: 230, column: 34)
!4425 = !DILocation(line: 231, column: 3, scope: !4424)
!4426 = !DILocation(line: 231, column: 26, scope: !4424)
!4427 = !DILocation(line: 232, column: 2, scope: !4424)
!4428 = !DILocation(line: 233, column: 28, scope: !4429)
!4429 = distinct !DILexicalBlock(scope: !4420, file: !212, line: 232, column: 9)
!4430 = !DILocation(line: 233, column: 22, scope: !4429)
!4431 = !DILocation(line: 233, column: 3, scope: !4429)
!4432 = !DILocation(line: 233, column: 26, scope: !4429)
!4433 = !DILocation(line: 237, column: 1, scope: !4399)
!4434 = distinct !DISubprogram(name: "z_thread_entry", scope: !4435, file: !4435, line: 30, type: !4436, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !4438)
!4435 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4436 = !DISubroutineType(types: !4437)
!4437 = !{null, !559, !106, !106, !106}
!4438 = !{!4439, !4440, !4441, !4442}
!4439 = !DILocalVariable(name: "entry", arg: 1, scope: !4434, file: !4435, line: 30, type: !559)
!4440 = !DILocalVariable(name: "p1", arg: 2, scope: !4434, file: !4435, line: 31, type: !106)
!4441 = !DILocalVariable(name: "p2", arg: 3, scope: !4434, file: !4435, line: 31, type: !106)
!4442 = !DILocalVariable(name: "p3", arg: 4, scope: !4434, file: !4435, line: 31, type: !106)
!4443 = !DILocation(line: 0, scope: !4434)
!4444 = !DILocation(line: 36, column: 2, scope: !4434)
!4445 = !DILocation(line: 38, column: 17, scope: !4434)
!4446 = !DILocation(line: 38, column: 2, scope: !4434)
!4447 = !DILocation(line: 45, column: 2, scope: !4434)
!4448 = distinct !DISubprogram(name: "k_current_get", scope: !406, file: !406, line: 530, type: !4449, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !2296)
!4449 = !DISubroutineType(types: !4450)
!4450 = !{!4451}
!4451 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !4452)
!4452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4453, size: 32)
!4453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !4454)
!4454 = !{!4455, !4513, !4525, !4526, !4527, !4528, !4529, !4535, !4550}
!4455 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4453, file: !309, line: 247, baseType: !4456, size: 384)
!4456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !4457)
!4457 = !{!4458, !4482, !4489, !4490, !4491, !4500, !4501, !4502}
!4458 = !DIDerivedType(tag: DW_TAG_member, scope: !4456, file: !309, line: 60, baseType: !4459, size: 64)
!4459 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4456, file: !309, line: 60, size: 64, elements: !4460)
!4460 = !{!4461, !4476}
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !4459, file: !309, line: 61, baseType: !4462, size: 64)
!4462 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !4463)
!4463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !4464)
!4464 = !{!4465, !4471}
!4465 = !DIDerivedType(tag: DW_TAG_member, scope: !4463, file: !319, line: 38, baseType: !4466, size: 32)
!4466 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4463, file: !319, line: 38, size: 32, elements: !4467)
!4467 = !{!4468, !4470}
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4466, file: !319, line: 39, baseType: !4469, size: 32)
!4469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4463, size: 32)
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4466, file: !319, line: 40, baseType: !4469, size: 32)
!4471 = !DIDerivedType(tag: DW_TAG_member, scope: !4463, file: !319, line: 42, baseType: !4472, size: 32, offset: 32)
!4472 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4463, file: !319, line: 42, size: 32, elements: !4473)
!4473 = !{!4474, !4475}
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4472, file: !319, line: 43, baseType: !4469, size: 32)
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4472, file: !319, line: 44, baseType: !4469, size: 32)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !4459, file: !309, line: 62, baseType: !4477, size: 64)
!4477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !4478)
!4478 = !{!4479}
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4477, file: !335, line: 50, baseType: !4480, size: 64)
!4480 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4481, size: 64, elements: !340)
!4481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4477, size: 32)
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !4456, file: !309, line: 68, baseType: !4483, size: 32, offset: 64)
!4483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4484, size: 32)
!4484 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !4485)
!4485 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !4486)
!4486 = !{!4487}
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !4485, file: !345, line: 232, baseType: !4488, size: 64)
!4488 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !4463)
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !4456, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !4456, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!4491 = !DIDerivedType(tag: DW_TAG_member, scope: !4456, file: !309, line: 90, baseType: !4492, size: 16, offset: 112)
!4492 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4456, file: !309, line: 90, size: 16, elements: !4493)
!4493 = !{!4494, !4499}
!4494 = !DIDerivedType(tag: DW_TAG_member, scope: !4492, file: !309, line: 91, baseType: !4495, size: 16)
!4495 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4492, file: !309, line: 91, size: 16, elements: !4496)
!4496 = !{!4497, !4498}
!4497 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4495, file: !309, line: 96, baseType: !359, size: 8)
!4498 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !4495, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !4492, file: !309, line: 100, baseType: !197, size: 16)
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !4456, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !4456, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4456, file: !309, line: 131, baseType: !4503, size: 192, offset: 192)
!4503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !4504)
!4504 = !{!4505, !4506, !4512}
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4503, file: !345, line: 245, baseType: !4462, size: 64)
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4503, file: !345, line: 246, baseType: !4507, size: 32, offset: 64)
!4507 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !4508)
!4508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4509, size: 32)
!4509 = !DISubroutineType(types: !4510)
!4510 = !{null, !4511}
!4511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4503, size: 32)
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !4503, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !4453, file: !309, line: 250, baseType: !4514, size: 288, offset: 384)
!4514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !4515)
!4515 = !{!4516, !4517, !4518, !4519, !4520, !4521, !4522, !4523, !4524}
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4514, file: !379, line: 26, baseType: !152, size: 32)
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4514, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4514, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4514, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4514, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4514, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4514, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4514, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4514, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !4453, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !4453, file: !309, line: 256, baseType: !4484, size: 64, offset: 704)
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4453, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !4453, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !4453, file: !309, line: 300, baseType: !4530, size: 96, offset: 1056)
!4530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !4531)
!4531 = !{!4532, !4533, !4534}
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4530, file: !309, line: 153, baseType: !22, size: 32)
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4530, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !4530, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !4453, file: !309, line: 325, baseType: !4536, size: 32, offset: 1152)
!4536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4537, size: 32)
!4537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !4538)
!4538 = !{!4539, !4545, !4546}
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4537, file: !406, line: 5074, baseType: !4540, size: 96)
!4540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !4541)
!4541 = !{!4542, !4543, !4544}
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4540, file: !410, line: 57, baseType: !413, size: 32)
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4540, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4540, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !4537, file: !406, line: 5075, baseType: !4484, size: 64, offset: 96)
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4537, file: !406, line: 5076, baseType: !4547, size: 32, offset: 160)
!4547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !4548)
!4548 = !{!4549}
!4549 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !4547, file: !420, line: 52, baseType: !22, size: 32)
!4550 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4453, file: !309, line: 343, baseType: !4551, size: 64, offset: 1184)
!4551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !4552)
!4552 = !{!4553, !4554}
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !4551, file: !379, line: 63, baseType: !152, size: 32)
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !4551, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!4555 = !DILocation(line: 535, column: 9, scope: !4448)
!4556 = !DILocation(line: 535, column: 2, scope: !4448)
!4557 = distinct !DISubprogram(name: "k_thread_abort", scope: !4558, file: !4558, line: 188, type: !4559, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !4561)
!4558 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest")
!4559 = !DISubroutineType(types: !4560)
!4560 = !{null, !4451}
!4561 = !{!4562}
!4562 = !DILocalVariable(name: "thread", arg: 1, scope: !4557, file: !4558, line: 188, type: !4451)
!4563 = !DILocation(line: 0, scope: !4557)
!4564 = !DILocation(line: 197, column: 2, scope: !4565)
!4565 = distinct !DILexicalBlock(scope: !4557, file: !4558, line: 197, column: 2)
!4566 = !{i64 2155444098}
!4567 = !DILocation(line: 198, column: 2, scope: !4557)
!4568 = !DILocation(line: 199, column: 1, scope: !4557)
!4569 = distinct !DISubprogram(name: "z_current_get", scope: !4558, file: !4558, line: 173, type: !4449, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !2296)
!4570 = !DILocation(line: 180, column: 2, scope: !4571)
!4571 = distinct !DILexicalBlock(scope: !4569, file: !4558, line: 180, column: 2)
!4572 = !{i64 2155444030}
!4573 = !DILocation(line: 181, column: 9, scope: !4569)
!4574 = !DILocation(line: 181, column: 2, scope: !4569)
!4575 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2650, file: !2650, line: 1338, type: !4576, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !4584)
!4576 = !DISubroutineType(types: !4577)
!4577 = !{!107, !3730, !106, !118, !4578, !152}
!4578 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3350, line: 99, baseType: !4579)
!4579 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3350, line: 40, baseType: !4580)
!4580 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2650, baseType: !4581)
!4581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4582)
!4582 = !{!4583}
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4581, file: !2650, baseType: !106, size: 32)
!4584 = !{!4585, !4586, !4587, !4588, !4589, !4590, !4594, !4595, !4596, !4598, !4603, !4646, !4649, !4652, !4653, !4654, !4655, !4656, !4657, !4658, !4661, !4662, !4663, !4667, !4670, !4672, !4675, !4676, !4677, !4682, !4688, !4691, !4695, !4701, !4705, !4708, !4710, !4713}
!4585 = !DILocalVariable(name: "out", arg: 1, scope: !4575, file: !2650, line: 1338, type: !3730)
!4586 = !DILocalVariable(name: "ctx", arg: 2, scope: !4575, file: !2650, line: 1338, type: !106)
!4587 = !DILocalVariable(name: "fp", arg: 3, scope: !4575, file: !2650, line: 1338, type: !118)
!4588 = !DILocalVariable(name: "ap", arg: 4, scope: !4575, file: !2650, line: 1339, type: !4578)
!4589 = !DILocalVariable(name: "flags", arg: 5, scope: !4575, file: !2650, line: 1339, type: !152)
!4590 = !DILocalVariable(name: "buf", scope: !4575, file: !2650, line: 1341, type: !4591)
!4591 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 176, elements: !4592)
!4592 = !{!4593}
!4593 = !DISubrange(count: 22)
!4594 = !DILocalVariable(name: "count", scope: !4575, file: !2650, line: 1342, type: !185)
!4595 = !DILocalVariable(name: "sint", scope: !4575, file: !2650, line: 1343, type: !2669)
!4596 = !DILocalVariable(name: "tagged_ap", scope: !4575, file: !2650, line: 1345, type: !4597)
!4597 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !145)
!4598 = !DILocalVariable(name: "rc", scope: !4599, file: !2650, line: 1377, type: !107)
!4599 = distinct !DILexicalBlock(scope: !4600, file: !2650, line: 1377, column: 4)
!4600 = distinct !DILexicalBlock(scope: !4601, file: !2650, line: 1376, column: 19)
!4601 = distinct !DILexicalBlock(scope: !4602, file: !2650, line: 1376, column: 7)
!4602 = distinct !DILexicalBlock(scope: !4575, file: !2650, line: 1375, column: 19)
!4603 = !DILocalVariable(name: "state", scope: !4602, file: !2650, line: 1395, type: !4604)
!4604 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4575, file: !2650, line: 1392, size: 192, elements: !4605)
!4605 = !{!4606, !4614}
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4604, file: !2650, line: 1393, baseType: !4607, size: 64)
!4607 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2650, line: 166, size: 64, elements: !4608)
!4608 = !{!4609, !4610, !4611, !4612, !4613}
!4609 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4607, file: !2650, line: 168, baseType: !2669, size: 64)
!4610 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4607, file: !2650, line: 171, baseType: !2672, size: 64)
!4611 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4607, file: !2650, line: 174, baseType: !183, size: 64)
!4612 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4607, file: !2650, line: 177, baseType: !181, size: 64)
!4613 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4607, file: !2650, line: 180, baseType: !106, size: 32)
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4604, file: !2650, line: 1394, baseType: !4615, size: 96, offset: 64)
!4615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2650, line: 189, size: 96, elements: !4616)
!4616 = !{!4617, !4618, !4619, !4620, !4621, !4622, !4623, !4624, !4625, !4626, !4627, !4628, !4629, !4630, !4631, !4632, !4633, !4634, !4635, !4636, !4641}
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4615, file: !2650, line: 191, baseType: !145, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4618 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4615, file: !2650, line: 194, baseType: !145, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4615, file: !2650, line: 197, baseType: !145, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4620 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4615, file: !2650, line: 200, baseType: !145, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4615, file: !2650, line: 203, baseType: !145, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4622 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4615, file: !2650, line: 206, baseType: !145, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4623 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4615, file: !2650, line: 209, baseType: !145, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4615, file: !2650, line: 212, baseType: !145, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4625 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4615, file: !2650, line: 219, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4626 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4615, file: !2650, line: 222, baseType: !145, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4627 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4615, file: !2650, line: 229, baseType: !145, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4615, file: !2650, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4629 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4615, file: !2650, line: 238, baseType: !145, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4630 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4615, file: !2650, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4631 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4615, file: !2650, line: 244, baseType: !145, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4632 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4615, file: !2650, line: 247, baseType: !145, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4615, file: !2650, line: 252, baseType: !145, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4634 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4615, file: !2650, line: 257, baseType: !145, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4615, file: !2650, line: 260, baseType: !196, size: 8, offset: 24)
!4636 = !DIDerivedType(tag: DW_TAG_member, scope: !4615, file: !2650, line: 262, baseType: !4637, size: 32, offset: 32)
!4637 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4615, file: !2650, line: 262, size: 32, elements: !4638)
!4638 = !{!4639, !4640}
!4639 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4637, file: !2650, line: 267, baseType: !107, size: 32)
!4640 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4637, file: !2650, line: 289, baseType: !107, size: 32)
!4641 = !DIDerivedType(tag: DW_TAG_member, scope: !4615, file: !2650, line: 292, baseType: !4642, size: 32, offset: 64)
!4642 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4615, file: !2650, line: 292, size: 32, elements: !4643)
!4643 = !{!4644, !4645}
!4644 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4642, file: !2650, line: 297, baseType: !107, size: 32)
!4645 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4642, file: !2650, line: 306, baseType: !107, size: 32)
!4646 = !DILocalVariable(name: "conv", scope: !4602, file: !2650, line: 1400, type: !4647)
!4647 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4648)
!4648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4615, size: 32)
!4649 = !DILocalVariable(name: "value", scope: !4602, file: !2650, line: 1401, type: !4650)
!4650 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4651)
!4651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4607, size: 32)
!4652 = !DILocalVariable(name: "sp", scope: !4602, file: !2650, line: 1402, type: !118)
!4653 = !DILocalVariable(name: "width", scope: !4602, file: !2650, line: 1403, type: !107)
!4654 = !DILocalVariable(name: "precision", scope: !4602, file: !2650, line: 1404, type: !107)
!4655 = !DILocalVariable(name: "bps", scope: !4602, file: !2650, line: 1405, type: !118)
!4656 = !DILocalVariable(name: "bpe", scope: !4602, file: !2650, line: 1406, type: !118)
!4657 = !DILocalVariable(name: "sign", scope: !4602, file: !2650, line: 1407, type: !120)
!4658 = !DILocalVariable(name: "arg", scope: !4659, file: !2650, line: 1432, type: !107)
!4659 = distinct !DILexicalBlock(scope: !4660, file: !2650, line: 1431, column: 24)
!4660 = distinct !DILexicalBlock(scope: !4602, file: !2650, line: 1431, column: 7)
!4661 = !DILocalVariable(name: "specifier_cat", scope: !4602, file: !2650, line: 1468, type: !2649)
!4662 = !DILocalVariable(name: "length_mod", scope: !4602, file: !2650, line: 1470, type: !2657)
!4663 = !DILocalVariable(name: "rc", scope: !4664, file: !2650, line: 1575, type: !107)
!4664 = distinct !DILexicalBlock(scope: !4665, file: !2650, line: 1575, column: 4)
!4665 = distinct !DILexicalBlock(scope: !4666, file: !2650, line: 1574, column: 43)
!4666 = distinct !DILexicalBlock(scope: !4602, file: !2650, line: 1574, column: 7)
!4667 = !DILocalVariable(name: "rc", scope: !4668, file: !2650, line: 1584, type: !107)
!4668 = distinct !DILexicalBlock(scope: !4669, file: !2650, line: 1584, column: 4)
!4669 = distinct !DILexicalBlock(scope: !4602, file: !2650, line: 1582, column: 28)
!4670 = !DILocalVariable(name: "len", scope: !4671, file: !2650, line: 1589, type: !185)
!4671 = distinct !DILexicalBlock(scope: !4669, file: !2650, line: 1586, column: 13)
!4672 = !DILocalVariable(name: "len", scope: !4673, file: !2650, line: 1641, type: !185)
!4673 = distinct !DILexicalBlock(scope: !4674, file: !2650, line: 1640, column: 24)
!4674 = distinct !DILexicalBlock(scope: !4669, file: !2650, line: 1640, column: 8)
!4675 = !DILocalVariable(name: "nj_len", scope: !4602, file: !2650, line: 1722, type: !185)
!4676 = !DILocalVariable(name: "pad_len", scope: !4602, file: !2650, line: 1723, type: !107)
!4677 = !DILocalVariable(name: "pad", scope: !4678, file: !2650, line: 1751, type: !120)
!4678 = distinct !DILexicalBlock(scope: !4679, file: !2650, line: 1750, column: 26)
!4679 = distinct !DILexicalBlock(scope: !4680, file: !2650, line: 1750, column: 8)
!4680 = distinct !DILexicalBlock(scope: !4681, file: !2650, line: 1747, column: 18)
!4681 = distinct !DILexicalBlock(scope: !4602, file: !2650, line: 1747, column: 7)
!4682 = !DILocalVariable(name: "rc", scope: !4683, file: !2650, line: 1758, type: !107)
!4683 = distinct !DILexicalBlock(scope: !4684, file: !2650, line: 1758, column: 7)
!4684 = distinct !DILexicalBlock(scope: !4685, file: !2650, line: 1757, column: 21)
!4685 = distinct !DILexicalBlock(scope: !4686, file: !2650, line: 1757, column: 10)
!4686 = distinct !DILexicalBlock(scope: !4687, file: !2650, line: 1756, column: 26)
!4687 = distinct !DILexicalBlock(scope: !4678, file: !2650, line: 1756, column: 9)
!4688 = !DILocalVariable(name: "rc", scope: !4689, file: !2650, line: 1765, type: !107)
!4689 = distinct !DILexicalBlock(scope: !4690, file: !2650, line: 1765, column: 6)
!4690 = distinct !DILexicalBlock(scope: !4678, file: !2650, line: 1764, column: 25)
!4691 = !DILocalVariable(name: "rc", scope: !4692, file: !2650, line: 1774, type: !107)
!4692 = distinct !DILexicalBlock(scope: !4693, file: !2650, line: 1774, column: 4)
!4693 = distinct !DILexicalBlock(scope: !4694, file: !2650, line: 1773, column: 18)
!4694 = distinct !DILexicalBlock(scope: !4602, file: !2650, line: 1773, column: 7)
!4695 = !DILocalVariable(name: "rc", scope: !4696, file: !2650, line: 1819, type: !107)
!4696 = distinct !DILexicalBlock(scope: !4697, file: !2650, line: 1819, column: 5)
!4697 = distinct !DILexicalBlock(scope: !4698, file: !2650, line: 1818, column: 44)
!4698 = distinct !DILexicalBlock(scope: !4699, file: !2650, line: 1818, column: 8)
!4699 = distinct !DILexicalBlock(scope: !4700, file: !2650, line: 1817, column: 10)
!4700 = distinct !DILexicalBlock(scope: !4602, file: !2650, line: 1777, column: 7)
!4701 = !DILocalVariable(name: "rc", scope: !4702, file: !2650, line: 1823, type: !107)
!4702 = distinct !DILexicalBlock(scope: !4703, file: !2650, line: 1823, column: 5)
!4703 = distinct !DILexicalBlock(scope: !4704, file: !2650, line: 1822, column: 26)
!4704 = distinct !DILexicalBlock(scope: !4699, file: !2650, line: 1822, column: 8)
!4705 = !DILocalVariable(name: "rc", scope: !4706, file: !2650, line: 1828, type: !107)
!4706 = distinct !DILexicalBlock(scope: !4707, file: !2650, line: 1828, column: 5)
!4707 = distinct !DILexicalBlock(scope: !4699, file: !2650, line: 1827, column: 26)
!4708 = !DILocalVariable(name: "rc", scope: !4709, file: !2650, line: 1831, type: !107)
!4709 = distinct !DILexicalBlock(scope: !4699, file: !2650, line: 1831, column: 4)
!4710 = !DILocalVariable(name: "rc", scope: !4711, file: !2650, line: 1836, type: !107)
!4711 = distinct !DILexicalBlock(scope: !4712, file: !2650, line: 1836, column: 4)
!4712 = distinct !DILexicalBlock(scope: !4602, file: !2650, line: 1835, column: 21)
!4713 = !DILabel(scope: !4669, name: "prec_int_pad0", file: !2650, line: 1634)
!4714 = !DILocation(line: 0, scope: !4575)
!4715 = !DILocation(line: 1341, column: 2, scope: !4575)
!4716 = !DILocation(line: 1341, column: 7, scope: !4575)
!4717 = !DILocation(line: 1375, column: 2, scope: !4575)
!4718 = !DILocation(line: 1342, column: 9, scope: !4575)
!4719 = !DILocation(line: 1375, column: 9, scope: !4575)
!4720 = !DILocation(line: 1377, column: 4, scope: !4599)
!4721 = !DILocation(line: 0, scope: !4599)
!4722 = !DILocation(line: 1377, column: 4, scope: !4723)
!4723 = distinct !DILexicalBlock(scope: !4599, file: !2650, line: 1377, column: 4)
!4724 = distinct !{!4724, !4717, !4725}
!4725 = !DILocation(line: 1839, column: 2, scope: !4575)
!4726 = !DILocation(line: 1392, column: 3, scope: !4602)
!4727 = !DILocation(line: 1395, column: 5, scope: !4602)
!4728 = !DILocation(line: 0, scope: !4602)
!4729 = !DILocation(line: 1409, column: 8, scope: !4602)
!4730 = !DILocation(line: 1414, column: 13, scope: !4731)
!4731 = distinct !DILexicalBlock(scope: !4602, file: !2650, line: 1414, column: 7)
!4732 = !DILocation(line: 1414, column: 7, scope: !4602)
!4733 = !DILocation(line: 1415, column: 12, scope: !4734)
!4734 = distinct !DILexicalBlock(scope: !4731, file: !2650, line: 1414, column: 25)
!4735 = !DILocation(line: 1417, column: 14, scope: !4736)
!4736 = distinct !DILexicalBlock(scope: !4734, file: !2650, line: 1417, column: 8)
!4737 = !DILocation(line: 1417, column: 8, scope: !4734)
!4738 = !DILocation(line: 1418, column: 21, scope: !4739)
!4739 = distinct !DILexicalBlock(scope: !4736, file: !2650, line: 1417, column: 19)
!4740 = !DILocation(line: 1419, column: 13, scope: !4739)
!4741 = !DILocation(line: 1420, column: 4, scope: !4739)
!4742 = !DILocation(line: 1421, column: 20, scope: !4743)
!4743 = distinct !DILexicalBlock(scope: !4731, file: !2650, line: 1421, column: 14)
!4744 = !DILocation(line: 1421, column: 14, scope: !4731)
!4745 = !DILocation(line: 1431, column: 13, scope: !4660)
!4746 = !DILocation(line: 1431, column: 7, scope: !4602)
!4747 = !DILocation(line: 1432, column: 14, scope: !4659)
!4748 = !DILocation(line: 0, scope: !4659)
!4749 = !DILocation(line: 1434, column: 12, scope: !4750)
!4750 = distinct !DILexicalBlock(scope: !4659, file: !2650, line: 1434, column: 8)
!4751 = !DILocation(line: 1434, column: 8, scope: !4659)
!4752 = !DILocation(line: 1435, column: 24, scope: !4753)
!4753 = distinct !DILexicalBlock(scope: !4750, file: !2650, line: 1434, column: 17)
!4754 = !DILocation(line: 1436, column: 4, scope: !4753)
!4755 = !DILocation(line: 1439, column: 20, scope: !4756)
!4756 = distinct !DILexicalBlock(scope: !4660, file: !2650, line: 1439, column: 14)
!4757 = !DILocation(line: 1439, column: 14, scope: !4660)
!4758 = !DILocation(line: 1469, column: 37, scope: !4602)
!4759 = !DILocation(line: 1448, column: 20, scope: !4602)
!4760 = !DILocation(line: 1449, column: 22, scope: !4602)
!4761 = !DILocation(line: 1471, column: 34, scope: !4602)
!4762 = !DILocation(line: 1478, column: 7, scope: !4602)
!4763 = !DILocation(line: 1479, column: 4, scope: !4764)
!4764 = distinct !DILexicalBlock(scope: !4765, file: !2650, line: 1478, column: 40)
!4765 = distinct !DILexicalBlock(scope: !4602, file: !2650, line: 1478, column: 7)
!4766 = !DILocation(line: 1484, column: 19, scope: !4767)
!4767 = distinct !DILexicalBlock(scope: !4764, file: !2650, line: 1479, column: 24)
!4768 = !DILocation(line: 1484, column: 17, scope: !4767)
!4769 = !DILocation(line: 1485, column: 5, scope: !4767)
!4770 = !DILocation(line: 1492, column: 20, scope: !4771)
!4771 = distinct !DILexicalBlock(scope: !4772, file: !2650, line: 1491, column: 12)
!4772 = distinct !DILexicalBlock(scope: !4767, file: !2650, line: 1487, column: 9)
!4773 = !DILocation(line: 1492, column: 18, scope: !4771)
!4774 = !DILocation(line: 1494, column: 5, scope: !4767)
!4775 = !DILocation(line: 1497, column: 23, scope: !4767)
!4776 = !DILocation(line: 1496, column: 17, scope: !4767)
!4777 = !DILocation(line: 1498, column: 5, scope: !4767)
!4778 = !DILocation(line: 1501, column: 23, scope: !4767)
!4779 = !DILocation(line: 1500, column: 17, scope: !4767)
!4780 = !DILocation(line: 1502, column: 5, scope: !4767)
!4781 = !DILocation(line: 1513, column: 23, scope: !4767)
!4782 = !DILocation(line: 1513, column: 6, scope: !4767)
!4783 = !DILocation(line: 1512, column: 17, scope: !4767)
!4784 = !DILocation(line: 1514, column: 5, scope: !4767)
!4785 = !DILocation(line: 0, scope: !4767)
!4786 = !DILocation(line: 1516, column: 8, scope: !4764)
!4787 = !DILocation(line: 1517, column: 19, scope: !4788)
!4788 = distinct !DILexicalBlock(scope: !4789, file: !2650, line: 1516, column: 33)
!4789 = distinct !DILexicalBlock(scope: !4764, file: !2650, line: 1516, column: 8)
!4790 = !DILocation(line: 1517, column: 17, scope: !4788)
!4791 = !DILocation(line: 1518, column: 4, scope: !4788)
!4792 = !DILocation(line: 1519, column: 19, scope: !4793)
!4793 = distinct !DILexicalBlock(scope: !4794, file: !2650, line: 1518, column: 39)
!4794 = distinct !DILexicalBlock(scope: !4789, file: !2650, line: 1518, column: 15)
!4795 = !DILocation(line: 1519, column: 17, scope: !4793)
!4796 = !DILocation(line: 1520, column: 4, scope: !4793)
!4797 = !DILocation(line: 1522, column: 4, scope: !4798)
!4798 = distinct !DILexicalBlock(scope: !4799, file: !2650, line: 1521, column: 47)
!4799 = distinct !DILexicalBlock(scope: !4765, file: !2650, line: 1521, column: 14)
!4800 = !DILocation(line: 1527, column: 19, scope: !4801)
!4801 = distinct !DILexicalBlock(scope: !4798, file: !2650, line: 1522, column: 24)
!4802 = !DILocation(line: 1527, column: 17, scope: !4801)
!4803 = !DILocation(line: 1528, column: 5, scope: !4801)
!4804 = !DILocation(line: 0, scope: !4805)
!4805 = distinct !DILexicalBlock(scope: !4801, file: !2650, line: 1530, column: 9)
!4806 = !DILocation(line: 1540, column: 23, scope: !4801)
!4807 = !DILocation(line: 1539, column: 17, scope: !4801)
!4808 = !DILocation(line: 1542, column: 5, scope: !4801)
!4809 = !DILocation(line: 1545, column: 23, scope: !4801)
!4810 = !DILocation(line: 1544, column: 17, scope: !4801)
!4811 = !DILocation(line: 1547, column: 5, scope: !4801)
!4812 = !DILocation(line: 1551, column: 23, scope: !4801)
!4813 = !DILocation(line: 1551, column: 6, scope: !4801)
!4814 = !DILocation(line: 1550, column: 17, scope: !4801)
!4815 = !DILocation(line: 1552, column: 5, scope: !4801)
!4816 = !DILocation(line: 0, scope: !4801)
!4817 = !DILocation(line: 1554, column: 8, scope: !4798)
!4818 = !DILocation(line: 1555, column: 19, scope: !4819)
!4819 = distinct !DILexicalBlock(scope: !4820, file: !2650, line: 1554, column: 33)
!4820 = distinct !DILexicalBlock(scope: !4798, file: !2650, line: 1554, column: 8)
!4821 = !DILocation(line: 1555, column: 17, scope: !4819)
!4822 = !DILocation(line: 1556, column: 4, scope: !4819)
!4823 = !DILocation(line: 1557, column: 19, scope: !4824)
!4824 = distinct !DILexicalBlock(scope: !4825, file: !2650, line: 1556, column: 39)
!4825 = distinct !DILexicalBlock(scope: !4820, file: !2650, line: 1556, column: 15)
!4826 = !DILocation(line: 1557, column: 17, scope: !4824)
!4827 = !DILocation(line: 1558, column: 4, scope: !4824)
!4828 = !DILocation(line: 0, scope: !4829)
!4829 = distinct !DILexicalBlock(scope: !4830, file: !2650, line: 1560, column: 8)
!4830 = distinct !DILexicalBlock(scope: !4831, file: !2650, line: 1559, column: 45)
!4831 = distinct !DILexicalBlock(scope: !4799, file: !2650, line: 1559, column: 14)
!4832 = !DILocation(line: 1566, column: 17, scope: !4833)
!4833 = distinct !DILexicalBlock(scope: !4834, file: !2650, line: 1565, column: 46)
!4834 = distinct !DILexicalBlock(scope: !4831, file: !2650, line: 1565, column: 14)
!4835 = !DILocation(line: 1566, column: 15, scope: !4833)
!4836 = !DILocation(line: 1567, column: 3, scope: !4833)
!4837 = !DILocation(line: 1574, column: 21, scope: !4666)
!4838 = !DILocation(line: 1575, column: 4, scope: !4664)
!4839 = !DILocation(line: 0, scope: !4664)
!4840 = !DILocation(line: 1575, column: 4, scope: !4841)
!4841 = distinct !DILexicalBlock(scope: !4664, file: !2650, line: 1575, column: 4)
!4842 = !DILocation(line: 1582, column: 17, scope: !4602)
!4843 = !DILocation(line: 1582, column: 3, scope: !4602)
!4844 = !DILocation(line: 1584, column: 4, scope: !4668)
!4845 = !DILocation(line: 0, scope: !4668)
!4846 = !DILocation(line: 1584, column: 4, scope: !4847)
!4847 = distinct !DILexicalBlock(scope: !4668, file: !2650, line: 1584, column: 4)
!4848 = !DILocation(line: 1587, column: 31, scope: !4671)
!4849 = !DILocation(line: 1591, column: 18, scope: !4850)
!4850 = distinct !DILexicalBlock(scope: !4671, file: !2650, line: 1591, column: 8)
!4851 = !DILocation(line: 1591, column: 8, scope: !4671)
!4852 = !DILocation(line: 1592, column: 11, scope: !4853)
!4853 = distinct !DILexicalBlock(scope: !4850, file: !2650, line: 1591, column: 24)
!4854 = !DILocation(line: 0, scope: !4671)
!4855 = !DILocation(line: 1593, column: 4, scope: !4853)
!4856 = !DILocation(line: 1594, column: 11, scope: !4857)
!4857 = distinct !DILexicalBlock(scope: !4850, file: !2650, line: 1593, column: 11)
!4858 = !DILocation(line: 1604, column: 51, scope: !4669)
!4859 = !DILocation(line: 1604, column: 13, scope: !4669)
!4860 = !DILocation(line: 1604, column: 11, scope: !4669)
!4861 = !DILocation(line: 1606, column: 4, scope: !4669)
!4862 = !DILocation(line: 1609, column: 14, scope: !4863)
!4863 = distinct !DILexicalBlock(scope: !4669, file: !2650, line: 1609, column: 8)
!4864 = !DILocation(line: 1609, column: 8, scope: !4669)
!4865 = !DILocation(line: 1619, column: 18, scope: !4669)
!4866 = !DILocation(line: 1620, column: 13, scope: !4867)
!4867 = distinct !DILexicalBlock(scope: !4669, file: !2650, line: 1620, column: 8)
!4868 = !DILocation(line: 1620, column: 8, scope: !4669)
!4869 = !DILocation(line: 1622, column: 36, scope: !4870)
!4870 = distinct !DILexicalBlock(scope: !4867, file: !2650, line: 1620, column: 18)
!4871 = !DILocation(line: 1622, column: 17, scope: !4870)
!4872 = !DILocation(line: 1623, column: 4, scope: !4870)
!4873 = !DILocation(line: 1632, column: 29, scope: !4669)
!4874 = !DILocation(line: 1632, column: 10, scope: !4669)
!4875 = !DILocation(line: 1632, column: 4, scope: !4669)
!4876 = !DILocation(line: 1407, column: 8, scope: !4602)
!4877 = !DILocation(line: 0, scope: !4669)
!4878 = !DILocation(line: 1634, column: 3, scope: !4669)
!4879 = !DILocation(line: 1640, column: 18, scope: !4674)
!4880 = !DILocation(line: 1640, column: 8, scope: !4669)
!4881 = !DILocation(line: 1729, column: 13, scope: !4882)
!4882 = distinct !DILexicalBlock(scope: !4602, file: !2650, line: 1729, column: 7)
!4883 = !DILocation(line: 1641, column: 22, scope: !4673)
!4884 = !DILocation(line: 0, scope: !4673)
!4885 = !DILocation(line: 1646, column: 21, scope: !4673)
!4886 = !DILocation(line: 1649, column: 13, scope: !4887)
!4887 = distinct !DILexicalBlock(scope: !4673, file: !2650, line: 1649, column: 9)
!4888 = !DILocation(line: 1649, column: 9, scope: !4673)
!4889 = !DILocation(line: 1650, column: 35, scope: !4890)
!4890 = distinct !DILexicalBlock(scope: !4887, file: !2650, line: 1649, column: 34)
!4891 = !DILocation(line: 1650, column: 23, scope: !4890)
!4892 = !DILocation(line: 1651, column: 5, scope: !4890)
!4893 = !DILocation(line: 1660, column: 15, scope: !4894)
!4894 = distinct !DILexicalBlock(scope: !4669, file: !2650, line: 1660, column: 8)
!4895 = !DILocation(line: 1660, column: 19, scope: !4894)
!4896 = !DILocation(line: 1660, column: 8, scope: !4669)
!4897 = !DILocation(line: 1661, column: 23, scope: !4898)
!4898 = distinct !DILexicalBlock(scope: !4894, file: !2650, line: 1660, column: 28)
!4899 = !DILocation(line: 1661, column: 11, scope: !4898)
!4900 = !DILocation(line: 1665, column: 22, scope: !4898)
!4901 = !DILocation(line: 1666, column: 21, scope: !4898)
!4902 = !DILocation(line: 1668, column: 5, scope: !4898)
!4903 = !DILocation(line: 1677, column: 30, scope: !4904)
!4904 = distinct !DILexicalBlock(scope: !4905, file: !2650, line: 1676, column: 49)
!4905 = distinct !DILexicalBlock(scope: !4669, file: !2650, line: 1676, column: 8)
!4906 = !DILocation(line: 1677, column: 5, scope: !4904)
!4907 = !DILocation(line: 1680, column: 4, scope: !4669)
!4908 = !DILocation(line: 0, scope: !4850)
!4909 = !DILocation(line: 1597, column: 14, scope: !4671)
!4910 = !DILocation(line: 1699, column: 11, scope: !4911)
!4911 = distinct !DILexicalBlock(scope: !4602, file: !2650, line: 1699, column: 7)
!4912 = !DILocation(line: 1699, column: 7, scope: !4602)
!4913 = !DILocation(line: 1725, column: 7, scope: !4914)
!4914 = distinct !DILexicalBlock(scope: !4602, file: !2650, line: 1725, column: 7)
!4915 = !DILocation(line: 1725, column: 12, scope: !4914)
!4916 = !DILocation(line: 1747, column: 13, scope: !4681)
!4917 = !DILocation(line: 1747, column: 7, scope: !4602)
!4918 = !DILocation(line: 1722, column: 24, scope: !4602)
!4919 = !DILocation(line: 1725, column: 7, scope: !4602)
!4920 = !DILocation(line: 1729, column: 7, scope: !4602)
!4921 = !DILocation(line: 1736, column: 13, scope: !4922)
!4922 = distinct !DILexicalBlock(scope: !4602, file: !2650, line: 1736, column: 7)
!4923 = !DILocation(line: 1735, column: 19, scope: !4602)
!4924 = !DILocation(line: 1736, column: 7, scope: !4602)
!4925 = !DILocation(line: 1748, column: 10, scope: !4680)
!4926 = !DILocation(line: 1750, column: 15, scope: !4679)
!4927 = !DILocation(line: 1750, column: 8, scope: !4680)
!4928 = !DILocation(line: 0, scope: !4678)
!4929 = !DILocation(line: 1756, column: 15, scope: !4687)
!4930 = !DILocation(line: 1756, column: 9, scope: !4678)
!4931 = !DILocation(line: 1758, column: 7, scope: !4683)
!4932 = !DILocation(line: 0, scope: !4683)
!4933 = !DILocation(line: 1758, column: 7, scope: !4934)
!4934 = distinct !DILexicalBlock(scope: !4683, file: !2650, line: 1758, column: 7)
!4935 = !DILocation(line: 1764, column: 5, scope: !4678)
!4936 = !DILocation(line: 0, scope: !4680)
!4937 = !DILocation(line: 1764, column: 20, scope: !4678)
!4938 = !DILocation(line: 1764, column: 17, scope: !4678)
!4939 = !DILocation(line: 1765, column: 6, scope: !4689)
!4940 = !DILocation(line: 0, scope: !4689)
!4941 = !DILocation(line: 1765, column: 6, scope: !4942)
!4942 = distinct !DILexicalBlock(scope: !4689, file: !2650, line: 1765, column: 6)
!4943 = distinct !{!4943, !4935, !4944}
!4944 = !DILocation(line: 1766, column: 5, scope: !4678)
!4945 = !DILocation(line: 1773, column: 12, scope: !4694)
!4946 = !DILocation(line: 1773, column: 7, scope: !4602)
!4947 = !DILocation(line: 1773, column: 7, scope: !4694)
!4948 = !DILocation(line: 1774, column: 4, scope: !4692)
!4949 = !DILocation(line: 0, scope: !4692)
!4950 = !DILocation(line: 1774, column: 4, scope: !4951)
!4951 = distinct !DILexicalBlock(scope: !4692, file: !2650, line: 1774, column: 4)
!4952 = !DILocation(line: 1818, column: 8, scope: !4698)
!4953 = !DILocation(line: 1818, column: 27, scope: !4698)
!4954 = !DILocation(line: 1818, column: 25, scope: !4698)
!4955 = !DILocation(line: 1818, column: 8, scope: !4699)
!4956 = !DILocation(line: 1819, column: 5, scope: !4696)
!4957 = !DILocation(line: 0, scope: !4696)
!4958 = !DILocation(line: 1819, column: 5, scope: !4959)
!4959 = distinct !DILexicalBlock(scope: !4696, file: !2650, line: 1819, column: 5)
!4960 = !DILocation(line: 1822, column: 14, scope: !4704)
!4961 = !DILocation(line: 1822, column: 8, scope: !4699)
!4962 = !DILocation(line: 1823, column: 5, scope: !4702)
!4963 = !DILocation(line: 0, scope: !4702)
!4964 = !DILocation(line: 1823, column: 5, scope: !4965)
!4965 = distinct !DILexicalBlock(scope: !4702, file: !2650, line: 1823, column: 5)
!4966 = !DILocation(line: 1826, column: 20, scope: !4699)
!4967 = !DILocation(line: 1827, column: 4, scope: !4699)
!4968 = !DILocation(line: 0, scope: !4699)
!4969 = !DILocation(line: 1827, column: 21, scope: !4699)
!4970 = !DILocation(line: 1827, column: 18, scope: !4699)
!4971 = !DILocation(line: 1828, column: 5, scope: !4706)
!4972 = !DILocation(line: 0, scope: !4706)
!4973 = !DILocation(line: 1828, column: 5, scope: !4974)
!4974 = distinct !DILexicalBlock(scope: !4706, file: !2650, line: 1828, column: 5)
!4975 = distinct !{!4975, !4967, !4976}
!4976 = !DILocation(line: 1829, column: 4, scope: !4699)
!4977 = !DILocation(line: 1831, column: 4, scope: !4709)
!4978 = !DILocation(line: 0, scope: !4709)
!4979 = !DILocation(line: 1831, column: 4, scope: !4980)
!4980 = distinct !DILexicalBlock(scope: !4709, file: !2650, line: 1831, column: 4)
!4981 = !DILocation(line: 1835, column: 16, scope: !4602)
!4982 = !DILocation(line: 1835, column: 3, scope: !4602)
!4983 = !DILocation(line: 1836, column: 4, scope: !4711)
!4984 = !DILocation(line: 0, scope: !4711)
!4985 = !DILocation(line: 1836, column: 4, scope: !4986)
!4986 = distinct !DILexicalBlock(scope: !4711, file: !2650, line: 1836, column: 4)
!4987 = !DILocation(line: 1837, column: 4, scope: !4712)
!4988 = distinct !{!4988, !4982, !4989}
!4989 = !DILocation(line: 1838, column: 3, scope: !4602)
!4990 = !DILocation(line: 1844, column: 1, scope: !4575)
!4991 = distinct !DISubprogram(name: "extract_conversion", scope: !2650, file: !2650, line: 642, type: !4992, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !4994)
!4992 = !DISubroutineType(types: !4993)
!4993 = !{!118, !4648, !118}
!4994 = !{!4995, !4996}
!4995 = !DILocalVariable(name: "conv", arg: 1, scope: !4991, file: !2650, line: 642, type: !4648)
!4996 = !DILocalVariable(name: "sp", arg: 2, scope: !4991, file: !2650, line: 643, type: !118)
!4997 = !DILocation(line: 0, scope: !4991)
!4998 = !DILocation(line: 645, column: 10, scope: !4991)
!4999 = !DILocation(line: 653, column: 2, scope: !4991)
!5000 = !DILocation(line: 654, column: 6, scope: !5001)
!5001 = distinct !DILexicalBlock(scope: !4991, file: !2650, line: 654, column: 6)
!5002 = !DILocation(line: 654, column: 10, scope: !5001)
!5003 = !DILocation(line: 654, column: 6, scope: !4991)
!5004 = !DILocation(line: 655, column: 24, scope: !5005)
!5005 = distinct !DILexicalBlock(scope: !5001, file: !2650, line: 654, column: 18)
!5006 = !DILocation(line: 655, column: 19, scope: !5005)
!5007 = !DILocation(line: 656, column: 3, scope: !5005)
!5008 = !DILocation(line: 659, column: 7, scope: !4991)
!5009 = !DILocation(line: 660, column: 7, scope: !4991)
!5010 = !DILocation(line: 661, column: 7, scope: !4991)
!5011 = !DILocation(line: 662, column: 7, scope: !4991)
!5012 = !DILocation(line: 663, column: 7, scope: !4991)
!5013 = !DILocation(line: 665, column: 2, scope: !4991)
!5014 = !DILocation(line: 666, column: 1, scope: !4991)
!5015 = distinct !DISubprogram(name: "outs", scope: !2650, file: !2650, line: 1319, type: !5016, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !5018)
!5016 = !DISubroutineType(types: !5017)
!5017 = !{!107, !3730, !106, !118, !118}
!5018 = !{!5019, !5020, !5021, !5022, !5023, !5024}
!5019 = !DILocalVariable(name: "out", arg: 1, scope: !5015, file: !2650, line: 1319, type: !3730)
!5020 = !DILocalVariable(name: "ctx", arg: 2, scope: !5015, file: !2650, line: 1320, type: !106)
!5021 = !DILocalVariable(name: "sp", arg: 3, scope: !5015, file: !2650, line: 1321, type: !118)
!5022 = !DILocalVariable(name: "ep", arg: 4, scope: !5015, file: !2650, line: 1322, type: !118)
!5023 = !DILocalVariable(name: "count", scope: !5015, file: !2650, line: 1324, type: !185)
!5024 = !DILocalVariable(name: "rc", scope: !5025, file: !2650, line: 1327, type: !107)
!5025 = distinct !DILexicalBlock(scope: !5015, file: !2650, line: 1326, column: 45)
!5026 = !DILocation(line: 0, scope: !5015)
!5027 = !DILocation(line: 1326, column: 2, scope: !5015)
!5028 = !DILocation(line: 1324, column: 9, scope: !5015)
!5029 = !DILocation(line: 1326, column: 13, scope: !5015)
!5030 = !DILocation(line: 1326, column: 19, scope: !5015)
!5031 = !DILocation(line: 1327, column: 21, scope: !5025)
!5032 = !DILocation(line: 1326, column: 36, scope: !5015)
!5033 = !DILocation(line: 1326, column: 39, scope: !5015)
!5034 = !DILocation(line: 1327, column: 24, scope: !5025)
!5035 = !DILocation(line: 1327, column: 16, scope: !5025)
!5036 = !DILocation(line: 1327, column: 12, scope: !5025)
!5037 = !DILocation(line: 0, scope: !5025)
!5038 = !DILocation(line: 1329, column: 10, scope: !5039)
!5039 = distinct !DILexicalBlock(scope: !5025, file: !2650, line: 1329, column: 7)
!5040 = !DILocation(line: 1329, column: 7, scope: !5025)
!5041 = distinct !{!5041, !5027, !5042}
!5042 = !DILocation(line: 1333, column: 2, scope: !5015)
!5043 = !DILocation(line: 1336, column: 1, scope: !5015)
!5044 = distinct !DISubprogram(name: "encode_uint", scope: !2650, file: !2650, line: 788, type: !5045, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !5047)
!5045 = !DISubroutineType(types: !5046)
!5046 = !{!193, !2672, !4648, !193, !118}
!5047 = !{!5048, !5049, !5050, !5051, !5052, !5053, !5055, !5056}
!5048 = !DILocalVariable(name: "value", arg: 1, scope: !5044, file: !2650, line: 788, type: !2672)
!5049 = !DILocalVariable(name: "conv", arg: 2, scope: !5044, file: !2650, line: 789, type: !4648)
!5050 = !DILocalVariable(name: "bps", arg: 3, scope: !5044, file: !2650, line: 790, type: !193)
!5051 = !DILocalVariable(name: "bpe", arg: 4, scope: !5044, file: !2650, line: 791, type: !118)
!5052 = !DILocalVariable(name: "upcase", scope: !5044, file: !2650, line: 793, type: !145)
!5053 = !DILocalVariable(name: "radix", scope: !5044, file: !2650, line: 794, type: !5054)
!5054 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!5055 = !DILocalVariable(name: "bp", scope: !5044, file: !2650, line: 795, type: !193)
!5056 = !DILocalVariable(name: "lsv", scope: !5057, file: !2650, line: 798, type: !32)
!5057 = distinct !DILexicalBlock(scope: !5044, file: !2650, line: 797, column: 5)
!5058 = !DILocation(line: 0, scope: !5044)
!5059 = !DILocation(line: 793, column: 35, scope: !5044)
!5060 = !DILocation(line: 793, column: 24, scope: !5044)
!5061 = !DILocation(line: 793, column: 16, scope: !5044)
!5062 = !DILocation(line: 794, column: 29, scope: !5044)
!5063 = !DILocation(line: 795, column: 24, scope: !5044)
!5064 = !DILocation(line: 795, column: 17, scope: !5044)
!5065 = !DILocation(line: 797, column: 2, scope: !5044)
!5066 = !DILocation(line: 802, column: 9, scope: !5057)
!5067 = !DILocation(line: 798, column: 22, scope: !5057)
!5068 = !DILocation(line: 0, scope: !5057)
!5069 = !DILocation(line: 800, column: 16, scope: !5057)
!5070 = !DILocation(line: 800, column: 11, scope: !5057)
!5071 = !DILocation(line: 800, column: 4, scope: !5057)
!5072 = !DILocation(line: 800, column: 9, scope: !5057)
!5073 = !DILocation(line: 803, column: 18, scope: !5044)
!5074 = !DILocation(line: 803, column: 24, scope: !5044)
!5075 = !DILocation(line: 803, column: 2, scope: !5057)
!5076 = distinct !{!5076, !5065, !5077}
!5077 = !DILocation(line: 803, column: 37, scope: !5044)
!5078 = !DILocation(line: 808, column: 12, scope: !5079)
!5079 = distinct !DILexicalBlock(scope: !5044, file: !2650, line: 808, column: 6)
!5080 = !DILocation(line: 808, column: 6, scope: !5044)
!5081 = !DILocation(line: 809, column: 7, scope: !5082)
!5082 = distinct !DILexicalBlock(scope: !5079, file: !2650, line: 808, column: 23)
!5083 = !DILocation(line: 813, column: 3, scope: !5084)
!5084 = distinct !DILexicalBlock(scope: !5085, file: !2650, line: 811, column: 27)
!5085 = distinct !DILexicalBlock(scope: !5086, file: !2650, line: 811, column: 14)
!5086 = distinct !DILexicalBlock(scope: !5082, file: !2650, line: 809, column: 7)
!5087 = !DILocation(line: 0, scope: !5086)
!5088 = !DILocation(line: 818, column: 2, scope: !5044)
!5089 = distinct !DISubprogram(name: "store_count", scope: !2650, file: !2650, line: 1280, type: !5090, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !5094)
!5090 = !DISubroutineType(types: !5091)
!5091 = !{null, !5092, !106, !107}
!5092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5093, size: 32)
!5093 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4615)
!5094 = !{!5095, !5096, !5097}
!5095 = !DILocalVariable(name: "conv", arg: 1, scope: !5089, file: !2650, line: 1280, type: !5092)
!5096 = !DILocalVariable(name: "dp", arg: 2, scope: !5089, file: !2650, line: 1281, type: !106)
!5097 = !DILocalVariable(name: "count", arg: 3, scope: !5089, file: !2650, line: 1282, type: !107)
!5098 = !DILocation(line: 0, scope: !5089)
!5099 = !DILocation(line: 1284, column: 38, scope: !5089)
!5100 = !DILocation(line: 1284, column: 2, scope: !5089)
!5101 = !DILocation(line: 1286, column: 4, scope: !5102)
!5102 = distinct !DILexicalBlock(scope: !5089, file: !2650, line: 1284, column: 50)
!5103 = !DILocation(line: 1286, column: 14, scope: !5102)
!5104 = !DILocation(line: 1287, column: 3, scope: !5102)
!5105 = !DILocation(line: 1289, column: 24, scope: !5102)
!5106 = !DILocation(line: 1289, column: 22, scope: !5102)
!5107 = !DILocation(line: 1290, column: 3, scope: !5102)
!5108 = !DILocation(line: 1292, column: 18, scope: !5102)
!5109 = !DILocation(line: 1292, column: 4, scope: !5102)
!5110 = !DILocation(line: 1292, column: 16, scope: !5102)
!5111 = !DILocation(line: 1293, column: 3, scope: !5102)
!5112 = !DILocation(line: 1295, column: 4, scope: !5102)
!5113 = !DILocation(line: 1295, column: 15, scope: !5102)
!5114 = !DILocation(line: 1296, column: 3, scope: !5102)
!5115 = !DILocation(line: 1298, column: 22, scope: !5102)
!5116 = !DILocation(line: 1298, column: 4, scope: !5102)
!5117 = !DILocation(line: 1298, column: 20, scope: !5102)
!5118 = !DILocation(line: 1299, column: 3, scope: !5102)
!5119 = !DILocation(line: 1301, column: 21, scope: !5102)
!5120 = !DILocation(line: 1301, column: 4, scope: !5102)
!5121 = !DILocation(line: 1301, column: 19, scope: !5102)
!5122 = !DILocation(line: 1302, column: 3, scope: !5102)
!5123 = !DILocation(line: 1304, column: 4, scope: !5102)
!5124 = !DILocation(line: 1304, column: 17, scope: !5102)
!5125 = !DILocation(line: 1305, column: 3, scope: !5102)
!5126 = !DILocation(line: 1307, column: 4, scope: !5102)
!5127 = !DILocation(line: 1307, column: 20, scope: !5102)
!5128 = !DILocation(line: 1308, column: 3, scope: !5102)
!5129 = !DILocation(line: 1316, column: 1, scope: !5089)
!5130 = distinct !DISubprogram(name: "isupper", scope: !5131, file: !5131, line: 16, type: !214, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !5132)
!5131 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5132 = !{!5133}
!5133 = !DILocalVariable(name: "a", arg: 1, scope: !5130, file: !5131, line: 16, type: !107)
!5134 = !DILocation(line: 0, scope: !5130)
!5135 = !DILocation(line: 18, column: 29, scope: !5130)
!5136 = !DILocation(line: 18, column: 45, scope: !5130)
!5137 = !DILocation(line: 18, column: 2, scope: !5130)
!5138 = distinct !DISubprogram(name: "conversion_radix", scope: !2650, file: !2650, line: 761, type: !5139, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !5141)
!5139 = !DISubroutineType(types: !5140)
!5140 = !{!185, !120}
!5141 = !{!5142}
!5142 = !DILocalVariable(name: "specifier", arg: 1, scope: !5138, file: !2650, line: 761, type: !120)
!5143 = !DILocation(line: 0, scope: !5138)
!5144 = !DILocation(line: 763, column: 2, scope: !5138)
!5145 = !DILocation(line: 770, column: 3, scope: !5146)
!5146 = distinct !DILexicalBlock(scope: !5138, file: !2650, line: 763, column: 21)
!5147 = !DILocation(line: 774, column: 3, scope: !5146)
!5148 = !DILocation(line: 0, scope: !5146)
!5149 = !DILocation(line: 776, column: 1, scope: !5138)
!5150 = distinct !DISubprogram(name: "extract_flags", scope: !2650, file: !2650, line: 339, type: !4992, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !5151)
!5151 = !{!5152, !5153, !5154}
!5152 = !DILocalVariable(name: "conv", arg: 1, scope: !5150, file: !2650, line: 339, type: !4648)
!5153 = !DILocalVariable(name: "sp", arg: 2, scope: !5150, file: !2650, line: 340, type: !118)
!5154 = !DILocalVariable(name: "loop", scope: !5150, file: !2650, line: 342, type: !145)
!5155 = !DILocation(line: 0, scope: !5150)
!5156 = !DILocation(line: 344, column: 2, scope: !5150)
!5157 = !DILocation(line: 345, column: 11, scope: !5158)
!5158 = distinct !DILexicalBlock(scope: !5150, file: !2650, line: 344, column: 5)
!5159 = !DILocation(line: 345, column: 3, scope: !5158)
!5160 = !DILocation(line: 351, column: 4, scope: !5161)
!5161 = distinct !DILexicalBlock(scope: !5158, file: !2650, line: 345, column: 16)
!5162 = !DILocation(line: 354, column: 4, scope: !5161)
!5163 = !DILocation(line: 357, column: 4, scope: !5161)
!5164 = !DILocation(line: 360, column: 4, scope: !5161)
!5165 = !DILocation(line: 0, scope: !5161)
!5166 = !DILocation(line: 370, column: 12, scope: !5167)
!5167 = distinct !DILexicalBlock(scope: !5150, file: !2650, line: 370, column: 6)
!5168 = !DILocation(line: 370, column: 22, scope: !5167)
!5169 = !DILocation(line: 371, column: 19, scope: !5170)
!5170 = distinct !DILexicalBlock(scope: !5167, file: !2650, line: 370, column: 42)
!5171 = !DILocation(line: 372, column: 2, scope: !5170)
!5172 = !DILocation(line: 376, column: 2, scope: !5150)
!5173 = distinct !DISubprogram(name: "extract_width", scope: !2650, file: !2650, line: 388, type: !4992, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !5174)
!5174 = !{!5175, !5176, !5177, !5178}
!5175 = !DILocalVariable(name: "conv", arg: 1, scope: !5173, file: !2650, line: 388, type: !4648)
!5176 = !DILocalVariable(name: "sp", arg: 2, scope: !5173, file: !2650, line: 389, type: !118)
!5177 = !DILocalVariable(name: "wp", scope: !5173, file: !2650, line: 398, type: !118)
!5178 = !DILocalVariable(name: "width", scope: !5173, file: !2650, line: 399, type: !185)
!5179 = !DILocation(line: 0, scope: !5173)
!5180 = !DILocation(line: 391, column: 8, scope: !5173)
!5181 = !DILocation(line: 391, column: 22, scope: !5173)
!5182 = !DILocation(line: 393, column: 6, scope: !5183)
!5183 = distinct !DILexicalBlock(scope: !5173, file: !2650, line: 393, column: 6)
!5184 = !DILocation(line: 393, column: 10, scope: !5183)
!5185 = !DILocation(line: 393, column: 6, scope: !5173)
!5186 = !DILocation(line: 394, column: 20, scope: !5187)
!5187 = distinct !DILexicalBlock(scope: !5183, file: !2650, line: 393, column: 18)
!5188 = !DILocation(line: 395, column: 10, scope: !5187)
!5189 = !DILocation(line: 395, column: 3, scope: !5187)
!5190 = !DILocation(line: 399, column: 17, scope: !5173)
!5191 = !DILocation(line: 401, column: 6, scope: !5192)
!5192 = distinct !DILexicalBlock(scope: !5173, file: !2650, line: 401, column: 6)
!5193 = !DILocation(line: 401, column: 9, scope: !5192)
!5194 = !DILocation(line: 401, column: 6, scope: !5173)
!5195 = !DILocation(line: 402, column: 23, scope: !5196)
!5196 = distinct !DILexicalBlock(scope: !5192, file: !2650, line: 401, column: 16)
!5197 = !DILocation(line: 403, column: 9, scope: !5196)
!5198 = !DILocation(line: 403, column: 21, scope: !5196)
!5199 = !DILocation(line: 405, column: 11, scope: !5196)
!5200 = !DILocation(line: 404, column: 21, scope: !5196)
!5201 = !DILocation(line: 406, column: 2, scope: !5196)
!5202 = !DILocation(line: 409, column: 1, scope: !5173)
!5203 = distinct !DISubprogram(name: "extract_prec", scope: !2650, file: !2650, line: 420, type: !4992, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !5204)
!5204 = !{!5205, !5206, !5207}
!5205 = !DILocalVariable(name: "conv", arg: 1, scope: !5203, file: !2650, line: 420, type: !4648)
!5206 = !DILocalVariable(name: "sp", arg: 2, scope: !5203, file: !2650, line: 421, type: !118)
!5207 = !DILocalVariable(name: "prec", scope: !5203, file: !2650, line: 435, type: !185)
!5208 = !DILocation(line: 0, scope: !5203)
!5209 = !DILocation(line: 423, column: 24, scope: !5203)
!5210 = !DILocation(line: 423, column: 28, scope: !5203)
!5211 = !DILocation(line: 423, column: 8, scope: !5203)
!5212 = !DILocation(line: 423, column: 21, scope: !5203)
!5213 = !DILocation(line: 425, column: 6, scope: !5203)
!5214 = !DILocation(line: 428, column: 2, scope: !5203)
!5215 = !DILocation(line: 430, column: 6, scope: !5216)
!5216 = distinct !DILexicalBlock(scope: !5203, file: !2650, line: 430, column: 6)
!5217 = !DILocation(line: 430, column: 10, scope: !5216)
!5218 = !DILocation(line: 430, column: 6, scope: !5203)
!5219 = !DILocation(line: 431, column: 19, scope: !5220)
!5220 = distinct !DILexicalBlock(scope: !5216, file: !2650, line: 430, column: 18)
!5221 = !DILocation(line: 432, column: 10, scope: !5220)
!5222 = !DILocation(line: 432, column: 3, scope: !5220)
!5223 = !DILocation(line: 435, column: 16, scope: !5203)
!5224 = !DILocation(line: 437, column: 8, scope: !5203)
!5225 = !DILocation(line: 437, column: 19, scope: !5203)
!5226 = !DILocation(line: 439, column: 10, scope: !5203)
!5227 = !DILocation(line: 438, column: 20, scope: !5203)
!5228 = !DILocation(line: 441, column: 9, scope: !5203)
!5229 = !DILocation(line: 442, column: 1, scope: !5203)
!5230 = distinct !DISubprogram(name: "extract_length", scope: !2650, file: !2650, line: 453, type: !4992, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !5231)
!5231 = !{!5232, !5233}
!5232 = !DILocalVariable(name: "conv", arg: 1, scope: !5230, file: !2650, line: 453, type: !4648)
!5233 = !DILocalVariable(name: "sp", arg: 2, scope: !5230, file: !2650, line: 454, type: !118)
!5234 = !DILocation(line: 0, scope: !5230)
!5235 = !DILocation(line: 456, column: 10, scope: !5230)
!5236 = !DILocation(line: 456, column: 2, scope: !5230)
!5237 = !DILocation(line: 458, column: 8, scope: !5238)
!5238 = distinct !DILexicalBlock(scope: !5239, file: !2650, line: 458, column: 7)
!5239 = distinct !DILexicalBlock(scope: !5230, file: !2650, line: 456, column: 15)
!5240 = !DILocation(line: 458, column: 7, scope: !5238)
!5241 = !DILocation(line: 458, column: 13, scope: !5238)
!5242 = !DILocation(line: 0, scope: !5238)
!5243 = !DILocation(line: 458, column: 7, scope: !5239)
!5244 = !DILocation(line: 459, column: 21, scope: !5245)
!5245 = distinct !DILexicalBlock(scope: !5238, file: !2650, line: 458, column: 21)
!5246 = !DILocation(line: 460, column: 4, scope: !5245)
!5247 = !DILocation(line: 461, column: 3, scope: !5245)
!5248 = !DILocation(line: 462, column: 21, scope: !5249)
!5249 = distinct !DILexicalBlock(scope: !5238, file: !2650, line: 461, column: 10)
!5250 = !DILocation(line: 466, column: 8, scope: !5251)
!5251 = distinct !DILexicalBlock(scope: !5239, file: !2650, line: 466, column: 7)
!5252 = !DILocation(line: 466, column: 7, scope: !5251)
!5253 = !DILocation(line: 466, column: 13, scope: !5251)
!5254 = !DILocation(line: 0, scope: !5251)
!5255 = !DILocation(line: 466, column: 7, scope: !5239)
!5256 = !DILocation(line: 467, column: 21, scope: !5257)
!5257 = distinct !DILexicalBlock(scope: !5251, file: !2650, line: 466, column: 21)
!5258 = !DILocation(line: 468, column: 4, scope: !5257)
!5259 = !DILocation(line: 469, column: 3, scope: !5257)
!5260 = !DILocation(line: 470, column: 21, scope: !5261)
!5261 = distinct !DILexicalBlock(scope: !5251, file: !2650, line: 469, column: 10)
!5262 = !DILocation(line: 474, column: 9, scope: !5239)
!5263 = !DILocation(line: 474, column: 20, scope: !5239)
!5264 = !DILocation(line: 475, column: 3, scope: !5239)
!5265 = !DILocation(line: 476, column: 3, scope: !5239)
!5266 = !DILocation(line: 478, column: 9, scope: !5239)
!5267 = !DILocation(line: 478, column: 20, scope: !5239)
!5268 = !DILocation(line: 479, column: 3, scope: !5239)
!5269 = !DILocation(line: 480, column: 3, scope: !5239)
!5270 = !DILocation(line: 482, column: 9, scope: !5239)
!5271 = !DILocation(line: 482, column: 20, scope: !5239)
!5272 = !DILocation(line: 483, column: 3, scope: !5239)
!5273 = !DILocation(line: 484, column: 3, scope: !5239)
!5274 = !DILocation(line: 486, column: 9, scope: !5239)
!5275 = !DILocation(line: 486, column: 20, scope: !5239)
!5276 = !DILocation(line: 487, column: 3, scope: !5239)
!5277 = !DILocation(line: 492, column: 21, scope: !5239)
!5278 = !DILocation(line: 493, column: 3, scope: !5239)
!5279 = !DILocation(line: 495, column: 9, scope: !5239)
!5280 = !DILocation(line: 495, column: 20, scope: !5239)
!5281 = !DILocation(line: 496, column: 3, scope: !5239)
!5282 = !DILocation(line: 498, column: 2, scope: !5230)
!5283 = distinct !DISubprogram(name: "extract_specifier", scope: !2650, file: !2650, line: 513, type: !4992, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !5284)
!5284 = !{!5285, !5286, !5287, !5288}
!5285 = !DILocalVariable(name: "conv", arg: 1, scope: !5283, file: !2650, line: 513, type: !4648)
!5286 = !DILocalVariable(name: "sp", arg: 2, scope: !5283, file: !2650, line: 514, type: !118)
!5287 = !DILocalVariable(name: "unsupported", scope: !5283, file: !2650, line: 516, type: !145)
!5288 = !DILabel(scope: !5289, name: "int_conv", file: !2650, line: 526)
!5289 = distinct !DILexicalBlock(scope: !5283, file: !2650, line: 520, column: 27)
!5290 = !DILocation(line: 0, scope: !5283)
!5291 = !DILocation(line: 518, column: 20, scope: !5283)
!5292 = !DILocation(line: 518, column: 8, scope: !5283)
!5293 = !DILocation(line: 518, column: 18, scope: !5283)
!5294 = !DILocation(line: 520, column: 2, scope: !5283)
!5295 = !DILocation(line: 525, column: 3, scope: !5289)
!5296 = !DILocation(line: 0, scope: !5289)
!5297 = !DILocation(line: 526, column: 1, scope: !5289)
!5298 = !DILocation(line: 528, column: 24, scope: !5299)
!5299 = distinct !DILexicalBlock(scope: !5289, file: !2650, line: 528, column: 7)
!5300 = !DILocation(line: 528, column: 7, scope: !5289)
!5301 = !DILocation(line: 535, column: 23, scope: !5302)
!5302 = distinct !DILexicalBlock(scope: !5289, file: !2650, line: 535, column: 7)
!5303 = !DILocation(line: 535, column: 7, scope: !5289)
!5304 = !DILocation(line: 536, column: 36, scope: !5305)
!5305 = distinct !DILexicalBlock(scope: !5302, file: !2650, line: 535, column: 31)
!5306 = !DILocation(line: 537, column: 3, scope: !5305)
!5307 = !DILocation(line: 570, column: 9, scope: !5289)
!5308 = !DILocation(line: 570, column: 23, scope: !5289)
!5309 = !DILocation(line: 575, column: 4, scope: !5310)
!5310 = distinct !DILexicalBlock(scope: !5311, file: !2650, line: 573, column: 48)
!5311 = distinct !DILexicalBlock(scope: !5289, file: !2650, line: 573, column: 7)
!5312 = !DILocation(line: 603, column: 9, scope: !5289)
!5313 = !DILocation(line: 603, column: 23, scope: !5289)
!5314 = !DILocation(line: 605, column: 24, scope: !5315)
!5315 = distinct !DILexicalBlock(scope: !5289, file: !2650, line: 605, column: 7)
!5316 = !DILocation(line: 605, column: 7, scope: !5289)
!5317 = !DILocation(line: 612, column: 9, scope: !5289)
!5318 = !DILocation(line: 612, column: 23, scope: !5289)
!5319 = !DILocation(line: 619, column: 24, scope: !5320)
!5320 = distinct !DILexicalBlock(scope: !5289, file: !2650, line: 619, column: 7)
!5321 = !DILocation(line: 619, column: 7, scope: !5289)
!5322 = !DILocation(line: 625, column: 9, scope: !5289)
!5323 = !DILocation(line: 625, column: 17, scope: !5289)
!5324 = !DILocation(line: 626, column: 3, scope: !5289)
!5325 = !DILocation(line: 629, column: 20, scope: !5283)
!5326 = !DILocation(line: 629, column: 8, scope: !5283)
!5327 = !DILocation(line: 518, column: 23, scope: !5283)
!5328 = !DILocation(line: 631, column: 2, scope: !5283)
!5329 = distinct !DISubprogram(name: "extract_decimal", scope: !2650, file: !2650, line: 318, type: !5330, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !5332)
!5330 = !DISubroutineType(types: !5331)
!5331 = !{!185, !184}
!5332 = !{!5333, !5334, !5335}
!5333 = !DILocalVariable(name: "str", arg: 1, scope: !5329, file: !2650, line: 318, type: !184)
!5334 = !DILocalVariable(name: "sp", scope: !5329, file: !2650, line: 320, type: !118)
!5335 = !DILocalVariable(name: "val", scope: !5329, file: !2650, line: 321, type: !185)
!5336 = !DILocation(line: 0, scope: !5329)
!5337 = !DILocation(line: 320, column: 19, scope: !5329)
!5338 = !DILocation(line: 323, column: 37, scope: !5329)
!5339 = !DILocation(line: 323, column: 17, scope: !5329)
!5340 = !DILocation(line: 323, column: 9, scope: !5329)
!5341 = !DILocation(line: 323, column: 2, scope: !5329)
!5342 = !DILocation(line: 324, column: 13, scope: !5343)
!5343 = distinct !DILexicalBlock(scope: !5329, file: !2650, line: 323, column: 43)
!5344 = !DILocation(line: 324, column: 24, scope: !5343)
!5345 = !DILocation(line: 324, column: 19, scope: !5343)
!5346 = !DILocation(line: 324, column: 27, scope: !5343)
!5347 = distinct !{!5347, !5341, !5348}
!5348 = !DILocation(line: 325, column: 2, scope: !5329)
!5349 = !DILocation(line: 326, column: 7, scope: !5329)
!5350 = !DILocation(line: 327, column: 2, scope: !5329)
!5351 = distinct !DISubprogram(name: "isdigit", scope: !5131, file: !5131, line: 43, type: !214, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !5352)
!5352 = !{!5353}
!5353 = !DILocalVariable(name: "a", arg: 1, scope: !5351, file: !5131, line: 43, type: !107)
!5354 = !DILocation(line: 0, scope: !5351)
!5355 = !DILocation(line: 45, column: 29, scope: !5351)
!5356 = !DILocation(line: 45, column: 45, scope: !5351)
!5357 = !DILocation(line: 45, column: 2, scope: !5351)
!5358 = distinct !DISubprogram(name: "assert_post_action", scope: !5359, file: !5359, line: 26, type: !5360, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2680, retainedNodes: !5362)
!5359 = !DIFile(filename: "zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5360 = !DISubroutineType(types: !5361)
!5361 = !{null, !118, !32}
!5362 = !{!5363, !5364}
!5363 = !DILocalVariable(name: "file", arg: 1, scope: !5358, file: !5359, line: 26, type: !118)
!5364 = !DILocalVariable(name: "line", arg: 2, scope: !5358, file: !5359, line: 26, type: !32)
!5365 = !DILocation(line: 0, scope: !5358)
!5366 = !DILocation(line: 43, column: 2, scope: !5367)
!5367 = distinct !DILexicalBlock(scope: !5358, file: !5359, line: 43, column: 2)
!5368 = !{i64 2155449442, i64 2155449458, i64 2155449484, i64 2155449512, i64 2155449532}
!5369 = !DILocation(line: 44, column: 1, scope: !5358)
!5370 = distinct !DISubprogram(name: "assert_print", scope: !5359, file: !5359, line: 46, type: !4340, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2680, retainedNodes: !5371)
!5371 = !{!5372, !5373}
!5372 = !DILocalVariable(name: "fmt", arg: 1, scope: !5370, file: !5359, line: 46, type: !118)
!5373 = !DILocalVariable(name: "ap", scope: !5370, file: !5359, line: 48, type: !5374)
!5374 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3350, line: 99, baseType: !5375)
!5375 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3350, line: 40, baseType: !5376)
!5376 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !5359, baseType: !5377)
!5377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5378)
!5378 = !{!5379}
!5379 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5377, file: !5359, line: 48, baseType: !106, size: 32)
!5380 = !DILocation(line: 0, scope: !5370)
!5381 = !DILocation(line: 48, column: 2, scope: !5370)
!5382 = !DILocation(line: 48, column: 10, scope: !5370)
!5383 = !DILocation(line: 50, column: 2, scope: !5370)
!5384 = !DILocation(line: 52, column: 2, scope: !5370)
!5385 = !DILocation(line: 54, column: 2, scope: !5370)
!5386 = !DILocation(line: 55, column: 1, scope: !5370)
!5387 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5388, file: !5388, line: 9, type: !3227, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2682, retainedNodes: !2296)
!5388 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest")
!5389 = !DILocation(line: 11, column: 1, scope: !5387)
!5390 = !{i64 2147566702, i64 2147566745, i64 2147566785}
!5391 = !DILocation(line: 12, column: 1, scope: !5387)
!5392 = !{i64 2147570929, i64 2147570972, i64 2147571012}
!5393 = !DILocation(line: 13, column: 1, scope: !5387)
!5394 = !{i64 2147571138, i64 2147571181, i64 2147571221}
!5395 = !DILocation(line: 14, column: 1, scope: !5387)
!5396 = !{i64 2147571307, i64 2147571350, i64 2147571390}
!5397 = !DILocation(line: 15, column: 1, scope: !5387)
!5398 = !{i64 2147571470, i64 2147571513, i64 2147571553}
!5399 = !DILocation(line: 16, column: 1, scope: !5387)
!5400 = !{i64 2147571654, i64 2147571697, i64 2147571737}
!5401 = !DILocation(line: 17, column: 1, scope: !5387)
!5402 = !{i64 2147571833, i64 2147571876, i64 2147571916}
!5403 = !DILocation(line: 18, column: 1, scope: !5387)
!5404 = !{i64 2147572076, i64 2147572119, i64 2147572159}
!5405 = !DILocation(line: 19, column: 1, scope: !5387)
!5406 = !{i64 2147572311, i64 2147572354, i64 2147572394}
!5407 = !DILocation(line: 20, column: 1, scope: !5387)
!5408 = !{i64 2147572498, i64 2147572541, i64 2147572581}
!5409 = !DILocation(line: 21, column: 1, scope: !5387)
!5410 = !{i64 2147572714, i64 2147572757, i64 2147572797}
!5411 = !DILocation(line: 22, column: 1, scope: !5387)
!5412 = !{i64 2147572917, i64 2147572960, i64 2147573000}
!5413 = !DILocation(line: 23, column: 1, scope: !5387)
!5414 = !{i64 2147573120, i64 2147573163, i64 2147573203}
!5415 = !DILocation(line: 24, column: 1, scope: !5387)
!5416 = !{i64 2147573295, i64 2147573338, i64 2147573378}
!5417 = !DILocation(line: 25, column: 1, scope: !5387)
!5418 = !{i64 2147573503, i64 2147573546, i64 2147573586}
!5419 = !DILocation(line: 26, column: 1, scope: !5387)
!5420 = !{i64 2147573707, i64 2147573750, i64 2147573790}
!5421 = !DILocation(line: 27, column: 1, scope: !5387)
!5422 = !{i64 2147573900, i64 2147573943, i64 2147573983}
!5423 = !DILocation(line: 28, column: 1, scope: !5387)
!5424 = !{i64 2147574102, i64 2147574145, i64 2147574185}
!5425 = !DILocation(line: 29, column: 1, scope: !5387)
!5426 = !{i64 2147574301, i64 2147574344, i64 2147574384}
!5427 = !DILocation(line: 30, column: 1, scope: !5387)
!5428 = !{i64 2147574528, i64 2147574571, i64 2147574611}
!5429 = !DILocation(line: 31, column: 1, scope: !5387)
!5430 = !{i64 2147574730, i64 2147574773, i64 2147574813}
!5431 = !DILocation(line: 32, column: 1, scope: !5387)
!5432 = !{i64 2147574945, i64 2147574988, i64 2147575028}
!5433 = !DILocation(line: 33, column: 1, scope: !5387)
!5434 = !{i64 2147575162, i64 2147575205, i64 2147575245}
!5435 = !DILocation(line: 34, column: 1, scope: !5387)
!5436 = !{i64 2147575334, i64 2147575377, i64 2147575417}
!5437 = !DILocation(line: 35, column: 1, scope: !5387)
!5438 = !{i64 2147575536, i64 2147575579, i64 2147575619}
!5439 = !DILocation(line: 36, column: 1, scope: !5387)
!5440 = !{i64 2147575762, i64 2147575805, i64 2147575845}
!5441 = !DILocation(line: 37, column: 1, scope: !5387)
!5442 = !{i64 2147575961, i64 2147576004, i64 2147576044}
!5443 = !DILocation(line: 38, column: 1, scope: !5387)
!5444 = !{i64 2147576136, i64 2147576179, i64 2147576219}
!5445 = !DILocation(line: 39, column: 1, scope: !5387)
!5446 = !{i64 2147576389, i64 2147576432, i64 2147576472}
!5447 = !DILocation(line: 40, column: 1, scope: !5387)
!5448 = !{i64 2147576630, i64 2147576673, i64 2147576713}
!5449 = !DILocation(line: 41, column: 1, scope: !5387)
!5450 = !{i64 2147576865, i64 2147576908, i64 2147576948}
!5451 = !DILocation(line: 42, column: 1, scope: !5387)
!5452 = !{i64 2147577091, i64 2147577134, i64 2147577174}
!5453 = !DILocation(line: 43, column: 1, scope: !5387)
!5454 = !{i64 2147577317, i64 2147577360, i64 2147577400}
!5455 = !DILocation(line: 44, column: 1, scope: !5387)
!5456 = !{i64 2147577552, i64 2147577595, i64 2147577635}
!5457 = !DILocation(line: 45, column: 1, scope: !5387)
!5458 = !{i64 2147577787, i64 2147577830, i64 2147577870}
!5459 = !DILocation(line: 46, column: 1, scope: !5387)
!5460 = !{i64 2147578022, i64 2147578065, i64 2147578105}
!5461 = !DILocation(line: 47, column: 1, scope: !5387)
!5462 = !{i64 2147578260, i64 2147578303, i64 2147578343}
!5463 = !DILocation(line: 48, column: 1, scope: !5387)
!5464 = !{i64 2147578534, i64 2147578577, i64 2147578617}
!5465 = !DILocation(line: 49, column: 1, scope: !5387)
!5466 = !{i64 2147578772, i64 2147578815, i64 2147578855}
!5467 = !DILocation(line: 50, column: 1, scope: !5387)
!5468 = !{i64 2147579025, i64 2147579068, i64 2147579108}
!5469 = !DILocation(line: 51, column: 1, scope: !5387)
!5470 = !{i64 2147579269, i64 2147579312, i64 2147579352}
!5471 = !DILocation(line: 52, column: 1, scope: !5387)
!5472 = !{i64 2147579519, i64 2147579562, i64 2147579602}
!5473 = !DILocation(line: 53, column: 1, scope: !5387)
!5474 = !{i64 2147583821, i64 2147583864, i64 2147583904}
!5475 = !DILocation(line: 54, column: 1, scope: !5387)
!5476 = !{i64 2147584068, i64 2147584111, i64 2147584151}
!5477 = !DILocation(line: 55, column: 1, scope: !5387)
!5478 = !{i64 2147584303, i64 2147584346, i64 2147584386}
!5479 = !DILocation(line: 56, column: 1, scope: !5387)
!5480 = !{i64 2147584538, i64 2147584581, i64 2147584621}
!5481 = !DILocation(line: 57, column: 1, scope: !5387)
!5482 = !{i64 2147584773, i64 2147584816, i64 2147584856}
!5483 = !DILocation(line: 58, column: 1, scope: !5387)
!5484 = !{i64 2147585008, i64 2147585051, i64 2147585091}
!5485 = !DILocation(line: 59, column: 1, scope: !5387)
!5486 = !{i64 2147585252, i64 2147585295, i64 2147585335}
!5487 = !DILocation(line: 60, column: 1, scope: !5387)
!5488 = !{i64 2147585490, i64 2147585533, i64 2147585573}
!5489 = !DILocation(line: 61, column: 1, scope: !5387)
!5490 = !{i64 2147585731, i64 2147585774, i64 2147585814}
!5491 = !DILocation(line: 62, column: 1, scope: !5387)
!5492 = !{i64 2147586011, i64 2147586054, i64 2147586094}
!5493 = !DILocation(line: 63, column: 1, scope: !5387)
!5494 = !{i64 2147586270, i64 2147586313, i64 2147586353}
!5495 = !DILocation(line: 64, column: 1, scope: !5387)
!5496 = !{i64 2147586508, i64 2147586551, i64 2147586591}
!5497 = !DILocation(line: 65, column: 1, scope: !5387)
!5498 = !{i64 2147586767, i64 2147586810, i64 2147586850}
!5499 = !DILocation(line: 66, column: 1, scope: !5387)
!5500 = !{i64 2147586996, i64 2147587039, i64 2147587079}
!5501 = !DILocation(line: 67, column: 1, scope: !5387)
!5502 = !{i64 2147587204, i64 2147587247, i64 2147587287}
!5503 = !DILocation(line: 68, column: 1, scope: !5387)
!5504 = !{i64 2147587415, i64 2147587458, i64 2147587498}
!5505 = !DILocation(line: 69, column: 1, scope: !5387)
!5506 = !{i64 2147587650, i64 2147587693, i64 2147587733}
!5507 = !DILocation(line: 70, column: 1, scope: !5387)
!5508 = !{i64 2147587879, i64 2147587922, i64 2147587962}
!5509 = !DILocation(line: 71, column: 1, scope: !5387)
!5510 = !{i64 2147588096, i64 2147588139, i64 2147588179}
!5511 = !DILocation(line: 72, column: 1, scope: !5387)
!5512 = !{i64 2147588325, i64 2147588368, i64 2147588408}
!5513 = !DILocation(line: 73, column: 1, scope: !5387)
!5514 = !{i64 2147588563, i64 2147588606, i64 2147588646}
!5515 = !DILocation(line: 74, column: 1, scope: !5387)
!5516 = !{i64 2147588795, i64 2147588838, i64 2147588878}
!5517 = !DILocation(line: 75, column: 1, scope: !5387)
!5518 = !{i64 2147589021, i64 2147589064, i64 2147589104}
!5519 = !DILocation(line: 76, column: 1, scope: !5387)
!5520 = !{i64 2147589238, i64 2147589281, i64 2147589321}
!5521 = !DILocation(line: 77, column: 1, scope: !5387)
!5522 = !{i64 2147589470, i64 2147589513, i64 2147589553}
!5523 = !DILocation(line: 78, column: 1, scope: !5387)
!5524 = !{i64 2147589696, i64 2147589739, i64 2147589779}
!5525 = !DILocation(line: 79, column: 1, scope: !5387)
!5526 = !{i64 2147589910, i64 2147589953, i64 2147589993}
!5527 = !DILocation(line: 80, column: 1, scope: !5387)
!5528 = !{i64 2147590130, i64 2147590173, i64 2147590213}
!5529 = !DILocation(line: 81, column: 1, scope: !5387)
!5530 = !{i64 2147590362, i64 2147590405, i64 2147590445}
!5531 = !DILocation(line: 82, column: 1, scope: !5387)
!5532 = !{i64 2147590570, i64 2147590613, i64 2147590653}
!5533 = !DILocation(line: 83, column: 1, scope: !5387)
!5534 = !{i64 2147590775, i64 2147590818, i64 2147590858}
!5535 = !DILocation(line: 84, column: 1, scope: !5387)
!5536 = !{i64 2147590992, i64 2147591035, i64 2147591075}
!5537 = !DILocation(line: 85, column: 1, scope: !5387)
!5538 = !{i64 2147591206, i64 2147591249, i64 2147591289}
!5539 = !DILocation(line: 86, column: 1, scope: !5387)
!5540 = !{i64 2147591432, i64 2147591475, i64 2147591515}
!5541 = !DILocation(line: 87, column: 1, scope: !5387)
!5542 = !{i64 2147591652, i64 2147591695, i64 2147591735}
!5543 = !DILocation(line: 88, column: 1, scope: !5387)
!5544 = !{i64 2147595918, i64 2147595961, i64 2147596001}
!5545 = !DILocation(line: 89, column: 1, scope: !5387)
!5546 = !{i64 2147596150, i64 2147596193, i64 2147596233}
!5547 = !DILocation(line: 90, column: 1, scope: !5387)
!5548 = !{i64 2147596385, i64 2147596428, i64 2147596468}
!5549 = !DILocation(line: 91, column: 1, scope: !5387)
!5550 = !{i64 2147596635, i64 2147596678, i64 2147596718}
!5551 = !DILocation(line: 92, column: 1, scope: !5387)
!5552 = !{i64 2147596885, i64 2147596928, i64 2147596968}
!5553 = !DILocation(line: 93, column: 1, scope: !5387)
!5554 = !{i64 2147597123, i64 2147597166, i64 2147597206}
!5555 = !DILocation(line: 94, column: 1, scope: !5387)
!5556 = !{i64 2147597334, i64 2147597377, i64 2147597417}
!5557 = !DILocation(line: 95, column: 1, scope: !5387)
!5558 = !{i64 2147597551, i64 2147597594, i64 2147597634}
!5559 = !DILocation(line: 96, column: 1, scope: !5387)
!5560 = !{i64 2147597747, i64 2147597790, i64 2147597830}
!5561 = !DILocation(line: 97, column: 1, scope: !5387)
!5562 = !{i64 2147597949, i64 2147597992, i64 2147598032}
!5563 = !DILocation(line: 98, column: 1, scope: !5387)
!5564 = !{i64 2147598142, i64 2147598185, i64 2147598225}
!5565 = !DILocation(line: 99, column: 1, scope: !5387)
!5566 = !{i64 2147598350, i64 2147598393, i64 2147598433}
!5567 = !DILocation(line: 100, column: 1, scope: !5387)
!5568 = !{i64 2147598546, i64 2147598589, i64 2147598629}
!5569 = !DILocation(line: 101, column: 1, scope: !5387)
!5570 = !{i64 2147598757, i64 2147598800, i64 2147598840}
!5571 = !DILocation(line: 102, column: 1, scope: !5387)
!5572 = !{i64 2147598968, i64 2147599011, i64 2147599051}
!5573 = !DILocation(line: 103, column: 1, scope: !5387)
!5574 = !{i64 2147599167, i64 2147599210, i64 2147599250}
!5575 = !DILocation(line: 104, column: 1, scope: !5387)
!5576 = !{i64 2147599342, i64 2147599385, i64 2147599425}
!5577 = !DILocation(line: 105, column: 1, scope: !5387)
!5578 = !{i64 2147599526, i64 2147599569, i64 2147599609}
!5579 = !DILocation(line: 106, column: 1, scope: !5387)
!5580 = !{i64 2147599728, i64 2147599771, i64 2147599811}
!5581 = !DILocation(line: 107, column: 1, scope: !5387)
!5582 = !{i64 2147599909, i64 2147599952, i64 2147599992}
!5583 = !DILocation(line: 108, column: 1, scope: !5387)
!5584 = !{i64 2147600108, i64 2147600151, i64 2147600191}
!5585 = !DILocation(line: 109, column: 1, scope: !5387)
!5586 = !{i64 2147600313, i64 2147600356, i64 2147600396}
!5587 = !DILocation(line: 110, column: 1, scope: !5387)
!5588 = !{i64 2147600506, i64 2147600549, i64 2147600589}
!5589 = !DILocation(line: 111, column: 1, scope: !5387)
!5590 = !{i64 2147600672, i64 2147600715, i64 2147600755}
!5591 = !DILocation(line: 112, column: 1, scope: !5387)
!5592 = !{i64 2147600856, i64 2147600899, i64 2147600939}
!5593 = !DILocation(line: 113, column: 1, scope: !5387)
!5594 = !{i64 2147601046, i64 2147601089, i64 2147601129}
!5595 = !DILocation(line: 114, column: 1, scope: !5387)
!5596 = !{i64 2147601230, i64 2147601273, i64 2147601313}
!5597 = !DILocation(line: 115, column: 1, scope: !5387)
!5598 = !{i64 2147601444, i64 2147601487, i64 2147601527}
!5599 = !DILocation(line: 116, column: 1, scope: !5387)
!5600 = !{i64 2147601655, i64 2147601698, i64 2147601738}
!5601 = !DILocation(line: 117, column: 1, scope: !5387)
!5602 = !{i64 2147601878, i64 2147601921, i64 2147601961}
!5603 = !DILocation(line: 118, column: 1, scope: !5387)
!5604 = !{i64 2147602062, i64 2147602105, i64 2147602145}
!5605 = !DILocation(line: 119, column: 1, scope: !5387)
!5606 = !{i64 2147602276, i64 2147602319, i64 2147602359}
!5607 = !DILocation(line: 120, column: 1, scope: !5387)
!5608 = !{i64 2147602442, i64 2147602485, i64 2147602525}
!5609 = !DILocation(line: 121, column: 1, scope: !5387)
!5610 = !{i64 2147602623, i64 2147602666, i64 2147602706}
!5611 = !DILocation(line: 122, column: 1, scope: !5387)
!5612 = !{i64 2147602816, i64 2147602859, i64 2147602899}
!5613 = !DILocation(line: 123, column: 1, scope: !5387)
!5614 = !{i64 2147603042, i64 2147603085, i64 2147603125}
!5615 = !DILocation(line: 124, column: 1, scope: !5387)
!5616 = !{i64 2147603256, i64 2147603299, i64 2147603339}
!5617 = !DILocation(line: 125, column: 1, scope: !5387)
!5618 = !{i64 2147603482, i64 2147603525, i64 2147603565}
!5619 = !DILocation(line: 126, column: 1, scope: !5387)
!5620 = !{i64 2147603699, i64 2147603742, i64 2147603782}
!5621 = !DILocation(line: 127, column: 1, scope: !5387)
!5622 = !{i64 2147603976, i64 2147604019, i64 2147604059}
!5623 = !DILocation(line: 128, column: 1, scope: !5387)
!5624 = !{i64 2147604202, i64 2147604245, i64 2147604285}
!5625 = !DILocation(line: 129, column: 1, scope: !5387)
!5626 = !{i64 2147604410, i64 2147604453, i64 2147604493}
!5627 = !DILocation(line: 130, column: 1, scope: !5387)
!5628 = !{i64 2147604606, i64 2147604649, i64 2147604689}
!5629 = !DILocation(line: 131, column: 1, scope: !5387)
!5630 = !{i64 2147604871, i64 2147604914, i64 2147604954}
!5631 = !DILocation(line: 132, column: 1, scope: !5387)
!5632 = !{i64 2147609146, i64 2147609189, i64 2147609229}
!5633 = !DILocation(line: 133, column: 1, scope: !5387)
!5634 = !{i64 2147609321, i64 2147609364, i64 2147609404}
!5635 = !DILocation(line: 134, column: 1, scope: !5387)
!5636 = !{i64 2147609575, i64 2147609618, i64 2147609658}
!5637 = !DILocation(line: 135, column: 1, scope: !5387)
!5638 = !{i64 2147609774, i64 2147609817, i64 2147609857}
!5639 = !DILocation(line: 136, column: 1, scope: !5387)
!5640 = !{i64 2147610016, i64 2147610059, i64 2147610099}
!5641 = !DILocation(line: 137, column: 1, scope: !5387)
!5642 = !{i64 2147610179, i64 2147610222, i64 2147610262}
!5643 = !DILocation(line: 138, column: 1, scope: !5387)
!5644 = !{i64 2147610366, i64 2147610409, i64 2147610449}
!5645 = !DILocation(line: 139, column: 1, scope: !5387)
!5646 = !{i64 2147610574, i64 2147610617, i64 2147610657}
!5647 = !DILocation(line: 140, column: 1, scope: !5387)
!5648 = !{i64 2147610770, i64 2147610813, i64 2147610853}
!5649 = !DILocation(line: 141, column: 1, scope: !5387)
!5650 = !{i64 2147610963, i64 2147611006, i64 2147611046}
!5651 = !DILocation(line: 142, column: 1, scope: !5387)
!5652 = !{i64 2147611146, i64 2147611189, i64 2147611229}
!5653 = !DILocation(line: 143, column: 1, scope: !5387)
!5654 = !{i64 2147611360, i64 2147611403, i64 2147611443}
!5655 = !DILocation(line: 144, column: 1, scope: !5387)
!5656 = !{i64 2147611571, i64 2147611614, i64 2147611654}
!5657 = !DILocation(line: 145, column: 1, scope: !5387)
!5658 = !{i64 2147611791, i64 2147611834, i64 2147611874}
!5659 = !DILocation(line: 146, column: 1, scope: !5387)
!5660 = !{i64 2147611998, i64 2147612041, i64 2147612081}
!5661 = !DILocation(line: 147, column: 1, scope: !5387)
!5662 = !{i64 2147612271, i64 2147612314, i64 2147612354}
!5663 = !DILocation(line: 148, column: 1, scope: !5387)
!5664 = !{i64 2147612519, i64 2147612562, i64 2147612602}
!5665 = !DILocation(line: 149, column: 1, scope: !5387)
!5666 = !{i64 2147612718, i64 2147612761, i64 2147612801}
!5667 = !DILocation(line: 150, column: 1, scope: !5387)
!5668 = !{i64 2147612953, i64 2147612996, i64 2147613036}
!5669 = !DILocation(line: 151, column: 1, scope: !5387)
!5670 = !{i64 2147613203, i64 2147613246, i64 2147613286}
!5671 = !DILocation(line: 152, column: 1, scope: !5387)
!5672 = !{i64 2147613405, i64 2147613448, i64 2147613488}
!5673 = !DILocation(line: 153, column: 1, scope: !5387)
!5674 = !{i64 2147613628, i64 2147613671, i64 2147613711}
!5675 = !DILocation(line: 154, column: 1, scope: !5387)
!5676 = !{i64 2147613842, i64 2147613885, i64 2147613925}
!5677 = !DILocation(line: 155, column: 1, scope: !5387)
!5678 = !{i64 2147614086, i64 2147614129, i64 2147614169}
!5679 = !DILocation(line: 156, column: 1, scope: !5387)
!5680 = !{i64 2147614315, i64 2147614358, i64 2147614398}
!5681 = !DILocation(line: 157, column: 1, scope: !5387)
!5682 = !{i64 2147614544, i64 2147614587, i64 2147614627}
!5683 = !DILocation(line: 158, column: 1, scope: !5387)
!5684 = !{i64 2147614752, i64 2147614795, i64 2147614835}
!5685 = !DILocation(line: 159, column: 1, scope: !5387)
!5686 = !{i64 2147614990, i64 2147615033, i64 2147615073}
!5687 = !DILocation(line: 160, column: 1, scope: !5387)
!5688 = !{i64 2147615216, i64 2147615259, i64 2147615299}
!5689 = !DILocation(line: 161, column: 1, scope: !5387)
!5690 = !{i64 2147615475, i64 2147615518, i64 2147615558}
!5691 = !DILocation(line: 162, column: 1, scope: !5387)
!5692 = !{i64 2147615695, i64 2147615738, i64 2147615778}
!5693 = !DILocation(line: 163, column: 1, scope: !5387)
!5694 = !{i64 2147615927, i64 2147615970, i64 2147616010}
!5695 = !DILocation(line: 164, column: 1, scope: !5387)
!5696 = !{i64 2147616168, i64 2147616211, i64 2147616251}
!5697 = !DILocation(line: 165, column: 1, scope: !5387)
!5698 = !{i64 2147616409, i64 2147616452, i64 2147616492}
!5699 = !DILocation(line: 166, column: 1, scope: !5387)
!5700 = !{i64 2147616632, i64 2147616675, i64 2147616715}
!5701 = !DILocation(line: 167, column: 1, scope: !5387)
!5702 = !{i64 2147616849, i64 2147616892, i64 2147616932}
!5703 = !DILocation(line: 168, column: 1, scope: !5387)
!5704 = !{i64 2147617090, i64 2147617133, i64 2147617173}
!5705 = !DILocation(line: 169, column: 1, scope: !5387)
!5706 = !{i64 2147617277, i64 2147617320, i64 2147617360}
!5707 = !DILocation(line: 170, column: 1, scope: !5387)
!5708 = !{i64 2147617464, i64 2147617507, i64 2147617547}
!5709 = !DILocation(line: 171, column: 1, scope: !5387)
!5710 = !{i64 2147617627, i64 2147617670, i64 2147617710}
!5711 = !DILocation(line: 172, column: 1, scope: !5387)
!5712 = !{i64 2147621893, i64 2147621936, i64 2147621976}
!5713 = !DILocation(line: 173, column: 1, scope: !5387)
!5714 = !{i64 2147622086, i64 2147622129, i64 2147622169}
!5715 = !DILocation(line: 174, column: 1, scope: !5387)
!5716 = !{i64 2147622345, i64 2147622388, i64 2147622428}
!5717 = !DILocation(line: 175, column: 1, scope: !5387)
!5718 = !{i64 2147622568, i64 2147622611, i64 2147622651}
!5719 = !DILocation(line: 176, column: 1, scope: !5387)
!5720 = !{i64 2147622797, i64 2147622840, i64 2147622880}
!5721 = !DILocation(line: 177, column: 1, scope: !5387)
!5722 = !{i64 2147623011, i64 2147623054, i64 2147623094}
!5723 = !DILocation(line: 178, column: 1, scope: !5387)
!5724 = !{i64 2147623213, i64 2147623256, i64 2147623296}
!5725 = !DILocation(line: 179, column: 1, scope: !5387)
!5726 = !{i64 2147623409, i64 2147623452, i64 2147623492}
!5727 = !DILocation(line: 180, column: 1, scope: !5387)
!5728 = !{i64 2147623621, i64 2147623664, i64 2147623704}
!5729 = !DILocation(line: 181, column: 1, scope: !5387)
!5730 = !{i64 2147623842, i64 2147623885, i64 2147623925}
!5731 = !DILocation(line: 182, column: 1, scope: !5387)
!5732 = !{i64 2147624056, i64 2147624099, i64 2147624139}
!5733 = !DILocation(line: 183, column: 1, scope: !5387)
!5734 = !{i64 2147624246, i64 2147624289, i64 2147624329}
!5735 = !DILocation(line: 184, column: 1, scope: !5387)
!5736 = !{i64 2147624445, i64 2147624488, i64 2147624528}
!5737 = !DILocation(line: 185, column: 1, scope: !5387)
!5738 = !{i64 2147624650, i64 2147624693, i64 2147624733}
!5739 = !DILocation(line: 186, column: 1, scope: !5387)
!5740 = !{i64 2147624870, i64 2147624913, i64 2147624953}
!5741 = !DILocation(line: 187, column: 1, scope: !5387)
!5742 = !{i64 2147625072, i64 2147625115, i64 2147625155}
!5743 = !DILocation(line: 188, column: 1, scope: !5387)
!5744 = !{i64 2147625271, i64 2147625314, i64 2147625354}
!5745 = !DILocation(line: 189, column: 1, scope: !5387)
!5746 = !{i64 2147625476, i64 2147625519, i64 2147625559}
!5747 = !DILocation(line: 190, column: 1, scope: !5387)
!5748 = !{i64 2147625645, i64 2147625688, i64 2147625728}
!5749 = !DILocation(line: 191, column: 1, scope: !5387)
!5750 = !{i64 2147625829, i64 2147625872, i64 2147625912}
!5751 = !DILocation(line: 192, column: 1, scope: !5387)
!5752 = !{i64 2147626013, i64 2147626056, i64 2147626096}
!5753 = !DILocation(line: 193, column: 1, scope: !5387)
!5754 = !{i64 2147626200, i64 2147626243, i64 2147626283}
!5755 = !DILocation(line: 194, column: 1, scope: !5387)
!5756 = !{i64 2147626384, i64 2147626427, i64 2147626467}
!5757 = !DILocation(line: 195, column: 1, scope: !5387)
!5758 = !{i64 2147626571, i64 2147626614, i64 2147626654}
!5759 = !DILocation(line: 196, column: 1, scope: !5387)
!5760 = !{i64 2147626783, i64 2147626826, i64 2147626866}
!5761 = !DILocation(line: 197, column: 1, scope: !5387)
!5762 = !{i64 2147627021, i64 2147627064, i64 2147627104}
!5763 = !DILocation(line: 198, column: 1, scope: !5387)
!5764 = !{i64 2147627251, i64 2147627294, i64 2147627334}
!5765 = !DILocation(line: 199, column: 1, scope: !5387)
!5766 = !{i64 2147627480, i64 2147627523, i64 2147627563}
!5767 = !DILocation(line: 200, column: 1, scope: !5387)
!5768 = !{i64 2147627667, i64 2147627710, i64 2147627750}
!5769 = !DILocation(line: 201, column: 1, scope: !5387)
!5770 = !{i64 2147627863, i64 2147627906, i64 2147627946}
!5771 = !DILocation(line: 202, column: 1, scope: !5387)
!5772 = !{i64 2147628071, i64 2147628114, i64 2147628154}
!5773 = !DILocation(line: 203, column: 1, scope: !5387)
!5774 = !{i64 2147628283, i64 2147628326, i64 2147628366}
!5775 = !DILocation(line: 204, column: 1, scope: !5387)
!5776 = !{i64 2147628482, i64 2147628525, i64 2147628565}
!5777 = !DILocation(line: 205, column: 1, scope: !5387)
!5778 = !{i64 2147628720, i64 2147628763, i64 2147628803}
!5779 = !DILocation(line: 206, column: 1, scope: !5387)
!5780 = !{i64 2147628916, i64 2147628959, i64 2147628999}
!5781 = !DILocation(line: 207, column: 1, scope: !5387)
!5782 = !{i64 2147629118, i64 2147629161, i64 2147629201}
!5783 = !DILocation(line: 208, column: 1, scope: !5387)
!5784 = !{i64 2147629311, i64 2147629354, i64 2147629394}
!5785 = !DILocation(line: 209, column: 1, scope: !5387)
!5786 = !{i64 2147629545, i64 2147629588, i64 2147629628}
!5787 = !DILocation(line: 210, column: 1, scope: !5387)
!5788 = !{i64 2147629708, i64 2147629751, i64 2147629791}
!5789 = !DILocation(line: 211, column: 1, scope: !5387)
!5790 = !{i64 2147629947, i64 2147629990, i64 2147630030}
!5791 = !DILocation(line: 212, column: 1, scope: !5387)
!5792 = !{i64 2147630186, i64 2147630229, i64 2147630269}
!5793 = !DILocation(line: 213, column: 1, scope: !5387)
!5794 = !{i64 2147630422, i64 2147630465, i64 2147630505}
!5795 = !DILocation(line: 214, column: 1, scope: !5387)
!5796 = !{i64 2147630652, i64 2147630695, i64 2147630735}
!5797 = !DILocation(line: 215, column: 1, scope: !5387)
!5798 = !{i64 2147630839, i64 2147630882, i64 2147630922}
!5799 = !DILocation(line: 216, column: 1, scope: !5387)
!5800 = !{i64 2147635099, i64 2147635142, i64 2147635182}
!5801 = !DILocation(line: 217, column: 1, scope: !5387)
!5802 = !{i64 2147635370, i64 2147635413, i64 2147635453}
!5803 = !DILocation(line: 218, column: 1, scope: !5387)
!5804 = !{i64 2147635545, i64 2147635588, i64 2147635628}
!5805 = !DILocation(line: 219, column: 1, scope: !5387)
!5806 = !{i64 2147635779, i64 2147635822, i64 2147635862}
!5807 = !DILocation(line: 220, column: 1, scope: !5387)
!5808 = !{i64 2147635987, i64 2147636030, i64 2147636070}
!5809 = !DILocation(line: 221, column: 1, scope: !5387)
!5810 = !{i64 2147636205, i64 2147636248, i64 2147636288}
!5811 = !DILocation(line: 222, column: 1, scope: !5387)
!5812 = !{i64 2147636395, i64 2147636438, i64 2147636478}
!5813 = !DILocation(line: 223, column: 1, scope: !5387)
!5814 = !{i64 2147636627, i64 2147636670, i64 2147636710}
!5815 = !DILocation(line: 224, column: 1, scope: !5387)
!5816 = !{i64 2147636847, i64 2147636890, i64 2147636930}
!5817 = !DILocation(line: 225, column: 1, scope: !5387)
!5818 = !{i64 2147637043, i64 2147637086, i64 2147637126}
!5819 = !DILocation(line: 226, column: 1, scope: !5387)
!5820 = !{i64 2147637249, i64 2147637292, i64 2147637332}
!5821 = !DILocation(line: 227, column: 1, scope: !5387)
!5822 = !{i64 2147637454, i64 2147637497, i64 2147637537}
!5823 = !DILocation(line: 228, column: 1, scope: !5387)
!5824 = !{i64 2147637680, i64 2147637723, i64 2147637763}
!5825 = !DILocation(line: 229, column: 1, scope: !5387)
!5826 = !{i64 2147637888, i64 2147637931, i64 2147637971}
!5827 = !DILocation(line: 230, column: 1, scope: !5387)
!5828 = !{i64 2147638084, i64 2147638127, i64 2147638167}
!5829 = !DILocation(line: 231, column: 1, scope: !5387)
!5830 = !{i64 2147638316, i64 2147638359, i64 2147638399}
!5831 = !DILocation(line: 232, column: 1, scope: !5387)
!5832 = !{i64 2147638500, i64 2147638543, i64 2147638583}
!5833 = !DILocation(line: 233, column: 1, scope: !5387)
!5834 = !{i64 2147638709, i64 2147638752, i64 2147638792}
!5835 = !DILocation(line: 234, column: 1, scope: !5387)
!5836 = !{i64 2147638917, i64 2147638960, i64 2147639000}
!5837 = !DILocation(line: 235, column: 1, scope: !5387)
!5838 = !{i64 2147639113, i64 2147639156, i64 2147639196}
!5839 = !DILocation(line: 236, column: 1, scope: !5387)
!5840 = !{i64 2147639297, i64 2147639340, i64 2147639380}
!5841 = !DILocation(line: 237, column: 1, scope: !5387)
!5842 = !{i64 2147639523, i64 2147639566, i64 2147639606}
!5843 = !DILocation(line: 238, column: 1, scope: !5387)
!5844 = !{i64 2147639749, i64 2147639792, i64 2147639832}
!5845 = !DILocation(line: 239, column: 1, scope: !5387)
!5846 = !{i64 2147639975, i64 2147640018, i64 2147640058}
!5847 = !DILocation(line: 240, column: 1, scope: !5387)
!5848 = !{i64 2147640201, i64 2147640244, i64 2147640284}
!5849 = !DILocation(line: 241, column: 1, scope: !5387)
!5850 = !{i64 2147640427, i64 2147640470, i64 2147640510}
!5851 = !DILocation(line: 242, column: 1, scope: !5387)
!5852 = !{i64 2147640659, i64 2147640702, i64 2147640742}
!5853 = !DILocation(line: 243, column: 1, scope: !5387)
!5854 = !{i64 2147640897, i64 2147640940, i64 2147640980}
!5855 = !DILocation(line: 244, column: 1, scope: !5387)
!5856 = !{i64 2147641117, i64 2147641160, i64 2147641200}
!5857 = !DILocation(line: 245, column: 1, scope: !5387)
!5858 = !{i64 2147641361, i64 2147641404, i64 2147641444}
!5859 = !DILocation(line: 246, column: 1, scope: !5387)
!5860 = !{i64 2147641602, i64 2147641645, i64 2147641685}
!5861 = !DILocation(line: 247, column: 1, scope: !5387)
!5862 = !{i64 2147641837, i64 2147641880, i64 2147641920}
!5863 = !DILocation(line: 248, column: 1, scope: !5387)
!5864 = !{i64 2147642069, i64 2147642112, i64 2147642152}
!5865 = !DILocation(line: 249, column: 1, scope: !5387)
!5866 = !{i64 2147642271, i64 2147642314, i64 2147642354}
!5867 = !DILocation(line: 250, column: 1, scope: !5387)
!5868 = !{i64 2147642521, i64 2147642564, i64 2147642604}
!5869 = !DILocation(line: 251, column: 1, scope: !5387)
!5870 = !{i64 2147642759, i64 2147642802, i64 2147642842}
!5871 = !DILocation(line: 252, column: 1, scope: !5387)
!5872 = !{i64 2147642967, i64 2147643010, i64 2147643050}
!5873 = !DILocation(line: 253, column: 1, scope: !5387)
!5874 = !{i64 2147643163, i64 2147643206, i64 2147643246}
!5875 = !DILocation(line: 254, column: 1, scope: !5387)
!5876 = !{i64 2147643347, i64 2147643390, i64 2147643430}
!5877 = !DILocation(line: 255, column: 1, scope: !5387)
!5878 = !{i64 2147643564, i64 2147643607, i64 2147643647}
!5879 = !DILocation(line: 256, column: 1, scope: !5387)
!5880 = !{i64 2147643769, i64 2147643812, i64 2147643852}
!5881 = !DILocation(line: 257, column: 1, scope: !5387)
!5882 = !{i64 2147648065, i64 2147648108, i64 2147648148}
!5883 = !DILocation(line: 258, column: 1, scope: !5387)
!5884 = !{i64 2147648288, i64 2147648331, i64 2147648371}
!5885 = !DILocation(line: 259, column: 1, scope: !5387)
!5886 = !{i64 2147648512, i64 2147648555, i64 2147648595}
!5887 = !DILocation(line: 260, column: 1, scope: !5387)
!5888 = !{i64 2147648750, i64 2147648793, i64 2147648833}
!5889 = !DILocation(line: 261, column: 1, scope: !5387)
!5890 = !{i64 2147648988, i64 2147649031, i64 2147649071}
!5891 = !DILocation(line: 262, column: 1, scope: !5387)
!5892 = !{i64 2147649205, i64 2147649248, i64 2147649288}
!5893 = !DILocation(line: 263, column: 1, scope: !5387)
!5894 = !{i64 2147649410, i64 2147649453, i64 2147649493}
!5895 = !DILocation(line: 264, column: 1, scope: !5387)
!5896 = !{i64 2147649603, i64 2147649646, i64 2147649686}
!5897 = !DILocation(line: 265, column: 1, scope: !5387)
!5898 = !{i64 2147649856, i64 2147649899, i64 2147649939}
!5899 = !DILocation(line: 266, column: 1, scope: !5387)
!5900 = !{i64 2147650064, i64 2147650107, i64 2147650147}
!5901 = !DILocation(line: 267, column: 1, scope: !5387)
!5902 = !{i64 2147650260, i64 2147650303, i64 2147650343}
!5903 = !DILocation(line: 268, column: 1, scope: !5387)
!5904 = !{i64 2147650474, i64 2147650517, i64 2147650557}
!5905 = !DILocation(line: 269, column: 1, scope: !5387)
!5906 = !{i64 2147650682, i64 2147650725, i64 2147650765}
!5907 = !DILocation(line: 270, column: 1, scope: !5387)
!5908 = !{i64 2147650872, i64 2147650915, i64 2147650955}
!5909 = !DILocation(line: 271, column: 1, scope: !5387)
!5910 = !{i64 2147651086, i64 2147651129, i64 2147651169}
!5911 = !DILocation(line: 272, column: 1, scope: !5387)
!5912 = !{i64 2147651348, i64 2147651391, i64 2147651431}
!5913 = !DILocation(line: 273, column: 1, scope: !5387)
!5914 = !{i64 2147651559, i64 2147651602, i64 2147651642}
!5915 = !DILocation(line: 274, column: 1, scope: !5387)
!5916 = !{i64 2147651803, i64 2147651846, i64 2147651886}
!5917 = !DILocation(line: 275, column: 1, scope: !5387)
!5918 = !{i64 2147652014, i64 2147652057, i64 2147652097}
!5919 = !DILocation(line: 276, column: 1, scope: !5387)
!5920 = !{i64 2147652243, i64 2147652286, i64 2147652326}
!5921 = !DILocation(line: 277, column: 1, scope: !5387)
!5922 = !{i64 2147652508, i64 2147652551, i64 2147652591}
!5923 = !DILocation(line: 278, column: 1, scope: !5387)
!5924 = !{i64 2147652713, i64 2147652756, i64 2147652796}
!5925 = !DILocation(line: 279, column: 1, scope: !5387)
!5926 = !{i64 2147652909, i64 2147652952, i64 2147652992}
!5927 = !DILocation(line: 280, column: 1, scope: !5387)
!5928 = !{i64 2147653132, i64 2147653175, i64 2147653215}
!5929 = !DILocation(line: 281, column: 1, scope: !5387)
!5930 = !{i64 2147653295, i64 2147653338, i64 2147653378}
!5931 = !DILocation(line: 282, column: 1, scope: !5387)
!5932 = !{i64 2147653500, i64 2147653543, i64 2147653583}
!5933 = !DILocation(line: 283, column: 1, scope: !5387)
!5934 = !{i64 2147653720, i64 2147653763, i64 2147653803}
!5935 = !DILocation(line: 284, column: 1, scope: !5387)
!5936 = !{i64 2147653934, i64 2147653977, i64 2147654017}
!5937 = !DILocation(line: 285, column: 1, scope: !5387)
!5938 = !{i64 2147654178, i64 2147654221, i64 2147654261}
!5939 = !DILocation(line: 286, column: 1, scope: !5387)
!5940 = !{i64 2147654410, i64 2147654453, i64 2147654493}
!5941 = !DILocation(line: 287, column: 1, scope: !5387)
!5942 = !{i64 2147654624, i64 2147654667, i64 2147654707}
!5943 = !DILocation(line: 288, column: 1, scope: !5387)
!5944 = !{i64 2147654835, i64 2147654878, i64 2147654918}
!5945 = !DILocation(line: 289, column: 1, scope: !5387)
!5946 = !{i64 2147655028, i64 2147655071, i64 2147655111}
!5947 = !DILocation(line: 290, column: 1, scope: !5387)
!5948 = !{i64 2147655227, i64 2147655270, i64 2147655310}
!5949 = !DILocation(line: 291, column: 1, scope: !5387)
!5950 = !{i64 2147655399, i64 2147655442, i64 2147655482}
!5951 = !DILocation(line: 292, column: 1, scope: !5387)
!5952 = !{i64 2147655592, i64 2147655635, i64 2147655675}
!5953 = !DILocation(line: 293, column: 1, scope: !5387)
!5954 = !{i64 2147655764, i64 2147655807, i64 2147655847}
!5955 = !DILocation(line: 294, column: 1, scope: !5387)
!5956 = !{i64 2147655954, i64 2147655997, i64 2147656037}
!5957 = !DILocation(line: 295, column: 1, scope: !5387)
!5958 = !{i64 2147656147, i64 2147656190, i64 2147656230}
!5959 = !DILocation(line: 296, column: 1, scope: !5387)
!5960 = !{i64 2147656343, i64 2147656386, i64 2147656426}
!5961 = !DILocation(line: 297, column: 1, scope: !5387)
!5962 = !{i64 2147656506, i64 2147656549, i64 2147656589}
!5963 = !DILocation(line: 298, column: 1, scope: !5387)
!5964 = !{i64 2147656708, i64 2147656751, i64 2147656791}
!5965 = !DILocation(line: 299, column: 1, scope: !5387)
!5966 = !{i64 2147660980, i64 2147661023, i64 2147661063}
!5967 = !DILocation(line: 300, column: 1, scope: !5387)
!5968 = !{i64 2147661185, i64 2147661228, i64 2147661268}
!5969 = !DILocation(line: 301, column: 1, scope: !5387)
!5970 = !{i64 2147661393, i64 2147661436, i64 2147661476}
!5971 = !DILocation(line: 302, column: 1, scope: !5387)
!5972 = !{i64 2147661586, i64 2147661629, i64 2147661669}
!5973 = !DILocation(line: 303, column: 1, scope: !5387)
!5974 = !{i64 2147661824, i64 2147661867, i64 2147661907}
!5975 = !DILocation(line: 304, column: 1, scope: !5387)
!5976 = !{i64 2147662011, i64 2147662054, i64 2147662094}
!5977 = !DILocation(line: 305, column: 1, scope: !5387)
!5978 = !{i64 2147662180, i64 2147662223, i64 2147662263}
!5979 = !DILocation(line: 306, column: 1, scope: !5387)
!5980 = !{i64 2147662373, i64 2147662416, i64 2147662456}
!5981 = !DILocation(line: 307, column: 1, scope: !5387)
!5982 = !{i64 2147662578, i64 2147662621, i64 2147662661}
!5983 = !DILocation(line: 308, column: 1, scope: !5387)
!5984 = !{i64 2147662789, i64 2147662832, i64 2147662872}
!5985 = !DILocation(line: 309, column: 1, scope: !5387)
!5986 = !{i64 2147663012, i64 2147663055, i64 2147663095}
!5987 = !DILocation(line: 310, column: 1, scope: !5387)
!5988 = !{i64 2147663226, i64 2147663269, i64 2147663309}
!5989 = !DILocation(line: 311, column: 1, scope: !5387)
!5990 = !{i64 2147663444, i64 2147663487, i64 2147663527}
!5991 = !DILocation(line: 312, column: 1, scope: !5387)
!5992 = !{i64 2147663658, i64 2147663701, i64 2147663741}
!5993 = !DILocation(line: 313, column: 1, scope: !5387)
!5994 = !{i64 2147663872, i64 2147663915, i64 2147663955}
!5995 = !DILocation(line: 314, column: 1, scope: !5387)
!5996 = !{i64 2147664089, i64 2147664132, i64 2147664172}
!5997 = !DILocation(line: 315, column: 1, scope: !5387)
!5998 = !{i64 2147664303, i64 2147664346, i64 2147664386}
!5999 = !DILocation(line: 316, column: 1, scope: !5387)
!6000 = !{i64 2147664544, i64 2147664587, i64 2147664627}
!6001 = !DILocation(line: 317, column: 1, scope: !5387)
!6002 = !{i64 2147664710, i64 2147664753, i64 2147664793}
!6003 = !DILocation(line: 318, column: 1, scope: !5387)
!6004 = !{i64 2147664937, i64 2147664980, i64 2147665020}
!6005 = !DILocation(line: 319, column: 1, scope: !5387)
!6006 = !{i64 2147665154, i64 2147665197, i64 2147665237}
!6007 = !DILocation(line: 320, column: 1, scope: !5387)
!6008 = !{i64 2147665380, i64 2147665423, i64 2147665463}
!6009 = !DILocation(line: 321, column: 1, scope: !5387)
!6010 = !{i64 2147665585, i64 2147665628, i64 2147665668}
!6011 = !DILocation(line: 322, column: 1, scope: !5387)
!6012 = !{i64 2147665802, i64 2147665845, i64 2147665885}
!6013 = !DILocation(line: 323, column: 1, scope: !5387)
!6014 = !{i64 2147666094, i64 2147666137, i64 2147666177}
!6015 = !DILocation(line: 324, column: 1, scope: !5387)
!6016 = !{i64 2147666326, i64 2147666369, i64 2147666409}
!6017 = !DILocation(line: 325, column: 1, scope: !5387)
!6018 = !{i64 2147666543, i64 2147666586, i64 2147666626}
!6019 = !DILocation(line: 326, column: 1, scope: !5387)
!6020 = !{i64 2147666750, i64 2147666793, i64 2147666833}
!6021 = !DILocation(line: 327, column: 1, scope: !5387)
!6022 = !{i64 2147666951, i64 2147666994, i64 2147667034}
!6023 = !DILocation(line: 328, column: 1, scope: !5387)
!6024 = !{i64 2147667183, i64 2147667226, i64 2147667266}
!6025 = !DILocation(line: 329, column: 1, scope: !5387)
!6026 = !{i64 2147667391, i64 2147667434, i64 2147667474}
!6027 = !DILocation(line: 330, column: 1, scope: !5387)
!6028 = !{i64 2147667581, i64 2147667624, i64 2147667664}
!6029 = !DILocation(line: 331, column: 1, scope: !5387)
!6030 = !{i64 2147667807, i64 2147667850, i64 2147667890}
!6031 = !DILocation(line: 332, column: 1, scope: !5387)
!6032 = !{i64 2147667996, i64 2147668039, i64 2147668079}
!6033 = !DILocation(line: 333, column: 1, scope: !5387)
!6034 = !{i64 2147668267, i64 2147668310, i64 2147668350}
!6035 = !DILocation(line: 334, column: 1, scope: !5387)
!6036 = !{i64 2147668487, i64 2147668530, i64 2147668570}
!6037 = !DILocation(line: 335, column: 1, scope: !5387)
!6038 = !{i64 2147668740, i64 2147668783, i64 2147668823}
!6039 = !DILocation(line: 336, column: 1, scope: !5387)
!6040 = !{i64 2147668948, i64 2147668991, i64 2147669031}
!6041 = !DILocation(line: 337, column: 1, scope: !5387)
!6042 = !{i64 2147669180, i64 2147669223, i64 2147669263}
!6043 = !DILocation(line: 338, column: 1, scope: !5387)
!6044 = !{i64 2147669391, i64 2147669434, i64 2147669474}
!6045 = !DILocation(line: 339, column: 1, scope: !5387)
!6046 = !{i64 2147669581, i64 2147669624, i64 2147669664}
!6047 = !DILocation(line: 340, column: 1, scope: !5387)
!6048 = !{i64 2147673856, i64 2147673899, i64 2147673939}
!6049 = !DILocation(line: 341, column: 1, scope: !5387)
!6050 = !{i64 2147674055, i64 2147674098, i64 2147674138}
!6051 = !DILocation(line: 342, column: 1, scope: !5387)
!6052 = !{i64 2147674242, i64 2147674285, i64 2147674325}
!6053 = !DILocation(line: 343, column: 1, scope: !5387)
!6054 = !{i64 2147674438, i64 2147674481, i64 2147674521}
!6055 = !DILocation(line: 344, column: 1, scope: !5387)
!6056 = !{i64 2147674646, i64 2147674689, i64 2147674729}
!6057 = !DILocation(line: 345, column: 1, scope: !5387)
!6058 = !{i64 2147674875, i64 2147674918, i64 2147674958}
!6059 = !DILocation(line: 346, column: 1, scope: !5387)
!6060 = !{i64 2147675077, i64 2147675120, i64 2147675160}
!6061 = !DILocation(line: 347, column: 1, scope: !5387)
!6062 = !{i64 2147675276, i64 2147675319, i64 2147675359}
!6063 = !DILocation(line: 348, column: 1, scope: !5387)
!6064 = !{i64 2147675493, i64 2147675536, i64 2147675576}
!6065 = !DILocation(line: 350, column: 1, scope: !5387)
!6066 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !235, file: !235, line: 30, type: !242, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !6067)
!6067 = !{!6068, !6069}
!6068 = !DILocalVariable(name: "arg", arg: 1, scope: !6066, file: !235, line: 30, type: !244)
!6069 = !DILocalVariable(name: "key", scope: !6066, file: !235, line: 32, type: !152)
!6070 = !DILocation(line: 0, scope: !6066)
!6071 = !DILocation(line: 37, column: 2, scope: !6066)
!6072 = !DILocation(line: 38, column: 2, scope: !6066)
!6073 = !DILocation(line: 55, column: 2, scope: !6074, inlinedAt: !6081)
!6074 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6075, file: !6075, line: 42, type: !6076, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !6078)
!6075 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6076 = !DISubroutineType(types: !6077)
!6077 = !{!32}
!6078 = !{!6079, !6080}
!6079 = !DILocalVariable(name: "key", scope: !6074, file: !6075, line: 44, type: !32)
!6080 = !DILocalVariable(name: "tmp", scope: !6074, file: !6075, line: 53, type: !32)
!6081 = distinct !DILocation(line: 40, column: 8, scope: !6066)
!6082 = !{i64 2510684}
!6083 = !DILocation(line: 0, scope: !6074, inlinedAt: !6081)
!6084 = !DILocalVariable(name: "key", arg: 1, scope: !6085, file: !6075, line: 84, type: !32)
!6085 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6075, file: !6075, line: 84, type: !6086, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !6088)
!6086 = !DISubroutineType(types: !6087)
!6087 = !{null, !32}
!6088 = !{!6084}
!6089 = !DILocation(line: 0, scope: !6085, inlinedAt: !6090)
!6090 = distinct !DILocation(line: 47, column: 2, scope: !6066)
!6091 = !DILocation(line: 95, column: 2, scope: !6085, inlinedAt: !6090)
!6092 = !{i64 2511501}
!6093 = !DILocation(line: 51, column: 18, scope: !6066)
!6094 = !DILocation(line: 53, column: 2, scope: !6066)
!6095 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !6096, file: !6096, line: 1609, type: !3227, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !2296)
!6096 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6097 = !DILocation(line: 1611, column: 3, scope: !6095)
!6098 = !DILocation(line: 1612, column: 1, scope: !6095)
!6099 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !6096, file: !6096, line: 1629, type: !3227, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !2296)
!6100 = !DILocation(line: 1631, column: 3, scope: !6099)
!6101 = !DILocation(line: 1632, column: 1, scope: !6099)
!6102 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !271, file: !271, line: 26, type: !277, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !268, retainedNodes: !6103)
!6103 = !{!6104}
!6104 = !DILocalVariable(name: "dev", arg: 1, scope: !6102, file: !271, line: 26, type: !279)
!6105 = !DILocation(line: 0, scope: !6102)
!6106 = !DILocation(line: 68, column: 2, scope: !6102)
!6107 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !6108, file: !6108, line: 14, type: !4340, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !6109)
!6108 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6109 = !{!6110, !6111}
!6110 = !DILocalVariable(name: "fmt", arg: 1, scope: !6107, file: !6108, line: 14, type: !118)
!6111 = !DILocalVariable(name: "ap", scope: !6107, file: !6108, line: 16, type: !6112)
!6112 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3350, line: 99, baseType: !6113)
!6113 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3350, line: 40, baseType: !6114)
!6114 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !6108, baseType: !6115)
!6115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !6116)
!6116 = !{!6117}
!6117 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !6115, file: !6108, line: 16, baseType: !106, size: 32)
!6118 = !DILocation(line: 0, scope: !6107)
!6119 = !DILocation(line: 16, column: 2, scope: !6107)
!6120 = !DILocation(line: 16, column: 10, scope: !6107)
!6121 = !DILocation(line: 18, column: 2, scope: !6107)
!6122 = !DILocation(line: 19, column: 2, scope: !6107)
!6123 = !DILocation(line: 20, column: 2, scope: !6107)
!6124 = !DILocation(line: 21, column: 1, scope: !6107)
!6125 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !6108, file: !6108, line: 23, type: !6126, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !6128)
!6126 = !DISubroutineType(types: !6127)
!6127 = !{null, !118, !6112}
!6128 = !{!6129, !6130}
!6129 = !DILocalVariable(name: "fmt", arg: 1, scope: !6125, file: !6108, line: 23, type: !118)
!6130 = !DILocalVariable(name: "ap", arg: 2, scope: !6125, file: !6108, line: 23, type: !6112)
!6131 = !DILocation(line: 0, scope: !6125)
!6132 = !DILocation(line: 25, column: 2, scope: !6125)
!6133 = !DILocation(line: 26, column: 1, scope: !6125)
!6134 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !6108, file: !6108, line: 52, type: !6135, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !6137)
!6135 = !DISubroutineType(types: !6136)
!6136 = !{null, !107, !13, !185}
!6137 = !{!6138, !6139, !6140, !6141}
!6138 = !DILocalVariable(name: "level", arg: 1, scope: !6134, file: !6108, line: 52, type: !107)
!6139 = !DILocalVariable(name: "data", arg: 2, scope: !6134, file: !6108, line: 52, type: !13)
!6140 = !DILocalVariable(name: "size", arg: 3, scope: !6134, file: !6108, line: 52, type: !185)
!6141 = !DILocalVariable(name: "data_buffer", scope: !6134, file: !6108, line: 54, type: !118)
!6142 = !DILocation(line: 0, scope: !6134)
!6143 = !DILocation(line: 55, column: 14, scope: !6134)
!6144 = !DILocation(line: 55, column: 2, scope: !6134)
!6145 = !DILocation(line: 56, column: 3, scope: !6146)
!6146 = distinct !DILexicalBlock(scope: !6134, file: !6108, line: 55, column: 20)
!6147 = !DILocation(line: 57, column: 3, scope: !6146)
!6148 = !DILocation(line: 59, column: 7, scope: !6146)
!6149 = distinct !{!6149, !6144, !6150}
!6150 = !DILocation(line: 65, column: 2, scope: !6134)
!6151 = !DILocation(line: 66, column: 1, scope: !6134)
!6152 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !6153, file: !6153, line: 175, type: !6154, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !6156)
!6153 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6154 = !DISubroutineType(types: !6155)
!6155 = !{!120, !107}
!6156 = !{!6157}
!6157 = !DILocalVariable(name: "level", arg: 1, scope: !6152, file: !6153, line: 175, type: !107)
!6158 = !DILocation(line: 0, scope: !6152)
!6159 = !DILocation(line: 177, column: 2, scope: !6152)
!6160 = !DILocation(line: 189, column: 1, scope: !6152)
!6161 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !6108, file: !6108, line: 28, type: !6162, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !6164)
!6162 = !DISubroutineType(types: !6163)
!6163 = !{null, !118, !185}
!6164 = !{!6165, !6166, !6167, !6169, !6171}
!6165 = !DILocalVariable(name: "data", arg: 1, scope: !6161, file: !6108, line: 28, type: !118)
!6166 = !DILocalVariable(name: "length", arg: 2, scope: !6161, file: !6108, line: 28, type: !185)
!6167 = !DILocalVariable(name: "i", scope: !6168, file: !6108, line: 30, type: !185)
!6168 = distinct !DILexicalBlock(scope: !6161, file: !6108, line: 30, column: 2)
!6169 = !DILocalVariable(name: "i", scope: !6170, file: !6108, line: 40, type: !185)
!6170 = distinct !DILexicalBlock(scope: !6161, file: !6108, line: 40, column: 2)
!6171 = !DILocalVariable(name: "c", scope: !6172, file: !6108, line: 42, type: !196)
!6172 = distinct !DILexicalBlock(scope: !6173, file: !6108, line: 41, column: 19)
!6173 = distinct !DILexicalBlock(scope: !6174, file: !6108, line: 41, column: 7)
!6174 = distinct !DILexicalBlock(scope: !6175, file: !6108, line: 40, column: 54)
!6175 = distinct !DILexicalBlock(scope: !6170, file: !6108, line: 40, column: 2)
!6176 = !DILocation(line: 0, scope: !6161)
!6177 = !DILocation(line: 0, scope: !6168)
!6178 = !DILocation(line: 30, column: 2, scope: !6168)
!6179 = !DILocation(line: 38, column: 2, scope: !6161)
!6180 = !DILocation(line: 0, scope: !6170)
!6181 = !DILocation(line: 40, column: 2, scope: !6170)
!6182 = !DILocation(line: 31, column: 9, scope: !6183)
!6183 = distinct !DILexicalBlock(scope: !6184, file: !6108, line: 31, column: 7)
!6184 = distinct !DILexicalBlock(scope: !6185, file: !6108, line: 30, column: 54)
!6185 = distinct !DILexicalBlock(scope: !6168, file: !6108, line: 30, column: 2)
!6186 = !DILocation(line: 31, column: 7, scope: !6184)
!6187 = !DILocation(line: 32, column: 35, scope: !6188)
!6188 = distinct !DILexicalBlock(scope: !6183, file: !6108, line: 31, column: 19)
!6189 = !DILocation(line: 32, column: 20, scope: !6188)
!6190 = !DILocation(line: 32, column: 4, scope: !6188)
!6191 = !DILocation(line: 33, column: 3, scope: !6188)
!6192 = !DILocation(line: 34, column: 4, scope: !6193)
!6193 = distinct !DILexicalBlock(scope: !6183, file: !6108, line: 33, column: 10)
!6194 = !DILocation(line: 30, column: 50, scope: !6185)
!6195 = !DILocation(line: 30, column: 24, scope: !6185)
!6196 = distinct !{!6196, !6178, !6197}
!6197 = !DILocation(line: 36, column: 2, scope: !6168)
!6198 = !DILocation(line: 49, column: 2, scope: !6161)
!6199 = !DILocation(line: 50, column: 1, scope: !6161)
!6200 = !DILocation(line: 41, column: 9, scope: !6173)
!6201 = !DILocation(line: 41, column: 7, scope: !6174)
!6202 = !DILocation(line: 42, column: 22, scope: !6172)
!6203 = !DILocation(line: 0, scope: !6172)
!6204 = !DILocation(line: 44, column: 25, scope: !6172)
!6205 = !DILocation(line: 44, column: 17, scope: !6172)
!6206 = !DILocation(line: 44, column: 33, scope: !6172)
!6207 = !DILocation(line: 44, column: 4, scope: !6172)
!6208 = !DILocation(line: 45, column: 3, scope: !6172)
!6209 = !DILocation(line: 46, column: 4, scope: !6210)
!6210 = distinct !DILexicalBlock(scope: !6173, file: !6108, line: 45, column: 10)
!6211 = !DILocation(line: 40, column: 50, scope: !6175)
!6212 = !DILocation(line: 40, column: 24, scope: !6175)
!6213 = distinct !{!6213, !6181, !6214}
!6214 = !DILocation(line: 48, column: 2, scope: !6170)
!6215 = distinct !DISubprogram(name: "isprint", scope: !5131, file: !5131, line: 37, type: !214, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !6216)
!6216 = !{!6217}
!6217 = !DILocalVariable(name: "c", arg: 1, scope: !6215, file: !5131, line: 37, type: !107)
!6218 = !DILocation(line: 0, scope: !6215)
!6219 = !DILocation(line: 39, column: 38, scope: !6215)
!6220 = !DILocation(line: 39, column: 2, scope: !6215)
!6221 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6222, file: !6222, line: 57, type: !6223, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2687, retainedNodes: !6269)
!6222 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6223 = !DISubroutineType(types: !6224)
!6224 = !{null, !32, !6225}
!6225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6226, size: 32)
!6226 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6227)
!6227 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2807, line: 141, baseType: !6228)
!6228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2807, line: 97, size: 256, elements: !6229)
!6229 = !{!6230}
!6230 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6228, file: !2807, line: 107, baseType: !6231, size: 256)
!6231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2807, line: 98, size: 256, elements: !6232)
!6232 = !{!6233, !6238, !6243, !6248, !6253, !6258, !6263, !6268}
!6233 = !DIDerivedType(tag: DW_TAG_member, scope: !6231, file: !2807, line: 99, baseType: !6234, size: 32)
!6234 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6231, file: !2807, line: 99, size: 32, elements: !6235)
!6235 = !{!6236, !6237}
!6236 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6234, file: !2807, line: 99, baseType: !152, size: 32)
!6237 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6234, file: !2807, line: 99, baseType: !152, size: 32)
!6238 = !DIDerivedType(tag: DW_TAG_member, scope: !6231, file: !2807, line: 100, baseType: !6239, size: 32, offset: 32)
!6239 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6231, file: !2807, line: 100, size: 32, elements: !6240)
!6240 = !{!6241, !6242}
!6241 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6239, file: !2807, line: 100, baseType: !152, size: 32)
!6242 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6239, file: !2807, line: 100, baseType: !152, size: 32)
!6243 = !DIDerivedType(tag: DW_TAG_member, scope: !6231, file: !2807, line: 101, baseType: !6244, size: 32, offset: 64)
!6244 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6231, file: !2807, line: 101, size: 32, elements: !6245)
!6245 = !{!6246, !6247}
!6246 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6244, file: !2807, line: 101, baseType: !152, size: 32)
!6247 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6244, file: !2807, line: 101, baseType: !152, size: 32)
!6248 = !DIDerivedType(tag: DW_TAG_member, scope: !6231, file: !2807, line: 102, baseType: !6249, size: 32, offset: 96)
!6249 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6231, file: !2807, line: 102, size: 32, elements: !6250)
!6250 = !{!6251, !6252}
!6251 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6249, file: !2807, line: 102, baseType: !152, size: 32)
!6252 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6249, file: !2807, line: 102, baseType: !152, size: 32)
!6253 = !DIDerivedType(tag: DW_TAG_member, scope: !6231, file: !2807, line: 103, baseType: !6254, size: 32, offset: 128)
!6254 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6231, file: !2807, line: 103, size: 32, elements: !6255)
!6255 = !{!6256, !6257}
!6256 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6254, file: !2807, line: 103, baseType: !152, size: 32)
!6257 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6254, file: !2807, line: 103, baseType: !152, size: 32)
!6258 = !DIDerivedType(tag: DW_TAG_member, scope: !6231, file: !2807, line: 104, baseType: !6259, size: 32, offset: 160)
!6259 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6231, file: !2807, line: 104, size: 32, elements: !6260)
!6260 = !{!6261, !6262}
!6261 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6259, file: !2807, line: 104, baseType: !152, size: 32)
!6262 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6259, file: !2807, line: 104, baseType: !152, size: 32)
!6263 = !DIDerivedType(tag: DW_TAG_member, scope: !6231, file: !2807, line: 105, baseType: !6264, size: 32, offset: 192)
!6264 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6231, file: !2807, line: 105, size: 32, elements: !6265)
!6265 = !{!6266, !6267}
!6266 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6264, file: !2807, line: 105, baseType: !152, size: 32)
!6267 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6264, file: !2807, line: 105, baseType: !152, size: 32)
!6268 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6231, file: !2807, line: 106, baseType: !152, size: 32, offset: 224)
!6269 = !{!6270, !6271}
!6270 = !DILocalVariable(name: "reason", arg: 1, scope: !6221, file: !6222, line: 57, type: !32)
!6271 = !DILocalVariable(name: "esf", arg: 2, scope: !6221, file: !6222, line: 57, type: !6225)
!6272 = !DILocation(line: 0, scope: !6221)
!6273 = !DILocation(line: 60, column: 10, scope: !6274)
!6274 = distinct !DILexicalBlock(scope: !6221, file: !6222, line: 60, column: 6)
!6275 = !DILocation(line: 60, column: 6, scope: !6221)
!6276 = !DILocation(line: 61, column: 3, scope: !6277)
!6277 = distinct !DILexicalBlock(scope: !6274, file: !6222, line: 60, column: 19)
!6278 = !DILocation(line: 62, column: 2, scope: !6277)
!6279 = !DILocation(line: 63, column: 2, scope: !6221)
!6280 = !DILocation(line: 64, column: 1, scope: !6221)
!6281 = distinct !DISubprogram(name: "esf_dump", scope: !6222, file: !6222, line: 20, type: !6282, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2687, retainedNodes: !6284)
!6282 = !DISubroutineType(types: !6283)
!6283 = !{null, !6225}
!6284 = !{!6285}
!6285 = !DILocalVariable(name: "esf", arg: 1, scope: !6281, file: !6222, line: 20, type: !6225)
!6286 = !DILocation(line: 0, scope: !6281)
!6287 = !DILocation(line: 22, column: 2, scope: !6288)
!6288 = distinct !DILexicalBlock(scope: !6289, file: !6222, line: 22, column: 2)
!6289 = distinct !DILexicalBlock(scope: !6290, file: !6222, line: 22, column: 2)
!6290 = distinct !DILexicalBlock(scope: !6291, file: !6222, line: 22, column: 2)
!6291 = distinct !DILexicalBlock(scope: !6281, file: !6222, line: 22, column: 2)
!6292 = !DILocation(line: 24, column: 2, scope: !6293)
!6293 = distinct !DILexicalBlock(scope: !6294, file: !6222, line: 24, column: 2)
!6294 = distinct !DILexicalBlock(scope: !6295, file: !6222, line: 24, column: 2)
!6295 = distinct !DILexicalBlock(scope: !6296, file: !6222, line: 24, column: 2)
!6296 = distinct !DILexicalBlock(scope: !6281, file: !6222, line: 24, column: 2)
!6297 = !DILocation(line: 26, column: 2, scope: !6298)
!6298 = distinct !DILexicalBlock(scope: !6299, file: !6222, line: 26, column: 2)
!6299 = distinct !DILexicalBlock(scope: !6300, file: !6222, line: 26, column: 2)
!6300 = distinct !DILexicalBlock(scope: !6301, file: !6222, line: 26, column: 2)
!6301 = distinct !DILexicalBlock(scope: !6281, file: !6222, line: 26, column: 2)
!6302 = !DILocation(line: 53, column: 2, scope: !6303)
!6303 = distinct !DILexicalBlock(scope: !6304, file: !6222, line: 53, column: 2)
!6304 = distinct !DILexicalBlock(scope: !6305, file: !6222, line: 53, column: 2)
!6305 = distinct !DILexicalBlock(scope: !6306, file: !6222, line: 53, column: 2)
!6306 = distinct !DILexicalBlock(scope: !6281, file: !6222, line: 53, column: 2)
!6307 = !DILocation(line: 55, column: 1, scope: !6281)
!6308 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6222, file: !6222, line: 82, type: !6309, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2687, retainedNodes: !6324)
!6309 = !DISubroutineType(types: !6310)
!6310 = !{null, !6225, !6311}
!6311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6312, size: 32)
!6312 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !379, line: 37, baseType: !6313)
!6313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !6314)
!6314 = !{!6315, !6316, !6317, !6318, !6319, !6320, !6321, !6322, !6323}
!6315 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6313, file: !379, line: 26, baseType: !152, size: 32)
!6316 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6313, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!6317 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6313, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!6318 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6313, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!6319 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6313, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!6320 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6313, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!6321 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6313, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!6322 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6313, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!6323 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6313, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!6324 = !{!6325, !6326, !6327}
!6325 = !DILocalVariable(name: "esf", arg: 1, scope: !6308, file: !6222, line: 82, type: !6225)
!6326 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6308, file: !6222, line: 82, type: !6311)
!6327 = !DILocalVariable(name: "reason", scope: !6308, file: !6222, line: 88, type: !32)
!6328 = !DILocation(line: 0, scope: !6308)
!6329 = !DILocation(line: 88, column: 35, scope: !6308)
!6330 = !DILocation(line: 108, column: 2, scope: !6308)
!6331 = !DILocation(line: 131, column: 1, scope: !6308)
!6332 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6222, file: !6222, line: 133, type: !131, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2687, retainedNodes: !6333)
!6333 = !{!6334, !6335, !6336}
!6334 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6332, file: !6222, line: 133, type: !106)
!6335 = !DILocalVariable(name: "ssf_contents", scope: !6332, file: !6222, line: 135, type: !1040)
!6336 = !DILocalVariable(name: "oops_esf", scope: !6332, file: !6222, line: 136, type: !6227)
!6337 = !DILocation(line: 0, scope: !6332)
!6338 = !DILocation(line: 136, column: 2, scope: !6332)
!6339 = !DILocation(line: 136, column: 15, scope: !6332)
!6340 = !DILocation(line: 139, column: 22, scope: !6332)
!6341 = !DILocation(line: 139, column: 17, scope: !6332)
!6342 = !DILocation(line: 139, column: 20, scope: !6332)
!6343 = !DILocation(line: 141, column: 2, scope: !6332)
!6344 = !DILocation(line: 142, column: 2, scope: !6332)
!6345 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6346, file: !6346, line: 40, type: !6086, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2698, retainedNodes: !6347)
!6346 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6347 = !{!6348}
!6348 = !DILocalVariable(name: "irq", arg: 1, scope: !6345, file: !6346, line: 40, type: !32)
!6349 = !DILocation(line: 0, scope: !6345)
!6350 = !DILocation(line: 42, column: 2, scope: !6345)
!6351 = !DILocation(line: 43, column: 1, scope: !6345)
!6352 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !463, file: !463, line: 1684, type: !6353, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2698, retainedNodes: !6355)
!6353 = !DISubroutineType(types: !6354)
!6354 = !{null, !932}
!6355 = !{!6356}
!6356 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6352, file: !463, line: 1684, type: !932)
!6357 = !DILocation(line: 0, scope: !6352)
!6358 = !DILocation(line: 1686, column: 23, scope: !6359)
!6359 = distinct !DILexicalBlock(scope: !6352, file: !463, line: 1686, column: 7)
!6360 = !DILocation(line: 1686, column: 7, scope: !6352)
!6361 = !DILocation(line: 1688, column: 5, scope: !6362)
!6362 = distinct !DILexicalBlock(scope: !6359, file: !463, line: 1687, column: 3)
!6363 = !{i64 2151643507}
!6364 = !DILocation(line: 1689, column: 81, scope: !6362)
!6365 = !DILocation(line: 1689, column: 60, scope: !6362)
!6366 = !DILocation(line: 1689, column: 34, scope: !6362)
!6367 = !DILocation(line: 1689, column: 5, scope: !6362)
!6368 = !DILocation(line: 1689, column: 43, scope: !6362)
!6369 = !DILocation(line: 1690, column: 5, scope: !6362)
!6370 = !{i64 2151643621}
!6371 = !DILocation(line: 1691, column: 3, scope: !6362)
!6372 = !DILocation(line: 1692, column: 1, scope: !6352)
!6373 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6346, file: !6346, line: 45, type: !6086, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2698, retainedNodes: !6374)
!6374 = !{!6375}
!6375 = !DILocalVariable(name: "irq", arg: 1, scope: !6373, file: !6346, line: 45, type: !32)
!6376 = !DILocation(line: 0, scope: !6373)
!6377 = !DILocation(line: 47, column: 2, scope: !6373)
!6378 = !DILocation(line: 48, column: 1, scope: !6373)
!6379 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !463, file: !463, line: 1722, type: !6353, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2698, retainedNodes: !6380)
!6380 = !{!6381}
!6381 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6379, file: !463, line: 1722, type: !932)
!6382 = !DILocation(line: 0, scope: !6379)
!6383 = !DILocation(line: 1724, column: 23, scope: !6384)
!6384 = distinct !DILexicalBlock(scope: !6379, file: !463, line: 1724, column: 7)
!6385 = !DILocation(line: 1724, column: 7, scope: !6379)
!6386 = !DILocation(line: 1726, column: 81, scope: !6387)
!6387 = distinct !DILexicalBlock(scope: !6384, file: !463, line: 1725, column: 3)
!6388 = !DILocation(line: 1726, column: 60, scope: !6387)
!6389 = !DILocation(line: 1726, column: 34, scope: !6387)
!6390 = !DILocation(line: 1726, column: 5, scope: !6387)
!6391 = !DILocation(line: 1726, column: 43, scope: !6387)
!6392 = !DILocation(line: 271, column: 3, scope: !6393, inlinedAt: !6395)
!6393 = distinct !DISubprogram(name: "__DSB", scope: !6394, file: !6394, line: 269, type: !3227, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2698, retainedNodes: !2296)
!6394 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6395 = distinct !DILocation(line: 1727, column: 5, scope: !6387)
!6396 = !{i64 4097890}
!6397 = !DILocation(line: 260, column: 3, scope: !6398, inlinedAt: !6399)
!6398 = distinct !DISubprogram(name: "__ISB", scope: !6394, file: !6394, line: 258, type: !3227, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2698, retainedNodes: !2296)
!6399 = distinct !DILocation(line: 1728, column: 5, scope: !6387)
!6400 = !{i64 4097607}
!6401 = !DILocation(line: 1729, column: 3, scope: !6387)
!6402 = !DILocation(line: 1730, column: 1, scope: !6379)
!6403 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6346, file: !6346, line: 50, type: !6404, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2698, retainedNodes: !6406)
!6404 = !DISubroutineType(types: !6405)
!6405 = !{!107, !32}
!6406 = !{!6407}
!6407 = !DILocalVariable(name: "irq", arg: 1, scope: !6403, file: !6346, line: 50, type: !32)
!6408 = !DILocation(line: 0, scope: !6403)
!6409 = !DILocation(line: 52, column: 20, scope: !6403)
!6410 = !DILocation(line: 52, column: 9, scope: !6403)
!6411 = !DILocation(line: 52, column: 41, scope: !6403)
!6412 = !DILocation(line: 52, column: 39, scope: !6403)
!6413 = !DILocation(line: 52, column: 2, scope: !6403)
!6414 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6346, file: !6346, line: 64, type: !6415, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2698, retainedNodes: !6417)
!6415 = !DISubroutineType(types: !6416)
!6416 = !{null, !32, !32, !152}
!6417 = !{!6418, !6419, !6420}
!6418 = !DILocalVariable(name: "irq", arg: 1, scope: !6414, file: !6346, line: 64, type: !32)
!6419 = !DILocalVariable(name: "prio", arg: 2, scope: !6414, file: !6346, line: 64, type: !32)
!6420 = !DILocalVariable(name: "flags", arg: 3, scope: !6414, file: !6346, line: 64, type: !152)
!6421 = !DILocation(line: 0, scope: !6414)
!6422 = !DILocation(line: 83, column: 8, scope: !6423)
!6423 = distinct !DILexicalBlock(scope: !6424, file: !6346, line: 82, column: 9)
!6424 = distinct !DILexicalBlock(scope: !6414, file: !6346, line: 76, column: 6)
!6425 = !DILocation(line: 91, column: 2, scope: !6426)
!6426 = distinct !DILexicalBlock(scope: !6427, file: !6346, line: 91, column: 2)
!6427 = distinct !DILexicalBlock(scope: !6414, file: !6346, line: 91, column: 2)
!6428 = !DILocation(line: 91, column: 2, scope: !6427)
!6429 = !DILocation(line: 91, column: 2, scope: !6430)
!6430 = distinct !DILexicalBlock(scope: !6426, file: !6346, line: 91, column: 2)
!6431 = !DILocation(line: 95, column: 2, scope: !6414)
!6432 = !DILocation(line: 96, column: 1, scope: !6414)
!6433 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !463, file: !463, line: 1814, type: !6434, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2698, retainedNodes: !6436)
!6434 = !DISubroutineType(types: !6435)
!6435 = !{null, !932, !152}
!6436 = !{!6437, !6438}
!6437 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6433, file: !463, line: 1814, type: !932)
!6438 = !DILocalVariable(name: "priority", arg: 2, scope: !6433, file: !463, line: 1814, type: !152)
!6439 = !DILocation(line: 0, scope: !6433)
!6440 = !DILocation(line: 0, scope: !6441)
!6441 = distinct !DILexicalBlock(scope: !6433, file: !463, line: 1816, column: 7)
!6442 = !DILocation(line: 1816, column: 7, scope: !6433)
!6443 = !DILocation(line: 1824, column: 1, scope: !6433)
!6444 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6346, file: !6346, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2698, retainedNodes: !6445)
!6445 = !{!6446}
!6446 = !DILocalVariable(name: "unused", arg: 1, scope: !6444, file: !6346, line: 155, type: !13)
!6447 = !DILocation(line: 0, scope: !6444)
!6448 = !DILocation(line: 159, column: 2, scope: !6444)
!6449 = !DILocation(line: 160, column: 1, scope: !6444)
!6450 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6451, file: !6451, line: 87, type: !3227, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2744, retainedNodes: !2296)
!6451 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6452 = !DILocation(line: 89, column: 2, scope: !6450)
!6453 = !DILocation(line: 90, column: 2, scope: !6450)
!6454 = !DILocation(line: 91, column: 1, scope: !6450)
!6455 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6451, file: !6451, line: 23, type: !3227, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2296)
!6456 = !DISubprogram(name: "z_arm_int_exit", scope: !6457, file: !6457, line: 153, type: !3227, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2296)
!6457 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6458 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6459, file: !6459, line: 256, type: !3227, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2746, retainedNodes: !2296)
!6459 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6460 = !DILocation(line: 258, column: 2, scope: !6458)
!6461 = !DILocation(line: 260, column: 2, scope: !6458)
!6462 = !DILocation(line: 262, column: 2, scope: !6458)
!6463 = !DILocation(line: 263, column: 2, scope: !6458)
!6464 = !DILocation(line: 267, column: 2, scope: !6458)
!6465 = !DILocation(line: 268, column: 2, scope: !6458)
!6466 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6459, file: !6459, line: 53, type: !3227, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2746, retainedNodes: !2296)
!6467 = !DILocation(line: 55, column: 12, scope: !6466)
!6468 = !DILocation(line: 271, column: 3, scope: !6469, inlinedAt: !6470)
!6469 = distinct !DISubprogram(name: "__DSB", scope: !6394, file: !6394, line: 269, type: !3227, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2746, retainedNodes: !2296)
!6470 = distinct !DILocation(line: 56, column: 2, scope: !6466)
!6471 = !{i64 4096561}
!6472 = !DILocation(line: 260, column: 3, scope: !6473, inlinedAt: !6474)
!6473 = distinct !DISubprogram(name: "__ISB", scope: !6394, file: !6394, line: 258, type: !3227, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2746, retainedNodes: !2296)
!6474 = distinct !DILocation(line: 57, column: 2, scope: !6466)
!6475 = !{i64 4096278}
!6476 = !DILocation(line: 58, column: 1, scope: !6466)
!6477 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !6459, file: !6459, line: 96, type: !3227, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2746, retainedNodes: !2296)
!6478 = !DILocation(line: 103, column: 13, scope: !6477)
!6479 = !DILocation(line: 975, column: 3, scope: !6480, inlinedAt: !6485)
!6480 = distinct !DISubprogram(name: "__get_CONTROL", scope: !6394, file: !6394, line: 971, type: !6481, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2746, retainedNodes: !6483)
!6481 = !DISubroutineType(types: !6482)
!6482 = !{!152}
!6483 = !{!6484}
!6484 = !DILocalVariable(name: "result", scope: !6480, file: !6394, line: 973, type: !152)
!6485 = distinct !DILocation(line: 189, column: 16, scope: !6477)
!6486 = !{i64 4117391}
!6487 = !DILocation(line: 0, scope: !6480, inlinedAt: !6485)
!6488 = !DILocation(line: 189, column: 32, scope: !6477)
!6489 = !DILocalVariable(name: "control", arg: 1, scope: !6490, file: !6394, line: 1001, type: !152)
!6490 = distinct !DISubprogram(name: "__set_CONTROL", scope: !6394, file: !6394, line: 1001, type: !6491, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2746, retainedNodes: !6493)
!6491 = !DISubroutineType(types: !6492)
!6492 = !{null, !152}
!6493 = !{!6489}
!6494 = !DILocation(line: 0, scope: !6490, inlinedAt: !6495)
!6495 = distinct !DILocation(line: 189, column: 2, scope: !6477)
!6496 = !DILocation(line: 1003, column: 3, scope: !6490, inlinedAt: !6495)
!6497 = !{i64 4118111}
!6498 = !DILocation(line: 260, column: 3, scope: !6473, inlinedAt: !6499)
!6499 = distinct !DILocation(line: 1004, column: 3, scope: !6490, inlinedAt: !6495)
!6500 = !DILocation(line: 191, column: 1, scope: !6477)
!6501 = distinct !DISubprogram(name: "arch_swap", scope: !6502, file: !6502, line: 33, type: !6404, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2774, retainedNodes: !6503)
!6502 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6503 = !{!6504}
!6504 = !DILocalVariable(name: "key", arg: 1, scope: !6501, file: !6502, line: 33, type: !32)
!6505 = !DILocation(line: 0, scope: !6501)
!6506 = !DILocation(line: 36, column: 2, scope: !6501)
!6507 = !DILocation(line: 36, column: 17, scope: !6501)
!6508 = !DILocation(line: 36, column: 25, scope: !6501)
!6509 = !DILocation(line: 37, column: 37, scope: !6501)
!6510 = !DILocation(line: 37, column: 17, scope: !6501)
!6511 = !DILocation(line: 37, column: 35, scope: !6501)
!6512 = !DILocation(line: 41, column: 12, scope: !6501)
!6513 = !DILocalVariable(name: "key", arg: 1, scope: !6514, file: !6075, line: 84, type: !32)
!6514 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6075, file: !6075, line: 84, type: !6086, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2774, retainedNodes: !6515)
!6515 = !{!6513}
!6516 = !DILocation(line: 0, scope: !6514, inlinedAt: !6517)
!6517 = distinct !DILocation(line: 44, column: 2, scope: !6501)
!6518 = !DILocation(line: 95, column: 2, scope: !6514, inlinedAt: !6517)
!6519 = !{i64 2597405}
!6520 = !DILocation(line: 53, column: 9, scope: !6501)
!6521 = !DILocation(line: 53, column: 24, scope: !6501)
!6522 = !DILocation(line: 53, column: 2, scope: !6501)
!6523 = distinct !DISubprogram(name: "arch_new_thread", scope: !6524, file: !6524, line: 56, type: !6525, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2802, retainedNodes: !6635)
!6524 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6525 = !DISubroutineType(types: !6526)
!6526 = !{null, !6527, !6630, !193, !559, !106, !106, !106}
!6527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6528, size: 32)
!6528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !6529)
!6529 = !{!6530, !6588, !6600, !6601, !6602, !6603, !6604, !6610, !6625}
!6530 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6528, file: !309, line: 247, baseType: !6531, size: 384)
!6531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !6532)
!6532 = !{!6533, !6557, !6564, !6565, !6566, !6575, !6576, !6577}
!6533 = !DIDerivedType(tag: DW_TAG_member, scope: !6531, file: !309, line: 60, baseType: !6534, size: 64)
!6534 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6531, file: !309, line: 60, size: 64, elements: !6535)
!6535 = !{!6536, !6551}
!6536 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6534, file: !309, line: 61, baseType: !6537, size: 64)
!6537 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !6538)
!6538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !6539)
!6539 = !{!6540, !6546}
!6540 = !DIDerivedType(tag: DW_TAG_member, scope: !6538, file: !319, line: 38, baseType: !6541, size: 32)
!6541 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6538, file: !319, line: 38, size: 32, elements: !6542)
!6542 = !{!6543, !6545}
!6543 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6541, file: !319, line: 39, baseType: !6544, size: 32)
!6544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6538, size: 32)
!6545 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6541, file: !319, line: 40, baseType: !6544, size: 32)
!6546 = !DIDerivedType(tag: DW_TAG_member, scope: !6538, file: !319, line: 42, baseType: !6547, size: 32, offset: 32)
!6547 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6538, file: !319, line: 42, size: 32, elements: !6548)
!6548 = !{!6549, !6550}
!6549 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6547, file: !319, line: 43, baseType: !6544, size: 32)
!6550 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6547, file: !319, line: 44, baseType: !6544, size: 32)
!6551 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6534, file: !309, line: 62, baseType: !6552, size: 64)
!6552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !6553)
!6553 = !{!6554}
!6554 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6552, file: !335, line: 50, baseType: !6555, size: 64)
!6555 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6556, size: 64, elements: !340)
!6556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6552, size: 32)
!6557 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6531, file: !309, line: 68, baseType: !6558, size: 32, offset: 64)
!6558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6559, size: 32)
!6559 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !6560)
!6560 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !6561)
!6561 = !{!6562}
!6562 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6560, file: !345, line: 232, baseType: !6563, size: 64)
!6563 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !6538)
!6564 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6531, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!6565 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6531, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!6566 = !DIDerivedType(tag: DW_TAG_member, scope: !6531, file: !309, line: 90, baseType: !6567, size: 16, offset: 112)
!6567 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6531, file: !309, line: 90, size: 16, elements: !6568)
!6568 = !{!6569, !6574}
!6569 = !DIDerivedType(tag: DW_TAG_member, scope: !6567, file: !309, line: 91, baseType: !6570, size: 16)
!6570 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6567, file: !309, line: 91, size: 16, elements: !6571)
!6571 = !{!6572, !6573}
!6572 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6570, file: !309, line: 96, baseType: !359, size: 8)
!6573 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6570, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!6574 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6567, file: !309, line: 100, baseType: !197, size: 16)
!6575 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6531, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!6576 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6531, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!6577 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6531, file: !309, line: 131, baseType: !6578, size: 192, offset: 192)
!6578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !6579)
!6579 = !{!6580, !6581, !6587}
!6580 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6578, file: !345, line: 245, baseType: !6537, size: 64)
!6581 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6578, file: !345, line: 246, baseType: !6582, size: 32, offset: 64)
!6582 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !6583)
!6583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6584, size: 32)
!6584 = !DISubroutineType(types: !6585)
!6585 = !{null, !6586}
!6586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6578, size: 32)
!6587 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6578, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!6588 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6528, file: !309, line: 250, baseType: !6589, size: 288, offset: 384)
!6589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !6590)
!6590 = !{!6591, !6592, !6593, !6594, !6595, !6596, !6597, !6598, !6599}
!6591 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6589, file: !379, line: 26, baseType: !152, size: 32)
!6592 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6589, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!6593 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6589, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!6594 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6589, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!6595 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6589, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!6596 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6589, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!6597 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6589, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!6598 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6589, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!6599 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6589, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!6600 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6528, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!6601 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6528, file: !309, line: 256, baseType: !6559, size: 64, offset: 704)
!6602 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6528, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!6603 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6528, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!6604 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6528, file: !309, line: 300, baseType: !6605, size: 96, offset: 1056)
!6605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !6606)
!6606 = !{!6607, !6608, !6609}
!6607 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6605, file: !309, line: 153, baseType: !22, size: 32)
!6608 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6605, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!6609 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6605, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!6610 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6528, file: !309, line: 325, baseType: !6611, size: 32, offset: 1152)
!6611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6612, size: 32)
!6612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !6613)
!6613 = !{!6614, !6620, !6621}
!6614 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6612, file: !406, line: 5074, baseType: !6615, size: 96)
!6615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !6616)
!6616 = !{!6617, !6618, !6619}
!6617 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6615, file: !410, line: 57, baseType: !413, size: 32)
!6618 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6615, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!6619 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6615, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!6620 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6612, file: !406, line: 5075, baseType: !6559, size: 64, offset: 96)
!6621 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6612, file: !406, line: 5076, baseType: !6622, size: 32, offset: 160)
!6622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !6623)
!6623 = !{!6624}
!6624 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !6622, file: !420, line: 52, baseType: !22, size: 32)
!6625 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6528, file: !309, line: 343, baseType: !6626, size: 64, offset: 1184)
!6626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !6627)
!6627 = !{!6628, !6629}
!6628 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6626, file: !379, line: 63, baseType: !152, size: 32)
!6629 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6626, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!6630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6631, size: 32)
!6631 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !560, line: 44, baseType: !6632)
!6632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !577, line: 47, size: 8, elements: !6633)
!6633 = !{!6634}
!6634 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6632, file: !577, line: 48, baseType: !120, size: 8)
!6635 = !{!6636, !6637, !6638, !6639, !6640, !6641, !6642, !6643}
!6636 = !DILocalVariable(name: "thread", arg: 1, scope: !6523, file: !6524, line: 56, type: !6527)
!6637 = !DILocalVariable(name: "stack", arg: 2, scope: !6523, file: !6524, line: 56, type: !6630)
!6638 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6523, file: !6524, line: 57, type: !193)
!6639 = !DILocalVariable(name: "entry", arg: 4, scope: !6523, file: !6524, line: 57, type: !559)
!6640 = !DILocalVariable(name: "p1", arg: 5, scope: !6523, file: !6524, line: 58, type: !106)
!6641 = !DILocalVariable(name: "p2", arg: 6, scope: !6523, file: !6524, line: 58, type: !106)
!6642 = !DILocalVariable(name: "p3", arg: 7, scope: !6523, file: !6524, line: 58, type: !106)
!6643 = !DILocalVariable(name: "iframe", scope: !6523, file: !6524, line: 60, type: !2805)
!6644 = !DILocation(line: 0, scope: !6523)
!6645 = !DILocation(line: 85, column: 11, scope: !6523)
!6646 = !DILocation(line: 93, column: 10, scope: !6523)
!6647 = !DILocation(line: 98, column: 13, scope: !6523)
!6648 = !DILocation(line: 100, column: 15, scope: !6523)
!6649 = !DILocation(line: 100, column: 10, scope: !6523)
!6650 = !DILocation(line: 100, column: 13, scope: !6523)
!6651 = !DILocation(line: 101, column: 15, scope: !6523)
!6652 = !DILocation(line: 101, column: 10, scope: !6523)
!6653 = !DILocation(line: 101, column: 13, scope: !6523)
!6654 = !DILocation(line: 102, column: 15, scope: !6523)
!6655 = !DILocation(line: 102, column: 10, scope: !6523)
!6656 = !DILocation(line: 102, column: 13, scope: !6523)
!6657 = !DILocation(line: 103, column: 15, scope: !6523)
!6658 = !DILocation(line: 103, column: 10, scope: !6523)
!6659 = !DILocation(line: 103, column: 13, scope: !6523)
!6660 = !DILocation(line: 106, column: 10, scope: !6523)
!6661 = !DILocation(line: 106, column: 15, scope: !6523)
!6662 = !DILocation(line: 122, column: 29, scope: !6523)
!6663 = !DILocation(line: 122, column: 23, scope: !6523)
!6664 = !DILocation(line: 122, column: 27, scope: !6523)
!6665 = !DILocation(line: 123, column: 15, scope: !6523)
!6666 = !DILocation(line: 123, column: 23, scope: !6523)
!6667 = !DILocation(line: 143, column: 1, scope: !6523)
!6668 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6524, file: !6524, line: 385, type: !6669, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2802, retainedNodes: !6672)
!6669 = !DISubroutineType(types: !6670)
!6670 = !{!152, !6671, !6671}
!6671 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !152)
!6672 = !{!6673, !6674, !6675, !6678}
!6673 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !6668, file: !6524, line: 385, type: !6671)
!6674 = !DILocalVariable(name: "psp", arg: 2, scope: !6668, file: !6524, line: 385, type: !6671)
!6675 = !DILocalVariable(name: "thread", scope: !6668, file: !6524, line: 388, type: !6676)
!6676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6677, size: 32)
!6677 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6528)
!6678 = !DILocalVariable(name: "guard_len", scope: !6668, file: !6524, line: 405, type: !152)
!6679 = !DILocation(line: 0, scope: !6668)
!6680 = !DILocation(line: 388, column: 34, scope: !6668)
!6681 = !DILocation(line: 390, column: 13, scope: !6682)
!6682 = distinct !DILexicalBlock(scope: !6668, file: !6524, line: 390, column: 6)
!6683 = !DILocation(line: 390, column: 6, scope: !6668)
!6684 = !DILocation(line: 438, column: 6, scope: !6685)
!6685 = distinct !DILexicalBlock(scope: !6668, file: !6524, line: 438, column: 6)
!6686 = !DILocation(line: 438, column: 6, scope: !6668)
!6687 = !DILocation(line: 442, column: 3, scope: !6688)
!6688 = distinct !DILexicalBlock(scope: !6685, file: !6524, line: 440, column: 22)
!6689 = !DILocation(line: 455, column: 1, scope: !6668)
!6690 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6524, file: !6524, line: 530, type: !6691, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2802, retainedNodes: !6693)
!6691 = !DISubroutineType(types: !6692)
!6692 = !{null, !6527, !193, !559}
!6693 = !{!6694, !6695, !6696}
!6694 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6690, file: !6524, line: 530, type: !6527)
!6695 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6690, file: !6524, line: 530, type: !193)
!6696 = !DILocalVariable(name: "_main", arg: 3, scope: !6690, file: !6524, line: 531, type: !559)
!6697 = !DILocation(line: 0, scope: !6690)
!6698 = !DILocation(line: 535, column: 11, scope: !6690)
!6699 = !DILocation(line: 560, column: 2, scope: !6690)
!6700 = !DILocation(line: 576, column: 2, scope: !6690)
!6701 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6702 = !DILocation(line: 603, column: 2, scope: !6690)
!6703 = distinct !DISubprogram(name: "z_arm_fault", scope: !6704, file: !6704, line: 1036, type: !6705, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2845, retainedNodes: !6720)
!6704 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6705 = !DISubroutineType(types: !6706)
!6706 = !{null, !152, !152, !152, !6707}
!6707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6708, size: 32)
!6708 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !379, line: 37, baseType: !6709)
!6709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !6710)
!6710 = !{!6711, !6712, !6713, !6714, !6715, !6716, !6717, !6718, !6719}
!6711 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6709, file: !379, line: 26, baseType: !152, size: 32)
!6712 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6709, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!6713 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6709, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!6714 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6709, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!6715 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6709, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!6716 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6709, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!6717 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6709, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!6718 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6709, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!6719 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6709, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!6720 = !{!6721, !6722, !6723, !6724, !6725, !6726, !6727, !6728, !6729, !6730}
!6721 = !DILocalVariable(name: "msp", arg: 1, scope: !6703, file: !6704, line: 1036, type: !152)
!6722 = !DILocalVariable(name: "psp", arg: 2, scope: !6703, file: !6704, line: 1036, type: !152)
!6723 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6703, file: !6704, line: 1036, type: !152)
!6724 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6703, file: !6704, line: 1037, type: !6707)
!6725 = !DILocalVariable(name: "reason", scope: !6703, file: !6704, line: 1039, type: !152)
!6726 = !DILocalVariable(name: "fault", scope: !6703, file: !6704, line: 1040, type: !107)
!6727 = !DILocalVariable(name: "recoverable", scope: !6703, file: !6704, line: 1041, type: !145)
!6728 = !DILocalVariable(name: "nested_exc", scope: !6703, file: !6704, line: 1041, type: !145)
!6729 = !DILocalVariable(name: "esf", scope: !6703, file: !6704, line: 1042, type: !2873)
!6730 = !DILocalVariable(name: "esf_copy", scope: !6703, file: !6704, line: 1047, type: !2874)
!6731 = !DILocation(line: 0, scope: !6703)
!6732 = !DILocation(line: 1040, column: 19, scope: !6703)
!6733 = !DILocation(line: 1041, column: 2, scope: !6703)
!6734 = !DILocation(line: 1047, column: 2, scope: !6703)
!6735 = !DILocation(line: 1047, column: 15, scope: !6703)
!6736 = !DILocalVariable(name: "key", arg: 1, scope: !6737, file: !6075, line: 84, type: !32)
!6737 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6075, file: !6075, line: 84, type: !6086, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2845, retainedNodes: !6738)
!6738 = !{!6736}
!6739 = !DILocation(line: 0, scope: !6737, inlinedAt: !6740)
!6740 = distinct !DILocation(line: 1050, column: 2, scope: !6703)
!6741 = !DILocation(line: 95, column: 2, scope: !6737, inlinedAt: !6740)
!6742 = !{i64 2630649}
!6743 = !DILocation(line: 1055, column: 9, scope: !6703)
!6744 = !DILocation(line: 1056, column: 2, scope: !6745)
!6745 = distinct !DILexicalBlock(scope: !6746, file: !6704, line: 1056, column: 2)
!6746 = distinct !DILexicalBlock(scope: !6703, file: !6704, line: 1056, column: 2)
!6747 = !DILocation(line: 1056, column: 2, scope: !6746)
!6748 = !DILocation(line: 1056, column: 2, scope: !6749)
!6749 = distinct !DILexicalBlock(scope: !6745, file: !6704, line: 1056, column: 2)
!6750 = !DILocation(line: 1040, column: 24, scope: !6703)
!6751 = !DILocation(line: 1063, column: 11, scope: !6703)
!6752 = !DILocation(line: 1064, column: 6, scope: !6753)
!6753 = distinct !DILexicalBlock(scope: !6703, file: !6704, line: 1064, column: 6)
!6754 = !{i8 0, i8 2}
!6755 = !DILocation(line: 1064, column: 6, scope: !6703)
!6756 = !DILocation(line: 1070, column: 20, scope: !6703)
!6757 = !DILocation(line: 1070, column: 2, scope: !6703)
!6758 = !DILocation(line: 1089, column: 6, scope: !6759)
!6759 = distinct !DILexicalBlock(scope: !6703, file: !6704, line: 1089, column: 6)
!6760 = !DILocation(line: 0, scope: !6759)
!6761 = !DILocation(line: 1089, column: 6, scope: !6703)
!6762 = !DILocation(line: 1090, column: 28, scope: !6763)
!6763 = distinct !DILexicalBlock(scope: !6764, file: !6704, line: 1090, column: 7)
!6764 = distinct !DILexicalBlock(scope: !6759, file: !6704, line: 1089, column: 18)
!6765 = !DILocation(line: 1090, column: 44, scope: !6763)
!6766 = !DILocation(line: 1090, column: 7, scope: !6764)
!6767 = !DILocation(line: 1091, column: 24, scope: !6768)
!6768 = distinct !DILexicalBlock(scope: !6763, file: !6704, line: 1090, column: 50)
!6769 = !DILocation(line: 1092, column: 3, scope: !6768)
!6770 = !DILocation(line: 1094, column: 23, scope: !6771)
!6771 = distinct !DILexicalBlock(scope: !6759, file: !6704, line: 1093, column: 9)
!6772 = !DILocation(line: 1097, column: 2, scope: !6703)
!6773 = !DILocation(line: 1098, column: 1, scope: !6703)
!6774 = distinct !DISubprogram(name: "get_esf", scope: !6704, file: !6704, line: 894, type: !6775, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2845, retainedNodes: !6778)
!6775 = !DISubroutineType(types: !6776)
!6776 = !{!2873, !152, !152, !152, !6777}
!6777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !145, size: 32)
!6778 = !{!6779, !6780, !6781, !6782, !6783, !6784}
!6779 = !DILocalVariable(name: "msp", arg: 1, scope: !6774, file: !6704, line: 894, type: !152)
!6780 = !DILocalVariable(name: "psp", arg: 2, scope: !6774, file: !6704, line: 894, type: !152)
!6781 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6774, file: !6704, line: 894, type: !152)
!6782 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6774, file: !6704, line: 895, type: !6777)
!6783 = !DILocalVariable(name: "alternative_state_exc", scope: !6774, file: !6704, line: 897, type: !145)
!6784 = !DILocalVariable(name: "ptr_esf", scope: !6774, file: !6704, line: 898, type: !2873)
!6785 = !DILocation(line: 0, scope: !6774)
!6786 = !DILocation(line: 900, column: 14, scope: !6774)
!6787 = !DILocation(line: 902, column: 49, scope: !6788)
!6788 = distinct !DILexicalBlock(scope: !6774, file: !6704, line: 902, column: 6)
!6789 = !DILocation(line: 902, column: 6, scope: !6774)
!6790 = !DILocation(line: 983, column: 44, scope: !6791)
!6791 = distinct !DILexicalBlock(scope: !6774, file: !6704, line: 983, column: 6)
!6792 = !DILocation(line: 985, column: 3, scope: !6793)
!6793 = distinct !DILexicalBlock(scope: !6794, file: !6704, line: 985, column: 3)
!6794 = distinct !DILexicalBlock(scope: !6795, file: !6704, line: 985, column: 3)
!6795 = distinct !DILexicalBlock(scope: !6796, file: !6704, line: 985, column: 3)
!6796 = distinct !DILexicalBlock(scope: !6797, file: !6704, line: 985, column: 3)
!6797 = distinct !DILexicalBlock(scope: !6791, file: !6704, line: 984, column: 47)
!6798 = !DILocation(line: 986, column: 3, scope: !6797)
!6799 = !DILocation(line: 983, column: 18, scope: !6791)
!6800 = !DILocation(line: 991, column: 7, scope: !6801)
!6801 = distinct !DILexicalBlock(scope: !6802, file: !6704, line: 990, column: 30)
!6802 = distinct !DILexicalBlock(scope: !6774, file: !6704, line: 990, column: 6)
!6803 = !DILocation(line: 998, column: 16, scope: !6804)
!6804 = distinct !DILexicalBlock(scope: !6805, file: !6704, line: 995, column: 10)
!6805 = distinct !DILexicalBlock(scope: !6801, file: !6704, line: 991, column: 7)
!6806 = !DILocation(line: 1002, column: 2, scope: !6774)
!6807 = !DILocation(line: 1003, column: 1, scope: !6774)
!6808 = distinct !DISubprogram(name: "fault_handle", scope: !6704, file: !6704, line: 786, type: !6809, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2845, retainedNodes: !6811)
!6809 = !DISubroutineType(types: !6810)
!6810 = !{!152, !2873, !107, !6777}
!6811 = !{!6812, !6813, !6814, !6815}
!6812 = !DILocalVariable(name: "esf", arg: 1, scope: !6808, file: !6704, line: 786, type: !2873)
!6813 = !DILocalVariable(name: "fault", arg: 2, scope: !6808, file: !6704, line: 786, type: !107)
!6814 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6808, file: !6704, line: 786, type: !6777)
!6815 = !DILocalVariable(name: "reason", scope: !6808, file: !6704, line: 788, type: !152)
!6816 = !DILocation(line: 0, scope: !6808)
!6817 = !DILocation(line: 790, column: 15, scope: !6808)
!6818 = !DILocation(line: 792, column: 2, scope: !6808)
!6819 = !DILocation(line: 794, column: 12, scope: !6820)
!6820 = distinct !DILexicalBlock(scope: !6808, file: !6704, line: 792, column: 17)
!6821 = !DILocation(line: 795, column: 3, scope: !6820)
!6822 = !DILocation(line: 800, column: 12, scope: !6820)
!6823 = !DILocation(line: 801, column: 3, scope: !6820)
!6824 = !DILocation(line: 803, column: 12, scope: !6820)
!6825 = !DILocation(line: 804, column: 3, scope: !6820)
!6826 = !DILocation(line: 806, column: 12, scope: !6820)
!6827 = !DILocation(line: 807, column: 3, scope: !6820)
!6828 = !DILocation(line: 814, column: 3, scope: !6820)
!6829 = !DILocation(line: 815, column: 3, scope: !6820)
!6830 = !DILocation(line: 820, column: 3, scope: !6820)
!6831 = !DILocation(line: 821, column: 3, scope: !6820)
!6832 = !DILocation(line: 829, column: 2, scope: !6808)
!6833 = distinct !DISubprogram(name: "hard_fault", scope: !6704, file: !6704, line: 709, type: !6834, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2845, retainedNodes: !6836)
!6834 = !DISubroutineType(types: !6835)
!6835 = !{!152, !2873, !6777}
!6836 = !{!6837, !6838, !6839}
!6837 = !DILocalVariable(name: "esf", arg: 1, scope: !6833, file: !6704, line: 709, type: !2873)
!6838 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6833, file: !6704, line: 709, type: !6777)
!6839 = !DILocalVariable(name: "reason", scope: !6833, file: !6704, line: 711, type: !152)
!6840 = !DILocation(line: 0, scope: !6833)
!6841 = !DILocation(line: 713, column: 2, scope: !6842)
!6842 = distinct !DILexicalBlock(scope: !6843, file: !6704, line: 713, column: 2)
!6843 = distinct !DILexicalBlock(scope: !6844, file: !6704, line: 713, column: 2)
!6844 = distinct !DILexicalBlock(scope: !6845, file: !6704, line: 713, column: 2)
!6845 = distinct !DILexicalBlock(scope: !6833, file: !6704, line: 713, column: 2)
!6846 = !DILocation(line: 732, column: 15, scope: !6833)
!6847 = !DILocation(line: 734, column: 12, scope: !6848)
!6848 = distinct !DILexicalBlock(scope: !6833, file: !6704, line: 734, column: 6)
!6849 = !DILocation(line: 734, column: 17, scope: !6848)
!6850 = !DILocation(line: 734, column: 41, scope: !6848)
!6851 = !DILocation(line: 734, column: 6, scope: !6833)
!6852 = !DILocation(line: 735, column: 3, scope: !6853)
!6853 = distinct !DILexicalBlock(scope: !6854, file: !6704, line: 735, column: 3)
!6854 = distinct !DILexicalBlock(scope: !6855, file: !6704, line: 735, column: 3)
!6855 = distinct !DILexicalBlock(scope: !6856, file: !6704, line: 735, column: 3)
!6856 = distinct !DILexicalBlock(scope: !6857, file: !6704, line: 735, column: 3)
!6857 = distinct !DILexicalBlock(scope: !6848, file: !6704, line: 734, column: 47)
!6858 = !DILocation(line: 736, column: 2, scope: !6857)
!6859 = !DILocation(line: 736, column: 19, scope: !6860)
!6860 = distinct !DILexicalBlock(scope: !6848, file: !6704, line: 736, column: 13)
!6861 = !DILocation(line: 736, column: 49, scope: !6860)
!6862 = !DILocation(line: 736, column: 13, scope: !6848)
!6863 = !DILocation(line: 737, column: 3, scope: !6864)
!6864 = distinct !DILexicalBlock(scope: !6865, file: !6704, line: 737, column: 3)
!6865 = distinct !DILexicalBlock(scope: !6866, file: !6704, line: 737, column: 3)
!6866 = distinct !DILexicalBlock(scope: !6867, file: !6704, line: 737, column: 3)
!6867 = distinct !DILexicalBlock(scope: !6868, file: !6704, line: 737, column: 3)
!6868 = distinct !DILexicalBlock(scope: !6860, file: !6704, line: 736, column: 55)
!6869 = !DILocation(line: 738, column: 2, scope: !6868)
!6870 = !DILocation(line: 738, column: 19, scope: !6871)
!6871 = distinct !DILexicalBlock(scope: !6860, file: !6704, line: 738, column: 13)
!6872 = !DILocation(line: 738, column: 24, scope: !6871)
!6873 = !DILocation(line: 738, column: 47, scope: !6871)
!6874 = !DILocation(line: 738, column: 13, scope: !6860)
!6875 = !DILocation(line: 739, column: 3, scope: !6876)
!6876 = distinct !DILexicalBlock(scope: !6877, file: !6704, line: 739, column: 3)
!6877 = distinct !DILexicalBlock(scope: !6878, file: !6704, line: 739, column: 3)
!6878 = distinct !DILexicalBlock(scope: !6879, file: !6704, line: 739, column: 3)
!6879 = distinct !DILexicalBlock(scope: !6880, file: !6704, line: 739, column: 3)
!6880 = distinct !DILexicalBlock(scope: !6871, file: !6704, line: 738, column: 53)
!6881 = !DILocation(line: 740, column: 7, scope: !6882)
!6882 = distinct !DILexicalBlock(scope: !6880, file: !6704, line: 740, column: 7)
!6883 = !DILocation(line: 740, column: 7, scope: !6880)
!6884 = !DILocation(line: 741, column: 4, scope: !6885)
!6885 = distinct !DILexicalBlock(scope: !6886, file: !6704, line: 741, column: 4)
!6886 = distinct !DILexicalBlock(scope: !6887, file: !6704, line: 741, column: 4)
!6887 = distinct !DILexicalBlock(scope: !6888, file: !6704, line: 741, column: 4)
!6888 = distinct !DILexicalBlock(scope: !6889, file: !6704, line: 741, column: 4)
!6889 = distinct !DILexicalBlock(scope: !6882, file: !6704, line: 740, column: 38)
!6890 = !DILocation(line: 742, column: 24, scope: !6889)
!6891 = !DILocation(line: 743, column: 3, scope: !6889)
!6892 = !DILocation(line: 743, column: 20, scope: !6893)
!6893 = distinct !DILexicalBlock(scope: !6882, file: !6704, line: 743, column: 14)
!6894 = !DILocation(line: 743, column: 25, scope: !6893)
!6895 = !DILocation(line: 743, column: 52, scope: !6893)
!6896 = !DILocation(line: 743, column: 14, scope: !6882)
!6897 = !DILocation(line: 744, column: 13, scope: !6898)
!6898 = distinct !DILexicalBlock(scope: !6893, file: !6704, line: 743, column: 58)
!6899 = !DILocation(line: 745, column: 3, scope: !6898)
!6900 = !DILocation(line: 745, column: 20, scope: !6901)
!6901 = distinct !DILexicalBlock(scope: !6893, file: !6704, line: 745, column: 14)
!6902 = !DILocation(line: 745, column: 25, scope: !6901)
!6903 = !DILocation(line: 745, column: 52, scope: !6901)
!6904 = !DILocation(line: 745, column: 14, scope: !6893)
!6905 = !DILocation(line: 746, column: 13, scope: !6906)
!6906 = distinct !DILexicalBlock(scope: !6901, file: !6704, line: 745, column: 58)
!6907 = !DILocation(line: 747, column: 3, scope: !6906)
!6908 = !DILocation(line: 747, column: 20, scope: !6909)
!6909 = distinct !DILexicalBlock(scope: !6901, file: !6704, line: 747, column: 14)
!6910 = !DILocation(line: 747, column: 52, scope: !6909)
!6911 = !DILocation(line: 747, column: 14, scope: !6901)
!6912 = !DILocation(line: 748, column: 13, scope: !6913)
!6913 = distinct !DILexicalBlock(scope: !6909, file: !6704, line: 747, column: 58)
!6914 = !DILocation(line: 754, column: 4, scope: !6915)
!6915 = distinct !DILexicalBlock(scope: !6916, file: !6704, line: 754, column: 4)
!6916 = distinct !DILexicalBlock(scope: !6917, file: !6704, line: 754, column: 4)
!6917 = distinct !DILexicalBlock(scope: !6918, file: !6704, line: 754, column: 4)
!6918 = distinct !DILexicalBlock(scope: !6909, file: !6704, line: 753, column: 10)
!6919 = !DILocation(line: 758, column: 3, scope: !6920)
!6920 = distinct !DILexicalBlock(scope: !6921, file: !6704, line: 758, column: 3)
!6921 = distinct !DILexicalBlock(scope: !6922, file: !6704, line: 758, column: 3)
!6922 = distinct !DILexicalBlock(scope: !6923, file: !6704, line: 758, column: 3)
!6923 = distinct !DILexicalBlock(scope: !6871, file: !6704, line: 757, column: 9)
!6924 = !DILocation(line: 766, column: 2, scope: !6833)
!6925 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6704, file: !6704, line: 229, type: !6809, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2845, retainedNodes: !6926)
!6926 = !{!6927, !6928, !6929, !6930, !6931, !6932, !6935}
!6927 = !DILocalVariable(name: "esf", arg: 1, scope: !6925, file: !6704, line: 229, type: !2873)
!6928 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6925, file: !6704, line: 229, type: !107)
!6929 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6925, file: !6704, line: 230, type: !6777)
!6930 = !DILocalVariable(name: "reason", scope: !6925, file: !6704, line: 232, type: !152)
!6931 = !DILocalVariable(name: "mmfar", scope: !6925, file: !6704, line: 233, type: !152)
!6932 = !DILocalVariable(name: "temp", scope: !6933, file: !6704, line: 254, type: !152)
!6933 = distinct !DILexicalBlock(scope: !6934, file: !6704, line: 244, column: 48)
!6934 = distinct !DILexicalBlock(scope: !6925, file: !6704, line: 244, column: 6)
!6935 = !DILocalVariable(name: "min_stack_ptr", scope: !6936, file: !6704, line: 309, type: !152)
!6936 = distinct !DILexicalBlock(scope: !6937, file: !6704, line: 308, column: 43)
!6937 = distinct !DILexicalBlock(scope: !6938, file: !6704, line: 308, column: 7)
!6938 = distinct !DILexicalBlock(scope: !6939, file: !6704, line: 289, column: 40)
!6939 = distinct !DILexicalBlock(scope: !6925, file: !6704, line: 288, column: 6)
!6940 = !DILocation(line: 0, scope: !6925)
!6941 = !DILocation(line: 235, column: 2, scope: !6942)
!6942 = distinct !DILexicalBlock(scope: !6943, file: !6704, line: 235, column: 2)
!6943 = distinct !DILexicalBlock(scope: !6944, file: !6704, line: 235, column: 2)
!6944 = distinct !DILexicalBlock(scope: !6945, file: !6704, line: 235, column: 2)
!6945 = distinct !DILexicalBlock(scope: !6925, file: !6704, line: 235, column: 2)
!6946 = !DILocation(line: 237, column: 12, scope: !6947)
!6947 = distinct !DILexicalBlock(scope: !6925, file: !6704, line: 237, column: 6)
!6948 = !DILocation(line: 237, column: 17, scope: !6947)
!6949 = !DILocation(line: 237, column: 41, scope: !6947)
!6950 = !DILocation(line: 237, column: 6, scope: !6925)
!6951 = !DILocation(line: 238, column: 3, scope: !6952)
!6952 = distinct !DILexicalBlock(scope: !6953, file: !6704, line: 238, column: 3)
!6953 = distinct !DILexicalBlock(scope: !6954, file: !6704, line: 238, column: 3)
!6954 = distinct !DILexicalBlock(scope: !6955, file: !6704, line: 238, column: 3)
!6955 = distinct !DILexicalBlock(scope: !6956, file: !6704, line: 238, column: 3)
!6956 = distinct !DILexicalBlock(scope: !6947, file: !6704, line: 237, column: 47)
!6957 = !DILocation(line: 240, column: 2, scope: !6956)
!6958 = !DILocation(line: 241, column: 12, scope: !6959)
!6959 = distinct !DILexicalBlock(scope: !6925, file: !6704, line: 241, column: 6)
!6960 = !DILocation(line: 241, column: 17, scope: !6959)
!6961 = !DILocation(line: 241, column: 43, scope: !6959)
!6962 = !DILocation(line: 241, column: 6, scope: !6925)
!6963 = !DILocation(line: 242, column: 3, scope: !6964)
!6964 = distinct !DILexicalBlock(scope: !6965, file: !6704, line: 242, column: 3)
!6965 = distinct !DILexicalBlock(scope: !6966, file: !6704, line: 242, column: 3)
!6966 = distinct !DILexicalBlock(scope: !6967, file: !6704, line: 242, column: 3)
!6967 = distinct !DILexicalBlock(scope: !6968, file: !6704, line: 242, column: 3)
!6968 = distinct !DILexicalBlock(scope: !6959, file: !6704, line: 241, column: 49)
!6969 = !DILocation(line: 243, column: 2, scope: !6968)
!6970 = !DILocation(line: 244, column: 12, scope: !6934)
!6971 = !DILocation(line: 244, column: 17, scope: !6934)
!6972 = !DILocation(line: 244, column: 42, scope: !6934)
!6973 = !DILocation(line: 244, column: 6, scope: !6925)
!6974 = !DILocation(line: 245, column: 3, scope: !6975)
!6975 = distinct !DILexicalBlock(scope: !6976, file: !6704, line: 245, column: 3)
!6976 = distinct !DILexicalBlock(scope: !6977, file: !6704, line: 245, column: 3)
!6977 = distinct !DILexicalBlock(scope: !6978, file: !6704, line: 245, column: 3)
!6978 = distinct !DILexicalBlock(scope: !6933, file: !6704, line: 245, column: 3)
!6979 = !DILocation(line: 254, column: 24, scope: !6933)
!6980 = !DILocation(line: 0, scope: !6933)
!6981 = !DILocation(line: 256, column: 13, scope: !6982)
!6982 = distinct !DILexicalBlock(scope: !6933, file: !6704, line: 256, column: 7)
!6983 = !DILocation(line: 256, column: 18, scope: !6982)
!6984 = !DILocation(line: 256, column: 44, scope: !6982)
!6985 = !DILocation(line: 256, column: 7, scope: !6933)
!6986 = !DILocation(line: 258, column: 4, scope: !6987)
!6987 = distinct !DILexicalBlock(scope: !6988, file: !6704, line: 258, column: 4)
!6988 = distinct !DILexicalBlock(scope: !6989, file: !6704, line: 258, column: 4)
!6989 = distinct !DILexicalBlock(scope: !6990, file: !6704, line: 258, column: 4)
!6990 = distinct !DILexicalBlock(scope: !6991, file: !6704, line: 258, column: 4)
!6991 = distinct !DILexicalBlock(scope: !6982, file: !6704, line: 256, column: 50)
!6992 = !DILocation(line: 259, column: 24, scope: !6993)
!6993 = distinct !DILexicalBlock(scope: !6991, file: !6704, line: 259, column: 8)
!6994 = !DILocation(line: 259, column: 8, scope: !6991)
!6995 = !DILocation(line: 261, column: 15, scope: !6996)
!6996 = distinct !DILexicalBlock(scope: !6993, file: !6704, line: 259, column: 30)
!6997 = !DILocation(line: 262, column: 4, scope: !6996)
!6998 = !DILocation(line: 265, column: 12, scope: !6999)
!6999 = distinct !DILexicalBlock(scope: !6925, file: !6704, line: 265, column: 6)
!7000 = !DILocation(line: 265, column: 17, scope: !6999)
!7001 = !DILocation(line: 265, column: 42, scope: !6999)
!7002 = !DILocation(line: 265, column: 6, scope: !6925)
!7003 = !DILocation(line: 266, column: 3, scope: !7004)
!7004 = distinct !DILexicalBlock(scope: !7005, file: !6704, line: 266, column: 3)
!7005 = distinct !DILexicalBlock(scope: !7006, file: !6704, line: 266, column: 3)
!7006 = distinct !DILexicalBlock(scope: !7007, file: !6704, line: 266, column: 3)
!7007 = distinct !DILexicalBlock(scope: !7008, file: !6704, line: 266, column: 3)
!7008 = distinct !DILexicalBlock(scope: !6999, file: !6704, line: 265, column: 48)
!7009 = !DILocation(line: 267, column: 2, scope: !7008)
!7010 = !DILocation(line: 269, column: 12, scope: !7011)
!7011 = distinct !DILexicalBlock(scope: !6925, file: !6704, line: 269, column: 6)
!7012 = !DILocation(line: 269, column: 17, scope: !7011)
!7013 = !DILocation(line: 269, column: 41, scope: !7011)
!7014 = !DILocation(line: 269, column: 6, scope: !6925)
!7015 = !DILocation(line: 270, column: 3, scope: !7016)
!7016 = distinct !DILexicalBlock(scope: !7017, file: !6704, line: 270, column: 3)
!7017 = distinct !DILexicalBlock(scope: !7018, file: !6704, line: 270, column: 3)
!7018 = distinct !DILexicalBlock(scope: !7019, file: !6704, line: 270, column: 3)
!7019 = distinct !DILexicalBlock(scope: !7020, file: !6704, line: 270, column: 3)
!7020 = distinct !DILexicalBlock(scope: !7011, file: !6704, line: 269, column: 47)
!7021 = !DILocation(line: 272, column: 2, scope: !7020)
!7022 = !DILocation(line: 288, column: 12, scope: !6939)
!7023 = !DILocation(line: 288, column: 17, scope: !6939)
!7024 = !DILocation(line: 288, column: 41, scope: !6939)
!7025 = !DILocation(line: 289, column: 9, scope: !6939)
!7026 = !DILocation(line: 289, column: 14, scope: !6939)
!7027 = !DILocation(line: 288, column: 6, scope: !6925)
!7028 = !DILocation(line: 308, column: 12, scope: !6937)
!7029 = !DILocation(line: 308, column: 17, scope: !6937)
!7030 = !DILocation(line: 308, column: 7, scope: !6938)
!7031 = !DILocation(line: 310, column: 6, scope: !6936)
!7032 = !DILocation(line: 309, column: 29, scope: !6936)
!7033 = !DILocation(line: 0, scope: !6936)
!7034 = !DILocation(line: 312, column: 8, scope: !7035)
!7035 = distinct !DILexicalBlock(scope: !6936, file: !6704, line: 312, column: 8)
!7036 = !DILocation(line: 312, column: 8, scope: !6936)
!7037 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !7038, file: !6394, line: 1099, type: !152)
!7038 = distinct !DISubprogram(name: "__set_PSP", scope: !6394, file: !6394, line: 1099, type: !6491, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2845, retainedNodes: !7039)
!7039 = !{!7037}
!7040 = !DILocation(line: 0, scope: !7038, inlinedAt: !7041)
!7041 = distinct !DILocation(line: 338, column: 5, scope: !7042)
!7042 = distinct !DILexicalBlock(scope: !7035, file: !6704, line: 312, column: 23)
!7043 = !DILocation(line: 1101, column: 3, scope: !7038, inlinedAt: !7041)
!7044 = !{i64 4147530}
!7045 = !DILocation(line: 341, column: 4, scope: !7042)
!7046 = !DILocation(line: 342, column: 5, scope: !7047)
!7047 = distinct !DILexicalBlock(scope: !7048, file: !6704, line: 342, column: 5)
!7048 = distinct !DILexicalBlock(scope: !7049, file: !6704, line: 342, column: 5)
!7049 = distinct !DILexicalBlock(scope: !7035, file: !6704, line: 341, column: 11)
!7050 = !DILocation(line: 342, column: 5, scope: !7048)
!7051 = !DILocation(line: 342, column: 5, scope: !7052)
!7052 = distinct !DILexicalBlock(scope: !7047, file: !6704, line: 342, column: 5)
!7053 = !DILocation(line: 360, column: 12, scope: !7054)
!7054 = distinct !DILexicalBlock(scope: !6925, file: !6704, line: 360, column: 6)
!7055 = !DILocation(line: 360, column: 17, scope: !7054)
!7056 = !DILocation(line: 360, column: 41, scope: !7054)
!7057 = !DILocation(line: 360, column: 6, scope: !6925)
!7058 = !DILocation(line: 361, column: 14, scope: !7059)
!7059 = distinct !DILexicalBlock(scope: !7054, file: !6704, line: 360, column: 47)
!7060 = !DILocation(line: 362, column: 2, scope: !7059)
!7061 = !DILocation(line: 366, column: 12, scope: !6925)
!7062 = !DILocation(line: 369, column: 15, scope: !6925)
!7063 = !DILocation(line: 371, column: 2, scope: !6925)
!7064 = distinct !DISubprogram(name: "bus_fault", scope: !6704, file: !6704, line: 383, type: !7065, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2845, retainedNodes: !7067)
!7065 = !DISubroutineType(types: !7066)
!7066 = !{!107, !2873, !107, !6777}
!7067 = !{!7068, !7069, !7070, !7071, !7072}
!7068 = !DILocalVariable(name: "esf", arg: 1, scope: !7064, file: !6704, line: 383, type: !2873)
!7069 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7064, file: !6704, line: 383, type: !107)
!7070 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7064, file: !6704, line: 383, type: !6777)
!7071 = !DILocalVariable(name: "reason", scope: !7064, file: !6704, line: 385, type: !152)
!7072 = !DILocalVariable(name: "bfar", scope: !7073, file: !6704, line: 405, type: !152)
!7073 = distinct !DILexicalBlock(scope: !7074, file: !6704, line: 395, column: 42)
!7074 = distinct !DILexicalBlock(scope: !7064, file: !6704, line: 395, column: 6)
!7075 = !DILocation(line: 0, scope: !7064)
!7076 = !DILocation(line: 387, column: 2, scope: !7077)
!7077 = distinct !DILexicalBlock(scope: !7078, file: !6704, line: 387, column: 2)
!7078 = distinct !DILexicalBlock(scope: !7079, file: !6704, line: 387, column: 2)
!7079 = distinct !DILexicalBlock(scope: !7080, file: !6704, line: 387, column: 2)
!7080 = distinct !DILexicalBlock(scope: !7064, file: !6704, line: 387, column: 2)
!7081 = !DILocation(line: 389, column: 11, scope: !7082)
!7082 = distinct !DILexicalBlock(scope: !7064, file: !6704, line: 389, column: 6)
!7083 = !DILocation(line: 389, column: 16, scope: !7082)
!7084 = !DILocation(line: 389, column: 6, scope: !7064)
!7085 = !DILocation(line: 390, column: 3, scope: !7086)
!7086 = distinct !DILexicalBlock(scope: !7087, file: !6704, line: 390, column: 3)
!7087 = distinct !DILexicalBlock(scope: !7088, file: !6704, line: 390, column: 3)
!7088 = distinct !DILexicalBlock(scope: !7089, file: !6704, line: 390, column: 3)
!7089 = distinct !DILexicalBlock(scope: !7090, file: !6704, line: 390, column: 3)
!7090 = distinct !DILexicalBlock(scope: !7082, file: !6704, line: 389, column: 39)
!7091 = !DILocation(line: 391, column: 2, scope: !7090)
!7092 = !DILocation(line: 392, column: 11, scope: !7093)
!7093 = distinct !DILexicalBlock(scope: !7064, file: !6704, line: 392, column: 6)
!7094 = !DILocation(line: 392, column: 16, scope: !7093)
!7095 = !DILocation(line: 392, column: 6, scope: !7064)
!7096 = !DILocation(line: 393, column: 3, scope: !7097)
!7097 = distinct !DILexicalBlock(scope: !7098, file: !6704, line: 393, column: 3)
!7098 = distinct !DILexicalBlock(scope: !7099, file: !6704, line: 393, column: 3)
!7099 = distinct !DILexicalBlock(scope: !7100, file: !6704, line: 393, column: 3)
!7100 = distinct !DILexicalBlock(scope: !7101, file: !6704, line: 393, column: 3)
!7101 = distinct !DILexicalBlock(scope: !7093, file: !6704, line: 392, column: 41)
!7102 = !DILocation(line: 394, column: 2, scope: !7101)
!7103 = !DILocation(line: 395, column: 11, scope: !7074)
!7104 = !DILocation(line: 395, column: 16, scope: !7074)
!7105 = !DILocation(line: 395, column: 6, scope: !7064)
!7106 = !DILocation(line: 396, column: 3, scope: !7107)
!7107 = distinct !DILexicalBlock(scope: !7108, file: !6704, line: 396, column: 3)
!7108 = distinct !DILexicalBlock(scope: !7109, file: !6704, line: 396, column: 3)
!7109 = distinct !DILexicalBlock(scope: !7110, file: !6704, line: 396, column: 3)
!7110 = distinct !DILexicalBlock(scope: !7073, file: !6704, line: 396, column: 3)
!7111 = !DILocation(line: 405, column: 3, scope: !7073)
!7112 = !DILocation(line: 0, scope: !7073)
!7113 = !DILocation(line: 407, column: 13, scope: !7114)
!7114 = distinct !DILexicalBlock(scope: !7073, file: !6704, line: 407, column: 7)
!7115 = !DILocation(line: 407, column: 18, scope: !7114)
!7116 = !DILocation(line: 407, column: 44, scope: !7114)
!7117 = !DILocation(line: 407, column: 7, scope: !7073)
!7118 = !DILocation(line: 408, column: 4, scope: !7119)
!7119 = distinct !DILexicalBlock(scope: !7120, file: !6704, line: 408, column: 4)
!7120 = distinct !DILexicalBlock(scope: !7121, file: !6704, line: 408, column: 4)
!7121 = distinct !DILexicalBlock(scope: !7122, file: !6704, line: 408, column: 4)
!7122 = distinct !DILexicalBlock(scope: !7123, file: !6704, line: 408, column: 4)
!7123 = distinct !DILexicalBlock(scope: !7114, file: !6704, line: 407, column: 50)
!7124 = !DILocation(line: 409, column: 24, scope: !7125)
!7125 = distinct !DILexicalBlock(scope: !7123, file: !6704, line: 409, column: 8)
!7126 = !DILocation(line: 409, column: 8, scope: !7123)
!7127 = !DILocation(line: 411, column: 15, scope: !7128)
!7128 = distinct !DILexicalBlock(scope: !7125, file: !6704, line: 409, column: 30)
!7129 = !DILocation(line: 412, column: 4, scope: !7128)
!7130 = !DILocation(line: 415, column: 11, scope: !7131)
!7131 = distinct !DILexicalBlock(scope: !7064, file: !6704, line: 415, column: 6)
!7132 = !DILocation(line: 415, column: 16, scope: !7131)
!7133 = !DILocation(line: 415, column: 6, scope: !7064)
!7134 = !DILocation(line: 416, column: 3, scope: !7135)
!7135 = distinct !DILexicalBlock(scope: !7136, file: !6704, line: 416, column: 3)
!7136 = distinct !DILexicalBlock(scope: !7137, file: !6704, line: 416, column: 3)
!7137 = distinct !DILexicalBlock(scope: !7138, file: !6704, line: 416, column: 3)
!7138 = distinct !DILexicalBlock(scope: !7139, file: !6704, line: 416, column: 3)
!7139 = distinct !DILexicalBlock(scope: !7131, file: !6704, line: 415, column: 44)
!7140 = !DILocation(line: 417, column: 2, scope: !7139)
!7141 = !DILocation(line: 418, column: 12, scope: !7142)
!7142 = distinct !DILexicalBlock(scope: !7064, file: !6704, line: 418, column: 6)
!7143 = !DILocation(line: 418, column: 17, scope: !7142)
!7144 = !DILocation(line: 418, column: 41, scope: !7142)
!7145 = !DILocation(line: 418, column: 6, scope: !7064)
!7146 = !DILocation(line: 423, column: 18, scope: !7147)
!7147 = distinct !DILexicalBlock(scope: !7142, file: !6704, line: 423, column: 13)
!7148 = !DILocation(line: 423, column: 23, scope: !7147)
!7149 = !DILocation(line: 423, column: 13, scope: !7142)
!7150 = !DILocation(line: 0, scope: !7142)
!7151 = !DILocation(line: 524, column: 12, scope: !7064)
!7152 = !DILocation(line: 526, column: 15, scope: !7064)
!7153 = !DILocation(line: 528, column: 2, scope: !7064)
!7154 = distinct !DISubprogram(name: "usage_fault", scope: !6704, file: !6704, line: 539, type: !7155, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2845, retainedNodes: !7159)
!7155 = !DISubroutineType(types: !7156)
!7156 = !{!152, !7157}
!7157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7158, size: 32)
!7158 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2874)
!7159 = !{!7160, !7161}
!7160 = !DILocalVariable(name: "esf", arg: 1, scope: !7154, file: !6704, line: 539, type: !7157)
!7161 = !DILocalVariable(name: "reason", scope: !7154, file: !6704, line: 541, type: !152)
!7162 = !DILocation(line: 0, scope: !7154)
!7163 = !DILocation(line: 543, column: 2, scope: !7164)
!7164 = distinct !DILexicalBlock(scope: !7165, file: !6704, line: 543, column: 2)
!7165 = distinct !DILexicalBlock(scope: !7166, file: !6704, line: 543, column: 2)
!7166 = distinct !DILexicalBlock(scope: !7167, file: !6704, line: 543, column: 2)
!7167 = distinct !DILexicalBlock(scope: !7154, file: !6704, line: 543, column: 2)
!7168 = !DILocation(line: 546, column: 12, scope: !7169)
!7169 = distinct !DILexicalBlock(scope: !7154, file: !6704, line: 546, column: 6)
!7170 = !DILocation(line: 546, column: 17, scope: !7169)
!7171 = !DILocation(line: 546, column: 43, scope: !7169)
!7172 = !DILocation(line: 546, column: 6, scope: !7154)
!7173 = !DILocation(line: 547, column: 3, scope: !7174)
!7174 = distinct !DILexicalBlock(scope: !7175, file: !6704, line: 547, column: 3)
!7175 = distinct !DILexicalBlock(scope: !7176, file: !6704, line: 547, column: 3)
!7176 = distinct !DILexicalBlock(scope: !7177, file: !6704, line: 547, column: 3)
!7177 = distinct !DILexicalBlock(scope: !7178, file: !6704, line: 547, column: 3)
!7178 = distinct !DILexicalBlock(scope: !7169, file: !6704, line: 546, column: 49)
!7179 = !DILocation(line: 548, column: 2, scope: !7178)
!7180 = !DILocation(line: 549, column: 12, scope: !7181)
!7181 = distinct !DILexicalBlock(scope: !7154, file: !6704, line: 549, column: 6)
!7182 = !DILocation(line: 549, column: 17, scope: !7181)
!7183 = !DILocation(line: 549, column: 43, scope: !7181)
!7184 = !DILocation(line: 549, column: 6, scope: !7154)
!7185 = !DILocation(line: 550, column: 3, scope: !7186)
!7186 = distinct !DILexicalBlock(scope: !7187, file: !6704, line: 550, column: 3)
!7187 = distinct !DILexicalBlock(scope: !7188, file: !6704, line: 550, column: 3)
!7188 = distinct !DILexicalBlock(scope: !7189, file: !6704, line: 550, column: 3)
!7189 = distinct !DILexicalBlock(scope: !7190, file: !6704, line: 550, column: 3)
!7190 = distinct !DILexicalBlock(scope: !7181, file: !6704, line: 549, column: 49)
!7191 = !DILocation(line: 551, column: 2, scope: !7190)
!7192 = !DILocation(line: 567, column: 12, scope: !7193)
!7193 = distinct !DILexicalBlock(scope: !7154, file: !6704, line: 567, column: 6)
!7194 = !DILocation(line: 567, column: 17, scope: !7193)
!7195 = !DILocation(line: 567, column: 38, scope: !7193)
!7196 = !DILocation(line: 567, column: 6, scope: !7154)
!7197 = !DILocation(line: 568, column: 3, scope: !7198)
!7198 = distinct !DILexicalBlock(scope: !7199, file: !6704, line: 568, column: 3)
!7199 = distinct !DILexicalBlock(scope: !7200, file: !6704, line: 568, column: 3)
!7200 = distinct !DILexicalBlock(scope: !7201, file: !6704, line: 568, column: 3)
!7201 = distinct !DILexicalBlock(scope: !7202, file: !6704, line: 568, column: 3)
!7202 = distinct !DILexicalBlock(scope: !7193, file: !6704, line: 567, column: 44)
!7203 = !DILocation(line: 569, column: 2, scope: !7202)
!7204 = !DILocation(line: 570, column: 12, scope: !7205)
!7205 = distinct !DILexicalBlock(scope: !7154, file: !6704, line: 570, column: 6)
!7206 = !DILocation(line: 570, column: 17, scope: !7205)
!7207 = !DILocation(line: 570, column: 39, scope: !7205)
!7208 = !DILocation(line: 570, column: 6, scope: !7154)
!7209 = !DILocation(line: 571, column: 3, scope: !7210)
!7210 = distinct !DILexicalBlock(scope: !7211, file: !6704, line: 571, column: 3)
!7211 = distinct !DILexicalBlock(scope: !7212, file: !6704, line: 571, column: 3)
!7212 = distinct !DILexicalBlock(scope: !7213, file: !6704, line: 571, column: 3)
!7213 = distinct !DILexicalBlock(scope: !7214, file: !6704, line: 571, column: 3)
!7214 = distinct !DILexicalBlock(scope: !7205, file: !6704, line: 570, column: 45)
!7215 = !DILocation(line: 572, column: 2, scope: !7214)
!7216 = !DILocation(line: 573, column: 12, scope: !7217)
!7217 = distinct !DILexicalBlock(scope: !7154, file: !6704, line: 573, column: 6)
!7218 = !DILocation(line: 573, column: 17, scope: !7217)
!7219 = !DILocation(line: 573, column: 42, scope: !7217)
!7220 = !DILocation(line: 573, column: 6, scope: !7154)
!7221 = !DILocation(line: 574, column: 3, scope: !7222)
!7222 = distinct !DILexicalBlock(scope: !7223, file: !6704, line: 574, column: 3)
!7223 = distinct !DILexicalBlock(scope: !7224, file: !6704, line: 574, column: 3)
!7224 = distinct !DILexicalBlock(scope: !7225, file: !6704, line: 574, column: 3)
!7225 = distinct !DILexicalBlock(scope: !7226, file: !6704, line: 574, column: 3)
!7226 = distinct !DILexicalBlock(scope: !7217, file: !6704, line: 573, column: 48)
!7227 = !DILocation(line: 575, column: 2, scope: !7226)
!7228 = !DILocation(line: 576, column: 12, scope: !7229)
!7229 = distinct !DILexicalBlock(scope: !7154, file: !6704, line: 576, column: 6)
!7230 = !DILocation(line: 576, column: 17, scope: !7229)
!7231 = !DILocation(line: 576, column: 44, scope: !7229)
!7232 = !DILocation(line: 576, column: 6, scope: !7154)
!7233 = !DILocation(line: 577, column: 3, scope: !7234)
!7234 = distinct !DILexicalBlock(scope: !7235, file: !6704, line: 577, column: 3)
!7235 = distinct !DILexicalBlock(scope: !7236, file: !6704, line: 577, column: 3)
!7236 = distinct !DILexicalBlock(scope: !7237, file: !6704, line: 577, column: 3)
!7237 = distinct !DILexicalBlock(scope: !7238, file: !6704, line: 577, column: 3)
!7238 = distinct !DILexicalBlock(scope: !7229, file: !6704, line: 576, column: 50)
!7239 = !DILocation(line: 578, column: 2, scope: !7238)
!7240 = !DILocation(line: 581, column: 12, scope: !7154)
!7241 = !DILocation(line: 583, column: 2, scope: !7154)
!7242 = distinct !DISubprogram(name: "debug_monitor", scope: !6704, file: !6704, line: 632, type: !7243, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2845, retainedNodes: !7245)
!7243 = !DISubroutineType(types: !7244)
!7244 = !{null, !2873, !6777}
!7245 = !{!7246, !7247}
!7246 = !DILocalVariable(name: "esf", arg: 1, scope: !7242, file: !6704, line: 632, type: !2873)
!7247 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7242, file: !6704, line: 632, type: !6777)
!7248 = !DILocation(line: 0, scope: !7242)
!7249 = !DILocation(line: 634, column: 15, scope: !7242)
!7250 = !DILocation(line: 636, column: 2, scope: !7251)
!7251 = distinct !DILexicalBlock(scope: !7252, file: !6704, line: 636, column: 2)
!7252 = distinct !DILexicalBlock(scope: !7253, file: !6704, line: 636, column: 2)
!7253 = distinct !DILexicalBlock(scope: !7254, file: !6704, line: 636, column: 2)
!7254 = distinct !DILexicalBlock(scope: !7242, file: !6704, line: 636, column: 2)
!7255 = !DILocation(line: 652, column: 1, scope: !7242)
!7256 = distinct !DISubprogram(name: "reserved_exception", scope: !6704, file: !6704, line: 776, type: !7257, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2845, retainedNodes: !7259)
!7257 = !DISubroutineType(types: !7258)
!7258 = !{null, !7157, !107}
!7259 = !{!7260, !7261}
!7260 = !DILocalVariable(name: "esf", arg: 1, scope: !7256, file: !6704, line: 776, type: !7157)
!7261 = !DILocalVariable(name: "fault", arg: 2, scope: !7256, file: !6704, line: 776, type: !107)
!7262 = !DILocation(line: 0, scope: !7256)
!7263 = !DILocation(line: 780, column: 2, scope: !7264)
!7264 = distinct !DILexicalBlock(scope: !7265, file: !6704, line: 780, column: 2)
!7265 = distinct !DILexicalBlock(scope: !7266, file: !6704, line: 780, column: 2)
!7266 = distinct !DILexicalBlock(scope: !7267, file: !6704, line: 780, column: 2)
!7267 = distinct !DILexicalBlock(scope: !7256, file: !6704, line: 780, column: 2)
!7268 = !DILocation(line: 783, column: 1, scope: !7256)
!7269 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6704, file: !6704, line: 658, type: !7270, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2845, retainedNodes: !7272)
!7270 = !DISubroutineType(types: !7271)
!7271 = !{!145, !2873}
!7272 = !{!7273, !7274, !7275}
!7273 = !DILocalVariable(name: "esf", arg: 1, scope: !7269, file: !6704, line: 658, type: !2873)
!7274 = !DILocalVariable(name: "ret_addr", scope: !7269, file: !6704, line: 660, type: !2916)
!7275 = !DILocalVariable(name: "fault_insn", scope: !7269, file: !6704, line: 686, type: !197)
!7276 = !DILocation(line: 0, scope: !7269)
!7277 = !DILocation(line: 660, column: 46, scope: !7269)
!7278 = !DILocation(line: 660, column: 23, scope: !7269)
!7279 = !DILocation(line: 682, column: 11, scope: !7269)
!7280 = !DILocation(line: 271, column: 3, scope: !7281, inlinedAt: !7282)
!7281 = distinct !DISubprogram(name: "__DSB", scope: !6394, file: !6394, line: 269, type: !3227, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2845, retainedNodes: !2296)
!7282 = distinct !DILocation(line: 683, column: 2, scope: !7269)
!7283 = !{i64 4123665}
!7284 = !DILocation(line: 260, column: 3, scope: !7285, inlinedAt: !7286)
!7285 = distinct !DISubprogram(name: "__ISB", scope: !6394, file: !6394, line: 258, type: !3227, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2845, retainedNodes: !2296)
!7286 = distinct !DILocation(line: 684, column: 2, scope: !7269)
!7287 = !{i64 4123382}
!7288 = !DILocation(line: 686, column: 35, scope: !7269)
!7289 = !DILocation(line: 686, column: 24, scope: !7269)
!7290 = !DILocation(line: 688, column: 11, scope: !7269)
!7291 = !DILocation(line: 271, column: 3, scope: !7281, inlinedAt: !7292)
!7292 = distinct !DILocation(line: 689, column: 2, scope: !7269)
!7293 = !DILocation(line: 260, column: 3, scope: !7285, inlinedAt: !7294)
!7294 = distinct !DILocation(line: 690, column: 2, scope: !7269)
!7295 = !DILocation(line: 693, column: 45, scope: !7296)
!7296 = distinct !DILexicalBlock(scope: !7269, file: !6704, line: 693, column: 6)
!7297 = !DILocation(line: 699, column: 1, scope: !7269)
!7298 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6704, file: !6704, line: 1107, type: !3227, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2845, retainedNodes: !2296)
!7299 = !DILocation(line: 1111, column: 11, scope: !7298)
!7300 = !DILocation(line: 1136, column: 1, scope: !7298)
!7301 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !7302, file: !7302, line: 26, type: !3227, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2917, retainedNodes: !7303)
!7302 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7303 = !{!7304}
!7304 = !DILocalVariable(name: "irq", scope: !7301, file: !7302, line: 28, type: !107)
!7305 = !DILocation(line: 0, scope: !7301)
!7306 = !DILocation(line: 30, column: 2, scope: !7307)
!7307 = distinct !DILexicalBlock(scope: !7301, file: !7302, line: 30, column: 2)
!7308 = !DILocation(line: 31, column: 3, scope: !7309)
!7309 = distinct !DILexicalBlock(scope: !7310, file: !7302, line: 30, column: 39)
!7310 = distinct !DILexicalBlock(scope: !7307, file: !7302, line: 30, column: 2)
!7311 = !DILocation(line: 30, column: 35, scope: !7310)
!7312 = !DILocation(line: 30, column: 13, scope: !7310)
!7313 = distinct !{!7313, !7306, !7314}
!7314 = !DILocation(line: 32, column: 2, scope: !7307)
!7315 = !DILocation(line: 33, column: 1, scope: !7301)
!7316 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !463, file: !463, line: 1814, type: !6434, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2917, retainedNodes: !7317)
!7317 = !{!7318, !7319}
!7318 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7316, file: !463, line: 1814, type: !932)
!7319 = !DILocalVariable(name: "priority", arg: 2, scope: !7316, file: !463, line: 1814, type: !152)
!7320 = !DILocation(line: 0, scope: !7316)
!7321 = !DILocation(line: 1816, column: 7, scope: !7316)
!7322 = !DILocation(line: 0, scope: !7323)
!7323 = distinct !DILexicalBlock(scope: !7316, file: !463, line: 1816, column: 7)
!7324 = !DILocation(line: 1824, column: 1, scope: !7316)
!7325 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !7326, file: !7326, line: 27, type: !7327, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2962, retainedNodes: !7433)
!7326 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7327 = !DISubroutineType(types: !7328)
!7328 = !{null, !7329}
!7329 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !7330)
!7330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7331, size: 32)
!7331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !7332)
!7332 = !{!7333, !7391, !7403, !7404, !7405, !7406, !7407, !7413, !7428}
!7333 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7331, file: !309, line: 247, baseType: !7334, size: 384)
!7334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !7335)
!7335 = !{!7336, !7360, !7367, !7368, !7369, !7378, !7379, !7380}
!7336 = !DIDerivedType(tag: DW_TAG_member, scope: !7334, file: !309, line: 60, baseType: !7337, size: 64)
!7337 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7334, file: !309, line: 60, size: 64, elements: !7338)
!7338 = !{!7339, !7354}
!7339 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7337, file: !309, line: 61, baseType: !7340, size: 64)
!7340 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !7341)
!7341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !7342)
!7342 = !{!7343, !7349}
!7343 = !DIDerivedType(tag: DW_TAG_member, scope: !7341, file: !319, line: 38, baseType: !7344, size: 32)
!7344 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7341, file: !319, line: 38, size: 32, elements: !7345)
!7345 = !{!7346, !7348}
!7346 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7344, file: !319, line: 39, baseType: !7347, size: 32)
!7347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7341, size: 32)
!7348 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7344, file: !319, line: 40, baseType: !7347, size: 32)
!7349 = !DIDerivedType(tag: DW_TAG_member, scope: !7341, file: !319, line: 42, baseType: !7350, size: 32, offset: 32)
!7350 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7341, file: !319, line: 42, size: 32, elements: !7351)
!7351 = !{!7352, !7353}
!7352 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7350, file: !319, line: 43, baseType: !7347, size: 32)
!7353 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7350, file: !319, line: 44, baseType: !7347, size: 32)
!7354 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7337, file: !309, line: 62, baseType: !7355, size: 64)
!7355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !7356)
!7356 = !{!7357}
!7357 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7355, file: !335, line: 50, baseType: !7358, size: 64)
!7358 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7359, size: 64, elements: !340)
!7359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7355, size: 32)
!7360 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7334, file: !309, line: 68, baseType: !7361, size: 32, offset: 64)
!7361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7362, size: 32)
!7362 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !7363)
!7363 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !7364)
!7364 = !{!7365}
!7365 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7363, file: !345, line: 232, baseType: !7366, size: 64)
!7366 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !7341)
!7367 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7334, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!7368 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7334, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!7369 = !DIDerivedType(tag: DW_TAG_member, scope: !7334, file: !309, line: 90, baseType: !7370, size: 16, offset: 112)
!7370 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7334, file: !309, line: 90, size: 16, elements: !7371)
!7371 = !{!7372, !7377}
!7372 = !DIDerivedType(tag: DW_TAG_member, scope: !7370, file: !309, line: 91, baseType: !7373, size: 16)
!7373 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7370, file: !309, line: 91, size: 16, elements: !7374)
!7374 = !{!7375, !7376}
!7375 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7373, file: !309, line: 96, baseType: !359, size: 8)
!7376 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7373, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!7377 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7370, file: !309, line: 100, baseType: !197, size: 16)
!7378 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7334, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!7379 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7334, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!7380 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7334, file: !309, line: 131, baseType: !7381, size: 192, offset: 192)
!7381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !7382)
!7382 = !{!7383, !7384, !7390}
!7383 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7381, file: !345, line: 245, baseType: !7340, size: 64)
!7384 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7381, file: !345, line: 246, baseType: !7385, size: 32, offset: 64)
!7385 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !7386)
!7386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7387, size: 32)
!7387 = !DISubroutineType(types: !7388)
!7388 = !{null, !7389}
!7389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7381, size: 32)
!7390 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7381, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!7391 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7331, file: !309, line: 250, baseType: !7392, size: 288, offset: 384)
!7392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !7393)
!7393 = !{!7394, !7395, !7396, !7397, !7398, !7399, !7400, !7401, !7402}
!7394 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7392, file: !379, line: 26, baseType: !152, size: 32)
!7395 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7392, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!7396 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7392, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!7397 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7392, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!7398 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7392, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!7399 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7392, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!7400 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7392, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!7401 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7392, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!7402 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7392, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!7403 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7331, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!7404 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7331, file: !309, line: 256, baseType: !7362, size: 64, offset: 704)
!7405 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7331, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!7406 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7331, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!7407 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7331, file: !309, line: 300, baseType: !7408, size: 96, offset: 1056)
!7408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !7409)
!7409 = !{!7410, !7411, !7412}
!7410 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7408, file: !309, line: 153, baseType: !22, size: 32)
!7411 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7408, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!7412 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7408, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!7413 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7331, file: !309, line: 325, baseType: !7414, size: 32, offset: 1152)
!7414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7415, size: 32)
!7415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !7416)
!7416 = !{!7417, !7423, !7424}
!7417 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7415, file: !406, line: 5074, baseType: !7418, size: 96)
!7418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !7419)
!7419 = !{!7420, !7421, !7422}
!7420 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7418, file: !410, line: 57, baseType: !413, size: 32)
!7421 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7418, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!7422 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7418, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!7423 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7415, file: !406, line: 5075, baseType: !7362, size: 64, offset: 96)
!7424 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7415, file: !406, line: 5076, baseType: !7425, size: 32, offset: 160)
!7425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !7426)
!7426 = !{!7427}
!7427 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !7425, file: !420, line: 52, baseType: !22, size: 32)
!7428 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7331, file: !309, line: 343, baseType: !7429, size: 64, offset: 1184)
!7429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !7430)
!7430 = !{!7431, !7432}
!7431 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7429, file: !379, line: 63, baseType: !152, size: 32)
!7432 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7429, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!7433 = !{!7434}
!7434 = !DILocalVariable(name: "thread", arg: 1, scope: !7325, file: !7326, line: 27, type: !7329)
!7435 = !DILocation(line: 0, scope: !7325)
!7436 = !DILocation(line: 29, column: 6, scope: !7437)
!7437 = distinct !DILexicalBlock(scope: !7325, file: !7326, line: 29, column: 6)
!7438 = !DILocation(line: 29, column: 15, scope: !7437)
!7439 = !DILocation(line: 29, column: 6, scope: !7325)
!7440 = !DILocation(line: 1031, column: 3, scope: !7441, inlinedAt: !7444)
!7441 = distinct !DISubprogram(name: "__get_IPSR", scope: !6394, file: !6394, line: 1027, type: !6481, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2962, retainedNodes: !7442)
!7442 = !{!7443}
!7443 = !DILocalVariable(name: "result", scope: !7441, file: !6394, line: 1029, type: !152)
!7444 = distinct !DILocation(line: 48, column: 10, scope: !7445, inlinedAt: !7449)
!7445 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7446, file: !7446, line: 46, type: !7447, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2962, retainedNodes: !2296)
!7446 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7447 = !DISubroutineType(types: !7448)
!7448 = !{!145}
!7449 = distinct !DILocation(line: 30, column: 7, scope: !7450)
!7450 = distinct !DILexicalBlock(scope: !7451, file: !7326, line: 30, column: 7)
!7451 = distinct !DILexicalBlock(scope: !7437, file: !7326, line: 29, column: 26)
!7452 = !{i64 4112513}
!7453 = !DILocation(line: 0, scope: !7441, inlinedAt: !7444)
!7454 = !DILocation(line: 48, column: 9, scope: !7445, inlinedAt: !7449)
!7455 = !DILocation(line: 30, column: 7, scope: !7451)
!7456 = !DILocation(line: 42, column: 14, scope: !7457)
!7457 = distinct !DILexicalBlock(scope: !7450, file: !7326, line: 30, column: 25)
!7458 = !DILocation(line: 48, column: 15, scope: !7457)
!7459 = !DILocation(line: 49, column: 3, scope: !7457)
!7460 = !DILocation(line: 52, column: 2, scope: !7325)
!7461 = !DILocation(line: 53, column: 1, scope: !7325)
!7462 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !304, file: !304, line: 127, type: !3227, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !2296)
!7463 = !DILocation(line: 134, column: 2, scope: !7462)
!7464 = !DILocation(line: 156, column: 1, scope: !7462)
!7465 = !DILocation(line: 0, scope: !303)
!7466 = !DILocation(line: 289, column: 36, scope: !7467)
!7467 = distinct !DILexicalBlock(scope: !303, file: !304, line: 285, column: 2)
!7468 = !DILocation(line: 289, column: 42, scope: !7467)
!7469 = !DILocation(line: 300, column: 36, scope: !303)
!7470 = !DILocation(line: 301, column: 35, scope: !303)
!7471 = !DILocation(line: 302, column: 37, scope: !303)
!7472 = !DILocation(line: 311, column: 2, scope: !303)
!7473 = !DILocation(line: 316, column: 1, scope: !303)
!7474 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !491, file: !491, line: 180, type: !3227, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !2296)
!7475 = !DILocation(line: 188, column: 12, scope: !7474)
!7476 = !DILocation(line: 271, column: 3, scope: !7477, inlinedAt: !7478)
!7477 = distinct !DISubprogram(name: "__DSB", scope: !6394, file: !6394, line: 269, type: !3227, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !2296)
!7478 = distinct !DILocation(line: 192, column: 2, scope: !7474)
!7479 = !{i64 4309013}
!7480 = !DILocation(line: 260, column: 3, scope: !7481, inlinedAt: !7482)
!7481 = distinct !DISubprogram(name: "__ISB", scope: !6394, file: !6394, line: 258, type: !3227, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !2296)
!7482 = distinct !DILocation(line: 193, column: 2, scope: !7474)
!7483 = !{i64 4308730}
!7484 = !DILocation(line: 194, column: 1, scope: !7474)
!7485 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !491, file: !491, line: 199, type: !3227, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !2296)
!7486 = !DILocation(line: 282, column: 3, scope: !7487, inlinedAt: !7488)
!7487 = distinct !DISubprogram(name: "__DMB", scope: !6394, file: !6394, line: 280, type: !3227, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !2296)
!7488 = distinct !DILocation(line: 202, column: 2, scope: !7485)
!7489 = !{i64 4309289}
!7490 = !DILocation(line: 205, column: 12, scope: !7485)
!7491 = !DILocation(line: 206, column: 1, scope: !7485)
!7492 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !491, file: !491, line: 275, type: !7493, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7506)
!7493 = !DISubroutineType(types: !7494)
!7494 = !{null, !7495, !2078, !6671, !6671}
!7495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7496, size: 32)
!7496 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7497)
!7497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !435, line: 52, size: 96, elements: !7498)
!7498 = !{!7499, !7500, !7501}
!7499 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7497, file: !435, line: 53, baseType: !22, size: 32)
!7500 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7497, file: !435, line: 54, baseType: !185, size: 32, offset: 32)
!7501 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7497, file: !435, line: 55, baseType: !7502, size: 32, offset: 64)
!7502 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !441, line: 151, baseType: !7503)
!7503 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !441, line: 149, size: 32, elements: !7504)
!7504 = !{!7505}
!7505 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !7503, file: !441, line: 150, baseType: !152, size: 32)
!7506 = !{!7507, !7508, !7509, !7510}
!7507 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7492, file: !491, line: 276, type: !7495)
!7508 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7492, file: !491, line: 276, type: !2078)
!7509 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !7492, file: !491, line: 277, type: !6671)
!7510 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7492, file: !491, line: 277, type: !6671)
!7511 = !DILocation(line: 0, scope: !7492)
!7512 = !DILocation(line: 279, column: 6, scope: !7513)
!7513 = distinct !DILexicalBlock(scope: !7492, file: !491, line: 279, column: 6)
!7514 = !DILocation(line: 280, column: 57, scope: !7513)
!7515 = !DILocation(line: 279, column: 6, scope: !7492)
!7516 = !DILocation(line: 282, column: 3, scope: !7517)
!7517 = distinct !DILexicalBlock(scope: !7518, file: !491, line: 282, column: 3)
!7518 = distinct !DILexicalBlock(scope: !7519, file: !491, line: 282, column: 3)
!7519 = distinct !DILexicalBlock(scope: !7520, file: !491, line: 282, column: 3)
!7520 = distinct !DILexicalBlock(scope: !7513, file: !491, line: 280, column: 69)
!7521 = !DILocation(line: 285, column: 1, scope: !7492)
!7522 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !7523, file: !7523, line: 220, type: !7524, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7526)
!7523 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7524 = !DISubroutineType(types: !7525)
!7525 = !{!107, !7495, !2078, !6671, !6671}
!7526 = !{!7527, !7528, !7529, !7530, !7531}
!7527 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7522, file: !7523, line: 221, type: !7495)
!7528 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7522, file: !7523, line: 221, type: !2078)
!7529 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !7522, file: !7523, line: 222, type: !6671)
!7530 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7522, file: !7523, line: 223, type: !6671)
!7531 = !DILocalVariable(name: "mpu_reg_index", scope: !7522, file: !7523, line: 225, type: !107)
!7532 = !DILocation(line: 0, scope: !7522)
!7533 = !DILocation(line: 225, column: 22, scope: !7522)
!7534 = !DILocation(line: 233, column: 18, scope: !7522)
!7535 = !DILocation(line: 236, column: 23, scope: !7522)
!7536 = !DILocation(line: 236, column: 21, scope: !7522)
!7537 = !DILocation(line: 238, column: 2, scope: !7522)
!7538 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !491, file: !491, line: 105, type: !7539, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7541)
!7539 = !DISubroutineType(types: !7540)
!7540 = !{!107, !7495, !195, !195, !145}
!7541 = !{!7542, !7543, !7544, !7545, !7546, !7547}
!7542 = !DILocalVariable(name: "regions", arg: 1, scope: !7538, file: !491, line: 106, type: !7495)
!7543 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7538, file: !491, line: 106, type: !195)
!7544 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !7538, file: !491, line: 106, type: !195)
!7545 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !7538, file: !491, line: 107, type: !145)
!7546 = !DILocalVariable(name: "i", scope: !7538, file: !491, line: 109, type: !107)
!7547 = !DILocalVariable(name: "reg_index", scope: !7538, file: !491, line: 110, type: !107)
!7548 = !DILocation(line: 0, scope: !7538)
!7549 = !DILocation(line: 110, column: 18, scope: !7538)
!7550 = !DILocation(line: 112, column: 16, scope: !7551)
!7551 = distinct !DILexicalBlock(scope: !7552, file: !491, line: 112, column: 2)
!7552 = distinct !DILexicalBlock(scope: !7538, file: !491, line: 112, column: 2)
!7553 = !DILocation(line: 112, column: 2, scope: !7552)
!7554 = !DILocation(line: 113, column: 7, scope: !7555)
!7555 = distinct !DILexicalBlock(scope: !7556, file: !491, line: 113, column: 7)
!7556 = distinct !DILexicalBlock(scope: !7551, file: !491, line: 112, column: 36)
!7557 = !DILocation(line: 113, column: 18, scope: !7555)
!7558 = !DILocation(line: 113, column: 23, scope: !7555)
!7559 = !DILocation(line: 113, column: 7, scope: !7556)
!7560 = !DILocation(line: 118, column: 23, scope: !7561)
!7561 = distinct !DILexicalBlock(scope: !7556, file: !491, line: 118, column: 7)
!7562 = !DILocation(line: 119, column: 7, scope: !7561)
!7563 = !DILocation(line: 118, column: 7, scope: !7556)
!7564 = !DILocation(line: 120, column: 4, scope: !7565)
!7565 = distinct !DILexicalBlock(scope: !7566, file: !491, line: 120, column: 4)
!7566 = distinct !DILexicalBlock(scope: !7567, file: !491, line: 120, column: 4)
!7567 = distinct !DILexicalBlock(scope: !7568, file: !491, line: 120, column: 4)
!7568 = distinct !DILexicalBlock(scope: !7569, file: !491, line: 120, column: 4)
!7569 = distinct !DILexicalBlock(scope: !7561, file: !491, line: 119, column: 45)
!7570 = !DILocation(line: 121, column: 4, scope: !7569)
!7571 = !DILocation(line: 124, column: 36, scope: !7556)
!7572 = !DILocation(line: 124, column: 15, scope: !7556)
!7573 = !DILocation(line: 126, column: 17, scope: !7574)
!7574 = distinct !DILexicalBlock(scope: !7556, file: !491, line: 126, column: 7)
!7575 = !DILocation(line: 126, column: 7, scope: !7556)
!7576 = !DILocation(line: 131, column: 12, scope: !7556)
!7577 = !DILocation(line: 132, column: 2, scope: !7556)
!7578 = !DILocation(line: 112, column: 32, scope: !7551)
!7579 = distinct !{!7579, !7553, !7580}
!7580 = !DILocation(line: 132, column: 2, scope: !7552)
!7581 = !DILocation(line: 135, column: 1, scope: !7538)
!7582 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !7523, file: !7523, line: 63, type: !7583, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7585)
!7583 = !DISubroutineType(types: !7584)
!7584 = !{!107, !7495}
!7585 = !{!7586, !7587}
!7586 = !DILocalVariable(name: "part", arg: 1, scope: !7582, file: !7523, line: 63, type: !7495)
!7587 = !DILocalVariable(name: "partition_is_valid", scope: !7582, file: !7523, line: 70, type: !107)
!7588 = !DILocation(line: 0, scope: !7582)
!7589 = !DILocation(line: 71, column: 11, scope: !7582)
!7590 = !DILocation(line: 71, column: 37, scope: !7582)
!7591 = !{i32 0, i32 33}
!7592 = !DILocation(line: 72, column: 3, scope: !7582)
!7593 = !DILocation(line: 71, column: 30, scope: !7582)
!7594 = !DILocation(line: 75, column: 11, scope: !7582)
!7595 = !DILocation(line: 75, column: 17, scope: !7582)
!7596 = !DILocation(line: 75, column: 38, scope: !7582)
!7597 = !DILocation(line: 77, column: 2, scope: !7582)
!7598 = distinct !DISubprogram(name: "mpu_configure_region", scope: !491, file: !491, line: 79, type: !7599, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7601)
!7599 = !DISubroutineType(types: !7600)
!7600 = !{!107, !2078, !7495}
!7601 = !{!7602, !7603, !7604}
!7602 = !DILocalVariable(name: "index", arg: 1, scope: !7598, file: !491, line: 79, type: !2078)
!7603 = !DILocalVariable(name: "new_region", arg: 2, scope: !7598, file: !491, line: 80, type: !7495)
!7604 = !DILocalVariable(name: "region_conf", scope: !7598, file: !491, line: 82, type: !480)
!7605 = !DILocation(line: 0, scope: !7598)
!7606 = !DILocation(line: 82, column: 2, scope: !7598)
!7607 = !DILocation(line: 82, column: 24, scope: !7598)
!7608 = !DILocation(line: 87, column: 33, scope: !7598)
!7609 = !DILocation(line: 87, column: 14, scope: !7598)
!7610 = !DILocation(line: 87, column: 19, scope: !7598)
!7611 = !DILocation(line: 91, column: 55, scope: !7598)
!7612 = !DILocation(line: 92, column: 16, scope: !7598)
!7613 = !DILocation(line: 92, column: 53, scope: !7598)
!7614 = !DILocation(line: 91, column: 2, scope: !7598)
!7615 = !DILocation(line: 95, column: 9, scope: !7598)
!7616 = !DILocation(line: 97, column: 1, scope: !7598)
!7617 = !DILocation(line: 95, column: 2, scope: !7598)
!7618 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !7523, file: !7523, line: 113, type: !7619, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7624)
!7619 = !DISubroutineType(types: !7620)
!7620 = !{null, !7621, !7622, !152, !152}
!7621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !486, size: 32)
!7622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7623, size: 32)
!7623 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7502)
!7624 = !{!7625, !7626, !7627, !7628}
!7625 = !DILocalVariable(name: "p_attr", arg: 1, scope: !7618, file: !7523, line: 114, type: !7621)
!7626 = !DILocalVariable(name: "attr", arg: 2, scope: !7618, file: !7523, line: 115, type: !7622)
!7627 = !DILocalVariable(name: "base", arg: 3, scope: !7618, file: !7523, line: 115, type: !152)
!7628 = !DILocalVariable(name: "size", arg: 4, scope: !7618, file: !7523, line: 115, type: !152)
!7629 = !DILocation(line: 0, scope: !7618)
!7630 = !DILocation(line: 127, column: 23, scope: !7618)
!7631 = !DILocation(line: 127, column: 35, scope: !7618)
!7632 = !DILocation(line: 127, column: 33, scope: !7618)
!7633 = !DILocation(line: 127, column: 10, scope: !7618)
!7634 = !DILocation(line: 127, column: 15, scope: !7618)
!7635 = !DILocation(line: 129, column: 1, scope: !7618)
!7636 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !491, file: !491, line: 57, type: !7637, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7639)
!7637 = !DISubroutineType(types: !7638)
!7638 = !{!107, !2078, !478}
!7639 = !{!7640, !7641}
!7640 = !DILocalVariable(name: "index", arg: 1, scope: !7636, file: !491, line: 57, type: !2078)
!7641 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7636, file: !491, line: 58, type: !478)
!7642 = !DILocation(line: 0, scope: !7636)
!7643 = !DILocation(line: 61, column: 6, scope: !7644)
!7644 = distinct !DILexicalBlock(scope: !7636, file: !491, line: 61, column: 6)
!7645 = !DILocation(line: 61, column: 12, scope: !7644)
!7646 = !DILocation(line: 61, column: 6, scope: !7636)
!7647 = !DILocation(line: 64, column: 3, scope: !7648)
!7648 = distinct !DILexicalBlock(scope: !7649, file: !491, line: 64, column: 3)
!7649 = distinct !DILexicalBlock(scope: !7650, file: !491, line: 64, column: 3)
!7650 = distinct !DILexicalBlock(scope: !7651, file: !491, line: 64, column: 3)
!7651 = distinct !DILexicalBlock(scope: !7652, file: !491, line: 64, column: 3)
!7652 = distinct !DILexicalBlock(scope: !7644, file: !491, line: 61, column: 40)
!7653 = !DILocation(line: 65, column: 3, scope: !7652)
!7654 = !DILocation(line: 71, column: 2, scope: !7636)
!7655 = !DILocation(line: 73, column: 2, scope: !7636)
!7656 = !DILocation(line: 74, column: 1, scope: !7636)
!7657 = distinct !DISubprogram(name: "region_init", scope: !7523, file: !7523, line: 29, type: !7658, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7660)
!7658 = !DISubroutineType(types: !7659)
!7659 = !{null, !6671, !478}
!7660 = !{!7661, !7662}
!7661 = !DILocalVariable(name: "index", arg: 1, scope: !7657, file: !7523, line: 29, type: !6671)
!7662 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7657, file: !7523, line: 30, type: !478)
!7663 = !DILocation(line: 0, scope: !7657)
!7664 = !DILocation(line: 33, column: 2, scope: !7657)
!7665 = !DILocation(line: 47, column: 28, scope: !7657)
!7666 = !DILocation(line: 47, column: 33, scope: !7657)
!7667 = !DILocation(line: 48, column: 26, scope: !7657)
!7668 = !DILocation(line: 47, column: 12, scope: !7657)
!7669 = !DILocation(line: 49, column: 32, scope: !7657)
!7670 = !DILocation(line: 49, column: 37, scope: !7657)
!7671 = !DILocation(line: 49, column: 12, scope: !7657)
!7672 = !DILocation(line: 53, column: 1, scope: !7657)
!7673 = distinct !DISubprogram(name: "set_region_number", scope: !7674, file: !7674, line: 32, type: !6491, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7675)
!7674 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7675 = !{!7676}
!7676 = !DILocalVariable(name: "index", arg: 1, scope: !7673, file: !7674, line: 32, type: !152)
!7677 = !DILocation(line: 0, scope: !7673)
!7678 = !DILocation(line: 34, column: 11, scope: !7673)
!7679 = !DILocation(line: 35, column: 1, scope: !7673)
!7680 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !7523, file: !7523, line: 88, type: !7681, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7683)
!7681 = !DISubroutineType(types: !7682)
!7682 = !{!152, !152}
!7683 = !{!7684}
!7684 = !DILocalVariable(name: "size", arg: 1, scope: !7680, file: !7523, line: 88, type: !152)
!7685 = !DILocation(line: 0, scope: !7680)
!7686 = !DILocation(line: 91, column: 11, scope: !7687)
!7687 = distinct !DILexicalBlock(scope: !7680, file: !7523, line: 91, column: 6)
!7688 = !DILocation(line: 91, column: 6, scope: !7680)
!7689 = !DILocation(line: 100, column: 11, scope: !7690)
!7690 = distinct !DILexicalBlock(scope: !7680, file: !7523, line: 100, column: 6)
!7691 = !DILocation(line: 100, column: 6, scope: !7680)
!7692 = !DILocation(line: 104, column: 35, scope: !7680)
!7693 = !DILocation(line: 104, column: 16, scope: !7680)
!7694 = !DILocation(line: 104, column: 50, scope: !7680)
!7695 = !DILocation(line: 104, column: 72, scope: !7680)
!7696 = !DILocation(line: 104, column: 2, scope: !7680)
!7697 = !DILocation(line: 106, column: 1, scope: !7680)
!7698 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !491, file: !491, line: 307, type: !7699, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7701)
!7699 = !DISubroutineType(types: !7700)
!7700 = !{null, !7495, !195}
!7701 = !{!7702, !7703}
!7702 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7698, file: !491, line: 308, type: !7495)
!7703 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7698, file: !491, line: 308, type: !195)
!7704 = !DILocation(line: 0, scope: !7698)
!7705 = !DILocation(line: 310, column: 6, scope: !7706)
!7706 = distinct !DILexicalBlock(scope: !7698, file: !491, line: 310, column: 6)
!7707 = !DILocation(line: 311, column: 3, scope: !7706)
!7708 = !DILocation(line: 310, column: 6, scope: !7698)
!7709 = !DILocation(line: 313, column: 3, scope: !7710)
!7710 = distinct !DILexicalBlock(scope: !7711, file: !491, line: 313, column: 3)
!7711 = distinct !DILexicalBlock(scope: !7712, file: !491, line: 313, column: 3)
!7712 = distinct !DILexicalBlock(scope: !7713, file: !491, line: 313, column: 3)
!7713 = distinct !DILexicalBlock(scope: !7706, file: !491, line: 311, column: 15)
!7714 = !DILocation(line: 316, column: 1, scope: !7698)
!7715 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !7523, file: !7523, line: 249, type: !7716, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7718)
!7716 = !DISubroutineType(types: !7717)
!7717 = !{!107, !7495, !195}
!7718 = !{!7719, !7720, !7721, !7722}
!7719 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7715, file: !7523, line: 250, type: !7495)
!7720 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7715, file: !7523, line: 250, type: !195)
!7721 = !DILocalVariable(name: "mpu_reg_index", scope: !7715, file: !7523, line: 252, type: !107)
!7722 = !DILocalVariable(name: "i", scope: !7723, file: !7523, line: 264, type: !107)
!7723 = distinct !DILexicalBlock(scope: !7724, file: !7523, line: 264, column: 3)
!7724 = distinct !DILexicalBlock(scope: !7725, file: !7523, line: 261, column: 32)
!7725 = distinct !DILexicalBlock(scope: !7715, file: !7523, line: 261, column: 6)
!7726 = !DILocation(line: 0, scope: !7715)
!7727 = !DILocation(line: 252, column: 22, scope: !7715)
!7728 = !DILocation(line: 258, column: 18, scope: !7715)
!7729 = !DILocation(line: 261, column: 20, scope: !7725)
!7730 = !DILocation(line: 261, column: 6, scope: !7715)
!7731 = !DILocation(line: 0, scope: !7723)
!7732 = !DILocation(line: 265, column: 4, scope: !7733)
!7733 = distinct !DILexicalBlock(scope: !7734, file: !7523, line: 264, column: 59)
!7734 = distinct !DILexicalBlock(scope: !7723, file: !7523, line: 264, column: 3)
!7735 = !DILocation(line: 264, column: 55, scope: !7734)
!7736 = !DILocation(line: 264, column: 33, scope: !7734)
!7737 = !DILocation(line: 264, column: 3, scope: !7723)
!7738 = distinct !{!7738, !7737, !7739}
!7739 = !DILocation(line: 266, column: 3, scope: !7723)
!7740 = !DILocation(line: 269, column: 2, scope: !7715)
!7741 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7742, file: !7742, line: 218, type: !6491, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7743)
!7742 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7743 = !{!7744}
!7744 = !DILocalVariable(name: "rnr", arg: 1, scope: !7741, file: !7742, line: 218, type: !152)
!7745 = !DILocation(line: 0, scope: !7741)
!7746 = !DILocation(line: 220, column: 12, scope: !7741)
!7747 = !DILocation(line: 221, column: 13, scope: !7741)
!7748 = !DILocation(line: 222, column: 1, scope: !7741)
!7749 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !491, file: !491, line: 326, type: !7750, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !7752)
!7750 = !DISubroutineType(types: !7751)
!7751 = !{!107}
!7752 = !{!7753}
!7753 = !DILocalVariable(name: "r_index", scope: !7749, file: !491, line: 328, type: !152)
!7754 = !DILocation(line: 330, column: 17, scope: !7755)
!7755 = distinct !DILexicalBlock(scope: !7749, file: !491, line: 330, column: 6)
!7756 = !DILocation(line: 330, column: 29, scope: !7755)
!7757 = !DILocation(line: 330, column: 6, scope: !7749)
!7758 = !DILocation(line: 337, column: 3, scope: !7759)
!7759 = distinct !DILexicalBlock(scope: !7760, file: !491, line: 337, column: 3)
!7760 = distinct !DILexicalBlock(scope: !7761, file: !491, line: 337, column: 3)
!7761 = distinct !DILexicalBlock(scope: !7762, file: !491, line: 337, column: 3)
!7762 = distinct !DILexicalBlock(scope: !7755, file: !491, line: 330, column: 50)
!7763 = !DILocation(line: 347, column: 2, scope: !7749)
!7764 = !DILocation(line: 0, scope: !7749)
!7765 = !DILocation(line: 364, column: 29, scope: !7766)
!7766 = distinct !DILexicalBlock(scope: !7767, file: !491, line: 364, column: 2)
!7767 = distinct !DILexicalBlock(scope: !7749, file: !491, line: 364, column: 2)
!7768 = !DILocation(line: 364, column: 2, scope: !7767)
!7769 = !DILocation(line: 365, column: 25, scope: !7770)
!7770 = distinct !DILexicalBlock(scope: !7766, file: !491, line: 364, column: 66)
!7771 = !DILocation(line: 365, column: 3, scope: !7770)
!7772 = !DILocation(line: 364, column: 62, scope: !7766)
!7773 = distinct !{!7773, !7768, !7774}
!7774 = !DILocation(line: 366, column: 2, scope: !7767)
!7775 = !DILocation(line: 369, column: 23, scope: !7749)
!7776 = !DILocation(line: 369, column: 21, scope: !7749)
!7777 = !DILocation(line: 372, column: 2, scope: !7749)
!7778 = !DILocation(line: 433, column: 2, scope: !7779)
!7779 = distinct !DILexicalBlock(scope: !7780, file: !491, line: 433, column: 2)
!7780 = distinct !DILexicalBlock(scope: !7749, file: !491, line: 433, column: 2)
!7781 = !DILocation(line: 433, column: 2, scope: !7780)
!7782 = !DILocation(line: 433, column: 2, scope: !7783)
!7783 = distinct !DILexicalBlock(scope: !7779, file: !491, line: 433, column: 2)
!7784 = !DILocation(line: 444, column: 1, scope: !7749)
!7785 = distinct !DISubprogram(name: "strcpy", scope: !7786, file: !7786, line: 20, type: !7787, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2990, retainedNodes: !7791)
!7786 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7787 = !DISubroutineType(types: !7788)
!7788 = !{!193, !7789, !7790}
!7789 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !193)
!7790 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !118)
!7791 = !{!7792, !7793, !7794}
!7792 = !DILocalVariable(name: "d", arg: 1, scope: !7785, file: !7786, line: 20, type: !7789)
!7793 = !DILocalVariable(name: "s", arg: 2, scope: !7785, file: !7786, line: 20, type: !7790)
!7794 = !DILocalVariable(name: "dest", scope: !7785, file: !7786, line: 22, type: !193)
!7795 = !DILocation(line: 0, scope: !7785)
!7796 = !DILocation(line: 24, column: 9, scope: !7785)
!7797 = !DILocation(line: 24, column: 12, scope: !7785)
!7798 = !DILocation(line: 24, column: 2, scope: !7785)
!7799 = !DILocation(line: 25, column: 6, scope: !7800)
!7800 = distinct !DILexicalBlock(scope: !7785, file: !7786, line: 24, column: 21)
!7801 = !DILocation(line: 26, column: 4, scope: !7800)
!7802 = !DILocation(line: 27, column: 4, scope: !7800)
!7803 = distinct !{!7803, !7798, !7804}
!7804 = !DILocation(line: 28, column: 2, scope: !7785)
!7805 = !DILocation(line: 30, column: 5, scope: !7785)
!7806 = !DILocation(line: 32, column: 2, scope: !7785)
!7807 = distinct !DISubprogram(name: "strncpy", scope: !7786, file: !7786, line: 42, type: !7808, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2990, retainedNodes: !7810)
!7808 = !DISubroutineType(types: !7809)
!7809 = !{!193, !7789, !7790, !185}
!7810 = !{!7811, !7812, !7813, !7814}
!7811 = !DILocalVariable(name: "d", arg: 1, scope: !7807, file: !7786, line: 42, type: !7789)
!7812 = !DILocalVariable(name: "s", arg: 2, scope: !7807, file: !7786, line: 42, type: !7790)
!7813 = !DILocalVariable(name: "n", arg: 3, scope: !7807, file: !7786, line: 42, type: !185)
!7814 = !DILocalVariable(name: "dest", scope: !7807, file: !7786, line: 44, type: !193)
!7815 = !DILocation(line: 0, scope: !7807)
!7816 = !DILocation(line: 46, column: 12, scope: !7807)
!7817 = !DILocation(line: 46, column: 17, scope: !7807)
!7818 = !DILocation(line: 46, column: 20, scope: !7807)
!7819 = !DILocation(line: 46, column: 23, scope: !7807)
!7820 = !DILocation(line: 46, column: 2, scope: !7807)
!7821 = !DILocation(line: 47, column: 6, scope: !7822)
!7822 = distinct !DILexicalBlock(scope: !7807, file: !7786, line: 46, column: 32)
!7823 = !DILocation(line: 48, column: 4, scope: !7822)
!7824 = !DILocation(line: 49, column: 4, scope: !7822)
!7825 = !DILocation(line: 50, column: 4, scope: !7822)
!7826 = distinct !{!7826, !7820, !7827}
!7827 = !DILocation(line: 51, column: 2, scope: !7807)
!7828 = !DILocation(line: 54, column: 6, scope: !7829)
!7829 = distinct !DILexicalBlock(scope: !7807, file: !7786, line: 53, column: 16)
!7830 = !DILocation(line: 55, column: 4, scope: !7829)
!7831 = !DILocation(line: 56, column: 4, scope: !7829)
!7832 = !DILocation(line: 53, column: 11, scope: !7807)
!7833 = !DILocation(line: 53, column: 2, scope: !7807)
!7834 = distinct !{!7834, !7833, !7835}
!7835 = !DILocation(line: 57, column: 2, scope: !7807)
!7836 = !DILocation(line: 59, column: 2, scope: !7807)
!7837 = distinct !DISubprogram(name: "strchr", scope: !7786, file: !7786, line: 69, type: !7838, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2990, retainedNodes: !7840)
!7838 = !DISubroutineType(types: !7839)
!7839 = !{!193, !118, !107}
!7840 = !{!7841, !7842, !7843}
!7841 = !DILocalVariable(name: "s", arg: 1, scope: !7837, file: !7786, line: 69, type: !118)
!7842 = !DILocalVariable(name: "c", arg: 2, scope: !7837, file: !7786, line: 69, type: !107)
!7843 = !DILocalVariable(name: "tmp", scope: !7837, file: !7786, line: 71, type: !120)
!7844 = !DILocation(line: 0, scope: !7837)
!7845 = !DILocation(line: 73, column: 2, scope: !7837)
!7846 = !DILocation(line: 73, column: 10, scope: !7837)
!7847 = !DILocation(line: 73, column: 13, scope: !7837)
!7848 = !DILocation(line: 73, column: 21, scope: !7837)
!7849 = !DILocation(line: 74, column: 4, scope: !7850)
!7850 = distinct !DILexicalBlock(scope: !7837, file: !7786, line: 73, column: 38)
!7851 = distinct !{!7851, !7845, !7852}
!7852 = !DILocation(line: 75, column: 2, scope: !7837)
!7853 = !DILocation(line: 77, column: 9, scope: !7837)
!7854 = !DILocation(line: 77, column: 2, scope: !7837)
!7855 = distinct !DISubprogram(name: "strrchr", scope: !7786, file: !7786, line: 87, type: !7838, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2990, retainedNodes: !7856)
!7856 = !{!7857, !7858, !7859}
!7857 = !DILocalVariable(name: "s", arg: 1, scope: !7855, file: !7786, line: 87, type: !118)
!7858 = !DILocalVariable(name: "c", arg: 2, scope: !7855, file: !7786, line: 87, type: !107)
!7859 = !DILocalVariable(name: "match", scope: !7855, file: !7786, line: 89, type: !193)
!7860 = !DILocation(line: 0, scope: !7855)
!7861 = !DILocation(line: 91, column: 2, scope: !7855)
!7862 = !DILocation(line: 92, column: 7, scope: !7863)
!7863 = distinct !DILexicalBlock(scope: !7864, file: !7786, line: 92, column: 7)
!7864 = distinct !DILexicalBlock(scope: !7855, file: !7786, line: 91, column: 5)
!7865 = !DILocation(line: 92, column: 10, scope: !7863)
!7866 = !DILocation(line: 92, column: 7, scope: !7864)
!7867 = !DILocation(line: 95, column: 13, scope: !7855)
!7868 = !DILocation(line: 95, column: 2, scope: !7864)
!7869 = distinct !{!7869, !7861, !7870}
!7870 = !DILocation(line: 95, column: 15, scope: !7855)
!7871 = !DILocation(line: 97, column: 2, scope: !7855)
!7872 = distinct !DISubprogram(name: "strlen", scope: !7786, file: !7786, line: 107, type: !7873, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2990, retainedNodes: !7875)
!7873 = !DISubroutineType(types: !7874)
!7874 = !{!185, !118}
!7875 = !{!7876, !7877}
!7876 = !DILocalVariable(name: "s", arg: 1, scope: !7872, file: !7786, line: 107, type: !118)
!7877 = !DILocalVariable(name: "n", scope: !7872, file: !7786, line: 109, type: !185)
!7878 = !DILocation(line: 0, scope: !7872)
!7879 = !DILocation(line: 111, column: 9, scope: !7872)
!7880 = !DILocation(line: 111, column: 12, scope: !7872)
!7881 = !DILocation(line: 111, column: 2, scope: !7872)
!7882 = !DILocation(line: 112, column: 4, scope: !7883)
!7883 = distinct !DILexicalBlock(scope: !7872, file: !7786, line: 111, column: 21)
!7884 = !DILocation(line: 113, column: 4, scope: !7883)
!7885 = distinct !{!7885, !7881, !7886}
!7886 = !DILocation(line: 114, column: 2, scope: !7872)
!7887 = !DILocation(line: 116, column: 2, scope: !7872)
!7888 = distinct !DISubprogram(name: "strnlen", scope: !7786, file: !7786, line: 126, type: !7889, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2990, retainedNodes: !7891)
!7889 = !DISubroutineType(types: !7890)
!7890 = !{!185, !118, !185}
!7891 = !{!7892, !7893, !7894}
!7892 = !DILocalVariable(name: "s", arg: 1, scope: !7888, file: !7786, line: 126, type: !118)
!7893 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7888, file: !7786, line: 126, type: !185)
!7894 = !DILocalVariable(name: "n", scope: !7888, file: !7786, line: 128, type: !185)
!7895 = !DILocation(line: 0, scope: !7888)
!7896 = !DILocation(line: 130, column: 9, scope: !7888)
!7897 = !DILocation(line: 130, column: 12, scope: !7888)
!7898 = !DILocation(line: 130, column: 20, scope: !7888)
!7899 = !DILocation(line: 130, column: 2, scope: !7888)
!7900 = !DILocation(line: 131, column: 4, scope: !7901)
!7901 = distinct !DILexicalBlock(scope: !7888, file: !7786, line: 130, column: 35)
!7902 = !DILocation(line: 132, column: 4, scope: !7901)
!7903 = distinct !{!7903, !7899, !7904}
!7904 = !DILocation(line: 133, column: 2, scope: !7888)
!7905 = !DILocation(line: 135, column: 2, scope: !7888)
!7906 = distinct !DISubprogram(name: "strcmp", scope: !7786, file: !7786, line: 145, type: !7907, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2990, retainedNodes: !7909)
!7907 = !DISubroutineType(types: !7908)
!7908 = !{!107, !118, !118}
!7909 = !{!7910, !7911}
!7910 = !DILocalVariable(name: "s1", arg: 1, scope: !7906, file: !7786, line: 145, type: !118)
!7911 = !DILocalVariable(name: "s2", arg: 2, scope: !7906, file: !7786, line: 145, type: !118)
!7912 = !DILocation(line: 0, scope: !7906)
!7913 = !DILocation(line: 147, column: 10, scope: !7906)
!7914 = !DILocation(line: 147, column: 17, scope: !7906)
!7915 = !DILocation(line: 147, column: 14, scope: !7906)
!7916 = !DILocation(line: 147, column: 22, scope: !7906)
!7917 = !DILocation(line: 148, column: 5, scope: !7918)
!7918 = distinct !DILexicalBlock(scope: !7906, file: !7786, line: 147, column: 40)
!7919 = !DILocation(line: 149, column: 5, scope: !7918)
!7920 = distinct !{!7920, !7921, !7922}
!7921 = !DILocation(line: 147, column: 2, scope: !7906)
!7922 = !DILocation(line: 150, column: 2, scope: !7906)
!7923 = !DILocation(line: 152, column: 9, scope: !7906)
!7924 = !DILocation(line: 152, column: 15, scope: !7906)
!7925 = !DILocation(line: 152, column: 13, scope: !7906)
!7926 = !DILocation(line: 152, column: 2, scope: !7906)
!7927 = distinct !DISubprogram(name: "strncmp", scope: !7786, file: !7786, line: 162, type: !7928, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2990, retainedNodes: !7930)
!7928 = !DISubroutineType(types: !7929)
!7929 = !{!107, !118, !118, !185}
!7930 = !{!7931, !7932, !7933}
!7931 = !DILocalVariable(name: "s1", arg: 1, scope: !7927, file: !7786, line: 162, type: !118)
!7932 = !DILocalVariable(name: "s2", arg: 2, scope: !7927, file: !7786, line: 162, type: !118)
!7933 = !DILocalVariable(name: "n", arg: 3, scope: !7927, file: !7786, line: 162, type: !185)
!7934 = !DILocation(line: 0, scope: !7927)
!7935 = !DILocation(line: 164, column: 17, scope: !7927)
!7936 = !DILocation(line: 164, column: 21, scope: !7927)
!7937 = !DILocation(line: 164, column: 28, scope: !7927)
!7938 = !DILocation(line: 164, column: 25, scope: !7927)
!7939 = !DILocation(line: 164, column: 33, scope: !7927)
!7940 = !DILocation(line: 165, column: 5, scope: !7941)
!7941 = distinct !DILexicalBlock(scope: !7927, file: !7786, line: 164, column: 51)
!7942 = !DILocation(line: 166, column: 5, scope: !7941)
!7943 = !DILocation(line: 167, column: 4, scope: !7941)
!7944 = distinct !{!7944, !7945, !7946}
!7945 = !DILocation(line: 164, column: 2, scope: !7927)
!7946 = !DILocation(line: 168, column: 2, scope: !7927)
!7947 = !DILocation(line: 170, column: 25, scope: !7927)
!7948 = !DILocation(line: 170, column: 31, scope: !7927)
!7949 = !DILocation(line: 170, column: 29, scope: !7927)
!7950 = !DILocation(line: 170, column: 9, scope: !7927)
!7951 = !DILocation(line: 170, column: 2, scope: !7927)
!7952 = distinct !DISubprogram(name: "strtok_r", scope: !7786, file: !7786, line: 180, type: !7953, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2990, retainedNodes: !7955)
!7953 = !DISubroutineType(types: !7954)
!7954 = !{!193, !193, !118, !192}
!7955 = !{!7956, !7957, !7958, !7959, !7960}
!7956 = !DILocalVariable(name: "str", arg: 1, scope: !7952, file: !7786, line: 180, type: !193)
!7957 = !DILocalVariable(name: "sep", arg: 2, scope: !7952, file: !7786, line: 180, type: !118)
!7958 = !DILocalVariable(name: "state", arg: 3, scope: !7952, file: !7786, line: 180, type: !192)
!7959 = !DILocalVariable(name: "start", scope: !7952, file: !7786, line: 182, type: !193)
!7960 = !DILocalVariable(name: "end", scope: !7952, file: !7786, line: 182, type: !193)
!7961 = !DILocation(line: 0, scope: !7952)
!7962 = !DILocation(line: 184, column: 10, scope: !7952)
!7963 = !DILocation(line: 184, column: 22, scope: !7952)
!7964 = !DILocation(line: 187, column: 9, scope: !7952)
!7965 = !DILocation(line: 187, column: 16, scope: !7952)
!7966 = !DILocation(line: 187, column: 19, scope: !7952)
!7967 = !DILocation(line: 187, column: 2, scope: !7952)
!7968 = !DILocation(line: 188, column: 8, scope: !7969)
!7969 = distinct !DILexicalBlock(scope: !7952, file: !7786, line: 187, column: 40)
!7970 = distinct !{!7970, !7967, !7971}
!7971 = !DILocation(line: 189, column: 2, scope: !7952)
!7972 = !DILocation(line: 198, column: 9, scope: !7952)
!7973 = !DILocation(line: 198, column: 18, scope: !7952)
!7974 = !DILocation(line: 198, column: 17, scope: !7952)
!7975 = !DILocation(line: 198, column: 2, scope: !7952)
!7976 = !DILocation(line: 199, column: 6, scope: !7977)
!7977 = distinct !DILexicalBlock(scope: !7952, file: !7786, line: 198, column: 37)
!7978 = !DILocation(line: 198, column: 14, scope: !7952)
!7979 = distinct !{!7979, !7975, !7980}
!7980 = !DILocation(line: 200, column: 2, scope: !7952)
!7981 = !DILocation(line: 203, column: 8, scope: !7982)
!7982 = distinct !DILexicalBlock(scope: !7983, file: !7786, line: 202, column: 20)
!7983 = distinct !DILexicalBlock(scope: !7952, file: !7786, line: 202, column: 6)
!7984 = !DILocation(line: 204, column: 16, scope: !7982)
!7985 = !DILocation(line: 205, column: 2, scope: !7982)
!7986 = !DILocation(line: 210, column: 1, scope: !7952)
!7987 = distinct !DISubprogram(name: "strcat", scope: !7786, file: !7786, line: 212, type: !7787, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2990, retainedNodes: !7988)
!7988 = !{!7989, !7990}
!7989 = !DILocalVariable(name: "dest", arg: 1, scope: !7987, file: !7786, line: 212, type: !7789)
!7990 = !DILocalVariable(name: "src", arg: 2, scope: !7987, file: !7786, line: 212, type: !7790)
!7991 = !DILocation(line: 0, scope: !7987)
!7992 = !DILocation(line: 214, column: 16, scope: !7987)
!7993 = !DILocation(line: 214, column: 14, scope: !7987)
!7994 = !DILocation(line: 214, column: 2, scope: !7987)
!7995 = !DILocation(line: 215, column: 2, scope: !7987)
!7996 = distinct !DISubprogram(name: "strncat", scope: !7786, file: !7786, line: 218, type: !7808, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2990, retainedNodes: !7997)
!7997 = !{!7998, !7999, !8000, !8001, !8002}
!7998 = !DILocalVariable(name: "dest", arg: 1, scope: !7996, file: !7786, line: 218, type: !7789)
!7999 = !DILocalVariable(name: "src", arg: 2, scope: !7996, file: !7786, line: 218, type: !7790)
!8000 = !DILocalVariable(name: "n", arg: 3, scope: !7996, file: !7786, line: 219, type: !185)
!8001 = !DILocalVariable(name: "orig_dest", scope: !7996, file: !7786, line: 221, type: !193)
!8002 = !DILocalVariable(name: "len", scope: !7996, file: !7786, line: 222, type: !185)
!8003 = !DILocation(line: 0, scope: !7996)
!8004 = !DILocation(line: 222, column: 15, scope: !7996)
!8005 = !DILocation(line: 224, column: 7, scope: !7996)
!8006 = !DILocation(line: 225, column: 14, scope: !7996)
!8007 = !DILocation(line: 225, column: 19, scope: !7996)
!8008 = !DILocation(line: 225, column: 11, scope: !7996)
!8009 = !DILocation(line: 225, column: 23, scope: !7996)
!8010 = !DILocation(line: 225, column: 28, scope: !7996)
!8011 = !DILocation(line: 225, column: 2, scope: !7996)
!8012 = !DILocation(line: 226, column: 17, scope: !8013)
!8013 = distinct !DILexicalBlock(scope: !7996, file: !7786, line: 225, column: 38)
!8014 = !DILocation(line: 226, column: 8, scope: !8013)
!8015 = !DILocation(line: 226, column: 11, scope: !8013)
!8016 = distinct !{!8016, !8011, !8017}
!8017 = !DILocation(line: 227, column: 2, scope: !7996)
!8018 = !DILocation(line: 228, column: 8, scope: !7996)
!8019 = !DILocation(line: 230, column: 2, scope: !7996)
!8020 = distinct !DISubprogram(name: "memcmp", scope: !7786, file: !7786, line: 239, type: !8021, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2990, retainedNodes: !8023)
!8021 = !DISubroutineType(types: !8022)
!8022 = !{!107, !13, !13, !185}
!8023 = !{!8024, !8025, !8026, !8027, !8028}
!8024 = !DILocalVariable(name: "m1", arg: 1, scope: !8020, file: !7786, line: 239, type: !13)
!8025 = !DILocalVariable(name: "m2", arg: 2, scope: !8020, file: !7786, line: 239, type: !13)
!8026 = !DILocalVariable(name: "n", arg: 3, scope: !8020, file: !7786, line: 239, type: !185)
!8027 = !DILocalVariable(name: "c1", scope: !8020, file: !7786, line: 241, type: !118)
!8028 = !DILocalVariable(name: "c2", scope: !8020, file: !7786, line: 242, type: !118)
!8029 = !DILocation(line: 0, scope: !8020)
!8030 = !DILocation(line: 244, column: 7, scope: !8031)
!8031 = distinct !DILexicalBlock(scope: !8020, file: !7786, line: 244, column: 6)
!8032 = !DILocation(line: 244, column: 6, scope: !8020)
!8033 = !DILocation(line: 248, column: 10, scope: !8020)
!8034 = !DILocation(line: 248, column: 14, scope: !8020)
!8035 = !DILocation(line: 248, column: 19, scope: !8020)
!8036 = !DILocation(line: 248, column: 2, scope: !8020)
!8037 = !DILocation(line: 248, column: 23, scope: !8020)
!8038 = !DILocation(line: 248, column: 30, scope: !8020)
!8039 = !DILocation(line: 248, column: 27, scope: !8020)
!8040 = !DILocation(line: 249, column: 5, scope: !8041)
!8041 = distinct !DILexicalBlock(scope: !8020, file: !7786, line: 248, column: 36)
!8042 = !DILocation(line: 250, column: 5, scope: !8041)
!8043 = distinct !{!8043, !8036, !8044}
!8044 = !DILocation(line: 251, column: 2, scope: !8020)
!8045 = !DILocation(line: 253, column: 9, scope: !8020)
!8046 = !DILocation(line: 253, column: 15, scope: !8020)
!8047 = !DILocation(line: 253, column: 13, scope: !8020)
!8048 = !DILocation(line: 253, column: 2, scope: !8020)
!8049 = !DILocation(line: 254, column: 1, scope: !8020)
!8050 = distinct !DISubprogram(name: "memmove", scope: !7786, file: !7786, line: 263, type: !8051, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2990, retainedNodes: !8053)
!8051 = !DISubroutineType(types: !8052)
!8052 = !{!106, !106, !13, !185}
!8053 = !{!8054, !8055, !8056, !8057, !8058}
!8054 = !DILocalVariable(name: "d", arg: 1, scope: !8050, file: !7786, line: 263, type: !106)
!8055 = !DILocalVariable(name: "s", arg: 2, scope: !8050, file: !7786, line: 263, type: !13)
!8056 = !DILocalVariable(name: "n", arg: 3, scope: !8050, file: !7786, line: 263, type: !185)
!8057 = !DILocalVariable(name: "dest", scope: !8050, file: !7786, line: 265, type: !193)
!8058 = !DILocalVariable(name: "src", scope: !8050, file: !7786, line: 266, type: !118)
!8059 = !DILocation(line: 0, scope: !8050)
!8060 = !DILocation(line: 268, column: 21, scope: !8061)
!8061 = distinct !DILexicalBlock(scope: !8050, file: !7786, line: 268, column: 6)
!8062 = !DILocation(line: 268, column: 28, scope: !8061)
!8063 = !DILocation(line: 268, column: 6, scope: !8050)
!8064 = !DILocation(line: 280, column: 12, scope: !8065)
!8065 = distinct !DILexicalBlock(scope: !8061, file: !7786, line: 278, column: 9)
!8066 = !DILocation(line: 280, column: 3, scope: !8065)
!8067 = !DILocation(line: 275, column: 5, scope: !8068)
!8068 = distinct !DILexicalBlock(scope: !8069, file: !7786, line: 274, column: 17)
!8069 = distinct !DILexicalBlock(scope: !8061, file: !7786, line: 268, column: 33)
!8070 = !DILocation(line: 276, column: 14, scope: !8068)
!8071 = !DILocation(line: 276, column: 4, scope: !8068)
!8072 = !DILocation(line: 276, column: 12, scope: !8068)
!8073 = !DILocation(line: 274, column: 12, scope: !8069)
!8074 = !DILocation(line: 274, column: 3, scope: !8069)
!8075 = distinct !{!8075, !8074, !8076}
!8076 = !DILocation(line: 277, column: 3, scope: !8069)
!8077 = !DILocation(line: 281, column: 12, scope: !8078)
!8078 = distinct !DILexicalBlock(scope: !8065, file: !7786, line: 280, column: 17)
!8079 = !DILocation(line: 281, column: 10, scope: !8078)
!8080 = !DILocation(line: 282, column: 8, scope: !8078)
!8081 = !DILocation(line: 283, column: 7, scope: !8078)
!8082 = !DILocation(line: 284, column: 5, scope: !8078)
!8083 = distinct !{!8083, !8066, !8084}
!8084 = !DILocation(line: 285, column: 3, scope: !8065)
!8085 = !DILocation(line: 288, column: 2, scope: !8050)
!8086 = distinct !DISubprogram(name: "memcpy", scope: !7786, file: !7786, line: 298, type: !8087, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2990, retainedNodes: !8091)
!8087 = !DISubroutineType(types: !8088)
!8088 = !{!106, !8089, !8090, !185}
!8089 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !106)
!8090 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!8091 = !{!8092, !8093, !8094, !8095, !8096}
!8092 = !DILocalVariable(name: "d", arg: 1, scope: !8086, file: !7786, line: 298, type: !8089)
!8093 = !DILocalVariable(name: "s", arg: 2, scope: !8086, file: !7786, line: 298, type: !8090)
!8094 = !DILocalVariable(name: "n", arg: 3, scope: !8086, file: !7786, line: 298, type: !185)
!8095 = !DILocalVariable(name: "d_byte", scope: !8086, file: !7786, line: 302, type: !1145)
!8096 = !DILocalVariable(name: "s_byte", scope: !8086, file: !7786, line: 303, type: !2993)
!8097 = !DILocation(line: 0, scope: !8086)
!8098 = !DILocation(line: 337, column: 11, scope: !8086)
!8099 = !DILocation(line: 337, column: 2, scope: !8086)
!8100 = !DILocation(line: 338, column: 25, scope: !8101)
!8101 = distinct !DILexicalBlock(scope: !8086, file: !7786, line: 337, column: 16)
!8102 = !DILocation(line: 338, column: 17, scope: !8101)
!8103 = !DILocation(line: 338, column: 11, scope: !8101)
!8104 = !DILocation(line: 338, column: 15, scope: !8101)
!8105 = !DILocation(line: 339, column: 4, scope: !8101)
!8106 = distinct !{!8106, !8099, !8107}
!8107 = !DILocation(line: 340, column: 2, scope: !8086)
!8108 = !DILocation(line: 342, column: 2, scope: !8086)
!8109 = distinct !DISubprogram(name: "memset", scope: !7786, file: !7786, line: 352, type: !8110, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2990, retainedNodes: !8112)
!8110 = !DISubroutineType(types: !8111)
!8111 = !{!106, !106, !107, !185}
!8112 = !{!8113, !8114, !8115, !8116, !8117}
!8113 = !DILocalVariable(name: "buf", arg: 1, scope: !8109, file: !7786, line: 352, type: !106)
!8114 = !DILocalVariable(name: "c", arg: 2, scope: !8109, file: !7786, line: 352, type: !107)
!8115 = !DILocalVariable(name: "n", arg: 3, scope: !8109, file: !7786, line: 352, type: !185)
!8116 = !DILocalVariable(name: "d_byte", scope: !8109, file: !7786, line: 356, type: !1145)
!8117 = !DILocalVariable(name: "c_byte", scope: !8109, file: !7786, line: 357, type: !196)
!8118 = !DILocation(line: 0, scope: !8109)
!8119 = !DILocation(line: 357, column: 25, scope: !8109)
!8120 = !DILocation(line: 389, column: 11, scope: !8109)
!8121 = !DILocation(line: 389, column: 2, scope: !8109)
!8122 = !DILocation(line: 390, column: 11, scope: !8123)
!8123 = distinct !DILexicalBlock(scope: !8109, file: !7786, line: 389, column: 16)
!8124 = !DILocation(line: 390, column: 15, scope: !8123)
!8125 = !DILocation(line: 391, column: 4, scope: !8123)
!8126 = distinct !{!8126, !8121, !8127}
!8127 = !DILocation(line: 392, column: 2, scope: !8109)
!8128 = !DILocation(line: 394, column: 2, scope: !8109)
!8129 = distinct !DISubprogram(name: "memchr", scope: !7786, file: !7786, line: 404, type: !8130, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2990, retainedNodes: !8132)
!8130 = !DISubroutineType(types: !8131)
!8131 = !{!106, !13, !107, !185}
!8132 = !{!8133, !8134, !8135, !8136}
!8133 = !DILocalVariable(name: "s", arg: 1, scope: !8129, file: !7786, line: 404, type: !13)
!8134 = !DILocalVariable(name: "c", arg: 2, scope: !8129, file: !7786, line: 404, type: !107)
!8135 = !DILocalVariable(name: "n", arg: 3, scope: !8129, file: !7786, line: 404, type: !185)
!8136 = !DILocalVariable(name: "p", scope: !8137, file: !7786, line: 407, type: !2993)
!8137 = distinct !DILexicalBlock(scope: !8138, file: !7786, line: 406, column: 14)
!8138 = distinct !DILexicalBlock(scope: !8129, file: !7786, line: 406, column: 6)
!8139 = !DILocation(line: 0, scope: !8129)
!8140 = !DILocation(line: 406, column: 8, scope: !8138)
!8141 = !DILocation(line: 406, column: 6, scope: !8129)
!8142 = !DILocation(line: 409, column: 3, scope: !8137)
!8143 = !DILocation(line: 0, scope: !8137)
!8144 = !DILocation(line: 410, column: 8, scope: !8145)
!8145 = distinct !DILexicalBlock(scope: !8146, file: !7786, line: 410, column: 8)
!8146 = distinct !DILexicalBlock(scope: !8137, file: !7786, line: 409, column: 6)
!8147 = !DILocation(line: 410, column: 13, scope: !8145)
!8148 = !DILocation(line: 410, column: 8, scope: !8146)
!8149 = distinct !{!8149, !8142, !8150}
!8150 = !DILocation(line: 414, column: 20, scope: !8137)
!8151 = !DILocation(line: 417, column: 2, scope: !8129)
!8152 = !DILocation(line: 418, column: 1, scope: !8129)
!8153 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !501, file: !501, line: 23, type: !4264, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8154)
!8154 = !{!8155}
!8155 = !DILocalVariable(name: "hook", arg: 1, scope: !8153, file: !501, line: 23, type: !213)
!8156 = !DILocation(line: 0, scope: !8153)
!8157 = !DILocation(line: 25, column: 15, scope: !8153)
!8158 = !DILocation(line: 26, column: 1, scope: !8153)
!8159 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !501, file: !501, line: 14, type: !214, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8160)
!8160 = !{!8161}
!8161 = !DILocalVariable(name: "c", arg: 1, scope: !8159, file: !501, line: 14, type: !107)
!8162 = !DILocation(line: 0, scope: !8159)
!8163 = !DILocation(line: 18, column: 2, scope: !8159)
!8164 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !501, file: !501, line: 28, type: !8165, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8167)
!8165 = !DISubroutineType(types: !8166)
!8166 = !{!107, !107, !497}
!8167 = !{!8168, !8169}
!8168 = !DILocalVariable(name: "c", arg: 1, scope: !8164, file: !501, line: 28, type: !107)
!8169 = !DILocalVariable(name: "stream", arg: 2, scope: !8164, file: !501, line: 28, type: !497)
!8170 = !DILocation(line: 0, scope: !8164)
!8171 = !DILocation(line: 30, column: 27, scope: !8164)
!8172 = !DILocation(line: 30, column: 50, scope: !8164)
!8173 = !DILocation(line: 30, column: 9, scope: !8164)
!8174 = !DILocation(line: 30, column: 2, scope: !8164)
!8175 = distinct !DISubprogram(name: "fputc", scope: !501, file: !501, line: 41, type: !8165, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8176)
!8176 = !{!8177, !8178}
!8177 = !DILocalVariable(name: "c", arg: 1, scope: !8175, file: !501, line: 41, type: !107)
!8178 = !DILocalVariable(name: "stream", arg: 2, scope: !8175, file: !501, line: 41, type: !497)
!8179 = !DILocation(line: 0, scope: !8175)
!8180 = !DILocation(line: 43, column: 9, scope: !8175)
!8181 = !DILocation(line: 43, column: 2, scope: !8175)
!8182 = distinct !DISubprogram(name: "zephyr_fputc", scope: !8183, file: !8183, line: 72, type: !8165, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8184)
!8183 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest")
!8184 = !{!8185, !8186}
!8185 = !DILocalVariable(name: "c", arg: 1, scope: !8182, file: !8183, line: 72, type: !107)
!8186 = !DILocalVariable(name: "stream", arg: 2, scope: !8182, file: !8183, line: 72, type: !497)
!8187 = !DILocation(line: 0, scope: !8182)
!8188 = !DILocation(line: 81, column: 2, scope: !8189)
!8189 = distinct !DILexicalBlock(scope: !8182, file: !8183, line: 81, column: 2)
!8190 = !{i64 2155509563}
!8191 = !DILocation(line: 82, column: 9, scope: !8182)
!8192 = !DILocation(line: 82, column: 2, scope: !8182)
!8193 = distinct !DISubprogram(name: "fputs", scope: !501, file: !501, line: 46, type: !8194, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8197)
!8194 = !DISubroutineType(types: !8195)
!8195 = !{!107, !7790, !8196}
!8196 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !497)
!8197 = !{!8198, !8199, !8200, !8201}
!8198 = !DILocalVariable(name: "s", arg: 1, scope: !8193, file: !501, line: 46, type: !7790)
!8199 = !DILocalVariable(name: "stream", arg: 2, scope: !8193, file: !501, line: 46, type: !8196)
!8200 = !DILocalVariable(name: "len", scope: !8193, file: !501, line: 48, type: !107)
!8201 = !DILocalVariable(name: "ret", scope: !8193, file: !501, line: 49, type: !107)
!8202 = !DILocation(line: 0, scope: !8193)
!8203 = !DILocation(line: 48, column: 12, scope: !8193)
!8204 = !DILocation(line: 51, column: 8, scope: !8193)
!8205 = !DILocation(line: 53, column: 13, scope: !8193)
!8206 = !DILocation(line: 53, column: 9, scope: !8193)
!8207 = !DILocation(line: 53, column: 2, scope: !8193)
!8208 = distinct !DISubprogram(name: "fwrite", scope: !501, file: !501, line: 99, type: !8209, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8211)
!8209 = !DISubroutineType(types: !8210)
!8210 = !{!185, !8090, !185, !185, !8196}
!8211 = !{!8212, !8213, !8214, !8215}
!8212 = !DILocalVariable(name: "ptr", arg: 1, scope: !8208, file: !501, line: 99, type: !8090)
!8213 = !DILocalVariable(name: "size", arg: 2, scope: !8208, file: !501, line: 99, type: !185)
!8214 = !DILocalVariable(name: "nitems", arg: 3, scope: !8208, file: !501, line: 99, type: !185)
!8215 = !DILocalVariable(name: "stream", arg: 4, scope: !8208, file: !501, line: 100, type: !8196)
!8216 = !DILocation(line: 0, scope: !8208)
!8217 = !DILocation(line: 102, column: 9, scope: !8208)
!8218 = !DILocation(line: 102, column: 2, scope: !8208)
!8219 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !8183, file: !8183, line: 96, type: !8209, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8220)
!8220 = !{!8221, !8222, !8223, !8224}
!8221 = !DILocalVariable(name: "ptr", arg: 1, scope: !8219, file: !8183, line: 96, type: !8090)
!8222 = !DILocalVariable(name: "size", arg: 2, scope: !8219, file: !8183, line: 96, type: !185)
!8223 = !DILocalVariable(name: "nitems", arg: 3, scope: !8219, file: !8183, line: 96, type: !185)
!8224 = !DILocalVariable(name: "stream", arg: 4, scope: !8219, file: !8183, line: 96, type: !8196)
!8225 = !DILocation(line: 0, scope: !8219)
!8226 = !DILocation(line: 107, column: 2, scope: !8227)
!8227 = distinct !DILexicalBlock(scope: !8219, file: !8183, line: 107, column: 2)
!8228 = !{i64 2155509667}
!8229 = !DILocation(line: 108, column: 9, scope: !8219)
!8230 = !DILocation(line: 108, column: 2, scope: !8219)
!8231 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !501, file: !501, line: 56, type: !8209, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8232)
!8232 = !{!8233, !8234, !8235, !8236, !8237, !8238, !8239, !8240}
!8233 = !DILocalVariable(name: "ptr", arg: 1, scope: !8231, file: !501, line: 56, type: !8090)
!8234 = !DILocalVariable(name: "size", arg: 2, scope: !8231, file: !501, line: 56, type: !185)
!8235 = !DILocalVariable(name: "nitems", arg: 3, scope: !8231, file: !501, line: 57, type: !185)
!8236 = !DILocalVariable(name: "stream", arg: 4, scope: !8231, file: !501, line: 57, type: !8196)
!8237 = !DILocalVariable(name: "i", scope: !8231, file: !501, line: 59, type: !185)
!8238 = !DILocalVariable(name: "j", scope: !8231, file: !501, line: 60, type: !185)
!8239 = !DILocalVariable(name: "p", scope: !8231, file: !501, line: 61, type: !2993)
!8240 = !DILabel(scope: !8231, name: "done", file: !501, line: 82)
!8241 = !DILocation(line: 0, scope: !8231)
!8242 = !DILocation(line: 63, column: 14, scope: !8243)
!8243 = distinct !DILexicalBlock(scope: !8231, file: !501, line: 63, column: 6)
!8244 = !DILocation(line: 63, column: 24, scope: !8243)
!8245 = !DILocation(line: 72, column: 3, scope: !8246)
!8246 = distinct !DILexicalBlock(scope: !8231, file: !501, line: 70, column: 5)
!8247 = !DILocation(line: 0, scope: !8246)
!8248 = !DILocation(line: 73, column: 8, scope: !8249)
!8249 = distinct !DILexicalBlock(scope: !8250, file: !501, line: 73, column: 8)
!8250 = distinct !DILexicalBlock(scope: !8246, file: !501, line: 72, column: 6)
!8251 = !DILocation(line: 73, column: 29, scope: !8249)
!8252 = !DILocation(line: 73, column: 27, scope: !8249)
!8253 = !DILocation(line: 73, column: 21, scope: !8249)
!8254 = !DILocation(line: 73, column: 33, scope: !8249)
!8255 = !DILocation(line: 73, column: 8, scope: !8250)
!8256 = !DILocation(line: 76, column: 5, scope: !8250)
!8257 = !DILocation(line: 77, column: 14, scope: !8246)
!8258 = !DILocation(line: 77, column: 3, scope: !8250)
!8259 = distinct !{!8259, !8245, !8260}
!8260 = !DILocation(line: 77, column: 17, scope: !8246)
!8261 = !DILocation(line: 79, column: 4, scope: !8246)
!8262 = !DILocation(line: 80, column: 13, scope: !8231)
!8263 = !DILocation(line: 80, column: 2, scope: !8246)
!8264 = distinct !{!8264, !8265, !8266}
!8265 = !DILocation(line: 70, column: 2, scope: !8231)
!8266 = !DILocation(line: 80, column: 16, scope: !8231)
!8267 = !DILocation(line: 82, column: 1, scope: !8231)
!8268 = !DILocation(line: 83, column: 17, scope: !8231)
!8269 = !DILocation(line: 83, column: 2, scope: !8231)
!8270 = !DILocation(line: 84, column: 1, scope: !8231)
!8271 = distinct !DISubprogram(name: "puts", scope: !501, file: !501, line: 106, type: !8272, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !494, retainedNodes: !8274)
!8272 = !DISubroutineType(types: !8273)
!8273 = !{!107, !118}
!8274 = !{!8275}
!8275 = !DILocalVariable(name: "s", arg: 1, scope: !8271, file: !501, line: 106, type: !118)
!8276 = !DILocation(line: 0, scope: !8271)
!8277 = !DILocation(line: 108, column: 6, scope: !8278)
!8278 = distinct !DILexicalBlock(scope: !8271, file: !501, line: 108, column: 6)
!8279 = !DILocation(line: 108, column: 23, scope: !8278)
!8280 = !DILocation(line: 108, column: 6, scope: !8271)
!8281 = !DILocation(line: 112, column: 9, scope: !8271)
!8282 = !DILocation(line: 112, column: 29, scope: !8271)
!8283 = !DILocation(line: 112, column: 2, scope: !8271)
!8284 = !DILocation(line: 113, column: 1, scope: !8271)
!8285 = distinct !DISubprogram(name: "end_report", scope: !533, file: !533, line: 67, type: !3227, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2296)
!8286 = !DILocation(line: 69, column: 6, scope: !8287)
!8287 = distinct !DILexicalBlock(scope: !8285, file: !533, line: 69, column: 6)
!8288 = !DILocation(line: 0, scope: !8287)
!8289 = !DILocation(line: 74, column: 1, scope: !8285)
!8290 = distinct !DISubprogram(name: "z_impl_z_test_1cpu_start", scope: !533, file: !533, line: 159, type: !3227, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2296)
!8291 = !DILocation(line: 183, column: 1, scope: !8290)
!8292 = distinct !DISubprogram(name: "z_impl_z_test_1cpu_stop", scope: !533, file: !533, line: 185, type: !3227, scopeLine: 186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2296)
!8293 = !DILocation(line: 196, column: 1, scope: !8292)
!8294 = distinct !DISubprogram(name: "ztest_skip_failed_assumption", scope: !533, file: !533, line: 295, type: !3227, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2296)
!8295 = !DILocation(line: 298, column: 34, scope: !8296)
!8296 = distinct !DILexicalBlock(scope: !8297, file: !533, line: 297, column: 47)
!8297 = distinct !DILexicalBlock(scope: !8294, file: !533, line: 297, column: 6)
!8298 = !DILocation(line: 300, column: 2, scope: !8294)
!8299 = !DILocation(line: 301, column: 1, scope: !8294)
!8300 = distinct !DISubprogram(name: "ztest_test_skip", scope: !533, file: !533, line: 476, type: !3227, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2296)
!8301 = !DILocation(line: 478, column: 10, scope: !8300)
!8302 = !DILocation(line: 478, column: 2, scope: !8300)
!8303 = !DILocation(line: 480, column: 15, scope: !8304)
!8304 = distinct !DILexicalBlock(scope: !8300, file: !533, line: 478, column: 17)
!8305 = !DILocation(line: 481, column: 3, scope: !8304)
!8306 = !DILocation(line: 484, column: 15, scope: !8304)
!8307 = !DILocation(line: 485, column: 3, scope: !8304)
!8308 = !DILocation(line: 486, column: 3, scope: !8304)
!8309 = !DILocation(line: 489, column: 9, scope: !8304)
!8310 = !DILocation(line: 488, column: 3, scope: !8304)
!8311 = !DILocation(line: 490, column: 15, scope: !8304)
!8312 = !DILocation(line: 491, column: 3, scope: !8304)
!8313 = !DILocation(line: 493, column: 1, scope: !8300)
!8314 = distinct !DISubprogram(name: "test_finalize", scope: !533, file: !533, line: 432, type: !3227, scopeLine: 433, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2296)
!8315 = !DILocation(line: 435, column: 3, scope: !8316)
!8316 = distinct !DILexicalBlock(scope: !8317, file: !533, line: 434, column: 41)
!8317 = distinct !DILexicalBlock(scope: !8314, file: !533, line: 434, column: 6)
!8318 = !DILocation(line: 436, column: 18, scope: !8316)
!8319 = !DILocation(line: 436, column: 3, scope: !8316)
!8320 = !DILocation(line: 438, column: 1, scope: !8314)
!8321 = distinct !DISubprogram(name: "get_friendly_phase_name", scope: !533, file: !533, line: 274, type: !8322, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8324)
!8322 = !DISubroutineType(types: !8323)
!8323 = !{!118, !532}
!8324 = !{!8325}
!8325 = !DILocalVariable(name: "phase", arg: 1, scope: !8321, file: !533, line: 274, type: !532)
!8326 = !DILocation(line: 0, scope: !8321)
!8327 = !DILocation(line: 276, column: 2, scope: !8321)
!8328 = !DILocation(line: 0, scope: !8329)
!8329 = distinct !DILexicalBlock(scope: !8321, file: !533, line: 276, column: 17)
!8330 = !DILocation(line: 292, column: 1, scope: !8321)
!8331 = distinct !DISubprogram(name: "k_thread_abort", scope: !4558, file: !4558, line: 188, type: !8332, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8336)
!8332 = !DISubroutineType(types: !8333)
!8333 = !{null, !8334}
!8334 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !8335)
!8335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !586, size: 32)
!8336 = !{!8337}
!8337 = !DILocalVariable(name: "thread", arg: 1, scope: !8331, file: !4558, line: 188, type: !8334)
!8338 = !DILocation(line: 0, scope: !8331)
!8339 = !DILocation(line: 197, column: 2, scope: !8340)
!8340 = distinct !DILexicalBlock(scope: !8331, file: !4558, line: 197, column: 2)
!8341 = !{i64 2155471450}
!8342 = !DILocation(line: 198, column: 2, scope: !8331)
!8343 = !DILocation(line: 199, column: 1, scope: !8331)
!8344 = distinct !DISubprogram(name: "k_current_get", scope: !406, file: !406, line: 530, type: !8345, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2296)
!8345 = !DISubroutineType(types: !8346)
!8346 = !{!8334}
!8347 = !DILocation(line: 535, column: 9, scope: !8344)
!8348 = !DILocation(line: 535, column: 2, scope: !8344)
!8349 = distinct !DISubprogram(name: "z_current_get", scope: !4558, file: !4558, line: 173, type: !8345, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2296)
!8350 = !DILocation(line: 180, column: 2, scope: !8351)
!8351 = distinct !DILexicalBlock(scope: !8349, file: !4558, line: 180, column: 2)
!8352 = !{i64 2155471382}
!8353 = !DILocation(line: 181, column: 9, scope: !8349)
!8354 = !DILocation(line: 181, column: 2, scope: !8349)
!8355 = distinct !DISubprogram(name: "ztest_test_fail", scope: !533, file: !533, line: 440, type: !3227, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2296)
!8356 = !DILocation(line: 442, column: 10, scope: !8355)
!8357 = !DILocation(line: 442, column: 2, scope: !8355)
!8358 = !DILocation(line: 444, column: 15, scope: !8359)
!8359 = distinct !DILexicalBlock(scope: !8355, file: !533, line: 442, column: 17)
!8360 = !DILocation(line: 445, column: 3, scope: !8359)
!8361 = !DILocation(line: 448, column: 15, scope: !8359)
!8362 = !DILocation(line: 449, column: 3, scope: !8359)
!8363 = !DILocation(line: 450, column: 3, scope: !8359)
!8364 = !DILocation(line: 453, column: 9, scope: !8359)
!8365 = !DILocation(line: 452, column: 3, scope: !8359)
!8366 = !DILocation(line: 454, column: 15, scope: !8359)
!8367 = !DILocation(line: 455, column: 3, scope: !8359)
!8368 = !DILocation(line: 457, column: 1, scope: !8355)
!8369 = distinct !DISubprogram(name: "ztest_test_pass", scope: !533, file: !533, line: 459, type: !3227, scopeLine: 460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2296)
!8370 = !DILocation(line: 461, column: 10, scope: !8369)
!8371 = !DILocation(line: 461, column: 2, scope: !8369)
!8372 = !DILocation(line: 463, column: 15, scope: !8373)
!8373 = distinct !DILexicalBlock(scope: !8369, file: !533, line: 461, column: 17)
!8374 = !DILocation(line: 465, column: 3, scope: !8373)
!8375 = !DILocation(line: 468, column: 9, scope: !8373)
!8376 = !DILocation(line: 467, column: 3, scope: !8373)
!8377 = !DILocation(line: 469, column: 15, scope: !8373)
!8378 = !DILocation(line: 470, column: 7, scope: !8379)
!8379 = distinct !DILexicalBlock(scope: !8373, file: !533, line: 470, column: 7)
!8380 = !DILocation(line: 470, column: 13, scope: !8379)
!8381 = !DILocation(line: 470, column: 7, scope: !8373)
!8382 = !DILocation(line: 0, scope: !8373)
!8383 = !DILocation(line: 474, column: 1, scope: !8369)
!8384 = distinct !DISubprogram(name: "ztest_simple_1cpu_before", scope: !533, file: !533, line: 495, type: !131, scopeLine: 496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8385)
!8385 = !{!8386}
!8386 = !DILocalVariable(name: "data", arg: 1, scope: !8384, file: !533, line: 495, type: !106)
!8387 = !DILocation(line: 0, scope: !8384)
!8388 = !DILocation(line: 498, column: 2, scope: !8384)
!8389 = !DILocation(line: 499, column: 1, scope: !8384)
!8390 = distinct !DISubprogram(name: "z_test_1cpu_start", scope: !8391, file: !8391, line: 24, type: !3227, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2296)
!8391 = !DIFile(filename: "zephyr/include/generated/syscalls/ztest_test.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest")
!8392 = !DILocation(line: 32, column: 2, scope: !8393)
!8393 = distinct !DILexicalBlock(scope: !8390, file: !8391, line: 32, column: 2)
!8394 = !{i64 2155593753}
!8395 = !DILocation(line: 34, column: 1, scope: !8390)
!8396 = distinct !DISubprogram(name: "ztest_simple_1cpu_after", scope: !533, file: !533, line: 501, type: !131, scopeLine: 502, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8397)
!8397 = !{!8398}
!8398 = !DILocalVariable(name: "data", arg: 1, scope: !8396, file: !533, line: 501, type: !106)
!8399 = !DILocation(line: 0, scope: !8396)
!8400 = !DILocation(line: 504, column: 2, scope: !8396)
!8401 = !DILocation(line: 505, column: 1, scope: !8396)
!8402 = distinct !DISubprogram(name: "z_test_1cpu_stop", scope: !8391, file: !8391, line: 47, type: !3227, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2296)
!8403 = !DILocation(line: 55, column: 2, scope: !8404)
!8404 = distinct !DILexicalBlock(scope: !8402, file: !8391, line: 55, column: 2)
!8405 = !{i64 2155593821}
!8406 = !DILocation(line: 57, column: 1, scope: !8402)
!8407 = distinct !DISubprogram(name: "z_ztest_get_next_test", scope: !533, file: !533, line: 617, type: !8408, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8427)
!8408 = !DISubroutineType(types: !8409)
!8409 = !{!8410, !118, !8410}
!8410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8411, size: 32)
!8411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_unit_test", file: !114, line: 97, size: 160, elements: !8412)
!8412 = !{!8413, !8414, !8415, !8416, !8417}
!8413 = !DIDerivedType(tag: DW_TAG_member, name: "test_suite_name", scope: !8411, file: !114, line: 98, baseType: !118, size: 32)
!8414 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8411, file: !114, line: 99, baseType: !118, size: 32, offset: 32)
!8415 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !8411, file: !114, line: 100, baseType: !130, size: 32, offset: 64)
!8416 = !DIDerivedType(tag: DW_TAG_member, name: "thread_options", scope: !8411, file: !114, line: 101, baseType: !152, size: 32, offset: 96)
!8417 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !8411, file: !114, line: 104, baseType: !8418, size: 32, offset: 128)
!8418 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8419)
!8419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8420, size: 32)
!8420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_unit_test_stats", file: !114, line: 123, size: 160, elements: !8421)
!8421 = !{!8422, !8423, !8424, !8425, !8426}
!8422 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !8420, file: !114, line: 125, baseType: !152, size: 32)
!8423 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !8420, file: !114, line: 127, baseType: !152, size: 32, offset: 32)
!8424 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !8420, file: !114, line: 129, baseType: !152, size: 32, offset: 64)
!8425 = !DIDerivedType(tag: DW_TAG_member, name: "pass_count", scope: !8420, file: !114, line: 131, baseType: !152, size: 32, offset: 96)
!8426 = !DIDerivedType(tag: DW_TAG_member, name: "duration_worst_ms", scope: !8420, file: !114, line: 133, baseType: !152, size: 32, offset: 128)
!8427 = !{!8428, !8429, !8430}
!8428 = !DILocalVariable(name: "suite", arg: 1, scope: !8407, file: !533, line: 617, type: !118)
!8429 = !DILocalVariable(name: "prev", arg: 2, scope: !8407, file: !533, line: 617, type: !8410)
!8430 = !DILocalVariable(name: "test", scope: !8407, file: !533, line: 619, type: !8410)
!8431 = !DILocation(line: 0, scope: !8407)
!8432 = !DILocation(line: 619, column: 39, scope: !8407)
!8433 = !DILocation(line: 619, column: 33, scope: !8407)
!8434 = !DILocation(line: 621, column: 14, scope: !8435)
!8435 = distinct !DILexicalBlock(scope: !8436, file: !533, line: 621, column: 2)
!8436 = distinct !DILexicalBlock(scope: !8407, file: !533, line: 621, column: 2)
!8437 = !DILocation(line: 621, column: 2, scope: !8436)
!8438 = !DILocation(line: 622, column: 27, scope: !8439)
!8439 = distinct !DILexicalBlock(scope: !8440, file: !533, line: 622, column: 7)
!8440 = distinct !DILexicalBlock(scope: !8435, file: !533, line: 621, column: 51)
!8441 = !DILocation(line: 622, column: 7, scope: !8439)
!8442 = !DILocation(line: 622, column: 44, scope: !8439)
!8443 = !DILocation(line: 622, column: 7, scope: !8440)
!8444 = !DILocation(line: 621, column: 43, scope: !8435)
!8445 = distinct !{!8445, !8437, !8446}
!8446 = !DILocation(line: 625, column: 2, scope: !8436)
!8447 = !DILocation(line: 627, column: 1, scope: !8407)
!8448 = distinct !DISubprogram(name: "z_ztest_run_test_suite", scope: !533, file: !533, line: 764, type: !8272, scopeLine: 765, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8449)
!8449 = !{!8450}
!8450 = !DILocalVariable(name: "name", arg: 1, scope: !8448, file: !533, line: 764, type: !118)
!8451 = !DILocation(line: 0, scope: !8448)
!8452 = !DILocation(line: 766, column: 36, scope: !8448)
!8453 = !DILocation(line: 766, column: 9, scope: !8448)
!8454 = !DILocation(line: 766, column: 2, scope: !8448)
!8455 = distinct !DISubprogram(name: "ztest_find_test_suite", scope: !533, file: !533, line: 604, type: !8456, scopeLine: 605, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8475)
!8456 = !DISubroutineType(types: !8457)
!8457 = !{!8458, !118}
!8458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8459, size: 32)
!8459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_node", file: !114, line: 177, size: 224, elements: !8460)
!8460 = !{!8461, !8462, !8463, !8464, !8465, !8466, !8467}
!8461 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8459, file: !114, line: 179, baseType: !117, size: 32)
!8462 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !8459, file: !114, line: 182, baseType: !122, size: 32, offset: 32)
!8463 = !DIDerivedType(tag: DW_TAG_member, name: "before", scope: !8459, file: !114, line: 185, baseType: !128, size: 32, offset: 64)
!8464 = !DIDerivedType(tag: DW_TAG_member, name: "after", scope: !8459, file: !114, line: 188, baseType: !134, size: 32, offset: 96)
!8465 = !DIDerivedType(tag: DW_TAG_member, name: "teardown", scope: !8459, file: !114, line: 191, baseType: !137, size: 32, offset: 128)
!8466 = !DIDerivedType(tag: DW_TAG_member, name: "predicate", scope: !8459, file: !114, line: 194, baseType: !140, size: 32, offset: 160)
!8467 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !8459, file: !114, line: 197, baseType: !8468, size: 32, offset: 192)
!8468 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8469)
!8469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8470, size: 32)
!8470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_stats", file: !114, line: 114, size: 96, elements: !8471)
!8471 = !{!8472, !8473, !8474}
!8472 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !8470, file: !114, line: 116, baseType: !152, size: 32)
!8473 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !8470, file: !114, line: 118, baseType: !152, size: 32, offset: 32)
!8474 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !8470, file: !114, line: 120, baseType: !152, size: 32, offset: 64)
!8475 = !{!8476, !8477}
!8476 = !DILocalVariable(name: "name", arg: 1, scope: !8455, file: !533, line: 604, type: !118)
!8477 = !DILocalVariable(name: "node", scope: !8455, file: !533, line: 606, type: !8458)
!8478 = !DILocation(line: 0, scope: !8455)
!8479 = !DILocation(line: 608, column: 2, scope: !8480)
!8480 = distinct !DILexicalBlock(scope: !8455, file: !533, line: 608, column: 2)
!8481 = !DILocation(line: 609, column: 26, scope: !8482)
!8482 = distinct !DILexicalBlock(scope: !8483, file: !533, line: 609, column: 7)
!8483 = distinct !DILexicalBlock(scope: !8484, file: !533, line: 608, column: 87)
!8484 = distinct !DILexicalBlock(scope: !8480, file: !533, line: 608, column: 2)
!8485 = !DILocation(line: 609, column: 7, scope: !8482)
!8486 = !DILocation(line: 609, column: 32, scope: !8482)
!8487 = !DILocation(line: 609, column: 7, scope: !8483)
!8488 = !DILocation(line: 608, column: 79, scope: !8484)
!8489 = !DILocation(line: 608, column: 49, scope: !8484)
!8490 = distinct !{!8490, !8479, !8491}
!8491 = !DILocation(line: 612, column: 2, scope: !8480)
!8492 = !DILocation(line: 615, column: 1, scope: !8455)
!8493 = distinct !DISubprogram(name: "z_ztest_run_test_suite_ptr", scope: !533, file: !533, line: 652, type: !8494, scopeLine: 653, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8496)
!8494 = !DISubroutineType(types: !8495)
!8495 = !{!107, !8458}
!8496 = !{!8497, !8498, !8499, !8500, !8501, !8502}
!8497 = !DILocalVariable(name: "suite", arg: 1, scope: !8493, file: !533, line: 652, type: !8458)
!8498 = !DILocalVariable(name: "test", scope: !8493, file: !533, line: 654, type: !8410)
!8499 = !DILocalVariable(name: "data", scope: !8493, file: !533, line: 655, type: !106)
!8500 = !DILocalVariable(name: "fail", scope: !8493, file: !533, line: 656, type: !107)
!8501 = !DILocalVariable(name: "tc_result", scope: !8493, file: !533, line: 657, type: !107)
!8502 = !DILocalVariable(name: "i", scope: !8503, file: !533, line: 692, type: !107)
!8503 = distinct !DILexicalBlock(scope: !8493, file: !533, line: 692, column: 2)
!8504 = !DILocation(line: 0, scope: !8493)
!8505 = !DILocation(line: 663, column: 12, scope: !8506)
!8506 = distinct !DILexicalBlock(scope: !8493, file: !533, line: 663, column: 6)
!8507 = !DILocation(line: 663, column: 6, scope: !8493)
!8508 = !DILocation(line: 664, column: 15, scope: !8509)
!8509 = distinct !DILexicalBlock(scope: !8506, file: !533, line: 663, column: 21)
!8510 = !DILocation(line: 665, column: 3, scope: !8509)
!8511 = !DILocation(line: 679, column: 2, scope: !8512)
!8512 = distinct !DILexicalBlock(scope: !8493, file: !533, line: 679, column: 2)
!8513 = !DILocation(line: 680, column: 33, scope: !8493)
!8514 = !DILocation(line: 681, column: 14, scope: !8493)
!8515 = !DILocation(line: 682, column: 8, scope: !8493)
!8516 = !DILocation(line: 688, column: 55, scope: !8517)
!8517 = distinct !DILexicalBlock(scope: !8493, file: !533, line: 688, column: 6)
!8518 = !DILocation(line: 688, column: 61, scope: !8517)
!8519 = !DILocation(line: 688, column: 6, scope: !8493)
!8520 = !DILocation(line: 689, column: 10, scope: !8521)
!8521 = distinct !DILexicalBlock(scope: !8517, file: !533, line: 688, column: 70)
!8522 = !DILocation(line: 690, column: 2, scope: !8521)
!8523 = !DILocation(line: 0, scope: !8503)
!8524 = !DILocation(line: 727, column: 3, scope: !8525)
!8525 = distinct !DILexicalBlock(scope: !8526, file: !533, line: 692, column: 46)
!8526 = distinct !DILexicalBlock(scope: !8503, file: !533, line: 692, column: 2)
!8527 = !DILocation(line: 0, scope: !8525)
!8528 = !DILocation(line: 727, column: 48, scope: !8525)
!8529 = !DILocation(line: 727, column: 19, scope: !8525)
!8530 = !DILocation(line: 727, column: 61, scope: !8525)
!8531 = !DILocation(line: 728, column: 41, scope: !8532)
!8532 = distinct !DILexicalBlock(scope: !8533, file: !533, line: 728, column: 8)
!8533 = distinct !DILexicalBlock(scope: !8525, file: !533, line: 727, column: 71)
!8534 = !DILocation(line: 728, column: 53, scope: !8532)
!8535 = !DILocation(line: 728, column: 8, scope: !8532)
!8536 = !DILocation(line: 728, column: 8, scope: !8533)
!8537 = !DILocation(line: 729, column: 11, scope: !8538)
!8538 = distinct !DILexicalBlock(scope: !8532, file: !533, line: 728, column: 60)
!8539 = !DILocation(line: 729, column: 18, scope: !8538)
!8540 = !DILocation(line: 729, column: 27, scope: !8538)
!8541 = !DILocation(line: 730, column: 17, scope: !8538)
!8542 = !DILocation(line: 731, column: 9, scope: !8538)
!8543 = !DILocation(line: 732, column: 12, scope: !8544)
!8544 = distinct !DILexicalBlock(scope: !8545, file: !533, line: 731, column: 31)
!8545 = distinct !DILexicalBlock(scope: !8538, file: !533, line: 731, column: 9)
!8546 = !DILocation(line: 732, column: 19, scope: !8544)
!8547 = !DILocation(line: 733, column: 5, scope: !8544)
!8548 = !DILocation(line: 734, column: 12, scope: !8549)
!8549 = distinct !DILexicalBlock(scope: !8550, file: !533, line: 733, column: 38)
!8550 = distinct !DILexicalBlock(scope: !8545, file: !533, line: 733, column: 16)
!8551 = !DILocation(line: 734, column: 19, scope: !8549)
!8552 = !DILocation(line: 735, column: 5, scope: !8549)
!8553 = !DILocation(line: 736, column: 12, scope: !8554)
!8554 = distinct !DILexicalBlock(scope: !8555, file: !533, line: 735, column: 38)
!8555 = distinct !DILexicalBlock(scope: !8550, file: !533, line: 735, column: 16)
!8556 = !DILocation(line: 736, column: 19, scope: !8554)
!8557 = !DILocation(line: 737, column: 5, scope: !8554)
!8558 = !DILocation(line: 0, scope: !8545)
!8559 = !DILocation(line: 739, column: 19, scope: !8560)
!8560 = distinct !DILexicalBlock(scope: !8538, file: !533, line: 739, column: 9)
!8561 = !DILocation(line: 739, column: 9, scope: !8538)
!8562 = !DILocation(line: 744, column: 31, scope: !8563)
!8563 = distinct !DILexicalBlock(scope: !8533, file: !533, line: 744, column: 8)
!8564 = !DILocation(line: 744, column: 43, scope: !8563)
!8565 = !DILocation(line: 744, column: 8, scope: !8533)
!8566 = distinct !{!8566, !8524, !8567}
!8567 = !DILocation(line: 747, column: 3, scope: !8525)
!8568 = !DILocation(line: 750, column: 7, scope: !8569)
!8569 = distinct !DILexicalBlock(scope: !8525, file: !533, line: 750, column: 7)
!8570 = !DILocation(line: 750, column: 38, scope: !8569)
!8571 = !DILocation(line: 751, column: 16, scope: !8572)
!8572 = distinct !DILexicalBlock(scope: !8569, file: !533, line: 750, column: 52)
!8573 = !DILocation(line: 752, column: 3, scope: !8572)
!8574 = !DILocation(line: 755, column: 2, scope: !8575)
!8575 = distinct !DILexicalBlock(scope: !8576, file: !533, line: 755, column: 2)
!8576 = distinct !DILexicalBlock(scope: !8493, file: !533, line: 755, column: 2)
!8577 = !DILocation(line: 0, scope: !8575)
!8578 = !DILocation(line: 756, column: 8, scope: !8493)
!8579 = !DILocation(line: 757, column: 13, scope: !8580)
!8580 = distinct !DILexicalBlock(scope: !8493, file: !533, line: 757, column: 6)
!8581 = !DILocation(line: 757, column: 22, scope: !8580)
!8582 = !DILocation(line: 757, column: 6, scope: !8493)
!8583 = !DILocation(line: 758, column: 3, scope: !8584)
!8584 = distinct !DILexicalBlock(scope: !8580, file: !533, line: 757, column: 31)
!8585 = !DILocation(line: 759, column: 2, scope: !8584)
!8586 = !DILocation(line: 762, column: 1, scope: !8493)
!8587 = distinct !DISubprogram(name: "run_test", scope: !533, file: !533, line: 521, type: !8588, scopeLine: 522, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8590)
!8588 = !DISubroutineType(types: !8589)
!8589 = !{!107, !8458, !8410, !106}
!8590 = !{!8591, !8592, !8593, !8594}
!8591 = !DILocalVariable(name: "suite", arg: 1, scope: !8587, file: !533, line: 521, type: !8458)
!8592 = !DILocalVariable(name: "test", arg: 2, scope: !8587, file: !533, line: 521, type: !8410)
!8593 = !DILocalVariable(name: "data", arg: 3, scope: !8587, file: !533, line: 521, type: !106)
!8594 = !DILocalVariable(name: "ret", scope: !8587, file: !533, line: 523, type: !107)
!8595 = !DILocation(line: 0, scope: !8587)
!8596 = !DILocation(line: 528, column: 2, scope: !8597)
!8597 = distinct !DILexicalBlock(scope: !8587, file: !533, line: 528, column: 2)
!8598 = !DILocation(line: 530, column: 8, scope: !8587)
!8599 = !DILocation(line: 536, column: 3, scope: !8600)
!8600 = distinct !DILexicalBlock(scope: !8601, file: !533, line: 535, column: 41)
!8601 = distinct !DILexicalBlock(scope: !8587, file: !533, line: 535, column: 6)
!8602 = !DILocation(line: 539, column: 32, scope: !8600)
!8603 = !DILocation(line: 539, column: 39, scope: !8600)
!8604 = !DILocation(line: 541, column: 11, scope: !8600)
!8605 = !DILocation(line: 541, column: 26, scope: !8600)
!8606 = !DILocation(line: 537, column: 3, scope: !8600)
!8607 = !DILocation(line: 543, column: 3, scope: !8600)
!8608 = !DILocation(line: 544, column: 13, scope: !8609)
!8609 = distinct !DILexicalBlock(scope: !8600, file: !533, line: 544, column: 7)
!8610 = !DILocation(line: 544, column: 18, scope: !8609)
!8611 = !DILocation(line: 544, column: 7, scope: !8600)
!8612 = !DILocation(line: 545, column: 4, scope: !8613)
!8613 = distinct !DILexicalBlock(scope: !8609, file: !533, line: 544, column: 27)
!8614 = !DILocation(line: 546, column: 3, scope: !8613)
!8615 = !DILocation(line: 548, column: 7, scope: !8616)
!8616 = distinct !DILexicalBlock(scope: !8600, file: !533, line: 548, column: 7)
!8617 = !DILocation(line: 548, column: 46, scope: !8616)
!8618 = !DILocation(line: 550, column: 4, scope: !8619)
!8619 = distinct !DILexicalBlock(scope: !8616, file: !533, line: 549, column: 47)
!8620 = !DILocation(line: 551, column: 4, scope: !8619)
!8621 = !DILocation(line: 552, column: 3, scope: !8619)
!8622 = !DILocation(line: 564, column: 8, scope: !8587)
!8623 = !DILocation(line: 565, column: 13, scope: !8624)
!8624 = distinct !DILexicalBlock(scope: !8587, file: !533, line: 565, column: 6)
!8625 = !DILocation(line: 565, column: 19, scope: !8624)
!8626 = !DILocation(line: 565, column: 6, scope: !8587)
!8627 = !DILocation(line: 566, column: 3, scope: !8628)
!8628 = distinct !DILexicalBlock(scope: !8624, file: !533, line: 565, column: 28)
!8629 = !DILocation(line: 567, column: 2, scope: !8628)
!8630 = !DILocation(line: 568, column: 2, scope: !8587)
!8631 = !DILocation(line: 570, column: 2, scope: !8587)
!8632 = !DILocation(line: 571, column: 6, scope: !8633)
!8633 = distinct !DILexicalBlock(scope: !8587, file: !533, line: 571, column: 6)
!8634 = !DILocation(line: 571, column: 28, scope: !8633)
!8635 = !DILocation(line: 571, column: 35, scope: !8633)
!8636 = !DILocation(line: 571, column: 20, scope: !8633)
!8637 = !DILocation(line: 571, column: 6, scope: !8587)
!8638 = !DILocation(line: 572, column: 34, scope: !8639)
!8639 = distinct !DILexicalBlock(scope: !8633, file: !533, line: 571, column: 54)
!8640 = !DILocation(line: 573, column: 2, scope: !8639)
!8641 = !DILocation(line: 575, column: 8, scope: !8587)
!8642 = !DILocation(line: 583, column: 6, scope: !8643)
!8643 = distinct !DILexicalBlock(scope: !8587, file: !533, line: 583, column: 6)
!8644 = !DILocation(line: 583, column: 39, scope: !8643)
!8645 = !DILocation(line: 585, column: 46, scope: !8646)
!8646 = distinct !DILexicalBlock(scope: !8643, file: !533, line: 585, column: 13)
!8647 = !DILocation(line: 590, column: 10, scope: !8648)
!8648 = distinct !DILexicalBlock(scope: !8649, file: !533, line: 589, column: 54)
!8649 = distinct !DILexicalBlock(scope: !8587, file: !533, line: 589, column: 6)
!8650 = !DILocation(line: 593, column: 8, scope: !8587)
!8651 = !DILocation(line: 594, column: 2, scope: !8652)
!8652 = distinct !DILexicalBlock(scope: !8587, file: !533, line: 594, column: 2)
!8653 = !DILocation(line: 595, column: 10, scope: !8654)
!8654 = distinct !DILexicalBlock(scope: !8587, file: !533, line: 595, column: 6)
!8655 = !DILocation(line: 595, column: 21, scope: !8654)
!8656 = !DILocation(line: 595, column: 24, scope: !8654)
!8657 = !DILocation(line: 595, column: 6, scope: !8587)
!8658 = !DILocation(line: 596, column: 15, scope: !8659)
!8659 = distinct !DILexicalBlock(scope: !8654, file: !533, line: 595, column: 56)
!8660 = !DILocation(line: 597, column: 2, scope: !8659)
!8661 = !DILocation(line: 599, column: 2, scope: !8587)
!8662 = distinct !DISubprogram(name: "get_start_time_cyc", scope: !690, file: !690, line: 98, type: !3227, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2296)
!8663 = !DILocation(line: 100, column: 18, scope: !8662)
!8664 = !DILocation(line: 100, column: 16, scope: !8662)
!8665 = !DILocation(line: 101, column: 1, scope: !8662)
!8666 = distinct !DISubprogram(name: "k_thread_create", scope: !4558, file: !4558, line: 24, type: !8667, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8675)
!8667 = !DISubroutineType(types: !8668)
!8668 = !{!8334, !8335, !8669, !185, !559, !106, !106, !106, !107, !152, !8671}
!8669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8670, size: 32)
!8670 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !560, line: 44, baseType: !576)
!8671 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !565, line: 67, baseType: !8672)
!8672 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !565, line: 65, size: 64, elements: !8673)
!8673 = !{!8674}
!8674 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !8672, file: !565, line: 66, baseType: !564, size: 64)
!8675 = !{!8676, !8677, !8678, !8679, !8680, !8681, !8682, !8683, !8684, !8685}
!8676 = !DILocalVariable(name: "new_thread", arg: 1, scope: !8666, file: !4558, line: 24, type: !8335)
!8677 = !DILocalVariable(name: "stack", arg: 2, scope: !8666, file: !4558, line: 24, type: !8669)
!8678 = !DILocalVariable(name: "stack_size", arg: 3, scope: !8666, file: !4558, line: 24, type: !185)
!8679 = !DILocalVariable(name: "entry", arg: 4, scope: !8666, file: !4558, line: 24, type: !559)
!8680 = !DILocalVariable(name: "p1", arg: 5, scope: !8666, file: !4558, line: 24, type: !106)
!8681 = !DILocalVariable(name: "p2", arg: 6, scope: !8666, file: !4558, line: 24, type: !106)
!8682 = !DILocalVariable(name: "p3", arg: 7, scope: !8666, file: !4558, line: 24, type: !106)
!8683 = !DILocalVariable(name: "prio", arg: 8, scope: !8666, file: !4558, line: 24, type: !107)
!8684 = !DILocalVariable(name: "options", arg: 9, scope: !8666, file: !4558, line: 24, type: !152)
!8685 = !DILocalVariable(name: "delay", arg: 10, scope: !8666, file: !4558, line: 24, type: !8671)
!8686 = !DILocation(line: 0, scope: !8666)
!8687 = !DILocation(line: 49, column: 2, scope: !8688)
!8688 = distinct !DILexicalBlock(scope: !8666, file: !4558, line: 49, column: 2)
!8689 = !{i64 2155470838}
!8690 = !DILocation(line: 50, column: 9, scope: !8666)
!8691 = !DILocation(line: 50, column: 2, scope: !8666)
!8692 = distinct !DISubprogram(name: "k_object_access_grant", scope: !8693, file: !8693, line: 24, type: !8694, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8696)
!8693 = !DIFile(filename: "zephyr/include/generated/syscalls/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest")
!8694 = !DISubroutineType(types: !8695)
!8695 = !{null, !13, !8335}
!8696 = !{!8697, !8698}
!8697 = !DILocalVariable(name: "object", arg: 1, scope: !8692, file: !8693, line: 24, type: !13)
!8698 = !DILocalVariable(name: "thread", arg: 2, scope: !8692, file: !8693, line: 24, type: !8335)
!8699 = !DILocation(line: 0, scope: !8692)
!8700 = !DILocation(line: 34, column: 2, scope: !8701)
!8701 = distinct !DILexicalBlock(scope: !8692, file: !8693, line: 34, column: 2)
!8702 = !{i64 2154987258}
!8703 = !DILocation(line: 36, column: 1, scope: !8692)
!8704 = distinct !DISubprogram(name: "k_thread_name_set", scope: !4558, file: !4558, line: 391, type: !8705, scopeLine: 392, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8707)
!8705 = !DISubroutineType(types: !8706)
!8706 = !{!107, !8334, !118}
!8707 = !{!8708, !8709}
!8708 = !DILocalVariable(name: "thread", arg: 1, scope: !8704, file: !4558, line: 391, type: !8334)
!8709 = !DILocalVariable(name: "str", arg: 2, scope: !8704, file: !4558, line: 391, type: !118)
!8710 = !DILocation(line: 0, scope: !8704)
!8711 = !DILocation(line: 400, column: 2, scope: !8712)
!8712 = distinct !DILexicalBlock(scope: !8704, file: !4558, line: 400, column: 2)
!8713 = !{i64 2155472266}
!8714 = !DILocation(line: 401, column: 9, scope: !8704)
!8715 = !DILocation(line: 401, column: 2, scope: !8704)
!8716 = distinct !DISubprogram(name: "k_thread_start", scope: !4558, file: !4558, line: 205, type: !8332, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8717)
!8717 = !{!8718}
!8718 = !DILocalVariable(name: "thread", arg: 1, scope: !8716, file: !4558, line: 205, type: !8334)
!8719 = !DILocation(line: 0, scope: !8716)
!8720 = !DILocation(line: 214, column: 2, scope: !8721)
!8721 = distinct !DILexicalBlock(scope: !8716, file: !4558, line: 214, column: 2)
!8722 = !{i64 2155471518}
!8723 = !DILocation(line: 215, column: 2, scope: !8716)
!8724 = !DILocation(line: 216, column: 1, scope: !8716)
!8725 = distinct !DISubprogram(name: "k_thread_join", scope: !4558, file: !4558, line: 74, type: !8726, scopeLine: 75, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8728)
!8726 = !DISubroutineType(types: !8727)
!8727 = !{!107, !8335, !8671}
!8728 = !{!8729, !8730}
!8729 = !DILocalVariable(name: "thread", arg: 1, scope: !8725, file: !4558, line: 74, type: !8335)
!8730 = !DILocalVariable(name: "timeout", arg: 2, scope: !8725, file: !4558, line: 74, type: !8671)
!8731 = !DILocation(line: 0, scope: !8725)
!8732 = !DILocation(line: 83, column: 2, scope: !8733)
!8733 = distinct !DILexicalBlock(scope: !8725, file: !4558, line: 83, column: 2)
!8734 = !{i64 2155470974}
!8735 = !DILocation(line: 84, column: 9, scope: !8725)
!8736 = !DILocation(line: 84, column: 2, scope: !8725)
!8737 = distinct !DISubprogram(name: "run_test_rules", scope: !533, file: !533, line: 207, type: !8738, scopeLine: 208, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8740)
!8738 = !DISubroutineType(types: !8739)
!8739 = !{null, !145, !8410, !106}
!8740 = !{!8741, !8742, !8743, !8744}
!8741 = !DILocalVariable(name: "is_before", arg: 1, scope: !8737, file: !533, line: 207, type: !145)
!8742 = !DILocalVariable(name: "test", arg: 2, scope: !8737, file: !533, line: 207, type: !8410)
!8743 = !DILocalVariable(name: "data", arg: 3, scope: !8737, file: !533, line: 207, type: !106)
!8744 = !DILocalVariable(name: "rule", scope: !8745, file: !533, line: 209, type: !8746)
!8745 = distinct !DILexicalBlock(scope: !8737, file: !533, line: 209, column: 2)
!8746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8747, size: 32)
!8747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_test_rule", file: !114, line: 437, size: 64, elements: !8748)
!8748 = !{!8749, !8756}
!8749 = !DIDerivedType(tag: DW_TAG_member, name: "before_each", scope: !8747, file: !114, line: 438, baseType: !8750, size: 32)
!8750 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_rule_cb", file: !114, line: 434, baseType: !8751)
!8751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8752, size: 32)
!8752 = !DISubroutineType(types: !8753)
!8753 = !{null, !8754, !106}
!8754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8755, size: 32)
!8755 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8411)
!8756 = !DIDerivedType(tag: DW_TAG_member, name: "after_each", scope: !8747, file: !114, line: 439, baseType: !8750, size: 32, offset: 32)
!8757 = !DILocation(line: 0, scope: !8737)
!8758 = !DILocation(line: 0, scope: !8745)
!8759 = !DILocation(line: 209, column: 2, scope: !8745)
!8760 = !DILocation(line: 217, column: 1, scope: !8737)
!8761 = !DILocation(line: 211, column: 17, scope: !8762)
!8762 = distinct !DILexicalBlock(scope: !8763, file: !533, line: 211, column: 7)
!8763 = distinct !DILexicalBlock(scope: !8764, file: !533, line: 210, column: 49)
!8764 = distinct !DILexicalBlock(scope: !8745, file: !533, line: 209, column: 2)
!8765 = !DILocation(line: 211, column: 26, scope: !8762)
!8766 = !DILocation(line: 211, column: 20, scope: !8762)
!8767 = !DILocation(line: 211, column: 7, scope: !8763)
!8768 = !DILocation(line: 213, column: 34, scope: !8769)
!8769 = distinct !DILexicalBlock(scope: !8762, file: !533, line: 213, column: 14)
!8770 = !DILocation(line: 213, column: 28, scope: !8769)
!8771 = !DILocation(line: 213, column: 14, scope: !8762)
!8772 = !DILocation(line: 0, scope: !8762)
!8773 = !DILocation(line: 210, column: 41, scope: !8764)
!8774 = !DILocation(line: 210, column: 12, scope: !8764)
!8775 = distinct !{!8775, !8759, !8776}
!8776 = !DILocation(line: 216, column: 2, scope: !8745)
!8777 = distinct !DISubprogram(name: "get_test_duration_ms", scope: !690, file: !690, line: 103, type: !3227, scopeLine: 104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8778)
!8778 = !{!8779}
!8779 = !DILocalVariable(name: "spend_cycle", scope: !8777, file: !690, line: 105, type: !152)
!8780 = !DILocation(line: 105, column: 25, scope: !8777)
!8781 = !DILocation(line: 105, column: 44, scope: !8777)
!8782 = !DILocation(line: 105, column: 42, scope: !8777)
!8783 = !DILocation(line: 0, scope: !8777)
!8784 = !DILocation(line: 107, column: 18, scope: !8777)
!8785 = !DILocation(line: 107, column: 16, scope: !8777)
!8786 = !DILocation(line: 108, column: 1, scope: !8777)
!8787 = distinct !DISubprogram(name: "cleanup_test", scope: !533, file: !533, line: 76, type: !8788, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8790)
!8788 = !DISubroutineType(types: !8789)
!8789 = !{!107, !8410}
!8790 = !{!8791, !8792, !8793}
!8791 = !DILocalVariable(name: "test", arg: 1, scope: !8787, file: !533, line: 76, type: !8410)
!8792 = !DILocalVariable(name: "ret", scope: !8787, file: !533, line: 78, type: !107)
!8793 = !DILocalVariable(name: "mock_status", scope: !8787, file: !533, line: 79, type: !107)
!8794 = !DILocation(line: 0, scope: !8787)
!8795 = !DILocation(line: 89, column: 3, scope: !8796)
!8796 = distinct !DILexicalBlock(scope: !8797, file: !533, line: 88, column: 41)
!8797 = distinct !DILexicalBlock(scope: !8787, file: !533, line: 88, column: 6)
!8798 = !DILocation(line: 103, column: 2, scope: !8787)
!8799 = distinct !DISubprogram(name: "get_final_test_result", scope: !533, file: !533, line: 236, type: !8800, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8802)
!8800 = !DISubroutineType(types: !8801)
!8801 = !{!107, !8754, !107}
!8802 = !{!8803, !8804, !8805, !8806}
!8803 = !DILocalVariable(name: "test", arg: 1, scope: !8799, file: !533, line: 236, type: !8754)
!8804 = !DILocalVariable(name: "ret", arg: 2, scope: !8799, file: !533, line: 236, type: !107)
!8805 = !DILocalVariable(name: "expected_result", scope: !8799, file: !533, line: 238, type: !554)
!8806 = !DILocalVariable(name: "expectation", scope: !8807, file: !533, line: 240, type: !8808)
!8807 = distinct !DILexicalBlock(scope: !8799, file: !533, line: 240, column: 2)
!8808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8809, size: 32)
!8809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_expected_result_entry", file: !114, line: 47, size: 96, elements: !8810)
!8810 = !{!8811, !8812, !8813}
!8811 = !DIDerivedType(tag: DW_TAG_member, name: "test_suite_name", scope: !8809, file: !114, line: 48, baseType: !118, size: 32)
!8812 = !DIDerivedType(tag: DW_TAG_member, name: "test_name", scope: !8809, file: !114, line: 49, baseType: !118, size: 32, offset: 32)
!8813 = !DIDerivedType(tag: DW_TAG_member, name: "expected_result", scope: !8809, file: !114, line: 50, baseType: !554, size: 32, offset: 64)
!8814 = !DILocation(line: 0, scope: !8799)
!8815 = !DILocation(line: 0, scope: !8807)
!8816 = !DILocation(line: 240, column: 2, scope: !8807)
!8817 = !DILocation(line: 243, column: 27, scope: !8818)
!8818 = distinct !DILexicalBlock(scope: !8819, file: !533, line: 243, column: 7)
!8819 = distinct !DILexicalBlock(scope: !8820, file: !533, line: 242, column: 75)
!8820 = distinct !DILexicalBlock(scope: !8807, file: !533, line: 240, column: 2)
!8821 = !DILocation(line: 243, column: 44, scope: !8818)
!8822 = !DILocation(line: 243, column: 7, scope: !8818)
!8823 = !DILocation(line: 243, column: 50, scope: !8818)
!8824 = !DILocation(line: 243, column: 55, scope: !8818)
!8825 = !DILocation(line: 244, column: 27, scope: !8818)
!8826 = !DILocation(line: 244, column: 50, scope: !8818)
!8827 = !DILocation(line: 244, column: 7, scope: !8818)
!8828 = !DILocation(line: 244, column: 67, scope: !8818)
!8829 = !DILocation(line: 243, column: 7, scope: !8819)
!8830 = !DILocation(line: 242, column: 60, scope: !8820)
!8831 = !DILocation(line: 242, column: 19, scope: !8820)
!8832 = distinct !{!8832, !8816, !8833}
!8833 = !DILocation(line: 248, column: 2, scope: !8807)
!8834 = !DILocation(line: 245, column: 35, scope: !8835)
!8835 = distinct !DILexicalBlock(scope: !8818, file: !533, line: 244, column: 73)
!8836 = !DILocation(line: 250, column: 6, scope: !8799)
!8837 = !DILocation(line: 255, column: 15, scope: !8838)
!8838 = distinct !DILexicalBlock(scope: !8839, file: !533, line: 250, column: 53)
!8839 = distinct !DILexicalBlock(scope: !8799, file: !533, line: 250, column: 6)
!8840 = !DILocation(line: 255, column: 10, scope: !8838)
!8841 = !DILocation(line: 255, column: 3, scope: !8838)
!8842 = !DILocation(line: 262, column: 15, scope: !8843)
!8843 = distinct !DILexicalBlock(scope: !8844, file: !533, line: 257, column: 53)
!8844 = distinct !DILexicalBlock(scope: !8799, file: !533, line: 257, column: 6)
!8845 = !DILocation(line: 262, column: 10, scope: !8843)
!8846 = !DILocation(line: 262, column: 3, scope: !8843)
!8847 = !DILocation(line: 266, column: 1, scope: !8799)
!8848 = distinct !DISubprogram(name: "TC_RESULT_TO_STR", scope: !690, file: !690, line: 81, type: !8849, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8851)
!8849 = !DISubroutineType(types: !8850)
!8850 = !{!118, !107}
!8851 = !{!8852}
!8852 = !DILocalVariable(name: "result", arg: 1, scope: !8848, file: !690, line: 81, type: !107)
!8853 = !DILocation(line: 0, scope: !8848)
!8854 = !DILocation(line: 83, column: 2, scope: !8848)
!8855 = !DILocation(line: 0, scope: !8856)
!8856 = distinct !DILexicalBlock(scope: !8848, file: !690, line: 83, column: 18)
!8857 = !DILocation(line: 93, column: 1, scope: !8848)
!8858 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !406, file: !406, line: 1675, type: !6481, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2296)
!8859 = !DILocation(line: 1677, column: 9, scope: !8858)
!8860 = !DILocation(line: 1677, column: 2, scope: !8858)
!8861 = distinct !DISubprogram(name: "k_cyc_to_ms_ceil32", scope: !8862, file: !8862, line: 809, type: !7681, scopeLine: 810, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8863)
!8862 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8863 = !{!8864}
!8864 = !DILocalVariable(name: "t", arg: 1, scope: !8861, file: !8862, line: 809, type: !152)
!8865 = !DILocation(line: 0, scope: !8861)
!8866 = !DILocation(line: 812, column: 17, scope: !8861)
!8867 = !DILocalVariable(name: "t", arg: 1, scope: !8868, file: !8862, line: 102, type: !566)
!8868 = distinct !DISubprogram(name: "z_tmcvt", scope: !8862, file: !8862, line: 102, type: !8869, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8871)
!8869 = !DISubroutineType(types: !8870)
!8870 = !{!566, !566, !152, !152, !145, !145, !145, !145}
!8871 = !{!8867, !8872, !8873, !8874, !8875, !8876, !8877, !8878, !8879, !8880, !8881}
!8872 = !DILocalVariable(name: "from_hz", arg: 2, scope: !8868, file: !8862, line: 102, type: !152)
!8873 = !DILocalVariable(name: "to_hz", arg: 3, scope: !8868, file: !8862, line: 103, type: !152)
!8874 = !DILocalVariable(name: "const_hz", arg: 4, scope: !8868, file: !8862, line: 103, type: !145)
!8875 = !DILocalVariable(name: "result32", arg: 5, scope: !8868, file: !8862, line: 104, type: !145)
!8876 = !DILocalVariable(name: "round_up", arg: 6, scope: !8868, file: !8862, line: 104, type: !145)
!8877 = !DILocalVariable(name: "round_off", arg: 7, scope: !8868, file: !8862, line: 105, type: !145)
!8878 = !DILocalVariable(name: "mul_ratio", scope: !8868, file: !8862, line: 107, type: !145)
!8879 = !DILocalVariable(name: "div_ratio", scope: !8868, file: !8862, line: 109, type: !145)
!8880 = !DILocalVariable(name: "off", scope: !8868, file: !8862, line: 116, type: !566)
!8881 = !DILocalVariable(name: "rdivisor", scope: !8882, file: !8862, line: 119, type: !152)
!8882 = distinct !DILexicalBlock(scope: !8883, file: !8862, line: 118, column: 18)
!8883 = distinct !DILexicalBlock(scope: !8868, file: !8862, line: 118, column: 6)
!8884 = !DILocation(line: 0, scope: !8868, inlinedAt: !8885)
!8885 = distinct !DILocation(line: 812, column: 9, scope: !8861)
!8886 = !DILocation(line: 135, column: 5, scope: !8887, inlinedAt: !8885)
!8887 = distinct !DILexicalBlock(scope: !8888, file: !8862, line: 134, column: 17)
!8888 = distinct !DILexicalBlock(scope: !8868, file: !8862, line: 134, column: 6)
!8889 = !DILocation(line: 136, column: 16, scope: !8890, inlinedAt: !8885)
!8890 = distinct !DILexicalBlock(scope: !8887, file: !8862, line: 136, column: 7)
!8891 = !DILocation(line: 812, column: 9, scope: !8861)
!8892 = !DILocation(line: 812, column: 2, scope: !8861)
!8893 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !8894, file: !8894, line: 24, type: !6481, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2296)
!8894 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8895 = !DILocation(line: 26, column: 9, scope: !8893)
!8896 = !DILocation(line: 26, column: 2, scope: !8893)
!8897 = distinct !DISubprogram(name: "test_cb", scope: !533, file: !533, line: 507, type: !562, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8898)
!8898 = !{!8899, !8900, !8901, !8902, !8903}
!8899 = !DILocalVariable(name: "a", arg: 1, scope: !8897, file: !533, line: 507, type: !106)
!8900 = !DILocalVariable(name: "b", arg: 2, scope: !8897, file: !533, line: 507, type: !106)
!8901 = !DILocalVariable(name: "c", arg: 3, scope: !8897, file: !533, line: 507, type: !106)
!8902 = !DILocalVariable(name: "suite", scope: !8897, file: !533, line: 509, type: !8458)
!8903 = !DILocalVariable(name: "test", scope: !8897, file: !533, line: 510, type: !8410)
!8904 = !DILocation(line: 0, scope: !8897)
!8905 = !DILocation(line: 510, column: 33, scope: !8897)
!8906 = !DILocation(line: 512, column: 14, scope: !8897)
!8907 = !DILocation(line: 513, column: 2, scope: !8897)
!8908 = !DILocation(line: 514, column: 13, scope: !8909)
!8909 = distinct !DILexicalBlock(scope: !8897, file: !533, line: 514, column: 6)
!8910 = !DILocation(line: 514, column: 6, scope: !8909)
!8911 = !DILocation(line: 514, column: 6, scope: !8897)
!8912 = !DILocation(line: 515, column: 3, scope: !8913)
!8913 = distinct !DILexicalBlock(scope: !8909, file: !533, line: 514, column: 21)
!8914 = !DILocation(line: 516, column: 2, scope: !8913)
!8915 = !DILocation(line: 517, column: 2, scope: !8897)
!8916 = !DILocation(line: 518, column: 14, scope: !8897)
!8917 = !DILocation(line: 519, column: 1, scope: !8897)
!8918 = distinct !DISubprogram(name: "run_test_functions", scope: !533, file: !533, line: 219, type: !8919, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8921)
!8919 = !DISubroutineType(types: !8920)
!8920 = !{null, !8458, !8410, !106}
!8921 = !{!8922, !8923, !8924}
!8922 = !DILocalVariable(name: "suite", arg: 1, scope: !8918, file: !533, line: 219, type: !8458)
!8923 = !DILocalVariable(name: "test", arg: 2, scope: !8918, file: !533, line: 219, type: !8410)
!8924 = !DILocalVariable(name: "data", arg: 3, scope: !8918, file: !533, line: 220, type: !106)
!8925 = !DILocation(line: 0, scope: !8918)
!8926 = !DILocation(line: 222, column: 8, scope: !8918)
!8927 = !DILocation(line: 223, column: 8, scope: !8918)
!8928 = !DILocation(line: 223, column: 2, scope: !8918)
!8929 = !DILocation(line: 224, column: 1, scope: !8918)
!8930 = distinct !DISubprogram(name: "z_impl_ztest_run_test_suites", scope: !533, file: !533, line: 929, type: !8931, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8933)
!8931 = !DISubroutineType(types: !8932)
!8932 = !{!107, !13}
!8933 = !{!8934, !8935, !8936}
!8934 = !DILocalVariable(name: "state", arg: 1, scope: !8930, file: !533, line: 929, type: !13)
!8935 = !DILocalVariable(name: "count", scope: !8930, file: !533, line: 931, type: !107)
!8936 = !DILocalVariable(name: "ptr", scope: !8937, file: !533, line: 954, type: !8458)
!8937 = distinct !DILexicalBlock(scope: !8930, file: !533, line: 954, column: 2)
!8938 = !DILocation(line: 0, scope: !8930)
!8939 = !DILocation(line: 933, column: 6, scope: !8940)
!8940 = distinct !DILexicalBlock(scope: !8930, file: !533, line: 933, column: 6)
!8941 = !DILocation(line: 933, column: 18, scope: !8940)
!8942 = !DILocation(line: 933, column: 6, scope: !8930)
!8943 = !DILocation(line: 0, scope: !8937)
!8944 = !DILocation(line: 954, column: 2, scope: !8937)
!8945 = !DILocation(line: 956, column: 12, scope: !8946)
!8946 = distinct !DILexicalBlock(scope: !8947, file: !533, line: 955, column: 48)
!8947 = distinct !DILexicalBlock(scope: !8937, file: !533, line: 954, column: 2)
!8948 = !DILocation(line: 956, column: 9, scope: !8946)
!8949 = !DILocation(line: 960, column: 7, scope: !8950)
!8950 = distinct !DILexicalBlock(scope: !8946, file: !533, line: 960, column: 7)
!8951 = !DILocation(line: 960, column: 19, scope: !8950)
!8952 = !DILocation(line: 955, column: 41, scope: !8947)
!8953 = !DILocation(line: 960, column: 50, scope: !8950)
!8954 = distinct !{!8954, !8944, !8955}
!8955 = !DILocation(line: 964, column: 2, scope: !8937)
!8956 = !DILocation(line: 967, column: 2, scope: !8930)
!8957 = !DILocation(line: 969, column: 2, scope: !8930)
!8958 = !DILocation(line: 970, column: 1, scope: !8930)
!8959 = distinct !DISubprogram(name: "__ztest_run_test_suite", scope: !533, file: !533, line: 907, type: !8960, scopeLine: 908, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8962)
!8960 = !DISubroutineType(types: !8961)
!8961 = !{!107, !8458, !13}
!8962 = !{!8963, !8964, !8965, !8966, !8967, !8969}
!8963 = !DILocalVariable(name: "ptr", arg: 1, scope: !8959, file: !533, line: 907, type: !8458)
!8964 = !DILocalVariable(name: "state", arg: 2, scope: !8959, file: !533, line: 907, type: !13)
!8965 = !DILocalVariable(name: "stats", scope: !8959, file: !533, line: 909, type: !8469)
!8966 = !DILocalVariable(name: "count", scope: !8959, file: !533, line: 910, type: !107)
!8967 = !DILocalVariable(name: "i", scope: !8968, file: !533, line: 914, type: !107)
!8968 = distinct !DILexicalBlock(scope: !8959, file: !533, line: 914, column: 2)
!8969 = !DILocalVariable(name: "fail", scope: !8970, file: !533, line: 916, type: !107)
!8970 = distinct !DILexicalBlock(scope: !8971, file: !533, line: 915, column: 47)
!8971 = distinct !DILexicalBlock(scope: !8972, file: !533, line: 915, column: 7)
!8972 = distinct !DILexicalBlock(scope: !8973, file: !533, line: 914, column: 47)
!8973 = distinct !DILexicalBlock(scope: !8968, file: !533, line: 914, column: 2)
!8974 = !DILocation(line: 0, scope: !8959)
!8975 = !DILocation(line: 909, column: 41, scope: !8959)
!8976 = !DILocation(line: 912, column: 2, scope: !8959)
!8977 = !DILocation(line: 0, scope: !8968)
!8978 = !DILocation(line: 915, column: 7, scope: !8971)
!8979 = !DILocation(line: 915, column: 7, scope: !8972)
!8980 = !DILocation(line: 916, column: 15, scope: !8970)
!8981 = !DILocation(line: 0, scope: !8970)
!8982 = !DILocation(line: 919, column: 20, scope: !8970)
!8983 = !DILocation(line: 920, column: 31, scope: !8970)
!8984 = !DILocation(line: 920, column: 25, scope: !8970)
!8985 = !DILocation(line: 921, column: 3, scope: !8970)
!8986 = !DILocation(line: 0, scope: !8971)
!8987 = !DILocation(line: 926, column: 2, scope: !8959)
!8988 = distinct !DISubprogram(name: "__ztest_show_suite_summary", scope: !533, file: !533, line: 886, type: !3227, scopeLine: 887, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !8989)
!8989 = !{!8990}
!8990 = !DILocalVariable(name: "ptr", scope: !8991, file: !533, line: 894, type: !8458)
!8991 = distinct !DILexicalBlock(scope: !8988, file: !533, line: 894, column: 2)
!8992 = !DILocation(line: 892, column: 2, scope: !8988)
!8993 = !DILocation(line: 0, scope: !8991)
!8994 = !DILocation(line: 894, column: 2, scope: !8991)
!8995 = !DILocation(line: 903, column: 2, scope: !8988)
!8996 = !DILocation(line: 905, column: 1, scope: !8988)
!8997 = !DILocation(line: 898, column: 3, scope: !8998)
!8998 = distinct !DILexicalBlock(scope: !8999, file: !533, line: 895, column: 48)
!8999 = distinct !DILexicalBlock(scope: !8991, file: !533, line: 894, column: 2)
!9000 = !DILocation(line: 895, column: 41, scope: !8999)
!9001 = !DILocation(line: 895, column: 11, scope: !8999)
!9002 = distinct !{!9002, !8994, !9003}
!9003 = !DILocation(line: 902, column: 2, scope: !8991)
!9004 = distinct !DISubprogram(name: "__ztest_show_suite_summary_verbose", scope: !533, file: !533, line: 852, type: !9005, scopeLine: 853, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !9007)
!9005 = !DISubroutineType(types: !9006)
!9006 = !{null, !8458}
!9007 = !{!9008, !9009, !9010, !9011}
!9008 = !DILocalVariable(name: "suite", arg: 1, scope: !9004, file: !533, line: 852, type: !8458)
!9009 = !DILocalVariable(name: "test", scope: !9004, file: !533, line: 854, type: !8410)
!9010 = !DILocalVariable(name: "tc_result", scope: !9004, file: !533, line: 855, type: !107)
!9011 = !DILocalVariable(name: "flush_frequency", scope: !9004, file: !533, line: 856, type: !107)
!9012 = !DILocation(line: 0, scope: !9004)
!9013 = !DILocation(line: 858, column: 2, scope: !9004)
!9014 = !DILocation(line: 860, column: 47, scope: !9004)
!9015 = !DILocation(line: 860, column: 18, scope: !9004)
!9016 = !DILocation(line: 860, column: 60, scope: !9004)
!9017 = !DILocation(line: 860, column: 2, scope: !9004)
!9018 = !DILocation(line: 861, column: 13, scope: !9019)
!9019 = distinct !DILexicalBlock(scope: !9020, file: !533, line: 861, column: 7)
!9020 = distinct !DILexicalBlock(scope: !9004, file: !533, line: 860, column: 70)
!9021 = !DILocation(line: 861, column: 20, scope: !9019)
!9022 = !DILocation(line: 861, column: 47, scope: !9019)
!9023 = !DILocation(line: 861, column: 31, scope: !9019)
!9024 = !DILocation(line: 861, column: 7, scope: !9020)
!9025 = !DILocation(line: 863, column: 27, scope: !9026)
!9026 = distinct !DILexicalBlock(scope: !9019, file: !533, line: 863, column: 14)
!9027 = !DILocation(line: 863, column: 38, scope: !9026)
!9028 = !DILocation(line: 0, scope: !9019)
!9029 = !DILocation(line: 869, column: 3, scope: !9020)
!9030 = distinct !{!9030, !9017, !9031}
!9031 = !DILocation(line: 880, column: 2, scope: !9004)
!9032 = !DILocation(line: 881, column: 2, scope: !9004)
!9033 = !DILocation(line: 883, column: 1, scope: !9004)
!9034 = distinct !DISubprogram(name: "__ztest_show_suite_summary_oneline", scope: !533, file: !533, line: 801, type: !9005, scopeLine: 802, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !9035)
!9035 = !{!9036, !9037, !9038, !9039, !9040, !9041, !9042, !9043, !9044, !9045, !9046, !9047, !9048, !9049}
!9036 = !DILocalVariable(name: "suite", arg: 1, scope: !9034, file: !533, line: 801, type: !8458)
!9037 = !DILocalVariable(name: "distinct_pass", scope: !9034, file: !533, line: 803, type: !107)
!9038 = !DILocalVariable(name: "distinct_fail", scope: !9034, file: !533, line: 803, type: !107)
!9039 = !DILocalVariable(name: "distinct_skip", scope: !9034, file: !533, line: 803, type: !107)
!9040 = !DILocalVariable(name: "distinct_total", scope: !9034, file: !533, line: 803, type: !107)
!9041 = !DILocalVariable(name: "effective_total", scope: !9034, file: !533, line: 804, type: !107)
!9042 = !DILocalVariable(name: "expanded_pass", scope: !9034, file: !533, line: 805, type: !107)
!9043 = !DILocalVariable(name: "expanded_passrate", scope: !9034, file: !533, line: 805, type: !107)
!9044 = !DILocalVariable(name: "passrate_major", scope: !9034, file: !533, line: 806, type: !107)
!9045 = !DILocalVariable(name: "passrate_minor", scope: !9034, file: !533, line: 806, type: !107)
!9046 = !DILocalVariable(name: "passrate_tail", scope: !9034, file: !533, line: 806, type: !107)
!9047 = !DILocalVariable(name: "suite_result", scope: !9034, file: !533, line: 807, type: !107)
!9048 = !DILocalVariable(name: "test", scope: !9034, file: !533, line: 809, type: !8410)
!9049 = !DILocalVariable(name: "suite_duration_worst_ms", scope: !9034, file: !533, line: 810, type: !32)
!9050 = !DILocation(line: 0, scope: !9034)
!9051 = !DILocation(line: 813, column: 47, scope: !9034)
!9052 = !DILocation(line: 813, column: 18, scope: !9034)
!9053 = !DILocation(line: 813, column: 60, scope: !9034)
!9054 = !DILocation(line: 813, column: 2, scope: !9034)
!9055 = !DILocation(line: 814, column: 17, scope: !9056)
!9056 = distinct !DILexicalBlock(scope: !9034, file: !533, line: 813, column: 70)
!9057 = !DILocation(line: 815, column: 36, scope: !9056)
!9058 = !DILocation(line: 815, column: 43, scope: !9056)
!9059 = !DILocation(line: 815, column: 27, scope: !9056)
!9060 = !DILocation(line: 816, column: 20, scope: !9061)
!9061 = distinct !DILexicalBlock(scope: !9056, file: !533, line: 816, column: 7)
!9062 = !DILocation(line: 816, column: 47, scope: !9061)
!9063 = !DILocation(line: 816, column: 31, scope: !9061)
!9064 = !DILocation(line: 816, column: 7, scope: !9056)
!9065 = !DILocation(line: 817, column: 17, scope: !9066)
!9066 = distinct !DILexicalBlock(scope: !9061, file: !533, line: 816, column: 58)
!9067 = !DILocation(line: 818, column: 3, scope: !9066)
!9068 = !DILocation(line: 818, column: 27, scope: !9069)
!9069 = distinct !DILexicalBlock(scope: !9061, file: !533, line: 818, column: 14)
!9070 = !DILocation(line: 818, column: 38, scope: !9069)
!9071 = !DILocation(line: 818, column: 14, scope: !9061)
!9072 = !DILocation(line: 819, column: 17, scope: !9073)
!9073 = distinct !DILexicalBlock(scope: !9069, file: !533, line: 818, column: 65)
!9074 = !DILocation(line: 820, column: 3, scope: !9073)
!9075 = !DILocation(line: 821, column: 17, scope: !9076)
!9076 = distinct !DILexicalBlock(scope: !9069, file: !533, line: 820, column: 10)
!9077 = distinct !{!9077, !9054, !9078}
!9078 = !DILocation(line: 823, column: 2, scope: !9034)
!9079 = !DILocation(line: 825, column: 20, scope: !9080)
!9080 = distinct !DILexicalBlock(scope: !9034, file: !533, line: 825, column: 6)
!9081 = !DILocation(line: 825, column: 6, scope: !9034)
!9082 = !DILocation(line: 829, column: 33, scope: !9083)
!9083 = distinct !DILexicalBlock(scope: !9080, file: !533, line: 828, column: 9)
!9084 = !DILocation(line: 829, column: 18, scope: !9083)
!9085 = !DILocation(line: 830, column: 36, scope: !9083)
!9086 = !DILocation(line: 831, column: 33, scope: !9083)
!9087 = !DILocation(line: 832, column: 37, scope: !9083)
!9088 = !DILocation(line: 833, column: 38, scope: !9083)
!9089 = !DILocation(line: 834, column: 56, scope: !9083)
!9090 = !DILocation(line: 834, column: 39, scope: !9083)
!9091 = !DILocation(line: 834, column: 64, scope: !9083)
!9092 = !DILocation(line: 835, column: 78, scope: !9083)
!9093 = !DILocation(line: 835, column: 61, scope: !9083)
!9094 = !DILocation(line: 836, column: 21, scope: !9095)
!9095 = distinct !DILexicalBlock(scope: !9083, file: !533, line: 836, column: 7)
!9096 = !DILocation(line: 836, column: 7, scope: !9083)
!9097 = !DILocation(line: 0, scope: !9080)
!9098 = !DILocation(line: 841, column: 2, scope: !9034)
!9099 = !DILocation(line: 849, column: 1, scope: !9034)
!9100 = distinct !DISubprogram(name: "__ztest_init_unit_test_result_for_suite", scope: !533, file: !533, line: 773, type: !9005, scopeLine: 774, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !9101)
!9101 = !{!9102, !9103}
!9102 = !DILocalVariable(name: "suite", arg: 1, scope: !9100, file: !533, line: 773, type: !8458)
!9103 = !DILocalVariable(name: "test", scope: !9100, file: !533, line: 775, type: !8410)
!9104 = !DILocation(line: 0, scope: !9100)
!9105 = !DILocation(line: 777, column: 47, scope: !9100)
!9106 = !DILocation(line: 777, column: 18, scope: !9100)
!9107 = !DILocation(line: 777, column: 60, scope: !9100)
!9108 = !DILocation(line: 777, column: 2, scope: !9100)
!9109 = !DILocation(line: 778, column: 9, scope: !9110)
!9110 = distinct !DILexicalBlock(scope: !9100, file: !533, line: 777, column: 70)
!9111 = !DILocation(line: 778, column: 16, scope: !9110)
!9112 = !DILocation(line: 778, column: 26, scope: !9110)
!9113 = !DILocation(line: 779, column: 9, scope: !9110)
!9114 = !DILocation(line: 779, column: 16, scope: !9110)
!9115 = !DILocation(line: 779, column: 27, scope: !9110)
!9116 = !DILocation(line: 780, column: 9, scope: !9110)
!9117 = !DILocation(line: 780, column: 16, scope: !9110)
!9118 = !DILocation(line: 780, column: 27, scope: !9110)
!9119 = !DILocation(line: 781, column: 9, scope: !9110)
!9120 = !DILocation(line: 781, column: 16, scope: !9110)
!9121 = !DILocation(line: 781, column: 27, scope: !9110)
!9122 = !DILocation(line: 782, column: 9, scope: !9110)
!9123 = !DILocation(line: 782, column: 16, scope: !9110)
!9124 = !DILocation(line: 782, column: 34, scope: !9110)
!9125 = distinct !{!9125, !9108, !9126}
!9126 = !DILocation(line: 783, column: 2, scope: !9100)
!9127 = !DILocation(line: 784, column: 1, scope: !9100)
!9128 = distinct !DISubprogram(name: "ztest_verify_all_test_suites_ran", scope: !533, file: !533, line: 972, type: !3227, scopeLine: 973, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !9129)
!9129 = !{!9130, !9131, !9132}
!9130 = !DILocalVariable(name: "all_tests_run", scope: !9128, file: !533, line: 974, type: !145)
!9131 = !DILocalVariable(name: "suite", scope: !9128, file: !533, line: 975, type: !8458)
!9132 = !DILocalVariable(name: "test", scope: !9128, file: !533, line: 976, type: !8410)
!9133 = !DILocation(line: 0, scope: !9128)
!9134 = !DILocation(line: 979, column: 3, scope: !9135)
!9135 = distinct !DILexicalBlock(scope: !9136, file: !533, line: 979, column: 3)
!9136 = distinct !DILexicalBlock(scope: !9137, file: !533, line: 978, column: 47)
!9137 = distinct !DILexicalBlock(scope: !9128, file: !533, line: 978, column: 6)
!9138 = !DILocation(line: 987, column: 3, scope: !9139)
!9139 = distinct !DILexicalBlock(scope: !9136, file: !533, line: 987, column: 3)
!9140 = !DILocation(line: 981, column: 15, scope: !9141)
!9141 = distinct !DILexicalBlock(scope: !9142, file: !533, line: 981, column: 8)
!9142 = distinct !DILexicalBlock(scope: !9143, file: !533, line: 980, column: 17)
!9143 = distinct !DILexicalBlock(scope: !9135, file: !533, line: 979, column: 3)
!9144 = !DILocation(line: 981, column: 22, scope: !9141)
!9145 = !DILocation(line: 981, column: 32, scope: !9141)
!9146 = !DILocation(line: 981, column: 8, scope: !9142)
!9147 = !DILocation(line: 982, column: 59, scope: !9148)
!9148 = distinct !DILexicalBlock(scope: !9141, file: !533, line: 981, column: 37)
!9149 = !DILocation(line: 982, column: 5, scope: !9148)
!9150 = !DILocation(line: 984, column: 4, scope: !9148)
!9151 = !DILocation(line: 980, column: 8, scope: !9143)
!9152 = !DILocation(line: 979, column: 52, scope: !9143)
!9153 = distinct !{!9153, !9134, !9154}
!9154 = !DILocation(line: 985, column: 3, scope: !9135)
!9155 = !DILocation(line: 988, column: 40, scope: !9156)
!9156 = distinct !DILexicalBlock(scope: !9157, file: !533, line: 987, column: 86)
!9157 = distinct !DILexicalBlock(scope: !9139, file: !533, line: 987, column: 3)
!9158 = !DILocation(line: 988, column: 12, scope: !9156)
!9159 = !DILocation(line: 989, column: 14, scope: !9160)
!9160 = distinct !DILexicalBlock(scope: !9156, file: !533, line: 989, column: 8)
!9161 = !DILocation(line: 989, column: 8, scope: !9156)
!9162 = !DILocation(line: 992, column: 17, scope: !9163)
!9163 = distinct !DILexicalBlock(scope: !9160, file: !533, line: 989, column: 23)
!9164 = !DILocation(line: 992, column: 29, scope: !9163)
!9165 = !DILocation(line: 990, column: 5, scope: !9163)
!9166 = !DILocation(line: 994, column: 4, scope: !9163)
!9167 = !DILocation(line: 987, column: 78, scope: !9157)
!9168 = !DILocation(line: 987, column: 49, scope: !9157)
!9169 = distinct !{!9169, !9138, !9170}
!9170 = !DILocation(line: 995, column: 3, scope: !9139)
!9171 = !DILocation(line: 997, column: 7, scope: !9136)
!9172 = !DILocation(line: 998, column: 16, scope: !9173)
!9173 = distinct !DILexicalBlock(scope: !9174, file: !533, line: 997, column: 23)
!9174 = distinct !DILexicalBlock(scope: !9136, file: !533, line: 997, column: 7)
!9175 = !DILocation(line: 999, column: 3, scope: !9173)
!9176 = !DILocation(line: 1002, column: 2, scope: !9177)
!9177 = distinct !DILexicalBlock(scope: !9128, file: !533, line: 1002, column: 2)
!9178 = !DILocation(line: 1003, column: 13, scope: !9179)
!9179 = distinct !DILexicalBlock(scope: !9180, file: !533, line: 1003, column: 7)
!9180 = distinct !DILexicalBlock(scope: !9181, file: !533, line: 1002, column: 85)
!9181 = distinct !DILexicalBlock(scope: !9177, file: !533, line: 1002, column: 2)
!9182 = !DILocation(line: 1003, column: 20, scope: !9179)
!9183 = !DILocation(line: 1003, column: 46, scope: !9179)
!9184 = !DILocation(line: 1003, column: 31, scope: !9179)
!9185 = !DILocation(line: 1003, column: 72, scope: !9179)
!9186 = !DILocation(line: 1003, column: 57, scope: !9179)
!9187 = !DILocation(line: 1004, column: 20, scope: !9179)
!9188 = !DILocation(line: 1003, column: 83, scope: !9179)
!9189 = !DILocation(line: 1003, column: 7, scope: !9180)
!9190 = !DILocation(line: 1005, column: 41, scope: !9191)
!9191 = distinct !DILexicalBlock(scope: !9179, file: !533, line: 1004, column: 31)
!9192 = !DILocation(line: 1005, column: 64, scope: !9191)
!9193 = !DILocation(line: 1005, column: 4, scope: !9191)
!9194 = !DILocation(line: 1006, column: 16, scope: !9191)
!9195 = !DILocation(line: 1007, column: 3, scope: !9191)
!9196 = !DILocation(line: 1002, column: 77, scope: !9181)
!9197 = !DILocation(line: 1002, column: 48, scope: !9181)
!9198 = distinct !{!9198, !9176, !9199}
!9199 = !DILocation(line: 1008, column: 2, scope: !9177)
!9200 = !DILocation(line: 1009, column: 1, scope: !9128)
!9201 = distinct !DISubprogram(name: "ztest_run_all", scope: !533, file: !533, line: 1011, type: !17, scopeLine: 1011, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !9202)
!9202 = !{!9203}
!9203 = !DILocalVariable(name: "state", arg: 1, scope: !9201, file: !533, line: 1011, type: !13)
!9204 = !DILocation(line: 0, scope: !9201)
!9205 = !DILocation(line: 1011, column: 51, scope: !9201)
!9206 = !DILocation(line: 1011, column: 41, scope: !9201)
!9207 = !DILocation(line: 1011, column: 67, scope: !9201)
!9208 = distinct !DISubprogram(name: "test_main", scope: !533, file: !533, line: 1013, type: !3227, scopeLine: 1014, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2296)
!9209 = !DILocation(line: 1015, column: 2, scope: !9208)
!9210 = !DILocation(line: 1017, column: 2, scope: !9208)
!9211 = !DILocation(line: 1018, column: 1, scope: !9208)
!9212 = distinct !DISubprogram(name: "main", scope: !533, file: !533, line: 1030, type: !3227, scopeLine: 1031, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !529, retainedNodes: !2296)
!9213 = !DILocation(line: 1046, column: 2, scope: !9212)
!9214 = !DILocation(line: 1047, column: 2, scope: !9212)
!9215 = !DILocation(line: 1071, column: 1, scope: !9212)
!9216 = distinct !DISubprogram(name: "z_ztest_run_all", scope: !699, file: !699, line: 30, type: !17, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !9217)
!9217 = !{!9218}
!9218 = !DILocalVariable(name: "state", arg: 1, scope: !9216, file: !699, line: 30, type: !13)
!9219 = !DILocation(line: 0, scope: !9216)
!9220 = !DILocation(line: 32, column: 2, scope: !9216)
!9221 = !DILocation(line: 33, column: 1, scope: !9216)
!9222 = distinct !DISubprogram(name: "z_ztest_should_suite_run", scope: !699, file: !699, line: 45, type: !706, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !9223)
!9223 = !{!9224, !9225, !9226}
!9224 = !DILocalVariable(name: "state", arg: 1, scope: !9222, file: !699, line: 45, type: !13)
!9225 = !DILocalVariable(name: "suite", arg: 2, scope: !9222, file: !699, line: 45, type: !708)
!9226 = !DILocalVariable(name: "run_suite", scope: !9222, file: !699, line: 47, type: !145)
!9227 = !DILocation(line: 0, scope: !9222)
!9228 = !DILocation(line: 49, column: 13, scope: !9229)
!9229 = distinct !DILexicalBlock(scope: !9222, file: !699, line: 49, column: 6)
!9230 = !DILocation(line: 49, column: 23, scope: !9229)
!9231 = !DILocation(line: 49, column: 6, scope: !9222)
!9232 = !DILocation(line: 50, column: 15, scope: !9233)
!9233 = distinct !DILexicalBlock(scope: !9229, file: !699, line: 49, column: 32)
!9234 = !DILocation(line: 51, column: 2, scope: !9233)
!9235 = !DILocation(line: 53, column: 2, scope: !9222)
!9236 = distinct !DISubprogram(name: "z_ztest_should_test_run", scope: !699, file: !699, line: 65, type: !727, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !9237)
!9237 = !{!9238, !9239}
!9238 = !DILocalVariable(name: "suite", arg: 1, scope: !9236, file: !699, line: 65, type: !118)
!9239 = !DILocalVariable(name: "test", arg: 2, scope: !9236, file: !699, line: 65, type: !118)
!9240 = !DILocation(line: 0, scope: !9236)
!9241 = !DILocation(line: 67, column: 2, scope: !9236)
!9242 = distinct !DISubprogram(name: "ztest_run_test_suites", scope: !9243, file: !9243, line: 24, type: !8931, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !9244)
!9243 = !DIFile(filename: "zephyr/include/generated/syscalls/ztest_test_new.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest")
!9244 = !{!9245}
!9245 = !DILocalVariable(name: "state", arg: 1, scope: !9242, file: !9243, line: 24, type: !13)
!9246 = !DILocation(line: 0, scope: !9242)
!9247 = !DILocation(line: 32, column: 2, scope: !9248)
!9248 = distinct !DILexicalBlock(scope: !9242, file: !9243, line: 32, column: 2)
!9249 = !{i64 2155566505}
!9250 = !DILocation(line: 33, column: 9, scope: !9242)
!9251 = !DILocation(line: 33, column: 2, scope: !9242)
!9252 = distinct !DISubprogram(name: "ztest_relative_filename", scope: !699, file: !699, line: 20, type: !9253, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !696, retainedNodes: !9255)
!9253 = !DISubroutineType(types: !9254)
!9254 = !{!118, !118}
!9255 = !{!9256}
!9256 = !DILocalVariable(name: "file", arg: 1, scope: !9252, file: !699, line: 20, type: !118)
!9257 = !DILocation(line: 0, scope: !9252)
!9258 = !DILocation(line: 22, column: 2, scope: !9252)
!9259 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !846, file: !846, line: 368, type: !899, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9260)
!9260 = !{!9261}
!9261 = !DILocalVariable(name: "dev", arg: 1, scope: !9259, file: !846, line: 368, type: !875)
!9262 = !DILocation(line: 0, scope: !9259)
!9263 = !DILocation(line: 370, column: 2, scope: !9259)
!9264 = !DILocation(line: 371, column: 1, scope: !9259)
!9265 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !846, file: !846, line: 243, type: !9266, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9268)
!9266 = !DISubroutineType(types: !9267)
!9267 = !{null, !107, !107, !875}
!9268 = !{!9269, !9270, !9271, !9272, !9274}
!9269 = !DILocalVariable(name: "min", arg: 1, scope: !9265, file: !846, line: 243, type: !107)
!9270 = !DILocalVariable(name: "max", arg: 2, scope: !9265, file: !846, line: 243, type: !107)
!9271 = !DILocalVariable(name: "dev", arg: 3, scope: !9265, file: !846, line: 243, type: !875)
!9272 = !DILocalVariable(name: "data", scope: !9265, file: !846, line: 245, type: !9273)
!9273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !879, size: 32)
!9274 = !DILocalVariable(name: "line", scope: !9265, file: !846, line: 246, type: !107)
!9275 = !DILocation(line: 0, scope: !9265)
!9276 = !DILocation(line: 245, column: 38, scope: !9265)
!9277 = !DILocation(line: 249, column: 24, scope: !9278)
!9278 = distinct !DILexicalBlock(scope: !9279, file: !846, line: 249, column: 2)
!9279 = distinct !DILexicalBlock(scope: !9265, file: !846, line: 249, column: 2)
!9280 = !DILocation(line: 249, column: 2, scope: !9279)
!9281 = !DILocation(line: 251, column: 7, scope: !9282)
!9282 = distinct !DILexicalBlock(scope: !9283, file: !846, line: 251, column: 7)
!9283 = distinct !DILexicalBlock(scope: !9278, file: !846, line: 249, column: 39)
!9284 = !DILocation(line: 251, column: 7, scope: !9283)
!9285 = !DILocation(line: 253, column: 4, scope: !9286)
!9286 = distinct !DILexicalBlock(scope: !9282, file: !846, line: 251, column: 36)
!9287 = !DILocation(line: 256, column: 24, scope: !9288)
!9288 = distinct !DILexicalBlock(scope: !9286, file: !846, line: 256, column: 8)
!9289 = !DILocation(line: 256, column: 9, scope: !9288)
!9290 = !DILocation(line: 256, column: 8, scope: !9286)
!9291 = !DILocation(line: 260, column: 43, scope: !9286)
!9292 = !DILocation(line: 260, column: 4, scope: !9286)
!9293 = !DILocation(line: 261, column: 3, scope: !9286)
!9294 = !DILocation(line: 249, column: 35, scope: !9278)
!9295 = distinct !{!9295, !9280, !9296}
!9296 = !DILocation(line: 262, column: 2, scope: !9279)
!9297 = !DILocation(line: 263, column: 1, scope: !9265)
!9298 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !846, file: !846, line: 158, type: !214, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9299)
!9299 = !{!9300}
!9300 = !DILocalVariable(name: "line", arg: 1, scope: !9298, file: !846, line: 158, type: !107)
!9301 = !DILocation(line: 0, scope: !9298)
!9302 = !DILocation(line: 170, column: 38, scope: !9303)
!9303 = distinct !DILexicalBlock(scope: !9304, file: !846, line: 160, column: 17)
!9304 = distinct !DILexicalBlock(scope: !9298, file: !846, line: 160, column: 6)
!9305 = !DILocation(line: 170, column: 10, scope: !9303)
!9306 = !DILocation(line: 176, column: 1, scope: !9298)
!9307 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !846, file: !846, line: 183, type: !9308, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9310)
!9308 = !DISubroutineType(types: !9309)
!9309 = !{null, !107}
!9310 = !{!9311}
!9311 = !DILocalVariable(name: "line", arg: 1, scope: !9307, file: !846, line: 183, type: !107)
!9312 = !DILocation(line: 0, scope: !9307)
!9313 = !DILocation(line: 195, column: 28, scope: !9314)
!9314 = distinct !DILexicalBlock(scope: !9315, file: !846, line: 185, column: 17)
!9315 = distinct !DILexicalBlock(scope: !9307, file: !846, line: 185, column: 6)
!9316 = !DILocation(line: 195, column: 3, scope: !9314)
!9317 = !DILocation(line: 200, column: 1, scope: !9307)
!9318 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !9319, file: !9319, line: 910, type: !6491, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9320)
!9319 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9320 = !{!9321}
!9321 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9318, file: !9319, line: 910, type: !152)
!9322 = !DILocation(line: 0, scope: !9318)
!9323 = !DILocation(line: 912, column: 3, scope: !9318)
!9324 = !DILocation(line: 913, column: 1, scope: !9318)
!9325 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !9319, file: !9319, line: 834, type: !7681, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9326)
!9326 = !{!9327}
!9327 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9325, file: !9319, line: 834, type: !152)
!9328 = !DILocation(line: 0, scope: !9325)
!9329 = !DILocation(line: 836, column: 11, scope: !9325)
!9330 = !DILocation(line: 836, column: 40, scope: !9325)
!9331 = !DILocation(line: 836, column: 3, scope: !9325)
!9332 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !846, file: !846, line: 304, type: !899, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9333)
!9333 = !{!9334}
!9334 = !DILocalVariable(name: "dev", arg: 1, scope: !9332, file: !846, line: 304, type: !875)
!9335 = !DILocation(line: 0, scope: !9332)
!9336 = !DILocation(line: 306, column: 2, scope: !9332)
!9337 = !DILocation(line: 307, column: 1, scope: !9332)
!9338 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !846, file: !846, line: 299, type: !899, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9339)
!9339 = !{!9340}
!9340 = !DILocalVariable(name: "dev", arg: 1, scope: !9338, file: !846, line: 299, type: !875)
!9341 = !DILocation(line: 0, scope: !9338)
!9342 = !DILocation(line: 301, column: 2, scope: !9338)
!9343 = !DILocation(line: 302, column: 1, scope: !9338)
!9344 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !846, file: !846, line: 294, type: !899, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9345)
!9345 = !{!9346}
!9346 = !DILocalVariable(name: "dev", arg: 1, scope: !9344, file: !846, line: 294, type: !875)
!9347 = !DILocation(line: 0, scope: !9344)
!9348 = !DILocation(line: 296, column: 2, scope: !9344)
!9349 = !DILocation(line: 297, column: 1, scope: !9344)
!9350 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !846, file: !846, line: 397, type: !899, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9351)
!9351 = !{!9352}
!9352 = !DILocalVariable(name: "dev", arg: 1, scope: !9350, file: !846, line: 397, type: !875)
!9353 = !DILocation(line: 0, scope: !9350)
!9354 = !DILocation(line: 399, column: 2, scope: !9350)
!9355 = !DILocation(line: 400, column: 1, scope: !9350)
!9356 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !846, file: !846, line: 392, type: !899, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9357)
!9357 = !{!9358}
!9358 = !DILocalVariable(name: "dev", arg: 1, scope: !9356, file: !846, line: 392, type: !875)
!9359 = !DILocation(line: 0, scope: !9356)
!9360 = !DILocation(line: 394, column: 2, scope: !9356)
!9361 = !DILocation(line: 395, column: 1, scope: !9356)
!9362 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !846, file: !846, line: 289, type: !899, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9363)
!9363 = !{!9364}
!9364 = !DILocalVariable(name: "dev", arg: 1, scope: !9362, file: !846, line: 289, type: !875)
!9365 = !DILocation(line: 0, scope: !9362)
!9366 = !DILocation(line: 291, column: 2, scope: !9362)
!9367 = !DILocation(line: 292, column: 1, scope: !9362)
!9368 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !846, file: !846, line: 387, type: !899, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9369)
!9369 = !{!9370}
!9370 = !DILocalVariable(name: "dev", arg: 1, scope: !9368, file: !846, line: 387, type: !875)
!9371 = !DILocation(line: 0, scope: !9368)
!9372 = !DILocation(line: 389, column: 2, scope: !9368)
!9373 = !DILocation(line: 390, column: 1, scope: !9368)
!9374 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !846, file: !846, line: 382, type: !899, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9375)
!9375 = !{!9376}
!9376 = !DILocalVariable(name: "dev", arg: 1, scope: !9374, file: !846, line: 382, type: !875)
!9377 = !DILocation(line: 0, scope: !9374)
!9378 = !DILocation(line: 384, column: 2, scope: !9374)
!9379 = !DILocation(line: 385, column: 1, scope: !9374)
!9380 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !846, file: !846, line: 373, type: !899, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9381)
!9381 = !{!9382}
!9382 = !DILocalVariable(name: "dev", arg: 1, scope: !9380, file: !846, line: 373, type: !875)
!9383 = !DILocation(line: 0, scope: !9380)
!9384 = !DILocation(line: 375, column: 2, scope: !9380)
!9385 = !DILocation(line: 376, column: 1, scope: !9380)
!9386 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !846, file: !846, line: 284, type: !899, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9387)
!9387 = !{!9388}
!9388 = !DILocalVariable(name: "dev", arg: 1, scope: !9386, file: !846, line: 284, type: !875)
!9389 = !DILocation(line: 0, scope: !9386)
!9390 = !DILocation(line: 286, column: 2, scope: !9386)
!9391 = !DILocation(line: 287, column: 1, scope: !9386)
!9392 = distinct !DISubprogram(name: "stm32_exti_init", scope: !846, file: !846, line: 416, type: !873, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9393)
!9393 = !{!9394}
!9394 = !DILocalVariable(name: "dev", arg: 1, scope: !9392, file: !846, line: 416, type: !875)
!9395 = !DILocation(line: 0, scope: !9392)
!9396 = !DILocation(line: 418, column: 2, scope: !9392)
!9397 = !DILocation(line: 420, column: 2, scope: !9392)
!9398 = !DILocation(line: 0, scope: !898)
!9399 = !DILocation(line: 493, column: 2, scope: !9400)
!9400 = distinct !DILexicalBlock(scope: !898, file: !846, line: 493, column: 2)
!9401 = !DILocation(line: 497, column: 2, scope: !9402)
!9402 = distinct !DILexicalBlock(scope: !898, file: !846, line: 497, column: 2)
!9403 = !DILocation(line: 507, column: 2, scope: !9404)
!9404 = distinct !DILexicalBlock(scope: !898, file: !846, line: 507, column: 2)
!9405 = !DILocation(line: 512, column: 2, scope: !9406)
!9406 = distinct !DILexicalBlock(scope: !898, file: !846, line: 512, column: 2)
!9407 = !DILocation(line: 516, column: 2, scope: !9408)
!9408 = distinct !DILexicalBlock(scope: !898, file: !846, line: 516, column: 2)
!9409 = !DILocation(line: 523, column: 2, scope: !9410)
!9410 = distinct !DILexicalBlock(scope: !898, file: !846, line: 523, column: 2)
!9411 = !DILocation(line: 527, column: 2, scope: !9412)
!9412 = distinct !DILexicalBlock(scope: !898, file: !846, line: 527, column: 2)
!9413 = !DILocation(line: 581, column: 2, scope: !9414)
!9414 = distinct !DILexicalBlock(scope: !898, file: !846, line: 581, column: 2)
!9415 = !DILocation(line: 586, column: 2, scope: !9416)
!9416 = distinct !DILexicalBlock(scope: !898, file: !846, line: 586, column: 2)
!9417 = !DILocation(line: 591, column: 2, scope: !9418)
!9418 = distinct !DILexicalBlock(scope: !898, file: !846, line: 591, column: 2)
!9419 = !DILocation(line: 595, column: 2, scope: !9420)
!9420 = distinct !DILexicalBlock(scope: !898, file: !846, line: 595, column: 2)
!9421 = !DILocation(line: 607, column: 1, scope: !898)
!9422 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !846, file: !846, line: 112, type: !9308, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9423)
!9423 = !{!9424, !9425}
!9424 = !DILocalVariable(name: "line", arg: 1, scope: !9422, file: !846, line: 112, type: !107)
!9425 = !DILocalVariable(name: "irqnum", scope: !9422, file: !846, line: 114, type: !107)
!9426 = !DILocation(line: 0, scope: !9422)
!9427 = !DILocation(line: 122, column: 13, scope: !9428)
!9428 = distinct !DILexicalBlock(scope: !9422, file: !846, line: 122, column: 6)
!9429 = !DILocation(line: 122, column: 6, scope: !9422)
!9430 = !DILocation(line: 123, column: 3, scope: !9431)
!9431 = distinct !DILexicalBlock(scope: !9432, file: !846, line: 123, column: 3)
!9432 = distinct !DILexicalBlock(scope: !9433, file: !846, line: 123, column: 3)
!9433 = distinct !DILexicalBlock(scope: !9434, file: !846, line: 123, column: 3)
!9434 = distinct !DILexicalBlock(scope: !9428, file: !846, line: 122, column: 22)
!9435 = !DILocation(line: 121, column: 11, scope: !9422)
!9436 = !DILocation(line: 130, column: 26, scope: !9422)
!9437 = !DILocation(line: 130, column: 2, scope: !9422)
!9438 = !DILocation(line: 134, column: 2, scope: !9422)
!9439 = !DILocation(line: 135, column: 1, scope: !9422)
!9440 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !9319, file: !9319, line: 268, type: !6491, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9441)
!9441 = !{!9442}
!9442 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9440, file: !9319, line: 268, type: !152)
!9443 = !DILocation(line: 0, scope: !9440)
!9444 = !DILocation(line: 270, column: 3, scope: !9440)
!9445 = !DILocation(line: 271, column: 1, scope: !9440)
!9446 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !846, file: !846, line: 137, type: !9308, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9447)
!9447 = !{!9448}
!9448 = !DILocalVariable(name: "line", arg: 1, scope: !9446, file: !846, line: 137, type: !107)
!9449 = !DILocation(line: 0, scope: !9446)
!9450 = !DILocation(line: 141, column: 11, scope: !9451)
!9451 = distinct !DILexicalBlock(scope: !9446, file: !846, line: 141, column: 6)
!9452 = !DILocation(line: 141, column: 6, scope: !9446)
!9453 = !DILocation(line: 145, column: 28, scope: !9454)
!9454 = distinct !DILexicalBlock(scope: !9451, file: !846, line: 141, column: 17)
!9455 = !DILocation(line: 145, column: 3, scope: !9454)
!9456 = !DILocation(line: 147, column: 2, scope: !9454)
!9457 = !DILocation(line: 151, column: 1, scope: !9446)
!9458 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !9319, file: !9319, line: 309, type: !6491, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9459)
!9459 = !{!9460}
!9460 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9458, file: !9319, line: 309, type: !152)
!9461 = !DILocation(line: 0, scope: !9458)
!9462 = !DILocation(line: 311, column: 3, scope: !9458)
!9463 = !DILocation(line: 312, column: 1, scope: !9458)
!9464 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !846, file: !846, line: 202, type: !9465, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9467)
!9465 = !DISubroutineType(types: !9466)
!9466 = !{null, !107, !107}
!9467 = !{!9468, !9469}
!9468 = !DILocalVariable(name: "line", arg: 1, scope: !9464, file: !846, line: 202, type: !107)
!9469 = !DILocalVariable(name: "trigger", arg: 2, scope: !9464, file: !846, line: 202, type: !107)
!9470 = !DILocation(line: 0, scope: !9464)
!9471 = !DILocation(line: 211, column: 2, scope: !9464)
!9472 = !DILocation(line: 213, column: 36, scope: !9473)
!9473 = distinct !DILexicalBlock(scope: !9464, file: !846, line: 211, column: 19)
!9474 = !DILocation(line: 213, column: 3, scope: !9473)
!9475 = !DILocation(line: 214, column: 3, scope: !9473)
!9476 = !DILocation(line: 215, column: 3, scope: !9473)
!9477 = !DILocation(line: 217, column: 35, scope: !9473)
!9478 = !DILocation(line: 217, column: 3, scope: !9473)
!9479 = !DILocation(line: 218, column: 3, scope: !9473)
!9480 = !DILocation(line: 219, column: 3, scope: !9473)
!9481 = !DILocation(line: 221, column: 36, scope: !9473)
!9482 = !DILocation(line: 221, column: 3, scope: !9473)
!9483 = !DILocation(line: 222, column: 3, scope: !9473)
!9484 = !DILocation(line: 223, column: 3, scope: !9473)
!9485 = !DILocation(line: 225, column: 35, scope: !9473)
!9486 = !DILocation(line: 225, column: 3, scope: !9473)
!9487 = !DILocation(line: 226, column: 3, scope: !9473)
!9488 = !DILocation(line: 227, column: 3, scope: !9473)
!9489 = !DILocation(line: 232, column: 1, scope: !9464)
!9490 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !9319, file: !9319, line: 573, type: !6491, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9491)
!9491 = !{!9492}
!9492 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9490, file: !9319, line: 573, type: !152)
!9493 = !DILocation(line: 0, scope: !9490)
!9494 = !DILocation(line: 575, column: 3, scope: !9490)
!9495 = !DILocation(line: 577, column: 1, scope: !9490)
!9496 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !9319, file: !9319, line: 703, type: !6491, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9497)
!9497 = !{!9498}
!9498 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9496, file: !9319, line: 703, type: !152)
!9499 = !DILocation(line: 0, scope: !9496)
!9500 = !DILocation(line: 705, column: 3, scope: !9496)
!9501 = !DILocation(line: 706, column: 1, scope: !9496)
!9502 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !9319, file: !9319, line: 529, type: !6491, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9503)
!9503 = !{!9504}
!9504 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9502, file: !9319, line: 529, type: !152)
!9505 = !DILocation(line: 0, scope: !9502)
!9506 = !DILocation(line: 531, column: 3, scope: !9502)
!9507 = !DILocation(line: 533, column: 1, scope: !9502)
!9508 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !9319, file: !9319, line: 661, type: !6491, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9509)
!9509 = !{!9510}
!9510 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9508, file: !9319, line: 661, type: !152)
!9511 = !DILocation(line: 0, scope: !9508)
!9512 = !DILocation(line: 663, column: 3, scope: !9508)
!9513 = !DILocation(line: 664, column: 1, scope: !9508)
!9514 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !846, file: !846, line: 433, type: !9515, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9517)
!9515 = !DISubroutineType(types: !9516)
!9516 = !{!107, !107, !886, !106}
!9517 = !{!9518, !9519, !9520, !9521, !9523}
!9518 = !DILocalVariable(name: "line", arg: 1, scope: !9514, file: !846, line: 433, type: !107)
!9519 = !DILocalVariable(name: "cb", arg: 2, scope: !9514, file: !846, line: 433, type: !886)
!9520 = !DILocalVariable(name: "arg", arg: 3, scope: !9514, file: !846, line: 433, type: !106)
!9521 = !DILocalVariable(name: "dev", scope: !9514, file: !846, line: 435, type: !9522)
!9522 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !875)
!9523 = !DILocalVariable(name: "data", scope: !9514, file: !846, line: 436, type: !9273)
!9524 = !DILocation(line: 0, scope: !9514)
!9525 = !DILocation(line: 438, column: 21, scope: !9526)
!9526 = distinct !DILexicalBlock(scope: !9514, file: !846, line: 438, column: 6)
!9527 = !DILocation(line: 438, column: 6, scope: !9526)
!9528 = !DILocation(line: 438, column: 6, scope: !9514)
!9529 = !DILocation(line: 442, column: 20, scope: !9514)
!9530 = !DILocation(line: 443, column: 17, scope: !9514)
!9531 = !DILocation(line: 443, column: 22, scope: !9514)
!9532 = !DILocation(line: 445, column: 2, scope: !9514)
!9533 = !DILocation(line: 446, column: 1, scope: !9514)
!9534 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !846, file: !846, line: 448, type: !9308, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !731, retainedNodes: !9535)
!9535 = !{!9536, !9537, !9538}
!9536 = !DILocalVariable(name: "line", arg: 1, scope: !9534, file: !846, line: 448, type: !107)
!9537 = !DILocalVariable(name: "dev", scope: !9534, file: !846, line: 450, type: !9522)
!9538 = !DILocalVariable(name: "data", scope: !9534, file: !846, line: 451, type: !9273)
!9539 = !DILocation(line: 0, scope: !9534)
!9540 = !DILocation(line: 453, column: 17, scope: !9534)
!9541 = !DILocation(line: 453, column: 20, scope: !9534)
!9542 = !DILocation(line: 454, column: 17, scope: !9534)
!9543 = !DILocation(line: 454, column: 22, scope: !9534)
!9544 = !DILocation(line: 455, column: 1, scope: !9534)
!9545 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !1044, file: !1044, line: 183, type: !1082, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !9546)
!9546 = !{!9547, !9548, !9549, !9550, !9551}
!9547 = !DILocalVariable(name: "dev", arg: 1, scope: !9545, file: !1044, line: 183, type: !1073)
!9548 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9545, file: !1044, line: 184, type: !1084)
!9549 = !DILocalVariable(name: "pclken", scope: !9545, file: !1044, line: 186, type: !1034)
!9550 = !DILocalVariable(name: "reg", scope: !9545, file: !1044, line: 187, type: !1658)
!9551 = !DILocalVariable(name: "reg_val", scope: !9545, file: !1044, line: 188, type: !152)
!9552 = !DILocation(line: 0, scope: !9545)
!9553 = !DILocation(line: 192, column: 6, scope: !9554)
!9554 = distinct !DILexicalBlock(scope: !9545, file: !1044, line: 192, column: 6)
!9555 = !DILocation(line: 192, column: 6, scope: !9545)
!9556 = !DILocation(line: 197, column: 52, scope: !9545)
!9557 = !DILocation(line: 197, column: 8, scope: !9545)
!9558 = !DILocation(line: 198, column: 12, scope: !9545)
!9559 = !DILocation(line: 199, column: 21, scope: !9545)
!9560 = !DILocation(line: 199, column: 10, scope: !9545)
!9561 = !DILocation(line: 200, column: 7, scope: !9545)
!9562 = !DILocation(line: 202, column: 2, scope: !9545)
!9563 = !DILocation(line: 203, column: 1, scope: !9545)
!9564 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !1044, file: !1044, line: 205, type: !1082, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !9565)
!9565 = !{!9566, !9567, !9568, !9569, !9570}
!9566 = !DILocalVariable(name: "dev", arg: 1, scope: !9564, file: !1044, line: 205, type: !1073)
!9567 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9564, file: !1044, line: 206, type: !1084)
!9568 = !DILocalVariable(name: "pclken", scope: !9564, file: !1044, line: 208, type: !1034)
!9569 = !DILocalVariable(name: "reg", scope: !9564, file: !1044, line: 209, type: !1658)
!9570 = !DILocalVariable(name: "reg_val", scope: !9564, file: !1044, line: 210, type: !152)
!9571 = !DILocation(line: 0, scope: !9564)
!9572 = !DILocation(line: 214, column: 6, scope: !9573)
!9573 = distinct !DILexicalBlock(scope: !9564, file: !1044, line: 214, column: 6)
!9574 = !DILocation(line: 214, column: 6, scope: !9564)
!9575 = !DILocation(line: 219, column: 52, scope: !9564)
!9576 = !DILocation(line: 219, column: 8, scope: !9564)
!9577 = !DILocation(line: 220, column: 12, scope: !9564)
!9578 = !DILocation(line: 221, column: 22, scope: !9564)
!9579 = !DILocation(line: 221, column: 13, scope: !9564)
!9580 = !DILocation(line: 221, column: 10, scope: !9564)
!9581 = !DILocation(line: 222, column: 7, scope: !9564)
!9582 = !DILocation(line: 224, column: 2, scope: !9564)
!9583 = !DILocation(line: 225, column: 1, scope: !9564)
!9584 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !1044, file: !1044, line: 262, type: !1098, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !9585)
!9585 = !{!9586, !9587, !9588, !9589, !9590, !9591, !9592, !9593}
!9586 = !DILocalVariable(name: "clock", arg: 1, scope: !9584, file: !1044, line: 262, type: !1073)
!9587 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9584, file: !1044, line: 263, type: !1084)
!9588 = !DILocalVariable(name: "rate", arg: 3, scope: !9584, file: !1044, line: 264, type: !1040)
!9589 = !DILocalVariable(name: "pclken", scope: !9584, file: !1044, line: 266, type: !1034)
!9590 = !DILocalVariable(name: "ahb_clock", scope: !9584, file: !1044, line: 273, type: !152)
!9591 = !DILocalVariable(name: "apb1_clock", scope: !9584, file: !1044, line: 274, type: !152)
!9592 = !DILocalVariable(name: "apb2_clock", scope: !9584, file: !1044, line: 276, type: !152)
!9593 = !DILocalVariable(name: "ahb3_clock", scope: !9584, file: !1044, line: 286, type: !152)
!9594 = !DILocation(line: 0, scope: !9584)
!9595 = !DILocation(line: 273, column: 23, scope: !9584)
!9596 = !DILocation(line: 299, column: 18, scope: !9584)
!9597 = !DILocation(line: 299, column: 2, scope: !9584)
!9598 = !DILocation(line: 274, column: 24, scope: !9584)
!9599 = !DILocation(line: 319, column: 3, scope: !9600)
!9600 = distinct !DILexicalBlock(scope: !9584, file: !1044, line: 299, column: 23)
!9601 = !DILocation(line: 276, column: 24, scope: !9584)
!9602 = !DILocation(line: 323, column: 3, scope: !9600)
!9603 = !DILocation(line: 346, column: 33, scope: !9600)
!9604 = !DILocation(line: 346, column: 11, scope: !9600)
!9605 = !DILocation(line: 350, column: 3, scope: !9600)
!9606 = !DILocation(line: 354, column: 33, scope: !9600)
!9607 = !DILocation(line: 354, column: 11, scope: !9600)
!9608 = !DILocation(line: 358, column: 3, scope: !9600)
!9609 = !DILocation(line: 374, column: 3, scope: !9600)
!9610 = !DILocation(line: 379, column: 3, scope: !9600)
!9611 = !DILocation(line: 0, scope: !9600)
!9612 = !DILocation(line: 396, column: 1, scope: !9584)
!9613 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !1044, file: !1044, line: 227, type: !1114, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !9614)
!9614 = !{!9615, !9616, !9617, !9618, !9619, !9620, !9621, !9622}
!9615 = !DILocalVariable(name: "dev", arg: 1, scope: !9613, file: !1044, line: 227, type: !1073)
!9616 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9613, file: !1044, line: 228, type: !1084)
!9617 = !DILocalVariable(name: "data", arg: 3, scope: !9613, file: !1044, line: 229, type: !106)
!9618 = !DILocalVariable(name: "pclken", scope: !9613, file: !1044, line: 233, type: !1034)
!9619 = !DILocalVariable(name: "reg", scope: !9613, file: !1044, line: 234, type: !1658)
!9620 = !DILocalVariable(name: "reg_val", scope: !9613, file: !1044, line: 235, type: !152)
!9621 = !DILocalVariable(name: "dt_val", scope: !9613, file: !1044, line: 235, type: !152)
!9622 = !DILocalVariable(name: "err", scope: !9613, file: !1044, line: 236, type: !107)
!9623 = !DILocation(line: 0, scope: !9613)
!9624 = !DILocation(line: 241, column: 30, scope: !9613)
!9625 = !DILocation(line: 241, column: 8, scope: !9613)
!9626 = !DILocation(line: 242, column: 10, scope: !9627)
!9627 = distinct !DILexicalBlock(scope: !9613, file: !1044, line: 242, column: 6)
!9628 = !DILocation(line: 242, column: 6, scope: !9613)
!9629 = !DILocation(line: 247, column: 11, scope: !9613)
!9630 = !DILocation(line: 248, column: 6, scope: !9613)
!9631 = !DILocation(line: 247, column: 44, scope: !9613)
!9632 = !DILocation(line: 250, column: 6, scope: !9613)
!9633 = !DILocation(line: 249, column: 52, scope: !9613)
!9634 = !DILocation(line: 249, column: 8, scope: !9613)
!9635 = !DILocation(line: 251, column: 12, scope: !9613)
!9636 = !DILocation(line: 252, column: 10, scope: !9613)
!9637 = !DILocation(line: 253, column: 7, scope: !9613)
!9638 = !DILocation(line: 255, column: 2, scope: !9613)
!9639 = !DILocation(line: 260, column: 1, scope: !9613)
!9640 = distinct !DISubprogram(name: "enabled_clock", scope: !1044, file: !1044, line: 100, type: !9641, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !9643)
!9641 = !DISubroutineType(types: !9642)
!9642 = !{!107, !152}
!9643 = !{!9644, !9645}
!9644 = !DILocalVariable(name: "src_clk", arg: 1, scope: !9640, file: !1044, line: 100, type: !152)
!9645 = !DILocalVariable(name: "r", scope: !9640, file: !1044, line: 102, type: !107)
!9646 = !DILocation(line: 0, scope: !9640)
!9647 = !DILocation(line: 104, column: 2, scope: !9640)
!9648 = !DILocation(line: 180, column: 2, scope: !9640)
!9649 = !DILocation(line: 181, column: 1, scope: !9640)
!9650 = distinct !DISubprogram(name: "get_bus_clock", scope: !1044, file: !1044, line: 79, type: !9651, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !9653)
!9651 = !DISubroutineType(types: !9652)
!9652 = !{!152, !152, !152}
!9653 = !{!9654, !9655}
!9654 = !DILocalVariable(name: "clock", arg: 1, scope: !9650, file: !1044, line: 79, type: !152)
!9655 = !DILocalVariable(name: "prescaler", arg: 2, scope: !9650, file: !1044, line: 79, type: !152)
!9656 = !DILocation(line: 0, scope: !9650)
!9657 = !DILocation(line: 81, column: 15, scope: !9650)
!9658 = !DILocation(line: 81, column: 2, scope: !9650)
!9659 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !1044, file: !1044, line: 68, type: !9660, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !9662)
!9660 = !DISubroutineType(types: !9661)
!9661 = !{!152, !152, !107, !107, !107}
!9662 = !{!9663, !9664, !9665, !9666}
!9663 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !9659, file: !1044, line: 68, type: !152)
!9664 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !9659, file: !1044, line: 69, type: !107)
!9665 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !9659, file: !1044, line: 70, type: !107)
!9666 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !9659, file: !1044, line: 71, type: !107)
!9667 = !DILocation(line: 0, scope: !9659)
!9668 = !DILocation(line: 75, column: 22, scope: !9659)
!9669 = !DILocation(line: 76, column: 13, scope: !9659)
!9670 = !DILocation(line: 75, column: 34, scope: !9659)
!9671 = !DILocation(line: 75, column: 2, scope: !9659)
!9672 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !1044, file: !1044, line: 641, type: !1071, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !9673)
!9673 = !{!9674, !9675, !9676}
!9674 = !DILocalVariable(name: "dev", arg: 1, scope: !9672, file: !1044, line: 641, type: !1073)
!9675 = !DILocalVariable(name: "old_flash_freq", scope: !9672, file: !1044, line: 664, type: !152)
!9676 = !DILocalVariable(name: "new_flash_freq", scope: !9672, file: !1044, line: 665, type: !152)
!9677 = !DILocation(line: 0, scope: !9672)
!9678 = !DILocation(line: 646, column: 2, scope: !9672)
!9679 = !DILocation(line: 667, column: 19, scope: !9672)
!9680 = !DILocation(line: 674, column: 21, scope: !9681)
!9681 = distinct !DILexicalBlock(scope: !9672, file: !1044, line: 674, column: 6)
!9682 = !DILocation(line: 674, column: 6, scope: !9672)
!9683 = !DILocation(line: 675, column: 3, scope: !9684)
!9684 = distinct !DILexicalBlock(scope: !9681, file: !1044, line: 674, column: 59)
!9685 = !DILocation(line: 676, column: 2, scope: !9684)
!9686 = !DILocation(line: 680, column: 2, scope: !9672)
!9687 = !DILocation(line: 683, column: 2, scope: !9672)
!9688 = !DILocation(line: 690, column: 3, scope: !9689)
!9689 = distinct !DILexicalBlock(scope: !9690, file: !1044, line: 689, column: 9)
!9690 = distinct !DILexicalBlock(scope: !9672, file: !1044, line: 685, column: 6)
!9691 = !DILocation(line: 695, column: 2, scope: !9672)
!9692 = !DILocation(line: 696, column: 2, scope: !9672)
!9693 = !DILocation(line: 696, column: 9, scope: !9672)
!9694 = !DILocation(line: 696, column: 34, scope: !9672)
!9695 = distinct !{!9695, !9692, !9696}
!9696 = !DILocation(line: 697, column: 2, scope: !9672)
!9697 = !DILocation(line: 720, column: 21, scope: !9698)
!9698 = distinct !DILexicalBlock(scope: !9672, file: !1044, line: 720, column: 6)
!9699 = !DILocation(line: 720, column: 6, scope: !9672)
!9700 = !DILocation(line: 721, column: 3, scope: !9701)
!9701 = distinct !DILexicalBlock(scope: !9698, file: !1044, line: 720, column: 60)
!9702 = !DILocation(line: 722, column: 2, scope: !9701)
!9703 = !DILocation(line: 725, column: 18, scope: !9672)
!9704 = !DILocation(line: 728, column: 2, scope: !9672)
!9705 = !DILocation(line: 730, column: 2, scope: !9672)
!9706 = !DILocation(line: 745, column: 2, scope: !9672)
!9707 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !9708, file: !9708, line: 3275, type: !6481, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !2296)
!9708 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9709 = !DILocation(line: 3277, column: 21, scope: !9707)
!9710 = !DILocation(line: 3277, column: 3, scope: !9707)
!9711 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !1044, file: !1044, line: 507, type: !3227, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !2296)
!9712 = !DILocation(line: 516, column: 4, scope: !9713)
!9713 = distinct !DILexicalBlock(scope: !9714, file: !1044, line: 515, column: 10)
!9714 = distinct !DILexicalBlock(scope: !9715, file: !1044, line: 513, column: 7)
!9715 = distinct !DILexicalBlock(scope: !9716, file: !1044, line: 510, column: 37)
!9716 = distinct !DILexicalBlock(scope: !9711, file: !1044, line: 510, column: 6)
!9717 = !DILocation(line: 526, column: 3, scope: !9715)
!9718 = !DILocation(line: 527, column: 3, scope: !9715)
!9719 = !DILocation(line: 527, column: 10, scope: !9715)
!9720 = !DILocation(line: 527, column: 31, scope: !9715)
!9721 = distinct !{!9721, !9718, !9722}
!9722 = !DILocation(line: 529, column: 3, scope: !9715)
!9723 = !DILocation(line: 627, column: 1, scope: !9711)
!9724 = distinct !DISubprogram(name: "set_up_plls", scope: !1044, file: !1044, line: 448, type: !3227, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !2296)
!9725 = !DILocation(line: 460, column: 6, scope: !9726)
!9726 = distinct !DILexicalBlock(scope: !9724, file: !1044, line: 460, column: 6)
!9727 = !DILocation(line: 460, column: 31, scope: !9726)
!9728 = !DILocation(line: 460, column: 6, scope: !9724)
!9729 = !DILocation(line: 461, column: 3, scope: !9730)
!9730 = distinct !DILexicalBlock(scope: !9726, file: !1044, line: 460, column: 67)
!9731 = !DILocation(line: 462, column: 3, scope: !9730)
!9732 = !DILocation(line: 463, column: 2, scope: !9730)
!9733 = !DILocation(line: 464, column: 2, scope: !9724)
!9734 = !DILocation(line: 488, column: 2, scope: !9724)
!9735 = !DILocation(line: 492, column: 2, scope: !9724)
!9736 = !DILocation(line: 496, column: 2, scope: !9724)
!9737 = !DILocation(line: 499, column: 2, scope: !9724)
!9738 = !DILocation(line: 500, column: 2, scope: !9724)
!9739 = !DILocation(line: 500, column: 9, scope: !9724)
!9740 = !DILocation(line: 500, column: 30, scope: !9724)
!9741 = distinct !{!9741, !9738, !9742}
!9742 = !DILocation(line: 502, column: 2, scope: !9724)
!9743 = !DILocation(line: 505, column: 1, scope: !9724)
!9744 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !9708, file: !9708, line: 3224, type: !6491, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !9745)
!9745 = !{!9746}
!9746 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !9744, file: !9708, line: 3224, type: !152)
!9747 = !DILocation(line: 0, scope: !9744)
!9748 = !DILocation(line: 3226, column: 3, scope: !9744)
!9749 = !DILocation(line: 3227, column: 1, scope: !9744)
!9750 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !9708, file: !9708, line: 3188, type: !6491, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !9751)
!9751 = !{!9752}
!9752 = !DILocalVariable(name: "Source", arg: 1, scope: !9750, file: !9708, line: 3188, type: !152)
!9753 = !DILocation(line: 0, scope: !9750)
!9754 = !DILocation(line: 3190, column: 3, scope: !9750)
!9755 = !DILocation(line: 3191, column: 1, scope: !9750)
!9756 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !9708, file: !9708, line: 3204, type: !6481, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !2296)
!9757 = !DILocation(line: 3206, column: 21, scope: !9756)
!9758 = !DILocation(line: 3206, column: 3, scope: !9756)
!9759 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !9708, file: !9708, line: 3240, type: !6491, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !9760)
!9760 = !{!9761}
!9761 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !9759, file: !9708, line: 3240, type: !152)
!9762 = !DILocation(line: 0, scope: !9759)
!9763 = !DILocation(line: 3242, column: 3, scope: !9759)
!9764 = !DILocation(line: 3243, column: 1, scope: !9759)
!9765 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !9708, file: !9708, line: 3256, type: !6491, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !9766)
!9766 = !{!9767}
!9767 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !9765, file: !9708, line: 3256, type: !152)
!9768 = !DILocation(line: 0, scope: !9765)
!9769 = !DILocation(line: 3258, column: 3, scope: !9765)
!9770 = !DILocation(line: 3259, column: 1, scope: !9765)
!9771 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !1044, file: !1044, line: 409, type: !3227, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !2296)
!9772 = !DILocation(line: 412, column: 6, scope: !9773)
!9773 = distinct !DILexicalBlock(scope: !9771, file: !1044, line: 412, column: 6)
!9774 = !DILocation(line: 412, column: 27, scope: !9773)
!9775 = !DILocation(line: 412, column: 6, scope: !9771)
!9776 = !DILocation(line: 414, column: 3, scope: !9777)
!9777 = distinct !DILexicalBlock(scope: !9773, file: !1044, line: 412, column: 33)
!9778 = !DILocation(line: 415, column: 3, scope: !9777)
!9779 = !DILocation(line: 415, column: 10, scope: !9777)
!9780 = !DILocation(line: 415, column: 31, scope: !9777)
!9781 = distinct !{!9781, !9778, !9782}
!9782 = !DILocation(line: 417, column: 3, scope: !9777)
!9783 = !DILocation(line: 421, column: 2, scope: !9771)
!9784 = !DILocation(line: 422, column: 2, scope: !9771)
!9785 = !DILocation(line: 422, column: 9, scope: !9771)
!9786 = !DILocation(line: 422, column: 34, scope: !9771)
!9787 = distinct !{!9787, !9784, !9788}
!9788 = !DILocation(line: 423, column: 2, scope: !9771)
!9789 = !DILocation(line: 424, column: 1, scope: !9771)
!9790 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !9708, file: !9708, line: 4195, type: !3227, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !2296)
!9791 = !DILocation(line: 4197, column: 3, scope: !9790)
!9792 = !DILocation(line: 4198, column: 1, scope: !9790)
!9793 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !9708, file: !9708, line: 4184, type: !3227, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !2296)
!9794 = !DILocation(line: 4186, column: 3, scope: !9793)
!9795 = !DILocation(line: 4187, column: 1, scope: !9793)
!9796 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !9708, file: !9708, line: 4205, type: !6481, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !2296)
!9797 = !DILocation(line: 4207, column: 11, scope: !9796)
!9798 = !DILocation(line: 4207, column: 44, scope: !9796)
!9799 = !DILocation(line: 4207, column: 3, scope: !9796)
!9800 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !9708, file: !9708, line: 3007, type: !6481, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !2296)
!9801 = !DILocation(line: 3009, column: 11, scope: !9800)
!9802 = !DILocation(line: 3009, column: 44, scope: !9800)
!9803 = !DILocation(line: 3009, column: 3, scope: !9800)
!9804 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !9708, file: !9708, line: 2987, type: !3227, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !2296)
!9805 = !DILocation(line: 2989, column: 3, scope: !9804)
!9806 = !DILocation(line: 2990, column: 1, scope: !9804)
!9807 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !9708, file: !9708, line: 2939, type: !3227, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !2296)
!9808 = !DILocation(line: 2941, column: 3, scope: !9807)
!9809 = !DILocation(line: 2942, column: 1, scope: !9807)
!9810 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !9708, file: !9708, line: 2949, type: !3227, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !2296)
!9811 = !DILocation(line: 2951, column: 3, scope: !9810)
!9812 = !DILocation(line: 2952, column: 1, scope: !9810)
!9813 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !9708, file: !9708, line: 2969, type: !6481, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !981, retainedNodes: !2296)
!9814 = !DILocation(line: 2971, column: 11, scope: !9813)
!9815 = !DILocation(line: 2971, column: 44, scope: !9813)
!9816 = !DILocation(line: 2971, column: 3, scope: !9813)
!9817 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !9818, file: !9818, line: 40, type: !6481, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2995, retainedNodes: !2296)
!9818 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9819 = !DILocation(line: 45, column: 3, scope: !9820)
!9820 = distinct !DILexicalBlock(scope: !9821, file: !9818, line: 44, column: 44)
!9821 = distinct !DILexicalBlock(scope: !9822, file: !9818, line: 44, column: 13)
!9822 = distinct !DILexicalBlock(scope: !9817, file: !9818, line: 42, column: 6)
!9823 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !9818, file: !9818, line: 56, type: !3227, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2995, retainedNodes: !2296)
!9824 = !DILocation(line: 58, column: 2, scope: !9823)
!9825 = !DILocation(line: 62, column: 1, scope: !9823)
!9826 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !9708, file: !9708, line: 4304, type: !9827, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2995, retainedNodes: !9829)
!9827 = !DISubroutineType(types: !9828)
!9828 = !{null, !152, !152, !152, !152}
!9829 = !{!9830, !9831, !9832, !9833}
!9830 = !DILocalVariable(name: "Source", arg: 1, scope: !9826, file: !9708, line: 4304, type: !152)
!9831 = !DILocalVariable(name: "PLLM", arg: 2, scope: !9826, file: !9708, line: 4304, type: !152)
!9832 = !DILocalVariable(name: "PLLN", arg: 3, scope: !9826, file: !9708, line: 4304, type: !152)
!9833 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !9826, file: !9708, line: 4304, type: !152)
!9834 = !DILocation(line: 0, scope: !9826)
!9835 = !DILocation(line: 4306, column: 3, scope: !9826)
!9836 = !DILocation(line: 4308, column: 3, scope: !9826)
!9837 = !DILocation(line: 4312, column: 1, scope: !9826)
!9838 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !9818, file: !9818, line: 69, type: !3227, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2995, retainedNodes: !2296)
!9839 = !DILocation(line: 72, column: 2, scope: !9838)
!9840 = !DILocation(line: 73, column: 1, scope: !9838)
!9841 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !9842, file: !9842, line: 1185, type: !6491, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2995, retainedNodes: !9843)
!9842 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9843 = !{!9844, !9845}
!9844 = !DILocalVariable(name: "Periphs", arg: 1, scope: !9841, file: !9842, line: 1185, type: !152)
!9845 = !DILocalVariable(name: "tmpreg", scope: !9841, file: !9842, line: 1187, type: !227)
!9846 = !DILocation(line: 0, scope: !9841)
!9847 = !DILocation(line: 1187, column: 3, scope: !9841)
!9848 = !DILocation(line: 1187, column: 17, scope: !9841)
!9849 = !DILocation(line: 1188, column: 3, scope: !9841)
!9850 = !DILocation(line: 1190, column: 12, scope: !9841)
!9851 = !DILocation(line: 1190, column: 10, scope: !9841)
!9852 = !DILocation(line: 1191, column: 9, scope: !9841)
!9853 = !DILocation(line: 1192, column: 1, scope: !9841)
!9854 = distinct !DISubprogram(name: "uart_console_init", scope: !1175, file: !1175, line: 588, type: !1152, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1118, retainedNodes: !9855)
!9855 = !{!9856}
!9856 = !DILocalVariable(name: "arg", arg: 1, scope: !9854, file: !1175, line: 588, type: !1130)
!9857 = !DILocation(line: 0, scope: !9854)
!9858 = !DILocation(line: 593, column: 7, scope: !9859)
!9859 = distinct !DILexicalBlock(scope: !9854, file: !1175, line: 593, column: 6)
!9860 = !DILocation(line: 593, column: 6, scope: !9854)
!9861 = !DILocation(line: 597, column: 2, scope: !9854)
!9862 = !DILocation(line: 599, column: 2, scope: !9854)
!9863 = !DILocation(line: 600, column: 1, scope: !9854)
!9864 = distinct !DISubprogram(name: "device_is_ready", scope: !9865, file: !9865, line: 47, type: !9866, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1118, retainedNodes: !9868)
!9865 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest")
!9866 = !DISubroutineType(types: !9867)
!9867 = !{!145, !1130}
!9868 = !{!9869}
!9869 = !DILocalVariable(name: "dev", arg: 1, scope: !9864, file: !9865, line: 47, type: !1130)
!9870 = !DILocation(line: 0, scope: !9864)
!9871 = !DILocation(line: 55, column: 2, scope: !9872)
!9872 = distinct !DILexicalBlock(scope: !9864, file: !9865, line: 55, column: 2)
!9873 = !{i64 2155685399}
!9874 = !DILocation(line: 56, column: 9, scope: !9864)
!9875 = !DILocation(line: 56, column: 2, scope: !9864)
!9876 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1175, file: !1175, line: 573, type: !3227, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1118, retainedNodes: !2296)
!9877 = !DILocation(line: 576, column: 2, scope: !9876)
!9878 = !DILocation(line: 579, column: 2, scope: !9876)
!9879 = !DILocation(line: 581, column: 1, scope: !9876)
!9880 = distinct !DISubprogram(name: "console_out", scope: !1175, file: !1175, line: 77, type: !214, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1118, retainedNodes: !9881)
!9881 = !{!9882}
!9882 = !DILocalVariable(name: "c", arg: 1, scope: !9880, file: !1175, line: 77, type: !107)
!9883 = !DILocation(line: 0, scope: !9880)
!9884 = !DILocation(line: 89, column: 11, scope: !9885)
!9885 = distinct !DILexicalBlock(scope: !9880, file: !1175, line: 89, column: 6)
!9886 = !DILocation(line: 89, column: 6, scope: !9880)
!9887 = !DILocation(line: 90, column: 3, scope: !9888)
!9888 = distinct !DILexicalBlock(scope: !9885, file: !1175, line: 89, column: 17)
!9889 = !DILocation(line: 91, column: 2, scope: !9888)
!9890 = !DILocation(line: 92, column: 34, scope: !9880)
!9891 = !DILocation(line: 92, column: 2, scope: !9880)
!9892 = !DILocation(line: 94, column: 2, scope: !9880)
!9893 = distinct !DISubprogram(name: "uart_poll_out", scope: !9894, file: !9894, line: 95, type: !1148, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1118, retainedNodes: !9895)
!9894 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_aerocore2/pytest")
!9895 = !{!9896, !9897}
!9896 = !DILocalVariable(name: "dev", arg: 1, scope: !9893, file: !9894, line: 95, type: !1130)
!9897 = !DILocalVariable(name: "out_char", arg: 2, scope: !9893, file: !9894, line: 95, type: !196)
!9898 = !DILocation(line: 0, scope: !9893)
!9899 = !DILocation(line: 105, column: 2, scope: !9900)
!9900 = distinct !DILexicalBlock(scope: !9893, file: !9894, line: 105, column: 2)
!9901 = !{i64 2155768790}
!9902 = !DILocation(line: 106, column: 2, scope: !9893)
!9903 = !DILocation(line: 107, column: 1, scope: !9893)
!9904 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !1124, file: !1124, line: 574, type: !1148, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1118, retainedNodes: !9905)
!9905 = !{!9906, !9907, !9908}
!9906 = !DILocalVariable(name: "dev", arg: 1, scope: !9904, file: !1124, line: 574, type: !1130)
!9907 = !DILocalVariable(name: "out_char", arg: 2, scope: !9904, file: !1124, line: 575, type: !196)
!9908 = !DILocalVariable(name: "api", scope: !9904, file: !1124, line: 577, type: !1121)
!9909 = !DILocation(line: 0, scope: !9904)
!9910 = !DILocation(line: 578, column: 40, scope: !9904)
!9911 = !DILocation(line: 580, column: 7, scope: !9904)
!9912 = !DILocation(line: 580, column: 2, scope: !9904)
!9913 = !DILocation(line: 581, column: 1, scope: !9904)
!9914 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !247, file: !247, line: 730, type: !9866, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1118, retainedNodes: !9915)
!9915 = !{!9916}
!9916 = !DILocalVariable(name: "dev", arg: 1, scope: !9914, file: !247, line: 730, type: !1130)
!9917 = !DILocation(line: 0, scope: !9914)
!9918 = !DILocation(line: 732, column: 9, scope: !9914)
!9919 = !DILocation(line: 732, column: 2, scope: !9914)
!9920 = distinct !DISubprogram(name: "uart_register_input", scope: !1175, file: !1175, line: 560, type: !9921, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1118, retainedNodes: !9968)
!9921 = !DISubroutineType(types: !9922)
!9922 = !{null, !9923, !9923, !9965}
!9923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9924, size: 32)
!9924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !406, line: 2208, size: 160, elements: !9925)
!9925 = !{!9926}
!9926 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !9924, file: !406, line: 2209, baseType: !9927, size: 160)
!9927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !406, line: 1709, size: 160, elements: !9928)
!9928 = !{!9929, !9942, !9946}
!9929 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !9927, file: !406, line: 1710, baseType: !9930, size: 64)
!9930 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !9931, line: 46, baseType: !9932)
!9931 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !9931, line: 41, size: 64, elements: !9933)
!9933 = !{!9934, !9941}
!9934 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9932, file: !9931, line: 42, baseType: !9935, size: 32)
!9935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9936, size: 32)
!9936 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !9931, line: 39, baseType: !9937)
!9937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !9931, line: 35, size: 32, elements: !9938)
!9938 = !{!9939}
!9939 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !9937, file: !9931, line: 36, baseType: !9940, size: 32)
!9940 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !9931, line: 32, baseType: !152)
!9941 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9932, file: !9931, line: 43, baseType: !9935, size: 32, offset: 32)
!9942 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9927, file: !406, line: 1711, baseType: !9943, size: 32, offset: 64)
!9943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !9944)
!9944 = !{!9945}
!9945 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !9943, file: !420, line: 52, baseType: !22, size: 32)
!9946 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9927, file: !406, line: 1712, baseType: !9947, size: 64, offset: 96)
!9947 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !9948)
!9948 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !9949)
!9949 = !{!9950}
!9950 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9948, file: !345, line: 232, baseType: !9951, size: 64)
!9951 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !9952)
!9952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !9953)
!9953 = !{!9954, !9960}
!9954 = !DIDerivedType(tag: DW_TAG_member, scope: !9952, file: !319, line: 38, baseType: !9955, size: 32)
!9955 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9952, file: !319, line: 38, size: 32, elements: !9956)
!9956 = !{!9957, !9959}
!9957 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9955, file: !319, line: 39, baseType: !9958, size: 32)
!9958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9952, size: 32)
!9959 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9955, file: !319, line: 40, baseType: !9958, size: 32)
!9960 = !DIDerivedType(tag: DW_TAG_member, scope: !9952, file: !319, line: 42, baseType: !9961, size: 32, offset: 32)
!9961 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9952, file: !319, line: 42, size: 32, elements: !9962)
!9962 = !{!9963, !9964}
!9963 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9961, file: !319, line: 43, baseType: !9958, size: 32)
!9964 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9961, file: !319, line: 44, baseType: !9958, size: 32)
!9965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9966, size: 32)
!9966 = !DISubroutineType(types: !9967)
!9967 = !{!195, !193, !195}
!9968 = !{!9969, !9970, !9971}
!9969 = !DILocalVariable(name: "avail", arg: 1, scope: !9920, file: !1175, line: 560, type: !9923)
!9970 = !DILocalVariable(name: "lines", arg: 2, scope: !9920, file: !1175, line: 560, type: !9923)
!9971 = !DILocalVariable(name: "completion", arg: 3, scope: !9920, file: !1175, line: 561, type: !9965)
!9972 = !DILocation(line: 0, scope: !9920)
!9973 = !DILocation(line: 566, column: 1, scope: !9920)
!9974 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1353, file: !1353, line: 523, type: !1211, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1184, retainedNodes: !9975)
!9975 = !{!9976, !9977, !9978, !9979, !9980}
!9976 = !DILocalVariable(name: "dev", arg: 1, scope: !9974, file: !1353, line: 523, type: !1213)
!9977 = !DILocalVariable(name: "pin", arg: 2, scope: !9974, file: !1353, line: 524, type: !1228)
!9978 = !DILocalVariable(name: "flags", arg: 3, scope: !9974, file: !1353, line: 524, type: !1229)
!9979 = !DILocalVariable(name: "err", scope: !9974, file: !1353, line: 526, type: !107)
!9980 = !DILocalVariable(name: "pincfg", scope: !9974, file: !1353, line: 527, type: !107)
!9981 = !DILocation(line: 0, scope: !9974)
!9982 = !DILocation(line: 527, column: 2, scope: !9974)
!9983 = !DILocation(line: 532, column: 8, scope: !9974)
!9984 = !DILocation(line: 533, column: 10, scope: !9985)
!9985 = distinct !DILexicalBlock(scope: !9974, file: !1353, line: 533, column: 6)
!9986 = !DILocation(line: 533, column: 6, scope: !9974)
!9987 = !DILocation(line: 543, column: 13, scope: !9988)
!9988 = distinct !DILexicalBlock(scope: !9974, file: !1353, line: 543, column: 6)
!9989 = !DILocation(line: 543, column: 28, scope: !9988)
!9990 = !DILocation(line: 543, column: 6, scope: !9974)
!9991 = !DILocation(line: 544, column: 14, scope: !9992)
!9992 = distinct !DILexicalBlock(scope: !9993, file: !1353, line: 544, column: 7)
!9993 = distinct !DILexicalBlock(scope: !9988, file: !1353, line: 543, column: 34)
!9994 = !DILocation(line: 544, column: 39, scope: !9992)
!9995 = !DILocation(line: 544, column: 7, scope: !9993)
!9996 = !DILocation(line: 545, column: 38, scope: !9997)
!9997 = distinct !DILexicalBlock(scope: !9992, file: !1353, line: 544, column: 45)
!9998 = !DILocation(line: 545, column: 4, scope: !9997)
!9999 = !DILocation(line: 546, column: 3, scope: !9997)
!10000 = !DILocation(line: 546, column: 21, scope: !10001)
!10001 = distinct !DILexicalBlock(scope: !9992, file: !1353, line: 546, column: 14)
!10002 = !DILocation(line: 546, column: 45, scope: !10001)
!10003 = !DILocation(line: 546, column: 14, scope: !9992)
!10004 = !DILocation(line: 547, column: 40, scope: !10005)
!10005 = distinct !DILexicalBlock(scope: !10001, file: !1353, line: 546, column: 51)
!10006 = !DILocation(line: 547, column: 4, scope: !10005)
!10007 = !DILocation(line: 548, column: 3, scope: !10005)
!10008 = !DILocation(line: 551, column: 32, scope: !9974)
!10009 = !DILocation(line: 551, column: 37, scope: !9974)
!10010 = !DILocation(line: 551, column: 2, scope: !9974)
!10011 = !DILocation(line: 554, column: 6, scope: !9974)
!10012 = !DILocation(line: 562, column: 1, scope: !9974)
!10013 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1353, file: !1353, line: 410, type: !10014, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1184, retainedNodes: !10016)
!10014 = !DISubroutineType(types: !10015)
!10015 = !{!107, !1213, !1040}
!10016 = !{!10017, !10018, !10019, !10021}
!10017 = !DILocalVariable(name: "dev", arg: 1, scope: !10013, file: !1353, line: 410, type: !1213)
!10018 = !DILocalVariable(name: "value", arg: 2, scope: !10013, file: !1353, line: 410, type: !1040)
!10019 = !DILocalVariable(name: "cfg", scope: !10013, file: !1353, line: 412, type: !10020)
!10020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1492, size: 32)
!10021 = !DILocalVariable(name: "gpio", scope: !10013, file: !1353, line: 413, type: !1286)
!10022 = !DILocation(line: 0, scope: !10013)
!10023 = !DILocation(line: 412, column: 45, scope: !10013)
!10024 = !DILocation(line: 413, column: 44, scope: !10013)
!10025 = !DILocation(line: 415, column: 11, scope: !10013)
!10026 = !DILocation(line: 415, column: 9, scope: !10013)
!10027 = !DILocation(line: 417, column: 2, scope: !10013)
!10028 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1353, file: !1353, line: 420, type: !1238, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1184, retainedNodes: !10029)
!10029 = !{!10030, !10031, !10032, !10033, !10034, !10035}
!10030 = !DILocalVariable(name: "dev", arg: 1, scope: !10028, file: !1353, line: 420, type: !1213)
!10031 = !DILocalVariable(name: "mask", arg: 2, scope: !10028, file: !1353, line: 421, type: !1240)
!10032 = !DILocalVariable(name: "value", arg: 3, scope: !10028, file: !1353, line: 422, type: !1235)
!10033 = !DILocalVariable(name: "cfg", scope: !10028, file: !1353, line: 424, type: !10020)
!10034 = !DILocalVariable(name: "gpio", scope: !10028, file: !1353, line: 425, type: !1286)
!10035 = !DILocalVariable(name: "port_value", scope: !10028, file: !1353, line: 426, type: !152)
!10036 = !DILocation(line: 0, scope: !10028)
!10037 = !DILocation(line: 424, column: 45, scope: !10028)
!10038 = !DILocation(line: 425, column: 44, scope: !10028)
!10039 = !DILocation(line: 430, column: 15, scope: !10028)
!10040 = !DILocation(line: 431, column: 46, scope: !10028)
!10041 = !DILocation(line: 431, column: 44, scope: !10028)
!10042 = !DILocation(line: 431, column: 61, scope: !10028)
!10043 = !DILocation(line: 431, column: 53, scope: !10028)
!10044 = !DILocation(line: 431, column: 2, scope: !10028)
!10045 = !DILocation(line: 435, column: 2, scope: !10028)
!10046 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1353, file: !1353, line: 438, type: !1243, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1184, retainedNodes: !10047)
!10047 = !{!10048, !10049, !10050, !10051}
!10048 = !DILocalVariable(name: "dev", arg: 1, scope: !10046, file: !1353, line: 438, type: !1213)
!10049 = !DILocalVariable(name: "pins", arg: 2, scope: !10046, file: !1353, line: 439, type: !1240)
!10050 = !DILocalVariable(name: "cfg", scope: !10046, file: !1353, line: 441, type: !10020)
!10051 = !DILocalVariable(name: "gpio", scope: !10046, file: !1353, line: 442, type: !1286)
!10052 = !DILocation(line: 0, scope: !10046)
!10053 = !DILocation(line: 441, column: 45, scope: !10046)
!10054 = !DILocation(line: 442, column: 44, scope: !10046)
!10055 = !DILocation(line: 448, column: 2, scope: !10046)
!10056 = !DILocation(line: 450, column: 2, scope: !10046)
!10057 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1353, file: !1353, line: 453, type: !1243, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1184, retainedNodes: !10058)
!10058 = !{!10059, !10060, !10061, !10062}
!10059 = !DILocalVariable(name: "dev", arg: 1, scope: !10057, file: !1353, line: 453, type: !1213)
!10060 = !DILocalVariable(name: "pins", arg: 2, scope: !10057, file: !1353, line: 454, type: !1240)
!10061 = !DILocalVariable(name: "cfg", scope: !10057, file: !1353, line: 456, type: !10020)
!10062 = !DILocalVariable(name: "gpio", scope: !10057, file: !1353, line: 457, type: !1286)
!10063 = !DILocation(line: 0, scope: !10057)
!10064 = !DILocation(line: 456, column: 45, scope: !10057)
!10065 = !DILocation(line: 457, column: 44, scope: !10057)
!10066 = !DILocation(line: 467, column: 2, scope: !10057)
!10067 = !DILocation(line: 470, column: 2, scope: !10057)
!10068 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1353, file: !1353, line: 473, type: !1243, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1184, retainedNodes: !10069)
!10069 = !{!10070, !10071, !10072, !10073}
!10070 = !DILocalVariable(name: "dev", arg: 1, scope: !10068, file: !1353, line: 473, type: !1213)
!10071 = !DILocalVariable(name: "pins", arg: 2, scope: !10068, file: !1353, line: 474, type: !1240)
!10072 = !DILocalVariable(name: "cfg", scope: !10068, file: !1353, line: 476, type: !10020)
!10073 = !DILocalVariable(name: "gpio", scope: !10068, file: !1353, line: 477, type: !1286)
!10074 = !DILocation(line: 0, scope: !10068)
!10075 = !DILocation(line: 476, column: 45, scope: !10068)
!10076 = !DILocation(line: 477, column: 44, scope: !10068)
!10077 = !DILocation(line: 484, column: 2, scope: !10068)
!10078 = !DILocation(line: 487, column: 2, scope: !10068)
!10079 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1353, file: !1353, line: 594, type: !1249, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1184, retainedNodes: !10080)
!10080 = !{!10081, !10082, !10083, !10084, !10085, !10086, !10088, !10089, !10090}
!10081 = !DILocalVariable(name: "dev", arg: 1, scope: !10079, file: !1353, line: 594, type: !1213)
!10082 = !DILocalVariable(name: "pin", arg: 2, scope: !10079, file: !1353, line: 595, type: !1228)
!10083 = !DILocalVariable(name: "mode", arg: 3, scope: !10079, file: !1353, line: 596, type: !1187)
!10084 = !DILocalVariable(name: "trig", arg: 4, scope: !10079, file: !1353, line: 597, type: !1193)
!10085 = !DILocalVariable(name: "cfg", scope: !10079, file: !1353, line: 599, type: !10020)
!10086 = !DILocalVariable(name: "data", scope: !10079, file: !1353, line: 600, type: !10087)
!10087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1434, size: 32)
!10088 = !DILocalVariable(name: "edge", scope: !10079, file: !1353, line: 601, type: !107)
!10089 = !DILocalVariable(name: "err", scope: !10079, file: !1353, line: 602, type: !107)
!10090 = !DILabel(scope: !10079, name: "exit", file: !1353, line: 643)
!10091 = !DILocation(line: 0, scope: !10079)
!10092 = !DILocation(line: 599, column: 45, scope: !10079)
!10093 = !DILocation(line: 604, column: 6, scope: !10079)
!10094 = !DILocation(line: 605, column: 34, scope: !10095)
!10095 = distinct !DILexicalBlock(scope: !10096, file: !1353, line: 605, column: 7)
!10096 = distinct !DILexicalBlock(scope: !10097, file: !1353, line: 604, column: 38)
!10097 = distinct !DILexicalBlock(scope: !10079, file: !1353, line: 604, column: 6)
!10098 = !DILocation(line: 605, column: 7, scope: !10095)
!10099 = !DILocation(line: 605, column: 47, scope: !10095)
!10100 = !DILocation(line: 605, column: 39, scope: !10095)
!10101 = !DILocation(line: 605, column: 7, scope: !10096)
!10102 = !DILocation(line: 606, column: 4, scope: !10103)
!10103 = distinct !DILexicalBlock(scope: !10095, file: !1353, line: 605, column: 53)
!10104 = !DILocation(line: 607, column: 4, scope: !10103)
!10105 = !DILocation(line: 608, column: 4, scope: !10103)
!10106 = !DILocation(line: 609, column: 3, scope: !10103)
!10107 = !DILocation(line: 600, column: 38, scope: !10079)
!10108 = !DILocation(line: 620, column: 30, scope: !10109)
!10109 = distinct !DILexicalBlock(scope: !10079, file: !1353, line: 620, column: 6)
!10110 = !DILocation(line: 620, column: 6, scope: !10109)
!10111 = !DILocation(line: 620, column: 57, scope: !10109)
!10112 = !DILocation(line: 620, column: 6, scope: !10079)
!10113 = !DILocation(line: 625, column: 29, scope: !10079)
!10114 = !DILocation(line: 625, column: 2, scope: !10079)
!10115 = !DILocation(line: 627, column: 2, scope: !10079)
!10116 = !DILocation(line: 630, column: 3, scope: !10117)
!10117 = distinct !DILexicalBlock(scope: !10079, file: !1353, line: 627, column: 16)
!10118 = !DILocation(line: 633, column: 3, scope: !10117)
!10119 = !DILocation(line: 636, column: 3, scope: !10117)
!10120 = !DILocation(line: 639, column: 2, scope: !10079)
!10121 = !DILocation(line: 641, column: 2, scope: !10079)
!10122 = !DILocation(line: 643, column: 1, scope: !10079)
!10123 = !DILocation(line: 644, column: 2, scope: !10079)
!10124 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1353, file: !1353, line: 647, type: !1253, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1184, retainedNodes: !10125)
!10125 = !{!10126, !10127, !10128, !10129}
!10126 = !DILocalVariable(name: "dev", arg: 1, scope: !10124, file: !1353, line: 647, type: !1213)
!10127 = !DILocalVariable(name: "callback", arg: 2, scope: !10124, file: !1353, line: 648, type: !1255)
!10128 = !DILocalVariable(name: "set", arg: 3, scope: !10124, file: !1353, line: 649, type: !145)
!10129 = !DILocalVariable(name: "data", scope: !10124, file: !1353, line: 651, type: !10087)
!10130 = !DILocation(line: 0, scope: !10124)
!10131 = !DILocation(line: 651, column: 38, scope: !10124)
!10132 = !DILocation(line: 653, column: 37, scope: !10124)
!10133 = !DILocation(line: 653, column: 9, scope: !10124)
!10134 = !DILocation(line: 653, column: 2, scope: !10124)
!10135 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !10136, file: !10136, line: 38, type: !10137, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1184, retainedNodes: !10140)
!10136 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10137 = !DISubroutineType(types: !10138)
!10138 = !{!107, !10139, !1255, !145}
!10139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1440, size: 32)
!10140 = !{!10141, !10142, !10143}
!10141 = !DILocalVariable(name: "callbacks", arg: 1, scope: !10135, file: !10136, line: 38, type: !10139)
!10142 = !DILocalVariable(name: "callback", arg: 2, scope: !10135, file: !10136, line: 39, type: !1255)
!10143 = !DILocalVariable(name: "set", arg: 3, scope: !10135, file: !10136, line: 40, type: !145)
!10144 = !DILocation(line: 0, scope: !10135)
!10145 = !DILocation(line: 42, column: 2, scope: !10146)
!10146 = distinct !DILexicalBlock(scope: !10147, file: !10136, line: 42, column: 2)
!10147 = distinct !DILexicalBlock(scope: !10135, file: !10136, line: 42, column: 2)
!10148 = !DILocation(line: 42, column: 2, scope: !10147)
!10149 = !DILocation(line: 42, column: 2, scope: !10150)
!10150 = distinct !DILexicalBlock(scope: !10146, file: !10136, line: 42, column: 2)
!10151 = !DILocation(line: 43, column: 2, scope: !10152)
!10152 = distinct !DILexicalBlock(scope: !10153, file: !10136, line: 43, column: 2)
!10153 = distinct !DILexicalBlock(scope: !10135, file: !10136, line: 43, column: 2)
!10154 = !DILocation(line: 43, column: 2, scope: !10153)
!10155 = !DILocation(line: 43, column: 2, scope: !10156)
!10156 = distinct !DILexicalBlock(scope: !10152, file: !10136, line: 43, column: 2)
!10157 = !DILocation(line: 45, column: 7, scope: !10158)
!10158 = distinct !DILexicalBlock(scope: !10135, file: !10136, line: 45, column: 6)
!10159 = !DILocation(line: 45, column: 6, scope: !10135)
!10160 = !DILocation(line: 46, column: 56, scope: !10161)
!10161 = distinct !DILexicalBlock(scope: !10162, file: !10136, line: 46, column: 7)
!10162 = distinct !DILexicalBlock(scope: !10158, file: !10136, line: 45, column: 38)
!10163 = !DILocation(line: 46, column: 8, scope: !10161)
!10164 = !DILocation(line: 46, column: 7, scope: !10162)
!10165 = !DILocation(line: 51, column: 13, scope: !10158)
!10166 = !DILocation(line: 56, column: 43, scope: !10167)
!10167 = distinct !DILexicalBlock(scope: !10168, file: !10136, line: 55, column: 11)
!10168 = distinct !DILexicalBlock(scope: !10135, file: !10136, line: 55, column: 6)
!10169 = !DILocation(line: 56, column: 3, scope: !10167)
!10170 = !DILocation(line: 57, column: 2, scope: !10167)
!10171 = !DILocation(line: 60, column: 1, scope: !10135)
!10172 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1260, file: !1260, line: 261, type: !10173, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1184, retainedNodes: !10175)
!10173 = !DISubroutineType(types: !10174)
!10174 = !{!145, !10139}
!10175 = !{!10176}
!10176 = !DILocalVariable(name: "list", arg: 1, scope: !10172, file: !1260, line: 261, type: !10139)
!10177 = !DILocation(line: 0, scope: !10172)
!10178 = !DILocation(line: 261, column: 1, scope: !10172)
!10179 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1260, file: !1260, line: 417, type: !10180, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1184, retainedNodes: !10182)
!10180 = !DISubroutineType(types: !10181)
!10181 = !{!145, !10139, !1444}
!10182 = !{!10183, !10184, !10185, !10186}
!10183 = !DILocalVariable(name: "list", arg: 1, scope: !10179, file: !1260, line: 417, type: !10139)
!10184 = !DILocalVariable(name: "node", arg: 2, scope: !10179, file: !1260, line: 417, type: !1444)
!10185 = !DILocalVariable(name: "prev", scope: !10179, file: !1260, line: 417, type: !1444)
!10186 = !DILocalVariable(name: "test", scope: !10179, file: !1260, line: 417, type: !1444)
!10187 = !DILocation(line: 0, scope: !10179)
!10188 = !DILocation(line: 417, column: 1, scope: !10189)
!10189 = distinct !DILexicalBlock(scope: !10179, file: !1260, line: 417, column: 1)
!10190 = !DILocation(line: 417, column: 1, scope: !10191)
!10191 = distinct !DILexicalBlock(scope: !10189, file: !1260, line: 417, column: 1)
!10192 = !DILocation(line: 417, column: 1, scope: !10193)
!10193 = distinct !DILexicalBlock(scope: !10194, file: !1260, line: 417, column: 1)
!10194 = distinct !DILexicalBlock(scope: !10191, file: !1260, line: 417, column: 1)
!10195 = !DILocation(line: 417, column: 1, scope: !10194)
!10196 = distinct !{!10196, !10188, !10188}
!10197 = !DILocation(line: 417, column: 1, scope: !10198)
!10198 = distinct !DILexicalBlock(scope: !10193, file: !1260, line: 417, column: 1)
!10199 = !DILocation(line: 417, column: 1, scope: !10179)
!10200 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1260, file: !1260, line: 298, type: !10201, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1184, retainedNodes: !10203)
!10201 = !DISubroutineType(types: !10202)
!10202 = !{null, !10139, !1444}
!10203 = !{!10204, !10205}
!10204 = !DILocalVariable(name: "list", arg: 1, scope: !10200, file: !1260, line: 298, type: !10139)
!10205 = !DILocalVariable(name: "node", arg: 2, scope: !10200, file: !1260, line: 298, type: !1444)
!10206 = !DILocation(line: 0, scope: !10200)
!10207 = !DILocation(line: 298, column: 1, scope: !10200)
!10208 = !DILocation(line: 298, column: 1, scope: !10209)
!10209 = distinct !DILexicalBlock(scope: !10200, file: !1260, line: 298, column: 1)
!10210 = !DILocation(line: 298, column: 1, scope: !10211)
!10211 = distinct !DILexicalBlock(scope: !10209, file: !1260, line: 298, column: 1)
!10212 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1260, file: !1260, line: 231, type: !10213, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1184, retainedNodes: !10215)
!10213 = !DISubroutineType(types: !10214)
!10214 = !{!1444, !10139}
!10215 = !{!10216}
!10216 = !DILocalVariable(name: "list", arg: 1, scope: !10212, file: !1260, line: 231, type: !10139)
!10217 = !DILocation(line: 0, scope: !10212)
!10218 = !DILocation(line: 233, column: 15, scope: !10212)
!10219 = !DILocation(line: 233, column: 2, scope: !10212)
!10220 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1260, file: !1260, line: 209, type: !10221, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1184, retainedNodes: !10223)
!10221 = !DISubroutineType(types: !10222)
!10222 = !{null, !1444, !1444}
!10223 = !{!10224, !10225}
!10224 = !DILocalVariable(name: "parent", arg: 1, scope: !10220, file: !1260, line: 209, type: !1444)
!10225 = !DILocalVariable(name: "child", arg: 2, scope: !10220, file: !1260, line: 209, type: !1444)
!10226 = !DILocation(line: 0, scope: !10220)
!10227 = !DILocation(line: 211, column: 10, scope: !10220)
!10228 = !DILocation(line: 211, column: 15, scope: !10220)
!10229 = !DILocation(line: 212, column: 1, scope: !10220)
!10230 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1260, file: !1260, line: 214, type: !10201, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1184, retainedNodes: !10231)
!10231 = !{!10232, !10233}
!10232 = !DILocalVariable(name: "list", arg: 1, scope: !10230, file: !1260, line: 214, type: !10139)
!10233 = !DILocalVariable(name: "node", arg: 2, scope: !10230, file: !1260, line: 214, type: !1444)
!10234 = !DILocation(line: 0, scope: !10230)
!10235 = !DILocation(line: 216, column: 8, scope: !10230)
!10236 = !DILocation(line: 216, column: 13, scope: !10230)
!10237 = !DILocation(line: 217, column: 1, scope: !10230)
!10238 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1260, file: !1260, line: 243, type: !10213, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1184, retainedNodes: !10239)
!10239 = !{!10240}
!10240 = !DILocalVariable(name: "list", arg: 1, scope: !10238, file: !1260, line: 243, type: !10139)
!10241 = !DILocation(line: 0, scope: !10238)
!10242 = !DILocation(line: 245, column: 15, scope: !10238)
!10243 = !DILocation(line: 245, column: 2, scope: !10238)
!10244 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1260, file: !1260, line: 219, type: !10201, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1184, retainedNodes: !10245)
!10245 = !{!10246, !10247}
!10246 = !DILocalVariable(name: "list", arg: 1, scope: !10244, file: !1260, line: 219, type: !10139)
!10247 = !DILocalVariable(name: "node", arg: 2, scope: !10244, file: !1260, line: 219, type: !1444)
!10248 = !DILocation(line: 0, scope: !10244)
!10249 = !DILocation(line: 221, column: 8, scope: !10244)
!10250 = !DILocation(line: 221, column: 13, scope: !10244)
!10251 = !DILocation(line: 222, column: 1, scope: !10244)
!10252 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1260, file: !1260, line: 401, type: !10253, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1184, retainedNodes: !10255)
!10253 = !DISubroutineType(types: !10254)
!10254 = !{null, !10139, !1444, !1444}
!10255 = !{!10256, !10257, !10258}
!10256 = !DILocalVariable(name: "list", arg: 1, scope: !10252, file: !1260, line: 401, type: !10139)
!10257 = !DILocalVariable(name: "prev_node", arg: 2, scope: !10252, file: !1260, line: 401, type: !1444)
!10258 = !DILocalVariable(name: "node", arg: 3, scope: !10252, file: !1260, line: 401, type: !1444)
!10259 = !DILocation(line: 0, scope: !10252)
!10260 = !DILocation(line: 401, column: 1, scope: !10261)
!10261 = distinct !DILexicalBlock(scope: !10252, file: !1260, line: 401, column: 1)
!10262 = !DILocation(line: 0, scope: !10261)
!10263 = !DILocation(line: 401, column: 1, scope: !10252)
!10264 = !DILocation(line: 401, column: 1, scope: !10265)
!10265 = distinct !DILexicalBlock(scope: !10261, file: !1260, line: 401, column: 1)
!10266 = !DILocation(line: 401, column: 1, scope: !10267)
!10267 = distinct !DILexicalBlock(scope: !10265, file: !1260, line: 401, column: 1)
!10268 = !DILocation(line: 401, column: 1, scope: !10269)
!10269 = distinct !DILexicalBlock(scope: !10267, file: !1260, line: 401, column: 1)
!10270 = !DILocation(line: 401, column: 1, scope: !10271)
!10271 = distinct !DILexicalBlock(scope: !10261, file: !1260, line: 401, column: 1)
!10272 = !DILocation(line: 401, column: 1, scope: !10273)
!10273 = distinct !DILexicalBlock(scope: !10271, file: !1260, line: 401, column: 1)
!10274 = !DILocation(line: 401, column: 1, scope: !10275)
!10275 = distinct !DILexicalBlock(scope: !10273, file: !1260, line: 401, column: 1)
!10276 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1260, file: !1260, line: 285, type: !10277, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1184, retainedNodes: !10279)
!10277 = !DISubroutineType(types: !10278)
!10278 = !{!1444, !1444}
!10279 = !{!10280}
!10280 = !DILocalVariable(name: "node", arg: 1, scope: !10276, file: !1260, line: 285, type: !1444)
!10281 = !DILocation(line: 0, scope: !10276)
!10282 = !DILocation(line: 285, column: 1, scope: !10276)
!10283 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1260, file: !1260, line: 274, type: !10277, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1184, retainedNodes: !10284)
!10284 = !{!10285}
!10285 = !DILocalVariable(name: "node", arg: 1, scope: !10283, file: !1260, line: 274, type: !1444)
!10286 = !DILocation(line: 0, scope: !10283)
!10287 = !DILocation(line: 274, column: 1, scope: !10283)
!10288 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1260, file: !1260, line: 204, type: !10277, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1184, retainedNodes: !10289)
!10289 = !{!10290}
!10290 = !DILocalVariable(name: "node", arg: 1, scope: !10288, file: !1260, line: 204, type: !1444)
!10291 = !DILocation(line: 0, scope: !10288)
!10292 = !DILocation(line: 206, column: 15, scope: !10288)
!10293 = !DILocation(line: 206, column: 2, scope: !10288)
!10294 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1353, file: !1353, line: 342, type: !214, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1184, retainedNodes: !10295)
!10295 = !{!10296, !10297, !10298}
!10296 = !DILocalVariable(name: "pin", arg: 1, scope: !10294, file: !1353, line: 342, type: !107)
!10297 = !DILocalVariable(name: "line", scope: !10294, file: !1353, line: 344, type: !152)
!10298 = !DILocalVariable(name: "port", scope: !10294, file: !1353, line: 345, type: !107)
!10299 = !DILocation(line: 0, scope: !10294)
!10300 = !DILocation(line: 344, column: 18, scope: !10294)
!10301 = !{i32 983040, i32 0}
!10302 = !DILocation(line: 356, column: 9, scope: !10294)
!10303 = !DILocation(line: 370, column: 2, scope: !10294)
!10304 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1353, file: !1353, line: 37, type: !889, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1184, retainedNodes: !10305)
!10305 = !{!10306, !10307, !10308}
!10306 = !DILocalVariable(name: "line", arg: 1, scope: !10304, file: !1353, line: 37, type: !107)
!10307 = !DILocalVariable(name: "arg", arg: 2, scope: !10304, file: !1353, line: 37, type: !106)
!10308 = !DILocalVariable(name: "data", scope: !10304, file: !1353, line: 39, type: !10087)
!10309 = !DILocation(line: 0, scope: !10304)
!10310 = !DILocation(line: 41, column: 29, scope: !10304)
!10311 = !DILocation(line: 41, column: 39, scope: !10304)
!10312 = !DILocation(line: 41, column: 44, scope: !10304)
!10313 = !DILocation(line: 41, column: 2, scope: !10304)
!10314 = !DILocation(line: 42, column: 1, scope: !10304)
!10315 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1353, file: !1353, line: 376, type: !10316, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1184, retainedNodes: !10318)
!10316 = !DISubroutineType(types: !10317)
!10317 = !{!107, !107, !107}
!10318 = !{!10319, !10320, !10321, !10323, !10324}
!10319 = !DILocalVariable(name: "port", arg: 1, scope: !10315, file: !1353, line: 376, type: !107)
!10320 = !DILocalVariable(name: "pin", arg: 2, scope: !10315, file: !1353, line: 376, type: !107)
!10321 = !DILocalVariable(name: "clk", scope: !10315, file: !1353, line: 386, type: !10322)
!10322 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1213)
!10323 = !DILocalVariable(name: "pclken", scope: !10315, file: !1353, line: 387, type: !1499)
!10324 = !DILocalVariable(name: "ret", scope: !10315, file: !1353, line: 396, type: !107)
!10325 = !DILocation(line: 0, scope: !10315)
!10326 = !DILocation(line: 387, column: 2, scope: !10315)
!10327 = !DILocation(line: 387, column: 22, scope: !10315)
!10328 = !DILocation(line: 399, column: 8, scope: !10315)
!10329 = !DILocation(line: 400, column: 10, scope: !10330)
!10330 = distinct !DILexicalBlock(scope: !10315, file: !1353, line: 400, column: 6)
!10331 = !DILocation(line: 400, column: 6, scope: !10315)
!10332 = !DILocation(line: 405, column: 2, scope: !10315)
!10333 = !DILocation(line: 407, column: 2, scope: !10315)
!10334 = !DILocation(line: 408, column: 1, scope: !10315)
!10335 = distinct !DISubprogram(name: "clock_control_on", scope: !990, file: !990, line: 123, type: !1318, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1184, retainedNodes: !10336)
!10336 = !{!10337, !10338, !10339}
!10337 = !DILocalVariable(name: "dev", arg: 1, scope: !10335, file: !990, line: 123, type: !1213)
!10338 = !DILocalVariable(name: "sys", arg: 2, scope: !10335, file: !990, line: 124, type: !1084)
!10339 = !DILocalVariable(name: "api", scope: !10335, file: !990, line: 126, type: !1311)
!10340 = !DILocation(line: 0, scope: !10335)
!10341 = !DILocation(line: 127, column: 49, scope: !10335)
!10342 = !DILocation(line: 129, column: 14, scope: !10335)
!10343 = !DILocation(line: 129, column: 9, scope: !10335)
!10344 = !DILocation(line: 129, column: 2, scope: !10335)
!10345 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1353, file: !1353, line: 311, type: !9465, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1184, retainedNodes: !10346)
!10346 = !{!10347, !10348, !10349}
!10347 = !DILocalVariable(name: "port", arg: 1, scope: !10345, file: !1353, line: 311, type: !107)
!10348 = !DILocalVariable(name: "pin", arg: 2, scope: !10345, file: !1353, line: 311, type: !107)
!10349 = !DILocalVariable(name: "line", scope: !10345, file: !1353, line: 313, type: !152)
!10350 = !DILocation(line: 0, scope: !10345)
!10351 = !DILocation(line: 313, column: 18, scope: !10345)
!10352 = !DILocation(line: 337, column: 2, scope: !10345)
!10353 = !DILocation(line: 340, column: 1, scope: !10345)
!10354 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1353, file: !1353, line: 295, type: !10355, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1184, retainedNodes: !10357)
!10355 = !DISubroutineType(types: !10356)
!10356 = !{!152, !107}
!10357 = !{!10358}
!10358 = !DILocalVariable(name: "pin", arg: 1, scope: !10354, file: !1353, line: 295, type: !107)
!10359 = !DILocation(line: 0, scope: !10354)
!10360 = !DILocation(line: 307, column: 46, scope: !10354)
!10361 = !DILocation(line: 307, column: 27, scope: !10354)
!10362 = !DILocation(line: 307, column: 32, scope: !10354)
!10363 = !DILocation(line: 307, column: 14, scope: !10354)
!10364 = !DILocation(line: 307, column: 39, scope: !10354)
!10365 = !DILocation(line: 307, column: 2, scope: !10354)
!10366 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !6096, file: !6096, line: 671, type: !10367, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1184, retainedNodes: !10369)
!10367 = !DISubroutineType(types: !10368)
!10368 = !{null, !152, !152}
!10369 = !{!10370, !10371}
!10370 = !DILocalVariable(name: "Port", arg: 1, scope: !10366, file: !6096, line: 671, type: !152)
!10371 = !DILocalVariable(name: "Line", arg: 2, scope: !10366, file: !6096, line: 671, type: !152)
!10372 = !DILocation(line: 0, scope: !10366)
!10373 = !DILocation(line: 673, column: 3, scope: !10366)
!10374 = !DILocalVariable(name: "value", arg: 1, scope: !10375, file: !6394, line: 373, type: !152)
!10375 = distinct !DISubprogram(name: "__RBIT", scope: !6394, file: !6394, line: 373, type: !7681, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1184, retainedNodes: !10376)
!10376 = !{!10374, !10377}
!10377 = !DILocalVariable(name: "result", scope: !10375, file: !6394, line: 375, type: !152)
!10378 = !DILocation(line: 0, scope: !10375, inlinedAt: !10379)
!10379 = distinct !DILocation(line: 673, column: 3, scope: !10366)
!10380 = !DILocation(line: 380, column: 4, scope: !10375, inlinedAt: !10379)
!10381 = !{i64 4119813}
!10382 = !DILocalVariable(name: "value", arg: 1, scope: !10383, file: !6394, line: 403, type: !152)
!10383 = distinct !DISubprogram(name: "__CLZ", scope: !6394, file: !6394, line: 403, type: !10384, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1184, retainedNodes: !10386)
!10384 = !DISubroutineType(types: !10385)
!10385 = !{!195, !152}
!10386 = !{!10382}
!10387 = !DILocation(line: 0, scope: !10383, inlinedAt: !10388)
!10388 = distinct !DILocation(line: 673, column: 3, scope: !10366)
!10389 = !DILocation(line: 414, column: 7, scope: !10383, inlinedAt: !10388)
!10390 = !DILocation(line: 674, column: 1, scope: !10366)
!10391 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !10136, file: !10136, line: 69, type: !10392, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1184, retainedNodes: !10394)
!10392 = !DISubroutineType(types: !10393)
!10393 = !{null, !10139, !1213, !152}
!10394 = !{!10395, !10396, !10397, !10398, !10399}
!10395 = !DILocalVariable(name: "list", arg: 1, scope: !10391, file: !10136, line: 69, type: !10139)
!10396 = !DILocalVariable(name: "port", arg: 2, scope: !10391, file: !10136, line: 70, type: !1213)
!10397 = !DILocalVariable(name: "pins", arg: 3, scope: !10391, file: !10136, line: 71, type: !152)
!10398 = !DILocalVariable(name: "cb", scope: !10391, file: !10136, line: 73, type: !1255)
!10399 = !DILocalVariable(name: "tmp", scope: !10391, file: !10136, line: 73, type: !1255)
!10400 = !DILocation(line: 0, scope: !10391)
!10401 = !DILocation(line: 75, column: 2, scope: !10402)
!10402 = distinct !DILexicalBlock(scope: !10391, file: !10136, line: 75, column: 2)
!10403 = !DILocation(line: 0, scope: !10402)
!10404 = !DILocation(line: 76, column: 11, scope: !10405)
!10405 = distinct !DILexicalBlock(scope: !10406, file: !10136, line: 76, column: 7)
!10406 = distinct !DILexicalBlock(scope: !10407, file: !10136, line: 75, column: 57)
!10407 = distinct !DILexicalBlock(scope: !10402, file: !10136, line: 75, column: 2)
!10408 = !DILocation(line: 76, column: 20, scope: !10405)
!10409 = !DILocation(line: 76, column: 7, scope: !10406)
!10410 = !DILocation(line: 77, column: 4, scope: !10411)
!10411 = distinct !DILexicalBlock(scope: !10412, file: !10136, line: 77, column: 4)
!10412 = distinct !DILexicalBlock(scope: !10413, file: !10136, line: 77, column: 4)
!10413 = distinct !DILexicalBlock(scope: !10405, file: !10136, line: 76, column: 28)
!10414 = !DILocation(line: 77, column: 4, scope: !10412)
!10415 = !DILocation(line: 77, column: 4, scope: !10416)
!10416 = distinct !DILexicalBlock(scope: !10411, file: !10136, line: 77, column: 4)
!10417 = !DILocation(line: 78, column: 4, scope: !10413)
!10418 = !DILocation(line: 79, column: 3, scope: !10413)
!10419 = !DILocation(line: 75, column: 2, scope: !10407)
!10420 = !DILocation(line: 81, column: 1, scope: !10391)
!10421 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !6096, file: !6096, line: 710, type: !7681, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1184, retainedNodes: !10422)
!10422 = !{!10423}
!10423 = !DILocalVariable(name: "Line", arg: 1, scope: !10421, file: !6096, line: 710, type: !152)
!10424 = !DILocation(line: 0, scope: !10421)
!10425 = !DILocation(line: 712, column: 21, scope: !10421)
!10426 = !DILocation(line: 0, scope: !10375, inlinedAt: !10427)
!10427 = distinct !DILocation(line: 712, column: 76, scope: !10421)
!10428 = !DILocation(line: 380, column: 4, scope: !10375, inlinedAt: !10427)
!10429 = !DILocation(line: 0, scope: !10383, inlinedAt: !10430)
!10430 = distinct !DILocation(line: 712, column: 76, scope: !10421)
!10431 = !DILocation(line: 414, column: 7, scope: !10383, inlinedAt: !10430)
!10432 = !DILocation(line: 712, column: 73, scope: !10421)
!10433 = !DILocation(line: 712, column: 3, scope: !10421)
!10434 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !10435, file: !10435, line: 910, type: !10436, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1184, retainedNodes: !10438)
!10435 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10436 = !DISubroutineType(types: !10437)
!10437 = !{null, !1286, !152}
!10438 = !{!10439, !10440}
!10439 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10434, file: !10435, line: 910, type: !1286)
!10440 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10434, file: !10435, line: 910, type: !152)
!10441 = !DILocation(line: 0, scope: !10434)
!10442 = !DILocation(line: 912, column: 3, scope: !10434)
!10443 = !DILocation(line: 913, column: 1, scope: !10434)
!10444 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !10435, file: !10435, line: 823, type: !10445, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1184, retainedNodes: !10447)
!10445 = !DISubroutineType(types: !10446)
!10446 = !{!152, !1286}
!10447 = !{!10448}
!10448 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10444, file: !10435, line: 823, type: !1286)
!10449 = !DILocation(line: 0, scope: !10444)
!10450 = !DILocation(line: 825, column: 21, scope: !10444)
!10451 = !DILocation(line: 825, column: 3, scope: !10444)
!10452 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !10435, file: !10435, line: 812, type: !10436, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1184, retainedNodes: !10453)
!10453 = !{!10454, !10455}
!10454 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10452, file: !10435, line: 812, type: !1286)
!10455 = !DILocalVariable(name: "PortValue", arg: 2, scope: !10452, file: !10435, line: 812, type: !152)
!10456 = !DILocation(line: 0, scope: !10452)
!10457 = !DILocation(line: 814, column: 3, scope: !10452)
!10458 = !DILocation(line: 815, column: 1, scope: !10452)
!10459 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !10435, file: !10435, line: 771, type: !10445, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1184, retainedNodes: !10460)
!10460 = !{!10461}
!10461 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10459, file: !10435, line: 771, type: !1286)
!10462 = !DILocation(line: 0, scope: !10459)
!10463 = !DILocation(line: 773, column: 21, scope: !10459)
!10464 = !DILocation(line: 773, column: 3, scope: !10459)
!10465 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1353, file: !1353, line: 47, type: !10466, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1184, retainedNodes: !10468)
!10466 = !DISubroutineType(types: !10467)
!10467 = !{!107, !1229, !187}
!10468 = !{!10469, !10470}
!10469 = !DILocalVariable(name: "flags", arg: 1, scope: !10465, file: !1353, line: 47, type: !1229)
!10470 = !DILocalVariable(name: "pincfg", arg: 2, scope: !10465, file: !1353, line: 47, type: !187)
!10471 = !DILocation(line: 0, scope: !10465)
!10472 = !DILocation(line: 50, column: 13, scope: !10473)
!10473 = distinct !DILexicalBlock(scope: !10465, file: !1353, line: 50, column: 6)
!10474 = !DILocation(line: 50, column: 28, scope: !10473)
!10475 = !DILocation(line: 50, column: 6, scope: !10465)
!10476 = !DILocation(line: 53, column: 11, scope: !10477)
!10477 = distinct !DILexicalBlock(scope: !10473, file: !1353, line: 50, column: 34)
!10478 = !DILocation(line: 55, column: 14, scope: !10479)
!10479 = distinct !DILexicalBlock(scope: !10477, file: !1353, line: 55, column: 7)
!10480 = !DILocation(line: 55, column: 35, scope: !10479)
!10481 = !DILocation(line: 55, column: 7, scope: !10477)
!10482 = !DILocation(line: 56, column: 14, scope: !10483)
!10483 = distinct !DILexicalBlock(scope: !10484, file: !1353, line: 56, column: 8)
!10484 = distinct !DILexicalBlock(scope: !10479, file: !1353, line: 55, column: 41)
!10485 = !DILocation(line: 56, column: 8, scope: !10484)
!10486 = !DILocation(line: 0, scope: !10479)
!10487 = !DILocation(line: 66, column: 14, scope: !10488)
!10488 = distinct !DILexicalBlock(scope: !10477, file: !1353, line: 66, column: 7)
!10489 = !DILocation(line: 66, column: 30, scope: !10488)
!10490 = !DILocation(line: 66, column: 7, scope: !10477)
!10491 = !DILocation(line: 67, column: 12, scope: !10492)
!10492 = distinct !DILexicalBlock(scope: !10488, file: !1353, line: 66, column: 36)
!10493 = !DILocation(line: 68, column: 3, scope: !10492)
!10494 = !DILocation(line: 68, column: 21, scope: !10495)
!10495 = distinct !DILexicalBlock(scope: !10488, file: !1353, line: 68, column: 14)
!10496 = !DILocation(line: 68, column: 39, scope: !10495)
!10497 = !DILocation(line: 68, column: 14, scope: !10488)
!10498 = !DILocation(line: 69, column: 12, scope: !10499)
!10499 = distinct !DILexicalBlock(scope: !10495, file: !1353, line: 68, column: 45)
!10500 = !DILocation(line: 70, column: 3, scope: !10499)
!10501 = !DILocation(line: 72, column: 21, scope: !10502)
!10502 = distinct !DILexicalBlock(scope: !10473, file: !1353, line: 72, column: 14)
!10503 = !DILocation(line: 72, column: 35, scope: !10502)
!10504 = !DILocation(line: 72, column: 14, scope: !10473)
!10505 = !DILocation(line: 77, column: 14, scope: !10506)
!10506 = distinct !DILexicalBlock(scope: !10507, file: !1353, line: 77, column: 7)
!10507 = distinct !DILexicalBlock(scope: !10502, file: !1353, line: 72, column: 41)
!10508 = !DILocation(line: 77, column: 30, scope: !10506)
!10509 = !DILocation(line: 77, column: 7, scope: !10507)
!10510 = !DILocation(line: 0, scope: !10473)
!10511 = !DILocation(line: 90, column: 1, scope: !10465)
!10512 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1353, file: !1353, line: 157, type: !10513, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1184, retainedNodes: !10515)
!10513 = !DISubroutineType(types: !10514)
!10514 = !{null, !1213, !107, !107, !107}
!10515 = !{!10516, !10517, !10518, !10519, !10520, !10521, !10522, !10523, !10524, !10525, !10526}
!10516 = !DILocalVariable(name: "dev", arg: 1, scope: !10512, file: !1353, line: 157, type: !1213)
!10517 = !DILocalVariable(name: "pin", arg: 2, scope: !10512, file: !1353, line: 157, type: !107)
!10518 = !DILocalVariable(name: "conf", arg: 3, scope: !10512, file: !1353, line: 158, type: !107)
!10519 = !DILocalVariable(name: "func", arg: 4, scope: !10512, file: !1353, line: 158, type: !107)
!10520 = !DILocalVariable(name: "cfg", scope: !10512, file: !1353, line: 160, type: !10020)
!10521 = !DILocalVariable(name: "gpio", scope: !10512, file: !1353, line: 161, type: !1286)
!10522 = !DILocalVariable(name: "pin_ll", scope: !10512, file: !1353, line: 163, type: !107)
!10523 = !DILocalVariable(name: "mode", scope: !10512, file: !1353, line: 227, type: !32)
!10524 = !DILocalVariable(name: "otype", scope: !10512, file: !1353, line: 227, type: !32)
!10525 = !DILocalVariable(name: "ospeed", scope: !10512, file: !1353, line: 227, type: !32)
!10526 = !DILocalVariable(name: "pupd", scope: !10512, file: !1353, line: 227, type: !32)
!10527 = !DILocation(line: 0, scope: !10512)
!10528 = !DILocation(line: 160, column: 45, scope: !10512)
!10529 = !DILocation(line: 161, column: 44, scope: !10512)
!10530 = !DILocation(line: 163, column: 15, scope: !10512)
!10531 = !DILocation(line: 229, column: 14, scope: !10512)
!10532 = !DILocation(line: 246, column: 47, scope: !10512)
!10533 = !DILocation(line: 246, column: 2, scope: !10512)
!10534 = !DILocation(line: 248, column: 43, scope: !10512)
!10535 = !DILocation(line: 248, column: 2, scope: !10512)
!10536 = !DILocation(line: 250, column: 40, scope: !10512)
!10537 = !DILocation(line: 250, column: 2, scope: !10512)
!10538 = !DILocation(line: 252, column: 11, scope: !10539)
!10539 = distinct !DILexicalBlock(scope: !10512, file: !1353, line: 252, column: 6)
!10540 = !DILocation(line: 252, column: 6, scope: !10512)
!10541 = !DILocation(line: 253, column: 11, scope: !10542)
!10542 = distinct !DILexicalBlock(scope: !10543, file: !1353, line: 253, column: 7)
!10543 = distinct !DILexicalBlock(scope: !10539, file: !1353, line: 252, column: 36)
!10544 = !DILocation(line: 253, column: 7, scope: !10543)
!10545 = !DILocation(line: 254, column: 4, scope: !10546)
!10546 = distinct !DILexicalBlock(scope: !10542, file: !1353, line: 253, column: 16)
!10547 = !DILocation(line: 255, column: 3, scope: !10546)
!10548 = !DILocation(line: 256, column: 4, scope: !10549)
!10549 = distinct !DILexicalBlock(scope: !10542, file: !1353, line: 255, column: 10)
!10550 = !DILocation(line: 260, column: 40, scope: !10512)
!10551 = !DILocation(line: 260, column: 2, scope: !10512)
!10552 = !DILocation(line: 265, column: 1, scope: !10512)
!10553 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1353, file: !1353, line: 137, type: !10355, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1184, retainedNodes: !10554)
!10554 = !{!10555, !10556}
!10555 = !DILocalVariable(name: "pin", arg: 1, scope: !10553, file: !1353, line: 137, type: !107)
!10556 = !DILocalVariable(name: "pinval", scope: !10553, file: !1353, line: 139, type: !152)
!10557 = !DILocation(line: 0, scope: !10553)
!10558 = !DILocation(line: 149, column: 13, scope: !10553)
!10559 = !DILocation(line: 151, column: 2, scope: !10553)
!10560 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !10435, file: !10435, line: 342, type: !10561, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1184, retainedNodes: !10563)
!10561 = !DISubroutineType(types: !10562)
!10562 = !{null, !1286, !152, !152}
!10563 = !{!10564, !10565, !10566}
!10564 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10560, file: !10435, line: 342, type: !1286)
!10565 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10560, file: !10435, line: 342, type: !152)
!10566 = !DILocalVariable(name: "OutputType", arg: 3, scope: !10560, file: !10435, line: 342, type: !152)
!10567 = !DILocation(line: 0, scope: !10560)
!10568 = !DILocation(line: 344, column: 3, scope: !10560)
!10569 = !DILocation(line: 345, column: 1, scope: !10560)
!10570 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !10435, file: !10435, line: 413, type: !10561, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1184, retainedNodes: !10571)
!10571 = !{!10572, !10573, !10574}
!10572 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10570, file: !10435, line: 413, type: !1286)
!10573 = !DILocalVariable(name: "Pin", arg: 2, scope: !10570, file: !10435, line: 413, type: !152)
!10574 = !DILocalVariable(name: "Speed", arg: 3, scope: !10570, file: !10435, line: 413, type: !152)
!10575 = !DILocation(line: 0, scope: !10570)
!10576 = !DILocation(line: 415, column: 3, scope: !10570)
!10577 = !DILocation(line: 0, scope: !10375, inlinedAt: !10578)
!10578 = distinct !DILocation(line: 415, column: 3, scope: !10570)
!10579 = !DILocation(line: 380, column: 4, scope: !10375, inlinedAt: !10578)
!10580 = !DILocation(line: 0, scope: !10383, inlinedAt: !10581)
!10581 = distinct !DILocation(line: 415, column: 3, scope: !10570)
!10582 = !DILocation(line: 414, column: 7, scope: !10383, inlinedAt: !10581)
!10583 = !DILocation(line: 0, scope: !10375, inlinedAt: !10584)
!10584 = distinct !DILocation(line: 415, column: 3, scope: !10570)
!10585 = !DILocation(line: 0, scope: !10383, inlinedAt: !10586)
!10586 = distinct !DILocation(line: 415, column: 3, scope: !10570)
!10587 = !DILocation(line: 417, column: 1, scope: !10570)
!10588 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !10435, file: !10435, line: 484, type: !10561, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1184, retainedNodes: !10589)
!10589 = !{!10590, !10591, !10592}
!10590 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10588, file: !10435, line: 484, type: !1286)
!10591 = !DILocalVariable(name: "Pin", arg: 2, scope: !10588, file: !10435, line: 484, type: !152)
!10592 = !DILocalVariable(name: "Pull", arg: 3, scope: !10588, file: !10435, line: 484, type: !152)
!10593 = !DILocation(line: 0, scope: !10588)
!10594 = !DILocation(line: 486, column: 3, scope: !10588)
!10595 = !DILocation(line: 0, scope: !10375, inlinedAt: !10596)
!10596 = distinct !DILocation(line: 486, column: 3, scope: !10588)
!10597 = !DILocation(line: 380, column: 4, scope: !10375, inlinedAt: !10596)
!10598 = !DILocation(line: 0, scope: !10383, inlinedAt: !10599)
!10599 = distinct !DILocation(line: 486, column: 3, scope: !10588)
!10600 = !DILocation(line: 414, column: 7, scope: !10383, inlinedAt: !10599)
!10601 = !DILocation(line: 0, scope: !10375, inlinedAt: !10602)
!10602 = distinct !DILocation(line: 486, column: 3, scope: !10588)
!10603 = !DILocation(line: 0, scope: !10383, inlinedAt: !10604)
!10604 = distinct !DILocation(line: 486, column: 3, scope: !10588)
!10605 = !DILocation(line: 487, column: 1, scope: !10588)
!10606 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !10435, file: !10435, line: 556, type: !10561, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1184, retainedNodes: !10607)
!10607 = !{!10608, !10609, !10610}
!10608 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10606, file: !10435, line: 556, type: !1286)
!10609 = !DILocalVariable(name: "Pin", arg: 2, scope: !10606, file: !10435, line: 556, type: !152)
!10610 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10606, file: !10435, line: 556, type: !152)
!10611 = !DILocation(line: 0, scope: !10606)
!10612 = !DILocation(line: 558, column: 3, scope: !10606)
!10613 = !DILocation(line: 0, scope: !10375, inlinedAt: !10614)
!10614 = distinct !DILocation(line: 558, column: 3, scope: !10606)
!10615 = !DILocation(line: 380, column: 4, scope: !10375, inlinedAt: !10614)
!10616 = !DILocation(line: 0, scope: !10383, inlinedAt: !10617)
!10617 = distinct !DILocation(line: 558, column: 3, scope: !10606)
!10618 = !DILocation(line: 414, column: 7, scope: !10383, inlinedAt: !10617)
!10619 = !DILocation(line: 0, scope: !10375, inlinedAt: !10620)
!10620 = distinct !DILocation(line: 558, column: 3, scope: !10606)
!10621 = !DILocation(line: 0, scope: !10383, inlinedAt: !10622)
!10622 = distinct !DILocation(line: 558, column: 3, scope: !10606)
!10623 = !DILocation(line: 560, column: 1, scope: !10606)
!10624 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !10435, file: !10435, line: 633, type: !10561, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1184, retainedNodes: !10625)
!10625 = !{!10626, !10627, !10628}
!10626 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10624, file: !10435, line: 633, type: !1286)
!10627 = !DILocalVariable(name: "Pin", arg: 2, scope: !10624, file: !10435, line: 633, type: !152)
!10628 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10624, file: !10435, line: 633, type: !152)
!10629 = !DILocation(line: 0, scope: !10624)
!10630 = !DILocation(line: 635, column: 3, scope: !10624)
!10631 = !DILocation(line: 0, scope: !10375, inlinedAt: !10632)
!10632 = distinct !DILocation(line: 635, column: 3, scope: !10624)
!10633 = !DILocation(line: 380, column: 4, scope: !10375, inlinedAt: !10632)
!10634 = !DILocation(line: 0, scope: !10383, inlinedAt: !10635)
!10635 = distinct !DILocation(line: 635, column: 3, scope: !10624)
!10636 = !DILocation(line: 414, column: 7, scope: !10383, inlinedAt: !10635)
!10637 = !DILocation(line: 0, scope: !10375, inlinedAt: !10638)
!10638 = distinct !DILocation(line: 635, column: 3, scope: !10624)
!10639 = !DILocation(line: 0, scope: !10383, inlinedAt: !10640)
!10640 = distinct !DILocation(line: 635, column: 3, scope: !10624)
!10641 = !DILocation(line: 637, column: 1, scope: !10624)
!10642 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !10435, file: !10435, line: 273, type: !10561, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1184, retainedNodes: !10643)
!10643 = !{!10644, !10645, !10646}
!10644 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10642, file: !10435, line: 273, type: !1286)
!10645 = !DILocalVariable(name: "Pin", arg: 2, scope: !10642, file: !10435, line: 273, type: !152)
!10646 = !DILocalVariable(name: "Mode", arg: 3, scope: !10642, file: !10435, line: 273, type: !152)
!10647 = !DILocation(line: 0, scope: !10642)
!10648 = !DILocation(line: 275, column: 3, scope: !10642)
!10649 = !DILocation(line: 0, scope: !10375, inlinedAt: !10650)
!10650 = distinct !DILocation(line: 275, column: 3, scope: !10642)
!10651 = !DILocation(line: 380, column: 4, scope: !10375, inlinedAt: !10650)
!10652 = !DILocation(line: 0, scope: !10383, inlinedAt: !10653)
!10653 = distinct !DILocation(line: 275, column: 3, scope: !10642)
!10654 = !DILocation(line: 414, column: 7, scope: !10383, inlinedAt: !10653)
!10655 = !DILocation(line: 0, scope: !10375, inlinedAt: !10656)
!10656 = distinct !DILocation(line: 275, column: 3, scope: !10642)
!10657 = !DILocation(line: 0, scope: !10383, inlinedAt: !10658)
!10658 = distinct !DILocation(line: 275, column: 3, scope: !10642)
!10659 = !DILocation(line: 276, column: 1, scope: !10642)
!10660 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1353, file: !1353, line: 698, type: !1366, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1184, retainedNodes: !10661)
!10661 = !{!10662, !10663, !10664}
!10662 = !DILocalVariable(name: "dev", arg: 1, scope: !10660, file: !1353, line: 698, type: !1213)
!10663 = !DILocalVariable(name: "data", scope: !10660, file: !1353, line: 700, type: !10087)
!10664 = !DILocalVariable(name: "ret", scope: !10660, file: !1353, line: 701, type: !107)
!10665 = !DILocation(line: 0, scope: !10660)
!10666 = !DILocation(line: 700, column: 38, scope: !10660)
!10667 = !DILocation(line: 703, column: 8, scope: !10660)
!10668 = !DILocation(line: 703, column: 12, scope: !10660)
!10669 = !DILocation(line: 705, column: 7, scope: !10670)
!10670 = distinct !DILexicalBlock(scope: !10660, file: !1353, line: 705, column: 6)
!10671 = !DILocation(line: 705, column: 6, scope: !10660)
!10672 = !DILocation(line: 722, column: 8, scope: !10660)
!10673 = !DILocation(line: 723, column: 10, scope: !10674)
!10674 = distinct !DILexicalBlock(scope: !10660, file: !1353, line: 723, column: 6)
!10675 = !DILocation(line: 723, column: 6, scope: !10660)
!10676 = !DILocation(line: 731, column: 1, scope: !10660)
!10677 = distinct !DISubprogram(name: "device_is_ready", scope: !9865, file: !9865, line: 47, type: !10678, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1184, retainedNodes: !10680)
!10678 = !DISubroutineType(types: !10679)
!10679 = !{!145, !1213}
!10680 = !{!10681}
!10681 = !DILocalVariable(name: "dev", arg: 1, scope: !10677, file: !9865, line: 47, type: !1213)
!10682 = !DILocation(line: 0, scope: !10677)
!10683 = !DILocation(line: 55, column: 2, scope: !10684)
!10684 = distinct !DILexicalBlock(scope: !10677, file: !9865, line: 55, column: 2)
!10685 = !{i64 2155676606}
!10686 = !DILocation(line: 56, column: 9, scope: !10677)
!10687 = !DILocation(line: 56, column: 2, scope: !10677)
!10688 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1353, file: !1353, line: 270, type: !10689, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1184, retainedNodes: !10691)
!10689 = !DISubroutineType(types: !10690)
!10690 = !{!107, !1213, !145}
!10691 = !{!10692, !10693, !10694, !10695, !10696}
!10692 = !DILocalVariable(name: "dev", arg: 1, scope: !10688, file: !1353, line: 270, type: !1213)
!10693 = !DILocalVariable(name: "on", arg: 2, scope: !10688, file: !1353, line: 270, type: !145)
!10694 = !DILocalVariable(name: "cfg", scope: !10688, file: !1353, line: 272, type: !10020)
!10695 = !DILocalVariable(name: "ret", scope: !10688, file: !1353, line: 273, type: !107)
!10696 = !DILocalVariable(name: "clk", scope: !10688, file: !1353, line: 278, type: !10322)
!10697 = !DILocation(line: 0, scope: !10688)
!10698 = !DILocation(line: 272, column: 45, scope: !10688)
!10699 = !DILocation(line: 282, column: 38, scope: !10700)
!10700 = distinct !DILexicalBlock(scope: !10701, file: !1353, line: 280, column: 10)
!10701 = distinct !DILexicalBlock(scope: !10688, file: !1353, line: 280, column: 6)
!10702 = !DILocation(line: 282, column: 6, scope: !10700)
!10703 = !DILocation(line: 281, column: 9, scope: !10700)
!10704 = !DILocation(line: 293, column: 1, scope: !10688)
!10705 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !247, file: !247, line: 730, type: !10678, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1184, retainedNodes: !10706)
!10706 = !{!10707}
!10707 = !DILocalVariable(name: "dev", arg: 1, scope: !10705, file: !247, line: 730, type: !1213)
!10708 = !DILocation(line: 0, scope: !10705)
!10709 = !DILocation(line: 732, column: 9, scope: !10705)
!10710 = !DILocation(line: 732, column: 2, scope: !10705)
!10711 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1353, file: !1353, line: 496, type: !10712, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1184, retainedNodes: !10714)
!10712 = !DISubroutineType(types: !10713)
!10713 = !{!107, !1213, !107, !107, !107}
!10714 = !{!10715, !10716, !10717, !10718, !10719, !10720}
!10715 = !DILocalVariable(name: "dev", arg: 1, scope: !10711, file: !1353, line: 496, type: !1213)
!10716 = !DILocalVariable(name: "pin", arg: 2, scope: !10711, file: !1353, line: 496, type: !107)
!10717 = !DILocalVariable(name: "conf", arg: 3, scope: !10711, file: !1353, line: 496, type: !107)
!10718 = !DILocalVariable(name: "func", arg: 4, scope: !10711, file: !1353, line: 496, type: !107)
!10719 = !DILocalVariable(name: "ret", scope: !10711, file: !1353, line: 498, type: !107)
!10720 = !DILocalVariable(name: "gpio_out", scope: !10721, file: !1353, line: 508, type: !152)
!10721 = distinct !DILexicalBlock(scope: !10722, file: !1353, line: 507, column: 27)
!10722 = distinct !DILexicalBlock(scope: !10711, file: !1353, line: 507, column: 6)
!10723 = !DILocation(line: 0, scope: !10711)
!10724 = !DILocation(line: 505, column: 2, scope: !10711)
!10725 = !DILocation(line: 507, column: 11, scope: !10722)
!10726 = !DILocation(line: 507, column: 6, scope: !10711)
!10727 = !DILocation(line: 508, column: 28, scope: !10721)
!10728 = !DILocation(line: 0, scope: !10721)
!10729 = !DILocation(line: 510, column: 16, scope: !10730)
!10730 = distinct !DILexicalBlock(scope: !10721, file: !1353, line: 510, column: 7)
!10731 = !DILocation(line: 0, scope: !10730)
!10732 = !DILocation(line: 510, column: 7, scope: !10721)
!10733 = !DILocation(line: 511, column: 4, scope: !10734)
!10734 = distinct !DILexicalBlock(scope: !10730, file: !1353, line: 510, column: 32)
!10735 = !DILocation(line: 512, column: 3, scope: !10734)
!10736 = !DILocation(line: 513, column: 4, scope: !10737)
!10737 = distinct !DILexicalBlock(scope: !10738, file: !1353, line: 512, column: 39)
!10738 = distinct !DILexicalBlock(scope: !10730, file: !1353, line: 512, column: 14)
!10739 = !DILocation(line: 514, column: 3, scope: !10737)
!10740 = !DILocation(line: 518, column: 1, scope: !10711)
!10741 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1662, file: !1662, line: 526, type: !1565, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1523, retainedNodes: !10742)
!10742 = !{!10743, !10744, !10745}
!10743 = !DILocalVariable(name: "dev", arg: 1, scope: !10741, file: !1662, line: 526, type: !1567)
!10744 = !DILocalVariable(name: "c", arg: 2, scope: !10741, file: !1662, line: 526, type: !1145)
!10745 = !DILocalVariable(name: "config", scope: !10741, file: !1662, line: 528, type: !10746)
!10746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1711, size: 32)
!10747 = !DILocation(line: 0, scope: !10741)
!10748 = !DILocation(line: 528, column: 48, scope: !10741)
!10749 = !DILocation(line: 531, column: 40, scope: !10750)
!10750 = distinct !DILexicalBlock(scope: !10741, file: !1662, line: 531, column: 6)
!10751 = !DILocation(line: 531, column: 6, scope: !10750)
!10752 = !DILocation(line: 531, column: 6, scope: !10741)
!10753 = !DILocation(line: 532, column: 34, scope: !10754)
!10754 = distinct !DILexicalBlock(scope: !10750, file: !1662, line: 531, column: 48)
!10755 = !DILocation(line: 532, column: 3, scope: !10754)
!10756 = !DILocation(line: 533, column: 2, scope: !10754)
!10757 = !DILocation(line: 539, column: 42, scope: !10758)
!10758 = distinct !DILexicalBlock(scope: !10741, file: !1662, line: 539, column: 6)
!10759 = !DILocation(line: 539, column: 7, scope: !10758)
!10760 = !DILocation(line: 539, column: 6, scope: !10741)
!10761 = !DILocation(line: 543, column: 52, scope: !10741)
!10762 = !DILocation(line: 543, column: 22, scope: !10741)
!10763 = !DILocation(line: 543, column: 5, scope: !10741)
!10764 = !DILocation(line: 545, column: 2, scope: !10741)
!10765 = !DILocation(line: 546, column: 1, scope: !10741)
!10766 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1662, file: !1662, line: 548, type: !1584, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1523, retainedNodes: !10767)
!10767 = !{!10768, !10769, !10770, !10771}
!10768 = !DILocalVariable(name: "dev", arg: 1, scope: !10766, file: !1662, line: 548, type: !1567)
!10769 = !DILocalVariable(name: "c", arg: 2, scope: !10766, file: !1662, line: 549, type: !196)
!10770 = !DILocalVariable(name: "config", scope: !10766, file: !1662, line: 551, type: !10746)
!10771 = !DILocalVariable(name: "key", scope: !10766, file: !1662, line: 555, type: !32)
!10772 = !DILocation(line: 0, scope: !10766)
!10773 = !DILocation(line: 551, column: 48, scope: !10766)
!10774 = !DILocation(line: 562, column: 2, scope: !10766)
!10775 = !DILocation(line: 563, column: 41, scope: !10776)
!10776 = distinct !DILexicalBlock(scope: !10777, file: !1662, line: 563, column: 7)
!10777 = distinct !DILexicalBlock(scope: !10766, file: !1662, line: 562, column: 12)
!10778 = !DILocation(line: 563, column: 7, scope: !10776)
!10779 = !DILocation(line: 563, column: 7, scope: !10777)
!10780 = !DILocation(line: 55, column: 2, scope: !10781, inlinedAt: !10785)
!10781 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6075, file: !6075, line: 42, type: !6076, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1523, retainedNodes: !10782)
!10782 = !{!10783, !10784}
!10783 = !DILocalVariable(name: "key", scope: !10781, file: !6075, line: 44, type: !32)
!10784 = !DILocalVariable(name: "tmp", scope: !10781, file: !6075, line: 53, type: !32)
!10785 = distinct !DILocation(line: 564, column: 10, scope: !10786)
!10786 = distinct !DILexicalBlock(scope: !10776, file: !1662, line: 563, column: 49)
!10787 = !{i64 2647006}
!10788 = !DILocation(line: 0, scope: !10781, inlinedAt: !10785)
!10789 = !DILocation(line: 565, column: 42, scope: !10790)
!10790 = distinct !DILexicalBlock(scope: !10786, file: !1662, line: 565, column: 8)
!10791 = !DILocation(line: 565, column: 8, scope: !10790)
!10792 = !DILocation(line: 565, column: 8, scope: !10786)
!10793 = !DILocalVariable(name: "key", arg: 1, scope: !10794, file: !6075, line: 84, type: !32)
!10794 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6075, file: !6075, line: 84, type: !6086, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1523, retainedNodes: !10795)
!10795 = !{!10793}
!10796 = !DILocation(line: 0, scope: !10794, inlinedAt: !10797)
!10797 = distinct !DILocation(line: 568, column: 4, scope: !10786)
!10798 = !DILocation(line: 95, column: 2, scope: !10794, inlinedAt: !10797)
!10799 = !{i64 2647823}
!10800 = !DILocation(line: 569, column: 3, scope: !10786)
!10801 = distinct !{!10801, !10774, !10802}
!10802 = !DILocation(line: 570, column: 2, scope: !10766)
!10803 = !DILocation(line: 592, column: 33, scope: !10766)
!10804 = !DILocation(line: 592, column: 2, scope: !10766)
!10805 = !DILocation(line: 0, scope: !10794, inlinedAt: !10806)
!10806 = distinct !DILocation(line: 593, column: 2, scope: !10766)
!10807 = !DILocation(line: 95, column: 2, scope: !10794, inlinedAt: !10806)
!10808 = !DILocation(line: 594, column: 1, scope: !10766)
!10809 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1662, file: !1662, line: 596, type: !1588, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1523, retainedNodes: !10810)
!10810 = !{!10811, !10812, !10813}
!10811 = !DILocalVariable(name: "dev", arg: 1, scope: !10809, file: !1662, line: 596, type: !1567)
!10812 = !DILocalVariable(name: "config", scope: !10809, file: !1662, line: 598, type: !10746)
!10813 = !DILocalVariable(name: "err", scope: !10809, file: !1662, line: 599, type: !152)
!10814 = !DILocation(line: 0, scope: !10809)
!10815 = !DILocation(line: 598, column: 48, scope: !10809)
!10816 = !DILocation(line: 606, column: 40, scope: !10817)
!10817 = distinct !DILexicalBlock(scope: !10809, file: !1662, line: 606, column: 6)
!10818 = !DILocation(line: 606, column: 6, scope: !10817)
!10819 = !DILocation(line: 606, column: 6, scope: !10809)
!10820 = !DILocation(line: 610, column: 39, scope: !10821)
!10821 = distinct !DILexicalBlock(scope: !10809, file: !1662, line: 610, column: 6)
!10822 = !DILocation(line: 610, column: 6, scope: !10821)
!10823 = !DILocation(line: 610, column: 6, scope: !10809)
!10824 = !DILocation(line: 614, column: 39, scope: !10825)
!10825 = distinct !DILexicalBlock(scope: !10809, file: !1662, line: 614, column: 6)
!10826 = !DILocation(line: 614, column: 6, scope: !10825)
!10827 = !DILocation(line: 614, column: 6, scope: !10809)
!10828 = !DILocation(line: 619, column: 40, scope: !10829)
!10829 = distinct !DILexicalBlock(scope: !10809, file: !1662, line: 619, column: 6)
!10830 = !DILocation(line: 619, column: 6, scope: !10829)
!10831 = !DILocation(line: 619, column: 6, scope: !10809)
!10832 = !DILocation(line: 623, column: 10, scope: !10833)
!10833 = distinct !DILexicalBlock(scope: !10809, file: !1662, line: 623, column: 6)
!10834 = !DILocation(line: 623, column: 6, scope: !10809)
!10835 = !DILocation(line: 624, column: 34, scope: !10836)
!10836 = distinct !DILexicalBlock(scope: !10833, file: !1662, line: 623, column: 24)
!10837 = !DILocation(line: 624, column: 3, scope: !10836)
!10838 = !DILocation(line: 625, column: 2, scope: !10836)
!10839 = !DILocation(line: 632, column: 10, scope: !10840)
!10840 = distinct !DILexicalBlock(scope: !10809, file: !1662, line: 632, column: 6)
!10841 = !DILocation(line: 632, column: 6, scope: !10809)
!10842 = !DILocation(line: 633, column: 34, scope: !10843)
!10843 = distinct !DILexicalBlock(scope: !10840, file: !1662, line: 632, column: 32)
!10844 = !DILocation(line: 633, column: 3, scope: !10843)
!10845 = !DILocation(line: 634, column: 2, scope: !10843)
!10846 = !DILocation(line: 636, column: 10, scope: !10847)
!10847 = distinct !DILexicalBlock(scope: !10809, file: !1662, line: 636, column: 6)
!10848 = !DILocation(line: 636, column: 6, scope: !10809)
!10849 = !DILocation(line: 637, column: 33, scope: !10850)
!10850 = distinct !DILexicalBlock(scope: !10847, file: !1662, line: 636, column: 31)
!10851 = !DILocation(line: 637, column: 3, scope: !10850)
!10852 = !DILocation(line: 638, column: 2, scope: !10850)
!10853 = !DILocation(line: 640, column: 10, scope: !10854)
!10854 = distinct !DILexicalBlock(scope: !10809, file: !1662, line: 640, column: 6)
!10855 = !DILocation(line: 640, column: 6, scope: !10809)
!10856 = !DILocation(line: 641, column: 33, scope: !10857)
!10857 = distinct !DILexicalBlock(scope: !10854, file: !1662, line: 640, column: 32)
!10858 = !DILocation(line: 641, column: 3, scope: !10857)
!10859 = !DILocation(line: 642, column: 2, scope: !10857)
!10860 = !DILocation(line: 646, column: 32, scope: !10809)
!10861 = !DILocation(line: 646, column: 2, scope: !10809)
!10862 = !DILocation(line: 648, column: 2, scope: !10809)
!10863 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1662, file: !1662, line: 419, type: !1592, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1523, retainedNodes: !10864)
!10864 = !{!10865, !10866, !10867, !10868, !10870, !10871, !10872, !10873}
!10865 = !DILocalVariable(name: "dev", arg: 1, scope: !10863, file: !1662, line: 419, type: !1567)
!10866 = !DILocalVariable(name: "cfg", arg: 2, scope: !10863, file: !1662, line: 420, type: !1594)
!10867 = !DILocalVariable(name: "config", scope: !10863, file: !1662, line: 422, type: !10746)
!10868 = !DILocalVariable(name: "data", scope: !10863, file: !1662, line: 423, type: !10869)
!10869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1768, size: 32)
!10870 = !DILocalVariable(name: "parity", scope: !10863, file: !1662, line: 424, type: !6671)
!10871 = !DILocalVariable(name: "stopbits", scope: !10863, file: !1662, line: 425, type: !6671)
!10872 = !DILocalVariable(name: "databits", scope: !10863, file: !1662, line: 426, type: !6671)
!10873 = !DILocalVariable(name: "flowctrl", scope: !10863, file: !1662, line: 428, type: !6671)
!10874 = !DILocation(line: 0, scope: !10863)
!10875 = !DILocation(line: 422, column: 48, scope: !10863)
!10876 = !DILocation(line: 423, column: 38, scope: !10863)
!10877 = !DILocation(line: 424, column: 56, scope: !10863)
!10878 = !DILocation(line: 424, column: 51, scope: !10863)
!10879 = !DILocation(line: 424, column: 26, scope: !10863)
!10880 = !DILocation(line: 425, column: 60, scope: !10863)
!10881 = !DILocation(line: 425, column: 55, scope: !10863)
!10882 = !DILocation(line: 425, column: 28, scope: !10863)
!10883 = !DILocation(line: 426, column: 60, scope: !10863)
!10884 = !DILocation(line: 426, column: 55, scope: !10863)
!10885 = !DILocation(line: 426, column: 28, scope: !10863)
!10886 = !DILocation(line: 428, column: 58, scope: !10863)
!10887 = !DILocation(line: 428, column: 53, scope: !10863)
!10888 = !DILocation(line: 428, column: 28, scope: !10863)
!10889 = !DILocation(line: 431, column: 44, scope: !10890)
!10890 = distinct !DILexicalBlock(scope: !10863, file: !1662, line: 431, column: 6)
!10891 = !DILocation(line: 438, column: 22, scope: !10892)
!10892 = distinct !DILexicalBlock(scope: !10863, file: !1662, line: 437, column: 6)
!10893 = !DILocation(line: 437, column: 6, scope: !10863)
!10894 = !DILocation(line: 448, column: 6, scope: !10863)
!10895 = !DILocation(line: 465, column: 47, scope: !10896)
!10896 = distinct !DILexicalBlock(scope: !10863, file: !1662, line: 465, column: 6)
!10897 = !DILocation(line: 475, column: 21, scope: !10898)
!10898 = distinct !DILexicalBlock(scope: !10863, file: !1662, line: 475, column: 6)
!10899 = !DILocation(line: 475, column: 6, scope: !10863)
!10900 = !DILocation(line: 476, column: 8, scope: !10901)
!10901 = distinct !DILexicalBlock(scope: !10902, file: !1662, line: 476, column: 7)
!10902 = distinct !DILexicalBlock(scope: !10898, file: !1662, line: 475, column: 49)
!10903 = !DILocation(line: 477, column: 34, scope: !10901)
!10904 = !DILocation(line: 476, column: 7, scope: !10902)
!10905 = !DILocation(line: 482, column: 27, scope: !10863)
!10906 = !DILocation(line: 482, column: 2, scope: !10863)
!10907 = !DILocation(line: 484, column: 16, scope: !10908)
!10908 = distinct !DILexicalBlock(scope: !10863, file: !1662, line: 484, column: 6)
!10909 = !DILocation(line: 484, column: 13, scope: !10908)
!10910 = !DILocation(line: 484, column: 6, scope: !10863)
!10911 = !DILocation(line: 485, column: 3, scope: !10912)
!10912 = distinct !DILexicalBlock(scope: !10908, file: !1662, line: 484, column: 44)
!10913 = !DILocation(line: 486, column: 2, scope: !10912)
!10914 = !DILocation(line: 488, column: 18, scope: !10915)
!10915 = distinct !DILexicalBlock(scope: !10863, file: !1662, line: 488, column: 6)
!10916 = !DILocation(line: 488, column: 15, scope: !10915)
!10917 = !DILocation(line: 488, column: 6, scope: !10863)
!10918 = !DILocation(line: 489, column: 3, scope: !10919)
!10919 = distinct !DILexicalBlock(scope: !10915, file: !1662, line: 488, column: 48)
!10920 = !DILocation(line: 490, column: 2, scope: !10919)
!10921 = !DILocation(line: 492, column: 18, scope: !10922)
!10922 = distinct !DILexicalBlock(scope: !10863, file: !1662, line: 492, column: 6)
!10923 = !DILocation(line: 492, column: 15, scope: !10922)
!10924 = !DILocation(line: 492, column: 6, scope: !10863)
!10925 = !DILocation(line: 493, column: 3, scope: !10926)
!10926 = distinct !DILexicalBlock(scope: !10922, file: !1662, line: 492, column: 48)
!10927 = !DILocation(line: 494, column: 2, scope: !10926)
!10928 = !DILocation(line: 496, column: 18, scope: !10929)
!10929 = distinct !DILexicalBlock(scope: !10863, file: !1662, line: 496, column: 6)
!10930 = !DILocation(line: 496, column: 15, scope: !10929)
!10931 = !DILocation(line: 496, column: 6, scope: !10863)
!10932 = !DILocation(line: 497, column: 3, scope: !10933)
!10933 = distinct !DILexicalBlock(scope: !10929, file: !1662, line: 496, column: 46)
!10934 = !DILocation(line: 498, column: 2, scope: !10933)
!10935 = !DILocation(line: 500, column: 11, scope: !10936)
!10936 = distinct !DILexicalBlock(scope: !10863, file: !1662, line: 500, column: 6)
!10937 = !DILocation(line: 500, column: 29, scope: !10936)
!10938 = !DILocation(line: 500, column: 20, scope: !10936)
!10939 = !DILocation(line: 500, column: 6, scope: !10863)
!10940 = !DILocation(line: 501, column: 3, scope: !10941)
!10941 = distinct !DILexicalBlock(scope: !10936, file: !1662, line: 500, column: 40)
!10942 = !DILocation(line: 502, column: 26, scope: !10941)
!10943 = !DILocation(line: 502, column: 19, scope: !10941)
!10944 = !DILocation(line: 503, column: 2, scope: !10941)
!10945 = !DILocation(line: 505, column: 26, scope: !10863)
!10946 = !DILocation(line: 505, column: 2, scope: !10863)
!10947 = !DILocation(line: 506, column: 2, scope: !10863)
!10948 = !DILocation(line: 507, column: 1, scope: !10863)
!10949 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1662, file: !1662, line: 509, type: !1605, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1523, retainedNodes: !10950)
!10950 = !{!10951, !10952, !10953}
!10951 = !DILocalVariable(name: "dev", arg: 1, scope: !10949, file: !1662, line: 509, type: !1567)
!10952 = !DILocalVariable(name: "cfg", arg: 2, scope: !10949, file: !1662, line: 510, type: !1607)
!10953 = !DILocalVariable(name: "data", scope: !10949, file: !1662, line: 512, type: !10869)
!10954 = !DILocation(line: 0, scope: !10949)
!10955 = !DILocation(line: 512, column: 38, scope: !10949)
!10956 = !DILocation(line: 514, column: 24, scope: !10949)
!10957 = !DILocation(line: 514, column: 7, scope: !10949)
!10958 = !DILocation(line: 514, column: 16, scope: !10949)
!10959 = !DILocation(line: 515, column: 41, scope: !10949)
!10960 = !{i32 0, i32 1537}
!10961 = !DILocation(line: 515, column: 16, scope: !10949)
!10962 = !DILocation(line: 515, column: 7, scope: !10949)
!10963 = !DILocation(line: 515, column: 14, scope: !10949)
!10964 = !DILocation(line: 517, column: 3, scope: !10949)
!10965 = !{i32 0, i32 12289}
!10966 = !DILocation(line: 516, column: 19, scope: !10949)
!10967 = !DILocation(line: 516, column: 7, scope: !10949)
!10968 = !DILocation(line: 516, column: 17, scope: !10949)
!10969 = !DILocation(line: 519, column: 3, scope: !10949)
!10970 = !DILocation(line: 519, column: 33, scope: !10949)
!10971 = !DILocation(line: 518, column: 19, scope: !10949)
!10972 = !DILocation(line: 518, column: 7, scope: !10949)
!10973 = !DILocation(line: 518, column: 17, scope: !10949)
!10974 = !DILocation(line: 521, column: 3, scope: !10949)
!10975 = !{i32 0, i32 769}
!10976 = !DILocation(line: 520, column: 19, scope: !10949)
!10977 = !DILocation(line: 520, column: 7, scope: !10949)
!10978 = !DILocation(line: 520, column: 17, scope: !10949)
!10979 = !DILocation(line: 522, column: 2, scope: !10949)
!10980 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1662, file: !1662, line: 205, type: !10981, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1523, retainedNodes: !10983)
!10981 = !DISubroutineType(types: !10982)
!10982 = !{!152, !1567}
!10983 = !{!10984, !10985}
!10984 = !DILocalVariable(name: "dev", arg: 1, scope: !10980, file: !1662, line: 205, type: !1567)
!10985 = !DILocalVariable(name: "config", scope: !10980, file: !1662, line: 207, type: !10746)
!10986 = !DILocation(line: 0, scope: !10980)
!10987 = !DILocation(line: 207, column: 48, scope: !10980)
!10988 = !DILocation(line: 209, column: 36, scope: !10980)
!10989 = !DILocation(line: 209, column: 9, scope: !10980)
!10990 = !DILocation(line: 209, column: 2, scope: !10980)
!10991 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1662, file: !1662, line: 270, type: !10992, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1523, retainedNodes: !10994)
!10992 = !DISubroutineType(types: !10993)
!10993 = !{!1533, !152}
!10994 = !{!10995}
!10995 = !DILocalVariable(name: "parity", arg: 1, scope: !10991, file: !1662, line: 270, type: !152)
!10996 = !DILocation(line: 0, scope: !10991)
!10997 = !DILocation(line: 272, column: 2, scope: !10991)
!10998 = !DILocation(line: 281, column: 1, scope: !10991)
!10999 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1662, file: !1662, line: 220, type: !10981, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1523, retainedNodes: !11000)
!11000 = !{!11001, !11002}
!11001 = !DILocalVariable(name: "dev", arg: 1, scope: !10999, file: !1662, line: 220, type: !1567)
!11002 = !DILocalVariable(name: "config", scope: !10999, file: !1662, line: 222, type: !10746)
!11003 = !DILocation(line: 0, scope: !10999)
!11004 = !DILocation(line: 222, column: 48, scope: !10999)
!11005 = !DILocation(line: 224, column: 44, scope: !10999)
!11006 = !DILocation(line: 224, column: 9, scope: !10999)
!11007 = !DILocation(line: 224, column: 2, scope: !10999)
!11008 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1662, file: !1662, line: 304, type: !11009, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1523, retainedNodes: !11011)
!11009 = !DISubroutineType(types: !11010)
!11010 = !{!1547, !152}
!11011 = !{!11012}
!11012 = !DILocalVariable(name: "sb", arg: 1, scope: !11008, file: !1662, line: 304, type: !152)
!11013 = !DILocation(line: 0, scope: !11008)
!11014 = !DILocation(line: 306, column: 2, scope: !11008)
!11015 = !DILocation(line: 0, scope: !11016)
!11016 = distinct !DILexicalBlock(scope: !11008, file: !1662, line: 306, column: 14)
!11017 = !DILocation(line: 323, column: 1, scope: !11008)
!11018 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1662, file: !1662, line: 235, type: !10981, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1523, retainedNodes: !11019)
!11019 = !{!11020, !11021}
!11020 = !DILocalVariable(name: "dev", arg: 1, scope: !11018, file: !1662, line: 235, type: !1567)
!11021 = !DILocalVariable(name: "config", scope: !11018, file: !1662, line: 237, type: !10746)
!11022 = !DILocation(line: 0, scope: !11018)
!11023 = !DILocation(line: 237, column: 48, scope: !11018)
!11024 = !DILocation(line: 239, column: 39, scope: !11018)
!11025 = !DILocation(line: 239, column: 9, scope: !11018)
!11026 = !DILocation(line: 239, column: 2, scope: !11018)
!11027 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1662, file: !1662, line: 355, type: !11028, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1523, retainedNodes: !11030)
!11028 = !DISubroutineType(types: !11029)
!11029 = !{!1540, !152, !152}
!11030 = !{!11031, !11032}
!11031 = !DILocalVariable(name: "db", arg: 1, scope: !11027, file: !1662, line: 355, type: !152)
!11032 = !DILocalVariable(name: "p", arg: 2, scope: !11027, file: !1662, line: 356, type: !152)
!11033 = !DILocation(line: 0, scope: !11027)
!11034 = !DILocation(line: 358, column: 2, scope: !11027)
!11035 = !DILocation(line: 384, column: 1, scope: !11027)
!11036 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1662, file: !1662, line: 250, type: !10981, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1523, retainedNodes: !11037)
!11037 = !{!11038, !11039}
!11038 = !DILocalVariable(name: "dev", arg: 1, scope: !11036, file: !1662, line: 250, type: !1567)
!11039 = !DILocalVariable(name: "config", scope: !11036, file: !1662, line: 252, type: !10746)
!11040 = !DILocation(line: 0, scope: !11036)
!11041 = !DILocation(line: 252, column: 48, scope: !11036)
!11042 = !DILocation(line: 254, column: 40, scope: !11036)
!11043 = !DILocation(line: 254, column: 9, scope: !11036)
!11044 = !DILocation(line: 254, column: 2, scope: !11036)
!11045 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1662, file: !1662, line: 409, type: !11046, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1523, retainedNodes: !11048)
!11046 = !DISubroutineType(types: !11047)
!11047 = !{!1553, !152}
!11048 = !{!11049}
!11049 = !DILocalVariable(name: "fc", arg: 1, scope: !11045, file: !1662, line: 409, type: !152)
!11050 = !DILocation(line: 0, scope: !11045)
!11051 = !DILocation(line: 411, column: 9, scope: !11052)
!11052 = distinct !DILexicalBlock(scope: !11045, file: !1662, line: 411, column: 6)
!11053 = !DILocation(line: 416, column: 1, scope: !11045)
!11054 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !11055, file: !11055, line: 967, type: !11056, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1523, retainedNodes: !11058)
!11055 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11056 = !DISubroutineType(types: !11057)
!11057 = !{!152, !1608}
!11058 = !{!11059}
!11059 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11054, file: !11055, line: 967, type: !1608)
!11060 = !DILocation(line: 0, scope: !11054)
!11061 = !DILocation(line: 969, column: 21, scope: !11054)
!11062 = !DILocation(line: 969, column: 3, scope: !11054)
!11063 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !11055, file: !11055, line: 601, type: !11056, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1523, retainedNodes: !11064)
!11064 = !{!11065}
!11065 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11063, file: !11055, line: 601, type: !1608)
!11066 = !DILocation(line: 0, scope: !11063)
!11067 = !DILocation(line: 603, column: 21, scope: !11063)
!11068 = !DILocation(line: 603, column: 3, scope: !11063)
!11069 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !11055, file: !11055, line: 820, type: !11056, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1523, retainedNodes: !11070)
!11070 = !{!11071}
!11071 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11069, file: !11055, line: 820, type: !1608)
!11072 = !DILocation(line: 0, scope: !11069)
!11073 = !DILocation(line: 822, column: 21, scope: !11069)
!11074 = !DILocation(line: 822, column: 3, scope: !11069)
!11075 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !11055, file: !11055, line: 547, type: !11056, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1523, retainedNodes: !11076)
!11076 = !{!11077}
!11077 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11075, file: !11055, line: 547, type: !1608)
!11078 = !DILocation(line: 0, scope: !11075)
!11079 = !DILocation(line: 549, column: 21, scope: !11075)
!11080 = !DILocation(line: 549, column: 3, scope: !11075)
!11081 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1662, file: !1662, line: 257, type: !11082, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1523, retainedNodes: !11084)
!11082 = !DISubroutineType(types: !11083)
!11083 = !{!152, !1533}
!11084 = !{!11085}
!11085 = !DILocalVariable(name: "parity", arg: 1, scope: !11081, file: !1662, line: 257, type: !1533)
!11086 = !DILocation(line: 0, scope: !11081)
!11087 = !DILocation(line: 259, column: 2, scope: !11081)
!11088 = !DILocation(line: 268, column: 1, scope: !11081)
!11089 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1662, file: !1662, line: 283, type: !11090, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1523, retainedNodes: !11092)
!11090 = !DISubroutineType(types: !11091)
!11091 = !{!152, !1547}
!11092 = !{!11093}
!11093 = !DILocalVariable(name: "sb", arg: 1, scope: !11089, file: !1662, line: 283, type: !1547)
!11094 = !DILocation(line: 0, scope: !11089)
!11095 = !DILocation(line: 285, column: 2, scope: !11089)
!11096 = !DILocation(line: 0, scope: !11097)
!11097 = distinct !DILexicalBlock(scope: !11089, file: !1662, line: 285, column: 14)
!11098 = !DILocation(line: 302, column: 1, scope: !11089)
!11099 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1662, file: !1662, line: 325, type: !11100, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1523, retainedNodes: !11102)
!11100 = !DISubroutineType(types: !11101)
!11101 = !{!152, !1540, !1533}
!11102 = !{!11103, !11104}
!11103 = !DILocalVariable(name: "db", arg: 1, scope: !11099, file: !1662, line: 325, type: !1540)
!11104 = !DILocalVariable(name: "p", arg: 2, scope: !11099, file: !1662, line: 326, type: !1533)
!11105 = !DILocation(line: 0, scope: !11099)
!11106 = !DILocation(line: 328, column: 2, scope: !11099)
!11107 = !DILocation(line: 353, column: 1, scope: !11099)
!11108 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1662, file: !1662, line: 393, type: !11109, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1523, retainedNodes: !11111)
!11109 = !DISubroutineType(types: !11110)
!11110 = !{!152, !1553}
!11111 = !{!11112}
!11112 = !DILocalVariable(name: "fc", arg: 1, scope: !11108, file: !1662, line: 393, type: !1553)
!11113 = !DILocation(line: 0, scope: !11108)
!11114 = !DILocation(line: 395, column: 9, scope: !11115)
!11115 = distinct !DILexicalBlock(scope: !11108, file: !1662, line: 395, column: 6)
!11116 = !DILocation(line: 400, column: 1, scope: !11108)
!11117 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !11055, file: !11055, line: 424, type: !11118, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1523, retainedNodes: !11120)
!11118 = !DISubroutineType(types: !11119)
!11119 = !{null, !1608}
!11120 = !{!11121}
!11121 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11117, file: !11055, line: 424, type: !1608)
!11122 = !DILocation(line: 0, scope: !11117)
!11123 = !DILocation(line: 426, column: 3, scope: !11117)
!11124 = !DILocation(line: 427, column: 1, scope: !11117)
!11125 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1662, file: !1662, line: 197, type: !11126, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1523, retainedNodes: !11128)
!11126 = !DISubroutineType(types: !11127)
!11127 = !{null, !1567, !152}
!11128 = !{!11129, !11130, !11131}
!11129 = !DILocalVariable(name: "dev", arg: 1, scope: !11125, file: !1662, line: 197, type: !1567)
!11130 = !DILocalVariable(name: "parity", arg: 2, scope: !11125, file: !1662, line: 198, type: !152)
!11131 = !DILocalVariable(name: "config", scope: !11125, file: !1662, line: 200, type: !10746)
!11132 = !DILocation(line: 0, scope: !11125)
!11133 = !DILocation(line: 200, column: 48, scope: !11125)
!11134 = !DILocation(line: 202, column: 29, scope: !11125)
!11135 = !DILocation(line: 202, column: 2, scope: !11125)
!11136 = !DILocation(line: 203, column: 1, scope: !11125)
!11137 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1662, file: !1662, line: 212, type: !11126, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1523, retainedNodes: !11138)
!11138 = !{!11139, !11140, !11141}
!11139 = !DILocalVariable(name: "dev", arg: 1, scope: !11137, file: !1662, line: 212, type: !1567)
!11140 = !DILocalVariable(name: "stopbits", arg: 2, scope: !11137, file: !1662, line: 213, type: !152)
!11141 = !DILocalVariable(name: "config", scope: !11137, file: !1662, line: 215, type: !10746)
!11142 = !DILocation(line: 0, scope: !11137)
!11143 = !DILocation(line: 215, column: 48, scope: !11137)
!11144 = !DILocation(line: 217, column: 37, scope: !11137)
!11145 = !DILocation(line: 217, column: 2, scope: !11137)
!11146 = !DILocation(line: 218, column: 1, scope: !11137)
!11147 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1662, file: !1662, line: 227, type: !11126, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1523, retainedNodes: !11148)
!11148 = !{!11149, !11150, !11151}
!11149 = !DILocalVariable(name: "dev", arg: 1, scope: !11147, file: !1662, line: 227, type: !1567)
!11150 = !DILocalVariable(name: "databits", arg: 2, scope: !11147, file: !1662, line: 228, type: !152)
!11151 = !DILocalVariable(name: "config", scope: !11147, file: !1662, line: 230, type: !10746)
!11152 = !DILocation(line: 0, scope: !11147)
!11153 = !DILocation(line: 230, column: 48, scope: !11147)
!11154 = !DILocation(line: 232, column: 32, scope: !11147)
!11155 = !DILocation(line: 232, column: 2, scope: !11147)
!11156 = !DILocation(line: 233, column: 1, scope: !11147)
!11157 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1662, file: !1662, line: 242, type: !11126, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1523, retainedNodes: !11158)
!11158 = !{!11159, !11160, !11161}
!11159 = !DILocalVariable(name: "dev", arg: 1, scope: !11157, file: !1662, line: 242, type: !1567)
!11160 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !11157, file: !1662, line: 243, type: !152)
!11161 = !DILocalVariable(name: "config", scope: !11157, file: !1662, line: 245, type: !10746)
!11162 = !DILocation(line: 0, scope: !11157)
!11163 = !DILocation(line: 245, column: 48, scope: !11157)
!11164 = !DILocation(line: 247, column: 33, scope: !11157)
!11165 = !DILocation(line: 247, column: 2, scope: !11157)
!11166 = !DILocation(line: 248, column: 1, scope: !11157)
!11167 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1662, file: !1662, line: 107, type: !11126, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1523, retainedNodes: !11168)
!11168 = !{!11169, !11170, !11171, !11172, !11173}
!11169 = !DILocalVariable(name: "dev", arg: 1, scope: !11167, file: !1662, line: 107, type: !1567)
!11170 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !11167, file: !1662, line: 107, type: !152)
!11171 = !DILocalVariable(name: "config", scope: !11167, file: !1662, line: 109, type: !10746)
!11172 = !DILocalVariable(name: "data", scope: !11167, file: !1662, line: 110, type: !10869)
!11173 = !DILocalVariable(name: "clock_rate", scope: !11167, file: !1662, line: 112, type: !152)
!11174 = !DILocation(line: 0, scope: !11167)
!11175 = !DILocation(line: 109, column: 48, scope: !11167)
!11176 = !DILocation(line: 110, column: 38, scope: !11167)
!11177 = !DILocation(line: 112, column: 2, scope: !11167)
!11178 = !DILocation(line: 123, column: 36, scope: !11179)
!11179 = distinct !DILexicalBlock(scope: !11180, file: !1662, line: 123, column: 7)
!11180 = distinct !DILexicalBlock(scope: !11181, file: !1662, line: 122, column: 9)
!11181 = distinct !DILexicalBlock(scope: !11167, file: !1662, line: 115, column: 6)
!11182 = !DILocation(line: 124, column: 42, scope: !11179)
!11183 = !DILocation(line: 123, column: 7, scope: !11179)
!11184 = !DILocation(line: 125, column: 22, scope: !11179)
!11185 = !DILocation(line: 123, column: 7, scope: !11180)
!11186 = !DILocation(line: 126, column: 4, scope: !11187)
!11187 = distinct !DILexicalBlock(scope: !11188, file: !1662, line: 126, column: 4)
!11188 = distinct !DILexicalBlock(scope: !11189, file: !1662, line: 126, column: 4)
!11189 = distinct !DILexicalBlock(scope: !11190, file: !1662, line: 126, column: 4)
!11190 = distinct !DILexicalBlock(scope: !11191, file: !1662, line: 126, column: 4)
!11191 = distinct !DILexicalBlock(scope: !11179, file: !1662, line: 125, column: 27)
!11192 = !DILocation(line: 127, column: 4, scope: !11191)
!11193 = !DILocation(line: 176, column: 36, scope: !11167)
!11194 = !DILocation(line: 176, column: 3, scope: !11167)
!11195 = !DILocation(line: 179, column: 32, scope: !11167)
!11196 = !DILocation(line: 180, column: 10, scope: !11167)
!11197 = !DILocation(line: 179, column: 3, scope: !11167)
!11198 = !DILocation(line: 189, column: 3, scope: !11199)
!11199 = distinct !DILexicalBlock(scope: !11200, file: !1662, line: 189, column: 3)
!11200 = distinct !DILexicalBlock(scope: !11167, file: !1662, line: 189, column: 3)
!11201 = !DILocation(line: 189, column: 3, scope: !11200)
!11202 = !DILocation(line: 189, column: 3, scope: !11203)
!11203 = distinct !DILexicalBlock(scope: !11199, file: !1662, line: 189, column: 3)
!11204 = !DILocation(line: 195, column: 1, scope: !11167)
!11205 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !11055, file: !11055, line: 410, type: !11118, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1523, retainedNodes: !11206)
!11206 = !{!11207}
!11207 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11205, file: !11055, line: 410, type: !1608)
!11208 = !DILocation(line: 0, scope: !11205)
!11209 = !DILocation(line: 412, column: 3, scope: !11205)
!11210 = !DILocation(line: 413, column: 1, scope: !11205)
!11211 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !990, file: !990, line: 216, type: !1641, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1523, retainedNodes: !11212)
!11212 = !{!11213, !11214, !11215, !11216}
!11213 = !DILocalVariable(name: "dev", arg: 1, scope: !11211, file: !990, line: 216, type: !1567)
!11214 = !DILocalVariable(name: "sys", arg: 2, scope: !11211, file: !990, line: 217, type: !1084)
!11215 = !DILocalVariable(name: "rate", arg: 3, scope: !11211, file: !990, line: 218, type: !1040)
!11216 = !DILocalVariable(name: "api", scope: !11211, file: !990, line: 220, type: !1619)
!11217 = !DILocation(line: 0, scope: !11211)
!11218 = !DILocation(line: 221, column: 49, scope: !11211)
!11219 = !DILocation(line: 223, column: 11, scope: !11220)
!11220 = distinct !DILexicalBlock(scope: !11211, file: !990, line: 223, column: 6)
!11221 = !DILocation(line: 223, column: 20, scope: !11220)
!11222 = !DILocation(line: 223, column: 6, scope: !11211)
!11223 = !DILocation(line: 227, column: 9, scope: !11211)
!11224 = !DILocation(line: 227, column: 2, scope: !11211)
!11225 = !DILocation(line: 228, column: 1, scope: !11211)
!11226 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !6153, file: !6153, line: 175, type: !6154, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1523, retainedNodes: !11227)
!11227 = !{!11228}
!11228 = !DILocalVariable(name: "level", arg: 1, scope: !11226, file: !6153, line: 175, type: !107)
!11229 = !DILocation(line: 0, scope: !11226)
!11230 = !DILocation(line: 177, column: 2, scope: !11226)
!11231 = !DILocation(line: 189, column: 1, scope: !11226)
!11232 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !11055, file: !11055, line: 615, type: !11233, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1523, retainedNodes: !11235)
!11233 = !DISubroutineType(types: !11234)
!11234 = !{null, !1608, !152}
!11235 = !{!11236, !11237}
!11236 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11232, file: !11055, line: 615, type: !1608)
!11237 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !11232, file: !11055, line: 615, type: !152)
!11238 = !DILocation(line: 0, scope: !11232)
!11239 = !DILocation(line: 617, column: 3, scope: !11232)
!11240 = !DILocation(line: 618, column: 1, scope: !11232)
!11241 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !11055, file: !11055, line: 1020, type: !11242, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1523, retainedNodes: !11244)
!11242 = !DISubroutineType(types: !11243)
!11243 = !{null, !1608, !152, !152, !152}
!11244 = !{!11245, !11246, !11247, !11248}
!11245 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11241, file: !11055, line: 1020, type: !1608)
!11246 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !11241, file: !11055, line: 1020, type: !152)
!11247 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !11241, file: !11055, line: 1020, type: !152)
!11248 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !11241, file: !11055, line: 1021, type: !152)
!11249 = !DILocation(line: 0, scope: !11241)
!11250 = !DILocation(line: 1029, column: 30, scope: !11251)
!11251 = distinct !DILexicalBlock(scope: !11252, file: !11055, line: 1028, column: 3)
!11252 = distinct !DILexicalBlock(scope: !11241, file: !11055, line: 1023, column: 7)
!11253 = !DILocation(line: 1029, column: 19, scope: !11251)
!11254 = !DILocation(line: 1029, column: 13, scope: !11251)
!11255 = !DILocation(line: 1029, column: 17, scope: !11251)
!11256 = !DILocation(line: 1031, column: 1, scope: !11241)
!11257 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !11055, file: !11055, line: 949, type: !11233, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1523, retainedNodes: !11258)
!11258 = !{!11259, !11260}
!11259 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11257, file: !11055, line: 949, type: !1608)
!11260 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !11257, file: !11055, line: 949, type: !152)
!11261 = !DILocation(line: 0, scope: !11257)
!11262 = !DILocation(line: 951, column: 3, scope: !11257)
!11263 = !DILocation(line: 952, column: 1, scope: !11257)
!11264 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !11055, file: !11055, line: 588, type: !11233, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1523, retainedNodes: !11265)
!11265 = !{!11266, !11267}
!11266 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11264, file: !11055, line: 588, type: !1608)
!11267 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11264, file: !11055, line: 588, type: !152)
!11268 = !DILocation(line: 0, scope: !11264)
!11269 = !DILocation(line: 590, column: 3, scope: !11264)
!11270 = !DILocation(line: 591, column: 1, scope: !11264)
!11271 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !11055, file: !11055, line: 805, type: !11233, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1523, retainedNodes: !11272)
!11272 = !{!11273, !11274}
!11273 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11271, file: !11055, line: 805, type: !1608)
!11274 = !DILocalVariable(name: "StopBits", arg: 2, scope: !11271, file: !11055, line: 805, type: !152)
!11275 = !DILocation(line: 0, scope: !11271)
!11276 = !DILocation(line: 807, column: 3, scope: !11271)
!11277 = !DILocation(line: 808, column: 1, scope: !11271)
!11278 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !11055, file: !11055, line: 532, type: !11233, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1523, retainedNodes: !11279)
!11279 = !{!11280, !11281}
!11280 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11278, file: !11055, line: 532, type: !1608)
!11281 = !DILocalVariable(name: "Parity", arg: 2, scope: !11278, file: !11055, line: 532, type: !152)
!11282 = !DILocation(line: 0, scope: !11278)
!11283 = !DILocation(line: 534, column: 3, scope: !11278)
!11284 = !DILocation(line: 535, column: 1, scope: !11278)
!11285 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !11055, file: !11055, line: 1770, type: !11056, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1523, retainedNodes: !11286)
!11286 = !{!11287}
!11287 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11285, file: !11055, line: 1770, type: !1608)
!11288 = !DILocation(line: 0, scope: !11285)
!11289 = !DILocation(line: 1772, column: 11, scope: !11285)
!11290 = !DILocation(line: 1772, column: 46, scope: !11285)
!11291 = !DILocation(line: 1772, column: 3, scope: !11285)
!11292 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !11055, file: !11055, line: 1737, type: !11056, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1523, retainedNodes: !11293)
!11293 = !{!11294}
!11294 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11292, file: !11055, line: 1737, type: !1608)
!11295 = !DILocation(line: 0, scope: !11292)
!11296 = !DILocation(line: 1739, column: 11, scope: !11292)
!11297 = !DILocation(line: 1739, column: 3, scope: !11292)
!11298 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !11055, file: !11055, line: 1748, type: !11056, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1523, retainedNodes: !11299)
!11299 = !{!11300}
!11300 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11298, file: !11055, line: 1748, type: !1608)
!11301 = !DILocation(line: 0, scope: !11298)
!11302 = !DILocation(line: 1750, column: 11, scope: !11298)
!11303 = !DILocation(line: 1750, column: 45, scope: !11298)
!11304 = !DILocation(line: 1750, column: 3, scope: !11298)
!11305 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !11055, file: !11055, line: 1827, type: !11056, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1523, retainedNodes: !11306)
!11306 = !{!11307}
!11307 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11305, file: !11055, line: 1827, type: !1608)
!11308 = !DILocation(line: 0, scope: !11305)
!11309 = !DILocation(line: 1829, column: 11, scope: !11305)
!11310 = !DILocation(line: 1829, column: 46, scope: !11305)
!11311 = !DILocation(line: 1829, column: 3, scope: !11305)
!11312 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !11055, file: !11055, line: 1992, type: !11118, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1523, retainedNodes: !11313)
!11313 = !{!11314}
!11314 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11312, file: !11055, line: 1992, type: !1608)
!11315 = !DILocation(line: 0, scope: !11312)
!11316 = !DILocation(line: 1994, column: 3, scope: !11312)
!11317 = !DILocation(line: 1995, column: 1, scope: !11312)
!11318 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !11055, file: !11055, line: 1934, type: !11118, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1523, retainedNodes: !11319)
!11319 = !{!11320, !11321}
!11320 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11318, file: !11055, line: 1934, type: !1608)
!11321 = !DILocalVariable(name: "tmpreg", scope: !11318, file: !11055, line: 1936, type: !227)
!11322 = !DILocation(line: 0, scope: !11318)
!11323 = !DILocation(line: 1936, column: 3, scope: !11318)
!11324 = !DILocation(line: 1936, column: 17, scope: !11318)
!11325 = !DILocation(line: 1937, column: 20, scope: !11318)
!11326 = !DILocation(line: 1937, column: 10, scope: !11318)
!11327 = !DILocation(line: 1938, column: 10, scope: !11318)
!11328 = !DILocation(line: 1939, column: 20, scope: !11318)
!11329 = !DILocation(line: 1939, column: 10, scope: !11318)
!11330 = !DILocation(line: 1940, column: 10, scope: !11318)
!11331 = !DILocation(line: 1941, column: 1, scope: !11318)
!11332 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !11055, file: !11055, line: 1877, type: !11118, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1523, retainedNodes: !11333)
!11333 = !{!11334, !11335}
!11334 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11332, file: !11055, line: 1877, type: !1608)
!11335 = !DILocalVariable(name: "tmpreg", scope: !11332, file: !11055, line: 1879, type: !227)
!11336 = !DILocation(line: 0, scope: !11332)
!11337 = !DILocation(line: 1879, column: 3, scope: !11332)
!11338 = !DILocation(line: 1879, column: 17, scope: !11332)
!11339 = !DILocation(line: 1880, column: 20, scope: !11332)
!11340 = !DILocation(line: 1880, column: 10, scope: !11332)
!11341 = !DILocation(line: 1881, column: 10, scope: !11332)
!11342 = !DILocation(line: 1882, column: 20, scope: !11332)
!11343 = !DILocation(line: 1882, column: 10, scope: !11332)
!11344 = !DILocation(line: 1883, column: 10, scope: !11332)
!11345 = !DILocation(line: 1884, column: 1, scope: !11332)
!11346 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !11055, file: !11055, line: 1896, type: !11118, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1523, retainedNodes: !11347)
!11347 = !{!11348, !11349}
!11348 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11346, file: !11055, line: 1896, type: !1608)
!11349 = !DILocalVariable(name: "tmpreg", scope: !11346, file: !11055, line: 1898, type: !227)
!11350 = !DILocation(line: 0, scope: !11346)
!11351 = !DILocation(line: 1898, column: 3, scope: !11346)
!11352 = !DILocation(line: 1898, column: 17, scope: !11346)
!11353 = !DILocation(line: 1899, column: 20, scope: !11346)
!11354 = !DILocation(line: 1899, column: 10, scope: !11346)
!11355 = !DILocation(line: 1900, column: 10, scope: !11346)
!11356 = !DILocation(line: 1901, column: 20, scope: !11346)
!11357 = !DILocation(line: 1901, column: 10, scope: !11346)
!11358 = !DILocation(line: 1902, column: 10, scope: !11346)
!11359 = !DILocation(line: 1903, column: 1, scope: !11346)
!11360 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !11055, file: !11055, line: 1915, type: !11118, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1523, retainedNodes: !11361)
!11361 = !{!11362, !11363}
!11362 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11360, file: !11055, line: 1915, type: !1608)
!11363 = !DILocalVariable(name: "tmpreg", scope: !11360, file: !11055, line: 1917, type: !227)
!11364 = !DILocation(line: 0, scope: !11360)
!11365 = !DILocation(line: 1917, column: 3, scope: !11360)
!11366 = !DILocation(line: 1917, column: 17, scope: !11360)
!11367 = !DILocation(line: 1918, column: 20, scope: !11360)
!11368 = !DILocation(line: 1918, column: 10, scope: !11360)
!11369 = !DILocation(line: 1919, column: 10, scope: !11360)
!11370 = !DILocation(line: 1920, column: 20, scope: !11360)
!11371 = !DILocation(line: 1920, column: 10, scope: !11360)
!11372 = !DILocation(line: 1921, column: 10, scope: !11360)
!11373 = !DILocation(line: 1922, column: 1, scope: !11360)
!11374 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !11055, file: !11055, line: 1814, type: !11056, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1523, retainedNodes: !11375)
!11375 = !{!11376}
!11376 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11374, file: !11055, line: 1814, type: !1608)
!11377 = !DILocation(line: 0, scope: !11374)
!11378 = !DILocation(line: 1816, column: 11, scope: !11374)
!11379 = !DILocation(line: 1816, column: 46, scope: !11374)
!11380 = !DILocation(line: 1816, column: 3, scope: !11374)
!11381 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !11055, file: !11055, line: 2426, type: !11382, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1523, retainedNodes: !11384)
!11382 = !DISubroutineType(types: !11383)
!11383 = !{null, !1608, !195}
!11384 = !{!11385, !11386}
!11385 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11381, file: !11055, line: 2426, type: !1608)
!11386 = !DILocalVariable(name: "Value", arg: 2, scope: !11381, file: !11055, line: 2426, type: !195)
!11387 = !DILocation(line: 0, scope: !11381)
!11388 = !DILocation(line: 2428, column: 16, scope: !11381)
!11389 = !DILocation(line: 2428, column: 11, scope: !11381)
!11390 = !DILocation(line: 2428, column: 14, scope: !11381)
!11391 = !DILocation(line: 2429, column: 1, scope: !11381)
!11392 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !11055, file: !11055, line: 1792, type: !11056, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1523, retainedNodes: !11393)
!11393 = !{!11394}
!11394 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11392, file: !11055, line: 1792, type: !1608)
!11395 = !DILocation(line: 0, scope: !11392)
!11396 = !DILocation(line: 1794, column: 11, scope: !11392)
!11397 = !DILocation(line: 1794, column: 47, scope: !11392)
!11398 = !DILocation(line: 1794, column: 3, scope: !11392)
!11399 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !11055, file: !11055, line: 2403, type: !11400, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1523, retainedNodes: !11402)
!11400 = !DISubroutineType(types: !11401)
!11401 = !{!195, !1608}
!11402 = !{!11403}
!11403 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11399, file: !11055, line: 2403, type: !1608)
!11404 = !DILocation(line: 0, scope: !11399)
!11405 = !DILocation(line: 2405, column: 20, scope: !11399)
!11406 = !DILocation(line: 2405, column: 10, scope: !11399)
!11407 = !DILocation(line: 2405, column: 3, scope: !11399)
!11408 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1662, file: !1662, line: 1583, type: !1588, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1523, retainedNodes: !11409)
!11409 = !{!11410, !11411, !11412, !11413, !11414, !11415}
!11410 = !DILocalVariable(name: "dev", arg: 1, scope: !11408, file: !1662, line: 1583, type: !1567)
!11411 = !DILocalVariable(name: "config", scope: !11408, file: !1662, line: 1585, type: !10746)
!11412 = !DILocalVariable(name: "data", scope: !11408, file: !1662, line: 1586, type: !10869)
!11413 = !DILocalVariable(name: "ll_parity", scope: !11408, file: !1662, line: 1587, type: !152)
!11414 = !DILocalVariable(name: "ll_datawidth", scope: !11408, file: !1662, line: 1588, type: !152)
!11415 = !DILocalVariable(name: "err", scope: !11408, file: !1662, line: 1589, type: !107)
!11416 = !DILocation(line: 0, scope: !11408)
!11417 = !DILocation(line: 1585, column: 48, scope: !11408)
!11418 = !DILocation(line: 1586, column: 38, scope: !11408)
!11419 = !DILocation(line: 1591, column: 2, scope: !11408)
!11420 = !DILocation(line: 1593, column: 29, scope: !11421)
!11421 = distinct !DILexicalBlock(scope: !11408, file: !1662, line: 1593, column: 6)
!11422 = !DILocation(line: 1593, column: 7, scope: !11421)
!11423 = !DILocation(line: 1593, column: 6, scope: !11408)
!11424 = !DILocation(line: 1594, column: 3, scope: !11425)
!11425 = distinct !DILexicalBlock(scope: !11426, file: !1662, line: 1594, column: 3)
!11426 = distinct !DILexicalBlock(scope: !11427, file: !1662, line: 1594, column: 3)
!11427 = distinct !DILexicalBlock(scope: !11428, file: !1662, line: 1594, column: 3)
!11428 = distinct !DILexicalBlock(scope: !11429, file: !1662, line: 1594, column: 3)
!11429 = distinct !DILexicalBlock(scope: !11421, file: !1662, line: 1593, column: 37)
!11430 = !DILocation(line: 1595, column: 3, scope: !11429)
!11431 = !DILocation(line: 1599, column: 31, scope: !11408)
!11432 = !DILocation(line: 1599, column: 71, scope: !11408)
!11433 = !DILocation(line: 1599, column: 8, scope: !11408)
!11434 = !DILocation(line: 1600, column: 10, scope: !11435)
!11435 = distinct !DILexicalBlock(scope: !11408, file: !1662, line: 1600, column: 6)
!11436 = !DILocation(line: 1600, column: 6, scope: !11408)
!11437 = !DILocation(line: 1601, column: 3, scope: !11438)
!11438 = distinct !DILexicalBlock(scope: !11439, file: !1662, line: 1601, column: 3)
!11439 = distinct !DILexicalBlock(scope: !11440, file: !1662, line: 1601, column: 3)
!11440 = distinct !DILexicalBlock(scope: !11441, file: !1662, line: 1601, column: 3)
!11441 = distinct !DILexicalBlock(scope: !11442, file: !1662, line: 1601, column: 3)
!11442 = distinct !DILexicalBlock(scope: !11435, file: !1662, line: 1600, column: 16)
!11443 = !DILocation(line: 1602, column: 3, scope: !11442)
!11444 = !DILocation(line: 1616, column: 36, scope: !11408)
!11445 = !DILocation(line: 1616, column: 8, scope: !11408)
!11446 = !DILocation(line: 1617, column: 10, scope: !11447)
!11447 = distinct !DILexicalBlock(scope: !11408, file: !1662, line: 1617, column: 6)
!11448 = !DILocation(line: 1617, column: 6, scope: !11408)
!11449 = !DILocation(line: 1621, column: 27, scope: !11408)
!11450 = !DILocation(line: 1621, column: 2, scope: !11408)
!11451 = !DILocation(line: 1624, column: 40, scope: !11408)
!11452 = !DILocation(line: 1624, column: 2, scope: !11408)
!11453 = !DILocation(line: 1630, column: 14, scope: !11454)
!11454 = distinct !DILexicalBlock(scope: !11408, file: !1662, line: 1630, column: 6)
!11455 = !DILocation(line: 1630, column: 6, scope: !11408)
!11456 = !DILocation(line: 1640, column: 4, scope: !11457)
!11457 = distinct !DILexicalBlock(scope: !11458, file: !1662, line: 1640, column: 4)
!11458 = distinct !DILexicalBlock(scope: !11459, file: !1662, line: 1640, column: 4)
!11459 = distinct !DILexicalBlock(scope: !11460, file: !1662, line: 1640, column: 4)
!11460 = distinct !DILexicalBlock(scope: !11461, file: !1662, line: 1640, column: 4)
!11461 = distinct !DILexicalBlock(scope: !11462, file: !1662, line: 1639, column: 28)
!11462 = distinct !DILexicalBlock(scope: !11463, file: !1662, line: 1639, column: 7)
!11463 = distinct !DILexicalBlock(scope: !11464, file: !1662, line: 1638, column: 9)
!11464 = distinct !DILexicalBlock(scope: !11454, file: !1662, line: 1634, column: 13)
!11465 = !DILocation(line: 0, scope: !11454)
!11466 = !DILocation(line: 1649, column: 35, scope: !11408)
!11467 = !DILocation(line: 1649, column: 2, scope: !11408)
!11468 = !DILocation(line: 1654, column: 14, scope: !11469)
!11469 = distinct !DILexicalBlock(scope: !11408, file: !1662, line: 1654, column: 6)
!11470 = !DILocation(line: 1654, column: 6, scope: !11408)
!11471 = !DILocation(line: 1655, column: 3, scope: !11472)
!11472 = distinct !DILexicalBlock(scope: !11469, file: !1662, line: 1654, column: 31)
!11473 = !DILocation(line: 1656, column: 2, scope: !11472)
!11474 = !DILocation(line: 1659, column: 37, scope: !11408)
!11475 = !DILocation(line: 1659, column: 2, scope: !11408)
!11476 = !DILocation(line: 1662, column: 14, scope: !11477)
!11477 = distinct !DILexicalBlock(scope: !11408, file: !1662, line: 1662, column: 6)
!11478 = !DILocation(line: 1662, column: 6, scope: !11408)
!11479 = !DILocation(line: 1663, column: 37, scope: !11480)
!11480 = distinct !DILexicalBlock(scope: !11477, file: !1662, line: 1662, column: 27)
!11481 = !DILocation(line: 1663, column: 3, scope: !11480)
!11482 = !DILocation(line: 1664, column: 2, scope: !11480)
!11483 = !DILocation(line: 1684, column: 26, scope: !11408)
!11484 = !DILocation(line: 1684, column: 2, scope: !11408)
!11485 = !DILocation(line: 1722, column: 2, scope: !11408)
!11486 = !DILocation(line: 1724, column: 1, scope: !11408)
!11487 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1662, file: !1662, line: 651, type: !11488, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1523, retainedNodes: !11490)
!11488 = !DISubroutineType(types: !11489)
!11489 = !{null, !1567}
!11490 = !{!11491, !11492, !11493}
!11491 = !DILocalVariable(name: "dev", arg: 1, scope: !11487, file: !1662, line: 651, type: !1567)
!11492 = !DILocalVariable(name: "data", scope: !11487, file: !1662, line: 653, type: !10869)
!11493 = !DILocalVariable(name: "clk", scope: !11487, file: !1662, line: 654, type: !11494)
!11494 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1567)
!11495 = !DILocation(line: 0, scope: !11487)
!11496 = !DILocation(line: 653, column: 38, scope: !11487)
!11497 = !DILocation(line: 656, column: 8, scope: !11487)
!11498 = !DILocation(line: 656, column: 14, scope: !11487)
!11499 = !DILocation(line: 657, column: 1, scope: !11487)
!11500 = distinct !DISubprogram(name: "device_is_ready", scope: !9865, file: !9865, line: 47, type: !11501, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1523, retainedNodes: !11503)
!11501 = !DISubroutineType(types: !11502)
!11502 = !{!145, !1567}
!11503 = !{!11504}
!11504 = !DILocalVariable(name: "dev", arg: 1, scope: !11500, file: !9865, line: 47, type: !1567)
!11505 = !DILocation(line: 0, scope: !11500)
!11506 = !DILocation(line: 55, column: 2, scope: !11507)
!11507 = distinct !DILexicalBlock(scope: !11500, file: !9865, line: 55, column: 2)
!11508 = !{i64 2155767769}
!11509 = !DILocation(line: 56, column: 9, scope: !11500)
!11510 = !DILocation(line: 56, column: 2, scope: !11500)
!11511 = distinct !DISubprogram(name: "clock_control_on", scope: !990, file: !990, line: 123, type: !1626, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1523, retainedNodes: !11512)
!11512 = !{!11513, !11514, !11515}
!11513 = !DILocalVariable(name: "dev", arg: 1, scope: !11511, file: !990, line: 123, type: !1567)
!11514 = !DILocalVariable(name: "sys", arg: 2, scope: !11511, file: !990, line: 124, type: !1084)
!11515 = !DILocalVariable(name: "api", scope: !11511, file: !990, line: 126, type: !1619)
!11516 = !DILocation(line: 0, scope: !11511)
!11517 = !DILocation(line: 127, column: 49, scope: !11511)
!11518 = !DILocation(line: 129, column: 14, scope: !11511)
!11519 = !DILocation(line: 129, column: 9, scope: !11511)
!11520 = !DILocation(line: 129, column: 2, scope: !11511)
!11521 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1734, file: !1734, line: 342, type: !11522, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1523, retainedNodes: !11524)
!11522 = !DISubroutineType(types: !11523)
!11523 = !{!107, !1731, !195}
!11524 = !{!11525, !11526, !11527, !11528}
!11525 = !DILocalVariable(name: "config", arg: 1, scope: !11521, file: !1734, line: 342, type: !1731)
!11526 = !DILocalVariable(name: "id", arg: 2, scope: !11521, file: !1734, line: 343, type: !195)
!11527 = !DILocalVariable(name: "ret", scope: !11521, file: !1734, line: 345, type: !107)
!11528 = !DILocalVariable(name: "state", scope: !11521, file: !1734, line: 346, type: !1737)
!11529 = !DILocation(line: 0, scope: !11521)
!11530 = !DILocation(line: 346, column: 2, scope: !11521)
!11531 = !DILocation(line: 348, column: 8, scope: !11521)
!11532 = !DILocation(line: 349, column: 10, scope: !11533)
!11533 = distinct !DILexicalBlock(scope: !11521, file: !1734, line: 349, column: 6)
!11534 = !DILocation(line: 349, column: 6, scope: !11521)
!11535 = !DILocation(line: 353, column: 44, scope: !11521)
!11536 = !DILocation(line: 353, column: 9, scope: !11521)
!11537 = !DILocation(line: 353, column: 2, scope: !11521)
!11538 = !DILocation(line: 354, column: 1, scope: !11521)
!11539 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !11055, file: !11055, line: 497, type: !11233, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1523, retainedNodes: !11540)
!11540 = !{!11541, !11542, !11543}
!11541 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11539, file: !11055, line: 497, type: !1608)
!11542 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !11539, file: !11055, line: 497, type: !152)
!11543 = !DILocalVariable(name: "val", scope: !11544, file: !11055, line: 499, type: !152)
!11544 = distinct !DILexicalBlock(scope: !11539, file: !11055, line: 499, column: 3)
!11545 = !DILocation(line: 0, scope: !11539)
!11546 = !DILocation(line: 499, column: 3, scope: !11544)
!11547 = !DILocalVariable(name: "addr", arg: 1, scope: !11548, file: !6394, line: 476, type: !1658)
!11548 = distinct !DISubprogram(name: "__LDREXW", scope: !6394, file: !6394, line: 476, type: !11549, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1523, retainedNodes: !11551)
!11549 = !DISubroutineType(types: !11550)
!11550 = !{!152, !1658}
!11551 = !{!11547, !11552}
!11552 = !DILocalVariable(name: "result", scope: !11548, file: !6394, line: 478, type: !152)
!11553 = !DILocation(line: 0, scope: !11548, inlinedAt: !11554)
!11554 = distinct !DILocation(line: 499, column: 3, scope: !11555)
!11555 = distinct !DILexicalBlock(scope: !11544, file: !11055, line: 499, column: 3)
!11556 = !DILocation(line: 480, column: 4, scope: !11548, inlinedAt: !11554)
!11557 = !{i64 4147420}
!11558 = !DILocation(line: 499, column: 3, scope: !11555)
!11559 = !DILocation(line: 0, scope: !11544)
!11560 = !DILocalVariable(name: "value", arg: 1, scope: !11561, file: !6394, line: 527, type: !152)
!11561 = distinct !DISubprogram(name: "__STREXW", scope: !6394, file: !6394, line: 527, type: !11562, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1523, retainedNodes: !11564)
!11562 = !DISubroutineType(types: !11563)
!11563 = !{!152, !152, !1658}
!11564 = !{!11560, !11565, !11566}
!11565 = !DILocalVariable(name: "addr", arg: 2, scope: !11561, file: !6394, line: 527, type: !1658)
!11566 = !DILocalVariable(name: "result", scope: !11561, file: !6394, line: 529, type: !152)
!11567 = !DILocation(line: 0, scope: !11561, inlinedAt: !11568)
!11568 = distinct !DILocation(line: 499, column: 3, scope: !11544)
!11569 = !DILocation(line: 531, column: 4, scope: !11561, inlinedAt: !11568)
!11570 = !{i64 4148856}
!11571 = distinct !{!11571, !11546, !11546}
!11572 = !DILocation(line: 500, column: 1, scope: !11539)
!11573 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !11055, file: !11055, line: 850, type: !11242, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1523, retainedNodes: !11574)
!11574 = !{!11575, !11576, !11577, !11578}
!11575 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11573, file: !11055, line: 850, type: !1608)
!11576 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11573, file: !11055, line: 850, type: !152)
!11577 = !DILocalVariable(name: "Parity", arg: 3, scope: !11573, file: !11055, line: 850, type: !152)
!11578 = !DILocalVariable(name: "StopBits", arg: 4, scope: !11573, file: !11055, line: 851, type: !152)
!11579 = !DILocation(line: 0, scope: !11573)
!11580 = !DILocation(line: 853, column: 3, scope: !11573)
!11581 = !DILocation(line: 854, column: 3, scope: !11573)
!11582 = !DILocation(line: 855, column: 1, scope: !11573)
!11583 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !11055, file: !11055, line: 1337, type: !11118, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1523, retainedNodes: !11584)
!11584 = !{!11585}
!11585 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11583, file: !11055, line: 1337, type: !1608)
!11586 = !DILocation(line: 0, scope: !11583)
!11587 = !DILocation(line: 1339, column: 3, scope: !11583)
!11588 = !DILocation(line: 1340, column: 1, scope: !11583)
!11589 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1734, file: !1734, line: 316, type: !11590, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1523, retainedNodes: !11592)
!11590 = !DISubroutineType(types: !11591)
!11591 = !{!107, !1731, !1737}
!11592 = !{!11593, !11594, !11595}
!11593 = !DILocalVariable(name: "config", arg: 1, scope: !11589, file: !1734, line: 317, type: !1731)
!11594 = !DILocalVariable(name: "state", arg: 2, scope: !11589, file: !1734, line: 318, type: !1737)
!11595 = !DILocalVariable(name: "reg", scope: !11589, file: !1734, line: 320, type: !22)
!11596 = !DILocation(line: 0, scope: !11589)
!11597 = !DILocation(line: 329, column: 39, scope: !11589)
!11598 = !DILocation(line: 329, column: 52, scope: !11589)
!11599 = !DILocation(line: 329, column: 9, scope: !11589)
!11600 = !DILocation(line: 329, column: 2, scope: !11589)
!11601 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !247, file: !247, line: 730, type: !11501, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1523, retainedNodes: !11602)
!11602 = !{!11603}
!11603 = !DILocalVariable(name: "dev", arg: 1, scope: !11601, file: !247, line: 730, type: !1567)
!11604 = !DILocation(line: 0, scope: !11601)
!11605 = !DILocation(line: 732, column: 9, scope: !11601)
!11606 = !DILocation(line: 732, column: 2, scope: !11601)
!11607 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1905, file: !1905, line: 270, type: !1911, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1827, retainedNodes: !11608)
!11608 = !{!11609}
!11609 = !DILocalVariable(name: "dev", arg: 1, scope: !11607, file: !1905, line: 270, type: !1913)
!11610 = !DILocation(line: 0, scope: !11607)
!11611 = !DILocation(line: 274, column: 2, scope: !11607)
!11612 = !DILocation(line: 275, column: 12, scope: !11607)
!11613 = !DILocation(line: 276, column: 15, scope: !11607)
!11614 = !DILocation(line: 277, column: 16, scope: !11607)
!11615 = !DILocation(line: 278, column: 15, scope: !11607)
!11616 = !DILocation(line: 279, column: 16, scope: !11607)
!11617 = !DILocation(line: 282, column: 2, scope: !11607)
!11618 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !463, file: !463, line: 1814, type: !6434, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1827, retainedNodes: !11619)
!11619 = !{!11620, !11621}
!11620 = !DILocalVariable(name: "IRQn", arg: 1, scope: !11618, file: !463, line: 1814, type: !932)
!11621 = !DILocalVariable(name: "priority", arg: 2, scope: !11618, file: !463, line: 1814, type: !152)
!11622 = !DILocation(line: 0, scope: !11618)
!11623 = !DILocation(line: 1822, column: 46, scope: !11624)
!11624 = distinct !DILexicalBlock(scope: !11625, file: !463, line: 1821, column: 3)
!11625 = distinct !DILexicalBlock(scope: !11618, file: !463, line: 1816, column: 7)
!11626 = !DILocation(line: 1824, column: 1, scope: !11618)
!11627 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1905, file: !1905, line: 118, type: !131, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1827, retainedNodes: !11628)
!11628 = !{!11629, !11630}
!11629 = !DILocalVariable(name: "arg", arg: 1, scope: !11627, file: !1905, line: 118, type: !106)
!11630 = !DILocalVariable(name: "dticks", scope: !11627, file: !1905, line: 121, type: !152)
!11631 = !DILocation(line: 0, scope: !11627)
!11632 = !DILocation(line: 124, column: 2, scope: !11627)
!11633 = !DILocation(line: 129, column: 17, scope: !11627)
!11634 = !DILocation(line: 129, column: 14, scope: !11627)
!11635 = !DILocation(line: 130, column: 15, scope: !11627)
!11636 = !DILocation(line: 145, column: 27, scope: !11637)
!11637 = distinct !DILexicalBlock(scope: !11638, file: !1905, line: 132, column: 16)
!11638 = distinct !DILexicalBlock(scope: !11627, file: !1905, line: 132, column: 6)
!11639 = !DILocation(line: 145, column: 25, scope: !11637)
!11640 = !DILocation(line: 145, column: 45, scope: !11637)
!11641 = !DILocation(line: 146, column: 30, scope: !11637)
!11642 = !DILocation(line: 146, column: 20, scope: !11637)
!11643 = !DILocation(line: 147, column: 3, scope: !11637)
!11644 = !DILocation(line: 151, column: 2, scope: !11627)
!11645 = !DILocation(line: 152, column: 1, scope: !11627)
!11646 = distinct !DISubprogram(name: "elapsed", scope: !1905, file: !1905, line: 85, type: !6481, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1827, retainedNodes: !11647)
!11647 = !{!11648, !11649, !11650}
!11648 = !DILocalVariable(name: "val1", scope: !11646, file: !1905, line: 87, type: !152)
!11649 = !DILocalVariable(name: "ctrl", scope: !11646, file: !1905, line: 88, type: !152)
!11650 = !DILocalVariable(name: "val2", scope: !11646, file: !1905, line: 89, type: !152)
!11651 = !DILocation(line: 87, column: 27, scope: !11646)
!11652 = !DILocation(line: 0, scope: !11646)
!11653 = !DILocation(line: 88, column: 27, scope: !11646)
!11654 = !DILocation(line: 89, column: 27, scope: !11646)
!11655 = !DILocation(line: 105, column: 12, scope: !11656)
!11656 = distinct !DILexicalBlock(scope: !11646, file: !1905, line: 105, column: 6)
!11657 = !DILocation(line: 106, column: 6, scope: !11656)
!11658 = !DILocation(line: 107, column: 16, scope: !11659)
!11659 = distinct !DILexicalBlock(scope: !11656, file: !1905, line: 106, column: 24)
!11660 = !DILocation(line: 111, column: 18, scope: !11659)
!11661 = !DILocation(line: 112, column: 2, scope: !11659)
!11662 = !DILocation(line: 114, column: 20, scope: !11646)
!11663 = !DILocation(line: 114, column: 30, scope: !11646)
!11664 = !DILocation(line: 114, column: 28, scope: !11646)
!11665 = !DILocation(line: 114, column: 2, scope: !11646)
!11666 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1905, file: !1905, line: 154, type: !11667, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1827, retainedNodes: !11669)
!11667 = !DISubroutineType(types: !11668)
!11668 = !{null, !906, !145}
!11669 = !{!11670, !11671, !11672, !11673, !11674, !11675, !11676, !11681, !11682}
!11670 = !DILocalVariable(name: "ticks", arg: 1, scope: !11666, file: !1905, line: 154, type: !906)
!11671 = !DILocalVariable(name: "idle", arg: 2, scope: !11666, file: !1905, line: 154, type: !145)
!11672 = !DILocalVariable(name: "delay", scope: !11666, file: !1905, line: 169, type: !152)
!11673 = !DILocalVariable(name: "val1", scope: !11666, file: !1905, line: 170, type: !152)
!11674 = !DILocalVariable(name: "val2", scope: !11666, file: !1905, line: 170, type: !152)
!11675 = !DILocalVariable(name: "last_load_", scope: !11666, file: !1905, line: 171, type: !152)
!11676 = !DILocalVariable(name: "key", scope: !11666, file: !1905, line: 176, type: !11677)
!11677 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !420, line: 106, baseType: !11678)
!11678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !420, line: 32, size: 32, elements: !11679)
!11679 = !{!11680}
!11680 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !11678, file: !420, line: 33, baseType: !107, size: 32)
!11681 = !DILocalVariable(name: "pending", scope: !11666, file: !1905, line: 178, type: !152)
!11682 = !DILocalVariable(name: "unannounced", scope: !11666, file: !1905, line: 185, type: !152)
!11683 = !DILocation(line: 0, scope: !11666)
!11684 = !DILocation(line: 162, column: 49, scope: !11685)
!11685 = distinct !DILexicalBlock(scope: !11666, file: !1905, line: 162, column: 6)
!11686 = !DILocation(line: 163, column: 17, scope: !11687)
!11687 = distinct !DILexicalBlock(scope: !11685, file: !1905, line: 162, column: 78)
!11688 = !DILocation(line: 164, column: 13, scope: !11687)
!11689 = !DILocation(line: 165, column: 3, scope: !11687)
!11690 = !DILocation(line: 171, column: 24, scope: !11666)
!11691 = !DILocation(line: 173, column: 10, scope: !11666)
!11692 = !DILocation(line: 174, column: 10, scope: !11666)
!11693 = !DILocalVariable(name: "l", arg: 1, scope: !11694, file: !420, line: 136, type: !11697)
!11694 = distinct !DISubprogram(name: "k_spin_lock", scope: !420, file: !420, line: 136, type: !11695, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1827, retainedNodes: !11698)
!11695 = !DISubroutineType(types: !11696)
!11696 = !{!11677, !11697}
!11697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1931, size: 32)
!11698 = !{!11693, !11699}
!11699 = !DILocalVariable(name: "k", scope: !11694, file: !420, line: 139, type: !11677)
!11700 = !DILocation(line: 0, scope: !11694, inlinedAt: !11701)
!11701 = distinct !DILocation(line: 176, column: 25, scope: !11666)
!11702 = !DILocation(line: 55, column: 2, scope: !11703, inlinedAt: !11707)
!11703 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6075, file: !6075, line: 42, type: !6076, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1827, retainedNodes: !11704)
!11704 = !{!11705, !11706}
!11705 = !DILocalVariable(name: "key", scope: !11703, file: !6075, line: 44, type: !32)
!11706 = !DILocalVariable(name: "tmp", scope: !11703, file: !6075, line: 53, type: !32)
!11707 = distinct !DILocation(line: 145, column: 10, scope: !11694, inlinedAt: !11701)
!11708 = !{i64 2604974}
!11709 = !DILocation(line: 0, scope: !11703, inlinedAt: !11707)
!11710 = !DILocation(line: 148, column: 2, scope: !11711, inlinedAt: !11701)
!11711 = distinct !DILexicalBlock(scope: !11712, file: !420, line: 148, column: 2)
!11712 = distinct !DILexicalBlock(scope: !11694, file: !420, line: 148, column: 2)
!11713 = !DILocation(line: 148, column: 2, scope: !11712, inlinedAt: !11701)
!11714 = !DILocation(line: 148, column: 2, scope: !11715, inlinedAt: !11701)
!11715 = distinct !DILexicalBlock(scope: !11711, file: !420, line: 148, column: 2)
!11716 = !DILocation(line: 160, column: 2, scope: !11694, inlinedAt: !11701)
!11717 = !DILocation(line: 178, column: 21, scope: !11666)
!11718 = !DILocation(line: 180, column: 18, scope: !11666)
!11719 = !DILocation(line: 182, column: 14, scope: !11666)
!11720 = !DILocation(line: 183, column: 15, scope: !11666)
!11721 = !DILocation(line: 185, column: 39, scope: !11666)
!11722 = !DILocation(line: 185, column: 37, scope: !11666)
!11723 = !DILocation(line: 187, column: 27, scope: !11724)
!11724 = distinct !DILexicalBlock(scope: !11666, file: !1905, line: 187, column: 6)
!11725 = !DILocation(line: 187, column: 6, scope: !11666)
!11726 = !DILocation(line: 202, column: 27, scope: !11727)
!11727 = distinct !DILexicalBlock(scope: !11724, file: !1905, line: 195, column: 9)
!11728 = !DILocation(line: 202, column: 48, scope: !11727)
!11729 = !DILocation(line: 203, column: 9, scope: !11727)
!11730 = !DILocation(line: 204, column: 11, scope: !11727)
!11731 = !DILocation(line: 205, column: 13, scope: !11732)
!11732 = distinct !DILexicalBlock(scope: !11727, file: !1905, line: 205, column: 7)
!11733 = !DILocation(line: 205, column: 7, scope: !11727)
!11734 = !DILocation(line: 0, scope: !11724)
!11735 = !DILocation(line: 212, column: 18, scope: !11666)
!11736 = !DILocation(line: 214, column: 28, scope: !11666)
!11737 = !DILocation(line: 214, column: 16, scope: !11666)
!11738 = !DILocation(line: 215, column: 15, scope: !11666)
!11739 = !DILocation(line: 227, column: 11, scope: !11740)
!11740 = distinct !DILexicalBlock(scope: !11666, file: !1905, line: 227, column: 6)
!11741 = !DILocation(line: 227, column: 6, scope: !11666)
!11742 = !DILocation(line: 228, column: 15, scope: !11743)
!11743 = distinct !DILexicalBlock(scope: !11740, file: !1905, line: 227, column: 19)
!11744 = !DILocation(line: 228, column: 38, scope: !11743)
!11745 = !DILocation(line: 228, column: 24, scope: !11743)
!11746 = !DILocation(line: 229, column: 2, scope: !11743)
!11747 = !DILocation(line: 230, column: 24, scope: !11748)
!11748 = distinct !DILexicalBlock(scope: !11740, file: !1905, line: 229, column: 9)
!11749 = !DILocation(line: 230, column: 15, scope: !11748)
!11750 = !DILocation(line: 0, scope: !11740)
!11751 = !DILocalVariable(name: "key", arg: 2, scope: !11752, file: !420, line: 190, type: !11677)
!11752 = distinct !DISubprogram(name: "k_spin_unlock", scope: !420, file: !420, line: 189, type: !11753, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1827, retainedNodes: !11755)
!11753 = !DISubroutineType(types: !11754)
!11754 = !{null, !11697, !11677}
!11755 = !{!11756, !11751}
!11756 = !DILocalVariable(name: "l", arg: 1, scope: !11752, file: !420, line: 189, type: !11697)
!11757 = !DILocation(line: 0, scope: !11752, inlinedAt: !11758)
!11758 = distinct !DILocation(line: 232, column: 2, scope: !11666)
!11759 = !DILocation(line: 194, column: 2, scope: !11760, inlinedAt: !11758)
!11760 = distinct !DILexicalBlock(scope: !11761, file: !420, line: 194, column: 2)
!11761 = distinct !DILexicalBlock(scope: !11752, file: !420, line: 194, column: 2)
!11762 = !DILocation(line: 194, column: 2, scope: !11761, inlinedAt: !11758)
!11763 = !DILocation(line: 194, column: 2, scope: !11764, inlinedAt: !11758)
!11764 = distinct !DILexicalBlock(scope: !11760, file: !420, line: 194, column: 2)
!11765 = !DILocalVariable(name: "key", arg: 1, scope: !11766, file: !6075, line: 84, type: !32)
!11766 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6075, file: !6075, line: 84, type: !6086, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1827, retainedNodes: !11767)
!11767 = !{!11765}
!11768 = !DILocation(line: 0, scope: !11766, inlinedAt: !11769)
!11769 = distinct !DILocation(line: 215, column: 2, scope: !11752, inlinedAt: !11758)
!11770 = !DILocation(line: 95, column: 2, scope: !11766, inlinedAt: !11769)
!11771 = !{i64 2605791}
!11772 = !DILocation(line: 234, column: 1, scope: !11666)
!11773 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1905, file: !1905, line: 236, type: !6481, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1827, retainedNodes: !11774)
!11774 = !{!11775, !11776}
!11775 = !DILocalVariable(name: "key", scope: !11773, file: !1905, line: 242, type: !11677)
!11776 = !DILocalVariable(name: "cyc", scope: !11773, file: !1905, line: 243, type: !152)
!11777 = !DILocation(line: 0, scope: !11694, inlinedAt: !11778)
!11778 = distinct !DILocation(line: 242, column: 25, scope: !11773)
!11779 = !DILocation(line: 55, column: 2, scope: !11703, inlinedAt: !11780)
!11780 = distinct !DILocation(line: 145, column: 10, scope: !11694, inlinedAt: !11778)
!11781 = !DILocation(line: 0, scope: !11703, inlinedAt: !11780)
!11782 = !DILocation(line: 148, column: 2, scope: !11711, inlinedAt: !11778)
!11783 = !DILocation(line: 148, column: 2, scope: !11712, inlinedAt: !11778)
!11784 = !DILocation(line: 148, column: 2, scope: !11715, inlinedAt: !11778)
!11785 = !DILocation(line: 160, column: 2, scope: !11694, inlinedAt: !11778)
!11786 = !DILocation(line: 0, scope: !11773)
!11787 = !DILocation(line: 243, column: 17, scope: !11773)
!11788 = !DILocation(line: 243, column: 29, scope: !11773)
!11789 = !DILocation(line: 243, column: 43, scope: !11773)
!11790 = !DILocation(line: 0, scope: !11752, inlinedAt: !11791)
!11791 = distinct !DILocation(line: 245, column: 2, scope: !11773)
!11792 = !DILocation(line: 194, column: 2, scope: !11760, inlinedAt: !11791)
!11793 = !DILocation(line: 194, column: 2, scope: !11761, inlinedAt: !11791)
!11794 = !DILocation(line: 194, column: 2, scope: !11764, inlinedAt: !11791)
!11795 = !DILocation(line: 243, column: 27, scope: !11773)
!11796 = !DILocation(line: 243, column: 41, scope: !11773)
!11797 = !DILocation(line: 0, scope: !11766, inlinedAt: !11798)
!11798 = distinct !DILocation(line: 215, column: 2, scope: !11752, inlinedAt: !11791)
!11799 = !DILocation(line: 95, column: 2, scope: !11766, inlinedAt: !11798)
!11800 = !DILocation(line: 246, column: 13, scope: !11773)
!11801 = !DILocation(line: 246, column: 2, scope: !11773)
!11802 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1905, file: !1905, line: 249, type: !6481, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1827, retainedNodes: !11803)
!11803 = !{!11804, !11805}
!11804 = !DILocalVariable(name: "key", scope: !11802, file: !1905, line: 251, type: !11677)
!11805 = !DILocalVariable(name: "ret", scope: !11802, file: !1905, line: 252, type: !152)
!11806 = !DILocation(line: 0, scope: !11694, inlinedAt: !11807)
!11807 = distinct !DILocation(line: 251, column: 25, scope: !11802)
!11808 = !DILocation(line: 55, column: 2, scope: !11703, inlinedAt: !11809)
!11809 = distinct !DILocation(line: 145, column: 10, scope: !11694, inlinedAt: !11807)
!11810 = !DILocation(line: 0, scope: !11703, inlinedAt: !11809)
!11811 = !DILocation(line: 148, column: 2, scope: !11711, inlinedAt: !11807)
!11812 = !DILocation(line: 148, column: 2, scope: !11712, inlinedAt: !11807)
!11813 = !DILocation(line: 148, column: 2, scope: !11715, inlinedAt: !11807)
!11814 = !DILocation(line: 160, column: 2, scope: !11694, inlinedAt: !11807)
!11815 = !DILocation(line: 0, scope: !11802)
!11816 = !DILocation(line: 252, column: 17, scope: !11802)
!11817 = !DILocation(line: 252, column: 29, scope: !11802)
!11818 = !DILocation(line: 0, scope: !11752, inlinedAt: !11819)
!11819 = distinct !DILocation(line: 254, column: 2, scope: !11802)
!11820 = !DILocation(line: 194, column: 2, scope: !11760, inlinedAt: !11819)
!11821 = !DILocation(line: 194, column: 2, scope: !11761, inlinedAt: !11819)
!11822 = !DILocation(line: 194, column: 2, scope: !11764, inlinedAt: !11819)
!11823 = !DILocation(line: 252, column: 27, scope: !11802)
!11824 = !DILocation(line: 0, scope: !11766, inlinedAt: !11825)
!11825 = distinct !DILocation(line: 215, column: 2, scope: !11752, inlinedAt: !11819)
!11826 = !DILocation(line: 95, column: 2, scope: !11766, inlinedAt: !11825)
!11827 = !DILocation(line: 255, column: 2, scope: !11802)
!11828 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1905, file: !1905, line: 258, type: !3227, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1827, retainedNodes: !2296)
!11829 = !DILocation(line: 260, column: 6, scope: !11830)
!11830 = distinct !DILexicalBlock(scope: !11828, file: !1905, line: 260, column: 6)
!11831 = !DILocation(line: 260, column: 16, scope: !11830)
!11832 = !DILocation(line: 260, column: 6, scope: !11828)
!11833 = !DILocation(line: 261, column: 17, scope: !11834)
!11834 = distinct !DILexicalBlock(scope: !11830, file: !1905, line: 260, column: 34)
!11835 = !DILocation(line: 262, column: 2, scope: !11834)
!11836 = !DILocation(line: 263, column: 1, scope: !11828)
!11837 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1905, file: !1905, line: 265, type: !3227, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1827, retainedNodes: !2296)
!11838 = !DILocation(line: 267, column: 16, scope: !11837)
!11839 = !DILocation(line: 268, column: 1, scope: !11837)
!11840 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !11841, file: !11841, line: 9, type: !11842, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3034, retainedNodes: !11865)
!11841 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11842 = !DISubroutineType(types: !11843)
!11843 = !{!107, !11844, !195, !11864}
!11844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11845, size: 32)
!11845 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11846)
!11846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1734, line: 60, size: 64, elements: !11847)
!11847 = !{!11848, !11863}
!11848 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !11846, file: !1734, line: 69, baseType: !11849, size: 32)
!11849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11850, size: 32)
!11850 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11851)
!11851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1734, line: 50, size: 64, elements: !11852)
!11852 = !{!11853, !11861, !11862}
!11853 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !11851, file: !1734, line: 52, baseType: !11854, size: 32)
!11854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11855, size: 32)
!11855 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11856)
!11856 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1745, line: 37, baseType: !11857)
!11857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1745, line: 32, size: 64, elements: !11858)
!11858 = !{!11859, !11860}
!11859 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11857, file: !1745, line: 34, baseType: !152, size: 32)
!11860 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !11857, file: !1745, line: 36, baseType: !152, size: 32, offset: 32)
!11861 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !11851, file: !1734, line: 54, baseType: !195, size: 8, offset: 32)
!11862 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !11851, file: !1734, line: 56, baseType: !195, size: 8, offset: 40)
!11863 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !11846, file: !1734, line: 71, baseType: !195, size: 8, offset: 32)
!11864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11849, size: 32)
!11865 = !{!11866, !11867, !11868}
!11866 = !DILocalVariable(name: "config", arg: 1, scope: !11840, file: !11841, line: 9, type: !11844)
!11867 = !DILocalVariable(name: "id", arg: 2, scope: !11840, file: !11841, line: 9, type: !195)
!11868 = !DILocalVariable(name: "state", arg: 3, scope: !11840, file: !11841, line: 10, type: !11864)
!11869 = !DILocation(line: 0, scope: !11840)
!11870 = !DILocation(line: 12, column: 20, scope: !11840)
!11871 = !DILocation(line: 13, column: 27, scope: !11840)
!11872 = !DILocation(line: 13, column: 42, scope: !11840)
!11873 = !DILocation(line: 13, column: 19, scope: !11840)
!11874 = !DILocation(line: 13, column: 16, scope: !11840)
!11875 = !DILocation(line: 13, column: 2, scope: !11840)
!11876 = distinct !{!11876, !11875, !11877}
!11877 = !DILocation(line: 19, column: 2, scope: !11840)
!11878 = !DILocation(line: 14, column: 23, scope: !11879)
!11879 = distinct !DILexicalBlock(scope: !11880, file: !11841, line: 14, column: 7)
!11880 = distinct !DILexicalBlock(scope: !11840, file: !11841, line: 13, column: 54)
!11881 = !DILocation(line: 14, column: 10, scope: !11879)
!11882 = !DILocation(line: 18, column: 11, scope: !11880)
!11883 = !DILocation(line: 14, column: 7, scope: !11880)
!11884 = !DILocation(line: 22, column: 1, scope: !11840)
!11885 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !2024, file: !2024, line: 193, type: !11886, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1942, retainedNodes: !11895)
!11886 = !DISubroutineType(types: !11887)
!11887 = !{!107, !11888, !195, !22}
!11888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11889, size: 32)
!11889 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11890)
!11890 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1745, line: 37, baseType: !11891)
!11891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1745, line: 32, size: 64, elements: !11892)
!11892 = !{!11893, !11894}
!11893 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11891, file: !1745, line: 34, baseType: !152, size: 32)
!11894 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !11891, file: !1745, line: 36, baseType: !152, size: 32, offset: 32)
!11895 = !{!11896, !11897, !11898, !11899, !11900, !11901, !11902, !11903, !11905}
!11896 = !DILocalVariable(name: "pins", arg: 1, scope: !11885, file: !2024, line: 193, type: !11888)
!11897 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !11885, file: !2024, line: 193, type: !195)
!11898 = !DILocalVariable(name: "reg", arg: 3, scope: !11885, file: !2024, line: 194, type: !22)
!11899 = !DILocalVariable(name: "pin", scope: !11885, file: !2024, line: 196, type: !152)
!11900 = !DILocalVariable(name: "mux", scope: !11885, file: !2024, line: 196, type: !152)
!11901 = !DILocalVariable(name: "pin_cgf", scope: !11885, file: !2024, line: 197, type: !152)
!11902 = !DILocalVariable(name: "ret", scope: !11885, file: !2024, line: 198, type: !107)
!11903 = !DILocalVariable(name: "i", scope: !11904, file: !2024, line: 209, type: !195)
!11904 = distinct !DILexicalBlock(scope: !11885, file: !2024, line: 209, column: 2)
!11905 = !DILocalVariable(name: "gpio_out", scope: !11906, file: !2024, line: 239, type: !152)
!11906 = distinct !DILexicalBlock(scope: !11907, file: !2024, line: 238, column: 55)
!11907 = distinct !DILexicalBlock(scope: !11908, file: !2024, line: 238, column: 14)
!11908 = distinct !DILexicalBlock(scope: !11909, file: !2024, line: 236, column: 14)
!11909 = distinct !DILexicalBlock(scope: !11910, file: !2024, line: 234, column: 7)
!11910 = distinct !DILexicalBlock(scope: !11911, file: !2024, line: 209, column: 41)
!11911 = distinct !DILexicalBlock(scope: !11904, file: !2024, line: 209, column: 2)
!11912 = !DILocation(line: 0, scope: !11885)
!11913 = !DILocation(line: 0, scope: !11904)
!11914 = !DILocation(line: 209, column: 25, scope: !11911)
!11915 = !DILocation(line: 209, column: 2, scope: !11904)
!11916 = distinct !{!11916, !11915, !11917}
!11917 = !DILocation(line: 259, column: 2, scope: !11904)
!11918 = !DILocation(line: 210, column: 17, scope: !11910)
!11919 = !DILocation(line: 234, column: 7, scope: !11909)
!11920 = !DILocation(line: 234, column: 33, scope: !11909)
!11921 = !DILocation(line: 234, column: 7, scope: !11910)
!11922 = !DILocation(line: 235, column: 22, scope: !11923)
!11923 = distinct !DILexicalBlock(scope: !11909, file: !2024, line: 234, column: 49)
!11924 = !DILocation(line: 235, column: 29, scope: !11923)
!11925 = !DILocation(line: 236, column: 3, scope: !11923)
!11926 = !DILocation(line: 236, column: 14, scope: !11909)
!11927 = !DILocation(line: 239, column: 32, scope: !11906)
!11928 = !DILocation(line: 0, scope: !11906)
!11929 = !DILocation(line: 241, column: 8, scope: !11906)
!11930 = !DILocation(line: 246, column: 3, scope: !11906)
!11931 = !DILocation(line: 252, column: 9, scope: !11910)
!11932 = !DILocation(line: 255, column: 9, scope: !11910)
!11933 = !DILocation(line: 256, column: 11, scope: !11934)
!11934 = distinct !DILexicalBlock(scope: !11910, file: !2024, line: 256, column: 7)
!11935 = !DILocation(line: 209, column: 37, scope: !11911)
!11936 = !DILocation(line: 256, column: 7, scope: !11910)
!11937 = !DILocation(line: 262, column: 1, scope: !11885)
!11938 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !2024, file: !2024, line: 176, type: !11939, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1942, retainedNodes: !11941)
!11939 = !DISubroutineType(types: !11940)
!11940 = !{!107, !152, !152, !152}
!11941 = !{!11942, !11943, !11944, !11945}
!11942 = !DILocalVariable(name: "pin", arg: 1, scope: !11938, file: !2024, line: 176, type: !152)
!11943 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !11938, file: !2024, line: 176, type: !152)
!11944 = !DILocalVariable(name: "pin_func", arg: 3, scope: !11938, file: !2024, line: 176, type: !152)
!11945 = !DILocalVariable(name: "port_device", scope: !11938, file: !2024, line: 178, type: !1954)
!11946 = !DILocation(line: 0, scope: !11938)
!11947 = !DILocation(line: 180, column: 22, scope: !11948)
!11948 = distinct !DILexicalBlock(scope: !11938, file: !2024, line: 180, column: 6)
!11949 = !DILocation(line: 180, column: 6, scope: !11938)
!11950 = !DILocation(line: 180, column: 6, scope: !11948)
!11951 = !DILocation(line: 184, column: 16, scope: !11938)
!11952 = !DILocation(line: 186, column: 33, scope: !11953)
!11953 = distinct !DILexicalBlock(scope: !11938, file: !2024, line: 186, column: 6)
!11954 = !DILocation(line: 186, column: 6, scope: !11938)
!11955 = !DILocation(line: 190, column: 43, scope: !11938)
!11956 = !DILocation(line: 190, column: 9, scope: !11938)
!11957 = !DILocation(line: 190, column: 2, scope: !11938)
!11958 = !DILocation(line: 191, column: 1, scope: !11938)
!11959 = distinct !DISubprogram(name: "device_is_ready", scope: !9865, file: !9865, line: 47, type: !11960, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1942, retainedNodes: !11962)
!11960 = !DISubroutineType(types: !11961)
!11961 = !{!145, !1954}
!11962 = !{!11963}
!11963 = !DILocalVariable(name: "dev", arg: 1, scope: !11959, file: !9865, line: 47, type: !1954)
!11964 = !DILocation(line: 0, scope: !11959)
!11965 = !DILocation(line: 55, column: 2, scope: !11966)
!11966 = distinct !DILexicalBlock(scope: !11959, file: !9865, line: 55, column: 2)
!11967 = !{i64 2149838980}
!11968 = !DILocation(line: 56, column: 9, scope: !11959)
!11969 = !DILocation(line: 56, column: 2, scope: !11959)
!11970 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !247, file: !247, line: 730, type: !11960, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1942, retainedNodes: !11971)
!11971 = !{!11972}
!11972 = !DILocalVariable(name: "dev", arg: 1, scope: !11970, file: !247, line: 730, type: !1954)
!11973 = !DILocation(line: 0, scope: !11970)
!11974 = !DILocation(line: 732, column: 9, scope: !11970)
!11975 = !DILocation(line: 732, column: 2, scope: !11970)
!11976 = distinct !DISubprogram(name: "SystemInit", scope: !2074, file: !2074, line: 167, type: !3227, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2032, retainedNodes: !2296)
!11977 = !DILocation(line: 182, column: 1, scope: !11976)
!11978 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !2074, file: !2074, line: 220, type: !3227, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2032, retainedNodes: !11979)
!11979 = !{!11980, !11981, !11982, !11983, !11984}
!11980 = !DILocalVariable(name: "tmp", scope: !11978, file: !2074, line: 222, type: !152)
!11981 = !DILocalVariable(name: "pllvco", scope: !11978, file: !2074, line: 222, type: !152)
!11982 = !DILocalVariable(name: "pllp", scope: !11978, file: !2074, line: 222, type: !152)
!11983 = !DILocalVariable(name: "pllsource", scope: !11978, file: !2074, line: 222, type: !152)
!11984 = !DILocalVariable(name: "pllm", scope: !11978, file: !2074, line: 222, type: !152)
!11985 = !DILocation(line: 0, scope: !11978)
!11986 = !DILocation(line: 225, column: 14, scope: !11978)
!11987 = !DILocation(line: 225, column: 19, scope: !11978)
!11988 = !DILocation(line: 227, column: 3, scope: !11978)
!11989 = !DILocation(line: 234, column: 7, scope: !11990)
!11990 = distinct !DILexicalBlock(scope: !11978, file: !2074, line: 228, column: 3)
!11991 = !DILocation(line: 240, column: 25, scope: !11990)
!11992 = !DILocation(line: 241, column: 19, scope: !11990)
!11993 = !DILocation(line: 241, column: 27, scope: !11990)
!11994 = !DILocation(line: 243, column: 21, scope: !11995)
!11995 = distinct !DILexicalBlock(scope: !11990, file: !2074, line: 243, column: 11)
!11996 = !DILocation(line: 0, scope: !11995)
!11997 = !DILocation(line: 254, column: 22, scope: !11990)
!11998 = !DILocation(line: 254, column: 62, scope: !11990)
!11999 = !DILocation(line: 255, column: 31, scope: !11990)
!12000 = !DILocation(line: 256, column: 7, scope: !11990)
!12001 = !DILocation(line: 0, scope: !11990)
!12002 = !DILocation(line: 263, column: 30, scope: !11978)
!12003 = !DILocation(line: 263, column: 52, scope: !11978)
!12004 = !DILocation(line: 263, column: 9, scope: !11978)
!12005 = !DILocation(line: 265, column: 19, scope: !11978)
!12006 = !DILocation(line: 266, column: 1, scope: !11978)
!12007 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !12008, file: !12008, line: 200, type: !12009, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3036, retainedNodes: !2296)
!12008 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12009 = !DISubroutineType(types: !12010)
!12010 = !{!12011}
!12011 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !3040, line: 44, baseType: !3039)
!12012 = !DILocation(line: 202, column: 3, scope: !12007)
!12013 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !12008, file: !12008, line: 219, type: !12014, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3036, retainedNodes: !12038)
!12014 = !DISubroutineType(types: !12015)
!12015 = !{!12011, !12016}
!12016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12017, size: 32)
!12017 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !12018, line: 70, baseType: !12019)
!12018 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12019 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12018, line: 49, size: 384, elements: !12020)
!12020 = !{!12021, !12022, !12023, !12024, !12025, !12026, !12027}
!12021 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !12019, file: !12018, line: 51, baseType: !152, size: 32)
!12022 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !12019, file: !12018, line: 54, baseType: !152, size: 32, offset: 32)
!12023 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !12019, file: !12018, line: 57, baseType: !152, size: 32, offset: 64)
!12024 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !12019, file: !12018, line: 60, baseType: !152, size: 32, offset: 96)
!12025 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !12019, file: !12018, line: 63, baseType: !152, size: 32, offset: 128)
!12026 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !12019, file: !12018, line: 66, baseType: !152, size: 32, offset: 160)
!12027 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !12019, file: !12018, line: 69, baseType: !12028, size: 192, offset: 192)
!12028 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !12029, line: 73, baseType: !12030)
!12029 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12030 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12029, line: 45, size: 192, elements: !12031)
!12031 = !{!12032, !12033, !12034, !12035, !12036, !12037}
!12032 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !12030, file: !12029, line: 47, baseType: !152, size: 32)
!12033 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !12030, file: !12029, line: 50, baseType: !152, size: 32, offset: 32)
!12034 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !12030, file: !12029, line: 53, baseType: !152, size: 32, offset: 64)
!12035 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !12030, file: !12029, line: 56, baseType: !152, size: 32, offset: 96)
!12036 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !12030, file: !12029, line: 60, baseType: !152, size: 32, offset: 128)
!12037 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !12030, file: !12029, line: 63, baseType: !152, size: 32, offset: 160)
!12038 = !{!12039, !12040, !12041, !12042, !12046}
!12039 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12013, file: !12008, line: 219, type: !12016)
!12040 = !DILocalVariable(name: "tickstart", scope: !12013, file: !12008, line: 221, type: !152)
!12041 = !DILocalVariable(name: "pll_config", scope: !12013, file: !12008, line: 221, type: !152)
!12042 = !DILocalVariable(name: "pwrclkchanged", scope: !12043, file: !12008, line: 391, type: !12045)
!12043 = distinct !DILexicalBlock(scope: !12044, file: !12008, line: 390, column: 3)
!12044 = distinct !DILexicalBlock(scope: !12013, file: !12008, line: 389, column: 6)
!12045 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !985, line: 188, baseType: !3046)
!12046 = !DILocalVariable(name: "tmpreg", scope: !12047, file: !12008, line: 400, type: !227)
!12047 = distinct !DILexicalBlock(scope: !12048, file: !12008, line: 400, column: 7)
!12048 = distinct !DILexicalBlock(scope: !12049, file: !12008, line: 399, column: 5)
!12049 = distinct !DILexicalBlock(scope: !12043, file: !12008, line: 398, column: 8)
!12050 = !DILocation(line: 0, scope: !12013)
!12051 = !DILocation(line: 224, column: 24, scope: !12052)
!12052 = distinct !DILexicalBlock(scope: !12013, file: !12008, line: 224, column: 6)
!12053 = !DILocation(line: 224, column: 6, scope: !12013)
!12054 = !DILocation(line: 232, column: 27, scope: !12055)
!12055 = distinct !DILexicalBlock(scope: !12013, file: !12008, line: 232, column: 6)
!12056 = !DILocation(line: 232, column: 43, scope: !12055)
!12057 = !DILocation(line: 232, column: 69, scope: !12055)
!12058 = !DILocation(line: 232, column: 6, scope: !12013)
!12059 = !DILocation(line: 237, column: 9, scope: !12060)
!12060 = distinct !DILexicalBlock(scope: !12061, file: !12008, line: 237, column: 8)
!12061 = distinct !DILexicalBlock(scope: !12055, file: !12008, line: 233, column: 3)
!12062 = !DILocation(line: 237, column: 39, scope: !12060)
!12063 = !DILocation(line: 237, column: 60, scope: !12060)
!12064 = !DILocation(line: 238, column: 9, scope: !12060)
!12065 = !DILocation(line: 238, column: 39, scope: !12060)
!12066 = !DILocation(line: 238, column: 60, scope: !12060)
!12067 = !DILocation(line: 238, column: 70, scope: !12060)
!12068 = !DILocation(line: 238, column: 78, scope: !12060)
!12069 = !DILocation(line: 238, column: 100, scope: !12060)
!12070 = !DILocation(line: 237, column: 8, scope: !12061)
!12071 = !DILocation(line: 240, column: 11, scope: !12072)
!12072 = distinct !DILexicalBlock(scope: !12073, file: !12008, line: 240, column: 10)
!12073 = distinct !DILexicalBlock(scope: !12060, file: !12008, line: 239, column: 5)
!12074 = !DILocation(line: 240, column: 57, scope: !12072)
!12075 = !DILocation(line: 240, column: 80, scope: !12072)
!12076 = !DILocation(line: 240, column: 89, scope: !12072)
!12077 = !DILocation(line: 240, column: 10, scope: !12073)
!12078 = !DILocation(line: 248, column: 7, scope: !12079)
!12079 = distinct !DILexicalBlock(scope: !12080, file: !12008, line: 248, column: 7)
!12080 = distinct !DILexicalBlock(scope: !12081, file: !12008, line: 248, column: 7)
!12081 = distinct !DILexicalBlock(scope: !12060, file: !12008, line: 246, column: 5)
!12082 = !DILocation(line: 248, column: 7, scope: !12080)
!12083 = !DILocation(line: 248, column: 7, scope: !12084)
!12084 = distinct !DILexicalBlock(scope: !12079, file: !12008, line: 248, column: 7)
!12085 = !DILocation(line: 248, column: 7, scope: !12086)
!12086 = distinct !DILexicalBlock(scope: !12087, file: !12008, line: 248, column: 7)
!12087 = distinct !DILexicalBlock(scope: !12079, file: !12008, line: 248, column: 7)
!12088 = !DILocation(line: 248, column: 7, scope: !12089)
!12089 = distinct !DILexicalBlock(scope: !12087, file: !12008, line: 248, column: 7)
!12090 = !DILocation(line: 0, scope: !12079)
!12091 = !DILocation(line: 251, column: 30, scope: !12092)
!12092 = distinct !DILexicalBlock(scope: !12081, file: !12008, line: 251, column: 10)
!12093 = !DILocation(line: 251, column: 40, scope: !12092)
!12094 = !DILocation(line: 0, scope: !12092)
!12095 = !DILocation(line: 251, column: 10, scope: !12081)
!12096 = !DILocation(line: 257, column: 15, scope: !12097)
!12097 = distinct !DILexicalBlock(scope: !12092, file: !12008, line: 252, column: 7)
!12098 = !DILocation(line: 257, column: 51, scope: !12097)
!12099 = !DILocation(line: 257, column: 9, scope: !12097)
!12100 = !DILocation(line: 259, column: 15, scope: !12101)
!12101 = distinct !DILexicalBlock(scope: !12102, file: !12008, line: 259, column: 14)
!12102 = distinct !DILexicalBlock(scope: !12097, file: !12008, line: 258, column: 9)
!12103 = !DILocation(line: 259, column: 29, scope: !12101)
!12104 = !DILocation(line: 259, column: 43, scope: !12101)
!12105 = !DILocation(line: 259, column: 14, scope: !12102)
!12106 = distinct !{!12106, !12099, !12107}
!12107 = !DILocation(line: 263, column: 9, scope: !12097)
!12108 = !DILocation(line: 271, column: 15, scope: !12109)
!12109 = distinct !DILexicalBlock(scope: !12092, file: !12008, line: 266, column: 7)
!12110 = !DILocation(line: 271, column: 9, scope: !12109)
!12111 = !DILocation(line: 273, column: 15, scope: !12112)
!12112 = distinct !DILexicalBlock(scope: !12113, file: !12008, line: 273, column: 14)
!12113 = distinct !DILexicalBlock(scope: !12109, file: !12008, line: 272, column: 9)
!12114 = !DILocation(line: 273, column: 29, scope: !12112)
!12115 = !DILocation(line: 273, column: 43, scope: !12112)
!12116 = !DILocation(line: 273, column: 14, scope: !12113)
!12117 = distinct !{!12117, !12110, !12118}
!12118 = !DILocation(line: 277, column: 9, scope: !12109)
!12119 = !DILocation(line: 282, column: 27, scope: !12120)
!12120 = distinct !DILexicalBlock(scope: !12013, file: !12008, line: 282, column: 6)
!12121 = !DILocation(line: 282, column: 43, scope: !12120)
!12122 = !DILocation(line: 282, column: 69, scope: !12120)
!12123 = !DILocation(line: 282, column: 6, scope: !12013)
!12124 = !DILocation(line: 289, column: 9, scope: !12125)
!12125 = distinct !DILexicalBlock(scope: !12126, file: !12008, line: 289, column: 8)
!12126 = distinct !DILexicalBlock(scope: !12120, file: !12008, line: 283, column: 3)
!12127 = !DILocation(line: 289, column: 39, scope: !12125)
!12128 = !DILocation(line: 289, column: 60, scope: !12125)
!12129 = !DILocation(line: 290, column: 9, scope: !12125)
!12130 = !DILocation(line: 290, column: 39, scope: !12125)
!12131 = !DILocation(line: 290, column: 60, scope: !12125)
!12132 = !DILocation(line: 290, column: 70, scope: !12125)
!12133 = !DILocation(line: 290, column: 78, scope: !12125)
!12134 = !DILocation(line: 290, column: 100, scope: !12125)
!12135 = !DILocation(line: 289, column: 8, scope: !12126)
!12136 = !DILocation(line: 293, column: 11, scope: !12137)
!12137 = distinct !DILexicalBlock(scope: !12138, file: !12008, line: 293, column: 10)
!12138 = distinct !DILexicalBlock(scope: !12125, file: !12008, line: 291, column: 5)
!12139 = !DILocation(line: 293, column: 57, scope: !12137)
!12140 = !DILocation(line: 293, column: 80, scope: !12137)
!12141 = !DILocation(line: 293, column: 89, scope: !12137)
!12142 = !DILocation(line: 293, column: 10, scope: !12138)
!12143 = !DILocation(line: 307, column: 30, scope: !12144)
!12144 = distinct !DILexicalBlock(scope: !12145, file: !12008, line: 307, column: 10)
!12145 = distinct !DILexicalBlock(scope: !12125, file: !12008, line: 305, column: 5)
!12146 = !DILocation(line: 307, column: 39, scope: !12144)
!12147 = !DILocation(line: 307, column: 10, scope: !12145)
!12148 = !DILocation(line: 310, column: 9, scope: !12149)
!12149 = distinct !DILexicalBlock(scope: !12144, file: !12008, line: 308, column: 7)
!12150 = !DILocation(line: 313, column: 21, scope: !12149)
!12151 = !DILocation(line: 316, column: 9, scope: !12149)
!12152 = !DILocation(line: 316, column: 15, scope: !12149)
!12153 = !DILocation(line: 316, column: 51, scope: !12149)
!12154 = !DILocation(line: 318, column: 15, scope: !12155)
!12155 = distinct !DILexicalBlock(scope: !12156, file: !12008, line: 318, column: 14)
!12156 = distinct !DILexicalBlock(scope: !12149, file: !12008, line: 317, column: 9)
!12157 = !DILocation(line: 318, column: 29, scope: !12155)
!12158 = !DILocation(line: 318, column: 43, scope: !12155)
!12159 = !DILocation(line: 318, column: 14, scope: !12156)
!12160 = distinct !{!12160, !12151, !12161}
!12161 = !DILocation(line: 322, column: 9, scope: !12149)
!12162 = !DILocation(line: 330, column: 9, scope: !12163)
!12163 = distinct !DILexicalBlock(scope: !12144, file: !12008, line: 328, column: 7)
!12164 = !DILocation(line: 333, column: 21, scope: !12163)
!12165 = !DILocation(line: 336, column: 9, scope: !12163)
!12166 = !DILocation(line: 336, column: 15, scope: !12163)
!12167 = !DILocation(line: 338, column: 15, scope: !12168)
!12168 = distinct !DILexicalBlock(scope: !12169, file: !12008, line: 338, column: 14)
!12169 = distinct !DILexicalBlock(scope: !12163, file: !12008, line: 337, column: 9)
!12170 = !DILocation(line: 338, column: 29, scope: !12168)
!12171 = !DILocation(line: 338, column: 43, scope: !12168)
!12172 = !DILocation(line: 338, column: 14, scope: !12169)
!12173 = distinct !{!12173, !12165, !12174}
!12174 = !DILocation(line: 342, column: 9, scope: !12163)
!12175 = !DILocation(line: 0, scope: !12125)
!12176 = !DILocation(line: 347, column: 27, scope: !12177)
!12177 = distinct !DILexicalBlock(scope: !12013, file: !12008, line: 347, column: 6)
!12178 = !DILocation(line: 347, column: 43, scope: !12177)
!12179 = !DILocation(line: 347, column: 69, scope: !12177)
!12180 = !DILocation(line: 347, column: 6, scope: !12013)
!12181 = !DILocation(line: 353, column: 28, scope: !12182)
!12182 = distinct !DILexicalBlock(scope: !12183, file: !12008, line: 353, column: 8)
!12183 = distinct !DILexicalBlock(scope: !12177, file: !12008, line: 348, column: 3)
!12184 = !DILocation(line: 353, column: 37, scope: !12182)
!12185 = !DILocation(line: 353, column: 8, scope: !12183)
!12186 = !DILocation(line: 356, column: 7, scope: !12187)
!12187 = distinct !DILexicalBlock(scope: !12182, file: !12008, line: 354, column: 5)
!12188 = !DILocation(line: 359, column: 19, scope: !12187)
!12189 = !DILocation(line: 362, column: 7, scope: !12187)
!12190 = !DILocation(line: 362, column: 13, scope: !12187)
!12191 = !DILocation(line: 362, column: 49, scope: !12187)
!12192 = !DILocation(line: 364, column: 13, scope: !12193)
!12193 = distinct !DILexicalBlock(scope: !12194, file: !12008, line: 364, column: 12)
!12194 = distinct !DILexicalBlock(scope: !12187, file: !12008, line: 363, column: 7)
!12195 = !DILocation(line: 364, column: 27, scope: !12193)
!12196 = !DILocation(line: 364, column: 41, scope: !12193)
!12197 = !DILocation(line: 364, column: 12, scope: !12194)
!12198 = distinct !{!12198, !12189, !12199}
!12199 = !DILocation(line: 368, column: 7, scope: !12187)
!12200 = !DILocation(line: 373, column: 7, scope: !12201)
!12201 = distinct !DILexicalBlock(scope: !12182, file: !12008, line: 371, column: 5)
!12202 = !DILocation(line: 376, column: 19, scope: !12201)
!12203 = !DILocation(line: 379, column: 7, scope: !12201)
!12204 = !DILocation(line: 379, column: 13, scope: !12201)
!12205 = !DILocation(line: 381, column: 13, scope: !12206)
!12206 = distinct !DILexicalBlock(scope: !12207, file: !12008, line: 381, column: 12)
!12207 = distinct !DILexicalBlock(scope: !12201, file: !12008, line: 380, column: 7)
!12208 = !DILocation(line: 381, column: 27, scope: !12206)
!12209 = !DILocation(line: 381, column: 41, scope: !12206)
!12210 = !DILocation(line: 381, column: 12, scope: !12207)
!12211 = distinct !{!12211, !12203, !12212}
!12212 = !DILocation(line: 385, column: 7, scope: !12201)
!12213 = !DILocation(line: 389, column: 27, scope: !12044)
!12214 = !DILocation(line: 389, column: 43, scope: !12044)
!12215 = !DILocation(line: 389, column: 69, scope: !12044)
!12216 = !DILocation(line: 389, column: 6, scope: !12013)
!12217 = !DILocation(line: 0, scope: !12043)
!12218 = !DILocation(line: 398, column: 8, scope: !12049)
!12219 = !DILocation(line: 398, column: 8, scope: !12043)
!12220 = !DILocation(line: 400, column: 7, scope: !12047)
!12221 = !DILocation(line: 400, column: 7, scope: !12048)
!12222 = !DILocation(line: 402, column: 5, scope: !12048)
!12223 = !DILocation(line: 404, column: 8, scope: !12224)
!12224 = distinct !DILexicalBlock(scope: !12043, file: !12008, line: 404, column: 8)
!12225 = !DILocation(line: 404, column: 8, scope: !12043)
!12226 = !DILocation(line: 407, column: 7, scope: !12227)
!12227 = distinct !DILexicalBlock(scope: !12224, file: !12008, line: 405, column: 5)
!12228 = !DILocation(line: 410, column: 19, scope: !12227)
!12229 = !DILocation(line: 412, column: 7, scope: !12227)
!12230 = !DILocation(line: 412, column: 13, scope: !12227)
!12231 = !DILocation(line: 414, column: 13, scope: !12232)
!12232 = distinct !DILexicalBlock(scope: !12233, file: !12008, line: 414, column: 12)
!12233 = distinct !DILexicalBlock(scope: !12227, file: !12008, line: 413, column: 7)
!12234 = !DILocation(line: 414, column: 27, scope: !12232)
!12235 = !DILocation(line: 414, column: 40, scope: !12232)
!12236 = !DILocation(line: 414, column: 12, scope: !12233)
!12237 = distinct !{!12237, !12229, !12238}
!12238 = !DILocation(line: 418, column: 7, scope: !12227)
!12239 = !DILocation(line: 422, column: 5, scope: !12240)
!12240 = distinct !DILexicalBlock(scope: !12241, file: !12008, line: 422, column: 5)
!12241 = distinct !DILexicalBlock(scope: !12043, file: !12008, line: 422, column: 5)
!12242 = !DILocation(line: 422, column: 5, scope: !12241)
!12243 = !DILocation(line: 422, column: 5, scope: !12244)
!12244 = distinct !DILexicalBlock(scope: !12240, file: !12008, line: 422, column: 5)
!12245 = !DILocation(line: 422, column: 5, scope: !12246)
!12246 = distinct !DILexicalBlock(scope: !12247, file: !12008, line: 422, column: 5)
!12247 = distinct !DILexicalBlock(scope: !12240, file: !12008, line: 422, column: 5)
!12248 = !DILocation(line: 422, column: 5, scope: !12249)
!12249 = distinct !DILexicalBlock(scope: !12247, file: !12008, line: 422, column: 5)
!12250 = !DILocation(line: 0, scope: !12240)
!12251 = !DILocation(line: 424, column: 28, scope: !12252)
!12252 = distinct !DILexicalBlock(scope: !12043, file: !12008, line: 424, column: 8)
!12253 = !DILocation(line: 424, column: 38, scope: !12252)
!12254 = !DILocation(line: 0, scope: !12252)
!12255 = !DILocation(line: 424, column: 8, scope: !12043)
!12256 = !DILocation(line: 430, column: 13, scope: !12257)
!12257 = distinct !DILexicalBlock(scope: !12252, file: !12008, line: 425, column: 5)
!12258 = !DILocation(line: 430, column: 49, scope: !12257)
!12259 = !DILocation(line: 430, column: 7, scope: !12257)
!12260 = !DILocation(line: 432, column: 13, scope: !12261)
!12261 = distinct !DILexicalBlock(scope: !12262, file: !12008, line: 432, column: 12)
!12262 = distinct !DILexicalBlock(scope: !12257, file: !12008, line: 431, column: 7)
!12263 = !DILocation(line: 432, column: 27, scope: !12261)
!12264 = !DILocation(line: 432, column: 41, scope: !12261)
!12265 = !DILocation(line: 432, column: 12, scope: !12262)
!12266 = distinct !{!12266, !12259, !12267}
!12267 = !DILocation(line: 436, column: 7, scope: !12257)
!12268 = !DILocation(line: 444, column: 13, scope: !12269)
!12269 = distinct !DILexicalBlock(scope: !12252, file: !12008, line: 439, column: 5)
!12270 = !DILocation(line: 444, column: 7, scope: !12269)
!12271 = !DILocation(line: 446, column: 13, scope: !12272)
!12272 = distinct !DILexicalBlock(scope: !12273, file: !12008, line: 446, column: 12)
!12273 = distinct !DILexicalBlock(scope: !12269, file: !12008, line: 445, column: 7)
!12274 = !DILocation(line: 446, column: 27, scope: !12272)
!12275 = !DILocation(line: 446, column: 41, scope: !12272)
!12276 = !DILocation(line: 446, column: 12, scope: !12273)
!12277 = distinct !{!12277, !12270, !12278}
!12278 = !DILocation(line: 450, column: 7, scope: !12269)
!12279 = !DILocation(line: 454, column: 8, scope: !12043)
!12280 = !DILocation(line: 456, column: 7, scope: !12281)
!12281 = distinct !DILexicalBlock(scope: !12282, file: !12008, line: 455, column: 5)
!12282 = distinct !DILexicalBlock(scope: !12043, file: !12008, line: 454, column: 8)
!12283 = !DILocation(line: 457, column: 5, scope: !12281)
!12284 = !DILocation(line: 462, column: 31, scope: !12285)
!12285 = distinct !DILexicalBlock(scope: !12013, file: !12008, line: 462, column: 7)
!12286 = !DILocation(line: 462, column: 41, scope: !12285)
!12287 = !DILocation(line: 462, column: 7, scope: !12013)
!12288 = !DILocation(line: 465, column: 8, scope: !12289)
!12289 = distinct !DILexicalBlock(scope: !12290, file: !12008, line: 465, column: 8)
!12290 = distinct !DILexicalBlock(scope: !12285, file: !12008, line: 463, column: 3)
!12291 = !DILocation(line: 465, column: 38, scope: !12289)
!12292 = !DILocation(line: 465, column: 8, scope: !12290)
!12293 = !DILocation(line: 467, column: 44, scope: !12294)
!12294 = distinct !DILexicalBlock(scope: !12295, file: !12008, line: 467, column: 10)
!12295 = distinct !DILexicalBlock(scope: !12289, file: !12008, line: 466, column: 5)
!12296 = !DILocation(line: 0, scope: !12294)
!12297 = !DILocation(line: 467, column: 10, scope: !12295)
!12298 = !DILocation(line: 483, column: 15, scope: !12299)
!12299 = distinct !DILexicalBlock(scope: !12294, file: !12008, line: 468, column: 7)
!12300 = !DILocation(line: 483, column: 9, scope: !12299)
!12301 = !DILocation(line: 485, column: 15, scope: !12302)
!12302 = distinct !DILexicalBlock(scope: !12303, file: !12008, line: 485, column: 14)
!12303 = distinct !DILexicalBlock(scope: !12299, file: !12008, line: 484, column: 9)
!12304 = !DILocation(line: 485, column: 29, scope: !12302)
!12305 = !DILocation(line: 485, column: 43, scope: !12302)
!12306 = !DILocation(line: 485, column: 14, scope: !12303)
!12307 = distinct !{!12307, !12300, !12308}
!12308 = !DILocation(line: 489, column: 9, scope: !12299)
!12309 = !DILocation(line: 492, column: 9, scope: !12299)
!12310 = !DILocation(line: 498, column: 9, scope: !12299)
!12311 = !DILocation(line: 501, column: 21, scope: !12299)
!12312 = !DILocation(line: 504, column: 9, scope: !12299)
!12313 = !DILocation(line: 504, column: 15, scope: !12299)
!12314 = !DILocation(line: 504, column: 51, scope: !12299)
!12315 = !DILocation(line: 506, column: 15, scope: !12316)
!12316 = distinct !DILexicalBlock(scope: !12317, file: !12008, line: 506, column: 14)
!12317 = distinct !DILexicalBlock(scope: !12299, file: !12008, line: 505, column: 9)
!12318 = !DILocation(line: 506, column: 29, scope: !12316)
!12319 = !DILocation(line: 506, column: 43, scope: !12316)
!12320 = !DILocation(line: 506, column: 14, scope: !12317)
!12321 = distinct !{!12321, !12312, !12322}
!12322 = !DILocation(line: 510, column: 9, scope: !12299)
!12323 = !DILocation(line: 521, column: 15, scope: !12324)
!12324 = distinct !DILexicalBlock(scope: !12294, file: !12008, line: 513, column: 7)
!12325 = !DILocation(line: 521, column: 9, scope: !12324)
!12326 = !DILocation(line: 523, column: 15, scope: !12327)
!12327 = distinct !DILexicalBlock(scope: !12328, file: !12008, line: 523, column: 14)
!12328 = distinct !DILexicalBlock(scope: !12324, file: !12008, line: 522, column: 9)
!12329 = !DILocation(line: 523, column: 29, scope: !12327)
!12330 = !DILocation(line: 523, column: 43, scope: !12327)
!12331 = !DILocation(line: 523, column: 14, scope: !12328)
!12332 = distinct !{!12332, !12325, !12333}
!12333 = !DILocation(line: 527, column: 9, scope: !12324)
!12334 = !DILocation(line: 533, column: 44, scope: !12335)
!12335 = distinct !DILexicalBlock(scope: !12336, file: !12008, line: 533, column: 10)
!12336 = distinct !DILexicalBlock(scope: !12289, file: !12008, line: 531, column: 5)
!12337 = !DILocation(line: 533, column: 10, scope: !12336)
!12338 = !DILocation(line: 540, column: 27, scope: !12339)
!12339 = distinct !DILexicalBlock(scope: !12335, file: !12008, line: 538, column: 7)
!12340 = !DILocation(line: 551, column: 14, scope: !12341)
!12341 = distinct !DILexicalBlock(scope: !12339, file: !12008, line: 550, column: 13)
!12342 = !DILocation(line: 551, column: 81, scope: !12341)
!12343 = !DILocation(line: 551, column: 55, scope: !12341)
!12344 = !DILocation(line: 551, column: 92, scope: !12341)
!12345 = !DILocation(line: 552, column: 14, scope: !12341)
!12346 = !DILocation(line: 552, column: 80, scope: !12341)
!12347 = !DILocation(line: 552, column: 53, scope: !12341)
!12348 = !DILocation(line: 552, column: 111, scope: !12341)
!12349 = !DILocation(line: 553, column: 14, scope: !12341)
!12350 = !DILocation(line: 553, column: 80, scope: !12341)
!12351 = !DILocation(line: 553, column: 86, scope: !12341)
!12352 = !DILocation(line: 553, column: 53, scope: !12341)
!12353 = !DILocation(line: 553, column: 111, scope: !12341)
!12354 = !DILocation(line: 554, column: 14, scope: !12341)
!12355 = !DILocation(line: 554, column: 82, scope: !12341)
!12356 = !DILocation(line: 554, column: 101, scope: !12341)
!12357 = !DILocation(line: 554, column: 53, scope: !12341)
!12358 = !DILocation(line: 554, column: 126, scope: !12341)
!12359 = !DILocation(line: 555, column: 14, scope: !12341)
!12360 = !DILocation(line: 555, column: 80, scope: !12341)
!12361 = !DILocation(line: 555, column: 85, scope: !12341)
!12362 = !DILocation(line: 555, column: 53, scope: !12341)
!12363 = !DILocation(line: 550, column: 13, scope: !12339)
!12364 = !DILocation(line: 563, column: 3, scope: !12013)
!12365 = !DILocation(line: 564, column: 1, scope: !12013)
!12366 = !DISubprogram(name: "HAL_GetTick", scope: !12367, file: !12367, line: 234, type: !6481, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2296)
!12367 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12368 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !12008, file: !12008, line: 591, type: !12369, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3036, retainedNodes: !12380)
!12369 = !DISubroutineType(types: !12370)
!12370 = !{!12011, !12371, !152}
!12371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12372, size: 32)
!12372 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !12018, line: 92, baseType: !12373)
!12373 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12018, line: 75, size: 160, elements: !12374)
!12374 = !{!12375, !12376, !12377, !12378, !12379}
!12375 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !12373, file: !12018, line: 77, baseType: !152, size: 32)
!12376 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !12373, file: !12018, line: 80, baseType: !152, size: 32, offset: 32)
!12377 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12373, file: !12018, line: 83, baseType: !152, size: 32, offset: 64)
!12378 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12373, file: !12018, line: 86, baseType: !152, size: 32, offset: 96)
!12379 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12373, file: !12018, line: 89, baseType: !152, size: 32, offset: 128)
!12380 = !{!12381, !12382, !12383}
!12381 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12368, file: !12008, line: 591, type: !12371)
!12382 = !DILocalVariable(name: "FLatency", arg: 2, scope: !12368, file: !12008, line: 591, type: !152)
!12383 = !DILocalVariable(name: "tickstart", scope: !12368, file: !12008, line: 593, type: !152)
!12384 = !DILocation(line: 0, scope: !12368)
!12385 = !DILocation(line: 596, column: 24, scope: !12386)
!12386 = distinct !DILexicalBlock(scope: !12368, file: !12008, line: 596, column: 6)
!12387 = !DILocation(line: 596, column: 6, scope: !12368)
!12388 = !DILocation(line: 610, column: 17, scope: !12389)
!12389 = distinct !DILexicalBlock(scope: !12368, file: !12008, line: 610, column: 6)
!12390 = !DILocation(line: 610, column: 15, scope: !12389)
!12391 = !DILocation(line: 610, column: 6, scope: !12368)
!12392 = !DILocation(line: 613, column: 5, scope: !12393)
!12393 = distinct !DILexicalBlock(scope: !12389, file: !12008, line: 611, column: 3)
!12394 = !DILocation(line: 617, column: 8, scope: !12395)
!12395 = distinct !DILexicalBlock(scope: !12393, file: !12008, line: 617, column: 8)
!12396 = !DILocation(line: 617, column: 34, scope: !12395)
!12397 = !DILocation(line: 617, column: 8, scope: !12393)
!12398 = !DILocation(line: 624, column: 27, scope: !12399)
!12399 = distinct !DILexicalBlock(scope: !12368, file: !12008, line: 624, column: 6)
!12400 = !DILocation(line: 624, column: 38, scope: !12399)
!12401 = !DILocation(line: 624, column: 60, scope: !12399)
!12402 = !DILocation(line: 624, column: 6, scope: !12368)
!12403 = !DILocation(line: 628, column: 40, scope: !12404)
!12404 = distinct !DILexicalBlock(scope: !12405, file: !12008, line: 628, column: 8)
!12405 = distinct !DILexicalBlock(scope: !12399, file: !12008, line: 625, column: 3)
!12406 = !DILocation(line: 628, column: 63, scope: !12404)
!12407 = !DILocation(line: 628, column: 8, scope: !12405)
!12408 = !DILocation(line: 630, column: 7, scope: !12409)
!12409 = distinct !DILexicalBlock(scope: !12404, file: !12008, line: 629, column: 5)
!12410 = !DILocation(line: 633, column: 29, scope: !12411)
!12411 = distinct !DILexicalBlock(scope: !12405, file: !12008, line: 633, column: 8)
!12412 = !DILocation(line: 631, column: 5, scope: !12409)
!12413 = !DILocation(line: 633, column: 40, scope: !12411)
!12414 = !DILocation(line: 633, column: 63, scope: !12411)
!12415 = !DILocation(line: 633, column: 8, scope: !12405)
!12416 = !DILocation(line: 635, column: 7, scope: !12417)
!12417 = distinct !DILexicalBlock(scope: !12411, file: !12008, line: 634, column: 5)
!12418 = !DILocation(line: 636, column: 5, scope: !12417)
!12419 = !DILocation(line: 639, column: 5, scope: !12405)
!12420 = !DILocation(line: 643, column: 27, scope: !12421)
!12421 = distinct !DILexicalBlock(scope: !12368, file: !12008, line: 643, column: 6)
!12422 = !DILocation(line: 640, column: 3, scope: !12405)
!12423 = !DILocation(line: 643, column: 38, scope: !12421)
!12424 = !DILocation(line: 643, column: 62, scope: !12421)
!12425 = !DILocation(line: 643, column: 6, scope: !12368)
!12426 = !DILocation(line: 648, column: 27, scope: !12427)
!12427 = distinct !DILexicalBlock(scope: !12428, file: !12008, line: 648, column: 8)
!12428 = distinct !DILexicalBlock(scope: !12421, file: !12008, line: 644, column: 3)
!12429 = !DILocation(line: 648, column: 8, scope: !12428)
!12430 = !DILocation(line: 651, column: 10, scope: !12431)
!12431 = distinct !DILexicalBlock(scope: !12432, file: !12008, line: 651, column: 10)
!12432 = distinct !DILexicalBlock(scope: !12427, file: !12008, line: 649, column: 5)
!12433 = !DILocation(line: 651, column: 46, scope: !12431)
!12434 = !DILocation(line: 651, column: 10, scope: !12432)
!12435 = !DILocation(line: 661, column: 10, scope: !12436)
!12436 = distinct !DILexicalBlock(scope: !12437, file: !12008, line: 661, column: 10)
!12437 = distinct !DILexicalBlock(scope: !12438, file: !12008, line: 659, column: 5)
!12438 = distinct !DILexicalBlock(scope: !12427, file: !12008, line: 657, column: 13)
!12439 = !DILocation(line: 661, column: 46, scope: !12436)
!12440 = !DILocation(line: 661, column: 10, scope: !12437)
!12441 = !DILocation(line: 670, column: 10, scope: !12442)
!12442 = distinct !DILexicalBlock(scope: !12443, file: !12008, line: 670, column: 10)
!12443 = distinct !DILexicalBlock(scope: !12438, file: !12008, line: 668, column: 5)
!12444 = !DILocation(line: 670, column: 46, scope: !12442)
!12445 = !DILocation(line: 670, column: 10, scope: !12443)
!12446 = !DILocation(line: 676, column: 5, scope: !12428)
!12447 = !DILocation(line: 679, column: 17, scope: !12428)
!12448 = !DILocation(line: 681, column: 5, scope: !12428)
!12449 = !DILocation(line: 681, column: 12, scope: !12428)
!12450 = !DILocation(line: 681, column: 65, scope: !12428)
!12451 = !DILocation(line: 681, column: 78, scope: !12428)
!12452 = !DILocation(line: 681, column: 42, scope: !12428)
!12453 = !DILocation(line: 683, column: 12, scope: !12454)
!12454 = distinct !DILexicalBlock(scope: !12455, file: !12008, line: 683, column: 11)
!12455 = distinct !DILexicalBlock(scope: !12428, file: !12008, line: 682, column: 5)
!12456 = !DILocation(line: 683, column: 26, scope: !12454)
!12457 = !DILocation(line: 683, column: 39, scope: !12454)
!12458 = !DILocation(line: 683, column: 11, scope: !12455)
!12459 = distinct !{!12459, !12448, !12460}
!12460 = !DILocation(line: 687, column: 5, scope: !12428)
!12461 = !DILocation(line: 691, column: 17, scope: !12462)
!12462 = distinct !DILexicalBlock(scope: !12368, file: !12008, line: 691, column: 6)
!12463 = !DILocation(line: 691, column: 15, scope: !12462)
!12464 = !DILocation(line: 691, column: 6, scope: !12368)
!12465 = !DILocation(line: 694, column: 5, scope: !12466)
!12466 = distinct !DILexicalBlock(scope: !12462, file: !12008, line: 692, column: 3)
!12467 = !DILocation(line: 698, column: 8, scope: !12468)
!12468 = distinct !DILexicalBlock(scope: !12466, file: !12008, line: 698, column: 8)
!12469 = !DILocation(line: 698, column: 34, scope: !12468)
!12470 = !DILocation(line: 698, column: 8, scope: !12466)
!12471 = !DILocation(line: 705, column: 27, scope: !12472)
!12472 = distinct !DILexicalBlock(scope: !12368, file: !12008, line: 705, column: 6)
!12473 = !DILocation(line: 705, column: 38, scope: !12472)
!12474 = !DILocation(line: 705, column: 61, scope: !12472)
!12475 = !DILocation(line: 705, column: 6, scope: !12368)
!12476 = !DILocation(line: 708, column: 5, scope: !12477)
!12477 = distinct !DILexicalBlock(scope: !12472, file: !12008, line: 706, column: 3)
!12478 = !DILocation(line: 712, column: 27, scope: !12479)
!12479 = distinct !DILexicalBlock(scope: !12368, file: !12008, line: 712, column: 6)
!12480 = !DILocation(line: 709, column: 3, scope: !12477)
!12481 = !DILocation(line: 712, column: 38, scope: !12479)
!12482 = !DILocation(line: 712, column: 61, scope: !12479)
!12483 = !DILocation(line: 712, column: 6, scope: !12368)
!12484 = !DILocation(line: 715, column: 5, scope: !12485)
!12485 = distinct !DILexicalBlock(scope: !12479, file: !12008, line: 713, column: 3)
!12486 = !DILocation(line: 716, column: 3, scope: !12485)
!12487 = !DILocation(line: 719, column: 21, scope: !12368)
!12488 = !DILocation(line: 719, column: 70, scope: !12368)
!12489 = !DILocation(line: 719, column: 91, scope: !12368)
!12490 = !DILocation(line: 719, column: 50, scope: !12368)
!12491 = !DILocation(line: 719, column: 47, scope: !12368)
!12492 = !DILocation(line: 719, column: 19, scope: !12368)
!12493 = !DILocation(line: 722, column: 17, scope: !12368)
!12494 = !DILocation(line: 722, column: 3, scope: !12368)
!12495 = !DILocation(line: 724, column: 3, scope: !12368)
!12496 = !DILocation(line: 725, column: 1, scope: !12368)
!12497 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !12008, file: !12008, line: 885, type: !6481, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3036, retainedNodes: !12498)
!12498 = !{!12499, !12500, !12501, !12502}
!12499 = !DILocalVariable(name: "pllm", scope: !12497, file: !12008, line: 887, type: !152)
!12500 = !DILocalVariable(name: "pllvco", scope: !12497, file: !12008, line: 887, type: !152)
!12501 = !DILocalVariable(name: "pllp", scope: !12497, file: !12008, line: 887, type: !152)
!12502 = !DILocalVariable(name: "sysclockfreq", scope: !12497, file: !12008, line: 888, type: !152)
!12503 = !DILocation(line: 0, scope: !12497)
!12504 = !DILocation(line: 891, column: 16, scope: !12497)
!12505 = !DILocation(line: 891, column: 21, scope: !12497)
!12506 = !DILocation(line: 891, column: 3, scope: !12497)
!12507 = !DILocation(line: 901, column: 7, scope: !12508)
!12508 = distinct !DILexicalBlock(scope: !12509, file: !12008, line: 899, column: 5)
!12509 = distinct !DILexicalBlock(scope: !12497, file: !12008, line: 892, column: 3)
!12510 = !DILocation(line: 907, column: 19, scope: !12511)
!12511 = distinct !DILexicalBlock(scope: !12509, file: !12008, line: 904, column: 5)
!12512 = !DILocation(line: 907, column: 27, scope: !12511)
!12513 = !DILocation(line: 908, column: 10, scope: !12514)
!12514 = distinct !DILexicalBlock(scope: !12511, file: !12008, line: 908, column: 10)
!12515 = !DILocation(line: 908, column: 40, scope: !12514)
!12516 = !DILocation(line: 0, scope: !12514)
!12517 = !DILocation(line: 918, column: 23, scope: !12511)
!12518 = !DILocation(line: 918, column: 82, scope: !12511)
!12519 = !DILocation(line: 920, column: 28, scope: !12511)
!12520 = !DILocation(line: 921, column: 7, scope: !12511)
!12521 = !DILocation(line: 0, scope: !12509)
!12522 = !DILocation(line: 929, column: 3, scope: !12497)
!12523 = !DISubprogram(name: "HAL_InitTick", scope: !12367, file: !12367, line: 223, type: !12524, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2296)
!12524 = !DISubroutineType(types: !12525)
!12525 = !{!12011, !152}
!12526 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !12008, file: !12008, line: 775, type: !12527, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3036, retainedNodes: !12529)
!12527 = !DISubroutineType(types: !12528)
!12528 = !{null, !152, !152, !152}
!12529 = !{!12530, !12531, !12532, !12533, !12543, !12547}
!12530 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !12526, file: !12008, line: 775, type: !152)
!12531 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !12526, file: !12008, line: 775, type: !152)
!12532 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !12526, file: !12008, line: 775, type: !152)
!12533 = !DILocalVariable(name: "GPIO_InitStruct", scope: !12526, file: !12008, line: 777, type: !12534)
!12534 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !12535, line: 62, baseType: !12536)
!12535 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12536 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12535, line: 46, size: 160, elements: !12537)
!12537 = !{!12538, !12539, !12540, !12541, !12542}
!12538 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !12536, file: !12535, line: 48, baseType: !152, size: 32)
!12539 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !12536, file: !12535, line: 51, baseType: !152, size: 32, offset: 32)
!12540 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !12536, file: !12535, line: 54, baseType: !152, size: 32, offset: 64)
!12541 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !12536, file: !12535, line: 57, baseType: !152, size: 32, offset: 96)
!12542 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !12536, file: !12535, line: 60, baseType: !152, size: 32, offset: 128)
!12543 = !DILocalVariable(name: "tmpreg", scope: !12544, file: !12008, line: 787, type: !227)
!12544 = distinct !DILexicalBlock(scope: !12545, file: !12008, line: 787, column: 5)
!12545 = distinct !DILexicalBlock(scope: !12546, file: !12008, line: 783, column: 3)
!12546 = distinct !DILexicalBlock(scope: !12526, file: !12008, line: 782, column: 6)
!12547 = !DILocalVariable(name: "tmpreg", scope: !12548, file: !12008, line: 811, type: !227)
!12548 = distinct !DILexicalBlock(scope: !12549, file: !12008, line: 811, column: 5)
!12549 = distinct !DILexicalBlock(scope: !12546, file: !12008, line: 807, column: 3)
!12550 = !DILocation(line: 0, scope: !12526)
!12551 = !DILocation(line: 777, column: 3, scope: !12526)
!12552 = !DILocation(line: 777, column: 20, scope: !12526)
!12553 = !DILocation(line: 782, column: 15, scope: !12546)
!12554 = !DILocation(line: 782, column: 6, scope: !12526)
!12555 = !DILocation(line: 787, column: 5, scope: !12544)
!12556 = !DILocation(line: 787, column: 5, scope: !12545)
!12557 = !DILocation(line: 790, column: 21, scope: !12545)
!12558 = !DILocation(line: 790, column: 25, scope: !12545)
!12559 = !DILocation(line: 791, column: 21, scope: !12545)
!12560 = !DILocation(line: 791, column: 26, scope: !12545)
!12561 = !DILocation(line: 792, column: 21, scope: !12545)
!12562 = !DILocation(line: 792, column: 27, scope: !12545)
!12563 = !DILocation(line: 793, column: 21, scope: !12545)
!12564 = !DILocation(line: 793, column: 26, scope: !12545)
!12565 = !DILocation(line: 794, column: 21, scope: !12545)
!12566 = !DILocation(line: 794, column: 31, scope: !12545)
!12567 = !DILocation(line: 795, column: 5, scope: !12545)
!12568 = !DILocation(line: 798, column: 5, scope: !12545)
!12569 = !DILocation(line: 804, column: 3, scope: !12545)
!12570 = !DILocation(line: 811, column: 5, scope: !12548)
!12571 = !DILocation(line: 811, column: 5, scope: !12549)
!12572 = !DILocation(line: 814, column: 21, scope: !12549)
!12573 = !DILocation(line: 814, column: 25, scope: !12549)
!12574 = !DILocation(line: 815, column: 21, scope: !12549)
!12575 = !DILocation(line: 815, column: 26, scope: !12549)
!12576 = !DILocation(line: 816, column: 21, scope: !12549)
!12577 = !DILocation(line: 816, column: 27, scope: !12549)
!12578 = !DILocation(line: 817, column: 21, scope: !12549)
!12579 = !DILocation(line: 817, column: 26, scope: !12549)
!12580 = !DILocation(line: 818, column: 21, scope: !12549)
!12581 = !DILocation(line: 818, column: 31, scope: !12549)
!12582 = !DILocation(line: 819, column: 5, scope: !12549)
!12583 = !DILocation(line: 822, column: 5, scope: !12549)
!12584 = !DILocation(line: 0, scope: !12546)
!12585 = !DILocation(line: 830, column: 1, scope: !12526)
!12586 = !DISubprogram(name: "HAL_GPIO_Init", scope: !12535, file: !12535, line: 224, type: !12587, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2296)
!12587 = !DISubroutineType(types: !12588)
!12588 = !{null, !3109, !12589}
!12589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12534, size: 32)
!12590 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !12008, file: !12008, line: 841, type: !3227, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3036, retainedNodes: !2296)
!12591 = !DILocation(line: 843, column: 38, scope: !12590)
!12592 = !DILocation(line: 844, column: 1, scope: !12590)
!12593 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !12008, file: !12008, line: 850, type: !3227, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3036, retainedNodes: !2296)
!12594 = !DILocation(line: 852, column: 38, scope: !12593)
!12595 = !DILocation(line: 853, column: 1, scope: !12593)
!12596 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !12008, file: !12008, line: 941, type: !6481, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3036, retainedNodes: !2296)
!12597 = !DILocation(line: 943, column: 10, scope: !12596)
!12598 = !DILocation(line: 943, column: 3, scope: !12596)
!12599 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !12008, file: !12008, line: 952, type: !6481, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3036, retainedNodes: !2296)
!12600 = !DILocation(line: 955, column: 11, scope: !12599)
!12601 = !DILocation(line: 955, column: 56, scope: !12599)
!12602 = !DILocation(line: 955, column: 78, scope: !12599)
!12603 = !DILocation(line: 955, column: 36, scope: !12599)
!12604 = !DILocation(line: 955, column: 33, scope: !12599)
!12605 = !DILocation(line: 955, column: 3, scope: !12599)
!12606 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !12008, file: !12008, line: 964, type: !6481, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3036, retainedNodes: !2296)
!12607 = !DILocation(line: 967, column: 11, scope: !12606)
!12608 = !DILocation(line: 967, column: 55, scope: !12606)
!12609 = !DILocation(line: 967, column: 77, scope: !12606)
!12610 = !DILocation(line: 967, column: 35, scope: !12606)
!12611 = !DILocation(line: 967, column: 32, scope: !12606)
!12612 = !DILocation(line: 967, column: 3, scope: !12606)
!12613 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !12008, file: !12008, line: 977, type: !12614, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3036, retainedNodes: !12616)
!12614 = !DISubroutineType(types: !12615)
!12615 = !{null, !12016}
!12616 = !{!12617}
!12617 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12613, file: !12008, line: 977, type: !12016)
!12618 = !DILocation(line: 0, scope: !12613)
!12619 = !DILocation(line: 980, column: 22, scope: !12613)
!12620 = !DILocation(line: 980, column: 37, scope: !12613)
!12621 = !DILocation(line: 983, column: 12, scope: !12622)
!12622 = distinct !DILexicalBlock(scope: !12613, file: !12008, line: 983, column: 6)
!12623 = !DILocation(line: 983, column: 15, scope: !12622)
!12624 = !DILocation(line: 983, column: 31, scope: !12622)
!12625 = !DILocation(line: 983, column: 6, scope: !12613)
!12626 = !DILocation(line: 985, column: 24, scope: !12627)
!12627 = distinct !DILexicalBlock(scope: !12622, file: !12008, line: 984, column: 3)
!12628 = !DILocation(line: 985, column: 33, scope: !12627)
!12629 = !DILocation(line: 986, column: 3, scope: !12627)
!12630 = !DILocation(line: 987, column: 17, scope: !12631)
!12631 = distinct !DILexicalBlock(scope: !12622, file: !12008, line: 987, column: 11)
!12632 = !DILocation(line: 987, column: 20, scope: !12631)
!12633 = !DILocation(line: 987, column: 35, scope: !12631)
!12634 = !DILocation(line: 0, scope: !12631)
!12635 = !DILocation(line: 987, column: 11, scope: !12622)
!12636 = !DILocation(line: 989, column: 33, scope: !12637)
!12637 = distinct !DILexicalBlock(scope: !12631, file: !12008, line: 988, column: 3)
!12638 = !DILocation(line: 990, column: 3, scope: !12637)
!12639 = !DILocation(line: 993, column: 33, scope: !12640)
!12640 = distinct !DILexicalBlock(scope: !12631, file: !12008, line: 992, column: 3)
!12641 = !DILocation(line: 997, column: 12, scope: !12642)
!12642 = distinct !DILexicalBlock(scope: !12613, file: !12008, line: 997, column: 6)
!12643 = !DILocation(line: 997, column: 15, scope: !12642)
!12644 = !DILocation(line: 1003, column: 24, scope: !12645)
!12645 = distinct !DILexicalBlock(scope: !12642, file: !12008, line: 1002, column: 3)
!12646 = !DILocation(line: 1003, column: 33, scope: !12645)
!12647 = !DILocation(line: 1006, column: 61, scope: !12613)
!12648 = !DILocation(line: 1006, column: 81, scope: !12613)
!12649 = !DILocation(line: 1006, column: 22, scope: !12613)
!12650 = !DILocation(line: 1006, column: 42, scope: !12613)
!12651 = !DILocation(line: 1009, column: 12, scope: !12652)
!12652 = distinct !DILexicalBlock(scope: !12613, file: !12008, line: 1009, column: 6)
!12653 = !DILocation(line: 1009, column: 17, scope: !12652)
!12654 = !DILocation(line: 1009, column: 35, scope: !12652)
!12655 = !DILocation(line: 1009, column: 6, scope: !12613)
!12656 = !DILocation(line: 1011, column: 24, scope: !12657)
!12657 = distinct !DILexicalBlock(scope: !12652, file: !12008, line: 1010, column: 3)
!12658 = !DILocation(line: 1011, column: 33, scope: !12657)
!12659 = !DILocation(line: 1012, column: 3, scope: !12657)
!12660 = !DILocation(line: 1013, column: 17, scope: !12661)
!12661 = distinct !DILexicalBlock(scope: !12652, file: !12008, line: 1013, column: 11)
!12662 = !DILocation(line: 1013, column: 22, scope: !12661)
!12663 = !DILocation(line: 1013, column: 39, scope: !12661)
!12664 = !DILocation(line: 0, scope: !12661)
!12665 = !DILocation(line: 1013, column: 11, scope: !12652)
!12666 = !DILocation(line: 1015, column: 33, scope: !12667)
!12667 = distinct !DILexicalBlock(scope: !12661, file: !12008, line: 1014, column: 3)
!12668 = !DILocation(line: 1016, column: 3, scope: !12667)
!12669 = !DILocation(line: 1019, column: 33, scope: !12670)
!12670 = distinct !DILexicalBlock(scope: !12661, file: !12008, line: 1018, column: 3)
!12671 = !DILocation(line: 1023, column: 12, scope: !12672)
!12672 = distinct !DILexicalBlock(scope: !12613, file: !12008, line: 1023, column: 6)
!12673 = !DILocation(line: 1023, column: 16, scope: !12672)
!12674 = !DILocation(line: 1029, column: 24, scope: !12675)
!12675 = distinct !DILexicalBlock(scope: !12672, file: !12008, line: 1028, column: 3)
!12676 = !DILocation(line: 1029, column: 33, scope: !12675)
!12677 = !DILocation(line: 1033, column: 12, scope: !12678)
!12678 = distinct !DILexicalBlock(scope: !12613, file: !12008, line: 1033, column: 6)
!12679 = !DILocation(line: 1033, column: 15, scope: !12678)
!12680 = !DILocation(line: 1033, column: 30, scope: !12678)
!12681 = !DILocation(line: 1033, column: 6, scope: !12613)
!12682 = !DILocation(line: 1039, column: 28, scope: !12683)
!12683 = distinct !DILexicalBlock(scope: !12678, file: !12008, line: 1038, column: 3)
!12684 = !DILocation(line: 1039, column: 37, scope: !12683)
!12685 = !DILocation(line: 1041, column: 54, scope: !12613)
!12686 = !DILocation(line: 1041, column: 62, scope: !12613)
!12687 = !DILocation(line: 1041, column: 26, scope: !12613)
!12688 = !DILocation(line: 1041, column: 36, scope: !12613)
!12689 = !DILocation(line: 1042, column: 49, scope: !12613)
!12690 = !DILocation(line: 1042, column: 57, scope: !12613)
!12691 = !DILocation(line: 1042, column: 26, scope: !12613)
!12692 = !DILocation(line: 1042, column: 31, scope: !12613)
!12693 = !DILocation(line: 1043, column: 50, scope: !12613)
!12694 = !DILocation(line: 1043, column: 78, scope: !12613)
!12695 = !DILocation(line: 1043, column: 26, scope: !12613)
!12696 = !DILocation(line: 1043, column: 31, scope: !12613)
!12697 = !DILocation(line: 1044, column: 52, scope: !12613)
!12698 = !DILocation(line: 1044, column: 102, scope: !12613)
!12699 = !DILocation(line: 1044, column: 109, scope: !12613)
!12700 = !DILocation(line: 1044, column: 26, scope: !12613)
!12701 = !DILocation(line: 1044, column: 31, scope: !12613)
!12702 = !DILocation(line: 1045, column: 50, scope: !12613)
!12703 = !DILocation(line: 1045, column: 78, scope: !12613)
!12704 = !DILocation(line: 1045, column: 26, scope: !12613)
!12705 = !DILocation(line: 1045, column: 31, scope: !12613)
!12706 = !DILocation(line: 1046, column: 1, scope: !12613)
!12707 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !12008, file: !12008, line: 1056, type: !12708, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3036, retainedNodes: !12710)
!12708 = !DISubroutineType(types: !12709)
!12709 = !{null, !12371, !1040}
!12710 = !{!12711, !12712}
!12711 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12707, file: !12008, line: 1056, type: !12371)
!12712 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !12707, file: !12008, line: 1056, type: !1040)
!12713 = !DILocation(line: 0, scope: !12707)
!12714 = !DILocation(line: 1059, column: 22, scope: !12707)
!12715 = !DILocation(line: 1059, column: 32, scope: !12707)
!12716 = !DILocation(line: 1062, column: 53, scope: !12707)
!12717 = !DILocation(line: 1062, column: 58, scope: !12707)
!12718 = !DILocation(line: 1062, column: 22, scope: !12707)
!12719 = !DILocation(line: 1062, column: 35, scope: !12707)
!12720 = !DILocation(line: 1065, column: 54, scope: !12707)
!12721 = !DILocation(line: 1065, column: 59, scope: !12707)
!12722 = !DILocation(line: 1065, column: 22, scope: !12707)
!12723 = !DILocation(line: 1065, column: 36, scope: !12707)
!12724 = !DILocation(line: 1068, column: 55, scope: !12707)
!12725 = !DILocation(line: 1068, column: 60, scope: !12707)
!12726 = !DILocation(line: 1068, column: 22, scope: !12707)
!12727 = !DILocation(line: 1068, column: 37, scope: !12707)
!12728 = !DILocation(line: 1071, column: 56, scope: !12707)
!12729 = !DILocation(line: 1071, column: 79, scope: !12707)
!12730 = !DILocation(line: 1071, column: 22, scope: !12707)
!12731 = !DILocation(line: 1071, column: 37, scope: !12707)
!12732 = !DILocation(line: 1074, column: 34, scope: !12707)
!12733 = !DILocation(line: 1074, column: 38, scope: !12707)
!12734 = !DILocation(line: 1074, column: 14, scope: !12707)
!12735 = !DILocation(line: 1075, column: 1, scope: !12707)
!12736 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !12008, file: !12008, line: 1082, type: !3227, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3036, retainedNodes: !2296)
!12737 = !DILocation(line: 1085, column: 6, scope: !12738)
!12738 = distinct !DILexicalBlock(scope: !12736, file: !12008, line: 1085, column: 6)
!12739 = !DILocation(line: 1085, column: 6, scope: !12736)
!12740 = !DILocation(line: 1088, column: 5, scope: !12741)
!12741 = distinct !DILexicalBlock(scope: !12738, file: !12008, line: 1086, column: 3)
!12742 = !DILocation(line: 1091, column: 5, scope: !12741)
!12743 = !DILocation(line: 1092, column: 3, scope: !12741)
!12744 = !DILocation(line: 1093, column: 1, scope: !12736)
!12745 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !12008, file: !12008, line: 1099, type: !3227, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3036, retainedNodes: !2296)
!12746 = !DILocation(line: 1104, column: 1, scope: !12745)
!12747 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !12748, file: !12748, line: 257, type: !6491, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3122, retainedNodes: !12749)
!12748 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12749 = !{!12750}
!12750 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12747, file: !12748, line: 257, type: !152)
!12751 = !DILocation(line: 0, scope: !12747)
!12752 = !DILocation(line: 260, column: 3, scope: !12747)
!12753 = !DILocation(line: 261, column: 1, scope: !12747)
!12754 = distinct !DISubprogram(name: "LL_InitTick", scope: !12755, file: !12755, line: 260, type: !10367, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3122, retainedNodes: !12756)
!12755 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12756 = !{!12757, !12758}
!12757 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12754, file: !12755, line: 260, type: !152)
!12758 = !DILocalVariable(name: "Ticks", arg: 2, scope: !12754, file: !12755, line: 260, type: !152)
!12759 = !DILocation(line: 0, scope: !12754)
!12760 = !DILocation(line: 263, column: 46, scope: !12754)
!12761 = !DILocation(line: 263, column: 55, scope: !12754)
!12762 = !DILocation(line: 263, column: 18, scope: !12754)
!12763 = !DILocation(line: 264, column: 18, scope: !12754)
!12764 = !DILocation(line: 265, column: 18, scope: !12754)
!12765 = !DILocation(line: 267, column: 1, scope: !12754)
!12766 = distinct !DISubprogram(name: "LL_mDelay", scope: !12748, file: !12748, line: 273, type: !6491, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3122, retainedNodes: !12767)
!12767 = !{!12768, !12769}
!12768 = !DILocalVariable(name: "Delay", arg: 1, scope: !12766, file: !12748, line: 273, type: !152)
!12769 = !DILocalVariable(name: "tmp", scope: !12766, file: !12748, line: 275, type: !227)
!12770 = !DILocation(line: 0, scope: !12766)
!12771 = !DILocation(line: 275, column: 3, scope: !12766)
!12772 = !DILocation(line: 275, column: 18, scope: !12766)
!12773 = !DILocation(line: 275, column: 33, scope: !12766)
!12774 = !DILocation(line: 277, column: 10, scope: !12766)
!12775 = !DILocation(line: 280, column: 12, scope: !12776)
!12776 = distinct !DILexicalBlock(scope: !12766, file: !12748, line: 280, column: 6)
!12777 = !DILocation(line: 285, column: 3, scope: !12766)
!12778 = !DILocation(line: 287, column: 18, scope: !12779)
!12779 = distinct !DILexicalBlock(scope: !12780, file: !12748, line: 287, column: 8)
!12780 = distinct !DILexicalBlock(scope: !12766, file: !12748, line: 286, column: 3)
!12781 = !DILocation(line: 292, column: 1, scope: !12766)
!12782 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !12748, file: !12748, line: 323, type: !6491, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3122, retainedNodes: !12783)
!12783 = !{!12784}
!12784 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12782, file: !12748, line: 323, type: !152)
!12785 = !DILocation(line: 0, scope: !12782)
!12786 = !DILocation(line: 326, column: 19, scope: !12782)
!12787 = !DILocation(line: 327, column: 1, scope: !12782)
!12788 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !12748, file: !12748, line: 338, type: !12789, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3122, retainedNodes: !12792)
!12789 = !DISubroutineType(types: !12790)
!12790 = !{!12791, !152}
!12791 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !985, line: 201, baseType: !984)
!12792 = !{!12793, !12794, !12795, !12796, !12797}
!12793 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !12788, file: !12748, line: 338, type: !152)
!12794 = !DILocalVariable(name: "timeout", scope: !12788, file: !12748, line: 340, type: !152)
!12795 = !DILocalVariable(name: "getlatency", scope: !12788, file: !12748, line: 341, type: !152)
!12796 = !DILocalVariable(name: "latency", scope: !12788, file: !12748, line: 342, type: !152)
!12797 = !DILocalVariable(name: "status", scope: !12788, file: !12748, line: 343, type: !12791)
!12798 = !DILocation(line: 0, scope: !12788)
!12799 = !DILocation(line: 347, column: 21, scope: !12800)
!12800 = distinct !DILexicalBlock(scope: !12788, file: !12748, line: 347, column: 6)
!12801 = !DILocation(line: 347, column: 6, scope: !12788)
!12802 = !DILocation(line: 353, column: 8, scope: !12803)
!12803 = distinct !DILexicalBlock(scope: !12804, file: !12748, line: 353, column: 8)
!12804 = distinct !DILexicalBlock(scope: !12800, file: !12748, line: 352, column: 3)
!12805 = !DILocation(line: 353, column: 40, scope: !12803)
!12806 = !DILocation(line: 353, column: 8, scope: !12804)
!12807 = !DILocation(line: 356, column: 26, scope: !12808)
!12808 = distinct !DILexicalBlock(scope: !12809, file: !12748, line: 356, column: 10)
!12809 = distinct !DILexicalBlock(scope: !12803, file: !12748, line: 354, column: 5)
!12810 = !DILocation(line: 356, column: 55, scope: !12808)
!12811 = !DILocation(line: 362, column: 55, scope: !12812)
!12812 = distinct !DILexicalBlock(scope: !12809, file: !12748, line: 362, column: 10)
!12813 = !DILocation(line: 368, column: 55, scope: !12814)
!12814 = distinct !DILexicalBlock(scope: !12809, file: !12748, line: 368, column: 10)
!12815 = !DILocation(line: 374, column: 26, scope: !12816)
!12816 = distinct !DILexicalBlock(scope: !12809, file: !12748, line: 374, column: 10)
!12817 = !DILocation(line: 374, column: 55, scope: !12816)
!12818 = !DILocation(line: 380, column: 28, scope: !12819)
!12819 = distinct !DILexicalBlock(scope: !12820, file: !12748, line: 380, column: 12)
!12820 = distinct !DILexicalBlock(scope: !12816, file: !12748, line: 379, column: 7)
!12821 = !DILocation(line: 380, column: 57, scope: !12819)
!12822 = !DILocation(line: 387, column: 8, scope: !12823)
!12823 = distinct !DILexicalBlock(scope: !12804, file: !12748, line: 387, column: 8)
!12824 = !DILocation(line: 387, column: 40, scope: !12823)
!12825 = !DILocation(line: 387, column: 8, scope: !12804)
!12826 = !DILocation(line: 390, column: 26, scope: !12827)
!12827 = distinct !DILexicalBlock(scope: !12828, file: !12748, line: 390, column: 10)
!12828 = distinct !DILexicalBlock(scope: !12823, file: !12748, line: 388, column: 5)
!12829 = !DILocation(line: 390, column: 55, scope: !12827)
!12830 = !DILocation(line: 396, column: 26, scope: !12831)
!12831 = distinct !DILexicalBlock(scope: !12828, file: !12748, line: 396, column: 10)
!12832 = !DILocation(line: 396, column: 55, scope: !12831)
!12833 = !DILocation(line: 402, column: 26, scope: !12834)
!12834 = distinct !DILexicalBlock(scope: !12828, file: !12748, line: 402, column: 10)
!12835 = !DILocation(line: 402, column: 55, scope: !12834)
!12836 = !DILocation(line: 407, column: 26, scope: !12837)
!12837 = distinct !DILexicalBlock(scope: !12828, file: !12748, line: 407, column: 10)
!12838 = !DILocation(line: 407, column: 55, scope: !12837)
!12839 = !DILocation(line: 413, column: 28, scope: !12840)
!12840 = distinct !DILexicalBlock(scope: !12841, file: !12748, line: 413, column: 12)
!12841 = distinct !DILexicalBlock(scope: !12837, file: !12748, line: 412, column: 7)
!12842 = !DILocation(line: 413, column: 57, scope: !12840)
!12843 = !DILocation(line: 0, scope: !12804)
!12844 = !DILocation(line: 420, column: 8, scope: !12845)
!12845 = distinct !DILexicalBlock(scope: !12804, file: !12748, line: 420, column: 8)
!12846 = !DILocation(line: 420, column: 40, scope: !12845)
!12847 = !DILocation(line: 420, column: 8, scope: !12804)
!12848 = !DILocation(line: 423, column: 26, scope: !12849)
!12849 = distinct !DILexicalBlock(scope: !12850, file: !12748, line: 423, column: 10)
!12850 = distinct !DILexicalBlock(scope: !12845, file: !12748, line: 421, column: 5)
!12851 = !DILocation(line: 423, column: 55, scope: !12849)
!12852 = !DILocation(line: 429, column: 26, scope: !12853)
!12853 = distinct !DILexicalBlock(scope: !12850, file: !12748, line: 429, column: 10)
!12854 = !DILocation(line: 429, column: 55, scope: !12853)
!12855 = !DILocation(line: 435, column: 28, scope: !12856)
!12856 = distinct !DILexicalBlock(scope: !12857, file: !12748, line: 435, column: 12)
!12857 = distinct !DILexicalBlock(scope: !12853, file: !12748, line: 434, column: 7)
!12858 = !DILocation(line: 435, column: 57, scope: !12856)
!12859 = !DILocation(line: 444, column: 5, scope: !12804)
!12860 = !DILocation(line: 448, column: 5, scope: !12804)
!12861 = !DILocation(line: 451, column: 18, scope: !12862)
!12862 = distinct !DILexicalBlock(scope: !12804, file: !12748, line: 449, column: 5)
!12863 = !DILocation(line: 452, column: 12, scope: !12862)
!12864 = !DILocation(line: 453, column: 26, scope: !12804)
!12865 = !DILocation(line: 453, column: 38, scope: !12804)
!12866 = !DILocation(line: 453, column: 5, scope: !12862)
!12867 = distinct !{!12867, !12860, !12868}
!12868 = !DILocation(line: 453, column: 54, scope: !12804)
!12869 = !DILocation(line: 0, scope: !12800)
!12870 = !DILocation(line: 464, column: 3, scope: !12788)
!12871 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !12872, file: !12872, line: 519, type: !6481, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3122, retainedNodes: !2296)
!12872 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12873 = !DILocation(line: 521, column: 21, scope: !12871)
!12874 = !DILocation(line: 521, column: 3, scope: !12871)
!12875 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !6096, file: !6096, line: 1543, type: !6491, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3122, retainedNodes: !12876)
!12876 = !{!12877}
!12877 = !DILocalVariable(name: "Latency", arg: 1, scope: !12875, file: !6096, line: 1543, type: !152)
!12878 = !DILocation(line: 0, scope: !12875)
!12879 = !DILocation(line: 1545, column: 3, scope: !12875)
!12880 = !DILocation(line: 1546, column: 1, scope: !12875)
!12881 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !6096, file: !6096, line: 1569, type: !6481, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3122, retainedNodes: !2296)
!12882 = !DILocation(line: 1571, column: 21, scope: !12881)
!12883 = !DILocation(line: 1571, column: 3, scope: !12881)
!12884 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !12748, file: !12748, line: 483, type: !12885, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3122, retainedNodes: !12901)
!12885 = !DISubroutineType(types: !12886)
!12886 = !{!12791, !12887, !12894}
!12887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12888, size: 32)
!12888 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !12755, line: 114, baseType: !12889)
!12889 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12755, line: 94, size: 96, elements: !12890)
!12890 = !{!12891, !12892, !12893}
!12891 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !12889, file: !12755, line: 96, baseType: !152, size: 32)
!12892 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !12889, file: !12755, line: 102, baseType: !152, size: 32, offset: 32)
!12893 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !12889, file: !12755, line: 109, baseType: !152, size: 32, offset: 64)
!12894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12895, size: 32)
!12895 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !12755, line: 139, baseType: !12896)
!12896 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12755, line: 119, size: 96, elements: !12897)
!12897 = !{!12898, !12899, !12900}
!12898 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12896, file: !12755, line: 121, baseType: !152, size: 32)
!12899 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12896, file: !12755, line: 127, baseType: !152, size: 32, offset: 32)
!12900 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12896, file: !12755, line: 133, baseType: !152, size: 32, offset: 64)
!12901 = !{!12902, !12903, !12904, !12905}
!12902 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !12884, file: !12748, line: 483, type: !12887)
!12903 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12884, file: !12748, line: 484, type: !12894)
!12904 = !DILocalVariable(name: "status", scope: !12884, file: !12748, line: 486, type: !12791)
!12905 = !DILocalVariable(name: "pllfreq", scope: !12884, file: !12748, line: 487, type: !152)
!12906 = !DILocation(line: 0, scope: !12884)
!12907 = !DILocation(line: 490, column: 6, scope: !12908)
!12908 = distinct !DILexicalBlock(scope: !12884, file: !12748, line: 490, column: 6)
!12909 = !DILocation(line: 490, column: 25, scope: !12908)
!12910 = !DILocation(line: 490, column: 6, scope: !12884)
!12911 = !DILocation(line: 493, column: 15, scope: !12912)
!12912 = distinct !DILexicalBlock(scope: !12908, file: !12748, line: 491, column: 3)
!12913 = !DILocation(line: 496, column: 8, scope: !12914)
!12914 = distinct !DILexicalBlock(scope: !12912, file: !12748, line: 496, column: 8)
!12915 = !DILocation(line: 496, column: 29, scope: !12914)
!12916 = !DILocation(line: 496, column: 8, scope: !12912)
!12917 = !DILocation(line: 498, column: 7, scope: !12918)
!12918 = distinct !DILexicalBlock(scope: !12914, file: !12748, line: 497, column: 5)
!12919 = !DILocation(line: 499, column: 7, scope: !12918)
!12920 = !DILocation(line: 499, column: 14, scope: !12918)
!12921 = !DILocation(line: 499, column: 35, scope: !12918)
!12922 = distinct !{!12922, !12919, !12923}
!12923 = !DILocation(line: 502, column: 7, scope: !12918)
!12924 = !DILocation(line: 506, column: 76, scope: !12912)
!12925 = !DILocation(line: 506, column: 103, scope: !12912)
!12926 = !DILocation(line: 507, column: 54, scope: !12912)
!12927 = !DILocation(line: 506, column: 5, scope: !12912)
!12928 = !DILocation(line: 510, column: 14, scope: !12912)
!12929 = !DILocation(line: 511, column: 3, scope: !12912)
!12930 = !DILocation(line: 0, scope: !12908)
!12931 = !DILocation(line: 518, column: 3, scope: !12884)
!12932 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !12748, file: !12748, line: 642, type: !12933, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3122, retainedNodes: !12935)
!12933 = !DISubroutineType(types: !12934)
!12934 = !{!12791}
!12935 = !{!12936}
!12936 = !DILocalVariable(name: "status", scope: !12932, file: !12748, line: 644, type: !12791)
!12937 = !DILocation(line: 0, scope: !12932)
!12938 = !DILocation(line: 647, column: 6, scope: !12939)
!12939 = distinct !DILexicalBlock(scope: !12932, file: !12748, line: 647, column: 6)
!12940 = !DILocation(line: 647, column: 27, scope: !12939)
!12941 = !DILocation(line: 655, column: 6, scope: !12942)
!12942 = distinct !DILexicalBlock(scope: !12932, file: !12748, line: 655, column: 6)
!12943 = !DILocation(line: 655, column: 30, scope: !12942)
!12944 = !DILocation(line: 663, column: 6, scope: !12945)
!12945 = distinct !DILexicalBlock(scope: !12932, file: !12748, line: 663, column: 6)
!12946 = !DILocation(line: 663, column: 30, scope: !12945)
!12947 = !DILocation(line: 663, column: 6, scope: !12932)
!12948 = !DILocation(line: 669, column: 3, scope: !12932)
!12949 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !12748, file: !12748, line: 611, type: !12950, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3122, retainedNodes: !12952)
!12950 = !DISubroutineType(types: !12951)
!12951 = !{!152, !152, !12887}
!12952 = !{!12953, !12954, !12955}
!12953 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !12949, file: !12748, line: 611, type: !152)
!12954 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !12949, file: !12748, line: 611, type: !12887)
!12955 = !DILocalVariable(name: "pllfreq", scope: !12949, file: !12748, line: 613, type: !152)
!12956 = !DILocation(line: 0, scope: !12949)
!12957 = !DILocation(line: 622, column: 56, scope: !12949)
!12958 = !DILocation(line: 622, column: 61, scope: !12949)
!12959 = !DILocation(line: 622, column: 32, scope: !12949)
!12960 = !DILocation(line: 626, column: 45, scope: !12949)
!12961 = !DILocation(line: 626, column: 50, scope: !12949)
!12962 = !DILocation(line: 626, column: 21, scope: !12949)
!12963 = !DILocation(line: 630, column: 47, scope: !12949)
!12964 = !DILocation(line: 630, column: 82, scope: !12949)
!12965 = !DILocation(line: 630, column: 21, scope: !12949)
!12966 = !DILocation(line: 633, column: 3, scope: !12949)
!12967 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !9708, file: !9708, line: 3007, type: !6481, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3122, retainedNodes: !2296)
!12968 = !DILocation(line: 3009, column: 11, scope: !12967)
!12969 = !DILocation(line: 3009, column: 44, scope: !12967)
!12970 = !DILocation(line: 3009, column: 3, scope: !12967)
!12971 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !9708, file: !9708, line: 2987, type: !3227, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3122, retainedNodes: !2296)
!12972 = !DILocation(line: 2989, column: 3, scope: !12971)
!12973 = !DILocation(line: 2990, column: 1, scope: !12971)
!12974 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !9708, file: !9708, line: 4304, type: !9827, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3122, retainedNodes: !12975)
!12975 = !{!12976, !12977, !12978, !12979}
!12976 = !DILocalVariable(name: "Source", arg: 1, scope: !12974, file: !9708, line: 4304, type: !152)
!12977 = !DILocalVariable(name: "PLLM", arg: 2, scope: !12974, file: !9708, line: 4304, type: !152)
!12978 = !DILocalVariable(name: "PLLN", arg: 3, scope: !12974, file: !9708, line: 4304, type: !152)
!12979 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !12974, file: !9708, line: 4304, type: !152)
!12980 = !DILocation(line: 0, scope: !12974)
!12981 = !DILocation(line: 4306, column: 3, scope: !12974)
!12982 = !DILocation(line: 4308, column: 3, scope: !12974)
!12983 = !DILocation(line: 4312, column: 1, scope: !12974)
!12984 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !12748, file: !12748, line: 681, type: !12985, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3122, retainedNodes: !12987)
!12985 = !DISubroutineType(types: !12986)
!12986 = !{!12791, !152, !12894}
!12987 = !{!12988, !12989, !12990, !12991}
!12988 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !12984, file: !12748, line: 681, type: !152)
!12989 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12984, file: !12748, line: 681, type: !12894)
!12990 = !DILocalVariable(name: "status", scope: !12984, file: !12748, line: 683, type: !12791)
!12991 = !DILocalVariable(name: "hclk_frequency", scope: !12984, file: !12748, line: 684, type: !152)
!12992 = !DILocation(line: 0, scope: !12984)
!12993 = !DILocation(line: 691, column: 20, scope: !12984)
!12994 = !DILocation(line: 694, column: 6, scope: !12995)
!12995 = distinct !DILexicalBlock(scope: !12984, file: !12748, line: 694, column: 6)
!12996 = !DILocation(line: 694, column: 22, scope: !12995)
!12997 = !DILocation(line: 694, column: 6, scope: !12984)
!12998 = !DILocation(line: 697, column: 14, scope: !12999)
!12999 = distinct !DILexicalBlock(scope: !12995, file: !12748, line: 695, column: 3)
!13000 = !DILocation(line: 701, column: 13, scope: !13001)
!13001 = distinct !DILexicalBlock(scope: !12984, file: !12748, line: 701, column: 6)
!13002 = !DILocation(line: 701, column: 6, scope: !12984)
!13003 = !DILocation(line: 704, column: 5, scope: !13004)
!13004 = distinct !DILexicalBlock(scope: !13001, file: !12748, line: 702, column: 3)
!13005 = !DILocation(line: 705, column: 5, scope: !13004)
!13006 = !DILocation(line: 705, column: 12, scope: !13004)
!13007 = !DILocation(line: 705, column: 33, scope: !13004)
!13008 = distinct !{!13008, !13005, !13009}
!13009 = !DILocation(line: 708, column: 5, scope: !13004)
!13010 = !DILocation(line: 711, column: 49, scope: !13004)
!13011 = !DILocation(line: 711, column: 5, scope: !13004)
!13012 = !DILocation(line: 712, column: 5, scope: !13004)
!13013 = !DILocation(line: 713, column: 5, scope: !13004)
!13014 = !DILocation(line: 713, column: 12, scope: !13004)
!13015 = !DILocation(line: 713, column: 37, scope: !13004)
!13016 = distinct !{!13016, !13013, !13017}
!13017 = !DILocation(line: 716, column: 5, scope: !13004)
!13018 = !DILocation(line: 719, column: 50, scope: !13004)
!13019 = !DILocation(line: 719, column: 5, scope: !13004)
!13020 = !DILocation(line: 720, column: 50, scope: !13004)
!13021 = !DILocation(line: 720, column: 5, scope: !13004)
!13022 = !DILocation(line: 721, column: 3, scope: !13004)
!13023 = !DILocation(line: 724, column: 6, scope: !13024)
!13024 = distinct !DILexicalBlock(scope: !12984, file: !12748, line: 724, column: 6)
!13025 = !DILocation(line: 724, column: 22, scope: !13024)
!13026 = !DILocation(line: 724, column: 6, scope: !12984)
!13027 = !DILocation(line: 727, column: 14, scope: !13028)
!13028 = distinct !DILexicalBlock(scope: !13024, file: !12748, line: 725, column: 3)
!13029 = !DILocation(line: 728, column: 3, scope: !13028)
!13030 = !DILocation(line: 731, column: 13, scope: !13031)
!13031 = distinct !DILexicalBlock(scope: !12984, file: !12748, line: 731, column: 6)
!13032 = !DILocation(line: 731, column: 6, scope: !12984)
!13033 = !DILocation(line: 733, column: 5, scope: !13034)
!13034 = distinct !DILexicalBlock(scope: !13031, file: !12748, line: 732, column: 3)
!13035 = !DILocation(line: 734, column: 3, scope: !13034)
!13036 = !DILocation(line: 736, column: 3, scope: !12984)
!13037 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !9708, file: !9708, line: 4184, type: !3227, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3122, retainedNodes: !2296)
!13038 = !DILocation(line: 4186, column: 3, scope: !13037)
!13039 = !DILocation(line: 4187, column: 1, scope: !13037)
!13040 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !9708, file: !9708, line: 4205, type: !6481, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3122, retainedNodes: !2296)
!13041 = !DILocation(line: 4207, column: 11, scope: !13040)
!13042 = !DILocation(line: 4207, column: 44, scope: !13040)
!13043 = !DILocation(line: 4207, column: 3, scope: !13040)
!13044 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !9708, file: !9708, line: 3224, type: !6491, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3122, retainedNodes: !13045)
!13045 = !{!13046}
!13046 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13044, file: !9708, line: 3224, type: !152)
!13047 = !DILocation(line: 0, scope: !13044)
!13048 = !DILocation(line: 3226, column: 3, scope: !13044)
!13049 = !DILocation(line: 3227, column: 1, scope: !13044)
!13050 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !9708, file: !9708, line: 3188, type: !6491, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3122, retainedNodes: !13051)
!13051 = !{!13052}
!13052 = !DILocalVariable(name: "Source", arg: 1, scope: !13050, file: !9708, line: 3188, type: !152)
!13053 = !DILocation(line: 0, scope: !13050)
!13054 = !DILocation(line: 3190, column: 3, scope: !13050)
!13055 = !DILocation(line: 3191, column: 1, scope: !13050)
!13056 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !9708, file: !9708, line: 3204, type: !6481, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3122, retainedNodes: !2296)
!13057 = !DILocation(line: 3206, column: 21, scope: !13056)
!13058 = !DILocation(line: 3206, column: 3, scope: !13056)
!13059 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !9708, file: !9708, line: 3240, type: !6491, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3122, retainedNodes: !13060)
!13060 = !{!13061}
!13061 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13059, file: !9708, line: 3240, type: !152)
!13062 = !DILocation(line: 0, scope: !13059)
!13063 = !DILocation(line: 3242, column: 3, scope: !13059)
!13064 = !DILocation(line: 3243, column: 1, scope: !13059)
!13065 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !9708, file: !9708, line: 3256, type: !6491, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3122, retainedNodes: !13066)
!13066 = !{!13067}
!13067 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13065, file: !9708, line: 3256, type: !152)
!13068 = !DILocation(line: 0, scope: !13065)
!13069 = !DILocation(line: 3258, column: 3, scope: !13065)
!13070 = !DILocation(line: 3259, column: 1, scope: !13065)
!13071 = distinct !DISubprogram(name: "LL_RCC_PLLSAI_IsReady", scope: !9708, file: !9708, line: 5969, type: !6481, scopeLine: 5970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3122, retainedNodes: !2296)
!13072 = !DILocation(line: 5971, column: 11, scope: !13071)
!13073 = !DILocation(line: 5971, column: 47, scope: !13071)
!13074 = !DILocation(line: 5971, column: 3, scope: !13071)
!13075 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !9708, file: !9708, line: 5153, type: !6481, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3122, retainedNodes: !2296)
!13076 = !DILocation(line: 5155, column: 11, scope: !13075)
!13077 = !DILocation(line: 5155, column: 47, scope: !13075)
!13078 = !DILocation(line: 5155, column: 3, scope: !13075)
!13079 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !12748, file: !12748, line: 540, type: !13080, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3122, retainedNodes: !13082)
!13080 = !DISubroutineType(types: !13081)
!13081 = !{!12791, !152, !152, !12887, !12894}
!13082 = !{!13083, !13084, !13085, !13086, !13087, !13088}
!13083 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !13079, file: !12748, line: 540, type: !152)
!13084 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !13079, file: !12748, line: 540, type: !152)
!13085 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !13079, file: !12748, line: 541, type: !12887)
!13086 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !13079, file: !12748, line: 541, type: !12894)
!13087 = !DILocalVariable(name: "status", scope: !13079, file: !12748, line: 543, type: !12791)
!13088 = !DILocalVariable(name: "pllfreq", scope: !13079, file: !12748, line: 544, type: !152)
!13089 = !DILocation(line: 0, scope: !13079)
!13090 = !DILocation(line: 551, column: 6, scope: !13091)
!13091 = distinct !DILexicalBlock(scope: !13079, file: !12748, line: 551, column: 6)
!13092 = !DILocation(line: 551, column: 25, scope: !13091)
!13093 = !DILocation(line: 551, column: 6, scope: !13079)
!13094 = !DILocation(line: 554, column: 15, scope: !13095)
!13095 = distinct !DILexicalBlock(scope: !13091, file: !12748, line: 552, column: 3)
!13096 = !DILocation(line: 557, column: 8, scope: !13097)
!13097 = distinct !DILexicalBlock(scope: !13095, file: !12748, line: 557, column: 8)
!13098 = !DILocation(line: 557, column: 29, scope: !13097)
!13099 = !DILocation(line: 557, column: 8, scope: !13095)
!13100 = !DILocation(line: 560, column: 20, scope: !13101)
!13101 = distinct !DILexicalBlock(scope: !13102, file: !12748, line: 560, column: 10)
!13102 = distinct !DILexicalBlock(scope: !13097, file: !12748, line: 558, column: 5)
!13103 = !DILocation(line: 560, column: 10, scope: !13102)
!13104 = !DILocation(line: 562, column: 9, scope: !13105)
!13105 = distinct !DILexicalBlock(scope: !13101, file: !12748, line: 561, column: 7)
!13106 = !DILocation(line: 563, column: 7, scope: !13105)
!13107 = !DILocation(line: 566, column: 9, scope: !13108)
!13108 = distinct !DILexicalBlock(scope: !13101, file: !12748, line: 565, column: 7)
!13109 = !DILocation(line: 570, column: 7, scope: !13102)
!13110 = !DILocation(line: 571, column: 7, scope: !13102)
!13111 = !DILocation(line: 571, column: 14, scope: !13102)
!13112 = !DILocation(line: 571, column: 35, scope: !13102)
!13113 = distinct !{!13113, !13110, !13114}
!13114 = !DILocation(line: 574, column: 7, scope: !13102)
!13115 = !DILocation(line: 578, column: 76, scope: !13095)
!13116 = !DILocation(line: 578, column: 103, scope: !13095)
!13117 = !DILocation(line: 579, column: 54, scope: !13095)
!13118 = !DILocation(line: 578, column: 5, scope: !13095)
!13119 = !DILocation(line: 582, column: 14, scope: !13095)
!13120 = !DILocation(line: 583, column: 3, scope: !13095)
!13121 = !DILocation(line: 0, scope: !13091)
!13122 = !DILocation(line: 590, column: 3, scope: !13079)
!13123 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !9708, file: !9708, line: 2969, type: !6481, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3122, retainedNodes: !2296)
!13124 = !DILocation(line: 2971, column: 11, scope: !13123)
!13125 = !DILocation(line: 2971, column: 44, scope: !13123)
!13126 = !DILocation(line: 2971, column: 3, scope: !13123)
!13127 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !9708, file: !9708, line: 2929, type: !3227, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3122, retainedNodes: !2296)
!13128 = !DILocation(line: 2931, column: 3, scope: !13127)
!13129 = !DILocation(line: 2932, column: 1, scope: !13127)
!13130 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !9708, file: !9708, line: 2939, type: !3227, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3122, retainedNodes: !2296)
!13131 = !DILocation(line: 2941, column: 3, scope: !13130)
!13132 = !DILocation(line: 2942, column: 1, scope: !13130)
!13133 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !9708, file: !9708, line: 2949, type: !3227, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3122, retainedNodes: !2296)
!13134 = !DILocation(line: 2951, column: 3, scope: !13133)
!13135 = !DILocation(line: 2952, column: 1, scope: !13133)
!13136 = distinct !DISubprogram(name: "z_device_state_init", scope: !13137, file: !13137, line: 23, type: !3227, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3187, retainedNodes: !13138)
!13137 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13138 = !{!13139}
!13139 = !DILocalVariable(name: "dev", scope: !13136, file: !13137, line: 25, type: !13140)
!13140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13141, size: 32)
!13141 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13142)
!13142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !247, line: 378, size: 192, elements: !13143)
!13143 = !{!13144, !13145, !13146, !13147, !13153, !13154}
!13144 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !13142, file: !247, line: 380, baseType: !118, size: 32)
!13145 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !13142, file: !247, line: 382, baseType: !13, size: 32, offset: 32)
!13146 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !13142, file: !247, line: 384, baseType: !13, size: 32, offset: 64)
!13147 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !13142, file: !247, line: 386, baseType: !13148, size: 32, offset: 96)
!13148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13149, size: 32)
!13149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !247, line: 351, size: 16, elements: !13150)
!13150 = !{!13151, !13152}
!13151 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !13149, file: !247, line: 359, baseType: !195, size: 8)
!13152 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !13149, file: !247, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!13153 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13142, file: !247, line: 388, baseType: !106, size: 32, offset: 128)
!13154 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !13142, file: !247, line: 396, baseType: !260, size: 32, offset: 160)
!13155 = !DILocation(line: 0, scope: !13136)
!13156 = !DILocation(line: 31, column: 1, scope: !13136)
!13157 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !13137, file: !13137, line: 33, type: !13158, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3187, retainedNodes: !13160)
!13158 = !DISubroutineType(types: !13159)
!13159 = !{!13140, !118}
!13160 = !{!13161, !13162}
!13161 = !DILocalVariable(name: "name", arg: 1, scope: !13157, file: !13137, line: 33, type: !118)
!13162 = !DILocalVariable(name: "dev", scope: !13157, file: !13137, line: 35, type: !13140)
!13163 = !DILocation(line: 0, scope: !13157)
!13164 = !DILocation(line: 40, column: 12, scope: !13165)
!13165 = distinct !DILexicalBlock(scope: !13157, file: !13137, line: 40, column: 6)
!13166 = !DILocation(line: 40, column: 21, scope: !13165)
!13167 = !DILocation(line: 40, column: 25, scope: !13165)
!13168 = !DILocation(line: 40, column: 33, scope: !13165)
!13169 = !DILocation(line: 40, column: 6, scope: !13157)
!13170 = !DILocation(line: 55, column: 2, scope: !13171)
!13171 = distinct !DILexicalBlock(scope: !13157, file: !13137, line: 55, column: 2)
!13172 = !DILocation(line: 50, column: 7, scope: !13173)
!13173 = distinct !DILexicalBlock(scope: !13174, file: !13137, line: 50, column: 7)
!13174 = distinct !DILexicalBlock(scope: !13175, file: !13137, line: 49, column: 57)
!13175 = distinct !DILexicalBlock(scope: !13176, file: !13137, line: 49, column: 2)
!13176 = distinct !DILexicalBlock(scope: !13157, file: !13137, line: 49, column: 2)
!13177 = !DILocation(line: 50, column: 30, scope: !13173)
!13178 = !DILocation(line: 50, column: 39, scope: !13173)
!13179 = !DILocation(line: 50, column: 44, scope: !13173)
!13180 = !DILocation(line: 50, column: 7, scope: !13174)
!13181 = !DILocation(line: 49, column: 53, scope: !13175)
!13182 = !DILocation(line: 49, column: 33, scope: !13175)
!13183 = !DILocation(line: 49, column: 2, scope: !13176)
!13184 = distinct !{!13184, !13183, !13185}
!13185 = !DILocation(line: 53, column: 2, scope: !13176)
!13186 = !DILocation(line: 56, column: 7, scope: !13187)
!13187 = distinct !DILexicalBlock(scope: !13188, file: !13137, line: 56, column: 7)
!13188 = distinct !DILexicalBlock(scope: !13189, file: !13137, line: 55, column: 57)
!13189 = distinct !DILexicalBlock(scope: !13171, file: !13137, line: 55, column: 2)
!13190 = !DILocation(line: 56, column: 30, scope: !13187)
!13191 = !DILocation(line: 56, column: 52, scope: !13187)
!13192 = !DILocation(line: 56, column: 34, scope: !13187)
!13193 = !DILocation(line: 56, column: 58, scope: !13187)
!13194 = !DILocation(line: 56, column: 7, scope: !13188)
!13195 = !DILocation(line: 55, column: 53, scope: !13189)
!13196 = !DILocation(line: 55, column: 33, scope: !13189)
!13197 = distinct !{!13197, !13170, !13198}
!13198 = !DILocation(line: 59, column: 2, scope: !13171)
!13199 = !DILocation(line: 62, column: 1, scope: !13157)
!13200 = distinct !DISubprogram(name: "z_device_is_ready", scope: !13137, file: !13137, line: 93, type: !13201, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3187, retainedNodes: !13203)
!13201 = !DISubroutineType(types: !13202)
!13202 = !{!145, !13140}
!13203 = !{!13204}
!13204 = !DILocalVariable(name: "dev", arg: 1, scope: !13200, file: !13137, line: 93, type: !13140)
!13205 = !DILocation(line: 0, scope: !13200)
!13206 = !DILocation(line: 99, column: 10, scope: !13207)
!13207 = distinct !DILexicalBlock(scope: !13200, file: !13137, line: 99, column: 6)
!13208 = !DILocation(line: 99, column: 6, scope: !13200)
!13209 = !DILocation(line: 103, column: 14, scope: !13200)
!13210 = !DILocation(line: 103, column: 21, scope: !13200)
!13211 = !DILocation(line: 103, column: 33, scope: !13200)
!13212 = !DILocation(line: 103, column: 49, scope: !13200)
!13213 = !DILocation(line: 103, column: 58, scope: !13200)
!13214 = !DILocation(line: 104, column: 1, scope: !13200)
!13215 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !13137, file: !13137, line: 87, type: !13216, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3187, retainedNodes: !13219)
!13216 = !DISubroutineType(types: !13217)
!13217 = !{!185, !13218}
!13218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13140, size: 32)
!13219 = !{!13220}
!13220 = !DILocalVariable(name: "devices", arg: 1, scope: !13215, file: !13137, line: 87, type: !13218)
!13221 = !DILocation(line: 0, scope: !13215)
!13222 = !DILocation(line: 89, column: 11, scope: !13215)
!13223 = !DILocation(line: 90, column: 2, scope: !13215)
!13224 = distinct !DISubprogram(name: "device_required_foreach", scope: !13137, file: !13137, line: 125, type: !13225, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3187, retainedNodes: !13231)
!13225 = !DISubroutineType(types: !13226)
!13226 = !{!107, !13140, !13227, !106}
!13227 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !247, line: 471, baseType: !13228)
!13228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13229, size: 32)
!13229 = !DISubroutineType(types: !13230)
!13230 = !{!107, !13140, !106}
!13231 = !{!13232, !13233, !13234, !13235, !13236}
!13232 = !DILocalVariable(name: "dev", arg: 1, scope: !13224, file: !13137, line: 125, type: !13140)
!13233 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13224, file: !13137, line: 126, type: !13227)
!13234 = !DILocalVariable(name: "context", arg: 3, scope: !13224, file: !13137, line: 127, type: !106)
!13235 = !DILocalVariable(name: "handle_count", scope: !13224, file: !13137, line: 129, type: !185)
!13236 = !DILocalVariable(name: "handles", scope: !13224, file: !13137, line: 130, type: !260)
!13237 = !DILocation(line: 0, scope: !13224)
!13238 = !DILocation(line: 129, column: 2, scope: !13224)
!13239 = !DILocation(line: 129, column: 9, scope: !13224)
!13240 = !DILocation(line: 130, column: 35, scope: !13224)
!13241 = !DILocation(line: 132, column: 33, scope: !13224)
!13242 = !DILocation(line: 132, column: 9, scope: !13224)
!13243 = !DILocation(line: 133, column: 1, scope: !13224)
!13244 = !DILocation(line: 132, column: 2, scope: !13224)
!13245 = distinct !DISubprogram(name: "device_required_handles_get", scope: !247, file: !247, line: 493, type: !13246, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3187, retainedNodes: !13248)
!13246 = !DISubroutineType(types: !13247)
!13247 = !{!260, !13140, !2677}
!13248 = !{!13249, !13250, !13251, !13252}
!13249 = !DILocalVariable(name: "dev", arg: 1, scope: !13245, file: !247, line: 493, type: !13140)
!13250 = !DILocalVariable(name: "count", arg: 2, scope: !13245, file: !247, line: 493, type: !2677)
!13251 = !DILocalVariable(name: "rv", scope: !13245, file: !247, line: 495, type: !260)
!13252 = !DILocalVariable(name: "i", scope: !13253, file: !247, line: 498, type: !185)
!13253 = distinct !DILexicalBlock(scope: !13254, file: !247, line: 497, column: 18)
!13254 = distinct !DILexicalBlock(scope: !13245, file: !247, line: 497, column: 6)
!13255 = !DILocation(line: 0, scope: !13245)
!13256 = !DILocation(line: 495, column: 35, scope: !13245)
!13257 = !DILocation(line: 497, column: 9, scope: !13254)
!13258 = !DILocation(line: 497, column: 6, scope: !13245)
!13259 = !DILocation(line: 0, scope: !13253)
!13260 = !DILocation(line: 500, column: 11, scope: !13253)
!13261 = !DILocation(line: 500, column: 40, scope: !13253)
!13262 = !DILocation(line: 502, column: 4, scope: !13263)
!13263 = distinct !DILexicalBlock(scope: !13253, file: !247, line: 501, column: 40)
!13264 = distinct !{!13264, !13265, !13266}
!13265 = !DILocation(line: 500, column: 3, scope: !13253)
!13266 = !DILocation(line: 503, column: 3, scope: !13253)
!13267 = !DILocation(line: 504, column: 10, scope: !13253)
!13268 = !DILocation(line: 505, column: 2, scope: !13253)
!13269 = !DILocation(line: 507, column: 2, scope: !13245)
!13270 = distinct !DISubprogram(name: "device_visitor", scope: !13137, file: !13137, line: 106, type: !13271, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3187, retainedNodes: !13273)
!13271 = !DISubroutineType(types: !13272)
!13272 = !{!107, !260, !185, !13227, !106}
!13273 = !{!13274, !13275, !13276, !13277, !13278, !13280, !13283, !13284}
!13274 = !DILocalVariable(name: "handles", arg: 1, scope: !13270, file: !13137, line: 106, type: !260)
!13275 = !DILocalVariable(name: "handle_count", arg: 2, scope: !13270, file: !13137, line: 107, type: !185)
!13276 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !13270, file: !13137, line: 108, type: !13227)
!13277 = !DILocalVariable(name: "context", arg: 4, scope: !13270, file: !13137, line: 109, type: !106)
!13278 = !DILocalVariable(name: "i", scope: !13279, file: !13137, line: 112, type: !185)
!13279 = distinct !DILexicalBlock(scope: !13270, file: !13137, line: 112, column: 2)
!13280 = !DILocalVariable(name: "dh", scope: !13281, file: !13137, line: 113, type: !262)
!13281 = distinct !DILexicalBlock(scope: !13282, file: !13137, line: 112, column: 44)
!13282 = distinct !DILexicalBlock(scope: !13279, file: !13137, line: 112, column: 2)
!13283 = !DILocalVariable(name: "rdev", scope: !13281, file: !13137, line: 114, type: !13140)
!13284 = !DILocalVariable(name: "rc", scope: !13281, file: !13137, line: 115, type: !107)
!13285 = !DILocation(line: 0, scope: !13270)
!13286 = !DILocation(line: 0, scope: !13279)
!13287 = !DILocation(line: 112, column: 23, scope: !13282)
!13288 = !DILocation(line: 112, column: 2, scope: !13279)
!13289 = distinct !{!13289, !13288, !13290}
!13290 = !DILocation(line: 120, column: 2, scope: !13279)
!13291 = !DILocation(line: 113, column: 24, scope: !13281)
!13292 = !DILocation(line: 0, scope: !13281)
!13293 = !DILocation(line: 114, column: 31, scope: !13281)
!13294 = !DILocation(line: 115, column: 12, scope: !13281)
!13295 = !DILocation(line: 117, column: 10, scope: !13296)
!13296 = distinct !DILexicalBlock(scope: !13281, file: !13137, line: 117, column: 7)
!13297 = !DILocation(line: 112, column: 39, scope: !13282)
!13298 = !DILocation(line: 123, column: 1, scope: !13270)
!13299 = distinct !DISubprogram(name: "device_from_handle", scope: !247, file: !247, line: 439, type: !13300, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3187, retainedNodes: !13302)
!13300 = !DISubroutineType(types: !13301)
!13301 = !{!13140, !262}
!13302 = !{!13303, !13304, !13305}
!13303 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !13299, file: !247, line: 439, type: !262)
!13304 = !DILocalVariable(name: "dev", scope: !13299, file: !247, line: 443, type: !13140)
!13305 = !DILocalVariable(name: "numdev", scope: !13299, file: !247, line: 444, type: !185)
!13306 = !DILocation(line: 0, scope: !13299)
!13307 = !DILocation(line: 446, column: 7, scope: !13308)
!13308 = distinct !DILexicalBlock(scope: !13299, file: !247, line: 446, column: 6)
!13309 = !DILocation(line: 446, column: 18, scope: !13308)
!13310 = !DILocation(line: 446, column: 23, scope: !13308)
!13311 = !DILocation(line: 450, column: 2, scope: !13299)
!13312 = distinct !DISubprogram(name: "device_supported_foreach", scope: !13137, file: !13137, line: 135, type: !13225, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3187, retainedNodes: !13313)
!13313 = !{!13314, !13315, !13316, !13317, !13318}
!13314 = !DILocalVariable(name: "dev", arg: 1, scope: !13312, file: !13137, line: 135, type: !13140)
!13315 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13312, file: !13137, line: 136, type: !13227)
!13316 = !DILocalVariable(name: "context", arg: 3, scope: !13312, file: !13137, line: 137, type: !106)
!13317 = !DILocalVariable(name: "handle_count", scope: !13312, file: !13137, line: 139, type: !185)
!13318 = !DILocalVariable(name: "handles", scope: !13312, file: !13137, line: 140, type: !260)
!13319 = !DILocation(line: 0, scope: !13312)
!13320 = !DILocation(line: 139, column: 2, scope: !13312)
!13321 = !DILocation(line: 139, column: 9, scope: !13312)
!13322 = !DILocation(line: 140, column: 35, scope: !13312)
!13323 = !DILocation(line: 142, column: 33, scope: !13312)
!13324 = !DILocation(line: 142, column: 9, scope: !13312)
!13325 = !DILocation(line: 143, column: 1, scope: !13312)
!13326 = !DILocation(line: 142, column: 2, scope: !13312)
!13327 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !247, file: !247, line: 573, type: !13246, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3187, retainedNodes: !13328)
!13328 = !{!13329, !13330, !13331, !13332, !13333}
!13329 = !DILocalVariable(name: "dev", arg: 1, scope: !13327, file: !247, line: 573, type: !13140)
!13330 = !DILocalVariable(name: "count", arg: 2, scope: !13327, file: !247, line: 573, type: !2677)
!13331 = !DILocalVariable(name: "rv", scope: !13327, file: !247, line: 575, type: !260)
!13332 = !DILocalVariable(name: "region", scope: !13327, file: !247, line: 576, type: !185)
!13333 = !DILocalVariable(name: "i", scope: !13327, file: !247, line: 577, type: !185)
!13334 = !DILocation(line: 0, scope: !13327)
!13335 = !DILocation(line: 575, column: 35, scope: !13327)
!13336 = !DILocation(line: 579, column: 9, scope: !13337)
!13337 = distinct !DILexicalBlock(scope: !13327, file: !247, line: 579, column: 6)
!13338 = !DILocation(line: 579, column: 6, scope: !13327)
!13339 = !DILocation(line: 582, column: 8, scope: !13340)
!13340 = distinct !DILexicalBlock(scope: !13341, file: !247, line: 582, column: 8)
!13341 = distinct !DILexicalBlock(scope: !13342, file: !247, line: 581, column: 23)
!13342 = distinct !DILexicalBlock(scope: !13337, file: !247, line: 579, column: 18)
!13343 = !DILocation(line: 582, column: 12, scope: !13340)
!13344 = !DILocation(line: 585, column: 6, scope: !13341)
!13345 = !DILocation(line: 0, scope: !13342)
!13346 = !DILocation(line: 581, column: 17, scope: !13342)
!13347 = !DILocation(line: 581, column: 3, scope: !13342)
!13348 = !DILocation(line: 588, column: 10, scope: !13342)
!13349 = !DILocation(line: 588, column: 16, scope: !13342)
!13350 = !DILocation(line: 589, column: 4, scope: !13351)
!13351 = distinct !DILexicalBlock(scope: !13342, file: !247, line: 588, column: 39)
!13352 = !DILocation(line: 588, column: 3, scope: !13342)
!13353 = distinct !{!13353, !13352, !13354}
!13354 = !DILocation(line: 590, column: 3, scope: !13342)
!13355 = !DILocation(line: 591, column: 10, scope: !13342)
!13356 = !DILocation(line: 592, column: 2, scope: !13342)
!13357 = !DILocation(line: 575, column: 25, scope: !13327)
!13358 = !DILocation(line: 594, column: 2, scope: !13327)
!13359 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !2087, file: !2087, line: 49, type: !13360, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2084, retainedNodes: !2296)
!13360 = !DISubroutineType(types: !13361)
!13361 = !{!187}
!13362 = !DILocation(line: 51, column: 10, scope: !13359)
!13363 = !DILocation(line: 51, column: 20, scope: !13359)
!13364 = !DILocation(line: 51, column: 2, scope: !13359)
!13365 = distinct !DISubprogram(name: "coredump", scope: !3194, file: !3194, line: 209, type: !13366, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3190, retainedNodes: !13515)
!13366 = !DISubroutineType(types: !13367)
!13367 = !{null, !32, !13368, !13412}
!13368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13369, size: 32)
!13369 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13370)
!13370 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2807, line: 141, baseType: !13371)
!13371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2807, line: 97, size: 256, elements: !13372)
!13372 = !{!13373}
!13373 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !13371, file: !2807, line: 107, baseType: !13374, size: 256)
!13374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2807, line: 98, size: 256, elements: !13375)
!13375 = !{!13376, !13381, !13386, !13391, !13396, !13401, !13406, !13411}
!13376 = !DIDerivedType(tag: DW_TAG_member, scope: !13374, file: !2807, line: 99, baseType: !13377, size: 32)
!13377 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13374, file: !2807, line: 99, size: 32, elements: !13378)
!13378 = !{!13379, !13380}
!13379 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !13377, file: !2807, line: 99, baseType: !152, size: 32)
!13380 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !13377, file: !2807, line: 99, baseType: !152, size: 32)
!13381 = !DIDerivedType(tag: DW_TAG_member, scope: !13374, file: !2807, line: 100, baseType: !13382, size: 32, offset: 32)
!13382 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13374, file: !2807, line: 100, size: 32, elements: !13383)
!13383 = !{!13384, !13385}
!13384 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !13382, file: !2807, line: 100, baseType: !152, size: 32)
!13385 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !13382, file: !2807, line: 100, baseType: !152, size: 32)
!13386 = !DIDerivedType(tag: DW_TAG_member, scope: !13374, file: !2807, line: 101, baseType: !13387, size: 32, offset: 64)
!13387 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13374, file: !2807, line: 101, size: 32, elements: !13388)
!13388 = !{!13389, !13390}
!13389 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !13387, file: !2807, line: 101, baseType: !152, size: 32)
!13390 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !13387, file: !2807, line: 101, baseType: !152, size: 32)
!13391 = !DIDerivedType(tag: DW_TAG_member, scope: !13374, file: !2807, line: 102, baseType: !13392, size: 32, offset: 96)
!13392 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13374, file: !2807, line: 102, size: 32, elements: !13393)
!13393 = !{!13394, !13395}
!13394 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !13392, file: !2807, line: 102, baseType: !152, size: 32)
!13395 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !13392, file: !2807, line: 102, baseType: !152, size: 32)
!13396 = !DIDerivedType(tag: DW_TAG_member, scope: !13374, file: !2807, line: 103, baseType: !13397, size: 32, offset: 128)
!13397 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13374, file: !2807, line: 103, size: 32, elements: !13398)
!13398 = !{!13399, !13400}
!13399 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !13397, file: !2807, line: 103, baseType: !152, size: 32)
!13400 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !13397, file: !2807, line: 103, baseType: !152, size: 32)
!13401 = !DIDerivedType(tag: DW_TAG_member, scope: !13374, file: !2807, line: 104, baseType: !13402, size: 32, offset: 160)
!13402 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13374, file: !2807, line: 104, size: 32, elements: !13403)
!13403 = !{!13404, !13405}
!13404 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !13402, file: !2807, line: 104, baseType: !152, size: 32)
!13405 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !13402, file: !2807, line: 104, baseType: !152, size: 32)
!13406 = !DIDerivedType(tag: DW_TAG_member, scope: !13374, file: !2807, line: 105, baseType: !13407, size: 32, offset: 192)
!13407 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13374, file: !2807, line: 105, size: 32, elements: !13408)
!13408 = !{!13409, !13410}
!13409 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !13407, file: !2807, line: 105, baseType: !152, size: 32)
!13410 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !13407, file: !2807, line: 105, baseType: !152, size: 32)
!13411 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !13374, file: !2807, line: 106, baseType: !152, size: 32, offset: 224)
!13412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13413, size: 32)
!13413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !309, line: 245, size: 1280, elements: !13414)
!13414 = !{!13415, !13473, !13485, !13486, !13487, !13488, !13489, !13495, !13510}
!13415 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !13413, file: !309, line: 247, baseType: !13416, size: 384)
!13416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !309, line: 57, size: 384, elements: !13417)
!13417 = !{!13418, !13442, !13449, !13450, !13451, !13460, !13461, !13462}
!13418 = !DIDerivedType(tag: DW_TAG_member, scope: !13416, file: !309, line: 60, baseType: !13419, size: 64)
!13419 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13416, file: !309, line: 60, size: 64, elements: !13420)
!13420 = !{!13421, !13436}
!13421 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !13419, file: !309, line: 61, baseType: !13422, size: 64)
!13422 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !319, line: 49, baseType: !13423)
!13423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !319, line: 37, size: 64, elements: !13424)
!13424 = !{!13425, !13431}
!13425 = !DIDerivedType(tag: DW_TAG_member, scope: !13423, file: !319, line: 38, baseType: !13426, size: 32)
!13426 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13423, file: !319, line: 38, size: 32, elements: !13427)
!13427 = !{!13428, !13430}
!13428 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !13426, file: !319, line: 39, baseType: !13429, size: 32)
!13429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13423, size: 32)
!13430 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13426, file: !319, line: 40, baseType: !13429, size: 32)
!13431 = !DIDerivedType(tag: DW_TAG_member, scope: !13423, file: !319, line: 42, baseType: !13432, size: 32, offset: 32)
!13432 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13423, file: !319, line: 42, size: 32, elements: !13433)
!13433 = !{!13434, !13435}
!13434 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !13432, file: !319, line: 43, baseType: !13429, size: 32)
!13435 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13432, file: !319, line: 44, baseType: !13429, size: 32)
!13436 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !13419, file: !309, line: 62, baseType: !13437, size: 64)
!13437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !335, line: 49, size: 64, elements: !13438)
!13438 = !{!13439}
!13439 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !13437, file: !335, line: 50, baseType: !13440, size: 64)
!13440 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13441, size: 64, elements: !340)
!13441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13437, size: 32)
!13442 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !13416, file: !309, line: 68, baseType: !13443, size: 32, offset: 64)
!13443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13444, size: 32)
!13444 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !345, line: 233, baseType: !13445)
!13445 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !345, line: 231, size: 64, elements: !13446)
!13446 = !{!13447}
!13447 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !13445, file: !345, line: 232, baseType: !13448, size: 64)
!13448 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !319, line: 48, baseType: !13423)
!13449 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !13416, file: !309, line: 71, baseType: !195, size: 8, offset: 96)
!13450 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !13416, file: !309, line: 74, baseType: !195, size: 8, offset: 104)
!13451 = !DIDerivedType(tag: DW_TAG_member, scope: !13416, file: !309, line: 90, baseType: !13452, size: 16, offset: 112)
!13452 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13416, file: !309, line: 90, size: 16, elements: !13453)
!13453 = !{!13454, !13459}
!13454 = !DIDerivedType(tag: DW_TAG_member, scope: !13452, file: !309, line: 91, baseType: !13455, size: 16)
!13455 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13452, file: !309, line: 91, size: 16, elements: !13456)
!13456 = !{!13457, !13458}
!13457 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !13455, file: !309, line: 96, baseType: !359, size: 8)
!13458 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !13455, file: !309, line: 97, baseType: !195, size: 8, offset: 8)
!13459 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !13452, file: !309, line: 100, baseType: !197, size: 16)
!13460 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !13416, file: !309, line: 107, baseType: !152, size: 32, offset: 128)
!13461 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !13416, file: !309, line: 127, baseType: !106, size: 32, offset: 160)
!13462 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !13416, file: !309, line: 131, baseType: !13463, size: 192, offset: 192)
!13463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !345, line: 244, size: 192, elements: !13464)
!13464 = !{!13465, !13466, !13472}
!13465 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !13463, file: !345, line: 245, baseType: !13422, size: 64)
!13466 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !13463, file: !345, line: 246, baseType: !13467, size: 32, offset: 64)
!13467 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !345, line: 242, baseType: !13468)
!13468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13469, size: 32)
!13469 = !DISubroutineType(types: !13470)
!13470 = !{null, !13471}
!13471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13463, size: 32)
!13472 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !13463, file: !345, line: 249, baseType: !376, size: 64, offset: 128)
!13473 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !13413, file: !309, line: 250, baseType: !13474, size: 288, offset: 384)
!13474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !379, line: 25, size: 288, elements: !13475)
!13475 = !{!13476, !13477, !13478, !13479, !13480, !13481, !13482, !13483, !13484}
!13476 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !13474, file: !379, line: 26, baseType: !152, size: 32)
!13477 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !13474, file: !379, line: 27, baseType: !152, size: 32, offset: 32)
!13478 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !13474, file: !379, line: 28, baseType: !152, size: 32, offset: 64)
!13479 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !13474, file: !379, line: 29, baseType: !152, size: 32, offset: 96)
!13480 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !13474, file: !379, line: 30, baseType: !152, size: 32, offset: 128)
!13481 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !13474, file: !379, line: 31, baseType: !152, size: 32, offset: 160)
!13482 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !13474, file: !379, line: 32, baseType: !152, size: 32, offset: 192)
!13483 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !13474, file: !379, line: 33, baseType: !152, size: 32, offset: 224)
!13484 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !13474, file: !379, line: 34, baseType: !152, size: 32, offset: 256)
!13485 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !13413, file: !309, line: 253, baseType: !106, size: 32, offset: 672)
!13486 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !13413, file: !309, line: 256, baseType: !13444, size: 64, offset: 704)
!13487 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !13413, file: !309, line: 279, baseType: !393, size: 256, offset: 768)
!13488 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !13413, file: !309, line: 294, baseType: !107, size: 32, offset: 1024)
!13489 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !13413, file: !309, line: 300, baseType: !13490, size: 96, offset: 1056)
!13490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !309, line: 149, size: 96, elements: !13491)
!13491 = !{!13492, !13493, !13494}
!13492 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !13490, file: !309, line: 153, baseType: !22, size: 32)
!13493 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13490, file: !309, line: 162, baseType: !185, size: 32, offset: 32)
!13494 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !13490, file: !309, line: 168, baseType: !185, size: 32, offset: 64)
!13495 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !13413, file: !309, line: 325, baseType: !13496, size: 32, offset: 1152)
!13496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13497, size: 32)
!13497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !406, line: 5073, size: 192, elements: !13498)
!13498 = !{!13499, !13505, !13506}
!13499 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13497, file: !406, line: 5074, baseType: !13500, size: 96)
!13500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !410, line: 56, size: 96, elements: !13501)
!13501 = !{!13502, !13503, !13504}
!13502 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13500, file: !410, line: 57, baseType: !413, size: 32)
!13503 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !13500, file: !410, line: 58, baseType: !106, size: 32, offset: 32)
!13504 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !13500, file: !410, line: 59, baseType: !185, size: 32, offset: 64)
!13505 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13497, file: !406, line: 5075, baseType: !13444, size: 64, offset: 96)
!13506 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13497, file: !406, line: 5076, baseType: !13507, size: 32, offset: 160)
!13507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !420, line: 43, size: 32, elements: !13508)
!13508 = !{!13509}
!13509 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !13507, file: !420, line: 52, baseType: !22, size: 32)
!13510 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !13413, file: !309, line: 343, baseType: !13511, size: 64, offset: 1184)
!13511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !379, line: 60, size: 64, elements: !13512)
!13512 = !{!13513, !13514}
!13513 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !13511, file: !379, line: 63, baseType: !152, size: 32)
!13514 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !13511, file: !379, line: 66, baseType: !152, size: 32, offset: 32)
!13515 = !{!13516, !13517, !13518}
!13516 = !DILocalVariable(name: "reason", arg: 1, scope: !13365, file: !3194, line: 209, type: !32)
!13517 = !DILocalVariable(name: "esf", arg: 2, scope: !13365, file: !3194, line: 209, type: !13368)
!13518 = !DILocalVariable(name: "thread", arg: 3, scope: !13365, file: !3194, line: 210, type: !13412)
!13519 = !DILocation(line: 0, scope: !13365)
!13520 = !DILocation(line: 212, column: 1, scope: !13365)
!13521 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3194, file: !3194, line: 214, type: !13522, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3190, retainedNodes: !13524)
!13522 = !DISubroutineType(types: !13523)
!13523 = !{null, !22, !22}
!13524 = !{!13525, !13526}
!13525 = !DILocalVariable(name: "start_addr", arg: 1, scope: !13521, file: !3194, line: 214, type: !22)
!13526 = !DILocalVariable(name: "end_addr", arg: 2, scope: !13521, file: !3194, line: 214, type: !22)
!13527 = !DILocation(line: 0, scope: !13521)
!13528 = !DILocation(line: 216, column: 1, scope: !13521)
!13529 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3194, file: !3194, line: 218, type: !13530, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3190, retainedNodes: !13532)
!13530 = !DISubroutineType(types: !13531)
!13531 = !{null, !194, !185}
!13532 = !{!13533, !13534}
!13533 = !DILocalVariable(name: "buf", arg: 1, scope: !13529, file: !3194, line: 218, type: !194)
!13534 = !DILocalVariable(name: "buflen", arg: 2, scope: !13529, file: !3194, line: 218, type: !185)
!13535 = !DILocation(line: 0, scope: !13529)
!13536 = !DILocation(line: 220, column: 1, scope: !13529)
!13537 = distinct !DISubprogram(name: "coredump_query", scope: !3194, file: !3194, line: 222, type: !13538, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3190, retainedNodes: !13540)
!13538 = !DISubroutineType(types: !13539)
!13539 = !{!107, !3193, !106}
!13540 = !{!13541, !13542}
!13541 = !DILocalVariable(name: "query_id", arg: 1, scope: !13537, file: !3194, line: 222, type: !3193)
!13542 = !DILocalVariable(name: "arg", arg: 2, scope: !13537, file: !3194, line: 222, type: !106)
!13543 = !DILocation(line: 0, scope: !13537)
!13544 = !DILocation(line: 224, column: 2, scope: !13537)
!13545 = distinct !DISubprogram(name: "coredump_cmd", scope: !3194, file: !3194, line: 227, type: !13546, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3190, retainedNodes: !13548)
!13546 = !DISubroutineType(types: !13547)
!13547 = !{!107, !3200, !106}
!13548 = !{!13549, !13550}
!13549 = !DILocalVariable(name: "query_id", arg: 1, scope: !13545, file: !3194, line: 227, type: !3200)
!13550 = !DILocalVariable(name: "arg", arg: 2, scope: !13545, file: !3194, line: 227, type: !106)
!13551 = !DILocation(line: 0, scope: !13545)
!13552 = !DILocation(line: 229, column: 2, scope: !13545)
!13553 = distinct !DISubprogram(name: "arch_system_halt", scope: !13554, file: !13554, line: 23, type: !6086, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3190, retainedNodes: !13555)
!13554 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13555 = !{!13556}
!13556 = !DILocalVariable(name: "reason", arg: 1, scope: !13553, file: !13554, line: 23, type: !32)
!13557 = !DILocation(line: 0, scope: !13553)
!13558 = !DILocation(line: 55, column: 2, scope: !13559, inlinedAt: !13563)
!13559 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6075, file: !6075, line: 42, type: !6076, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3190, retainedNodes: !13560)
!13560 = !{!13561, !13562}
!13561 = !DILocalVariable(name: "key", scope: !13559, file: !6075, line: 44, type: !32)
!13562 = !DILocalVariable(name: "tmp", scope: !13559, file: !6075, line: 53, type: !32)
!13563 = distinct !DILocation(line: 31, column: 8, scope: !13553)
!13564 = !{i64 2599566}
!13565 = !DILocation(line: 0, scope: !13559, inlinedAt: !13563)
!13566 = !DILocation(line: 32, column: 2, scope: !13553)
!13567 = !DILocation(line: 32, column: 2, scope: !13568)
!13568 = distinct !DILexicalBlock(scope: !13569, file: !13554, line: 32, column: 2)
!13569 = distinct !DILexicalBlock(scope: !13553, file: !13554, line: 32, column: 2)
!13570 = distinct !{!13570, !13571, !13572}
!13571 = !DILocation(line: 32, column: 2, scope: !13569)
!13572 = !DILocation(line: 34, column: 2, scope: !13569)
!13573 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !13554, file: !13554, line: 39, type: !13574, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3190, retainedNodes: !13576)
!13574 = !DISubroutineType(types: !13575)
!13575 = !{null, !32, !13368}
!13576 = !{!13577, !13578}
!13577 = !DILocalVariable(name: "reason", arg: 1, scope: !13573, file: !13554, line: 39, type: !32)
!13578 = !DILocalVariable(name: "esf", arg: 2, scope: !13573, file: !13554, line: 40, type: !13368)
!13579 = !DILocation(line: 0, scope: !13573)
!13580 = !DILocation(line: 45, column: 2, scope: !13581)
!13581 = distinct !DILexicalBlock(scope: !13582, file: !13554, line: 45, column: 2)
!13582 = distinct !DILexicalBlock(scope: !13583, file: !13554, line: 45, column: 2)
!13583 = distinct !DILexicalBlock(scope: !13584, file: !13554, line: 45, column: 2)
!13584 = distinct !DILexicalBlock(scope: !13573, file: !13554, line: 45, column: 2)
!13585 = !DILocation(line: 46, column: 2, scope: !13573)
!13586 = distinct !DISubprogram(name: "k_fatal_halt", scope: !13554, file: !13554, line: 81, type: !6086, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3190, retainedNodes: !13587)
!13587 = !{!13588}
!13588 = !DILocalVariable(name: "reason", arg: 1, scope: !13586, file: !13554, line: 81, type: !32)
!13589 = !DILocation(line: 0, scope: !13586)
!13590 = !DILocation(line: 83, column: 2, scope: !13586)
!13591 = distinct !DISubprogram(name: "z_fatal_error", scope: !13554, file: !13554, line: 96, type: !13574, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3190, retainedNodes: !13592)
!13592 = !{!13593, !13594, !13595, !13596}
!13593 = !DILocalVariable(name: "reason", arg: 1, scope: !13591, file: !13554, line: 96, type: !32)
!13594 = !DILocalVariable(name: "esf", arg: 2, scope: !13591, file: !13554, line: 96, type: !13368)
!13595 = !DILocalVariable(name: "key", scope: !13591, file: !13554, line: 102, type: !32)
!13596 = !DILocalVariable(name: "thread", scope: !13591, file: !13554, line: 103, type: !13412)
!13597 = !DILocation(line: 0, scope: !13591)
!13598 = !DILocation(line: 55, column: 2, scope: !13559, inlinedAt: !13599)
!13599 = distinct !DILocation(line: 102, column: 21, scope: !13591)
!13600 = !DILocation(line: 0, scope: !13559, inlinedAt: !13599)
!13601 = !DILocation(line: 104, column: 4, scope: !13591)
!13602 = !DILocation(line: 109, column: 2, scope: !13603)
!13603 = distinct !DILexicalBlock(scope: !13604, file: !13554, line: 109, column: 2)
!13604 = distinct !DILexicalBlock(scope: !13605, file: !13554, line: 109, column: 2)
!13605 = distinct !DILexicalBlock(scope: !13606, file: !13554, line: 109, column: 2)
!13606 = distinct !DILexicalBlock(scope: !13591, file: !13554, line: 109, column: 2)
!13607 = !DILocation(line: 119, column: 11, scope: !13608)
!13608 = distinct !DILexicalBlock(scope: !13591, file: !13554, line: 119, column: 6)
!13609 = !DILocation(line: 119, column: 20, scope: !13608)
!13610 = !DILocalVariable(name: "esf", arg: 1, scope: !13611, file: !7446, line: 71, type: !13368)
!13611 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !7446, file: !7446, line: 71, type: !13612, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3190, retainedNodes: !13614)
!13612 = !DISubroutineType(types: !13613)
!13613 = !{!145, !13368}
!13614 = !{!13610}
!13615 = !DILocation(line: 0, scope: !13611, inlinedAt: !13616)
!13616 = distinct !DILocation(line: 119, column: 23, scope: !13608)
!13617 = !DILocation(line: 73, column: 21, scope: !13611, inlinedAt: !13616)
!13618 = !DILocation(line: 73, column: 26, scope: !13611, inlinedAt: !13616)
!13619 = !DILocation(line: 73, column: 9, scope: !13611, inlinedAt: !13616)
!13620 = !DILocation(line: 119, column: 6, scope: !13591)
!13621 = !DILocation(line: 120, column: 3, scope: !13622)
!13622 = distinct !DILexicalBlock(scope: !13623, file: !13554, line: 120, column: 3)
!13623 = distinct !DILexicalBlock(scope: !13624, file: !13554, line: 120, column: 3)
!13624 = distinct !DILexicalBlock(scope: !13625, file: !13554, line: 120, column: 3)
!13625 = distinct !DILexicalBlock(scope: !13626, file: !13554, line: 120, column: 3)
!13626 = distinct !DILexicalBlock(scope: !13608, file: !13554, line: 119, column: 57)
!13627 = !DILocation(line: 121, column: 2, scope: !13626)
!13628 = !DILocation(line: 124, column: 2, scope: !13629)
!13629 = distinct !DILexicalBlock(scope: !13630, file: !13554, line: 124, column: 2)
!13630 = distinct !DILexicalBlock(scope: !13631, file: !13554, line: 124, column: 2)
!13631 = distinct !DILexicalBlock(scope: !13632, file: !13554, line: 124, column: 2)
!13632 = distinct !DILexicalBlock(scope: !13591, file: !13554, line: 124, column: 2)
!13633 = !DILocation(line: 131, column: 2, scope: !13591)
!13634 = !DILocation(line: 0, scope: !13611, inlinedAt: !13635)
!13635 = distinct !DILocation(line: 163, column: 24, scope: !13636)
!13636 = distinct !DILexicalBlock(scope: !13637, file: !13554, line: 163, column: 7)
!13637 = distinct !DILexicalBlock(scope: !13638, file: !13554, line: 160, column: 9)
!13638 = distinct !DILexicalBlock(scope: !13591, file: !13554, line: 146, column: 6)
!13639 = !DILocation(line: 73, column: 21, scope: !13611, inlinedAt: !13635)
!13640 = !DILocation(line: 73, column: 26, scope: !13611, inlinedAt: !13635)
!13641 = !DILocation(line: 73, column: 9, scope: !13611, inlinedAt: !13635)
!13642 = !DILocation(line: 163, column: 7, scope: !13637)
!13643 = !DILocalVariable(name: "key", arg: 1, scope: !13644, file: !6075, line: 84, type: !32)
!13644 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6075, file: !6075, line: 84, type: !6086, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3190, retainedNodes: !13645)
!13645 = !{!13643}
!13646 = !DILocation(line: 0, scope: !13644, inlinedAt: !13647)
!13647 = distinct !DILocation(line: 171, column: 4, scope: !13648)
!13648 = distinct !DILexicalBlock(scope: !13636, file: !13554, line: 163, column: 58)
!13649 = !DILocation(line: 95, column: 2, scope: !13644, inlinedAt: !13647)
!13650 = !{i64 2600383}
!13651 = !DILocation(line: 172, column: 4, scope: !13648)
!13652 = !DILocation(line: 163, column: 21, scope: !13636)
!13653 = !DILocation(line: 178, column: 15, scope: !13654)
!13654 = distinct !DILexicalBlock(scope: !13655, file: !13554, line: 178, column: 8)
!13655 = distinct !DILexicalBlock(scope: !13636, file: !13554, line: 174, column: 10)
!13656 = !DILocation(line: 0, scope: !13644, inlinedAt: !13657)
!13657 = distinct !DILocation(line: 179, column: 5, scope: !13658)
!13658 = distinct !DILexicalBlock(scope: !13654, file: !13554, line: 178, column: 38)
!13659 = !DILocation(line: 0, scope: !13644, inlinedAt: !13660)
!13660 = distinct !DILocation(line: 186, column: 2, scope: !13591)
!13661 = !DILocation(line: 178, column: 8, scope: !13655)
!13662 = !DILocation(line: 189, column: 3, scope: !13663)
!13663 = distinct !DILexicalBlock(scope: !13664, file: !13554, line: 188, column: 41)
!13664 = distinct !DILexicalBlock(scope: !13591, file: !13554, line: 188, column: 6)
!13665 = !DILocation(line: 191, column: 1, scope: !13591)
!13666 = distinct !DISubprogram(name: "k_current_get", scope: !406, file: !406, line: 530, type: !13667, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3190, retainedNodes: !2296)
!13667 = !DISubroutineType(types: !13668)
!13668 = !{!13669}
!13669 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !13412)
!13670 = !DILocation(line: 535, column: 9, scope: !13666)
!13671 = !DILocation(line: 535, column: 2, scope: !13666)
!13672 = distinct !DISubprogram(name: "reason_to_str", scope: !13554, file: !13554, line: 62, type: !13673, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3190, retainedNodes: !13675)
!13673 = !DISubroutineType(types: !13674)
!13674 = !{!118, !32}
!13675 = !{!13676}
!13676 = !DILocalVariable(name: "reason", arg: 1, scope: !13672, file: !13554, line: 62, type: !32)
!13677 = !DILocation(line: 0, scope: !13672)
!13678 = !DILocation(line: 64, column: 2, scope: !13672)
!13679 = !DILocation(line: 0, scope: !13680)
!13680 = distinct !DILexicalBlock(scope: !13672, file: !13554, line: 64, column: 18)
!13681 = !DILocation(line: 78, column: 1, scope: !13672)
!13682 = distinct !DISubprogram(name: "thread_name_get", scope: !13554, file: !13554, line: 51, type: !13683, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3190, retainedNodes: !13685)
!13683 = !DISubroutineType(types: !13684)
!13684 = !{!118, !13412}
!13685 = !{!13686, !13687}
!13686 = !DILocalVariable(name: "thread", arg: 1, scope: !13682, file: !13554, line: 51, type: !13412)
!13687 = !DILocalVariable(name: "thread_name", scope: !13682, file: !13554, line: 53, type: !118)
!13688 = !DILocation(line: 0, scope: !13682)
!13689 = !DILocation(line: 53, column: 36, scope: !13682)
!13690 = !DILocation(line: 53, column: 28, scope: !13682)
!13691 = !DILocation(line: 53, column: 47, scope: !13682)
!13692 = !DILocation(line: 55, column: 19, scope: !13693)
!13693 = distinct !DILexicalBlock(scope: !13682, file: !13554, line: 55, column: 6)
!13694 = !DILocation(line: 55, column: 28, scope: !13693)
!13695 = !DILocation(line: 55, column: 32, scope: !13693)
!13696 = !DILocation(line: 55, column: 47, scope: !13693)
!13697 = !DILocation(line: 55, column: 6, scope: !13682)
!13698 = !DILocation(line: 57, column: 2, scope: !13699)
!13699 = distinct !DILexicalBlock(scope: !13693, file: !13554, line: 55, column: 57)
!13700 = !DILocation(line: 59, column: 2, scope: !13682)
!13701 = distinct !DISubprogram(name: "k_thread_abort", scope: !4558, file: !4558, line: 188, type: !13702, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3190, retainedNodes: !13704)
!13702 = !DISubroutineType(types: !13703)
!13703 = !{null, !13669}
!13704 = !{!13705}
!13705 = !DILocalVariable(name: "thread", arg: 1, scope: !13701, file: !4558, line: 188, type: !13669)
!13706 = !DILocation(line: 0, scope: !13701)
!13707 = !DILocation(line: 197, column: 2, scope: !13708)
!13708 = distinct !DILexicalBlock(scope: !13701, file: !4558, line: 197, column: 2)
!13709 = !{i64 2155447803}
!13710 = !DILocation(line: 198, column: 2, scope: !13701)
!13711 = !DILocation(line: 199, column: 1, scope: !13701)
!13712 = distinct !DISubprogram(name: "z_current_get", scope: !4558, file: !4558, line: 173, type: !13667, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3190, retainedNodes: !2296)
!13713 = !DILocation(line: 180, column: 2, scope: !13714)
!13714 = distinct !DILexicalBlock(scope: !13712, file: !4558, line: 180, column: 2)
!13715 = !{i64 2155447735}
!13716 = !DILocation(line: 181, column: 9, scope: !13712)
!13717 = !DILocation(line: 181, column: 2, scope: !13712)
!13718 = distinct !DISubprogram(name: "z_early_memset", scope: !2095, file: !2095, line: 108, type: !13719, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2091, retainedNodes: !13721)
!13719 = !DISubroutineType(types: !13720)
!13720 = !{null, !106, !107, !185}
!13721 = !{!13722, !13723, !13724}
!13722 = !DILocalVariable(name: "dst", arg: 1, scope: !13718, file: !2095, line: 108, type: !106)
!13723 = !DILocalVariable(name: "c", arg: 2, scope: !13718, file: !2095, line: 108, type: !107)
!13724 = !DILocalVariable(name: "n", arg: 3, scope: !13718, file: !2095, line: 108, type: !185)
!13725 = !DILocation(line: 0, scope: !13718)
!13726 = !DILocation(line: 110, column: 9, scope: !13718)
!13727 = !DILocation(line: 111, column: 1, scope: !13718)
!13728 = distinct !DISubprogram(name: "z_early_memcpy", scope: !2095, file: !2095, line: 121, type: !13729, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2091, retainedNodes: !13731)
!13729 = !DISubroutineType(types: !13730)
!13730 = !{null, !106, !13, !185}
!13731 = !{!13732, !13733, !13734}
!13732 = !DILocalVariable(name: "dst", arg: 1, scope: !13728, file: !2095, line: 121, type: !106)
!13733 = !DILocalVariable(name: "src", arg: 2, scope: !13728, file: !2095, line: 121, type: !13)
!13734 = !DILocalVariable(name: "n", arg: 3, scope: !13728, file: !2095, line: 121, type: !185)
!13735 = !DILocation(line: 0, scope: !13728)
!13736 = !DILocation(line: 123, column: 9, scope: !13728)
!13737 = !DILocation(line: 124, column: 1, scope: !13728)
!13738 = distinct !DISubprogram(name: "z_bss_zero", scope: !2095, file: !2095, line: 132, type: !3227, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2091, retainedNodes: !2296)
!13739 = !DILocation(line: 143, column: 2, scope: !13738)
!13740 = !DILocation(line: 145, column: 2, scope: !13738)
!13741 = !DILocation(line: 168, column: 1, scope: !13738)
!13742 = distinct !DISubprogram(name: "z_init_cpu", scope: !2095, file: !2095, line: 372, type: !9308, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2091, retainedNodes: !13743)
!13743 = !{!13744}
!13744 = !DILocalVariable(name: "id", arg: 1, scope: !13742, file: !2095, line: 372, type: !107)
!13745 = !DILocation(line: 0, scope: !13742)
!13746 = !DILocation(line: 374, column: 2, scope: !13742)
!13747 = !DILocation(line: 375, column: 34, scope: !13742)
!13748 = !DILocation(line: 375, column: 19, scope: !13742)
!13749 = !DILocation(line: 375, column: 31, scope: !13742)
!13750 = !DILocation(line: 376, column: 24, scope: !13742)
!13751 = !DILocation(line: 376, column: 19, scope: !13742)
!13752 = !DILocation(line: 376, column: 22, scope: !13742)
!13753 = !DILocation(line: 378, column: 26, scope: !13742)
!13754 = !DILocation(line: 378, column: 4, scope: !13742)
!13755 = !DILocation(line: 378, column: 50, scope: !13742)
!13756 = !DILocation(line: 377, column: 19, scope: !13742)
!13757 = !DILocation(line: 377, column: 29, scope: !13742)
!13758 = !DILocation(line: 384, column: 1, scope: !13742)
!13759 = distinct !DISubprogram(name: "init_idle_thread", scope: !2095, file: !2095, line: 343, type: !9308, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2091, retainedNodes: !13760)
!13760 = !{!13761, !13762, !13763, !13766}
!13761 = !DILocalVariable(name: "i", arg: 1, scope: !13759, file: !2095, line: 343, type: !107)
!13762 = !DILocalVariable(name: "thread", scope: !13759, file: !2095, line: 345, type: !2187)
!13763 = !DILocalVariable(name: "stack", scope: !13759, file: !2095, line: 346, type: !13764)
!13764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13765, size: 32)
!13765 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !560, line: 44, baseType: !2305)
!13766 = !DILocalVariable(name: "tname", scope: !13759, file: !2095, line: 354, type: !193)
!13767 = !DILocation(line: 0, scope: !13759)
!13768 = !DILocation(line: 345, column: 29, scope: !13759)
!13769 = !DILocation(line: 346, column: 28, scope: !13759)
!13770 = !DILocation(line: 362, column: 37, scope: !13759)
!13771 = !DILocation(line: 362, column: 36, scope: !13759)
!13772 = !DILocation(line: 361, column: 2, scope: !13759)
!13773 = !DILocation(line: 365, column: 2, scope: !13759)
!13774 = !DILocation(line: 370, column: 1, scope: !13759)
!13775 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !577, file: !577, line: 331, type: !13776, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2091, retainedNodes: !13778)
!13776 = !DISubroutineType(types: !13777)
!13777 = !{!193, !13764}
!13778 = !{!13779}
!13779 = !DILocalVariable(name: "sym", arg: 1, scope: !13775, file: !577, line: 331, type: !13764)
!13780 = !DILocation(line: 0, scope: !13775)
!13781 = !DILocation(line: 333, column: 21, scope: !13775)
!13782 = !DILocation(line: 333, column: 2, scope: !13775)
!13783 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13784, file: !13784, line: 155, type: !13785, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2091, retainedNodes: !13787)
!13784 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13785 = !DISubroutineType(types: !13786)
!13786 = !{null, !2187}
!13787 = !{!13788}
!13788 = !DILocalVariable(name: "thread", arg: 1, scope: !13783, file: !13784, line: 155, type: !2187)
!13789 = !DILocation(line: 0, scope: !13783)
!13790 = !DILocation(line: 157, column: 15, scope: !13783)
!13791 = !DILocation(line: 157, column: 28, scope: !13783)
!13792 = !DILocation(line: 158, column: 1, scope: !13783)
!13793 = distinct !DISubprogram(name: "z_cstart", scope: !2095, file: !2095, line: 501, type: !3227, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2091, retainedNodes: !13794)
!13794 = !{!13795}
!13795 = !DILocalVariable(name: "dummy_thread", scope: !13793, file: !2095, line: 518, type: !2188)
!13796 = !DILocation(line: 507, column: 2, scope: !13793)
!13797 = !DILocation(line: 43, column: 14, scope: !13798, inlinedAt: !13802)
!13798 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !13799, file: !13799, line: 40, type: !3227, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2091, retainedNodes: !13800)
!13799 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13800 = !{!13801}
!13801 = !DILocalVariable(name: "msp", scope: !13798, file: !13799, line: 42, type: !152)
!13802 = distinct !DILocation(line: 44, column: 2, scope: !13803, inlinedAt: !13805)
!13803 = distinct !DISubprogram(name: "arch_kernel_init", scope: !13804, file: !13804, line: 42, type: !3227, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2091, retainedNodes: !2296)
!13804 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13805 = distinct !DILocation(line: 510, column: 2, scope: !13793)
!13806 = !DILocation(line: 43, column: 3, scope: !13798, inlinedAt: !13802)
!13807 = !DILocation(line: 43, column: 60, scope: !13798, inlinedAt: !13802)
!13808 = !DILocation(line: 0, scope: !13798, inlinedAt: !13802)
!13809 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !13810, file: !6394, line: 1153, type: !152)
!13810 = distinct !DISubprogram(name: "__set_MSP", scope: !6394, file: !6394, line: 1153, type: !6491, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2091, retainedNodes: !13811)
!13811 = !{!13809}
!13812 = !DILocation(line: 0, scope: !13810, inlinedAt: !13813)
!13813 = distinct !DILocation(line: 46, column: 2, scope: !13798, inlinedAt: !13802)
!13814 = !DILocation(line: 1155, column: 3, scope: !13810, inlinedAt: !13813)
!13815 = !{i64 4135162}
!13816 = !DILocation(line: 62, column: 11, scope: !13798, inlinedAt: !13802)
!13817 = !DILocation(line: 102, column: 2, scope: !13818, inlinedAt: !13819)
!13818 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !7446, file: !7446, line: 97, type: !3227, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2091, retainedNodes: !2296)
!13819 = distinct !DILocation(line: 45, column: 2, scope: !13803, inlinedAt: !13805)
!13820 = !DILocation(line: 108, column: 2, scope: !13818, inlinedAt: !13819)
!13821 = !DILocation(line: 112, column: 2, scope: !13818, inlinedAt: !13819)
!13822 = !DILocation(line: 113, column: 2, scope: !13818, inlinedAt: !13819)
!13823 = !DILocation(line: 114, column: 2, scope: !13818, inlinedAt: !13819)
!13824 = !DILocation(line: 116, column: 2, scope: !13818, inlinedAt: !13819)
!13825 = !DILocation(line: 123, column: 13, scope: !13818, inlinedAt: !13819)
!13826 = !DILocation(line: 46, column: 2, scope: !13803, inlinedAt: !13805)
!13827 = !DILocation(line: 47, column: 2, scope: !13803, inlinedAt: !13805)
!13828 = !DILocation(line: 174, column: 12, scope: !13829, inlinedAt: !13830)
!13829 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !7446, file: !7446, line: 169, type: !3227, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2091, retainedNodes: !2296)
!13830 = distinct !DILocation(line: 48, column: 2, scope: !13803, inlinedAt: !13805)
!13831 = !DILocation(line: 179, column: 12, scope: !13829, inlinedAt: !13830)
!13832 = !DILocation(line: 50, column: 2, scope: !13803, inlinedAt: !13805)
!13833 = !DILocation(line: 57, column: 2, scope: !13803, inlinedAt: !13805)
!13834 = !DILocation(line: 518, column: 2, scope: !13793)
!13835 = !DILocation(line: 518, column: 18, scope: !13793)
!13836 = !DILocation(line: 520, column: 2, scope: !13793)
!13837 = !DILocation(line: 523, column: 2, scope: !13793)
!13838 = !DILocation(line: 526, column: 2, scope: !13793)
!13839 = !DILocation(line: 527, column: 2, scope: !13793)
!13840 = !DILocation(line: 543, column: 24, scope: !13793)
!13841 = !DILocation(line: 543, column: 2, scope: !13793)
!13842 = !DILocation(line: 0, scope: !2327)
!13843 = !DILocation(line: 246, column: 15, scope: !2345)
!13844 = !DILocation(line: 246, column: 36, scope: !2344)
!13845 = !DILocation(line: 246, column: 2, scope: !2345)
!13846 = !DILocation(line: 247, column: 37, scope: !2343)
!13847 = !DILocation(line: 0, scope: !2343)
!13848 = !DILocation(line: 248, column: 19, scope: !2343)
!13849 = !DILocation(line: 248, column: 12, scope: !2343)
!13850 = !DILocation(line: 250, column: 11, scope: !13851)
!13851 = distinct !DILexicalBlock(scope: !2343, file: !2095, line: 250, column: 7)
!13852 = !DILocation(line: 250, column: 7, scope: !2343)
!13853 = !DILocation(line: 254, column: 11, scope: !13854)
!13854 = distinct !DILexicalBlock(scope: !13855, file: !2095, line: 254, column: 8)
!13855 = distinct !DILexicalBlock(scope: !13851, file: !2095, line: 250, column: 20)
!13856 = !DILocation(line: 254, column: 8, scope: !13855)
!13857 = !DILocation(line: 255, column: 9, scope: !13858)
!13858 = distinct !DILexicalBlock(scope: !13854, file: !2095, line: 254, column: 17)
!13859 = !DILocation(line: 258, column: 9, scope: !13858)
!13860 = !DILocation(line: 261, column: 28, scope: !13858)
!13861 = !DILocation(line: 261, column: 10, scope: !13858)
!13862 = !DILocation(line: 261, column: 17, scope: !13858)
!13863 = !DILocation(line: 261, column: 26, scope: !13858)
!13864 = !DILocation(line: 262, column: 4, scope: !13858)
!13865 = !DILocation(line: 263, column: 9, scope: !13855)
!13866 = !DILocation(line: 263, column: 16, scope: !13855)
!13867 = !DILocation(line: 263, column: 28, scope: !13855)
!13868 = !DILocation(line: 264, column: 3, scope: !13855)
!13869 = !DILocation(line: 246, column: 60, scope: !2344)
!13870 = distinct !{!13870, !13845, !13871}
!13871 = !DILocation(line: 265, column: 2, scope: !2345)
!13872 = !DILocation(line: 266, column: 1, scope: !2327)
!13873 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !463, file: !463, line: 1814, type: !6434, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2091, retainedNodes: !13874)
!13874 = !{!13875, !13876}
!13875 = !DILocalVariable(name: "IRQn", arg: 1, scope: !13873, file: !463, line: 1814, type: !932)
!13876 = !DILocalVariable(name: "priority", arg: 2, scope: !13873, file: !463, line: 1814, type: !152)
!13877 = !DILocation(line: 0, scope: !13873)
!13878 = !DILocation(line: 1822, column: 48, scope: !13879)
!13879 = distinct !DILexicalBlock(scope: !13880, file: !463, line: 1821, column: 3)
!13880 = distinct !DILexicalBlock(scope: !13873, file: !463, line: 1816, column: 7)
!13881 = !DILocation(line: 1822, column: 32, scope: !13879)
!13882 = !DILocation(line: 1822, column: 40, scope: !13879)
!13883 = !DILocation(line: 1822, column: 5, scope: !13879)
!13884 = !DILocation(line: 1822, column: 46, scope: !13879)
!13885 = !DILocation(line: 1824, column: 1, scope: !13873)
!13886 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !13804, file: !13804, line: 32, type: !3227, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2296)
!13887 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !13888, file: !13888, line: 215, type: !13785, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2091, retainedNodes: !13889)
!13888 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13889 = !{!13890}
!13890 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !13887, file: !13888, line: 215, type: !2187)
!13891 = !DILocation(line: 0, scope: !13887)
!13892 = !DILocation(line: 217, column: 21, scope: !13887)
!13893 = !DILocation(line: 217, column: 34, scope: !13887)
!13894 = !DILocation(line: 221, column: 21, scope: !13887)
!13895 = !DILocation(line: 221, column: 34, scope: !13887)
!13896 = !DILocation(line: 223, column: 27, scope: !13887)
!13897 = !DILocation(line: 223, column: 33, scope: !13887)
!13898 = !DILocation(line: 224, column: 27, scope: !13887)
!13899 = !DILocation(line: 224, column: 32, scope: !13887)
!13900 = !DILocation(line: 232, column: 16, scope: !13887)
!13901 = !DILocation(line: 232, column: 30, scope: !13887)
!13902 = !DILocation(line: 239, column: 24, scope: !13887)
!13903 = !DILocation(line: 240, column: 1, scope: !13887)
!13904 = distinct !DISubprogram(name: "prepare_multithreading", scope: !2095, file: !2095, line: 399, type: !13905, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2091, retainedNodes: !13907)
!13905 = !DISubroutineType(types: !13906)
!13906 = !{!193}
!13907 = !{!13908}
!13908 = !DILocalVariable(name: "stack_ptr", scope: !13904, file: !2095, line: 401, type: !193)
!13909 = !DILocation(line: 404, column: 2, scope: !13904)
!13910 = !DILocation(line: 416, column: 24, scope: !13904)
!13911 = !DILocation(line: 418, column: 14, scope: !13904)
!13912 = !DILocation(line: 0, scope: !13904)
!13913 = !DILocation(line: 423, column: 2, scope: !13904)
!13914 = !DILocation(line: 424, column: 2, scope: !13904)
!13915 = !DILocation(line: 426, column: 2, scope: !13904)
!13916 = !DILocation(line: 428, column: 2, scope: !13904)
!13917 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !2095, file: !2095, line: 432, type: !13918, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2091, retainedNodes: !13920)
!13918 = !DISubroutineType(types: !13919)
!13919 = !{null, !193}
!13920 = !{!13921}
!13921 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !13917, file: !2095, line: 432, type: !193)
!13922 = !DILocation(line: 0, scope: !13917)
!13923 = !DILocation(line: 435, column: 2, scope: !13917)
!13924 = !DILocation(line: 445, column: 2, scope: !13917)
!13925 = distinct !DISubprogram(name: "bg_thread_main", scope: !2095, file: !2095, line: 277, type: !562, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2091, retainedNodes: !13926)
!13926 = !{!13927, !13928, !13929}
!13927 = !DILocalVariable(name: "unused1", arg: 1, scope: !13925, file: !2095, line: 277, type: !106)
!13928 = !DILocalVariable(name: "unused2", arg: 2, scope: !13925, file: !2095, line: 277, type: !106)
!13929 = !DILocalVariable(name: "unused3", arg: 3, scope: !13925, file: !2095, line: 277, type: !106)
!13930 = !DILocation(line: 0, scope: !13925)
!13931 = !DILocation(line: 291, column: 20, scope: !13925)
!13932 = !DILocation(line: 293, column: 2, scope: !13925)
!13933 = !DILocation(line: 297, column: 2, scope: !13925)
!13934 = !DILocation(line: 305, column: 2, scope: !13925)
!13935 = !DILocation(line: 307, column: 2, scope: !13925)
!13936 = !DILocation(line: 330, column: 8, scope: !13925)
!13937 = !DILocation(line: 333, column: 34, scope: !13925)
!13938 = !DILocation(line: 339, column: 1, scope: !13925)
!13939 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2358, file: !2358, line: 45, type: !13940, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !13948)
!13940 = !DISubroutineType(types: !13941)
!13941 = !{null, !13942, !106}
!13942 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !406, line: 103, baseType: !13943)
!13943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13944, size: 32)
!13944 = !DISubroutineType(types: !13945)
!13945 = !{null, !13946, !106}
!13946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13947, size: 32)
!13947 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2363)
!13948 = !{!13949, !13950}
!13949 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13939, file: !2358, line: 45, type: !13942)
!13950 = !DILocalVariable(name: "user_data", arg: 2, scope: !13939, file: !2358, line: 45, type: !106)
!13951 = !DILocation(line: 0, scope: !13939)
!13952 = !DILocation(line: 71, column: 1, scope: !13939)
!13953 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2358, file: !2358, line: 73, type: !13940, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !13954)
!13954 = !{!13955, !13956}
!13955 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13953, file: !2358, line: 73, type: !13942)
!13956 = !DILocalVariable(name: "user_data", arg: 2, scope: !13953, file: !2358, line: 73, type: !106)
!13957 = !DILocation(line: 0, scope: !13953)
!13958 = !DILocation(line: 95, column: 1, scope: !13953)
!13959 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2358, file: !2358, line: 97, type: !7447, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !2296)
!13960 = !DILocation(line: 1031, column: 3, scope: !13961, inlinedAt: !13964)
!13961 = distinct !DISubprogram(name: "__get_IPSR", scope: !6394, file: !6394, line: 1027, type: !6481, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !13962)
!13962 = !{!13963}
!13963 = !DILocalVariable(name: "result", scope: !13961, file: !6394, line: 1029, type: !152)
!13964 = distinct !DILocation(line: 48, column: 10, scope: !13965, inlinedAt: !13966)
!13965 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7446, file: !7446, line: 46, type: !7447, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !2296)
!13966 = distinct !DILocation(line: 99, column: 9, scope: !13959)
!13967 = !{i64 4140813}
!13968 = !DILocation(line: 0, scope: !13961, inlinedAt: !13964)
!13969 = !DILocation(line: 48, column: 9, scope: !13965, inlinedAt: !13966)
!13970 = !DILocation(line: 99, column: 2, scope: !13959)
!13971 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2358, file: !2358, line: 106, type: !3227, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !2296)
!13972 = !DILocation(line: 108, column: 2, scope: !13971)
!13973 = !DILocation(line: 108, column: 17, scope: !13971)
!13974 = !DILocation(line: 108, column: 30, scope: !13971)
!13975 = !DILocation(line: 109, column: 1, scope: !13971)
!13976 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2358, file: !2358, line: 116, type: !3227, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !2296)
!13977 = !DILocation(line: 118, column: 2, scope: !13976)
!13978 = !DILocation(line: 118, column: 17, scope: !13976)
!13979 = !DILocation(line: 118, column: 30, scope: !13976)
!13980 = !DILocation(line: 119, column: 1, scope: !13976)
!13981 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2358, file: !2358, line: 126, type: !7447, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !2296)
!13982 = !DILocation(line: 128, column: 10, scope: !13981)
!13983 = !DILocation(line: 128, column: 25, scope: !13981)
!13984 = !DILocation(line: 128, column: 38, scope: !13981)
!13985 = !DILocation(line: 128, column: 53, scope: !13981)
!13986 = !DILocation(line: 128, column: 2, scope: !13981)
!13987 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2358, file: !2358, line: 187, type: !13988, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !13990)
!13988 = !DISubroutineType(types: !13989)
!13989 = !{!107, !2362, !118}
!13990 = !{!13991, !13992}
!13991 = !DILocalVariable(name: "thread", arg: 1, scope: !13987, file: !2358, line: 187, type: !2362)
!13992 = !DILocalVariable(name: "value", arg: 2, scope: !13987, file: !2358, line: 187, type: !118)
!13993 = !DILocation(line: 0, scope: !13987)
!13994 = !DILocation(line: 190, column: 13, scope: !13995)
!13995 = distinct !DILexicalBlock(scope: !13987, file: !2358, line: 190, column: 6)
!13996 = !DILocation(line: 190, column: 6, scope: !13987)
!13997 = !DILocation(line: 194, column: 10, scope: !13987)
!13998 = !DILocation(line: 194, column: 2, scope: !13987)
!13999 = !DILocation(line: 195, column: 2, scope: !13987)
!14000 = !DILocation(line: 195, column: 47, scope: !13987)
!14001 = !DILocation(line: 199, column: 2, scope: !13987)
!14002 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2358, file: !2358, line: 238, type: !14003, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !14005)
!14003 = !DISubroutineType(types: !14004)
!14004 = !{!118, !2362}
!14005 = !{!14006}
!14006 = !DILocalVariable(name: "thread", arg: 1, scope: !14002, file: !2358, line: 238, type: !2362)
!14007 = !DILocation(line: 0, scope: !14002)
!14008 = !DILocation(line: 241, column: 23, scope: !14002)
!14009 = !DILocation(line: 241, column: 2, scope: !14002)
!14010 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2358, file: !2358, line: 248, type: !14011, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !14013)
!14011 = !DISubroutineType(types: !14012)
!14012 = !{!107, !2361, !193, !185}
!14013 = !{!14014, !14015, !14016}
!14014 = !DILocalVariable(name: "thread", arg: 1, scope: !14010, file: !2358, line: 248, type: !2361)
!14015 = !DILocalVariable(name: "buf", arg: 2, scope: !14010, file: !2358, line: 248, type: !193)
!14016 = !DILocalVariable(name: "size", arg: 3, scope: !14010, file: !2358, line: 248, type: !185)
!14017 = !DILocation(line: 0, scope: !14010)
!14018 = !DILocation(line: 251, column: 15, scope: !14010)
!14019 = !DILocation(line: 251, column: 2, scope: !14010)
!14020 = !DILocation(line: 252, column: 2, scope: !14010)
!14021 = !DILocation(line: 0, scope: !2357)
!14022 = !DILocation(line: 281, column: 11, scope: !14023)
!14023 = distinct !DILexicalBlock(scope: !2357, file: !2358, line: 281, column: 6)
!14024 = !DILocation(line: 281, column: 20, scope: !14023)
!14025 = !DILocation(line: 275, column: 45, scope: !2357)
!14026 = !DILocation(line: 285, column: 10, scope: !2357)
!14027 = !DILocation(line: 0, scope: !2481)
!14028 = !DILocation(line: 293, column: 39, scope: !14029)
!14029 = distinct !DILexicalBlock(scope: !2481, file: !2358, line: 293, column: 2)
!14030 = !DILocation(line: 293, column: 2, scope: !2481)
!14031 = !DILocation(line: 273, column: 14, scope: !2357)
!14032 = !DILocation(line: 309, column: 2, scope: !2357)
!14033 = !DILocation(line: 309, column: 11, scope: !2357)
!14034 = !DILocation(line: 311, column: 2, scope: !2357)
!14035 = !DILocation(line: 293, column: 26, scope: !14029)
!14036 = !DILocation(line: 294, column: 9, scope: !14037)
!14037 = distinct !DILexicalBlock(scope: !14029, file: !2358, line: 293, column: 54)
!14038 = !DILocation(line: 295, column: 21, scope: !14039)
!14039 = distinct !DILexicalBlock(scope: !14037, file: !2358, line: 295, column: 7)
!14040 = !DILocation(line: 295, column: 28, scope: !14039)
!14041 = !DILocation(line: 295, column: 7, scope: !14037)
!14042 = !DILocation(line: 299, column: 25, scope: !14037)
!14043 = !DILocation(line: 299, column: 41, scope: !14037)
!14044 = !DILocation(line: 300, column: 7, scope: !14037)
!14045 = !DILocation(line: 300, column: 26, scope: !14037)
!14046 = !DILocation(line: 299, column: 10, scope: !14037)
!14047 = !DILocation(line: 299, column: 7, scope: !14037)
!14048 = !DILocation(line: 302, column: 16, scope: !14037)
!14049 = !DILocation(line: 304, column: 20, scope: !14050)
!14050 = distinct !DILexicalBlock(scope: !14037, file: !2358, line: 304, column: 7)
!14051 = !DILocation(line: 304, column: 7, scope: !14037)
!14052 = !DILocation(line: 305, column: 26, scope: !14053)
!14053 = distinct !DILexicalBlock(scope: !14050, file: !2358, line: 304, column: 26)
!14054 = !DILocation(line: 305, column: 42, scope: !14053)
!14055 = !DILocation(line: 305, column: 11, scope: !14053)
!14056 = !DILocation(line: 305, column: 8, scope: !14053)
!14057 = !DILocation(line: 306, column: 3, scope: !14053)
!14058 = !DILocation(line: 293, column: 50, scope: !14029)
!14059 = !DILocation(line: 312, column: 1, scope: !2357)
!14060 = distinct !DISubprogram(name: "copy_bytes", scope: !2358, file: !2358, line: 261, type: !14061, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !14063)
!14061 = !DISubroutineType(types: !14062)
!14062 = !{!185, !193, !185, !118, !185}
!14063 = !{!14064, !14065, !14066, !14067, !14068}
!14064 = !DILocalVariable(name: "dest", arg: 1, scope: !14060, file: !2358, line: 261, type: !193)
!14065 = !DILocalVariable(name: "dest_size", arg: 2, scope: !14060, file: !2358, line: 261, type: !185)
!14066 = !DILocalVariable(name: "src", arg: 3, scope: !14060, file: !2358, line: 261, type: !118)
!14067 = !DILocalVariable(name: "src_size", arg: 4, scope: !14060, file: !2358, line: 261, type: !185)
!14068 = !DILocalVariable(name: "bytes_to_copy", scope: !14060, file: !2358, line: 263, type: !185)
!14069 = !DILocation(line: 0, scope: !14060)
!14070 = !DILocation(line: 265, column: 18, scope: !14060)
!14071 = !DILocation(line: 266, column: 2, scope: !14060)
!14072 = !DILocation(line: 268, column: 2, scope: !14060)
!14073 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2358, file: !2358, line: 383, type: !14074, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !14076)
!14074 = !DISubroutineType(types: !14075)
!14075 = !{null, !2362}
!14076 = !{!14077}
!14077 = !DILocalVariable(name: "thread", arg: 1, scope: !14073, file: !2358, line: 383, type: !2362)
!14078 = !DILocation(line: 0, scope: !14073)
!14079 = !DILocation(line: 387, column: 2, scope: !14073)
!14080 = !DILocation(line: 388, column: 1, scope: !14073)
!14081 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2358, file: !2358, line: 528, type: !14082, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !14089)
!14082 = !DISubroutineType(types: !14083)
!14083 = !{!193, !2362, !14084, !185, !559, !106, !106, !106, !107, !152, !118}
!14084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14085, size: 32)
!14085 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !560, line: 44, baseType: !14086)
!14086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !577, line: 47, size: 8, elements: !14087)
!14087 = !{!14088}
!14088 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !14086, file: !577, line: 48, baseType: !120, size: 8)
!14089 = !{!14090, !14091, !14092, !14093, !14094, !14095, !14096, !14097, !14098, !14099, !14100}
!14090 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14081, file: !2358, line: 528, type: !2362)
!14091 = !DILocalVariable(name: "stack", arg: 2, scope: !14081, file: !2358, line: 529, type: !14084)
!14092 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14081, file: !2358, line: 529, type: !185)
!14093 = !DILocalVariable(name: "entry", arg: 4, scope: !14081, file: !2358, line: 530, type: !559)
!14094 = !DILocalVariable(name: "p1", arg: 5, scope: !14081, file: !2358, line: 531, type: !106)
!14095 = !DILocalVariable(name: "p2", arg: 6, scope: !14081, file: !2358, line: 531, type: !106)
!14096 = !DILocalVariable(name: "p3", arg: 7, scope: !14081, file: !2358, line: 531, type: !106)
!14097 = !DILocalVariable(name: "prio", arg: 8, scope: !14081, file: !2358, line: 532, type: !107)
!14098 = !DILocalVariable(name: "options", arg: 9, scope: !14081, file: !2358, line: 532, type: !152)
!14099 = !DILocalVariable(name: "name", arg: 10, scope: !14081, file: !2358, line: 532, type: !118)
!14100 = !DILocalVariable(name: "stack_ptr", scope: !14081, file: !2358, line: 534, type: !193)
!14101 = !DILocation(line: 0, scope: !14081)
!14102 = !DILocation(line: 536, column: 2, scope: !14103)
!14103 = distinct !DILexicalBlock(scope: !14104, file: !2358, line: 536, column: 2)
!14104 = distinct !DILexicalBlock(scope: !14105, file: !2358, line: 536, column: 2)
!14105 = distinct !DILexicalBlock(scope: !14081, file: !2358, line: 536, column: 2)
!14106 = !DILocation(line: 536, column: 2, scope: !14107)
!14107 = distinct !DILexicalBlock(scope: !14103, file: !2358, line: 536, column: 2)
!14108 = !DILocation(line: 550, column: 28, scope: !14081)
!14109 = !DILocation(line: 550, column: 2, scope: !14081)
!14110 = !DILocation(line: 553, column: 34, scope: !14081)
!14111 = !DILocation(line: 553, column: 2, scope: !14081)
!14112 = !DILocation(line: 554, column: 14, scope: !14081)
!14113 = !DILocation(line: 564, column: 2, scope: !14081)
!14114 = !DILocation(line: 567, column: 14, scope: !14081)
!14115 = !DILocation(line: 567, column: 24, scope: !14081)
!14116 = !DILocation(line: 594, column: 11, scope: !14117)
!14117 = distinct !DILexicalBlock(scope: !14081, file: !2358, line: 594, column: 6)
!14118 = !DILocation(line: 0, scope: !14117)
!14119 = !DILocation(line: 594, column: 6, scope: !14081)
!14120 = !DILocation(line: 595, column: 3, scope: !14121)
!14121 = distinct !DILexicalBlock(scope: !14117, file: !2358, line: 594, column: 20)
!14122 = !DILocation(line: 598, column: 3, scope: !14121)
!14123 = !DILocation(line: 598, column: 52, scope: !14121)
!14124 = !DILocation(line: 599, column: 2, scope: !14121)
!14125 = !DILocation(line: 600, column: 23, scope: !14126)
!14126 = distinct !DILexicalBlock(scope: !14117, file: !2358, line: 599, column: 9)
!14127 = !DILocation(line: 612, column: 7, scope: !14128)
!14128 = distinct !DILexicalBlock(scope: !14081, file: !2358, line: 612, column: 6)
!14129 = !DILocation(line: 612, column: 6, scope: !14081)
!14130 = !DILocation(line: 627, column: 40, scope: !14081)
!14131 = !DILocation(line: 637, column: 2, scope: !14081)
!14132 = !DILocation(line: 613, column: 15, scope: !14133)
!14133 = distinct !DILexicalBlock(scope: !14128, file: !2358, line: 612, column: 17)
!14134 = !DILocation(line: 613, column: 29, scope: !14133)
!14135 = !DILocation(line: 638, column: 1, scope: !14081)
!14136 = distinct !DISubprogram(name: "z_is_idle_thread_entry", scope: !13784, file: !13784, line: 78, type: !14137, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !14139)
!14137 = !DISubroutineType(types: !14138)
!14138 = !{!145, !106}
!14139 = !{!14140}
!14140 = !DILocalVariable(name: "entry_point", arg: 1, scope: !14136, file: !13784, line: 78, type: !106)
!14141 = !DILocation(line: 0, scope: !14136)
!14142 = !DILocation(line: 80, column: 21, scope: !14136)
!14143 = !DILocation(line: 80, column: 2, scope: !14136)
!14144 = distinct !DISubprogram(name: "z_waitq_init", scope: !14145, file: !14145, line: 47, type: !14146, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !14148)
!14145 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14146 = !DISubroutineType(types: !14147)
!14147 = !{null, !2393}
!14148 = !{!14149}
!14149 = !DILocalVariable(name: "w", arg: 1, scope: !14144, file: !14145, line: 47, type: !2393)
!14150 = !DILocation(line: 0, scope: !14144)
!14151 = !DILocation(line: 49, column: 21, scope: !14144)
!14152 = !DILocation(line: 49, column: 2, scope: !14144)
!14153 = !DILocation(line: 50, column: 1, scope: !14144)
!14154 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2358, file: !2358, line: 791, type: !14155, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !14158)
!14155 = !DISubroutineType(types: !14156)
!14156 = !{null, !14157, !107, !152, !32}
!14157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2366, size: 32)
!14158 = !{!14159, !14160, !14161, !14162}
!14159 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14154, file: !2358, line: 791, type: !14157)
!14160 = !DILocalVariable(name: "priority", arg: 2, scope: !14154, file: !2358, line: 791, type: !107)
!14161 = !DILocalVariable(name: "initial_state", arg: 3, scope: !14154, file: !2358, line: 792, type: !152)
!14162 = !DILocalVariable(name: "options", arg: 4, scope: !14154, file: !2358, line: 792, type: !32)
!14163 = !DILocation(line: 0, scope: !14154)
!14164 = !DILocation(line: 795, column: 15, scope: !14154)
!14165 = !DILocation(line: 795, column: 25, scope: !14154)
!14166 = !DILocation(line: 796, column: 30, scope: !14154)
!14167 = !DILocation(line: 796, column: 15, scope: !14154)
!14168 = !DILocation(line: 796, column: 28, scope: !14154)
!14169 = !DILocation(line: 797, column: 30, scope: !14154)
!14170 = !DILocation(line: 797, column: 15, scope: !14154)
!14171 = !DILocation(line: 797, column: 28, scope: !14154)
!14172 = !DILocation(line: 799, column: 22, scope: !14154)
!14173 = !DILocation(line: 799, column: 15, scope: !14154)
!14174 = !DILocation(line: 799, column: 20, scope: !14154)
!14175 = !DILocation(line: 801, column: 15, scope: !14154)
!14176 = !DILocation(line: 801, column: 28, scope: !14154)
!14177 = !DILocation(line: 814, column: 2, scope: !14154)
!14178 = !DILocation(line: 815, column: 1, scope: !14154)
!14179 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2358, file: !2358, line: 449, type: !14180, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !14182)
!14180 = !DISubroutineType(types: !14181)
!14181 = !{!193, !2362, !14084, !185}
!14182 = !{!14183, !14184, !14185, !14186, !14187, !14188, !14189, !14190}
!14183 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14179, file: !2358, line: 449, type: !2362)
!14184 = !DILocalVariable(name: "stack", arg: 2, scope: !14179, file: !2358, line: 450, type: !14084)
!14185 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14179, file: !2358, line: 450, type: !185)
!14186 = !DILocalVariable(name: "stack_obj_size", scope: !14179, file: !2358, line: 452, type: !185)
!14187 = !DILocalVariable(name: "stack_buf_size", scope: !14179, file: !2358, line: 452, type: !185)
!14188 = !DILocalVariable(name: "stack_ptr", scope: !14179, file: !2358, line: 453, type: !193)
!14189 = !DILocalVariable(name: "stack_buf_start", scope: !14179, file: !2358, line: 453, type: !193)
!14190 = !DILocalVariable(name: "delta", scope: !14179, file: !2358, line: 454, type: !185)
!14191 = !DILocation(line: 0, scope: !14179)
!14192 = !DILocation(line: 465, column: 20, scope: !14193)
!14193 = distinct !DILexicalBlock(scope: !14179, file: !2358, line: 463, column: 2)
!14194 = !DILocation(line: 466, column: 21, scope: !14193)
!14195 = !DILocation(line: 473, column: 28, scope: !14179)
!14196 = !DILocation(line: 514, column: 33, scope: !14179)
!14197 = !DILocation(line: 514, column: 25, scope: !14179)
!14198 = !DILocation(line: 514, column: 31, scope: !14179)
!14199 = !DILocation(line: 515, column: 25, scope: !14179)
!14200 = !DILocation(line: 515, column: 30, scope: !14179)
!14201 = !DILocation(line: 516, column: 25, scope: !14179)
!14202 = !DILocation(line: 516, column: 31, scope: !14179)
!14203 = !DILocation(line: 520, column: 2, scope: !14179)
!14204 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !577, file: !577, line: 331, type: !14205, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !14207)
!14205 = !DISubroutineType(types: !14206)
!14206 = !{!193, !14084}
!14207 = !{!14208}
!14208 = !DILocalVariable(name: "sym", arg: 1, scope: !14204, file: !577, line: 331, type: !14084)
!14209 = !DILocation(line: 0, scope: !14204)
!14210 = !DILocation(line: 333, column: 21, scope: !14204)
!14211 = !DILocation(line: 333, column: 2, scope: !14204)
!14212 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !14213, file: !14213, line: 40, type: !14214, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !14216)
!14213 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14214 = !DISubroutineType(types: !14215)
!14215 = !{null, !14157}
!14216 = !{!14217}
!14217 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14212, file: !14213, line: 40, type: !14157)
!14218 = !DILocation(line: 0, scope: !14212)
!14219 = !DILocation(line: 42, column: 31, scope: !14212)
!14220 = !DILocation(line: 42, column: 2, scope: !14212)
!14221 = !DILocation(line: 43, column: 1, scope: !14212)
!14222 = distinct !DISubprogram(name: "z_init_timeout", scope: !14213, file: !14213, line: 25, type: !2419, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !14223)
!14223 = !{!14224}
!14224 = !DILocalVariable(name: "to", arg: 1, scope: !14222, file: !14213, line: 25, type: !2421)
!14225 = !DILocation(line: 0, scope: !14222)
!14226 = !DILocation(line: 27, column: 22, scope: !14222)
!14227 = !DILocation(line: 27, column: 2, scope: !14222)
!14228 = !DILocation(line: 28, column: 1, scope: !14222)
!14229 = distinct !DISubprogram(name: "sys_dnode_init", scope: !319, file: !319, line: 211, type: !14230, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !14232)
!14230 = !DISubroutineType(types: !14231)
!14231 = !{null, !2468}
!14232 = !{!14233}
!14233 = !DILocalVariable(name: "node", arg: 1, scope: !14229, file: !319, line: 211, type: !2468)
!14234 = !DILocation(line: 0, scope: !14229)
!14235 = !DILocation(line: 213, column: 8, scope: !14229)
!14236 = !DILocation(line: 213, column: 13, scope: !14229)
!14237 = !DILocation(line: 214, column: 8, scope: !14229)
!14238 = !DILocation(line: 214, column: 13, scope: !14229)
!14239 = !DILocation(line: 215, column: 1, scope: !14229)
!14240 = distinct !DISubprogram(name: "sys_dlist_init", scope: !319, file: !319, line: 197, type: !14241, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !14244)
!14241 = !DISubroutineType(types: !14242)
!14242 = !{null, !14243}
!14243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2398, size: 32)
!14244 = !{!14245}
!14245 = !DILocalVariable(name: "list", arg: 1, scope: !14240, file: !319, line: 197, type: !14243)
!14246 = !DILocation(line: 0, scope: !14240)
!14247 = !DILocation(line: 199, column: 8, scope: !14240)
!14248 = !DILocation(line: 199, column: 13, scope: !14240)
!14249 = !DILocation(line: 200, column: 8, scope: !14240)
!14250 = !DILocation(line: 200, column: 13, scope: !14240)
!14251 = !DILocation(line: 201, column: 1, scope: !14240)
!14252 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2358, file: !2358, line: 641, type: !14253, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !14259)
!14253 = !DISubroutineType(types: !14254)
!14254 = !{!2361, !2362, !14084, !185, !559, !106, !106, !106, !107, !152, !14255}
!14255 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !565, line: 67, baseType: !14256)
!14256 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !565, line: 65, size: 64, elements: !14257)
!14257 = !{!14258}
!14258 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14256, file: !565, line: 66, baseType: !564, size: 64)
!14259 = !{!14260, !14261, !14262, !14263, !14264, !14265, !14266, !14267, !14268, !14269}
!14260 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14252, file: !2358, line: 641, type: !2362)
!14261 = !DILocalVariable(name: "stack", arg: 2, scope: !14252, file: !2358, line: 642, type: !14084)
!14262 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14252, file: !2358, line: 643, type: !185)
!14263 = !DILocalVariable(name: "entry", arg: 4, scope: !14252, file: !2358, line: 643, type: !559)
!14264 = !DILocalVariable(name: "p1", arg: 5, scope: !14252, file: !2358, line: 644, type: !106)
!14265 = !DILocalVariable(name: "p2", arg: 6, scope: !14252, file: !2358, line: 644, type: !106)
!14266 = !DILocalVariable(name: "p3", arg: 7, scope: !14252, file: !2358, line: 644, type: !106)
!14267 = !DILocalVariable(name: "prio", arg: 8, scope: !14252, file: !2358, line: 645, type: !107)
!14268 = !DILocalVariable(name: "options", arg: 9, scope: !14252, file: !2358, line: 645, type: !152)
!14269 = !DILocalVariable(name: "delay", arg: 10, scope: !14252, file: !2358, line: 645, type: !14255)
!14270 = !DILocation(line: 0, scope: !14252)
!14271 = !DILocation(line: 1031, column: 3, scope: !13961, inlinedAt: !14272)
!14272 = distinct !DILocation(line: 48, column: 10, scope: !13965, inlinedAt: !14273)
!14273 = distinct !DILocation(line: 647, column: 2, scope: !14274)
!14274 = distinct !DILexicalBlock(scope: !14275, file: !2358, line: 647, column: 2)
!14275 = distinct !DILexicalBlock(scope: !14252, file: !2358, line: 647, column: 2)
!14276 = !DILocation(line: 0, scope: !13961, inlinedAt: !14272)
!14277 = !DILocation(line: 48, column: 9, scope: !13965, inlinedAt: !14273)
!14278 = !DILocation(line: 647, column: 2, scope: !14275)
!14279 = !DILocation(line: 647, column: 2, scope: !14280)
!14280 = distinct !DILexicalBlock(scope: !14274, file: !2358, line: 647, column: 2)
!14281 = !DILocation(line: 649, column: 2, scope: !14252)
!14282 = !DILocation(line: 652, column: 7, scope: !14283)
!14283 = distinct !DILexicalBlock(scope: !14252, file: !2358, line: 652, column: 6)
!14284 = !DILocation(line: 652, column: 6, scope: !14252)
!14285 = !DILocation(line: 653, column: 3, scope: !14286)
!14286 = distinct !DILexicalBlock(scope: !14283, file: !2358, line: 652, column: 39)
!14287 = !DILocation(line: 654, column: 2, scope: !14286)
!14288 = !DILocation(line: 656, column: 2, scope: !14252)
!14289 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2358, file: !2358, line: 401, type: !14290, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !14292)
!14290 = !DISubroutineType(types: !14291)
!14291 = !{null, !2362, !14255}
!14292 = !{!14293, !14294}
!14293 = !DILocalVariable(name: "thread", arg: 1, scope: !14289, file: !2358, line: 401, type: !2362)
!14294 = !DILocalVariable(name: "delay", arg: 2, scope: !14289, file: !2358, line: 401, type: !14255)
!14295 = !DILocation(line: 0, scope: !14289)
!14296 = !DILocation(line: 404, column: 6, scope: !14297)
!14297 = distinct !DILexicalBlock(scope: !14289, file: !2358, line: 404, column: 6)
!14298 = !DILocation(line: 404, column: 6, scope: !14289)
!14299 = !DILocation(line: 405, column: 3, scope: !14300)
!14300 = distinct !DILexicalBlock(scope: !14297, file: !2358, line: 404, column: 38)
!14301 = !DILocation(line: 406, column: 2, scope: !14300)
!14302 = !DILocation(line: 407, column: 3, scope: !14303)
!14303 = distinct !DILexicalBlock(scope: !14297, file: !2358, line: 406, column: 9)
!14304 = !DILocation(line: 413, column: 1, scope: !14289)
!14305 = distinct !DISubprogram(name: "k_thread_start", scope: !4558, file: !4558, line: 205, type: !14306, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !14308)
!14306 = !DISubroutineType(types: !14307)
!14307 = !{null, !2361}
!14308 = !{!14309}
!14309 = !DILocalVariable(name: "thread", arg: 1, scope: !14305, file: !4558, line: 205, type: !2361)
!14310 = !DILocation(line: 0, scope: !14305)
!14311 = !DILocation(line: 214, column: 2, scope: !14312)
!14312 = distinct !DILexicalBlock(scope: !14305, file: !4558, line: 214, column: 2)
!14313 = !{i64 2155473027}
!14314 = !DILocation(line: 215, column: 2, scope: !14305)
!14315 = !DILocation(line: 216, column: 1, scope: !14305)
!14316 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14213, file: !14213, line: 47, type: !14290, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !14317)
!14317 = !{!14318, !14319}
!14318 = !DILocalVariable(name: "thread", arg: 1, scope: !14316, file: !14213, line: 47, type: !2362)
!14319 = !DILocalVariable(name: "ticks", arg: 2, scope: !14316, file: !14213, line: 47, type: !14255)
!14320 = !DILocation(line: 0, scope: !14316)
!14321 = !DILocation(line: 49, column: 30, scope: !14316)
!14322 = !DILocation(line: 49, column: 2, scope: !14316)
!14323 = !DILocation(line: 50, column: 1, scope: !14316)
!14324 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2358, file: !2358, line: 748, type: !3227, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !14325)
!14325 = !{!14326, !14344}
!14326 = !DILocalVariable(name: "thread_data", scope: !14327, file: !2358, line: 750, type: !14328)
!14327 = distinct !DILexicalBlock(scope: !14324, file: !2358, line: 750, column: 2)
!14328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14329, size: 32)
!14329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !406, line: 620, size: 384, elements: !14330)
!14330 = !{!14331, !14332, !14333, !14334, !14335, !14336, !14337, !14338, !14339, !14340, !14341, !14343}
!14331 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !14329, file: !406, line: 621, baseType: !2362, size: 32)
!14332 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !14329, file: !406, line: 622, baseType: !14084, size: 32, offset: 32)
!14333 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !14329, file: !406, line: 623, baseType: !32, size: 32, offset: 64)
!14334 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !14329, file: !406, line: 624, baseType: !559, size: 32, offset: 96)
!14335 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !14329, file: !406, line: 625, baseType: !106, size: 32, offset: 128)
!14336 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !14329, file: !406, line: 626, baseType: !106, size: 32, offset: 160)
!14337 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !14329, file: !406, line: 627, baseType: !106, size: 32, offset: 192)
!14338 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !14329, file: !406, line: 628, baseType: !107, size: 32, offset: 224)
!14339 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !14329, file: !406, line: 629, baseType: !152, size: 32, offset: 256)
!14340 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !14329, file: !406, line: 630, baseType: !906, size: 32, offset: 288)
!14341 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !14329, file: !406, line: 631, baseType: !14342, size: 32, offset: 320)
!14342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3227, size: 32)
!14343 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !14329, file: !406, line: 632, baseType: !118, size: 32, offset: 352)
!14344 = !DILocalVariable(name: "thread_data", scope: !14345, file: !2358, line: 781, type: !14328)
!14345 = distinct !DILexicalBlock(scope: !14324, file: !2358, line: 781, column: 2)
!14346 = !DILocation(line: 0, scope: !14327)
!14347 = !DILocation(line: 750, column: 2, scope: !14348)
!14348 = distinct !DILexicalBlock(scope: !14349, file: !2358, line: 750, column: 2)
!14349 = distinct !DILexicalBlock(scope: !14350, file: !2358, line: 750, column: 2)
!14350 = distinct !DILexicalBlock(scope: !14327, file: !2358, line: 750, column: 2)
!14351 = !DILocation(line: 750, column: 2, scope: !14352)
!14352 = distinct !DILexicalBlock(scope: !14353, file: !2358, line: 750, column: 2)
!14353 = distinct !DILexicalBlock(scope: !14348, file: !2358, line: 750, column: 2)
!14354 = !DILocation(line: 750, column: 2, scope: !14349)
!14355 = !DILocation(line: 750, column: 2, scope: !14327)
!14356 = !DILocation(line: 780, column: 2, scope: !14324)
!14357 = !DILocation(line: 0, scope: !14345)
!14358 = !DILocation(line: 781, column: 2, scope: !14359)
!14359 = distinct !DILexicalBlock(scope: !14360, file: !2358, line: 781, column: 2)
!14360 = distinct !DILexicalBlock(scope: !14361, file: !2358, line: 781, column: 2)
!14361 = distinct !DILexicalBlock(scope: !14345, file: !2358, line: 781, column: 2)
!14362 = !DILocation(line: 752, column: 17, scope: !14363)
!14363 = distinct !DILexicalBlock(scope: !14350, file: !2358, line: 750, column: 38)
!14364 = !DILocation(line: 753, column: 17, scope: !14363)
!14365 = !DILocation(line: 754, column: 17, scope: !14363)
!14366 = !DILocation(line: 755, column: 17, scope: !14363)
!14367 = !DILocation(line: 756, column: 17, scope: !14363)
!14368 = !DILocation(line: 757, column: 17, scope: !14363)
!14369 = !DILocation(line: 758, column: 17, scope: !14363)
!14370 = !DILocation(line: 759, column: 17, scope: !14363)
!14371 = !DILocation(line: 760, column: 17, scope: !14363)
!14372 = !DILocation(line: 761, column: 17, scope: !14363)
!14373 = !DILocation(line: 751, column: 3, scope: !14363)
!14374 = !DILocation(line: 763, column: 16, scope: !14363)
!14375 = !DILocation(line: 763, column: 29, scope: !14363)
!14376 = !DILocation(line: 763, column: 39, scope: !14363)
!14377 = !DILocation(line: 750, column: 2, scope: !14350)
!14378 = !DILocation(line: 750, column: 2, scope: !14353)
!14379 = distinct !{!14379, !14355, !14380}
!14380 = !DILocation(line: 764, column: 2, scope: !14327)
!14381 = !DILocation(line: 781, column: 2, scope: !14382)
!14382 = distinct !DILexicalBlock(scope: !14383, file: !2358, line: 781, column: 2)
!14383 = distinct !DILexicalBlock(scope: !14359, file: !2358, line: 781, column: 2)
!14384 = !DILocation(line: 781, column: 2, scope: !14360)
!14385 = !DILocation(line: 781, column: 2, scope: !14345)
!14386 = !DILocation(line: 787, column: 2, scope: !14324)
!14387 = !DILocation(line: 788, column: 1, scope: !14324)
!14388 = !DILocation(line: 782, column: 20, scope: !14389)
!14389 = distinct !DILexicalBlock(scope: !14390, file: !2358, line: 782, column: 7)
!14390 = distinct !DILexicalBlock(scope: !14361, file: !2358, line: 781, column: 38)
!14391 = !DILocation(line: 782, column: 31, scope: !14389)
!14392 = !DILocation(line: 782, column: 7, scope: !14390)
!14393 = !DILocation(line: 783, column: 37, scope: !14394)
!14394 = distinct !DILexicalBlock(scope: !14389, file: !2358, line: 782, column: 51)
!14395 = !DILocation(line: 784, column: 10, scope: !14394)
!14396 = !DILocation(line: 783, column: 4, scope: !14394)
!14397 = !DILocation(line: 785, column: 3, scope: !14394)
!14398 = !DILocation(line: 781, column: 2, scope: !14361)
!14399 = !DILocation(line: 781, column: 2, scope: !14383)
!14400 = distinct !{!14400, !14385, !14401}
!14401 = !DILocation(line: 786, column: 2, scope: !14345)
!14402 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !8862, file: !8862, line: 403, type: !14403, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !14405)
!14403 = !DISubroutineType(types: !14404)
!14404 = !{!566, !566}
!14405 = !{!14406}
!14406 = !DILocalVariable(name: "t", arg: 1, scope: !14402, file: !8862, line: 403, type: !566)
!14407 = !DILocation(line: 0, scope: !14402)
!14408 = !DILocalVariable(name: "t", arg: 1, scope: !14409, file: !8862, line: 102, type: !566)
!14409 = distinct !DISubprogram(name: "z_tmcvt", scope: !8862, file: !8862, line: 102, type: !8869, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !14410)
!14410 = !{!14408, !14411, !14412, !14413, !14414, !14415, !14416, !14417, !14418, !14419, !14420}
!14411 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14409, file: !8862, line: 102, type: !152)
!14412 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14409, file: !8862, line: 103, type: !152)
!14413 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14409, file: !8862, line: 103, type: !145)
!14414 = !DILocalVariable(name: "result32", arg: 5, scope: !14409, file: !8862, line: 104, type: !145)
!14415 = !DILocalVariable(name: "round_up", arg: 6, scope: !14409, file: !8862, line: 104, type: !145)
!14416 = !DILocalVariable(name: "round_off", arg: 7, scope: !14409, file: !8862, line: 105, type: !145)
!14417 = !DILocalVariable(name: "mul_ratio", scope: !14409, file: !8862, line: 107, type: !145)
!14418 = !DILocalVariable(name: "div_ratio", scope: !14409, file: !8862, line: 109, type: !145)
!14419 = !DILocalVariable(name: "off", scope: !14409, file: !8862, line: 116, type: !566)
!14420 = !DILocalVariable(name: "rdivisor", scope: !14421, file: !8862, line: 119, type: !152)
!14421 = distinct !DILexicalBlock(scope: !14422, file: !8862, line: 118, column: 18)
!14422 = distinct !DILexicalBlock(scope: !14409, file: !8862, line: 118, column: 6)
!14423 = !DILocation(line: 0, scope: !14409, inlinedAt: !14424)
!14424 = distinct !DILocation(line: 406, column: 9, scope: !14402)
!14425 = !DILocation(line: 145, column: 13, scope: !14426, inlinedAt: !14424)
!14426 = distinct !DILexicalBlock(scope: !14427, file: !8862, line: 144, column: 10)
!14427 = distinct !DILexicalBlock(scope: !14428, file: !8862, line: 142, column: 7)
!14428 = distinct !DILexicalBlock(scope: !14429, file: !8862, line: 141, column: 24)
!14429 = distinct !DILexicalBlock(scope: !14430, file: !8862, line: 141, column: 13)
!14430 = distinct !DILexicalBlock(scope: !14409, file: !8862, line: 134, column: 6)
!14431 = !DILocation(line: 406, column: 2, scope: !14402)
!14432 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2358, file: !2358, line: 817, type: !4436, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !14433)
!14433 = !{!14434, !14435, !14436, !14437}
!14434 = !DILocalVariable(name: "entry", arg: 1, scope: !14432, file: !2358, line: 817, type: !559)
!14435 = !DILocalVariable(name: "p1", arg: 2, scope: !14432, file: !2358, line: 818, type: !106)
!14436 = !DILocalVariable(name: "p2", arg: 3, scope: !14432, file: !2358, line: 818, type: !106)
!14437 = !DILocalVariable(name: "p3", arg: 4, scope: !14432, file: !2358, line: 818, type: !106)
!14438 = !DILocation(line: 0, scope: !14432)
!14439 = !DILocation(line: 822, column: 2, scope: !14432)
!14440 = !DILocation(line: 822, column: 17, scope: !14432)
!14441 = !DILocation(line: 822, column: 30, scope: !14432)
!14442 = !DILocation(line: 823, column: 2, scope: !14432)
!14443 = !DILocation(line: 845, column: 2, scope: !14432)
!14444 = distinct !DISubprogram(name: "z_spin_lock_valid", scope: !2358, file: !2358, line: 853, type: !14445, scopeLine: 854, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !14448)
!14445 = !DISubroutineType(types: !14446)
!14446 = !{!145, !14447}
!14447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2457, size: 32)
!14448 = !{!14449, !14450}
!14449 = !DILocalVariable(name: "l", arg: 1, scope: !14444, file: !2358, line: 853, type: !14447)
!14450 = !DILocalVariable(name: "thread_cpu", scope: !14444, file: !2358, line: 855, type: !22)
!14451 = !DILocation(line: 0, scope: !14444)
!14452 = !DILocation(line: 855, column: 28, scope: !14444)
!14453 = !DILocation(line: 857, column: 17, scope: !14454)
!14454 = distinct !DILexicalBlock(scope: !14444, file: !2358, line: 857, column: 6)
!14455 = !DILocation(line: 857, column: 6, scope: !14444)
!14456 = !DILocation(line: 858, column: 19, scope: !14457)
!14457 = distinct !DILexicalBlock(scope: !14458, file: !2358, line: 858, column: 7)
!14458 = distinct !DILexicalBlock(scope: !14454, file: !2358, line: 857, column: 24)
!14459 = !DILocation(line: 858, column: 42, scope: !14457)
!14460 = !DILocation(line: 858, column: 28, scope: !14457)
!14461 = !DILocation(line: 858, column: 25, scope: !14457)
!14462 = !DILocation(line: 858, column: 7, scope: !14458)
!14463 = !DILocation(line: 862, column: 2, scope: !14444)
!14464 = !DILocation(line: 863, column: 1, scope: !14444)
!14465 = distinct !DISubprogram(name: "z_spin_unlock_valid", scope: !2358, file: !2358, line: 865, type: !14445, scopeLine: 866, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !14466)
!14466 = !{!14467}
!14467 = !DILocalVariable(name: "l", arg: 1, scope: !14465, file: !2358, line: 865, type: !14447)
!14468 = !DILocation(line: 0, scope: !14465)
!14469 = !DILocation(line: 867, column: 9, scope: !14470)
!14470 = distinct !DILexicalBlock(scope: !14465, file: !2358, line: 867, column: 6)
!14471 = !DILocation(line: 867, column: 38, scope: !14470)
!14472 = !DILocation(line: 867, column: 24, scope: !14470)
!14473 = !DILocation(line: 867, column: 54, scope: !14470)
!14474 = !DILocation(line: 867, column: 43, scope: !14470)
!14475 = !DILocation(line: 867, column: 41, scope: !14470)
!14476 = !DILocation(line: 867, column: 20, scope: !14470)
!14477 = !DILocation(line: 867, column: 6, scope: !14465)
!14478 = !DILocation(line: 870, column: 16, scope: !14465)
!14479 = !DILocation(line: 871, column: 2, scope: !14465)
!14480 = !DILocation(line: 872, column: 1, scope: !14465)
!14481 = distinct !DISubprogram(name: "z_spin_lock_set_owner", scope: !2358, file: !2358, line: 874, type: !14482, scopeLine: 875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !14484)
!14482 = !DISubroutineType(types: !14483)
!14483 = !{null, !14447}
!14484 = !{!14485}
!14485 = !DILocalVariable(name: "l", arg: 1, scope: !14481, file: !2358, line: 874, type: !14447)
!14486 = !DILocation(line: 0, scope: !14481)
!14487 = !DILocation(line: 876, column: 32, scope: !14481)
!14488 = !DILocation(line: 876, column: 18, scope: !14481)
!14489 = !DILocation(line: 876, column: 48, scope: !14481)
!14490 = !DILocation(line: 876, column: 37, scope: !14481)
!14491 = !DILocation(line: 876, column: 35, scope: !14481)
!14492 = !DILocation(line: 876, column: 5, scope: !14481)
!14493 = !DILocation(line: 876, column: 16, scope: !14481)
!14494 = !DILocation(line: 877, column: 1, scope: !14481)
!14495 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2358, file: !2358, line: 888, type: !14496, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !14498)
!14496 = !DISubroutineType(types: !14497)
!14497 = !{!107, !2362}
!14498 = !{!14499}
!14499 = !DILocalVariable(name: "thread", arg: 1, scope: !14495, file: !2358, line: 888, type: !2362)
!14500 = !DILocation(line: 0, scope: !14495)
!14501 = !DILocation(line: 893, column: 2, scope: !14495)
!14502 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2358, file: !2358, line: 897, type: !14503, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !14505)
!14503 = !DISubroutineType(types: !14504)
!14504 = !{!107, !2362, !32}
!14505 = !{!14506, !14507}
!14506 = !DILocalVariable(name: "thread", arg: 1, scope: !14502, file: !2358, line: 897, type: !2362)
!14507 = !DILocalVariable(name: "options", arg: 2, scope: !14502, file: !2358, line: 897, type: !32)
!14508 = !DILocation(line: 0, scope: !14502)
!14509 = !DILocation(line: 902, column: 2, scope: !14502)
!14510 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2358, file: !2358, line: 1072, type: !14511, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !14516)
!14511 = !DISubroutineType(types: !14512)
!14512 = !{!107, !2361, !14513}
!14513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14514, size: 32)
!14514 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !309, line: 234, baseType: !14515)
!14515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !309, line: 192, elements: !2296)
!14516 = !{!14517, !14518}
!14517 = !DILocalVariable(name: "thread", arg: 1, scope: !14510, file: !2358, line: 1072, type: !2361)
!14518 = !DILocalVariable(name: "stats", arg: 2, scope: !14510, file: !2358, line: 1073, type: !14513)
!14519 = !DILocation(line: 0, scope: !14510)
!14520 = !DILocation(line: 1075, column: 14, scope: !14521)
!14521 = distinct !DILexicalBlock(scope: !14510, file: !2358, line: 1075, column: 6)
!14522 = !DILocation(line: 1075, column: 23, scope: !14521)
!14523 = !DILocation(line: 1086, column: 1, scope: !14510)
!14524 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2358, file: !2358, line: 1088, type: !14525, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !14527)
!14525 = !DISubroutineType(types: !14526)
!14526 = !{!107, !14513}
!14527 = !{!14528}
!14528 = !DILocalVariable(name: "stats", arg: 1, scope: !14524, file: !2358, line: 1088, type: !14513)
!14529 = !DILocation(line: 0, scope: !14524)
!14530 = !DILocation(line: 1094, column: 12, scope: !14531)
!14531 = distinct !DILexicalBlock(scope: !14524, file: !2358, line: 1094, column: 6)
!14532 = !DILocation(line: 1120, column: 1, scope: !14524)
!14533 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !14534, file: !14534, line: 20, type: !3227, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3208, retainedNodes: !2296)
!14534 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14535 = !DILocation(line: 30, column: 2, scope: !14533)
!14536 = !DILocation(line: 31, column: 1, scope: !14533)
!14537 = distinct !DISubprogram(name: "idle", scope: !14534, file: !14534, line: 33, type: !562, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3208, retainedNodes: !14538)
!14538 = !{!14539, !14540, !14541}
!14539 = !DILocalVariable(name: "unused1", arg: 1, scope: !14537, file: !14534, line: 33, type: !106)
!14540 = !DILocalVariable(name: "unused2", arg: 2, scope: !14537, file: !14534, line: 33, type: !106)
!14541 = !DILocalVariable(name: "unused3", arg: 3, scope: !14537, file: !14534, line: 33, type: !106)
!14542 = !DILocation(line: 0, scope: !14537)
!14543 = !DILocation(line: 39, column: 2, scope: !14544)
!14544 = distinct !DILexicalBlock(scope: !14545, file: !14534, line: 39, column: 2)
!14545 = distinct !DILexicalBlock(scope: !14537, file: !14534, line: 39, column: 2)
!14546 = !DILocation(line: 39, column: 2, scope: !14545)
!14547 = !DILocation(line: 39, column: 2, scope: !14548)
!14548 = distinct !DILexicalBlock(scope: !14544, file: !14534, line: 39, column: 2)
!14549 = !DILocation(line: 55, column: 2, scope: !14550, inlinedAt: !14554)
!14550 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6075, file: !6075, line: 42, type: !6076, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3208, retainedNodes: !14551)
!14551 = !{!14552, !14553}
!14552 = !DILocalVariable(name: "key", scope: !14550, file: !6075, line: 44, type: !32)
!14553 = !DILocalVariable(name: "tmp", scope: !14550, file: !6075, line: 53, type: !32)
!14554 = distinct !DILocation(line: 62, column: 10, scope: !14555)
!14555 = distinct !DILexicalBlock(scope: !14537, file: !14534, line: 41, column: 15)
!14556 = !{i64 2597908}
!14557 = !DILocation(line: 0, scope: !14550, inlinedAt: !14554)
!14558 = !DILocation(line: 86, column: 3, scope: !14555)
!14559 = !DILocation(line: 41, column: 2, scope: !14537)
!14560 = distinct !{!14560, !14559, !14561}
!14561 = !DILocation(line: 105, column: 2, scope: !14537)
!14562 = distinct !DISubprogram(name: "k_cpu_idle", scope: !406, file: !406, line: 5627, type: !3227, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3208, retainedNodes: !2296)
!14563 = !DILocation(line: 5629, column: 2, scope: !14562)
!14564 = !DILocation(line: 5630, column: 1, scope: !14562)
!14565 = !DISubprogram(name: "arch_cpu_idle", scope: !560, file: !560, line: 167, type: !3227, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2296)
!14566 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2596, file: !2596, line: 93, type: !14567, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !14569)
!14567 = !DISubroutineType(types: !14568)
!14568 = !{!906, !2488, !2488}
!14569 = !{!14570, !14571, !14572, !14573}
!14570 = !DILocalVariable(name: "thread_1", arg: 1, scope: !14566, file: !2596, line: 93, type: !2488)
!14571 = !DILocalVariable(name: "thread_2", arg: 2, scope: !14566, file: !2596, line: 94, type: !2488)
!14572 = !DILocalVariable(name: "b1", scope: !14566, file: !2596, line: 97, type: !906)
!14573 = !DILocalVariable(name: "b2", scope: !14566, file: !2596, line: 98, type: !906)
!14574 = !DILocation(line: 0, scope: !14566)
!14575 = !DILocation(line: 97, column: 30, scope: !14566)
!14576 = !DILocation(line: 98, column: 30, scope: !14566)
!14577 = !DILocation(line: 100, column: 9, scope: !14578)
!14578 = distinct !DILexicalBlock(scope: !14566, file: !2596, line: 100, column: 6)
!14579 = !DILocation(line: 100, column: 6, scope: !14566)
!14580 = !DILocation(line: 125, column: 1, scope: !14566)
!14581 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2596, file: !2596, line: 428, type: !14582, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !14584)
!14582 = !DISubroutineType(types: !14583)
!14583 = !{null, !2488}
!14584 = !{!14585}
!14585 = !DILocalVariable(name: "curr", arg: 1, scope: !14581, file: !2596, line: 428, type: !2488)
!14586 = !DILocation(line: 0, scope: !14581)
!14587 = !DILocation(line: 434, column: 6, scope: !14588)
!14588 = distinct !DILexicalBlock(scope: !14581, file: !2596, line: 434, column: 6)
!14589 = !DILocation(line: 434, column: 23, scope: !14588)
!14590 = !DILocation(line: 434, column: 6, scope: !14581)
!14591 = !DILocation(line: 435, column: 50, scope: !14592)
!14592 = distinct !DILexicalBlock(scope: !14588, file: !2596, line: 434, column: 29)
!14593 = !DILocation(line: 435, column: 48, scope: !14592)
!14594 = !DILocation(line: 435, column: 29, scope: !14592)
!14595 = !DILocation(line: 436, column: 24, scope: !14592)
!14596 = !DILocation(line: 436, column: 3, scope: !14592)
!14597 = !DILocation(line: 437, column: 2, scope: !14592)
!14598 = !DILocation(line: 438, column: 1, scope: !14581)
!14599 = distinct !DISubprogram(name: "slice_time", scope: !2596, file: !2596, line: 407, type: !14600, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !14602)
!14600 = !DISubroutineType(types: !14601)
!14601 = !{!107, !2488}
!14602 = !{!14603, !14604}
!14603 = !DILocalVariable(name: "curr", arg: 1, scope: !14599, file: !2596, line: 407, type: !2488)
!14604 = !DILocalVariable(name: "ret", scope: !14599, file: !2596, line: 409, type: !107)
!14605 = !DILocation(line: 0, scope: !14599)
!14606 = !DILocation(line: 409, column: 12, scope: !14599)
!14607 = !DILocation(line: 416, column: 2, scope: !14599)
!14608 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2596, file: !2596, line: 440, type: !14609, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !14611)
!14609 = !DISubroutineType(types: !14610)
!14610 = !{null, !906, !107}
!14611 = !{!14612, !14613, !14614, !14620}
!14612 = !DILocalVariable(name: "slice", arg: 1, scope: !14608, file: !2596, line: 440, type: !906)
!14613 = !DILocalVariable(name: "prio", arg: 2, scope: !14608, file: !2596, line: 440, type: !107)
!14614 = !DILocalVariable(name: "__i", scope: !14615, file: !2596, line: 442, type: !14616)
!14615 = distinct !DILexicalBlock(scope: !14608, file: !2596, line: 442, column: 2)
!14616 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !420, line: 106, baseType: !14617)
!14617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !420, line: 32, size: 32, elements: !14618)
!14618 = !{!14619}
!14619 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14617, file: !420, line: 33, baseType: !107, size: 32)
!14620 = !DILocalVariable(name: "__key", scope: !14615, file: !2596, line: 442, type: !14616)
!14621 = !DILocation(line: 0, scope: !14608)
!14622 = !DILocation(line: 0, scope: !14615)
!14623 = !DILocalVariable(name: "l", arg: 1, scope: !14624, file: !420, line: 136, type: !14627)
!14624 = distinct !DISubprogram(name: "k_spin_lock", scope: !420, file: !420, line: 136, type: !14625, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !14628)
!14625 = !DISubroutineType(types: !14626)
!14626 = !{!14616, !14627}
!14627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2583, size: 32)
!14628 = !{!14623, !14629}
!14629 = !DILocalVariable(name: "k", scope: !14624, file: !420, line: 139, type: !14616)
!14630 = !DILocation(line: 0, scope: !14624, inlinedAt: !14631)
!14631 = distinct !DILocation(line: 442, column: 2, scope: !14615)
!14632 = !DILocation(line: 55, column: 2, scope: !14633, inlinedAt: !14637)
!14633 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6075, file: !6075, line: 42, type: !6076, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !14634)
!14634 = !{!14635, !14636}
!14635 = !DILocalVariable(name: "key", scope: !14633, file: !6075, line: 44, type: !32)
!14636 = !DILocalVariable(name: "tmp", scope: !14633, file: !6075, line: 53, type: !32)
!14637 = distinct !DILocation(line: 145, column: 10, scope: !14624, inlinedAt: !14631)
!14638 = !{i64 2641879}
!14639 = !DILocation(line: 0, scope: !14633, inlinedAt: !14637)
!14640 = !DILocation(line: 148, column: 2, scope: !14641, inlinedAt: !14631)
!14641 = distinct !DILexicalBlock(scope: !14642, file: !420, line: 148, column: 2)
!14642 = distinct !DILexicalBlock(scope: !14624, file: !420, line: 148, column: 2)
!14643 = !DILocation(line: 148, column: 2, scope: !14642, inlinedAt: !14631)
!14644 = !DILocation(line: 148, column: 2, scope: !14645, inlinedAt: !14631)
!14645 = distinct !DILexicalBlock(scope: !14641, file: !420, line: 148, column: 2)
!14646 = !DILocation(line: 160, column: 2, scope: !14624, inlinedAt: !14631)
!14647 = !DILocation(line: 443, column: 29, scope: !14648)
!14648 = distinct !DILexicalBlock(scope: !14649, file: !2596, line: 442, column: 26)
!14649 = distinct !DILexicalBlock(scope: !14615, file: !2596, line: 442, column: 2)
!14650 = !DILocation(line: 444, column: 17, scope: !14648)
!14651 = !DILocation(line: 445, column: 51, scope: !14652)
!14652 = distinct !DILexicalBlock(scope: !14648, file: !2596, line: 445, column: 7)
!14653 = !DILocation(line: 445, column: 7, scope: !14648)
!14654 = !DILocation(line: 0, scope: !14648)
!14655 = !DILocation(line: 451, column: 18, scope: !14648)
!14656 = !DILocation(line: 452, column: 3, scope: !14648)
!14657 = !DILocalVariable(name: "key", arg: 2, scope: !14658, file: !420, line: 190, type: !14616)
!14658 = distinct !DISubprogram(name: "k_spin_unlock", scope: !420, file: !420, line: 189, type: !14659, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !14661)
!14659 = !DISubroutineType(types: !14660)
!14660 = !{null, !14627, !14616}
!14661 = !{!14662, !14657}
!14662 = !DILocalVariable(name: "l", arg: 1, scope: !14658, file: !420, line: 189, type: !14627)
!14663 = !DILocation(line: 0, scope: !14658, inlinedAt: !14664)
!14664 = distinct !DILocation(line: 442, column: 2, scope: !14649)
!14665 = !DILocation(line: 194, column: 2, scope: !14666, inlinedAt: !14664)
!14666 = distinct !DILexicalBlock(scope: !14667, file: !420, line: 194, column: 2)
!14667 = distinct !DILexicalBlock(scope: !14658, file: !420, line: 194, column: 2)
!14668 = !DILocation(line: 194, column: 2, scope: !14667, inlinedAt: !14664)
!14669 = !DILocation(line: 194, column: 2, scope: !14670, inlinedAt: !14664)
!14670 = distinct !DILexicalBlock(scope: !14666, file: !420, line: 194, column: 2)
!14671 = !DILocalVariable(name: "key", arg: 1, scope: !14672, file: !6075, line: 84, type: !32)
!14672 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6075, file: !6075, line: 84, type: !6086, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !14673)
!14673 = !{!14671}
!14674 = !DILocation(line: 0, scope: !14672, inlinedAt: !14675)
!14675 = distinct !DILocation(line: 215, column: 2, scope: !14658, inlinedAt: !14664)
!14676 = !DILocation(line: 95, column: 2, scope: !14672, inlinedAt: !14675)
!14677 = !{i64 2642696}
!14678 = !DILocation(line: 454, column: 1, scope: !14608)
!14679 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !8862, file: !8862, line: 389, type: !7681, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !14680)
!14680 = !{!14681}
!14681 = !DILocalVariable(name: "t", arg: 1, scope: !14679, file: !8862, line: 389, type: !152)
!14682 = !DILocation(line: 0, scope: !14679)
!14683 = !DILocalVariable(name: "t", arg: 1, scope: !14684, file: !8862, line: 102, type: !566)
!14684 = distinct !DISubprogram(name: "z_tmcvt", scope: !8862, file: !8862, line: 102, type: !8869, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !14685)
!14685 = !{!14683, !14686, !14687, !14688, !14689, !14690, !14691, !14692, !14693, !14694, !14695}
!14686 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14684, file: !8862, line: 102, type: !152)
!14687 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14684, file: !8862, line: 103, type: !152)
!14688 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14684, file: !8862, line: 103, type: !145)
!14689 = !DILocalVariable(name: "result32", arg: 5, scope: !14684, file: !8862, line: 104, type: !145)
!14690 = !DILocalVariable(name: "round_up", arg: 6, scope: !14684, file: !8862, line: 104, type: !145)
!14691 = !DILocalVariable(name: "round_off", arg: 7, scope: !14684, file: !8862, line: 105, type: !145)
!14692 = !DILocalVariable(name: "mul_ratio", scope: !14684, file: !8862, line: 107, type: !145)
!14693 = !DILocalVariable(name: "div_ratio", scope: !14684, file: !8862, line: 109, type: !145)
!14694 = !DILocalVariable(name: "off", scope: !14684, file: !8862, line: 116, type: !566)
!14695 = !DILocalVariable(name: "rdivisor", scope: !14696, file: !8862, line: 119, type: !152)
!14696 = distinct !DILexicalBlock(scope: !14697, file: !8862, line: 118, column: 18)
!14697 = distinct !DILexicalBlock(scope: !14684, file: !8862, line: 118, column: 6)
!14698 = !DILocation(line: 0, scope: !14684, inlinedAt: !14699)
!14699 = distinct !DILocation(line: 392, column: 9, scope: !14679)
!14700 = !DILocation(line: 143, column: 25, scope: !14701, inlinedAt: !14699)
!14701 = distinct !DILexicalBlock(scope: !14702, file: !8862, line: 142, column: 17)
!14702 = distinct !DILexicalBlock(scope: !14703, file: !8862, line: 142, column: 7)
!14703 = distinct !DILexicalBlock(scope: !14704, file: !8862, line: 141, column: 24)
!14704 = distinct !DILexicalBlock(scope: !14705, file: !8862, line: 141, column: 13)
!14705 = distinct !DILexicalBlock(scope: !14684, file: !8862, line: 134, column: 6)
!14706 = !DILocation(line: 392, column: 2, scope: !14679)
!14707 = distinct !DISubprogram(name: "z_time_slice", scope: !2596, file: !2596, line: 502, type: !9308, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !14708)
!14708 = !{!14709, !14710}
!14709 = !DILocalVariable(name: "ticks", arg: 1, scope: !14707, file: !2596, line: 502, type: !107)
!14710 = !DILocalVariable(name: "key", scope: !14707, file: !2596, line: 511, type: !14616)
!14711 = !DILocation(line: 0, scope: !14707)
!14712 = !DILocation(line: 0, scope: !14624, inlinedAt: !14713)
!14713 = distinct !DILocation(line: 511, column: 25, scope: !14707)
!14714 = !DILocation(line: 55, column: 2, scope: !14633, inlinedAt: !14715)
!14715 = distinct !DILocation(line: 145, column: 10, scope: !14624, inlinedAt: !14713)
!14716 = !DILocation(line: 0, scope: !14633, inlinedAt: !14715)
!14717 = !DILocation(line: 148, column: 2, scope: !14641, inlinedAt: !14713)
!14718 = !DILocation(line: 148, column: 2, scope: !14642, inlinedAt: !14713)
!14719 = !DILocation(line: 148, column: 2, scope: !14645, inlinedAt: !14713)
!14720 = !DILocation(line: 160, column: 2, scope: !14624, inlinedAt: !14713)
!14721 = !DILocation(line: 514, column: 6, scope: !14722)
!14722 = distinct !DILexicalBlock(scope: !14707, file: !2596, line: 514, column: 6)
!14723 = !DILocation(line: 514, column: 25, scope: !14722)
!14724 = !DILocation(line: 514, column: 22, scope: !14722)
!14725 = !DILocation(line: 514, column: 6, scope: !14707)
!14726 = !DILocation(line: 515, column: 3, scope: !14727)
!14727 = distinct !DILexicalBlock(scope: !14722, file: !2596, line: 514, column: 35)
!14728 = !DILocation(line: 0, scope: !14658, inlinedAt: !14729)
!14729 = distinct !DILocation(line: 516, column: 3, scope: !14727)
!14730 = !DILocation(line: 194, column: 2, scope: !14666, inlinedAt: !14729)
!14731 = !DILocation(line: 194, column: 2, scope: !14667, inlinedAt: !14729)
!14732 = !DILocation(line: 194, column: 2, scope: !14670, inlinedAt: !14729)
!14733 = !DILocation(line: 0, scope: !14672, inlinedAt: !14734)
!14734 = distinct !DILocation(line: 215, column: 2, scope: !14658, inlinedAt: !14729)
!14735 = !DILocation(line: 95, column: 2, scope: !14672, inlinedAt: !14734)
!14736 = !DILocation(line: 517, column: 3, scope: !14727)
!14737 = !DILocation(line: 519, column: 18, scope: !14707)
!14738 = !DILocation(line: 522, column: 6, scope: !14739)
!14739 = distinct !DILexicalBlock(scope: !14707, file: !2596, line: 522, column: 6)
!14740 = !DILocation(line: 522, column: 27, scope: !14739)
!14741 = !DILocation(line: 522, column: 30, scope: !14739)
!14742 = !DILocation(line: 522, column: 6, scope: !14707)
!14743 = !DILocation(line: 523, column: 30, scope: !14744)
!14744 = distinct !DILexicalBlock(scope: !14745, file: !2596, line: 523, column: 7)
!14745 = distinct !DILexicalBlock(scope: !14739, file: !2596, line: 522, column: 51)
!14746 = !DILocation(line: 523, column: 13, scope: !14744)
!14747 = !DILocation(line: 523, column: 7, scope: !14745)
!14748 = !DILocation(line: 530, column: 10, scope: !14749)
!14749 = distinct !DILexicalBlock(scope: !14744, file: !2596, line: 523, column: 43)
!14750 = !DILocation(line: 531, column: 3, scope: !14749)
!14751 = !DILocation(line: 532, column: 30, scope: !14752)
!14752 = distinct !DILexicalBlock(scope: !14744, file: !2596, line: 531, column: 10)
!14753 = !DILocation(line: 535, column: 29, scope: !14754)
!14754 = distinct !DILexicalBlock(scope: !14739, file: !2596, line: 534, column: 9)
!14755 = !DILocation(line: 0, scope: !14658, inlinedAt: !14756)
!14756 = distinct !DILocation(line: 537, column: 2, scope: !14707)
!14757 = !DILocation(line: 194, column: 2, scope: !14666, inlinedAt: !14756)
!14758 = !DILocation(line: 194, column: 2, scope: !14667, inlinedAt: !14756)
!14759 = !DILocation(line: 194, column: 2, scope: !14670, inlinedAt: !14756)
!14760 = !DILocation(line: 0, scope: !14672, inlinedAt: !14761)
!14761 = distinct !DILocation(line: 215, column: 2, scope: !14658, inlinedAt: !14756)
!14762 = !DILocation(line: 95, column: 2, scope: !14672, inlinedAt: !14761)
!14763 = !DILocation(line: 538, column: 1, scope: !14707)
!14764 = distinct !DISubprogram(name: "sliceable", scope: !2596, file: !2596, line: 468, type: !14765, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !14767)
!14765 = !DISubroutineType(types: !14766)
!14766 = !{!145, !2488}
!14767 = !{!14768, !14769}
!14768 = !DILocalVariable(name: "thread", arg: 1, scope: !14764, file: !2596, line: 468, type: !2488)
!14769 = !DILocalVariable(name: "ret", scope: !14764, file: !2596, line: 470, type: !145)
!14770 = !DILocation(line: 0, scope: !14764)
!14771 = !DILocation(line: 470, column: 13, scope: !14764)
!14772 = !DILocation(line: 471, column: 3, scope: !14764)
!14773 = !DILocation(line: 471, column: 7, scope: !14764)
!14774 = !DILocation(line: 472, column: 3, scope: !14764)
!14775 = !DILocation(line: 472, column: 37, scope: !14764)
!14776 = !DILocation(line: 472, column: 24, scope: !14764)
!14777 = !DILocation(line: 472, column: 43, scope: !14764)
!14778 = !DILocation(line: 472, column: 7, scope: !14764)
!14779 = !DILocation(line: 473, column: 3, scope: !14764)
!14780 = !DILocation(line: 473, column: 7, scope: !14764)
!14781 = !DILocation(line: 473, column: 6, scope: !14764)
!14782 = !DILocation(line: 479, column: 2, scope: !14764)
!14783 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2596, file: !2596, line: 482, type: !14784, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !14786)
!14784 = !DISubroutineType(types: !14785)
!14785 = !{!14616, !14616}
!14786 = !{!14787, !14788}
!14787 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !14783, file: !2596, line: 482, type: !14616)
!14788 = !DILocalVariable(name: "curr", scope: !14783, file: !2596, line: 484, type: !2488)
!14789 = !DILocation(line: 0, scope: !14783)
!14790 = !DILocation(line: 484, column: 26, scope: !14783)
!14791 = !DILocation(line: 493, column: 7, scope: !14792)
!14792 = distinct !DILexicalBlock(scope: !14783, file: !2596, line: 493, column: 6)
!14793 = !DILocation(line: 493, column: 6, scope: !14783)
!14794 = !DILocation(line: 494, column: 3, scope: !14795)
!14795 = distinct !DILexicalBlock(scope: !14792, file: !2596, line: 493, column: 49)
!14796 = !DILocation(line: 495, column: 2, scope: !14795)
!14797 = !DILocation(line: 496, column: 2, scope: !14783)
!14798 = !DILocation(line: 499, column: 1, scope: !14783)
!14799 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !13784, file: !13784, line: 106, type: !14765, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !14800)
!14800 = !{!14801, !14802}
!14801 = !DILocalVariable(name: "thread", arg: 1, scope: !14799, file: !13784, line: 106, type: !2488)
!14802 = !DILocalVariable(name: "state", scope: !14799, file: !13784, line: 108, type: !195)
!14803 = !DILocation(line: 0, scope: !14799)
!14804 = !DILocation(line: 108, column: 31, scope: !14799)
!14805 = !DILocation(line: 110, column: 16, scope: !14799)
!14806 = !DILocation(line: 111, column: 41, scope: !14799)
!14807 = !DILocation(line: 110, column: 2, scope: !14799)
!14808 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2596, file: !2596, line: 393, type: !14582, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !14809)
!14809 = !{!14810}
!14810 = !DILocalVariable(name: "thread", arg: 1, scope: !14808, file: !2596, line: 393, type: !2488)
!14811 = !DILocation(line: 0, scope: !14808)
!14812 = !DILocation(line: 395, column: 6, scope: !14813)
!14813 = distinct !DILexicalBlock(scope: !14808, file: !2596, line: 395, column: 6)
!14814 = !DILocation(line: 395, column: 6, scope: !14808)
!14815 = !DILocalVariable(name: "thread", arg: 1, scope: !14816, file: !2596, line: 264, type: !2488)
!14816 = distinct !DISubprogram(name: "dequeue_thread", scope: !2596, file: !2596, line: 264, type: !14582, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !14817)
!14817 = !{!14815}
!14818 = !DILocation(line: 0, scope: !14816, inlinedAt: !14819)
!14819 = distinct !DILocation(line: 396, column: 3, scope: !14820)
!14820 = distinct !DILexicalBlock(scope: !14813, file: !2596, line: 395, column: 34)
!14821 = !DILocation(line: 266, column: 15, scope: !14816, inlinedAt: !14819)
!14822 = !DILocation(line: 266, column: 28, scope: !14816, inlinedAt: !14819)
!14823 = !DILocalVariable(name: "thread", arg: 1, scope: !14824, file: !2596, line: 232, type: !2488)
!14824 = distinct !DISubprogram(name: "runq_remove", scope: !2596, file: !2596, line: 232, type: !14582, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !14825)
!14825 = !{!14823}
!14826 = !DILocation(line: 0, scope: !14824, inlinedAt: !14827)
!14827 = distinct !DILocation(line: 268, column: 3, scope: !14828, inlinedAt: !14819)
!14828 = distinct !DILexicalBlock(scope: !14829, file: !2596, line: 267, column: 35)
!14829 = distinct !DILexicalBlock(scope: !14816, file: !2596, line: 267, column: 6)
!14830 = !DILocation(line: 234, column: 2, scope: !14824, inlinedAt: !14827)
!14831 = !DILocation(line: 397, column: 2, scope: !14820)
!14832 = !DILocalVariable(name: "thread", arg: 1, scope: !14833, file: !2596, line: 250, type: !2488)
!14833 = distinct !DISubprogram(name: "queue_thread", scope: !2596, file: !2596, line: 250, type: !14582, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !14834)
!14834 = !{!14832}
!14835 = !DILocation(line: 0, scope: !14833, inlinedAt: !14836)
!14836 = distinct !DILocation(line: 398, column: 2, scope: !14808)
!14837 = !DILocation(line: 252, column: 15, scope: !14833, inlinedAt: !14836)
!14838 = !DILocation(line: 252, column: 28, scope: !14833, inlinedAt: !14836)
!14839 = !DILocalVariable(name: "thread", arg: 1, scope: !14840, file: !2596, line: 227, type: !2488)
!14840 = distinct !DISubprogram(name: "runq_add", scope: !2596, file: !2596, line: 227, type: !14582, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !14841)
!14841 = !{!14839}
!14842 = !DILocation(line: 0, scope: !14840, inlinedAt: !14843)
!14843 = distinct !DILocation(line: 254, column: 3, scope: !14844, inlinedAt: !14836)
!14844 = distinct !DILexicalBlock(scope: !14845, file: !2596, line: 253, column: 35)
!14845 = distinct !DILexicalBlock(scope: !14833, file: !2596, line: 253, column: 6)
!14846 = !DILocalVariable(name: "pq", arg: 1, scope: !14847, file: !2596, line: 181, type: !14850)
!14847 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2596, file: !2596, line: 181, type: !14848, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !14851)
!14848 = !DISubroutineType(types: !14849)
!14849 = !{null, !14850, !2488}
!14850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2524, size: 32)
!14851 = !{!14846, !14852, !14853}
!14852 = !DILocalVariable(name: "thread", arg: 2, scope: !14847, file: !2596, line: 182, type: !2488)
!14853 = !DILocalVariable(name: "t", scope: !14847, file: !2596, line: 184, type: !2488)
!14854 = !DILocation(line: 0, scope: !14847, inlinedAt: !14855)
!14855 = distinct !DILocation(line: 229, column: 2, scope: !14840, inlinedAt: !14843)
!14856 = !DILocation(line: 186, column: 2, scope: !14857, inlinedAt: !14855)
!14857 = distinct !DILexicalBlock(scope: !14858, file: !2596, line: 186, column: 2)
!14858 = distinct !DILexicalBlock(scope: !14847, file: !2596, line: 186, column: 2)
!14859 = !DILocation(line: 186, column: 2, scope: !14858, inlinedAt: !14855)
!14860 = !DILocation(line: 186, column: 2, scope: !14861, inlinedAt: !14855)
!14861 = distinct !DILexicalBlock(scope: !14857, file: !2596, line: 186, column: 2)
!14862 = !DILocation(line: 188, column: 2, scope: !14863, inlinedAt: !14855)
!14863 = distinct !DILexicalBlock(scope: !14847, file: !2596, line: 188, column: 2)
!14864 = !DILocation(line: 188, column: 2, scope: !14865, inlinedAt: !14855)
!14865 = distinct !DILexicalBlock(scope: !14863, file: !2596, line: 188, column: 2)
!14866 = !DILocation(line: 0, scope: !14863, inlinedAt: !14855)
!14867 = !DILocation(line: 189, column: 7, scope: !14868, inlinedAt: !14855)
!14868 = distinct !DILexicalBlock(scope: !14869, file: !2596, line: 189, column: 7)
!14869 = distinct !DILexicalBlock(scope: !14865, file: !2596, line: 188, column: 56)
!14870 = !DILocation(line: 189, column: 35, scope: !14868, inlinedAt: !14855)
!14871 = !DILocation(line: 189, column: 7, scope: !14869, inlinedAt: !14855)
!14872 = !DILocation(line: 191, column: 21, scope: !14873, inlinedAt: !14855)
!14873 = distinct !DILexicalBlock(scope: !14868, file: !2596, line: 189, column: 40)
!14874 = !DILocation(line: 190, column: 4, scope: !14873, inlinedAt: !14855)
!14875 = !DILocation(line: 192, column: 4, scope: !14873, inlinedAt: !14855)
!14876 = distinct !{!14876, !14862, !14877}
!14877 = !DILocation(line: 194, column: 2, scope: !14863, inlinedAt: !14855)
!14878 = !DILocation(line: 196, column: 37, scope: !14847, inlinedAt: !14855)
!14879 = !DILocation(line: 196, column: 2, scope: !14847, inlinedAt: !14855)
!14880 = !DILocation(line: 197, column: 1, scope: !14847, inlinedAt: !14855)
!14881 = !DILocation(line: 399, column: 25, scope: !14808)
!14882 = !DILocation(line: 399, column: 22, scope: !14808)
!14883 = !DILocation(line: 399, column: 2, scope: !14808)
!14884 = !DILocation(line: 400, column: 1, scope: !14808)
!14885 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !13784, file: !13784, line: 136, type: !14765, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !14886)
!14886 = !{!14887}
!14887 = !DILocalVariable(name: "thread", arg: 1, scope: !14885, file: !13784, line: 136, type: !2488)
!14888 = !DILocation(line: 0, scope: !14885)
!14889 = !DILocation(line: 138, column: 9, scope: !14885)
!14890 = !DILocation(line: 138, column: 2, scope: !14885)
!14891 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2596, file: !2596, line: 1137, type: !14848, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !14892)
!14892 = !{!14893, !14894}
!14893 = !DILocalVariable(name: "pq", arg: 1, scope: !14891, file: !2596, line: 1137, type: !14850)
!14894 = !DILocalVariable(name: "thread", arg: 2, scope: !14891, file: !2596, line: 1137, type: !2488)
!14895 = !DILocation(line: 0, scope: !14891)
!14896 = !DILocation(line: 1139, column: 2, scope: !14897)
!14897 = distinct !DILexicalBlock(scope: !14898, file: !2596, line: 1139, column: 2)
!14898 = distinct !DILexicalBlock(scope: !14891, file: !2596, line: 1139, column: 2)
!14899 = !DILocation(line: 1139, column: 2, scope: !14898)
!14900 = !DILocation(line: 1139, column: 2, scope: !14901)
!14901 = distinct !DILexicalBlock(scope: !14897, file: !2596, line: 1139, column: 2)
!14902 = !DILocation(line: 1141, column: 33, scope: !14891)
!14903 = !DILocation(line: 1141, column: 2, scope: !14891)
!14904 = !DILocation(line: 1142, column: 1, scope: !14891)
!14905 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !13784, file: !13784, line: 83, type: !14765, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !14906)
!14906 = !{!14907}
!14907 = !DILocalVariable(name: "thread", arg: 1, scope: !14905, file: !13784, line: 83, type: !2488)
!14908 = !DILocation(line: 0, scope: !14905)
!14909 = !DILocation(line: 89, column: 16, scope: !14905)
!14910 = !DILocation(line: 89, column: 2, scope: !14905)
!14911 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !319, file: !319, line: 294, type: !14912, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !14914)
!14912 = !DISubroutineType(types: !14913)
!14913 = !{!2592, !14850}
!14914 = !{!14915}
!14915 = !DILocalVariable(name: "list", arg: 1, scope: !14911, file: !319, line: 294, type: !14850)
!14916 = !DILocation(line: 0, scope: !14911)
!14917 = !DILocation(line: 296, column: 9, scope: !14911)
!14918 = !DILocation(line: 296, column: 49, scope: !14911)
!14919 = !DILocation(line: 296, column: 2, scope: !14911)
!14920 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !319, file: !319, line: 443, type: !14921, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !14923)
!14921 = !DISubroutineType(types: !14922)
!14922 = !{null, !2592, !2592}
!14923 = !{!14924, !14925, !14926}
!14924 = !DILocalVariable(name: "successor", arg: 1, scope: !14920, file: !319, line: 443, type: !2592)
!14925 = !DILocalVariable(name: "node", arg: 2, scope: !14920, file: !319, line: 443, type: !2592)
!14926 = !DILocalVariable(name: "prev", scope: !14920, file: !319, line: 445, type: !14927)
!14927 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2592)
!14928 = !DILocation(line: 0, scope: !14920)
!14929 = !DILocation(line: 445, column: 39, scope: !14920)
!14930 = !DILocation(line: 447, column: 8, scope: !14920)
!14931 = !DILocation(line: 447, column: 13, scope: !14920)
!14932 = !DILocation(line: 448, column: 8, scope: !14920)
!14933 = !DILocation(line: 448, column: 13, scope: !14920)
!14934 = !DILocation(line: 449, column: 8, scope: !14920)
!14935 = !DILocation(line: 449, column: 13, scope: !14920)
!14936 = !DILocation(line: 450, column: 18, scope: !14920)
!14937 = !DILocation(line: 451, column: 1, scope: !14920)
!14938 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !319, file: !319, line: 341, type: !14939, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !14941)
!14939 = !DISubroutineType(types: !14940)
!14940 = !{!2592, !14850, !2592}
!14941 = !{!14942, !14943}
!14942 = !DILocalVariable(name: "list", arg: 1, scope: !14938, file: !319, line: 341, type: !14850)
!14943 = !DILocalVariable(name: "node", arg: 2, scope: !14938, file: !319, line: 342, type: !2592)
!14944 = !DILocation(line: 0, scope: !14938)
!14945 = !DILocation(line: 344, column: 15, scope: !14938)
!14946 = !DILocation(line: 344, column: 9, scope: !14938)
!14947 = !DILocation(line: 344, column: 26, scope: !14938)
!14948 = !DILocation(line: 344, column: 2, scope: !14938)
!14949 = distinct !DISubprogram(name: "sys_dlist_append", scope: !319, file: !319, line: 404, type: !14950, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !14952)
!14950 = !DISubroutineType(types: !14951)
!14951 = !{null, !14850, !2592}
!14952 = !{!14953, !14954, !14955}
!14953 = !DILocalVariable(name: "list", arg: 1, scope: !14949, file: !319, line: 404, type: !14850)
!14954 = !DILocalVariable(name: "node", arg: 2, scope: !14949, file: !319, line: 404, type: !2592)
!14955 = !DILocalVariable(name: "tail", scope: !14949, file: !319, line: 406, type: !14927)
!14956 = !DILocation(line: 0, scope: !14949)
!14957 = !DILocation(line: 406, column: 34, scope: !14949)
!14958 = !DILocation(line: 408, column: 8, scope: !14949)
!14959 = !DILocation(line: 408, column: 13, scope: !14949)
!14960 = !DILocation(line: 409, column: 8, scope: !14949)
!14961 = !DILocation(line: 409, column: 13, scope: !14949)
!14962 = !DILocation(line: 411, column: 8, scope: !14949)
!14963 = !DILocation(line: 411, column: 13, scope: !14949)
!14964 = !DILocation(line: 412, column: 13, scope: !14949)
!14965 = !DILocation(line: 413, column: 1, scope: !14949)
!14966 = distinct !DISubprogram(name: "update_cache", scope: !2596, file: !2596, line: 559, type: !9308, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !14967)
!14967 = !{!14968, !14969}
!14968 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !14966, file: !2596, line: 559, type: !107)
!14969 = !DILocalVariable(name: "thread", scope: !14966, file: !2596, line: 562, type: !2488)
!14970 = !DILocation(line: 0, scope: !14966)
!14971 = !DILocation(line: 239, column: 9, scope: !14972, inlinedAt: !14975)
!14972 = distinct !DISubprogram(name: "runq_best", scope: !2596, file: !2596, line: 237, type: !14973, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !2296)
!14973 = !DISubroutineType(types: !14974)
!14974 = !{!2488}
!14975 = distinct !DILocation(line: 314, column: 28, scope: !14976, inlinedAt: !14979)
!14976 = distinct !DISubprogram(name: "next_up", scope: !2596, file: !2596, line: 312, type: !14973, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !14977)
!14977 = !{!14978}
!14978 = !DILocalVariable(name: "thread", scope: !14976, file: !2596, line: 314, type: !2488)
!14979 = distinct !DILocation(line: 562, column: 28, scope: !14966)
!14980 = !DILocation(line: 0, scope: !14976, inlinedAt: !14979)
!14981 = !DILocation(line: 340, column: 17, scope: !14976, inlinedAt: !14979)
!14982 = !DILocation(line: 340, column: 9, scope: !14976, inlinedAt: !14979)
!14983 = !DILocalVariable(name: "thread", arg: 1, scope: !14984, file: !2596, line: 127, type: !2488)
!14984 = distinct !DISubprogram(name: "should_preempt", scope: !2596, file: !2596, line: 127, type: !14985, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !14987)
!14985 = !DISubroutineType(types: !14986)
!14986 = !{!145, !2488, !107}
!14987 = !{!14983, !14988}
!14988 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !14984, file: !2596, line: 128, type: !107)
!14989 = !DILocation(line: 0, scope: !14984, inlinedAt: !14990)
!14990 = distinct !DILocation(line: 564, column: 6, scope: !14991)
!14991 = distinct !DILexicalBlock(scope: !14966, file: !2596, line: 564, column: 6)
!14992 = !DILocation(line: 133, column: 17, scope: !14993, inlinedAt: !14990)
!14993 = distinct !DILexicalBlock(scope: !14984, file: !2596, line: 133, column: 6)
!14994 = !DILocation(line: 0, scope: !14991)
!14995 = !DILocation(line: 133, column: 6, scope: !14984, inlinedAt: !14990)
!14996 = !DILocation(line: 137, column: 2, scope: !14997, inlinedAt: !14990)
!14997 = distinct !DILexicalBlock(scope: !14998, file: !2596, line: 137, column: 2)
!14998 = distinct !DILexicalBlock(scope: !14984, file: !2596, line: 137, column: 2)
!14999 = !DILocation(line: 137, column: 2, scope: !14998, inlinedAt: !14990)
!15000 = !DILocation(line: 137, column: 2, scope: !15001, inlinedAt: !14990)
!15001 = distinct !DILexicalBlock(scope: !14997, file: !2596, line: 137, column: 2)
!15002 = !DILocation(line: 140, column: 6, scope: !15003, inlinedAt: !14990)
!15003 = distinct !DILexicalBlock(scope: !14984, file: !2596, line: 140, column: 6)
!15004 = !DILocation(line: 140, column: 6, scope: !14984, inlinedAt: !14990)
!15005 = !DILocation(line: 150, column: 9, scope: !15006, inlinedAt: !14990)
!15006 = distinct !DILexicalBlock(scope: !14984, file: !2596, line: 149, column: 6)
!15007 = !DILocation(line: 149, column: 6, scope: !14984, inlinedAt: !14990)
!15008 = !DILocation(line: 157, column: 6, scope: !15009, inlinedAt: !14990)
!15009 = distinct !DILexicalBlock(scope: !14984, file: !2596, line: 157, column: 6)
!15010 = !DILocation(line: 564, column: 6, scope: !14966)
!15011 = !DILocation(line: 566, column: 14, scope: !15012)
!15012 = distinct !DILexicalBlock(scope: !15013, file: !2596, line: 566, column: 7)
!15013 = distinct !DILexicalBlock(scope: !14991, file: !2596, line: 564, column: 42)
!15014 = !DILocation(line: 566, column: 7, scope: !15013)
!15015 = !DILocation(line: 567, column: 4, scope: !15016)
!15016 = distinct !DILexicalBlock(scope: !15012, file: !2596, line: 566, column: 27)
!15017 = !DILocation(line: 568, column: 3, scope: !15016)
!15018 = !DILocation(line: 585, column: 1, scope: !14966)
!15019 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2596, file: !2596, line: 1144, type: !15020, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !15022)
!15020 = !DISubroutineType(types: !15021)
!15021 = !{!2488, !14850}
!15022 = !{!15023, !15024, !15025}
!15023 = !DILocalVariable(name: "pq", arg: 1, scope: !15019, file: !2596, line: 1144, type: !14850)
!15024 = !DILocalVariable(name: "thread", scope: !15019, file: !2596, line: 1146, type: !2488)
!15025 = !DILocalVariable(name: "n", scope: !15019, file: !2596, line: 1147, type: !2592)
!15026 = !DILocation(line: 0, scope: !15019)
!15027 = !DILocation(line: 1147, column: 19, scope: !15019)
!15028 = !DILocation(line: 1152, column: 2, scope: !15019)
!15029 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !13784, file: !13784, line: 115, type: !14765, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !15030)
!15030 = !{!15031}
!15031 = !DILocalVariable(name: "thread", arg: 1, scope: !15029, file: !13784, line: 115, type: !2488)
!15032 = !DILocation(line: 0, scope: !15029)
!15033 = !DILocation(line: 117, column: 46, scope: !15029)
!15034 = !DILocation(line: 117, column: 10, scope: !15029)
!15035 = !DILocation(line: 117, column: 9, scope: !15029)
!15036 = !DILocation(line: 117, column: 2, scope: !15029)
!15037 = distinct !DISubprogram(name: "is_preempt", scope: !2596, file: !2596, line: 62, type: !14600, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !15038)
!15038 = !{!15039}
!15039 = !DILocalVariable(name: "thread", arg: 1, scope: !15037, file: !2596, line: 62, type: !2488)
!15040 = !DILocation(line: 0, scope: !15037)
!15041 = !DILocation(line: 65, column: 22, scope: !15037)
!15042 = !DILocation(line: 65, column: 30, scope: !15037)
!15043 = !DILocation(line: 65, column: 2, scope: !15037)
!15044 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14213, file: !14213, line: 35, type: !15045, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !15049)
!15045 = !DISubroutineType(types: !15046)
!15046 = !{!145, !15047}
!15047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15048, size: 32)
!15048 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2539)
!15049 = !{!15050}
!15050 = !DILocalVariable(name: "to", arg: 1, scope: !15044, file: !14213, line: 35, type: !15047)
!15051 = !DILocation(line: 0, scope: !15044)
!15052 = !DILocation(line: 37, column: 35, scope: !15044)
!15053 = !DILocation(line: 37, column: 10, scope: !15044)
!15054 = !DILocation(line: 37, column: 9, scope: !15044)
!15055 = !DILocation(line: 37, column: 2, scope: !15044)
!15056 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !319, file: !319, line: 225, type: !15057, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !15061)
!15057 = !DISubroutineType(types: !15058)
!15058 = !{!145, !15059}
!15059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15060, size: 32)
!15060 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2498)
!15061 = !{!15062}
!15062 = !DILocalVariable(name: "node", arg: 1, scope: !15056, file: !319, line: 225, type: !15059)
!15063 = !DILocation(line: 0, scope: !15056)
!15064 = !DILocation(line: 227, column: 15, scope: !15056)
!15065 = !DILocation(line: 227, column: 20, scope: !15056)
!15066 = !DILocation(line: 227, column: 2, scope: !15056)
!15067 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !319, file: !319, line: 325, type: !14939, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !15068)
!15068 = !{!15069, !15070}
!15069 = !DILocalVariable(name: "list", arg: 1, scope: !15067, file: !319, line: 325, type: !14850)
!15070 = !DILocalVariable(name: "node", arg: 2, scope: !15067, file: !319, line: 326, type: !2592)
!15071 = !DILocation(line: 0, scope: !15067)
!15072 = !DILocation(line: 328, column: 24, scope: !15067)
!15073 = !DILocation(line: 328, column: 15, scope: !15067)
!15074 = !DILocation(line: 328, column: 9, scope: !15067)
!15075 = !DILocation(line: 328, column: 45, scope: !15067)
!15076 = !DILocation(line: 328, column: 2, scope: !15067)
!15077 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !319, file: !319, line: 266, type: !15078, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !15080)
!15078 = !DISubroutineType(types: !15079)
!15079 = !{!145, !14850}
!15080 = !{!15081}
!15081 = !DILocalVariable(name: "list", arg: 1, scope: !15077, file: !319, line: 266, type: !14850)
!15082 = !DILocation(line: 0, scope: !15077)
!15083 = !DILocation(line: 268, column: 15, scope: !15077)
!15084 = !DILocation(line: 268, column: 20, scope: !15077)
!15085 = !DILocation(line: 268, column: 2, scope: !15077)
!15086 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !319, file: !319, line: 496, type: !15087, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !15089)
!15087 = !DISubroutineType(types: !15088)
!15088 = !{null, !2592}
!15089 = !{!15090, !15091, !15092}
!15090 = !DILocalVariable(name: "node", arg: 1, scope: !15086, file: !319, line: 496, type: !2592)
!15091 = !DILocalVariable(name: "prev", scope: !15086, file: !319, line: 498, type: !14927)
!15092 = !DILocalVariable(name: "next", scope: !15086, file: !319, line: 499, type: !14927)
!15093 = !DILocation(line: 0, scope: !15086)
!15094 = !DILocation(line: 498, column: 34, scope: !15086)
!15095 = !DILocation(line: 499, column: 34, scope: !15086)
!15096 = !DILocation(line: 501, column: 8, scope: !15086)
!15097 = !DILocation(line: 501, column: 13, scope: !15086)
!15098 = !DILocation(line: 502, column: 8, scope: !15086)
!15099 = !DILocation(line: 502, column: 13, scope: !15086)
!15100 = !DILocation(line: 503, column: 2, scope: !15086)
!15101 = !DILocation(line: 504, column: 1, scope: !15086)
!15102 = distinct !DISubprogram(name: "sys_dnode_init", scope: !319, file: !319, line: 211, type: !15087, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !15103)
!15103 = !{!15104}
!15104 = !DILocalVariable(name: "node", arg: 1, scope: !15102, file: !319, line: 211, type: !2592)
!15105 = !DILocation(line: 0, scope: !15102)
!15106 = !DILocation(line: 213, column: 8, scope: !15102)
!15107 = !DILocation(line: 213, column: 13, scope: !15102)
!15108 = !DILocation(line: 214, column: 8, scope: !15102)
!15109 = !DILocation(line: 214, column: 13, scope: !15102)
!15110 = !DILocation(line: 215, column: 1, scope: !15102)
!15111 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !13784, file: !13784, line: 131, type: !15112, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !15114)
!15112 = !DISubroutineType(types: !15113)
!15113 = !{!145, !2488, !152}
!15114 = !{!15115, !15116}
!15115 = !DILocalVariable(name: "thread", arg: 1, scope: !15111, file: !13784, line: 131, type: !2488)
!15116 = !DILocalVariable(name: "state", arg: 2, scope: !15111, file: !13784, line: 131, type: !152)
!15117 = !DILocation(line: 0, scope: !15111)
!15118 = !DILocation(line: 133, column: 23, scope: !15111)
!15119 = !DILocation(line: 133, column: 10, scope: !15111)
!15120 = !DILocation(line: 133, column: 36, scope: !15111)
!15121 = !DILocation(line: 133, column: 45, scope: !15111)
!15122 = !DILocation(line: 133, column: 2, scope: !15111)
!15123 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !13784, file: !13784, line: 211, type: !15124, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !15126)
!15124 = !DISubroutineType(types: !15125)
!15125 = !{!145, !107, !107}
!15126 = !{!15127, !15128}
!15127 = !DILocalVariable(name: "prio", arg: 1, scope: !15123, file: !13784, line: 211, type: !107)
!15128 = !DILocalVariable(name: "test_prio", arg: 2, scope: !15123, file: !13784, line: 211, type: !107)
!15129 = !DILocation(line: 0, scope: !15123)
!15130 = !DILocation(line: 213, column: 9, scope: !15123)
!15131 = !DILocation(line: 213, column: 2, scope: !15123)
!15132 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !13784, file: !13784, line: 206, type: !15124, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !15133)
!15133 = !{!15134, !15135}
!15134 = !DILocalVariable(name: "prio1", arg: 1, scope: !15132, file: !13784, line: 206, type: !107)
!15135 = !DILocalVariable(name: "prio2", arg: 2, scope: !15132, file: !13784, line: 206, type: !107)
!15136 = !DILocation(line: 0, scope: !15132)
!15137 = !DILocation(line: 208, column: 15, scope: !15132)
!15138 = !DILocation(line: 208, column: 2, scope: !15132)
!15139 = distinct !DISubprogram(name: "z_ready_thread", scope: !2596, file: !2596, line: 635, type: !14582, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !15140)
!15140 = !{!15141, !15142, !15144}
!15141 = !DILocalVariable(name: "thread", arg: 1, scope: !15139, file: !2596, line: 635, type: !2488)
!15142 = !DILocalVariable(name: "__i", scope: !15143, file: !2596, line: 637, type: !14616)
!15143 = distinct !DILexicalBlock(scope: !15139, file: !2596, line: 637, column: 2)
!15144 = !DILocalVariable(name: "__key", scope: !15143, file: !2596, line: 637, type: !14616)
!15145 = !DILocation(line: 0, scope: !15139)
!15146 = !DILocation(line: 0, scope: !15143)
!15147 = !DILocation(line: 0, scope: !14624, inlinedAt: !15148)
!15148 = distinct !DILocation(line: 637, column: 2, scope: !15143)
!15149 = !DILocation(line: 55, column: 2, scope: !14633, inlinedAt: !15150)
!15150 = distinct !DILocation(line: 145, column: 10, scope: !14624, inlinedAt: !15148)
!15151 = !DILocation(line: 0, scope: !14633, inlinedAt: !15150)
!15152 = !DILocation(line: 148, column: 2, scope: !14641, inlinedAt: !15148)
!15153 = !DILocation(line: 148, column: 2, scope: !14642, inlinedAt: !15148)
!15154 = !DILocation(line: 148, column: 2, scope: !14645, inlinedAt: !15148)
!15155 = !DILocation(line: 160, column: 2, scope: !14624, inlinedAt: !15148)
!15156 = !DILocation(line: 639, column: 4, scope: !15157)
!15157 = distinct !DILexicalBlock(scope: !15158, file: !2596, line: 638, column: 41)
!15158 = distinct !DILexicalBlock(scope: !15159, file: !2596, line: 638, column: 7)
!15159 = distinct !DILexicalBlock(scope: !15160, file: !2596, line: 637, column: 26)
!15160 = distinct !DILexicalBlock(scope: !15143, file: !2596, line: 637, column: 2)
!15161 = !DILocation(line: 0, scope: !14658, inlinedAt: !15162)
!15162 = distinct !DILocation(line: 637, column: 2, scope: !15160)
!15163 = !DILocation(line: 194, column: 2, scope: !14666, inlinedAt: !15162)
!15164 = !DILocation(line: 194, column: 2, scope: !14667, inlinedAt: !15162)
!15165 = !DILocation(line: 194, column: 2, scope: !14670, inlinedAt: !15162)
!15166 = !DILocation(line: 0, scope: !14672, inlinedAt: !15167)
!15167 = distinct !DILocation(line: 215, column: 2, scope: !14658, inlinedAt: !15162)
!15168 = !DILocation(line: 95, column: 2, scope: !14672, inlinedAt: !15167)
!15169 = !DILocation(line: 642, column: 1, scope: !15139)
!15170 = distinct !DISubprogram(name: "ready_thread", scope: !2596, file: !2596, line: 617, type: !14582, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !15171)
!15171 = !{!15172}
!15172 = !DILocalVariable(name: "thread", arg: 1, scope: !15170, file: !2596, line: 617, type: !2488)
!15173 = !DILocation(line: 0, scope: !15170)
!15174 = !DILocation(line: 626, column: 7, scope: !15175)
!15175 = distinct !DILexicalBlock(scope: !15170, file: !2596, line: 626, column: 6)
!15176 = !DILocation(line: 626, column: 34, scope: !15175)
!15177 = !DILocation(line: 626, column: 37, scope: !15175)
!15178 = !DILocation(line: 626, column: 6, scope: !15170)
!15179 = !DILocation(line: 0, scope: !14833, inlinedAt: !15180)
!15180 = distinct !DILocation(line: 629, column: 3, scope: !15181)
!15181 = distinct !DILexicalBlock(scope: !15175, file: !2596, line: 626, column: 64)
!15182 = !DILocation(line: 252, column: 15, scope: !14833, inlinedAt: !15180)
!15183 = !DILocation(line: 252, column: 28, scope: !14833, inlinedAt: !15180)
!15184 = !DILocation(line: 0, scope: !14840, inlinedAt: !15185)
!15185 = distinct !DILocation(line: 254, column: 3, scope: !14844, inlinedAt: !15180)
!15186 = !DILocation(line: 0, scope: !14847, inlinedAt: !15187)
!15187 = distinct !DILocation(line: 229, column: 2, scope: !14840, inlinedAt: !15185)
!15188 = !DILocation(line: 186, column: 2, scope: !14857, inlinedAt: !15187)
!15189 = !DILocation(line: 186, column: 2, scope: !14858, inlinedAt: !15187)
!15190 = !DILocation(line: 186, column: 2, scope: !14861, inlinedAt: !15187)
!15191 = !DILocation(line: 188, column: 2, scope: !14863, inlinedAt: !15187)
!15192 = !DILocation(line: 188, column: 2, scope: !14865, inlinedAt: !15187)
!15193 = !DILocation(line: 0, scope: !14863, inlinedAt: !15187)
!15194 = !DILocation(line: 189, column: 7, scope: !14868, inlinedAt: !15187)
!15195 = !DILocation(line: 189, column: 35, scope: !14868, inlinedAt: !15187)
!15196 = !DILocation(line: 189, column: 7, scope: !14869, inlinedAt: !15187)
!15197 = !DILocation(line: 191, column: 21, scope: !14873, inlinedAt: !15187)
!15198 = !DILocation(line: 190, column: 4, scope: !14873, inlinedAt: !15187)
!15199 = !DILocation(line: 192, column: 4, scope: !14873, inlinedAt: !15187)
!15200 = distinct !{!15200, !15191, !15201}
!15201 = !DILocation(line: 194, column: 2, scope: !14863, inlinedAt: !15187)
!15202 = !DILocation(line: 196, column: 37, scope: !14847, inlinedAt: !15187)
!15203 = !DILocation(line: 196, column: 2, scope: !14847, inlinedAt: !15187)
!15204 = !DILocation(line: 197, column: 1, scope: !14847, inlinedAt: !15187)
!15205 = !DILocation(line: 630, column: 3, scope: !15181)
!15206 = !DILocation(line: 632, column: 2, scope: !15181)
!15207 = !DILocation(line: 633, column: 1, scope: !15170)
!15208 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !13784, file: !13784, line: 120, type: !14765, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !15209)
!15209 = !{!15210}
!15210 = !DILocalVariable(name: "thread", arg: 1, scope: !15208, file: !13784, line: 120, type: !2488)
!15211 = !DILocation(line: 0, scope: !15208)
!15212 = !DILocation(line: 122, column: 12, scope: !15208)
!15213 = !DILocation(line: 122, column: 62, scope: !15208)
!15214 = !DILocation(line: 123, column: 4, scope: !15208)
!15215 = !DILocation(line: 122, column: 2, scope: !15208)
!15216 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2596, file: !2596, line: 644, type: !14582, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !15217)
!15217 = !{!15218, !15219, !15221}
!15218 = !DILocalVariable(name: "thread", arg: 1, scope: !15216, file: !2596, line: 644, type: !2488)
!15219 = !DILocalVariable(name: "__i", scope: !15220, file: !2596, line: 646, type: !14616)
!15220 = distinct !DILexicalBlock(scope: !15216, file: !2596, line: 646, column: 2)
!15221 = !DILocalVariable(name: "__key", scope: !15220, file: !2596, line: 646, type: !14616)
!15222 = !DILocation(line: 0, scope: !15216)
!15223 = !DILocation(line: 0, scope: !15220)
!15224 = !DILocation(line: 0, scope: !14624, inlinedAt: !15225)
!15225 = distinct !DILocation(line: 646, column: 2, scope: !15220)
!15226 = !DILocation(line: 55, column: 2, scope: !14633, inlinedAt: !15227)
!15227 = distinct !DILocation(line: 145, column: 10, scope: !14624, inlinedAt: !15225)
!15228 = !DILocation(line: 0, scope: !14633, inlinedAt: !15227)
!15229 = !DILocation(line: 148, column: 2, scope: !14641, inlinedAt: !15225)
!15230 = !DILocation(line: 148, column: 2, scope: !14642, inlinedAt: !15225)
!15231 = !DILocation(line: 148, column: 2, scope: !14645, inlinedAt: !15225)
!15232 = !DILocation(line: 160, column: 2, scope: !14624, inlinedAt: !15225)
!15233 = !DILocation(line: 647, column: 3, scope: !15234)
!15234 = distinct !DILexicalBlock(scope: !15235, file: !2596, line: 646, column: 26)
!15235 = distinct !DILexicalBlock(scope: !15220, file: !2596, line: 646, column: 2)
!15236 = !DILocation(line: 0, scope: !14658, inlinedAt: !15237)
!15237 = distinct !DILocation(line: 646, column: 2, scope: !15235)
!15238 = !DILocation(line: 194, column: 2, scope: !14666, inlinedAt: !15237)
!15239 = !DILocation(line: 194, column: 2, scope: !14667, inlinedAt: !15237)
!15240 = !DILocation(line: 194, column: 2, scope: !14670, inlinedAt: !15237)
!15241 = !DILocation(line: 0, scope: !14672, inlinedAt: !15242)
!15242 = distinct !DILocation(line: 215, column: 2, scope: !14658, inlinedAt: !15237)
!15243 = !DILocation(line: 95, column: 2, scope: !14672, inlinedAt: !15242)
!15244 = !DILocation(line: 649, column: 1, scope: !15216)
!15245 = distinct !DISubprogram(name: "z_sched_start", scope: !2596, file: !2596, line: 651, type: !14582, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !15246)
!15246 = !{!15247, !15248}
!15247 = !DILocalVariable(name: "thread", arg: 1, scope: !15245, file: !2596, line: 651, type: !2488)
!15248 = !DILocalVariable(name: "key", scope: !15245, file: !2596, line: 653, type: !14616)
!15249 = !DILocation(line: 0, scope: !15245)
!15250 = !DILocation(line: 0, scope: !14624, inlinedAt: !15251)
!15251 = distinct !DILocation(line: 653, column: 25, scope: !15245)
!15252 = !DILocation(line: 55, column: 2, scope: !14633, inlinedAt: !15253)
!15253 = distinct !DILocation(line: 145, column: 10, scope: !14624, inlinedAt: !15251)
!15254 = !DILocation(line: 0, scope: !14633, inlinedAt: !15253)
!15255 = !DILocation(line: 148, column: 2, scope: !14641, inlinedAt: !15251)
!15256 = !DILocation(line: 148, column: 2, scope: !14642, inlinedAt: !15251)
!15257 = !DILocation(line: 148, column: 2, scope: !14645, inlinedAt: !15251)
!15258 = !DILocation(line: 160, column: 2, scope: !14624, inlinedAt: !15251)
!15259 = !DILocation(line: 655, column: 6, scope: !15260)
!15260 = distinct !DILexicalBlock(scope: !15245, file: !2596, line: 655, column: 6)
!15261 = !DILocation(line: 655, column: 6, scope: !15245)
!15262 = !DILocation(line: 0, scope: !14658, inlinedAt: !15263)
!15263 = distinct !DILocation(line: 656, column: 3, scope: !15264)
!15264 = distinct !DILexicalBlock(scope: !15260, file: !2596, line: 655, column: 36)
!15265 = !DILocation(line: 194, column: 2, scope: !14666, inlinedAt: !15263)
!15266 = !DILocation(line: 194, column: 2, scope: !14667, inlinedAt: !15263)
!15267 = !DILocation(line: 194, column: 2, scope: !14670, inlinedAt: !15263)
!15268 = !DILocation(line: 0, scope: !14672, inlinedAt: !15269)
!15269 = distinct !DILocation(line: 215, column: 2, scope: !14658, inlinedAt: !15263)
!15270 = !DILocation(line: 95, column: 2, scope: !14672, inlinedAt: !15269)
!15271 = !DILocation(line: 657, column: 3, scope: !15264)
!15272 = !DILocation(line: 660, column: 2, scope: !15245)
!15273 = !DILocation(line: 661, column: 2, scope: !15245)
!15274 = !DILocation(line: 662, column: 2, scope: !15245)
!15275 = !DILocation(line: 663, column: 1, scope: !15245)
!15276 = distinct !DISubprogram(name: "z_has_thread_started", scope: !13784, file: !13784, line: 126, type: !14765, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !15277)
!15277 = !{!15278}
!15278 = !DILocalVariable(name: "thread", arg: 1, scope: !15276, file: !13784, line: 126, type: !2488)
!15279 = !DILocation(line: 0, scope: !15276)
!15280 = !DILocation(line: 128, column: 23, scope: !15276)
!15281 = !DILocation(line: 128, column: 36, scope: !15276)
!15282 = !DILocation(line: 128, column: 56, scope: !15276)
!15283 = !DILocation(line: 128, column: 2, scope: !15276)
!15284 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13784, file: !13784, line: 155, type: !14582, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !15285)
!15285 = !{!15286}
!15286 = !DILocalVariable(name: "thread", arg: 1, scope: !15284, file: !13784, line: 155, type: !2488)
!15287 = !DILocation(line: 0, scope: !15284)
!15288 = !DILocation(line: 157, column: 15, scope: !15284)
!15289 = !DILocation(line: 157, column: 28, scope: !15284)
!15290 = !DILocation(line: 158, column: 1, scope: !15284)
!15291 = distinct !DISubprogram(name: "z_reschedule", scope: !2596, file: !2596, line: 967, type: !14659, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !15292)
!15292 = !{!15293, !15294}
!15293 = !DILocalVariable(name: "lock", arg: 1, scope: !15291, file: !2596, line: 967, type: !14627)
!15294 = !DILocalVariable(name: "key", arg: 2, scope: !15291, file: !2596, line: 967, type: !14616)
!15295 = !DILocation(line: 0, scope: !15291)
!15296 = !DILocation(line: 969, column: 6, scope: !15297)
!15297 = distinct !DILexicalBlock(scope: !15291, file: !2596, line: 969, column: 6)
!15298 = !DILocation(line: 969, column: 23, scope: !15297)
!15299 = !DILocation(line: 969, column: 26, scope: !15297)
!15300 = !DILocation(line: 969, column: 6, scope: !15291)
!15301 = !DILocalVariable(name: "key", arg: 2, scope: !15302, file: !13888, line: 193, type: !14616)
!15302 = distinct !DISubprogram(name: "z_swap", scope: !13888, file: !13888, line: 193, type: !15303, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !15305)
!15303 = !DISubroutineType(types: !15304)
!15304 = !{!107, !14627, !14616}
!15305 = !{!15306, !15301}
!15306 = !DILocalVariable(name: "lock", arg: 1, scope: !15302, file: !13888, line: 193, type: !14627)
!15307 = !DILocation(line: 0, scope: !15302, inlinedAt: !15308)
!15308 = distinct !DILocation(line: 970, column: 3, scope: !15309)
!15309 = distinct !DILexicalBlock(scope: !15297, file: !2596, line: 969, column: 39)
!15310 = !DILocalVariable(name: "l", arg: 1, scope: !15311, file: !420, line: 221, type: !14627)
!15311 = distinct !DISubprogram(name: "k_spin_release", scope: !420, file: !420, line: 221, type: !15312, scopeLine: 222, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !15314)
!15312 = !DISubroutineType(types: !15313)
!15313 = !{null, !14627}
!15314 = !{!15310}
!15315 = !DILocation(line: 0, scope: !15311, inlinedAt: !15316)
!15316 = distinct !DILocation(line: 195, column: 2, scope: !15302, inlinedAt: !15308)
!15317 = !DILocation(line: 225, column: 2, scope: !15318, inlinedAt: !15316)
!15318 = distinct !DILexicalBlock(scope: !15319, file: !420, line: 225, column: 2)
!15319 = distinct !DILexicalBlock(scope: !15311, file: !420, line: 225, column: 2)
!15320 = !DILocation(line: 225, column: 2, scope: !15319, inlinedAt: !15316)
!15321 = !DILocation(line: 225, column: 2, scope: !15322, inlinedAt: !15316)
!15322 = distinct !DILexicalBlock(scope: !15318, file: !420, line: 225, column: 2)
!15323 = !DILocation(line: 196, column: 9, scope: !15302, inlinedAt: !15308)
!15324 = !DILocation(line: 971, column: 2, scope: !15309)
!15325 = !DILocation(line: 0, scope: !14658, inlinedAt: !15326)
!15326 = distinct !DILocation(line: 972, column: 3, scope: !15327)
!15327 = distinct !DILexicalBlock(scope: !15297, file: !2596, line: 971, column: 9)
!15328 = !DILocation(line: 194, column: 2, scope: !14666, inlinedAt: !15326)
!15329 = !DILocation(line: 194, column: 2, scope: !14667, inlinedAt: !15326)
!15330 = !DILocation(line: 194, column: 2, scope: !14670, inlinedAt: !15326)
!15331 = !DILocation(line: 0, scope: !14672, inlinedAt: !15332)
!15332 = distinct !DILocation(line: 215, column: 2, scope: !14658, inlinedAt: !15326)
!15333 = !DILocation(line: 95, column: 2, scope: !14672, inlinedAt: !15332)
!15334 = !DILocation(line: 975, column: 1, scope: !15291)
!15335 = distinct !DISubprogram(name: "resched", scope: !2596, file: !2596, line: 940, type: !15336, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !15338)
!15336 = !DISubroutineType(types: !15337)
!15337 = !{!145, !152}
!15338 = !{!15339}
!15339 = !DILocalVariable(name: "key", arg: 1, scope: !15335, file: !2596, line: 940, type: !152)
!15340 = !DILocation(line: 0, scope: !15335)
!15341 = !DILocalVariable(name: "key", arg: 1, scope: !15342, file: !6075, line: 112, type: !32)
!15342 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !6075, file: !6075, line: 112, type: !15343, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !15345)
!15343 = !DISubroutineType(types: !15344)
!15344 = !{!145, !32}
!15345 = !{!15341}
!15346 = !DILocation(line: 0, scope: !15342, inlinedAt: !15347)
!15347 = distinct !DILocation(line: 946, column: 9, scope: !15335)
!15348 = !DILocation(line: 115, column: 13, scope: !15342, inlinedAt: !15347)
!15349 = !DILocation(line: 946, column: 32, scope: !15335)
!15350 = !DILocation(line: 1031, column: 3, scope: !15351, inlinedAt: !15354)
!15351 = distinct !DISubprogram(name: "__get_IPSR", scope: !6394, file: !6394, line: 1027, type: !6481, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !15352)
!15352 = !{!15353}
!15353 = !DILocalVariable(name: "result", scope: !15351, file: !6394, line: 1029, type: !152)
!15354 = distinct !DILocation(line: 48, column: 10, scope: !15355, inlinedAt: !15356)
!15355 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7446, file: !7446, line: 46, type: !7447, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !2296)
!15356 = distinct !DILocation(line: 946, column: 36, scope: !15335)
!15357 = !{i64 4157970}
!15358 = !DILocation(line: 0, scope: !15351, inlinedAt: !15354)
!15359 = !DILocation(line: 48, column: 9, scope: !15355, inlinedAt: !15356)
!15360 = !DILocation(line: 946, column: 2, scope: !15335)
!15361 = distinct !DISubprogram(name: "need_swap", scope: !2596, file: !2596, line: 953, type: !7447, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !15362)
!15362 = !{!15363}
!15363 = !DILocalVariable(name: "new_thread", scope: !15361, file: !2596, line: 959, type: !2488)
!15364 = !DILocation(line: 962, column: 31, scope: !15361)
!15365 = !DILocation(line: 0, scope: !15361)
!15366 = !DILocation(line: 963, column: 23, scope: !15361)
!15367 = !DILocation(line: 963, column: 20, scope: !15361)
!15368 = !DILocation(line: 963, column: 2, scope: !15361)
!15369 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !13888, file: !13888, line: 181, type: !6404, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !15370)
!15370 = !{!15371, !15372}
!15371 = !DILocalVariable(name: "key", arg: 1, scope: !15369, file: !13888, line: 181, type: !32)
!15372 = !DILocalVariable(name: "ret", scope: !15369, file: !13888, line: 183, type: !107)
!15373 = !DILocation(line: 0, scope: !15369)
!15374 = !DILocation(line: 185, column: 8, scope: !15369)
!15375 = !DILocation(line: 186, column: 2, scope: !15369)
!15376 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2596, file: !2596, line: 665, type: !14582, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !15377)
!15377 = !{!15378, !15379, !15381}
!15378 = !DILocalVariable(name: "thread", arg: 1, scope: !15376, file: !2596, line: 665, type: !2488)
!15379 = !DILocalVariable(name: "__i", scope: !15380, file: !2596, line: 671, type: !14616)
!15380 = distinct !DILexicalBlock(scope: !15376, file: !2596, line: 671, column: 2)
!15381 = !DILocalVariable(name: "__key", scope: !15380, file: !2596, line: 671, type: !14616)
!15382 = !DILocation(line: 0, scope: !15376)
!15383 = !DILocation(line: 669, column: 8, scope: !15376)
!15384 = !DILocation(line: 0, scope: !15380)
!15385 = !DILocation(line: 0, scope: !14624, inlinedAt: !15386)
!15386 = distinct !DILocation(line: 671, column: 2, scope: !15380)
!15387 = !DILocation(line: 55, column: 2, scope: !14633, inlinedAt: !15388)
!15388 = distinct !DILocation(line: 145, column: 10, scope: !14624, inlinedAt: !15386)
!15389 = !DILocation(line: 0, scope: !14633, inlinedAt: !15388)
!15390 = !DILocation(line: 148, column: 2, scope: !14641, inlinedAt: !15386)
!15391 = !DILocation(line: 148, column: 2, scope: !14642, inlinedAt: !15386)
!15392 = !DILocation(line: 148, column: 2, scope: !14645, inlinedAt: !15386)
!15393 = !DILocation(line: 160, column: 2, scope: !14624, inlinedAt: !15386)
!15394 = !DILocation(line: 672, column: 7, scope: !15395)
!15395 = distinct !DILexicalBlock(scope: !15396, file: !2596, line: 672, column: 7)
!15396 = distinct !DILexicalBlock(scope: !15397, file: !2596, line: 671, column: 26)
!15397 = distinct !DILexicalBlock(scope: !15380, file: !2596, line: 671, column: 2)
!15398 = !DILocation(line: 672, column: 7, scope: !15396)
!15399 = !DILocation(line: 0, scope: !14816, inlinedAt: !15400)
!15400 = distinct !DILocation(line: 673, column: 4, scope: !15401)
!15401 = distinct !DILexicalBlock(scope: !15395, file: !2596, line: 672, column: 35)
!15402 = !DILocation(line: 266, column: 15, scope: !14816, inlinedAt: !15400)
!15403 = !DILocation(line: 266, column: 28, scope: !14816, inlinedAt: !15400)
!15404 = !DILocation(line: 0, scope: !14824, inlinedAt: !15405)
!15405 = distinct !DILocation(line: 268, column: 3, scope: !14828, inlinedAt: !15400)
!15406 = !DILocation(line: 234, column: 2, scope: !14824, inlinedAt: !15405)
!15407 = !DILocation(line: 674, column: 3, scope: !15401)
!15408 = !DILocation(line: 675, column: 3, scope: !15396)
!15409 = !DILocation(line: 676, column: 26, scope: !15396)
!15410 = !DILocation(line: 676, column: 23, scope: !15396)
!15411 = !DILocation(line: 676, column: 3, scope: !15396)
!15412 = !DILocation(line: 0, scope: !14658, inlinedAt: !15413)
!15413 = distinct !DILocation(line: 671, column: 2, scope: !15397)
!15414 = !DILocation(line: 194, column: 2, scope: !14666, inlinedAt: !15413)
!15415 = !DILocation(line: 194, column: 2, scope: !14667, inlinedAt: !15413)
!15416 = !DILocation(line: 194, column: 2, scope: !14670, inlinedAt: !15413)
!15417 = !DILocation(line: 0, scope: !14672, inlinedAt: !15418)
!15418 = distinct !DILocation(line: 215, column: 2, scope: !14658, inlinedAt: !15413)
!15419 = !DILocation(line: 95, column: 2, scope: !14672, inlinedAt: !15418)
!15420 = !DILocation(line: 679, column: 16, scope: !15421)
!15421 = distinct !DILexicalBlock(scope: !15376, file: !2596, line: 679, column: 6)
!15422 = !DILocation(line: 679, column: 13, scope: !15421)
!15423 = !DILocation(line: 679, column: 6, scope: !15376)
!15424 = !DILocation(line: 680, column: 3, scope: !15425)
!15425 = distinct !DILexicalBlock(scope: !15421, file: !2596, line: 679, column: 26)
!15426 = !DILocation(line: 681, column: 2, scope: !15425)
!15427 = !DILocation(line: 684, column: 1, scope: !15376)
!15428 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !14213, file: !14213, line: 52, type: !14600, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !15429)
!15429 = !{!15430}
!15430 = !DILocalVariable(name: "thread", arg: 1, scope: !15428, file: !14213, line: 52, type: !2488)
!15431 = !DILocation(line: 0, scope: !15428)
!15432 = !DILocation(line: 54, column: 39, scope: !15428)
!15433 = !DILocation(line: 54, column: 9, scope: !15428)
!15434 = !DILocation(line: 54, column: 2, scope: !15428)
!15435 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !13784, file: !13784, line: 141, type: !14582, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !15436)
!15436 = !{!15437}
!15437 = !DILocalVariable(name: "thread", arg: 1, scope: !15435, file: !13784, line: 141, type: !2488)
!15438 = !DILocation(line: 0, scope: !15435)
!15439 = !DILocation(line: 143, column: 15, scope: !15435)
!15440 = !DILocation(line: 143, column: 28, scope: !15435)
!15441 = !DILocation(line: 146, column: 1, scope: !15435)
!15442 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !13784, file: !13784, line: 73, type: !3227, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !2296)
!15443 = !DILocation(line: 55, column: 2, scope: !14633, inlinedAt: !15444)
!15444 = distinct !DILocation(line: 75, column: 30, scope: !15442)
!15445 = !DILocation(line: 0, scope: !14633, inlinedAt: !15444)
!15446 = !DILocation(line: 75, column: 9, scope: !15442)
!15447 = !DILocation(line: 76, column: 1, scope: !15442)
!15448 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2596, file: !2596, line: 977, type: !6491, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !15449)
!15449 = !{!15450}
!15450 = !DILocalVariable(name: "key", arg: 1, scope: !15448, file: !2596, line: 977, type: !152)
!15451 = !DILocation(line: 0, scope: !15448)
!15452 = !DILocation(line: 979, column: 6, scope: !15453)
!15453 = distinct !DILexicalBlock(scope: !15448, file: !2596, line: 979, column: 6)
!15454 = !DILocation(line: 979, column: 6, scope: !15448)
!15455 = !DILocation(line: 980, column: 3, scope: !15456)
!15456 = distinct !DILexicalBlock(scope: !15453, file: !2596, line: 979, column: 20)
!15457 = !DILocation(line: 981, column: 2, scope: !15456)
!15458 = !DILocation(line: 0, scope: !14672, inlinedAt: !15459)
!15459 = distinct !DILocation(line: 982, column: 3, scope: !15460)
!15460 = distinct !DILexicalBlock(scope: !15453, file: !2596, line: 981, column: 9)
!15461 = !DILocation(line: 95, column: 2, scope: !14672, inlinedAt: !15459)
!15462 = !DILocation(line: 985, column: 1, scope: !15448)
!15463 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2596, file: !2596, line: 695, type: !14582, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !15464)
!15464 = !{!15465, !15466}
!15465 = !DILocalVariable(name: "thread", arg: 1, scope: !15463, file: !2596, line: 695, type: !2488)
!15466 = !DILocalVariable(name: "key", scope: !15463, file: !2596, line: 699, type: !14616)
!15467 = !DILocation(line: 0, scope: !15463)
!15468 = !DILocation(line: 0, scope: !14624, inlinedAt: !15469)
!15469 = distinct !DILocation(line: 699, column: 25, scope: !15463)
!15470 = !DILocation(line: 55, column: 2, scope: !14633, inlinedAt: !15471)
!15471 = distinct !DILocation(line: 145, column: 10, scope: !14624, inlinedAt: !15469)
!15472 = !DILocation(line: 0, scope: !14633, inlinedAt: !15471)
!15473 = !DILocation(line: 148, column: 2, scope: !14641, inlinedAt: !15469)
!15474 = !DILocation(line: 148, column: 2, scope: !14642, inlinedAt: !15469)
!15475 = !DILocation(line: 148, column: 2, scope: !14645, inlinedAt: !15469)
!15476 = !DILocation(line: 160, column: 2, scope: !14624, inlinedAt: !15469)
!15477 = !DILocation(line: 702, column: 7, scope: !15478)
!15478 = distinct !DILexicalBlock(scope: !15463, file: !2596, line: 702, column: 6)
!15479 = !DILocation(line: 702, column: 6, scope: !15463)
!15480 = !DILocation(line: 0, scope: !14658, inlinedAt: !15481)
!15481 = distinct !DILocation(line: 703, column: 3, scope: !15482)
!15482 = distinct !DILexicalBlock(scope: !15478, file: !2596, line: 702, column: 38)
!15483 = !DILocation(line: 194, column: 2, scope: !14666, inlinedAt: !15481)
!15484 = !DILocation(line: 194, column: 2, scope: !14667, inlinedAt: !15481)
!15485 = !DILocation(line: 194, column: 2, scope: !14670, inlinedAt: !15481)
!15486 = !DILocation(line: 0, scope: !14672, inlinedAt: !15487)
!15487 = distinct !DILocation(line: 215, column: 2, scope: !14658, inlinedAt: !15481)
!15488 = !DILocation(line: 95, column: 2, scope: !14672, inlinedAt: !15487)
!15489 = !DILocation(line: 704, column: 3, scope: !15482)
!15490 = !DILocation(line: 707, column: 2, scope: !15463)
!15491 = !DILocation(line: 708, column: 2, scope: !15463)
!15492 = !DILocation(line: 710, column: 2, scope: !15463)
!15493 = !DILocation(line: 713, column: 1, scope: !15463)
!15494 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !13784, file: !13784, line: 96, type: !14765, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !15495)
!15495 = !{!15496}
!15496 = !DILocalVariable(name: "thread", arg: 1, scope: !15494, file: !13784, line: 96, type: !2488)
!15497 = !DILocation(line: 0, scope: !15494)
!15498 = !DILocation(line: 98, column: 23, scope: !15494)
!15499 = !DILocation(line: 98, column: 36, scope: !15494)
!15500 = !DILocation(line: 98, column: 57, scope: !15494)
!15501 = !DILocation(line: 98, column: 2, scope: !15494)
!15502 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !13784, file: !13784, line: 148, type: !14582, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !15503)
!15503 = !{!15504}
!15504 = !DILocalVariable(name: "thread", arg: 1, scope: !15502, file: !13784, line: 148, type: !2488)
!15505 = !DILocation(line: 0, scope: !15502)
!15506 = !DILocation(line: 150, column: 15, scope: !15502)
!15507 = !DILocation(line: 150, column: 28, scope: !15502)
!15508 = !DILocation(line: 153, column: 1, scope: !15502)
!15509 = distinct !DISubprogram(name: "z_pend_thread", scope: !2596, file: !2596, line: 770, type: !15510, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !15516)
!15510 = !DISubroutineType(types: !15511)
!15511 = !{null, !2488, !2519, !15512}
!15512 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !565, line: 67, baseType: !15513)
!15513 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !565, line: 65, size: 64, elements: !15514)
!15514 = !{!15515}
!15515 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15513, file: !565, line: 66, baseType: !564, size: 64)
!15516 = !{!15517, !15518, !15519, !15520, !15522}
!15517 = !DILocalVariable(name: "thread", arg: 1, scope: !15509, file: !2596, line: 770, type: !2488)
!15518 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15509, file: !2596, line: 770, type: !2519)
!15519 = !DILocalVariable(name: "timeout", arg: 3, scope: !15509, file: !2596, line: 771, type: !15512)
!15520 = !DILocalVariable(name: "__i", scope: !15521, file: !2596, line: 774, type: !14616)
!15521 = distinct !DILexicalBlock(scope: !15509, file: !2596, line: 774, column: 2)
!15522 = !DILocalVariable(name: "__key", scope: !15521, file: !2596, line: 774, type: !14616)
!15523 = !DILocation(line: 0, scope: !15509)
!15524 = !DILocation(line: 773, column: 2, scope: !15525)
!15525 = distinct !DILexicalBlock(scope: !15526, file: !2596, line: 773, column: 2)
!15526 = distinct !DILexicalBlock(scope: !15509, file: !2596, line: 773, column: 2)
!15527 = !DILocation(line: 773, column: 2, scope: !15526)
!15528 = !DILocation(line: 773, column: 2, scope: !15529)
!15529 = distinct !DILexicalBlock(scope: !15525, file: !2596, line: 773, column: 2)
!15530 = !DILocation(line: 0, scope: !15521)
!15531 = !DILocation(line: 0, scope: !14624, inlinedAt: !15532)
!15532 = distinct !DILocation(line: 774, column: 2, scope: !15521)
!15533 = !DILocation(line: 55, column: 2, scope: !14633, inlinedAt: !15534)
!15534 = distinct !DILocation(line: 145, column: 10, scope: !14624, inlinedAt: !15532)
!15535 = !DILocation(line: 0, scope: !14633, inlinedAt: !15534)
!15536 = !DILocation(line: 148, column: 2, scope: !14641, inlinedAt: !15532)
!15537 = !DILocation(line: 148, column: 2, scope: !14642, inlinedAt: !15532)
!15538 = !DILocation(line: 148, column: 2, scope: !14645, inlinedAt: !15532)
!15539 = !DILocation(line: 160, column: 2, scope: !14624, inlinedAt: !15532)
!15540 = !DILocation(line: 775, column: 3, scope: !15541)
!15541 = distinct !DILexicalBlock(scope: !15542, file: !2596, line: 774, column: 26)
!15542 = distinct !DILexicalBlock(scope: !15521, file: !2596, line: 774, column: 2)
!15543 = !DILocation(line: 0, scope: !14658, inlinedAt: !15544)
!15544 = distinct !DILocation(line: 774, column: 2, scope: !15542)
!15545 = !DILocation(line: 194, column: 2, scope: !14666, inlinedAt: !15544)
!15546 = !DILocation(line: 194, column: 2, scope: !14667, inlinedAt: !15544)
!15547 = !DILocation(line: 194, column: 2, scope: !14670, inlinedAt: !15544)
!15548 = !DILocation(line: 0, scope: !14672, inlinedAt: !15549)
!15549 = distinct !DILocation(line: 215, column: 2, scope: !14658, inlinedAt: !15544)
!15550 = !DILocation(line: 95, column: 2, scope: !14672, inlinedAt: !15549)
!15551 = !DILocation(line: 777, column: 1, scope: !15509)
!15552 = distinct !DISubprogram(name: "is_thread_dummy", scope: !2596, file: !2596, line: 79, type: !14765, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !15553)
!15553 = !{!15554}
!15554 = !DILocalVariable(name: "thread", arg: 1, scope: !15552, file: !2596, line: 79, type: !2488)
!15555 = !DILocation(line: 0, scope: !15552)
!15556 = !DILocation(line: 81, column: 23, scope: !15552)
!15557 = !DILocation(line: 81, column: 36, scope: !15552)
!15558 = !DILocation(line: 81, column: 53, scope: !15552)
!15559 = !DILocation(line: 81, column: 2, scope: !15552)
!15560 = distinct !DISubprogram(name: "pend_locked", scope: !2596, file: !2596, line: 760, type: !15510, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !15561)
!15561 = !{!15562, !15563, !15564}
!15562 = !DILocalVariable(name: "thread", arg: 1, scope: !15560, file: !2596, line: 760, type: !2488)
!15563 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15560, file: !2596, line: 760, type: !2519)
!15564 = !DILocalVariable(name: "timeout", arg: 3, scope: !15560, file: !2596, line: 761, type: !15512)
!15565 = !DILocation(line: 0, scope: !15560)
!15566 = !DILocation(line: 766, column: 2, scope: !15560)
!15567 = !DILocation(line: 767, column: 2, scope: !15560)
!15568 = !DILocation(line: 768, column: 1, scope: !15560)
!15569 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2596, file: !2596, line: 740, type: !15570, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !15572)
!15570 = !DISubroutineType(types: !15571)
!15571 = !{null, !2488, !2519}
!15572 = !{!15573, !15574}
!15573 = !DILocalVariable(name: "thread", arg: 1, scope: !15569, file: !2596, line: 740, type: !2488)
!15574 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15569, file: !2596, line: 740, type: !2519)
!15575 = !DILocation(line: 0, scope: !15569)
!15576 = !DILocation(line: 742, column: 2, scope: !15569)
!15577 = !DILocation(line: 743, column: 2, scope: !15569)
!15578 = !DILocation(line: 747, column: 13, scope: !15579)
!15579 = distinct !DILexicalBlock(scope: !15569, file: !2596, line: 747, column: 6)
!15580 = !DILocation(line: 747, column: 6, scope: !15569)
!15581 = !DILocation(line: 748, column: 16, scope: !15582)
!15582 = distinct !DILexicalBlock(scope: !15579, file: !2596, line: 747, column: 22)
!15583 = !DILocation(line: 748, column: 26, scope: !15582)
!15584 = !DILocation(line: 749, column: 28, scope: !15582)
!15585 = !DILocation(line: 0, scope: !14847, inlinedAt: !15586)
!15586 = distinct !DILocation(line: 749, column: 3, scope: !15582)
!15587 = !DILocation(line: 186, column: 2, scope: !14857, inlinedAt: !15586)
!15588 = !DILocation(line: 186, column: 2, scope: !14858, inlinedAt: !15586)
!15589 = !DILocation(line: 186, column: 2, scope: !14861, inlinedAt: !15586)
!15590 = !DILocation(line: 188, column: 2, scope: !14863, inlinedAt: !15586)
!15591 = !DILocation(line: 188, column: 2, scope: !14865, inlinedAt: !15586)
!15592 = !DILocation(line: 0, scope: !14863, inlinedAt: !15586)
!15593 = !DILocation(line: 189, column: 7, scope: !14868, inlinedAt: !15586)
!15594 = !DILocation(line: 189, column: 35, scope: !14868, inlinedAt: !15586)
!15595 = !DILocation(line: 189, column: 7, scope: !14869, inlinedAt: !15586)
!15596 = !DILocation(line: 191, column: 21, scope: !14873, inlinedAt: !15586)
!15597 = !DILocation(line: 190, column: 4, scope: !14873, inlinedAt: !15586)
!15598 = !DILocation(line: 192, column: 4, scope: !14873, inlinedAt: !15586)
!15599 = distinct !{!15599, !15590, !15600}
!15600 = !DILocation(line: 194, column: 2, scope: !14863, inlinedAt: !15586)
!15601 = !DILocation(line: 196, column: 37, scope: !14847, inlinedAt: !15586)
!15602 = !DILocation(line: 196, column: 2, scope: !14847, inlinedAt: !15586)
!15603 = !DILocation(line: 197, column: 1, scope: !14847, inlinedAt: !15586)
!15604 = !DILocation(line: 751, column: 1, scope: !15569)
!15605 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2596, file: !2596, line: 753, type: !15606, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !15608)
!15606 = !DISubroutineType(types: !15607)
!15607 = !{null, !2488, !15512}
!15608 = !{!15609, !15610}
!15609 = !DILocalVariable(name: "thread", arg: 1, scope: !15605, file: !2596, line: 753, type: !2488)
!15610 = !DILocalVariable(name: "timeout", arg: 2, scope: !15605, file: !2596, line: 753, type: !15512)
!15611 = !DILocation(line: 0, scope: !15605)
!15612 = !DILocation(line: 755, column: 7, scope: !15613)
!15613 = distinct !DILexicalBlock(scope: !15605, file: !2596, line: 755, column: 6)
!15614 = !DILocation(line: 755, column: 6, scope: !15605)
!15615 = !DILocation(line: 756, column: 3, scope: !15616)
!15616 = distinct !DILexicalBlock(scope: !15613, file: !2596, line: 755, column: 41)
!15617 = !DILocation(line: 757, column: 2, scope: !15616)
!15618 = !DILocation(line: 758, column: 1, scope: !15605)
!15619 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14213, file: !14213, line: 47, type: !15606, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !15620)
!15620 = !{!15621, !15622}
!15621 = !DILocalVariable(name: "thread", arg: 1, scope: !15619, file: !14213, line: 47, type: !2488)
!15622 = !DILocalVariable(name: "ticks", arg: 2, scope: !15619, file: !14213, line: 47, type: !15512)
!15623 = !DILocation(line: 0, scope: !15619)
!15624 = !DILocation(line: 49, column: 30, scope: !15619)
!15625 = !DILocation(line: 49, column: 2, scope: !15619)
!15626 = !DILocation(line: 50, column: 1, scope: !15619)
!15627 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2596, file: !2596, line: 795, type: !2545, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !15628)
!15628 = !{!15629, !15630, !15631, !15633, !15634}
!15629 = !DILocalVariable(name: "timeout", arg: 1, scope: !15627, file: !2596, line: 795, type: !2547)
!15630 = !DILocalVariable(name: "thread", scope: !15627, file: !2596, line: 797, type: !2488)
!15631 = !DILocalVariable(name: "__i", scope: !15632, file: !2596, line: 800, type: !14616)
!15632 = distinct !DILexicalBlock(scope: !15627, file: !2596, line: 800, column: 2)
!15633 = !DILocalVariable(name: "__key", scope: !15632, file: !2596, line: 800, type: !14616)
!15634 = !DILocalVariable(name: "killed", scope: !15635, file: !2596, line: 801, type: !145)
!15635 = distinct !DILexicalBlock(scope: !15636, file: !2596, line: 800, column: 26)
!15636 = distinct !DILexicalBlock(scope: !15632, file: !2596, line: 800, column: 2)
!15637 = !DILocation(line: 0, scope: !15627)
!15638 = !DILocation(line: 797, column: 28, scope: !15627)
!15639 = !DILocation(line: 0, scope: !15632)
!15640 = !DILocation(line: 0, scope: !14624, inlinedAt: !15641)
!15641 = distinct !DILocation(line: 800, column: 2, scope: !15632)
!15642 = !DILocation(line: 55, column: 2, scope: !14633, inlinedAt: !15643)
!15643 = distinct !DILocation(line: 145, column: 10, scope: !14624, inlinedAt: !15641)
!15644 = !DILocation(line: 0, scope: !14633, inlinedAt: !15643)
!15645 = !DILocation(line: 148, column: 2, scope: !14641, inlinedAt: !15641)
!15646 = !DILocation(line: 148, column: 2, scope: !14642, inlinedAt: !15641)
!15647 = !DILocation(line: 148, column: 2, scope: !14645, inlinedAt: !15641)
!15648 = !DILocation(line: 160, column: 2, scope: !14624, inlinedAt: !15641)
!15649 = !DILocation(line: 801, column: 27, scope: !15635)
!15650 = !DILocation(line: 801, column: 32, scope: !15635)
!15651 = !DILocation(line: 801, column: 61, scope: !15635)
!15652 = !DILocation(line: 0, scope: !15635)
!15653 = !DILocation(line: 804, column: 7, scope: !15635)
!15654 = !DILocation(line: 805, column: 21, scope: !15655)
!15655 = distinct !DILexicalBlock(scope: !15656, file: !2596, line: 805, column: 8)
!15656 = distinct !DILexicalBlock(scope: !15657, file: !2596, line: 804, column: 16)
!15657 = distinct !DILexicalBlock(scope: !15635, file: !2596, line: 804, column: 7)
!15658 = !DILocation(line: 805, column: 31, scope: !15655)
!15659 = !DILocation(line: 805, column: 8, scope: !15656)
!15660 = !DILocation(line: 806, column: 5, scope: !15661)
!15661 = distinct !DILexicalBlock(scope: !15655, file: !2596, line: 805, column: 40)
!15662 = !DILocation(line: 807, column: 4, scope: !15661)
!15663 = !DILocation(line: 808, column: 4, scope: !15656)
!15664 = !DILocation(line: 809, column: 4, scope: !15656)
!15665 = !DILocation(line: 810, column: 4, scope: !15656)
!15666 = !DILocation(line: 811, column: 3, scope: !15656)
!15667 = !DILocation(line: 0, scope: !14658, inlinedAt: !15668)
!15668 = distinct !DILocation(line: 800, column: 2, scope: !15636)
!15669 = !DILocation(line: 194, column: 2, scope: !14666, inlinedAt: !15668)
!15670 = !DILocation(line: 194, column: 2, scope: !14667, inlinedAt: !15668)
!15671 = !DILocation(line: 194, column: 2, scope: !14670, inlinedAt: !15668)
!15672 = !DILocation(line: 0, scope: !14672, inlinedAt: !15673)
!15673 = distinct !DILocation(line: 215, column: 2, scope: !14658, inlinedAt: !15668)
!15674 = !DILocation(line: 95, column: 2, scope: !14672, inlinedAt: !15673)
!15675 = !DILocation(line: 813, column: 1, scope: !15627)
!15676 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2596, file: !2596, line: 779, type: !14582, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !15677)
!15677 = !{!15678}
!15678 = !DILocalVariable(name: "thread", arg: 1, scope: !15676, file: !2596, line: 779, type: !2488)
!15679 = !DILocation(line: 0, scope: !15676)
!15680 = !DILocation(line: 781, column: 21, scope: !15676)
!15681 = !DILocation(line: 781, column: 2, scope: !15676)
!15682 = !DILocation(line: 782, column: 2, scope: !15676)
!15683 = !DILocation(line: 783, column: 15, scope: !15676)
!15684 = !DILocation(line: 783, column: 25, scope: !15676)
!15685 = !DILocation(line: 784, column: 1, scope: !15676)
!15686 = distinct !DISubprogram(name: "pended_on_thread", scope: !2596, file: !2596, line: 724, type: !15687, scopeLine: 725, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !15689)
!15687 = !DISubroutineType(types: !15688)
!15688 = !{!2519, !2488}
!15689 = !{!15690}
!15690 = !DILocalVariable(name: "thread", arg: 1, scope: !15686, file: !2596, line: 724, type: !2488)
!15691 = !DILocation(line: 0, scope: !15686)
!15692 = !DILocation(line: 726, column: 2, scope: !15693)
!15693 = distinct !DILexicalBlock(scope: !15694, file: !2596, line: 726, column: 2)
!15694 = distinct !DILexicalBlock(scope: !15686, file: !2596, line: 726, column: 2)
!15695 = !DILocation(line: 726, column: 2, scope: !15694)
!15696 = !DILocation(line: 726, column: 2, scope: !15697)
!15697 = distinct !DILexicalBlock(scope: !15693, file: !2596, line: 726, column: 2)
!15698 = !DILocation(line: 728, column: 2, scope: !15686)
!15699 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !13784, file: !13784, line: 165, type: !14582, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !15700)
!15700 = !{!15701}
!15701 = !DILocalVariable(name: "thread", arg: 1, scope: !15699, file: !13784, line: 165, type: !2488)
!15702 = !DILocation(line: 0, scope: !15699)
!15703 = !DILocation(line: 167, column: 15, scope: !15699)
!15704 = !DILocation(line: 167, column: 28, scope: !15699)
!15705 = !DILocation(line: 168, column: 1, scope: !15699)
!15706 = distinct !DISubprogram(name: "unready_thread", scope: !2596, file: !2596, line: 731, type: !14582, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !15707)
!15707 = !{!15708}
!15708 = !DILocalVariable(name: "thread", arg: 1, scope: !15706, file: !2596, line: 731, type: !2488)
!15709 = !DILocation(line: 0, scope: !15706)
!15710 = !DILocation(line: 733, column: 6, scope: !15711)
!15711 = distinct !DILexicalBlock(scope: !15706, file: !2596, line: 733, column: 6)
!15712 = !DILocation(line: 733, column: 6, scope: !15706)
!15713 = !DILocation(line: 0, scope: !14816, inlinedAt: !15714)
!15714 = distinct !DILocation(line: 734, column: 3, scope: !15715)
!15715 = distinct !DILexicalBlock(scope: !15711, file: !2596, line: 733, column: 34)
!15716 = !DILocation(line: 266, column: 15, scope: !14816, inlinedAt: !15714)
!15717 = !DILocation(line: 266, column: 28, scope: !14816, inlinedAt: !15714)
!15718 = !DILocation(line: 0, scope: !14824, inlinedAt: !15719)
!15719 = distinct !DILocation(line: 268, column: 3, scope: !14828, inlinedAt: !15714)
!15720 = !DILocation(line: 234, column: 2, scope: !14824, inlinedAt: !15719)
!15721 = !DILocation(line: 735, column: 2, scope: !15715)
!15722 = !DILocation(line: 736, column: 25, scope: !15706)
!15723 = !DILocation(line: 736, column: 22, scope: !15706)
!15724 = !DILocation(line: 736, column: 2, scope: !15706)
!15725 = !DILocation(line: 737, column: 1, scope: !15706)
!15726 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !13784, file: !13784, line: 160, type: !14582, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !15727)
!15727 = !{!15728}
!15728 = !DILocalVariable(name: "thread", arg: 1, scope: !15726, file: !13784, line: 160, type: !2488)
!15729 = !DILocation(line: 0, scope: !15726)
!15730 = !DILocation(line: 162, column: 15, scope: !15726)
!15731 = !DILocation(line: 162, column: 28, scope: !15726)
!15732 = !DILocation(line: 163, column: 1, scope: !15726)
!15733 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2596, file: !2596, line: 786, type: !14582, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !15734)
!15734 = !{!15735, !15736, !15738}
!15735 = !DILocalVariable(name: "thread", arg: 1, scope: !15733, file: !2596, line: 786, type: !2488)
!15736 = !DILocalVariable(name: "__i", scope: !15737, file: !2596, line: 788, type: !14616)
!15737 = distinct !DILexicalBlock(scope: !15733, file: !2596, line: 788, column: 2)
!15738 = !DILocalVariable(name: "__key", scope: !15737, file: !2596, line: 788, type: !14616)
!15739 = !DILocation(line: 0, scope: !15733)
!15740 = !DILocation(line: 0, scope: !15737)
!15741 = !DILocation(line: 0, scope: !14624, inlinedAt: !15742)
!15742 = distinct !DILocation(line: 788, column: 2, scope: !15737)
!15743 = !DILocation(line: 55, column: 2, scope: !14633, inlinedAt: !15744)
!15744 = distinct !DILocation(line: 145, column: 10, scope: !14624, inlinedAt: !15742)
!15745 = !DILocation(line: 0, scope: !14633, inlinedAt: !15744)
!15746 = !DILocation(line: 148, column: 2, scope: !14641, inlinedAt: !15742)
!15747 = !DILocation(line: 148, column: 2, scope: !14642, inlinedAt: !15742)
!15748 = !DILocation(line: 148, column: 2, scope: !14645, inlinedAt: !15742)
!15749 = !DILocation(line: 160, column: 2, scope: !14624, inlinedAt: !15742)
!15750 = !DILocation(line: 789, column: 3, scope: !15751)
!15751 = distinct !DILexicalBlock(scope: !15752, file: !2596, line: 788, column: 26)
!15752 = distinct !DILexicalBlock(scope: !15737, file: !2596, line: 788, column: 2)
!15753 = !DILocation(line: 0, scope: !14658, inlinedAt: !15754)
!15754 = distinct !DILocation(line: 788, column: 2, scope: !15752)
!15755 = !DILocation(line: 194, column: 2, scope: !14666, inlinedAt: !15754)
!15756 = !DILocation(line: 194, column: 2, scope: !14667, inlinedAt: !15754)
!15757 = !DILocation(line: 194, column: 2, scope: !14670, inlinedAt: !15754)
!15758 = !DILocation(line: 0, scope: !14672, inlinedAt: !15759)
!15759 = distinct !DILocation(line: 215, column: 2, scope: !14658, inlinedAt: !15754)
!15760 = !DILocation(line: 95, column: 2, scope: !14672, inlinedAt: !15759)
!15761 = !DILocation(line: 791, column: 1, scope: !15733)
!15762 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2596, file: !2596, line: 816, type: !15763, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !15765)
!15763 = !DISubroutineType(types: !15764)
!15764 = !{!107, !152, !2519, !15512}
!15765 = !{!15766, !15767, !15768, !15769, !15770, !15772}
!15766 = !DILocalVariable(name: "key", arg: 1, scope: !15762, file: !2596, line: 816, type: !152)
!15767 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15762, file: !2596, line: 816, type: !2519)
!15768 = !DILocalVariable(name: "timeout", arg: 3, scope: !15762, file: !2596, line: 816, type: !15512)
!15769 = !DILocalVariable(name: "ret", scope: !15762, file: !2596, line: 828, type: !107)
!15770 = !DILocalVariable(name: "__i", scope: !15771, file: !2596, line: 829, type: !14616)
!15771 = distinct !DILexicalBlock(scope: !15762, file: !2596, line: 829, column: 2)
!15772 = !DILocalVariable(name: "__key", scope: !15771, file: !2596, line: 829, type: !14616)
!15773 = !DILocation(line: 0, scope: !15762)
!15774 = !DILocation(line: 823, column: 14, scope: !15762)
!15775 = !DILocation(line: 823, column: 2, scope: !15762)
!15776 = !DILocation(line: 826, column: 20, scope: !15762)
!15777 = !DILocation(line: 826, column: 18, scope: !15762)
!15778 = !DILocation(line: 828, column: 12, scope: !15762)
!15779 = !DILocation(line: 0, scope: !15771)
!15780 = !DILocation(line: 0, scope: !14624, inlinedAt: !15781)
!15781 = distinct !DILocation(line: 829, column: 2, scope: !15771)
!15782 = !DILocation(line: 55, column: 2, scope: !14633, inlinedAt: !15783)
!15783 = distinct !DILocation(line: 145, column: 10, scope: !14624, inlinedAt: !15781)
!15784 = !DILocation(line: 0, scope: !14633, inlinedAt: !15783)
!15785 = !DILocation(line: 148, column: 2, scope: !14641, inlinedAt: !15781)
!15786 = !DILocation(line: 148, column: 2, scope: !14642, inlinedAt: !15781)
!15787 = !DILocation(line: 148, column: 2, scope: !14645, inlinedAt: !15781)
!15788 = !DILocation(line: 160, column: 2, scope: !14624, inlinedAt: !15781)
!15789 = !DILocation(line: 830, column: 7, scope: !15790)
!15790 = distinct !DILexicalBlock(scope: !15791, file: !2596, line: 830, column: 7)
!15791 = distinct !DILexicalBlock(scope: !15792, file: !2596, line: 829, column: 26)
!15792 = distinct !DILexicalBlock(scope: !15771, file: !2596, line: 829, column: 2)
!15793 = !DILocation(line: 830, column: 26, scope: !15790)
!15794 = !DILocation(line: 830, column: 23, scope: !15790)
!15795 = !DILocation(line: 830, column: 7, scope: !15791)
!15796 = !DILocation(line: 831, column: 20, scope: !15797)
!15797 = distinct !DILexicalBlock(scope: !15790, file: !2596, line: 830, column: 36)
!15798 = !DILocation(line: 832, column: 3, scope: !15797)
!15799 = !DILocation(line: 0, scope: !14658, inlinedAt: !15800)
!15800 = distinct !DILocation(line: 829, column: 2, scope: !15792)
!15801 = !DILocation(line: 194, column: 2, scope: !14666, inlinedAt: !15800)
!15802 = !DILocation(line: 194, column: 2, scope: !14667, inlinedAt: !15800)
!15803 = !DILocation(line: 194, column: 2, scope: !14670, inlinedAt: !15800)
!15804 = !DILocation(line: 0, scope: !14672, inlinedAt: !15805)
!15805 = distinct !DILocation(line: 215, column: 2, scope: !14658, inlinedAt: !15800)
!15806 = !DILocation(line: 95, column: 2, scope: !14672, inlinedAt: !15805)
!15807 = !DILocation(line: 834, column: 2, scope: !15762)
!15808 = distinct !DISubprogram(name: "z_pend_curr", scope: !2596, file: !2596, line: 840, type: !15809, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !15811)
!15809 = !DISubroutineType(types: !15810)
!15810 = !{!107, !14627, !14616, !2519, !15512}
!15811 = !{!15812, !15813, !15814, !15815}
!15812 = !DILocalVariable(name: "lock", arg: 1, scope: !15808, file: !2596, line: 840, type: !14627)
!15813 = !DILocalVariable(name: "key", arg: 2, scope: !15808, file: !2596, line: 840, type: !14616)
!15814 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15808, file: !2596, line: 841, type: !2519)
!15815 = !DILocalVariable(name: "timeout", arg: 4, scope: !15808, file: !2596, line: 841, type: !15512)
!15816 = !DILocation(line: 0, scope: !15808)
!15817 = !DILocation(line: 844, column: 20, scope: !15808)
!15818 = !DILocation(line: 844, column: 18, scope: !15808)
!15819 = !DILocation(line: 846, column: 2, scope: !15820)
!15820 = distinct !DILexicalBlock(scope: !15821, file: !2596, line: 846, column: 2)
!15821 = distinct !DILexicalBlock(scope: !15808, file: !2596, line: 846, column: 2)
!15822 = !DILocation(line: 846, column: 2, scope: !15821)
!15823 = !DILocation(line: 846, column: 2, scope: !15824)
!15824 = distinct !DILexicalBlock(scope: !15820, file: !2596, line: 846, column: 2)
!15825 = !DILocation(line: 0, scope: !14624, inlinedAt: !15826)
!15826 = distinct !DILocation(line: 856, column: 9, scope: !15808)
!15827 = !DILocation(line: 55, column: 2, scope: !14633, inlinedAt: !15828)
!15828 = distinct !DILocation(line: 145, column: 10, scope: !14624, inlinedAt: !15826)
!15829 = !DILocation(line: 0, scope: !14633, inlinedAt: !15828)
!15830 = !DILocation(line: 148, column: 2, scope: !14641, inlinedAt: !15826)
!15831 = !DILocation(line: 148, column: 2, scope: !14642, inlinedAt: !15826)
!15832 = !DILocation(line: 148, column: 2, scope: !14645, inlinedAt: !15826)
!15833 = !DILocation(line: 160, column: 2, scope: !14624, inlinedAt: !15826)
!15834 = !DILocation(line: 857, column: 14, scope: !15808)
!15835 = !DILocation(line: 857, column: 2, scope: !15808)
!15836 = !DILocation(line: 0, scope: !15311, inlinedAt: !15837)
!15837 = distinct !DILocation(line: 858, column: 2, scope: !15808)
!15838 = !DILocation(line: 225, column: 2, scope: !15318, inlinedAt: !15837)
!15839 = !DILocation(line: 225, column: 2, scope: !15319, inlinedAt: !15837)
!15840 = !DILocation(line: 225, column: 2, scope: !15322, inlinedAt: !15837)
!15841 = !DILocation(line: 0, scope: !15302, inlinedAt: !15842)
!15842 = distinct !DILocation(line: 859, column: 9, scope: !15808)
!15843 = !DILocation(line: 0, scope: !15311, inlinedAt: !15844)
!15844 = distinct !DILocation(line: 195, column: 2, scope: !15302, inlinedAt: !15842)
!15845 = !DILocation(line: 225, column: 2, scope: !15318, inlinedAt: !15844)
!15846 = !DILocation(line: 225, column: 2, scope: !15319, inlinedAt: !15844)
!15847 = !DILocation(line: 225, column: 2, scope: !15322, inlinedAt: !15844)
!15848 = !DILocation(line: 196, column: 9, scope: !15302, inlinedAt: !15842)
!15849 = !DILocation(line: 859, column: 2, scope: !15808)
!15850 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2596, file: !2596, line: 862, type: !15851, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !15853)
!15851 = !DISubroutineType(types: !15852)
!15852 = !{!2488, !2519}
!15853 = !{!15854, !15855, !15856, !15858}
!15854 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15850, file: !2596, line: 862, type: !2519)
!15855 = !DILocalVariable(name: "thread", scope: !15850, file: !2596, line: 864, type: !2488)
!15856 = !DILocalVariable(name: "__i", scope: !15857, file: !2596, line: 866, type: !14616)
!15857 = distinct !DILexicalBlock(scope: !15850, file: !2596, line: 866, column: 2)
!15858 = !DILocalVariable(name: "__key", scope: !15857, file: !2596, line: 866, type: !14616)
!15859 = !DILocation(line: 0, scope: !15850)
!15860 = !DILocation(line: 0, scope: !15857)
!15861 = !DILocation(line: 0, scope: !14624, inlinedAt: !15862)
!15862 = distinct !DILocation(line: 866, column: 2, scope: !15857)
!15863 = !DILocation(line: 55, column: 2, scope: !14633, inlinedAt: !15864)
!15864 = distinct !DILocation(line: 145, column: 10, scope: !14624, inlinedAt: !15862)
!15865 = !DILocation(line: 0, scope: !14633, inlinedAt: !15864)
!15866 = !DILocation(line: 148, column: 2, scope: !14641, inlinedAt: !15862)
!15867 = !DILocation(line: 148, column: 2, scope: !14642, inlinedAt: !15862)
!15868 = !DILocation(line: 148, column: 2, scope: !14645, inlinedAt: !15862)
!15869 = !DILocation(line: 160, column: 2, scope: !14624, inlinedAt: !15862)
!15870 = !DILocation(line: 867, column: 12, scope: !15871)
!15871 = distinct !DILexicalBlock(scope: !15872, file: !2596, line: 866, column: 26)
!15872 = distinct !DILexicalBlock(scope: !15857, file: !2596, line: 866, column: 2)
!15873 = !DILocation(line: 869, column: 14, scope: !15874)
!15874 = distinct !DILexicalBlock(scope: !15871, file: !2596, line: 869, column: 7)
!15875 = !DILocation(line: 869, column: 7, scope: !15871)
!15876 = !DILocation(line: 870, column: 4, scope: !15877)
!15877 = distinct !DILexicalBlock(scope: !15874, file: !2596, line: 869, column: 23)
!15878 = !DILocation(line: 871, column: 3, scope: !15877)
!15879 = !DILocation(line: 0, scope: !14658, inlinedAt: !15880)
!15880 = distinct !DILocation(line: 866, column: 2, scope: !15872)
!15881 = !DILocation(line: 194, column: 2, scope: !14666, inlinedAt: !15880)
!15882 = !DILocation(line: 194, column: 2, scope: !14667, inlinedAt: !15880)
!15883 = !DILocation(line: 194, column: 2, scope: !14670, inlinedAt: !15880)
!15884 = !DILocation(line: 0, scope: !14672, inlinedAt: !15885)
!15885 = distinct !DILocation(line: 215, column: 2, scope: !14658, inlinedAt: !15880)
!15886 = !DILocation(line: 95, column: 2, scope: !14672, inlinedAt: !15885)
!15887 = !DILocation(line: 874, column: 2, scope: !15850)
!15888 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2596, file: !2596, line: 877, type: !15851, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !15889)
!15889 = !{!15890, !15891, !15892, !15894}
!15890 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15888, file: !2596, line: 877, type: !2519)
!15891 = !DILocalVariable(name: "thread", scope: !15888, file: !2596, line: 879, type: !2488)
!15892 = !DILocalVariable(name: "__i", scope: !15893, file: !2596, line: 881, type: !14616)
!15893 = distinct !DILexicalBlock(scope: !15888, file: !2596, line: 881, column: 2)
!15894 = !DILocalVariable(name: "__key", scope: !15893, file: !2596, line: 881, type: !14616)
!15895 = !DILocation(line: 0, scope: !15888)
!15896 = !DILocation(line: 0, scope: !15893)
!15897 = !DILocation(line: 0, scope: !14624, inlinedAt: !15898)
!15898 = distinct !DILocation(line: 881, column: 2, scope: !15893)
!15899 = !DILocation(line: 55, column: 2, scope: !14633, inlinedAt: !15900)
!15900 = distinct !DILocation(line: 145, column: 10, scope: !14624, inlinedAt: !15898)
!15901 = !DILocation(line: 0, scope: !14633, inlinedAt: !15900)
!15902 = !DILocation(line: 148, column: 2, scope: !14641, inlinedAt: !15898)
!15903 = !DILocation(line: 148, column: 2, scope: !14642, inlinedAt: !15898)
!15904 = !DILocation(line: 148, column: 2, scope: !14645, inlinedAt: !15898)
!15905 = !DILocation(line: 160, column: 2, scope: !14624, inlinedAt: !15898)
!15906 = !DILocation(line: 882, column: 12, scope: !15907)
!15907 = distinct !DILexicalBlock(scope: !15908, file: !2596, line: 881, column: 26)
!15908 = distinct !DILexicalBlock(scope: !15893, file: !2596, line: 881, column: 2)
!15909 = !DILocation(line: 884, column: 14, scope: !15910)
!15910 = distinct !DILexicalBlock(scope: !15907, file: !2596, line: 884, column: 7)
!15911 = !DILocation(line: 884, column: 7, scope: !15907)
!15912 = !DILocation(line: 885, column: 4, scope: !15913)
!15913 = distinct !DILexicalBlock(scope: !15910, file: !2596, line: 884, column: 23)
!15914 = !DILocation(line: 886, column: 10, scope: !15913)
!15915 = !DILocation(line: 887, column: 3, scope: !15913)
!15916 = !DILocation(line: 0, scope: !14658, inlinedAt: !15917)
!15917 = distinct !DILocation(line: 881, column: 2, scope: !15908)
!15918 = !DILocation(line: 194, column: 2, scope: !14666, inlinedAt: !15917)
!15919 = !DILocation(line: 194, column: 2, scope: !14667, inlinedAt: !15917)
!15920 = !DILocation(line: 194, column: 2, scope: !14670, inlinedAt: !15917)
!15921 = !DILocation(line: 0, scope: !14672, inlinedAt: !15922)
!15922 = distinct !DILocation(line: 215, column: 2, scope: !14658, inlinedAt: !15917)
!15923 = !DILocation(line: 95, column: 2, scope: !14672, inlinedAt: !15922)
!15924 = !DILocation(line: 890, column: 2, scope: !15888)
!15925 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2596, file: !2596, line: 893, type: !14582, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !15926)
!15926 = !{!15927}
!15927 = !DILocalVariable(name: "thread", arg: 1, scope: !15925, file: !2596, line: 893, type: !2488)
!15928 = !DILocation(line: 0, scope: !15925)
!15929 = !DILocation(line: 0, scope: !15733, inlinedAt: !15930)
!15930 = distinct !DILocation(line: 895, column: 2, scope: !15925)
!15931 = !DILocation(line: 0, scope: !15737, inlinedAt: !15930)
!15932 = !DILocation(line: 0, scope: !14624, inlinedAt: !15933)
!15933 = distinct !DILocation(line: 788, column: 2, scope: !15737, inlinedAt: !15930)
!15934 = !DILocation(line: 55, column: 2, scope: !14633, inlinedAt: !15935)
!15935 = distinct !DILocation(line: 145, column: 10, scope: !14624, inlinedAt: !15933)
!15936 = !DILocation(line: 0, scope: !14633, inlinedAt: !15935)
!15937 = !DILocation(line: 148, column: 2, scope: !14641, inlinedAt: !15933)
!15938 = !DILocation(line: 148, column: 2, scope: !14642, inlinedAt: !15933)
!15939 = !DILocation(line: 148, column: 2, scope: !14645, inlinedAt: !15933)
!15940 = !DILocation(line: 160, column: 2, scope: !14624, inlinedAt: !15933)
!15941 = !DILocation(line: 789, column: 3, scope: !15751, inlinedAt: !15930)
!15942 = !DILocation(line: 0, scope: !14658, inlinedAt: !15943)
!15943 = distinct !DILocation(line: 788, column: 2, scope: !15752, inlinedAt: !15930)
!15944 = !DILocation(line: 194, column: 2, scope: !14666, inlinedAt: !15943)
!15945 = !DILocation(line: 194, column: 2, scope: !14667, inlinedAt: !15943)
!15946 = !DILocation(line: 194, column: 2, scope: !14670, inlinedAt: !15943)
!15947 = !DILocation(line: 0, scope: !14672, inlinedAt: !15948)
!15948 = distinct !DILocation(line: 215, column: 2, scope: !14658, inlinedAt: !15943)
!15949 = !DILocation(line: 95, column: 2, scope: !14672, inlinedAt: !15948)
!15950 = !DILocation(line: 896, column: 8, scope: !15925)
!15951 = !DILocation(line: 897, column: 1, scope: !15925)
!15952 = distinct !DISubprogram(name: "z_set_prio", scope: !2596, file: !2596, line: 902, type: !14985, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !15953)
!15953 = !{!15954, !15955, !15956, !15957, !15959}
!15954 = !DILocalVariable(name: "thread", arg: 1, scope: !15952, file: !2596, line: 902, type: !2488)
!15955 = !DILocalVariable(name: "prio", arg: 2, scope: !15952, file: !2596, line: 902, type: !107)
!15956 = !DILocalVariable(name: "need_sched", scope: !15952, file: !2596, line: 904, type: !145)
!15957 = !DILocalVariable(name: "__i", scope: !15958, file: !2596, line: 906, type: !14616)
!15958 = distinct !DILexicalBlock(scope: !15952, file: !2596, line: 906, column: 2)
!15959 = !DILocalVariable(name: "__key", scope: !15958, file: !2596, line: 906, type: !14616)
!15960 = !DILocation(line: 0, scope: !15952)
!15961 = !DILocation(line: 0, scope: !15958)
!15962 = !DILocation(line: 0, scope: !14624, inlinedAt: !15963)
!15963 = distinct !DILocation(line: 906, column: 2, scope: !15958)
!15964 = !DILocation(line: 55, column: 2, scope: !14633, inlinedAt: !15965)
!15965 = distinct !DILocation(line: 145, column: 10, scope: !14624, inlinedAt: !15963)
!15966 = !DILocation(line: 0, scope: !14633, inlinedAt: !15965)
!15967 = !DILocation(line: 148, column: 2, scope: !14641, inlinedAt: !15963)
!15968 = !DILocation(line: 148, column: 2, scope: !14642, inlinedAt: !15963)
!15969 = !DILocation(line: 148, column: 2, scope: !14645, inlinedAt: !15963)
!15970 = !DILocation(line: 160, column: 2, scope: !14624, inlinedAt: !15963)
!15971 = !DILocation(line: 907, column: 16, scope: !15972)
!15972 = distinct !DILexicalBlock(scope: !15973, file: !2596, line: 906, column: 26)
!15973 = distinct !DILexicalBlock(scope: !15958, file: !2596, line: 906, column: 2)
!15974 = !DILocation(line: 909, column: 7, scope: !15972)
!15975 = !DILocation(line: 0, scope: !14816, inlinedAt: !15976)
!15976 = distinct !DILocation(line: 912, column: 5, scope: !15977)
!15977 = distinct !DILexicalBlock(scope: !15978, file: !2596, line: 911, column: 63)
!15978 = distinct !DILexicalBlock(scope: !15979, file: !2596, line: 911, column: 8)
!15979 = distinct !DILexicalBlock(scope: !15980, file: !2596, line: 909, column: 19)
!15980 = distinct !DILexicalBlock(scope: !15972, file: !2596, line: 909, column: 7)
!15981 = !DILocation(line: 266, column: 28, scope: !14816, inlinedAt: !15976)
!15982 = !DILocation(line: 0, scope: !14824, inlinedAt: !15983)
!15983 = distinct !DILocation(line: 268, column: 3, scope: !14828, inlinedAt: !15976)
!15984 = !DILocation(line: 234, column: 2, scope: !14824, inlinedAt: !15983)
!15985 = !DILocation(line: 913, column: 23, scope: !15977)
!15986 = !DILocation(line: 0, scope: !14833, inlinedAt: !15987)
!15987 = distinct !DILocation(line: 914, column: 5, scope: !15977)
!15988 = !DILocation(line: 252, column: 28, scope: !14833, inlinedAt: !15987)
!15989 = !DILocation(line: 0, scope: !14840, inlinedAt: !15990)
!15990 = distinct !DILocation(line: 254, column: 3, scope: !14844, inlinedAt: !15987)
!15991 = !DILocation(line: 0, scope: !14847, inlinedAt: !15992)
!15992 = distinct !DILocation(line: 229, column: 2, scope: !14840, inlinedAt: !15990)
!15993 = !DILocation(line: 186, column: 2, scope: !14857, inlinedAt: !15992)
!15994 = !DILocation(line: 186, column: 2, scope: !14858, inlinedAt: !15992)
!15995 = !DILocation(line: 186, column: 2, scope: !14861, inlinedAt: !15992)
!15996 = !DILocation(line: 188, column: 2, scope: !14863, inlinedAt: !15992)
!15997 = !DILocation(line: 188, column: 2, scope: !14865, inlinedAt: !15992)
!15998 = !DILocation(line: 0, scope: !14863, inlinedAt: !15992)
!15999 = !DILocation(line: 189, column: 7, scope: !14868, inlinedAt: !15992)
!16000 = !DILocation(line: 189, column: 35, scope: !14868, inlinedAt: !15992)
!16001 = !DILocation(line: 189, column: 7, scope: !14869, inlinedAt: !15992)
!16002 = !DILocation(line: 190, column: 4, scope: !14873, inlinedAt: !15992)
!16003 = !DILocation(line: 192, column: 4, scope: !14873, inlinedAt: !15992)
!16004 = distinct !{!16004, !15996, !16005}
!16005 = !DILocation(line: 194, column: 2, scope: !14863, inlinedAt: !15992)
!16006 = !DILocation(line: 196, column: 2, scope: !14847, inlinedAt: !15992)
!16007 = !DILocation(line: 197, column: 1, scope: !14847, inlinedAt: !15992)
!16008 = !DILocation(line: 918, column: 4, scope: !15979)
!16009 = !DILocation(line: 919, column: 3, scope: !15979)
!16010 = !DILocation(line: 920, column: 22, scope: !16011)
!16011 = distinct !DILexicalBlock(scope: !15980, file: !2596, line: 919, column: 10)
!16012 = !DILocation(line: 0, scope: !14658, inlinedAt: !16013)
!16013 = distinct !DILocation(line: 906, column: 2, scope: !15973)
!16014 = !DILocation(line: 194, column: 2, scope: !14666, inlinedAt: !16013)
!16015 = !DILocation(line: 194, column: 2, scope: !14667, inlinedAt: !16013)
!16016 = !DILocation(line: 194, column: 2, scope: !14670, inlinedAt: !16013)
!16017 = !DILocation(line: 0, scope: !14672, inlinedAt: !16018)
!16018 = distinct !DILocation(line: 215, column: 2, scope: !14658, inlinedAt: !16013)
!16019 = !DILocation(line: 95, column: 2, scope: !14672, inlinedAt: !16018)
!16020 = !DILocation(line: 926, column: 2, scope: !15952)
!16021 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2596, file: !2596, line: 929, type: !16022, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !16024)
!16022 = !DISubroutineType(types: !16023)
!16023 = !{null, !2488, !107}
!16024 = !{!16025, !16026, !16027}
!16025 = !DILocalVariable(name: "thread", arg: 1, scope: !16021, file: !2596, line: 929, type: !2488)
!16026 = !DILocalVariable(name: "prio", arg: 2, scope: !16021, file: !2596, line: 929, type: !107)
!16027 = !DILocalVariable(name: "need_sched", scope: !16021, file: !2596, line: 931, type: !145)
!16028 = !DILocation(line: 0, scope: !16021)
!16029 = !DILocation(line: 931, column: 20, scope: !16021)
!16030 = !DILocation(line: 935, column: 17, scope: !16031)
!16031 = distinct !DILexicalBlock(scope: !16021, file: !2596, line: 935, column: 6)
!16032 = !DILocation(line: 935, column: 20, scope: !16031)
!16033 = !DILocation(line: 935, column: 35, scope: !16031)
!16034 = !DILocation(line: 935, column: 48, scope: !16031)
!16035 = !DILocation(line: 935, column: 6, scope: !16021)
!16036 = !DILocation(line: 936, column: 3, scope: !16037)
!16037 = distinct !DILexicalBlock(scope: !16031, file: !2596, line: 935, column: 55)
!16038 = !DILocation(line: 937, column: 2, scope: !16037)
!16039 = !DILocation(line: 938, column: 1, scope: !16021)
!16040 = distinct !DISubprogram(name: "k_sched_lock", scope: !2596, file: !2596, line: 987, type: !3227, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !16041)
!16041 = !{!16042, !16044}
!16042 = !DILocalVariable(name: "__i", scope: !16043, file: !2596, line: 989, type: !14616)
!16043 = distinct !DILexicalBlock(scope: !16040, file: !2596, line: 989, column: 2)
!16044 = !DILocalVariable(name: "__key", scope: !16043, file: !2596, line: 989, type: !14616)
!16045 = !DILocation(line: 0, scope: !16043)
!16046 = !DILocation(line: 0, scope: !14624, inlinedAt: !16047)
!16047 = distinct !DILocation(line: 989, column: 2, scope: !16043)
!16048 = !DILocation(line: 55, column: 2, scope: !14633, inlinedAt: !16049)
!16049 = distinct !DILocation(line: 145, column: 10, scope: !14624, inlinedAt: !16047)
!16050 = !DILocation(line: 0, scope: !14633, inlinedAt: !16049)
!16051 = !DILocation(line: 148, column: 2, scope: !14641, inlinedAt: !16047)
!16052 = !DILocation(line: 148, column: 2, scope: !14642, inlinedAt: !16047)
!16053 = !DILocation(line: 148, column: 2, scope: !14645, inlinedAt: !16047)
!16054 = !DILocation(line: 160, column: 2, scope: !14624, inlinedAt: !16047)
!16055 = !DILocation(line: 992, column: 3, scope: !16056)
!16056 = distinct !DILexicalBlock(scope: !16057, file: !2596, line: 989, column: 26)
!16057 = distinct !DILexicalBlock(scope: !16043, file: !2596, line: 989, column: 2)
!16058 = !DILocation(line: 0, scope: !14658, inlinedAt: !16059)
!16059 = distinct !DILocation(line: 989, column: 2, scope: !16057)
!16060 = !DILocation(line: 194, column: 2, scope: !14666, inlinedAt: !16059)
!16061 = !DILocation(line: 194, column: 2, scope: !14667, inlinedAt: !16059)
!16062 = !DILocation(line: 194, column: 2, scope: !14670, inlinedAt: !16059)
!16063 = !DILocation(line: 0, scope: !14672, inlinedAt: !16064)
!16064 = distinct !DILocation(line: 215, column: 2, scope: !14658, inlinedAt: !16059)
!16065 = !DILocation(line: 95, column: 2, scope: !14672, inlinedAt: !16064)
!16066 = !DILocation(line: 994, column: 1, scope: !16040)
!16067 = distinct !DISubprogram(name: "z_sched_lock", scope: !13784, file: !13784, line: 251, type: !3227, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !2296)
!16068 = !DILocation(line: 1031, column: 3, scope: !15351, inlinedAt: !16069)
!16069 = distinct !DILocation(line: 48, column: 10, scope: !15355, inlinedAt: !16070)
!16070 = distinct !DILocation(line: 253, column: 2, scope: !16071)
!16071 = distinct !DILexicalBlock(scope: !16072, file: !13784, line: 253, column: 2)
!16072 = distinct !DILexicalBlock(scope: !16067, file: !13784, line: 253, column: 2)
!16073 = !DILocation(line: 0, scope: !15351, inlinedAt: !16069)
!16074 = !DILocation(line: 48, column: 9, scope: !15355, inlinedAt: !16070)
!16075 = !DILocation(line: 253, column: 2, scope: !16072)
!16076 = !DILocation(line: 253, column: 2, scope: !16077)
!16077 = distinct !DILexicalBlock(scope: !16071, file: !13784, line: 253, column: 2)
!16078 = !DILocation(line: 254, column: 2, scope: !16079)
!16079 = distinct !DILexicalBlock(scope: !16080, file: !13784, line: 254, column: 2)
!16080 = distinct !DILexicalBlock(scope: !16067, file: !13784, line: 254, column: 2)
!16081 = !DILocation(line: 254, column: 2, scope: !16080)
!16082 = !DILocation(line: 254, column: 2, scope: !16083)
!16083 = distinct !DILexicalBlock(scope: !16079, file: !13784, line: 254, column: 2)
!16084 = !DILocation(line: 256, column: 2, scope: !16067)
!16085 = !DILocation(line: 258, column: 2, scope: !16086)
!16086 = distinct !DILexicalBlock(scope: !16067, file: !13784, line: 258, column: 2)
!16087 = !{i64 2155574434}
!16088 = !DILocation(line: 259, column: 1, scope: !16067)
!16089 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2596, file: !2596, line: 996, type: !3227, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !16090)
!16090 = !{!16091, !16093}
!16091 = !DILocalVariable(name: "__i", scope: !16092, file: !2596, line: 998, type: !14616)
!16092 = distinct !DILexicalBlock(scope: !16089, file: !2596, line: 998, column: 2)
!16093 = !DILocalVariable(name: "__key", scope: !16092, file: !2596, line: 998, type: !14616)
!16094 = !DILocation(line: 0, scope: !16092)
!16095 = !DILocation(line: 0, scope: !14624, inlinedAt: !16096)
!16096 = distinct !DILocation(line: 998, column: 2, scope: !16092)
!16097 = !DILocation(line: 55, column: 2, scope: !14633, inlinedAt: !16098)
!16098 = distinct !DILocation(line: 145, column: 10, scope: !14624, inlinedAt: !16096)
!16099 = !DILocation(line: 0, scope: !14633, inlinedAt: !16098)
!16100 = !DILocation(line: 148, column: 2, scope: !14641, inlinedAt: !16096)
!16101 = !DILocation(line: 148, column: 2, scope: !14642, inlinedAt: !16096)
!16102 = !DILocation(line: 148, column: 2, scope: !14645, inlinedAt: !16096)
!16103 = !DILocation(line: 160, column: 2, scope: !14624, inlinedAt: !16096)
!16104 = !DILocation(line: 999, column: 3, scope: !16105)
!16105 = distinct !DILexicalBlock(scope: !16106, file: !2596, line: 999, column: 3)
!16106 = distinct !DILexicalBlock(scope: !16107, file: !2596, line: 999, column: 3)
!16107 = distinct !DILexicalBlock(scope: !16108, file: !2596, line: 998, column: 26)
!16108 = distinct !DILexicalBlock(scope: !16092, file: !2596, line: 998, column: 2)
!16109 = !DILocation(line: 999, column: 3, scope: !16106)
!16110 = !DILocation(line: 999, column: 3, scope: !16111)
!16111 = distinct !DILexicalBlock(scope: !16105, file: !2596, line: 999, column: 3)
!16112 = !DILocation(line: 1031, column: 3, scope: !15351, inlinedAt: !16113)
!16113 = distinct !DILocation(line: 48, column: 10, scope: !15355, inlinedAt: !16114)
!16114 = distinct !DILocation(line: 1000, column: 3, scope: !16115)
!16115 = distinct !DILexicalBlock(scope: !16116, file: !2596, line: 1000, column: 3)
!16116 = distinct !DILexicalBlock(scope: !16107, file: !2596, line: 1000, column: 3)
!16117 = !DILocation(line: 0, scope: !15351, inlinedAt: !16113)
!16118 = !DILocation(line: 48, column: 9, scope: !15355, inlinedAt: !16114)
!16119 = !DILocation(line: 1000, column: 3, scope: !16116)
!16120 = !DILocation(line: 1000, column: 3, scope: !16121)
!16121 = distinct !DILexicalBlock(scope: !16115, file: !2596, line: 1000, column: 3)
!16122 = !DILocation(line: 1002, column: 5, scope: !16107)
!16123 = !DILocation(line: 1002, column: 20, scope: !16107)
!16124 = !DILocation(line: 1002, column: 3, scope: !16107)
!16125 = !DILocation(line: 1003, column: 3, scope: !16107)
!16126 = !DILocation(line: 0, scope: !14658, inlinedAt: !16127)
!16127 = distinct !DILocation(line: 998, column: 2, scope: !16108)
!16128 = !DILocation(line: 194, column: 2, scope: !14666, inlinedAt: !16127)
!16129 = !DILocation(line: 194, column: 2, scope: !14667, inlinedAt: !16127)
!16130 = !DILocation(line: 194, column: 2, scope: !14670, inlinedAt: !16127)
!16131 = !DILocation(line: 0, scope: !14672, inlinedAt: !16132)
!16132 = distinct !DILocation(line: 215, column: 2, scope: !14658, inlinedAt: !16127)
!16133 = !DILocation(line: 95, column: 2, scope: !14672, inlinedAt: !16132)
!16134 = !DILocation(line: 1011, column: 2, scope: !16089)
!16135 = !DILocation(line: 1012, column: 1, scope: !16089)
!16136 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2596, file: !2596, line: 1014, type: !14973, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !2296)
!16137 = !DILocation(line: 1028, column: 25, scope: !16136)
!16138 = !DILocation(line: 1028, column: 2, scope: !16136)
!16139 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2596, file: !2596, line: 1155, type: !16140, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !16142)
!16140 = !DISubroutineType(types: !16141)
!16141 = !{!145, !2517, !2517}
!16142 = !{!16143, !16144, !16145, !16146, !16147}
!16143 = !DILocalVariable(name: "a", arg: 1, scope: !16139, file: !2596, line: 1155, type: !2517)
!16144 = !DILocalVariable(name: "b", arg: 2, scope: !16139, file: !2596, line: 1155, type: !2517)
!16145 = !DILocalVariable(name: "thread_a", scope: !16139, file: !2596, line: 1157, type: !2488)
!16146 = !DILocalVariable(name: "thread_b", scope: !16139, file: !2596, line: 1157, type: !2488)
!16147 = !DILocalVariable(name: "cmp", scope: !16139, file: !2596, line: 1158, type: !906)
!16148 = !DILocation(line: 0, scope: !16139)
!16149 = !DILocation(line: 1160, column: 13, scope: !16139)
!16150 = !DILocation(line: 1161, column: 13, scope: !16139)
!16151 = !DILocation(line: 1163, column: 8, scope: !16139)
!16152 = !DILocation(line: 1165, column: 10, scope: !16153)
!16153 = distinct !DILexicalBlock(scope: !16139, file: !2596, line: 1165, column: 6)
!16154 = !DILocation(line: 1165, column: 6, scope: !16139)
!16155 = !DILocation(line: 1167, column: 17, scope: !16156)
!16156 = distinct !DILexicalBlock(scope: !16153, file: !2596, line: 1167, column: 13)
!16157 = !DILocation(line: 1167, column: 13, scope: !16153)
!16158 = !DILocation(line: 1170, column: 25, scope: !16159)
!16159 = distinct !DILexicalBlock(scope: !16156, file: !2596, line: 1169, column: 9)
!16160 = !DILocation(line: 1170, column: 52, scope: !16159)
!16161 = !DILocation(line: 1170, column: 35, scope: !16159)
!16162 = !DILocation(line: 1170, column: 3, scope: !16159)
!16163 = !DILocation(line: 0, scope: !16153)
!16164 = !DILocation(line: 1173, column: 1, scope: !16139)
!16165 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2596, file: !2596, line: 1175, type: !16166, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !16181)
!16166 = !DISubroutineType(types: !16167)
!16167 = !{null, !16168, !2488}
!16168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16169, size: 32)
!16169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !16170, line: 37, size: 128, elements: !16171)
!16170 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16171 = !{!16172, !16180}
!16172 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !16169, file: !16170, line: 38, baseType: !16173, size: 96)
!16173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !335, line: 83, size: 96, elements: !16174)
!16174 = !{!16175, !16176, !16179}
!16175 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !16173, file: !335, line: 84, baseType: !2517, size: 32)
!16176 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !16173, file: !335, line: 85, baseType: !16177, size: 32, offset: 32)
!16177 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !335, line: 81, baseType: !16178)
!16178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16140, size: 32)
!16179 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !16173, file: !335, line: 86, baseType: !107, size: 32, offset: 64)
!16180 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !16169, file: !16170, line: 39, baseType: !107, size: 32, offset: 96)
!16181 = !{!16182, !16183, !16184, !16185, !16194}
!16182 = !DILocalVariable(name: "pq", arg: 1, scope: !16165, file: !2596, line: 1175, type: !16168)
!16183 = !DILocalVariable(name: "thread", arg: 2, scope: !16165, file: !2596, line: 1175, type: !2488)
!16184 = !DILocalVariable(name: "t", scope: !16165, file: !2596, line: 1177, type: !2488)
!16185 = !DILocalVariable(name: "__f", scope: !16186, file: !2596, line: 1190, type: !16189)
!16186 = distinct !DILexicalBlock(scope: !16187, file: !2596, line: 1190, column: 3)
!16187 = distinct !DILexicalBlock(scope: !16188, file: !2596, line: 1189, column: 27)
!16188 = distinct !DILexicalBlock(scope: !16165, file: !2596, line: 1189, column: 6)
!16189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !335, line: 155, size: 96, elements: !16190)
!16190 = !{!16191, !16192, !16193}
!16191 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !16189, file: !335, line: 156, baseType: !2591, size: 32)
!16192 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !16189, file: !335, line: 157, baseType: !194, size: 32, offset: 32)
!16193 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !16189, file: !335, line: 158, baseType: !906, size: 32, offset: 64)
!16194 = !DILocalVariable(name: "n", scope: !16195, file: !2596, line: 1190, type: !2517)
!16195 = distinct !DILexicalBlock(scope: !16196, file: !2596, line: 1190, column: 3)
!16196 = distinct !DILexicalBlock(scope: !16186, file: !2596, line: 1190, column: 3)
!16197 = !DILocation(line: 0, scope: !16165)
!16198 = !DILocation(line: 1179, column: 2, scope: !16199)
!16199 = distinct !DILexicalBlock(scope: !16200, file: !2596, line: 1179, column: 2)
!16200 = distinct !DILexicalBlock(scope: !16165, file: !2596, line: 1179, column: 2)
!16201 = !DILocation(line: 1179, column: 2, scope: !16200)
!16202 = !DILocation(line: 1179, column: 2, scope: !16203)
!16203 = distinct !DILexicalBlock(scope: !16199, file: !2596, line: 1179, column: 2)
!16204 = !DILocation(line: 1181, column: 31, scope: !16165)
!16205 = !DILocation(line: 1181, column: 45, scope: !16165)
!16206 = !DILocation(line: 1181, column: 15, scope: !16165)
!16207 = !DILocation(line: 1181, column: 25, scope: !16165)
!16208 = !DILocation(line: 1189, column: 11, scope: !16188)
!16209 = !DILocation(line: 1189, column: 7, scope: !16188)
!16210 = !DILocation(line: 1189, column: 6, scope: !16165)
!16211 = !DILocation(line: 1190, column: 3, scope: !16186)
!16212 = !DILocation(line: 1190, column: 3, scope: !16195)
!16213 = !DILocation(line: 0, scope: !16195)
!16214 = !DILocation(line: 1190, column: 3, scope: !16196)
!16215 = !DILocation(line: 1193, column: 2, scope: !16187)
!16216 = !DILocation(line: 1191, column: 42, scope: !16217)
!16217 = distinct !DILexicalBlock(scope: !16196, file: !2596, line: 1190, column: 54)
!16218 = !DILocation(line: 1191, column: 12, scope: !16217)
!16219 = !DILocation(line: 1191, column: 22, scope: !16217)
!16220 = distinct !{!16220, !16211, !16221}
!16221 = !DILocation(line: 1192, column: 3, scope: !16186)
!16222 = !DILocation(line: 1195, column: 17, scope: !16165)
!16223 = !DILocation(line: 1195, column: 37, scope: !16165)
!16224 = !DILocation(line: 1195, column: 2, scope: !16165)
!16225 = !DILocation(line: 1196, column: 1, scope: !16165)
!16226 = !DISubprogram(name: "z_rb_foreach_next", scope: !335, file: !335, line: 176, type: !16227, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2296)
!16227 = !DISubroutineType(types: !16228)
!16228 = !{!2517, !16229, !16230}
!16229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16173, size: 32)
!16230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16189, size: 32)
!16231 = !DISubprogram(name: "rb_insert", scope: !335, file: !335, line: 105, type: !16232, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2296)
!16232 = !DISubroutineType(types: !16233)
!16233 = !{null, !16229, !2517}
!16234 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2596, file: !2596, line: 1198, type: !16166, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !16235)
!16235 = !{!16236, !16237}
!16236 = !DILocalVariable(name: "pq", arg: 1, scope: !16234, file: !2596, line: 1198, type: !16168)
!16237 = !DILocalVariable(name: "thread", arg: 2, scope: !16234, file: !2596, line: 1198, type: !2488)
!16238 = !DILocation(line: 0, scope: !16234)
!16239 = !DILocation(line: 1200, column: 2, scope: !16240)
!16240 = distinct !DILexicalBlock(scope: !16241, file: !2596, line: 1200, column: 2)
!16241 = distinct !DILexicalBlock(scope: !16234, file: !2596, line: 1200, column: 2)
!16242 = !DILocation(line: 1200, column: 2, scope: !16241)
!16243 = !DILocation(line: 1200, column: 2, scope: !16244)
!16244 = distinct !DILexicalBlock(scope: !16240, file: !2596, line: 1200, column: 2)
!16245 = !DILocation(line: 1202, column: 17, scope: !16234)
!16246 = !DILocation(line: 1202, column: 37, scope: !16234)
!16247 = !DILocation(line: 1202, column: 2, scope: !16234)
!16248 = !DILocation(line: 1204, column: 16, scope: !16249)
!16249 = distinct !DILexicalBlock(scope: !16234, file: !2596, line: 1204, column: 6)
!16250 = !DILocation(line: 1204, column: 7, scope: !16249)
!16251 = !DILocation(line: 1204, column: 6, scope: !16234)
!16252 = !DILocation(line: 1205, column: 7, scope: !16253)
!16253 = distinct !DILexicalBlock(scope: !16249, file: !2596, line: 1204, column: 22)
!16254 = !DILocation(line: 1205, column: 22, scope: !16253)
!16255 = !DILocation(line: 1206, column: 2, scope: !16253)
!16256 = !DILocation(line: 1207, column: 1, scope: !16234)
!16257 = !DISubprogram(name: "rb_remove", scope: !335, file: !335, line: 110, type: !16232, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2296)
!16258 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2596, file: !2596, line: 1209, type: !16259, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !16261)
!16259 = !DISubroutineType(types: !16260)
!16260 = !{!2488, !16168}
!16261 = !{!16262, !16263, !16264}
!16262 = !DILocalVariable(name: "pq", arg: 1, scope: !16258, file: !2596, line: 1209, type: !16168)
!16263 = !DILocalVariable(name: "thread", scope: !16258, file: !2596, line: 1211, type: !2488)
!16264 = !DILocalVariable(name: "n", scope: !16258, file: !2596, line: 1212, type: !2517)
!16265 = !DILocation(line: 0, scope: !16258)
!16266 = !DILocation(line: 1212, column: 37, scope: !16258)
!16267 = !DILocation(line: 1212, column: 21, scope: !16258)
!16268 = !DILocation(line: 1217, column: 2, scope: !16258)
!16269 = distinct !DISubprogram(name: "rb_get_min", scope: !335, file: !335, line: 115, type: !16270, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !16272)
!16270 = !DISubroutineType(types: !16271)
!16271 = !{!2517, !16229}
!16272 = !{!16273}
!16273 = !DILocalVariable(name: "tree", arg: 1, scope: !16269, file: !335, line: 115, type: !16229)
!16274 = !DILocation(line: 0, scope: !16269)
!16275 = !DILocation(line: 117, column: 9, scope: !16269)
!16276 = !DILocation(line: 117, column: 2, scope: !16269)
!16277 = !DISubprogram(name: "z_rb_get_minmax", scope: !335, file: !335, line: 100, type: !16278, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2296)
!16278 = !DISubroutineType(types: !16279)
!16279 = !{!2517, !16229, !195}
!16280 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2596, file: !2596, line: 1246, type: !16281, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !16289)
!16281 = !DISubroutineType(types: !16282)
!16282 = !{!2488, !16283}
!16283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16284, size: 32)
!16284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !16170, line: 53, size: 2080, elements: !16285)
!16285 = !{!16286, !16288}
!16286 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !16284, file: !16170, line: 54, baseType: !16287, size: 2048)
!16287 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2524, size: 2048, elements: !394)
!16288 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !16284, file: !16170, line: 55, baseType: !32, size: 32, offset: 2048)
!16289 = !{!16290, !16291, !16292, !16293}
!16290 = !DILocalVariable(name: "pq", arg: 1, scope: !16280, file: !2596, line: 1246, type: !16283)
!16291 = !DILocalVariable(name: "thread", scope: !16280, file: !2596, line: 1252, type: !2488)
!16292 = !DILocalVariable(name: "l", scope: !16280, file: !2596, line: 1253, type: !14850)
!16293 = !DILocalVariable(name: "n", scope: !16280, file: !2596, line: 1254, type: !2592)
!16294 = !DILocation(line: 0, scope: !16280)
!16295 = !DILocation(line: 1248, column: 11, scope: !16296)
!16296 = distinct !DILexicalBlock(scope: !16280, file: !2596, line: 1248, column: 6)
!16297 = !DILocation(line: 1248, column: 7, scope: !16296)
!16298 = !DILocation(line: 1248, column: 6, scope: !16280)
!16299 = !DILocation(line: 1253, column: 31, scope: !16280)
!16300 = !DILocation(line: 1253, column: 20, scope: !16280)
!16301 = !DILocation(line: 1254, column: 19, scope: !16280)
!16302 = !DILocation(line: 1260, column: 1, scope: !16280)
!16303 = distinct !DISubprogram(name: "z_unpend_all", scope: !2596, file: !2596, line: 1262, type: !16304, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !16306)
!16304 = !DISubroutineType(types: !16305)
!16305 = !{!107, !2519}
!16306 = !{!16307, !16308, !16309}
!16307 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16303, file: !2596, line: 1262, type: !2519)
!16308 = !DILocalVariable(name: "need_sched", scope: !16303, file: !2596, line: 1264, type: !107)
!16309 = !DILocalVariable(name: "thread", scope: !16303, file: !2596, line: 1265, type: !2488)
!16310 = !DILocation(line: 0, scope: !16303)
!16311 = !DILocation(line: 1267, column: 19, scope: !16303)
!16312 = !DILocation(line: 1267, column: 41, scope: !16303)
!16313 = !DILocation(line: 1267, column: 2, scope: !16303)
!16314 = !DILocation(line: 1268, column: 3, scope: !16315)
!16315 = distinct !DILexicalBlock(scope: !16303, file: !2596, line: 1267, column: 50)
!16316 = !DILocation(line: 1269, column: 3, scope: !16315)
!16317 = distinct !{!16317, !16313, !16318}
!16318 = !DILocation(line: 1271, column: 2, scope: !16303)
!16319 = !DILocation(line: 1273, column: 2, scope: !16303)
!16320 = distinct !DISubprogram(name: "z_waitq_head", scope: !14145, file: !14145, line: 52, type: !15851, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !16321)
!16321 = !{!16322}
!16322 = !DILocalVariable(name: "w", arg: 1, scope: !16320, file: !14145, line: 52, type: !2519)
!16323 = !DILocation(line: 0, scope: !16320)
!16324 = !DILocation(line: 54, column: 52, scope: !16320)
!16325 = !DILocation(line: 54, column: 28, scope: !16320)
!16326 = !DILocation(line: 54, column: 9, scope: !16320)
!16327 = !DILocation(line: 54, column: 2, scope: !16320)
!16328 = distinct !DISubprogram(name: "init_ready_q", scope: !2596, file: !2596, line: 1276, type: !16329, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !16336)
!16329 = !DISubroutineType(types: !16330)
!16330 = !{null, !16331}
!16331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16332, size: 32)
!16332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !345, line: 83, size: 96, elements: !16333)
!16333 = !{!16334, !16335}
!16334 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !16332, file: !345, line: 86, baseType: !2488, size: 32)
!16335 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !16332, file: !345, line: 90, baseType: !2524, size: 64, offset: 32)
!16336 = !{!16337}
!16337 = !DILocalVariable(name: "rq", arg: 1, scope: !16328, file: !2596, line: 1276, type: !16331)
!16338 = !DILocation(line: 0, scope: !16328)
!16339 = !DILocation(line: 1289, column: 22, scope: !16328)
!16340 = !DILocation(line: 1289, column: 2, scope: !16328)
!16341 = !DILocation(line: 1291, column: 1, scope: !16328)
!16342 = distinct !DISubprogram(name: "sys_dlist_init", scope: !319, file: !319, line: 197, type: !16343, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !16345)
!16343 = !DISubroutineType(types: !16344)
!16344 = !{null, !14850}
!16345 = !{!16346}
!16346 = !DILocalVariable(name: "list", arg: 1, scope: !16342, file: !319, line: 197, type: !14850)
!16347 = !DILocation(line: 0, scope: !16342)
!16348 = !DILocation(line: 199, column: 8, scope: !16342)
!16349 = !DILocation(line: 199, column: 13, scope: !16342)
!16350 = !DILocation(line: 200, column: 8, scope: !16342)
!16351 = !DILocation(line: 200, column: 13, scope: !16342)
!16352 = !DILocation(line: 201, column: 1, scope: !16342)
!16353 = distinct !DISubprogram(name: "z_sched_init", scope: !2596, file: !2596, line: 1293, type: !3227, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !2296)
!16354 = !DILocation(line: 1302, column: 2, scope: !16353)
!16355 = !DILocation(line: 1306, column: 2, scope: !16353)
!16356 = !DILocation(line: 1309, column: 1, scope: !16353)
!16357 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2596, file: !2596, line: 1311, type: !16358, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !16361)
!16358 = !DISubroutineType(types: !16359)
!16359 = !{!107, !16360}
!16360 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !309, line: 347, baseType: !2488)
!16361 = !{!16362}
!16362 = !DILocalVariable(name: "thread", arg: 1, scope: !16357, file: !2596, line: 1311, type: !16360)
!16363 = !DILocation(line: 0, scope: !16357)
!16364 = !DILocation(line: 1313, column: 22, scope: !16357)
!16365 = !DILocation(line: 1313, column: 9, scope: !16357)
!16366 = !DILocation(line: 1313, column: 2, scope: !16357)
!16367 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2596, file: !2596, line: 1325, type: !16368, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !16370)
!16368 = !DISubroutineType(types: !16369)
!16369 = !{null, !16360, !107}
!16370 = !{!16371, !16372, !16373}
!16371 = !DILocalVariable(name: "thread", arg: 1, scope: !16367, file: !2596, line: 1325, type: !16360)
!16372 = !DILocalVariable(name: "prio", arg: 2, scope: !16367, file: !2596, line: 1325, type: !107)
!16373 = !DILocalVariable(name: "th", scope: !16367, file: !2596, line: 1334, type: !2488)
!16374 = !DILocation(line: 0, scope: !16367)
!16375 = !DILocation(line: 1331, column: 2, scope: !16376)
!16376 = distinct !DILexicalBlock(scope: !16377, file: !2596, line: 1331, column: 2)
!16377 = distinct !DILexicalBlock(scope: !16378, file: !2596, line: 1331, column: 2)
!16378 = distinct !DILexicalBlock(scope: !16367, file: !2596, line: 1331, column: 2)
!16379 = !DILocation(line: 1331, column: 2, scope: !16380)
!16380 = distinct !DILexicalBlock(scope: !16376, file: !2596, line: 1331, column: 2)
!16381 = !DILocation(line: 1031, column: 3, scope: !15351, inlinedAt: !16382)
!16382 = distinct !DILocation(line: 48, column: 10, scope: !15355, inlinedAt: !16383)
!16383 = distinct !DILocation(line: 1332, column: 2, scope: !16384)
!16384 = distinct !DILexicalBlock(scope: !16385, file: !2596, line: 1332, column: 2)
!16385 = distinct !DILexicalBlock(scope: !16367, file: !2596, line: 1332, column: 2)
!16386 = !DILocation(line: 0, scope: !15351, inlinedAt: !16382)
!16387 = !DILocation(line: 48, column: 9, scope: !15355, inlinedAt: !16383)
!16388 = !DILocation(line: 1332, column: 2, scope: !16385)
!16389 = !DILocation(line: 1332, column: 2, scope: !16390)
!16390 = distinct !DILexicalBlock(scope: !16384, file: !2596, line: 1332, column: 2)
!16391 = !DILocation(line: 1336, column: 2, scope: !16367)
!16392 = !DILocation(line: 1337, column: 1, scope: !16367)
!16393 = distinct !DISubprogram(name: "k_can_yield", scope: !2596, file: !2596, line: 1384, type: !7447, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !2296)
!16394 = !DILocation(line: 1386, column: 11, scope: !16393)
!16395 = !DILocation(line: 1386, column: 29, scope: !16393)
!16396 = !DILocation(line: 1386, column: 32, scope: !16393)
!16397 = !DILocation(line: 1386, column: 46, scope: !16393)
!16398 = !DILocation(line: 1387, column: 28, scope: !16393)
!16399 = !DILocation(line: 1387, column: 4, scope: !16393)
!16400 = !DILocation(line: 1386, column: 2, scope: !16393)
!16401 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !406, file: !406, line: 989, type: !7447, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !2296)
!16402 = !DILocation(line: 993, column: 10, scope: !16401)
!16403 = !DILocation(line: 993, column: 2, scope: !16401)
!16404 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2596, file: !2596, line: 1390, type: !3227, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !16405)
!16405 = !{!16406}
!16406 = !DILocalVariable(name: "key", scope: !16404, file: !2596, line: 1396, type: !14616)
!16407 = !DILocation(line: 1031, column: 3, scope: !15351, inlinedAt: !16408)
!16408 = distinct !DILocation(line: 48, column: 10, scope: !15355, inlinedAt: !16409)
!16409 = distinct !DILocation(line: 1392, column: 2, scope: !16410)
!16410 = distinct !DILexicalBlock(scope: !16411, file: !2596, line: 1392, column: 2)
!16411 = distinct !DILexicalBlock(scope: !16404, file: !2596, line: 1392, column: 2)
!16412 = !DILocation(line: 0, scope: !15351, inlinedAt: !16408)
!16413 = !DILocation(line: 48, column: 9, scope: !15355, inlinedAt: !16409)
!16414 = !DILocation(line: 1392, column: 2, scope: !16411)
!16415 = !DILocation(line: 1392, column: 2, scope: !16416)
!16416 = distinct !DILexicalBlock(scope: !16410, file: !2596, line: 1392, column: 2)
!16417 = !DILocation(line: 0, scope: !14624, inlinedAt: !16418)
!16418 = distinct !DILocation(line: 1396, column: 25, scope: !16404)
!16419 = !DILocation(line: 55, column: 2, scope: !14633, inlinedAt: !16420)
!16420 = distinct !DILocation(line: 145, column: 10, scope: !14624, inlinedAt: !16418)
!16421 = !DILocation(line: 0, scope: !14633, inlinedAt: !16420)
!16422 = !DILocation(line: 148, column: 2, scope: !14641, inlinedAt: !16418)
!16423 = !DILocation(line: 148, column: 2, scope: !14642, inlinedAt: !16418)
!16424 = !DILocation(line: 148, column: 2, scope: !14645, inlinedAt: !16418)
!16425 = !DILocation(line: 160, column: 2, scope: !14624, inlinedAt: !16418)
!16426 = !DILocation(line: 0, scope: !16404)
!16427 = !DILocation(line: 1400, column: 18, scope: !16428)
!16428 = distinct !DILexicalBlock(scope: !16429, file: !2596, line: 1399, column: 36)
!16429 = distinct !DILexicalBlock(scope: !16404, file: !2596, line: 1398, column: 6)
!16430 = !DILocation(line: 0, scope: !14816, inlinedAt: !16431)
!16431 = distinct !DILocation(line: 1400, column: 3, scope: !16428)
!16432 = !DILocation(line: 266, column: 15, scope: !14816, inlinedAt: !16431)
!16433 = !DILocation(line: 266, column: 28, scope: !14816, inlinedAt: !16431)
!16434 = !DILocation(line: 0, scope: !14824, inlinedAt: !16435)
!16435 = distinct !DILocation(line: 268, column: 3, scope: !14828, inlinedAt: !16431)
!16436 = !DILocation(line: 234, column: 2, scope: !14824, inlinedAt: !16435)
!16437 = !DILocation(line: 1402, column: 15, scope: !16404)
!16438 = !DILocation(line: 0, scope: !14833, inlinedAt: !16439)
!16439 = distinct !DILocation(line: 1402, column: 2, scope: !16404)
!16440 = !DILocation(line: 252, column: 15, scope: !14833, inlinedAt: !16439)
!16441 = !DILocation(line: 252, column: 28, scope: !14833, inlinedAt: !16439)
!16442 = !DILocation(line: 0, scope: !14840, inlinedAt: !16443)
!16443 = distinct !DILocation(line: 254, column: 3, scope: !14844, inlinedAt: !16439)
!16444 = !DILocation(line: 0, scope: !14847, inlinedAt: !16445)
!16445 = distinct !DILocation(line: 229, column: 2, scope: !14840, inlinedAt: !16443)
!16446 = !DILocation(line: 186, column: 2, scope: !14857, inlinedAt: !16445)
!16447 = !DILocation(line: 186, column: 2, scope: !14858, inlinedAt: !16445)
!16448 = !DILocation(line: 186, column: 2, scope: !14861, inlinedAt: !16445)
!16449 = !DILocation(line: 188, column: 2, scope: !14863, inlinedAt: !16445)
!16450 = !DILocation(line: 188, column: 2, scope: !14865, inlinedAt: !16445)
!16451 = !DILocation(line: 0, scope: !14863, inlinedAt: !16445)
!16452 = !DILocation(line: 189, column: 7, scope: !14868, inlinedAt: !16445)
!16453 = !DILocation(line: 189, column: 35, scope: !14868, inlinedAt: !16445)
!16454 = !DILocation(line: 189, column: 7, scope: !14869, inlinedAt: !16445)
!16455 = !DILocation(line: 191, column: 21, scope: !14873, inlinedAt: !16445)
!16456 = !DILocation(line: 190, column: 4, scope: !14873, inlinedAt: !16445)
!16457 = !DILocation(line: 192, column: 4, scope: !14873, inlinedAt: !16445)
!16458 = distinct !{!16458, !16449, !16459}
!16459 = !DILocation(line: 194, column: 2, scope: !14863, inlinedAt: !16445)
!16460 = !DILocation(line: 196, column: 37, scope: !14847, inlinedAt: !16445)
!16461 = !DILocation(line: 196, column: 2, scope: !14847, inlinedAt: !16445)
!16462 = !DILocation(line: 197, column: 1, scope: !14847, inlinedAt: !16445)
!16463 = !DILocation(line: 1403, column: 2, scope: !16404)
!16464 = !DILocation(line: 0, scope: !15302, inlinedAt: !16465)
!16465 = distinct !DILocation(line: 1404, column: 2, scope: !16404)
!16466 = !DILocation(line: 0, scope: !15311, inlinedAt: !16467)
!16467 = distinct !DILocation(line: 195, column: 2, scope: !15302, inlinedAt: !16465)
!16468 = !DILocation(line: 225, column: 2, scope: !15318, inlinedAt: !16467)
!16469 = !DILocation(line: 225, column: 2, scope: !15319, inlinedAt: !16467)
!16470 = !DILocation(line: 225, column: 2, scope: !15322, inlinedAt: !16467)
!16471 = !DILocation(line: 196, column: 9, scope: !15302, inlinedAt: !16465)
!16472 = !DILocation(line: 1405, column: 1, scope: !16404)
!16473 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2596, file: !2596, line: 1459, type: !16474, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !16476)
!16474 = !DISubroutineType(types: !16475)
!16475 = !{!906, !15512}
!16476 = !{!16477, !16478, !16479}
!16477 = !DILocalVariable(name: "timeout", arg: 1, scope: !16473, file: !2596, line: 1459, type: !15512)
!16478 = !DILocalVariable(name: "ticks", scope: !16473, file: !2596, line: 1461, type: !564)
!16479 = !DILocalVariable(name: "ret", scope: !16473, file: !2596, line: 1480, type: !906)
!16480 = !DILocation(line: 0, scope: !16473)
!16481 = !DILocation(line: 1031, column: 3, scope: !15351, inlinedAt: !16482)
!16482 = distinct !DILocation(line: 48, column: 10, scope: !15355, inlinedAt: !16483)
!16483 = distinct !DILocation(line: 1463, column: 2, scope: !16484)
!16484 = distinct !DILexicalBlock(scope: !16485, file: !2596, line: 1463, column: 2)
!16485 = distinct !DILexicalBlock(scope: !16473, file: !2596, line: 1463, column: 2)
!16486 = !DILocation(line: 0, scope: !15351, inlinedAt: !16482)
!16487 = !DILocation(line: 48, column: 9, scope: !15355, inlinedAt: !16483)
!16488 = !DILocation(line: 1463, column: 2, scope: !16485)
!16489 = !DILocation(line: 1463, column: 2, scope: !16490)
!16490 = distinct !DILexicalBlock(scope: !16484, file: !2596, line: 1463, column: 2)
!16491 = !DILocation(line: 1468, column: 6, scope: !16492)
!16492 = distinct !DILexicalBlock(scope: !16473, file: !2596, line: 1468, column: 6)
!16493 = !DILocation(line: 1468, column: 6, scope: !16473)
!16494 = !DILocation(line: 1469, column: 20, scope: !16495)
!16495 = distinct !DILexicalBlock(scope: !16492, file: !2596, line: 1468, column: 40)
!16496 = !DILocation(line: 1469, column: 3, scope: !16495)
!16497 = !DILocation(line: 1473, column: 3, scope: !16495)
!16498 = !DILocation(line: 1478, column: 10, scope: !16473)
!16499 = !DILocation(line: 1480, column: 16, scope: !16473)
!16500 = !DILocation(line: 1485, column: 1, scope: !16473)
!16501 = distinct !DISubprogram(name: "k_thread_suspend", scope: !4558, file: !4558, line: 310, type: !16502, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !16504)
!16502 = !DISubroutineType(types: !16503)
!16503 = !{null, !16360}
!16504 = !{!16505}
!16505 = !DILocalVariable(name: "thread", arg: 1, scope: !16501, file: !4558, line: 310, type: !16360)
!16506 = !DILocation(line: 0, scope: !16501)
!16507 = !DILocation(line: 319, column: 2, scope: !16508)
!16508 = distinct !DILexicalBlock(scope: !16501, file: !4558, line: 319, column: 2)
!16509 = !{i64 2155490592}
!16510 = !DILocation(line: 320, column: 2, scope: !16501)
!16511 = !DILocation(line: 321, column: 1, scope: !16501)
!16512 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2596, file: !2596, line: 1415, type: !16513, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !16515)
!16513 = !DISubroutineType(types: !16514)
!16514 = !{!906, !564}
!16515 = !{!16516, !16517, !16518, !16519}
!16516 = !DILocalVariable(name: "ticks", arg: 1, scope: !16512, file: !2596, line: 1415, type: !564)
!16517 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !16512, file: !2596, line: 1418, type: !152)
!16518 = !DILocalVariable(name: "timeout", scope: !16512, file: !2596, line: 1430, type: !15512)
!16519 = !DILocalVariable(name: "key", scope: !16512, file: !2596, line: 1437, type: !14616)
!16520 = !DILocation(line: 0, scope: !16512)
!16521 = !DILocation(line: 1031, column: 3, scope: !15351, inlinedAt: !16522)
!16522 = distinct !DILocation(line: 48, column: 10, scope: !15355, inlinedAt: !16523)
!16523 = distinct !DILocation(line: 1420, column: 2, scope: !16524)
!16524 = distinct !DILexicalBlock(scope: !16525, file: !2596, line: 1420, column: 2)
!16525 = distinct !DILexicalBlock(scope: !16512, file: !2596, line: 1420, column: 2)
!16526 = !DILocation(line: 0, scope: !15351, inlinedAt: !16522)
!16527 = !DILocation(line: 48, column: 9, scope: !15355, inlinedAt: !16523)
!16528 = !DILocation(line: 1420, column: 2, scope: !16525)
!16529 = !DILocation(line: 1420, column: 2, scope: !16530)
!16530 = distinct !DILexicalBlock(scope: !16524, file: !2596, line: 1420, column: 2)
!16531 = !DILocation(line: 1425, column: 12, scope: !16532)
!16532 = distinct !DILexicalBlock(scope: !16512, file: !2596, line: 1425, column: 6)
!16533 = !DILocation(line: 1425, column: 6, scope: !16512)
!16534 = !DILocation(line: 1426, column: 3, scope: !16535)
!16535 = distinct !DILexicalBlock(scope: !16532, file: !2596, line: 1425, column: 18)
!16536 = !DILocation(line: 1427, column: 3, scope: !16535)
!16537 = !DILocation(line: 1431, column: 24, scope: !16538)
!16538 = distinct !DILexicalBlock(scope: !16512, file: !2596, line: 1431, column: 6)
!16539 = !DILocation(line: 1431, column: 6, scope: !16512)
!16540 = !DILocation(line: 1432, column: 35, scope: !16541)
!16541 = distinct !DILexicalBlock(scope: !16538, file: !2596, line: 1431, column: 30)
!16542 = !DILocation(line: 1432, column: 27, scope: !16541)
!16543 = !DILocation(line: 1433, column: 2, scope: !16541)
!16544 = !DILocation(line: 1434, column: 27, scope: !16545)
!16545 = distinct !DILexicalBlock(scope: !16538, file: !2596, line: 1433, column: 9)
!16546 = !DILocation(line: 0, scope: !16538)
!16547 = !DILocation(line: 0, scope: !14624, inlinedAt: !16548)
!16548 = distinct !DILocation(line: 1437, column: 25, scope: !16512)
!16549 = !DILocation(line: 55, column: 2, scope: !14633, inlinedAt: !16550)
!16550 = distinct !DILocation(line: 145, column: 10, scope: !14624, inlinedAt: !16548)
!16551 = !DILocation(line: 0, scope: !14633, inlinedAt: !16550)
!16552 = !DILocation(line: 148, column: 2, scope: !14641, inlinedAt: !16548)
!16553 = !DILocation(line: 148, column: 2, scope: !14642, inlinedAt: !16548)
!16554 = !DILocation(line: 148, column: 2, scope: !14645, inlinedAt: !16548)
!16555 = !DILocation(line: 160, column: 2, scope: !14624, inlinedAt: !16548)
!16556 = !DILocation(line: 1440, column: 20, scope: !16512)
!16557 = !DILocation(line: 1440, column: 18, scope: !16512)
!16558 = !DILocation(line: 1442, column: 2, scope: !16512)
!16559 = !DILocation(line: 1443, column: 23, scope: !16512)
!16560 = !DILocation(line: 1443, column: 2, scope: !16512)
!16561 = !DILocation(line: 1444, column: 29, scope: !16512)
!16562 = !DILocation(line: 1444, column: 2, scope: !16512)
!16563 = !DILocation(line: 0, scope: !15302, inlinedAt: !16564)
!16564 = distinct !DILocation(line: 1446, column: 8, scope: !16512)
!16565 = !DILocation(line: 0, scope: !15311, inlinedAt: !16566)
!16566 = distinct !DILocation(line: 195, column: 2, scope: !15302, inlinedAt: !16564)
!16567 = !DILocation(line: 225, column: 2, scope: !15318, inlinedAt: !16566)
!16568 = !DILocation(line: 225, column: 2, scope: !15319, inlinedAt: !16566)
!16569 = !DILocation(line: 225, column: 2, scope: !15322, inlinedAt: !16566)
!16570 = !DILocation(line: 196, column: 9, scope: !15302, inlinedAt: !16564)
!16571 = !DILocation(line: 1448, column: 2, scope: !16572)
!16572 = distinct !DILexicalBlock(scope: !16573, file: !2596, line: 1448, column: 2)
!16573 = distinct !DILexicalBlock(scope: !16512, file: !2596, line: 1448, column: 2)
!16574 = !DILocation(line: 1448, column: 2, scope: !16573)
!16575 = !DILocation(line: 1448, column: 2, scope: !16576)
!16576 = distinct !DILexicalBlock(scope: !16572, file: !2596, line: 1448, column: 2)
!16577 = !DILocation(line: 1450, column: 10, scope: !16512)
!16578 = !DILocation(line: 1450, column: 45, scope: !16512)
!16579 = !DILocation(line: 1450, column: 43, scope: !16512)
!16580 = !DILocation(line: 1451, column: 6, scope: !16512)
!16581 = !DILocation(line: 1457, column: 1, scope: !16512)
!16582 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !8862, file: !8862, line: 1103, type: !14403, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !16583)
!16583 = !{!16584}
!16584 = !DILocalVariable(name: "t", arg: 1, scope: !16582, file: !8862, line: 1103, type: !566)
!16585 = !DILocation(line: 0, scope: !16582)
!16586 = !DILocation(line: 0, scope: !14684, inlinedAt: !16587)
!16587 = distinct !DILocation(line: 1106, column: 9, scope: !16582)
!16588 = !DILocation(line: 139, column: 13, scope: !16589, inlinedAt: !16587)
!16589 = distinct !DILexicalBlock(scope: !16590, file: !8862, line: 138, column: 10)
!16590 = distinct !DILexicalBlock(scope: !16591, file: !8862, line: 136, column: 7)
!16591 = distinct !DILexicalBlock(scope: !14705, file: !8862, line: 134, column: 17)
!16592 = !DILocation(line: 1106, column: 2, scope: !16582)
!16593 = distinct !DISubprogram(name: "k_yield", scope: !4558, file: !4558, line: 140, type: !3227, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !2296)
!16594 = !DILocation(line: 148, column: 2, scope: !16595)
!16595 = distinct !DILexicalBlock(scope: !16593, file: !4558, line: 148, column: 2)
!16596 = !{i64 2155489912}
!16597 = !DILocation(line: 149, column: 2, scope: !16593)
!16598 = !DILocation(line: 150, column: 1, scope: !16593)
!16599 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2596, file: !2596, line: 1495, type: !16600, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !16602)
!16600 = !DISubroutineType(types: !16601)
!16601 = !{!906, !107}
!16602 = !{!16603, !16604}
!16603 = !DILocalVariable(name: "us", arg: 1, scope: !16599, file: !2596, line: 1495, type: !107)
!16604 = !DILocalVariable(name: "ticks", scope: !16599, file: !2596, line: 1497, type: !906)
!16605 = !DILocation(line: 0, scope: !16599)
!16606 = !DILocation(line: 1501, column: 31, scope: !16599)
!16607 = !DILocation(line: 1501, column: 10, scope: !16599)
!16608 = !DILocation(line: 1502, column: 23, scope: !16599)
!16609 = !DILocation(line: 1502, column: 10, scope: !16599)
!16610 = !DILocation(line: 1506, column: 31, scope: !16599)
!16611 = !DILocation(line: 1506, column: 9, scope: !16599)
!16612 = !DILocation(line: 1506, column: 2, scope: !16599)
!16613 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !8862, file: !8862, line: 571, type: !14403, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !16614)
!16614 = !{!16615}
!16615 = !DILocalVariable(name: "t", arg: 1, scope: !16613, file: !8862, line: 571, type: !566)
!16616 = !DILocation(line: 0, scope: !16613)
!16617 = !DILocation(line: 0, scope: !14684, inlinedAt: !16618)
!16618 = distinct !DILocation(line: 574, column: 9, scope: !16613)
!16619 = !DILocation(line: 135, column: 5, scope: !16591, inlinedAt: !16618)
!16620 = !DILocation(line: 139, column: 13, scope: !16589, inlinedAt: !16618)
!16621 = !DILocation(line: 574, column: 2, scope: !16613)
!16622 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !8862, file: !8862, line: 1187, type: !14403, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !16623)
!16623 = !{!16624}
!16624 = !DILocalVariable(name: "t", arg: 1, scope: !16622, file: !8862, line: 1187, type: !566)
!16625 = !DILocation(line: 0, scope: !16622)
!16626 = !DILocation(line: 0, scope: !14684, inlinedAt: !16627)
!16627 = distinct !DILocation(line: 1190, column: 9, scope: !16622)
!16628 = !DILocation(line: 145, column: 13, scope: !16629, inlinedAt: !16627)
!16629 = distinct !DILexicalBlock(scope: !14702, file: !8862, line: 144, column: 10)
!16630 = !DILocation(line: 1190, column: 2, scope: !16622)
!16631 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2596, file: !2596, line: 1517, type: !16502, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !16632)
!16632 = !{!16633}
!16633 = !DILocalVariable(name: "thread", arg: 1, scope: !16631, file: !2596, line: 1517, type: !16360)
!16634 = !DILocation(line: 0, scope: !16631)
!16635 = !DILocation(line: 1521, column: 6, scope: !16636)
!16636 = distinct !DILexicalBlock(scope: !16631, file: !2596, line: 1521, column: 6)
!16637 = !DILocation(line: 1521, column: 6, scope: !16631)
!16638 = !DILocation(line: 1525, column: 6, scope: !16639)
!16639 = distinct !DILexicalBlock(scope: !16631, file: !2596, line: 1525, column: 6)
!16640 = !DILocation(line: 1525, column: 37, scope: !16639)
!16641 = !DILocation(line: 1525, column: 6, scope: !16631)
!16642 = !DILocation(line: 1527, column: 20, scope: !16643)
!16643 = distinct !DILexicalBlock(scope: !16644, file: !2596, line: 1527, column: 7)
!16644 = distinct !DILexicalBlock(scope: !16639, file: !2596, line: 1525, column: 42)
!16645 = !DILocation(line: 1527, column: 33, scope: !16643)
!16646 = !DILocation(line: 1527, column: 7, scope: !16644)
!16647 = !DILocation(line: 1532, column: 2, scope: !16631)
!16648 = !DILocation(line: 1533, column: 2, scope: !16631)
!16649 = !DILocation(line: 1031, column: 3, scope: !15351, inlinedAt: !16650)
!16650 = distinct !DILocation(line: 48, column: 10, scope: !15355, inlinedAt: !16651)
!16651 = distinct !DILocation(line: 1537, column: 7, scope: !16652)
!16652 = distinct !DILexicalBlock(scope: !16631, file: !2596, line: 1537, column: 6)
!16653 = !DILocation(line: 0, scope: !15351, inlinedAt: !16650)
!16654 = !DILocation(line: 48, column: 9, scope: !15355, inlinedAt: !16651)
!16655 = !DILocation(line: 1537, column: 6, scope: !16631)
!16656 = !DILocation(line: 1538, column: 3, scope: !16657)
!16657 = distinct !DILexicalBlock(scope: !16652, file: !2596, line: 1537, column: 25)
!16658 = !DILocation(line: 1539, column: 2, scope: !16657)
!16659 = !DILocation(line: 1540, column: 1, scope: !16631)
!16660 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !13784, file: !13784, line: 101, type: !14765, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !16661)
!16661 = !{!16662}
!16662 = !DILocalVariable(name: "thread", arg: 1, scope: !16660, file: !13784, line: 101, type: !2488)
!16663 = !DILocation(line: 0, scope: !16660)
!16664 = !DILocation(line: 103, column: 23, scope: !16660)
!16665 = !DILocation(line: 103, column: 36, scope: !16660)
!16666 = !DILocation(line: 103, column: 55, scope: !16660)
!16667 = !DILocation(line: 103, column: 2, scope: !16660)
!16668 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2596, file: !2596, line: 1567, type: !16669, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !16671)
!16669 = !DISubroutineType(types: !16670)
!16670 = !{!16360}
!16671 = !{!16672}
!16672 = !DILocalVariable(name: "ret", scope: !16668, file: !2596, line: 1577, type: !16360)
!16673 = !DILocation(line: 1577, column: 30, scope: !16668)
!16674 = !DILocation(line: 0, scope: !16668)
!16675 = !DILocation(line: 1582, column: 2, scope: !16668)
!16676 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2596, file: !2596, line: 1593, type: !7750, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !2296)
!16677 = !DILocation(line: 1031, column: 3, scope: !15351, inlinedAt: !16678)
!16678 = distinct !DILocation(line: 48, column: 10, scope: !15355, inlinedAt: !16679)
!16679 = distinct !DILocation(line: 1595, column: 10, scope: !16676)
!16680 = !DILocation(line: 0, scope: !15351, inlinedAt: !16678)
!16681 = !DILocation(line: 48, column: 9, scope: !15355, inlinedAt: !16679)
!16682 = !DILocation(line: 1595, column: 27, scope: !16676)
!16683 = !DILocation(line: 1595, column: 41, scope: !16676)
!16684 = !DILocation(line: 1595, column: 30, scope: !16676)
!16685 = !DILocation(line: 1595, column: 2, scope: !16676)
!16686 = distinct !DISubprogram(name: "z_thread_abort", scope: !2596, file: !2596, line: 1725, type: !14582, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !16687)
!16687 = !{!16688, !16689}
!16688 = !DILocalVariable(name: "thread", arg: 1, scope: !16686, file: !2596, line: 1725, type: !2488)
!16689 = !DILocalVariable(name: "key", scope: !16686, file: !2596, line: 1727, type: !14616)
!16690 = !DILocation(line: 0, scope: !16686)
!16691 = !DILocation(line: 0, scope: !14624, inlinedAt: !16692)
!16692 = distinct !DILocation(line: 1727, column: 25, scope: !16686)
!16693 = !DILocation(line: 55, column: 2, scope: !14633, inlinedAt: !16694)
!16694 = distinct !DILocation(line: 145, column: 10, scope: !14624, inlinedAt: !16692)
!16695 = !DILocation(line: 0, scope: !14633, inlinedAt: !16694)
!16696 = !DILocation(line: 148, column: 2, scope: !14641, inlinedAt: !16692)
!16697 = !DILocation(line: 148, column: 2, scope: !14642, inlinedAt: !16692)
!16698 = !DILocation(line: 148, column: 2, scope: !14645, inlinedAt: !16692)
!16699 = !DILocation(line: 160, column: 2, scope: !14624, inlinedAt: !16692)
!16700 = !DILocation(line: 1729, column: 20, scope: !16701)
!16701 = distinct !DILexicalBlock(scope: !16686, file: !2596, line: 1729, column: 6)
!16702 = !DILocation(line: 1729, column: 33, scope: !16701)
!16703 = !DILocation(line: 1729, column: 48, scope: !16701)
!16704 = !DILocation(line: 1729, column: 6, scope: !16686)
!16705 = !DILocation(line: 0, scope: !14658, inlinedAt: !16706)
!16706 = distinct !DILocation(line: 1730, column: 3, scope: !16707)
!16707 = distinct !DILexicalBlock(scope: !16701, file: !2596, line: 1729, column: 54)
!16708 = !DILocation(line: 194, column: 2, scope: !14666, inlinedAt: !16706)
!16709 = !DILocation(line: 194, column: 2, scope: !14667, inlinedAt: !16706)
!16710 = !DILocation(line: 194, column: 2, scope: !14670, inlinedAt: !16706)
!16711 = !DILocation(line: 0, scope: !14672, inlinedAt: !16712)
!16712 = distinct !DILocation(line: 215, column: 2, scope: !14658, inlinedAt: !16706)
!16713 = !DILocation(line: 95, column: 2, scope: !14672, inlinedAt: !16712)
!16714 = !DILocation(line: 1731, column: 3, scope: !16715)
!16715 = distinct !DILexicalBlock(scope: !16716, file: !2596, line: 1731, column: 3)
!16716 = distinct !DILexicalBlock(scope: !16717, file: !2596, line: 1731, column: 3)
!16717 = distinct !DILexicalBlock(scope: !16707, file: !2596, line: 1731, column: 3)
!16718 = !DILocation(line: 1736, column: 20, scope: !16719)
!16719 = distinct !DILexicalBlock(scope: !16686, file: !2596, line: 1736, column: 6)
!16720 = !DILocation(line: 1736, column: 33, scope: !16719)
!16721 = !DILocation(line: 1736, column: 49, scope: !16719)
!16722 = !DILocation(line: 1736, column: 6, scope: !16686)
!16723 = !DILocation(line: 0, scope: !14658, inlinedAt: !16724)
!16724 = distinct !DILocation(line: 1737, column: 3, scope: !16725)
!16725 = distinct !DILexicalBlock(scope: !16719, file: !2596, line: 1736, column: 56)
!16726 = !DILocation(line: 194, column: 2, scope: !14666, inlinedAt: !16724)
!16727 = !DILocation(line: 194, column: 2, scope: !14667, inlinedAt: !16724)
!16728 = !DILocation(line: 194, column: 2, scope: !14670, inlinedAt: !16724)
!16729 = !DILocation(line: 0, scope: !14672, inlinedAt: !16730)
!16730 = distinct !DILocation(line: 215, column: 2, scope: !14658, inlinedAt: !16724)
!16731 = !DILocation(line: 95, column: 2, scope: !14672, inlinedAt: !16730)
!16732 = !DILocation(line: 1738, column: 3, scope: !16725)
!16733 = !DILocation(line: 1775, column: 2, scope: !16686)
!16734 = !DILocation(line: 1776, column: 16, scope: !16735)
!16735 = distinct !DILexicalBlock(scope: !16686, file: !2596, line: 1776, column: 6)
!16736 = !DILocation(line: 1776, column: 13, scope: !16735)
!16737 = !DILocation(line: 1776, column: 25, scope: !16735)
!16738 = !DILocation(line: 1031, column: 3, scope: !15351, inlinedAt: !16739)
!16739 = distinct !DILocation(line: 48, column: 10, scope: !15355, inlinedAt: !16740)
!16740 = distinct !DILocation(line: 1776, column: 29, scope: !16735)
!16741 = !DILocation(line: 0, scope: !15351, inlinedAt: !16739)
!16742 = !DILocation(line: 48, column: 9, scope: !15355, inlinedAt: !16740)
!16743 = !DILocation(line: 1776, column: 6, scope: !16686)
!16744 = !DILocation(line: 0, scope: !15302, inlinedAt: !16745)
!16745 = distinct !DILocation(line: 1777, column: 3, scope: !16746)
!16746 = distinct !DILexicalBlock(scope: !16735, file: !2596, line: 1776, column: 47)
!16747 = !DILocation(line: 0, scope: !15311, inlinedAt: !16748)
!16748 = distinct !DILocation(line: 195, column: 2, scope: !15302, inlinedAt: !16745)
!16749 = !DILocation(line: 225, column: 2, scope: !15318, inlinedAt: !16748)
!16750 = !DILocation(line: 225, column: 2, scope: !15319, inlinedAt: !16748)
!16751 = !DILocation(line: 225, column: 2, scope: !15322, inlinedAt: !16748)
!16752 = !DILocation(line: 196, column: 9, scope: !15302, inlinedAt: !16745)
!16753 = !DILocation(line: 1778, column: 3, scope: !16754)
!16754 = distinct !DILexicalBlock(scope: !16755, file: !2596, line: 1778, column: 3)
!16755 = distinct !DILexicalBlock(scope: !16756, file: !2596, line: 1778, column: 3)
!16756 = distinct !DILexicalBlock(scope: !16746, file: !2596, line: 1778, column: 3)
!16757 = !DILocation(line: 0, scope: !14658, inlinedAt: !16758)
!16758 = distinct !DILocation(line: 1780, column: 2, scope: !16686)
!16759 = !DILocation(line: 194, column: 2, scope: !14666, inlinedAt: !16758)
!16760 = !DILocation(line: 194, column: 2, scope: !14667, inlinedAt: !16758)
!16761 = !DILocation(line: 194, column: 2, scope: !14670, inlinedAt: !16758)
!16762 = !DILocation(line: 0, scope: !14672, inlinedAt: !16763)
!16763 = distinct !DILocation(line: 215, column: 2, scope: !14658, inlinedAt: !16758)
!16764 = !DILocation(line: 95, column: 2, scope: !14672, inlinedAt: !16763)
!16765 = !DILocation(line: 1781, column: 1, scope: !16686)
!16766 = distinct !DISubprogram(name: "end_thread", scope: !2596, file: !2596, line: 1690, type: !14582, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !16767)
!16767 = !{!16768}
!16768 = !DILocalVariable(name: "thread", arg: 1, scope: !16766, file: !2596, line: 1690, type: !2488)
!16769 = !DILocation(line: 0, scope: !16766)
!16770 = !DILocation(line: 1695, column: 20, scope: !16771)
!16771 = distinct !DILexicalBlock(scope: !16766, file: !2596, line: 1695, column: 6)
!16772 = !DILocation(line: 1695, column: 33, scope: !16771)
!16773 = !DILocation(line: 1695, column: 49, scope: !16771)
!16774 = !DILocation(line: 1695, column: 6, scope: !16766)
!16775 = !DILocation(line: 1697, column: 29, scope: !16776)
!16776 = distinct !DILexicalBlock(scope: !16771, file: !2596, line: 1695, column: 56)
!16777 = !DILocation(line: 1698, column: 7, scope: !16778)
!16778 = distinct !DILexicalBlock(scope: !16776, file: !2596, line: 1698, column: 7)
!16779 = !DILocation(line: 1698, column: 7, scope: !16776)
!16780 = !DILocation(line: 0, scope: !14816, inlinedAt: !16781)
!16781 = distinct !DILocation(line: 1699, column: 4, scope: !16782)
!16782 = distinct !DILexicalBlock(scope: !16778, file: !2596, line: 1698, column: 35)
!16783 = !DILocation(line: 266, column: 28, scope: !14816, inlinedAt: !16781)
!16784 = !DILocation(line: 0, scope: !14824, inlinedAt: !16785)
!16785 = distinct !DILocation(line: 268, column: 3, scope: !14828, inlinedAt: !16781)
!16786 = !DILocation(line: 234, column: 2, scope: !14824, inlinedAt: !16785)
!16787 = !DILocation(line: 1700, column: 3, scope: !16782)
!16788 = !DILocation(line: 1701, column: 20, scope: !16789)
!16789 = distinct !DILexicalBlock(scope: !16776, file: !2596, line: 1701, column: 7)
!16790 = !DILocation(line: 1701, column: 30, scope: !16789)
!16791 = !DILocation(line: 1701, column: 7, scope: !16776)
!16792 = !DILocation(line: 1702, column: 4, scope: !16793)
!16793 = distinct !DILexicalBlock(scope: !16789, file: !2596, line: 1701, column: 39)
!16794 = !DILocation(line: 1703, column: 3, scope: !16793)
!16795 = !DILocation(line: 1704, column: 9, scope: !16776)
!16796 = !DILocation(line: 1705, column: 23, scope: !16776)
!16797 = !DILocation(line: 1705, column: 3, scope: !16776)
!16798 = !DILocation(line: 1706, column: 3, scope: !16776)
!16799 = !DILocation(line: 1722, column: 2, scope: !16776)
!16800 = !DILocation(line: 1723, column: 1, scope: !16766)
!16801 = distinct !DISubprogram(name: "unpend_all", scope: !2596, file: !2596, line: 1674, type: !16802, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !16804)
!16802 = !DISubroutineType(types: !16803)
!16803 = !{null, !2519}
!16804 = !{!16805, !16806}
!16805 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16801, file: !2596, line: 1674, type: !2519)
!16806 = !DILocalVariable(name: "thread", scope: !16801, file: !2596, line: 1676, type: !2488)
!16807 = !DILocation(line: 0, scope: !16801)
!16808 = !DILocation(line: 1678, column: 19, scope: !16801)
!16809 = !DILocation(line: 1678, column: 41, scope: !16801)
!16810 = !DILocation(line: 1678, column: 2, scope: !16801)
!16811 = !DILocation(line: 1679, column: 3, scope: !16812)
!16812 = distinct !DILexicalBlock(scope: !16801, file: !2596, line: 1678, column: 50)
!16813 = !DILocation(line: 1680, column: 9, scope: !16812)
!16814 = !DILocalVariable(name: "thread", arg: 1, scope: !16815, file: !13804, line: 65, type: !2488)
!16815 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13804, file: !13804, line: 65, type: !16816, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !16818)
!16816 = !DISubroutineType(types: !16817)
!16817 = !{null, !2488, !32}
!16818 = !{!16814, !16819}
!16819 = !DILocalVariable(name: "value", arg: 2, scope: !16815, file: !13804, line: 65, type: !32)
!16820 = !DILocation(line: 0, scope: !16815, inlinedAt: !16821)
!16821 = distinct !DILocation(line: 1681, column: 3, scope: !16812)
!16822 = !DILocation(line: 67, column: 15, scope: !16815, inlinedAt: !16821)
!16823 = !DILocation(line: 67, column: 33, scope: !16815, inlinedAt: !16821)
!16824 = !DILocation(line: 1682, column: 3, scope: !16812)
!16825 = distinct !{!16825, !16810, !16826}
!16826 = !DILocation(line: 1683, column: 2, scope: !16801)
!16827 = !DILocation(line: 1684, column: 1, scope: !16801)
!16828 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2596, file: !2596, line: 1794, type: !16829, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !16831)
!16829 = !DISubroutineType(types: !16830)
!16830 = !{!107, !2488, !15512}
!16831 = !{!16832, !16833, !16834, !16835}
!16832 = !DILocalVariable(name: "thread", arg: 1, scope: !16828, file: !2596, line: 1794, type: !2488)
!16833 = !DILocalVariable(name: "timeout", arg: 2, scope: !16828, file: !2596, line: 1794, type: !15512)
!16834 = !DILocalVariable(name: "key", scope: !16828, file: !2596, line: 1796, type: !14616)
!16835 = !DILocalVariable(name: "ret", scope: !16828, file: !2596, line: 1797, type: !107)
!16836 = !DILocation(line: 0, scope: !16828)
!16837 = !DILocation(line: 0, scope: !14624, inlinedAt: !16838)
!16838 = distinct !DILocation(line: 1796, column: 25, scope: !16828)
!16839 = !DILocation(line: 55, column: 2, scope: !14633, inlinedAt: !16840)
!16840 = distinct !DILocation(line: 145, column: 10, scope: !14624, inlinedAt: !16838)
!16841 = !DILocation(line: 0, scope: !14633, inlinedAt: !16840)
!16842 = !DILocation(line: 148, column: 2, scope: !14641, inlinedAt: !16838)
!16843 = !DILocation(line: 148, column: 2, scope: !14642, inlinedAt: !16838)
!16844 = !DILocation(line: 148, column: 2, scope: !14645, inlinedAt: !16838)
!16845 = !DILocation(line: 160, column: 2, scope: !14624, inlinedAt: !16838)
!16846 = !DILocation(line: 1801, column: 20, scope: !16847)
!16847 = distinct !DILexicalBlock(scope: !16828, file: !2596, line: 1801, column: 6)
!16848 = !DILocation(line: 1801, column: 33, scope: !16847)
!16849 = !DILocation(line: 1801, column: 49, scope: !16847)
!16850 = !DILocation(line: 1801, column: 6, scope: !16828)
!16851 = !DILocation(line: 1803, column: 13, scope: !16852)
!16852 = distinct !DILexicalBlock(scope: !16847, file: !2596, line: 1803, column: 13)
!16853 = !DILocation(line: 1803, column: 13, scope: !16847)
!16854 = !DILocation(line: 1805, column: 24, scope: !16855)
!16855 = distinct !DILexicalBlock(scope: !16852, file: !2596, line: 1805, column: 13)
!16856 = !DILocation(line: 1805, column: 21, scope: !16855)
!16857 = !DILocation(line: 1805, column: 34, scope: !16855)
!16858 = !DILocation(line: 1806, column: 20, scope: !16855)
!16859 = !DILocation(line: 1806, column: 44, scope: !16855)
!16860 = !DILocation(line: 1806, column: 30, scope: !16855)
!16861 = !DILocation(line: 1805, column: 13, scope: !16852)
!16862 = !DILocation(line: 1031, column: 3, scope: !15351, inlinedAt: !16863)
!16863 = distinct !DILocation(line: 48, column: 10, scope: !15355, inlinedAt: !16864)
!16864 = distinct !DILocation(line: 1809, column: 3, scope: !16865)
!16865 = distinct !DILexicalBlock(scope: !16866, file: !2596, line: 1809, column: 3)
!16866 = distinct !DILexicalBlock(scope: !16867, file: !2596, line: 1809, column: 3)
!16867 = distinct !DILexicalBlock(scope: !16855, file: !2596, line: 1808, column: 9)
!16868 = !DILocation(line: 0, scope: !15351, inlinedAt: !16863)
!16869 = !DILocation(line: 48, column: 9, scope: !15355, inlinedAt: !16864)
!16870 = !DILocation(line: 1809, column: 3, scope: !16866)
!16871 = !DILocation(line: 1809, column: 3, scope: !16872)
!16872 = distinct !DILexicalBlock(scope: !16865, file: !2596, line: 1809, column: 3)
!16873 = !DILocation(line: 1810, column: 23, scope: !16867)
!16874 = !DILocation(line: 1810, column: 42, scope: !16867)
!16875 = !DILocation(line: 1810, column: 3, scope: !16867)
!16876 = !DILocation(line: 1811, column: 22, scope: !16867)
!16877 = !DILocation(line: 1811, column: 3, scope: !16867)
!16878 = !DILocation(line: 0, scope: !15302, inlinedAt: !16879)
!16879 = distinct !DILocation(line: 1814, column: 9, scope: !16867)
!16880 = !DILocation(line: 0, scope: !15311, inlinedAt: !16881)
!16881 = distinct !DILocation(line: 195, column: 2, scope: !15302, inlinedAt: !16879)
!16882 = !DILocation(line: 225, column: 2, scope: !15318, inlinedAt: !16881)
!16883 = !DILocation(line: 225, column: 2, scope: !15319, inlinedAt: !16881)
!16884 = !DILocation(line: 225, column: 2, scope: !15322, inlinedAt: !16881)
!16885 = !DILocation(line: 196, column: 9, scope: !15302, inlinedAt: !16879)
!16886 = !DILocation(line: 1817, column: 3, scope: !16867)
!16887 = !DILocation(line: 0, scope: !16847)
!16888 = !DILocation(line: 0, scope: !14658, inlinedAt: !16889)
!16889 = distinct !DILocation(line: 1822, column: 2, scope: !16828)
!16890 = !DILocation(line: 194, column: 2, scope: !14666, inlinedAt: !16889)
!16891 = !DILocation(line: 194, column: 2, scope: !14667, inlinedAt: !16889)
!16892 = !DILocation(line: 194, column: 2, scope: !14670, inlinedAt: !16889)
!16893 = !DILocation(line: 0, scope: !14672, inlinedAt: !16894)
!16894 = distinct !DILocation(line: 215, column: 2, scope: !14658, inlinedAt: !16889)
!16895 = !DILocation(line: 95, column: 2, scope: !14672, inlinedAt: !16894)
!16896 = !DILocation(line: 1823, column: 2, scope: !16828)
!16897 = !DILocation(line: 1824, column: 1, scope: !16828)
!16898 = distinct !DISubprogram(name: "z_sched_wake", scope: !2596, file: !2596, line: 1882, type: !16899, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !16901)
!16899 = !DISubroutineType(types: !16900)
!16900 = !{!145, !2519, !107, !106}
!16901 = !{!16902, !16903, !16904, !16905, !16906, !16907, !16909}
!16902 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16898, file: !2596, line: 1882, type: !2519)
!16903 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !16898, file: !2596, line: 1882, type: !107)
!16904 = !DILocalVariable(name: "swap_data", arg: 3, scope: !16898, file: !2596, line: 1882, type: !106)
!16905 = !DILocalVariable(name: "thread", scope: !16898, file: !2596, line: 1884, type: !2488)
!16906 = !DILocalVariable(name: "ret", scope: !16898, file: !2596, line: 1885, type: !145)
!16907 = !DILocalVariable(name: "__i", scope: !16908, file: !2596, line: 1887, type: !14616)
!16908 = distinct !DILexicalBlock(scope: !16898, file: !2596, line: 1887, column: 2)
!16909 = !DILocalVariable(name: "__key", scope: !16908, file: !2596, line: 1887, type: !14616)
!16910 = !DILocation(line: 0, scope: !16898)
!16911 = !DILocation(line: 0, scope: !16908)
!16912 = !DILocation(line: 0, scope: !14624, inlinedAt: !16913)
!16913 = distinct !DILocation(line: 1887, column: 2, scope: !16908)
!16914 = !DILocation(line: 55, column: 2, scope: !14633, inlinedAt: !16915)
!16915 = distinct !DILocation(line: 145, column: 10, scope: !14624, inlinedAt: !16913)
!16916 = !DILocation(line: 0, scope: !14633, inlinedAt: !16915)
!16917 = !DILocation(line: 148, column: 2, scope: !14641, inlinedAt: !16913)
!16918 = !DILocation(line: 148, column: 2, scope: !14642, inlinedAt: !16913)
!16919 = !DILocation(line: 148, column: 2, scope: !14645, inlinedAt: !16913)
!16920 = !DILocation(line: 160, column: 2, scope: !14624, inlinedAt: !16913)
!16921 = !DILocation(line: 1888, column: 12, scope: !16922)
!16922 = distinct !DILexicalBlock(scope: !16923, file: !2596, line: 1887, column: 26)
!16923 = distinct !DILexicalBlock(scope: !16908, file: !2596, line: 1887, column: 2)
!16924 = !DILocation(line: 1890, column: 14, scope: !16925)
!16925 = distinct !DILexicalBlock(scope: !16922, file: !2596, line: 1890, column: 7)
!16926 = !DILocation(line: 1890, column: 7, scope: !16922)
!16927 = !DILocalVariable(name: "thread", arg: 1, scope: !16928, file: !16929, line: 134, type: !2488)
!16928 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !16929, file: !16929, line: 134, type: !16930, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !16932)
!16929 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16930 = !DISubroutineType(types: !16931)
!16931 = !{null, !2488, !32, !106}
!16932 = !{!16927, !16933, !16934}
!16933 = !DILocalVariable(name: "value", arg: 2, scope: !16928, file: !16929, line: 135, type: !32)
!16934 = !DILocalVariable(name: "data", arg: 3, scope: !16928, file: !16929, line: 136, type: !106)
!16935 = !DILocation(line: 0, scope: !16928, inlinedAt: !16936)
!16936 = distinct !DILocation(line: 1891, column: 4, scope: !16937)
!16937 = distinct !DILexicalBlock(scope: !16925, file: !2596, line: 1890, column: 23)
!16938 = !DILocation(line: 0, scope: !16815, inlinedAt: !16939)
!16939 = distinct !DILocation(line: 138, column: 2, scope: !16928, inlinedAt: !16936)
!16940 = !DILocation(line: 67, column: 15, scope: !16815, inlinedAt: !16939)
!16941 = !DILocation(line: 67, column: 33, scope: !16815, inlinedAt: !16939)
!16942 = !DILocation(line: 139, column: 15, scope: !16928, inlinedAt: !16936)
!16943 = !DILocation(line: 139, column: 25, scope: !16928, inlinedAt: !16936)
!16944 = !DILocation(line: 1894, column: 4, scope: !16937)
!16945 = !DILocation(line: 1895, column: 10, scope: !16937)
!16946 = !DILocation(line: 1896, column: 4, scope: !16937)
!16947 = !DILocation(line: 1898, column: 3, scope: !16937)
!16948 = !DILocation(line: 0, scope: !14658, inlinedAt: !16949)
!16949 = distinct !DILocation(line: 1887, column: 2, scope: !16923)
!16950 = !DILocation(line: 194, column: 2, scope: !14666, inlinedAt: !16949)
!16951 = !DILocation(line: 194, column: 2, scope: !14667, inlinedAt: !16949)
!16952 = !DILocation(line: 194, column: 2, scope: !14670, inlinedAt: !16949)
!16953 = !DILocation(line: 0, scope: !14672, inlinedAt: !16954)
!16954 = distinct !DILocation(line: 215, column: 2, scope: !14658, inlinedAt: !16949)
!16955 = !DILocation(line: 95, column: 2, scope: !14672, inlinedAt: !16954)
!16956 = !DILocation(line: 1901, column: 2, scope: !16898)
!16957 = distinct !DISubprogram(name: "z_sched_wait", scope: !2596, file: !2596, line: 1904, type: !16958, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !16961)
!16958 = !DISubroutineType(types: !16959)
!16959 = !{!107, !14627, !14616, !2519, !15512, !16960}
!16960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 32)
!16961 = !{!16962, !16963, !16964, !16965, !16966, !16967}
!16962 = !DILocalVariable(name: "lock", arg: 1, scope: !16957, file: !2596, line: 1904, type: !14627)
!16963 = !DILocalVariable(name: "key", arg: 2, scope: !16957, file: !2596, line: 1904, type: !14616)
!16964 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16957, file: !2596, line: 1905, type: !2519)
!16965 = !DILocalVariable(name: "timeout", arg: 4, scope: !16957, file: !2596, line: 1905, type: !15512)
!16966 = !DILocalVariable(name: "data", arg: 5, scope: !16957, file: !2596, line: 1905, type: !16960)
!16967 = !DILocalVariable(name: "ret", scope: !16957, file: !2596, line: 1907, type: !107)
!16968 = !DILocation(line: 0, scope: !16957)
!16969 = !DILocation(line: 1907, column: 12, scope: !16957)
!16970 = !DILocation(line: 1909, column: 11, scope: !16971)
!16971 = distinct !DILexicalBlock(scope: !16957, file: !2596, line: 1909, column: 6)
!16972 = !DILocation(line: 1909, column: 6, scope: !16957)
!16973 = !DILocation(line: 1910, column: 11, scope: !16974)
!16974 = distinct !DILexicalBlock(scope: !16971, file: !2596, line: 1909, column: 20)
!16975 = !DILocation(line: 1910, column: 26, scope: !16974)
!16976 = !DILocation(line: 1910, column: 9, scope: !16974)
!16977 = !DILocation(line: 1911, column: 2, scope: !16974)
!16978 = !DILocation(line: 1912, column: 2, scope: !16957)
!16979 = distinct !DISubprogram(name: "z_data_copy", scope: !16980, file: !16980, line: 22, type: !3227, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3210, retainedNodes: !2296)
!16980 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16981 = !DILocation(line: 24, column: 2, scope: !16979)
!16982 = !DILocation(line: 27, column: 2, scope: !16979)
!16983 = !DILocation(line: 31, column: 2, scope: !16979)
!16984 = !DILocation(line: 71, column: 1, scope: !16979)
!16985 = distinct !DISubprogram(name: "z_add_timeout", scope: !2633, file: !2633, line: 88, type: !16986, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !16992)
!16986 = !DISubroutineType(types: !16987)
!16987 = !{null, !2606, !2625, !16988}
!16988 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !565, line: 67, baseType: !16989)
!16989 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !565, line: 65, size: 64, elements: !16990)
!16990 = !{!16991}
!16991 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16989, file: !565, line: 66, baseType: !564, size: 64)
!16992 = !{!16993, !16994, !16995, !16996, !17002, !17003, !17006, !17009}
!16993 = !DILocalVariable(name: "to", arg: 1, scope: !16985, file: !2633, line: 88, type: !2606)
!16994 = !DILocalVariable(name: "fn", arg: 2, scope: !16985, file: !2633, line: 88, type: !2625)
!16995 = !DILocalVariable(name: "timeout", arg: 3, scope: !16985, file: !2633, line: 89, type: !16988)
!16996 = !DILocalVariable(name: "__i", scope: !16997, file: !2633, line: 102, type: !16998)
!16997 = distinct !DILexicalBlock(scope: !16985, file: !2633, line: 102, column: 2)
!16998 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !420, line: 106, baseType: !16999)
!16999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !420, line: 32, size: 32, elements: !17000)
!17000 = !{!17001}
!17001 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16999, file: !420, line: 33, baseType: !107, size: 32)
!17002 = !DILocalVariable(name: "__key", scope: !16997, file: !2633, line: 102, type: !16998)
!17003 = !DILocalVariable(name: "t", scope: !17004, file: !2633, line: 103, type: !2606)
!17004 = distinct !DILexicalBlock(scope: !17005, file: !2633, line: 102, column: 24)
!17005 = distinct !DILexicalBlock(scope: !16997, file: !2633, line: 102, column: 2)
!17006 = !DILocalVariable(name: "ticks", scope: !17007, file: !2633, line: 107, type: !564)
!17007 = distinct !DILexicalBlock(scope: !17008, file: !2633, line: 106, column: 39)
!17008 = distinct !DILexicalBlock(scope: !17004, file: !2633, line: 105, column: 7)
!17009 = !DILocalVariable(name: "next_time", scope: !17010, file: !2633, line: 137, type: !906)
!17010 = distinct !DILexicalBlock(scope: !17011, file: !2633, line: 127, column: 22)
!17011 = distinct !DILexicalBlock(scope: !17004, file: !2633, line: 127, column: 7)
!17012 = !DILocation(line: 0, scope: !16985)
!17013 = !DILocation(line: 91, column: 6, scope: !17014)
!17014 = distinct !DILexicalBlock(scope: !16985, file: !2633, line: 91, column: 6)
!17015 = !DILocation(line: 91, column: 6, scope: !16985)
!17016 = !DILocation(line: 99, column: 2, scope: !17017)
!17017 = distinct !DILexicalBlock(scope: !17018, file: !2633, line: 99, column: 2)
!17018 = distinct !DILexicalBlock(scope: !16985, file: !2633, line: 99, column: 2)
!17019 = !DILocation(line: 99, column: 2, scope: !17018)
!17020 = !DILocation(line: 99, column: 2, scope: !17021)
!17021 = distinct !DILexicalBlock(scope: !17017, file: !2633, line: 99, column: 2)
!17022 = !DILocation(line: 100, column: 6, scope: !16985)
!17023 = !DILocation(line: 100, column: 9, scope: !16985)
!17024 = !DILocation(line: 0, scope: !16997)
!17025 = !DILocalVariable(name: "l", arg: 1, scope: !17026, file: !420, line: 136, type: !17029)
!17026 = distinct !DISubprogram(name: "k_spin_lock", scope: !420, file: !420, line: 136, type: !17027, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !17030)
!17027 = !DISubroutineType(types: !17028)
!17028 = !{!16998, !17029}
!17029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2639, size: 32)
!17030 = !{!17025, !17031}
!17031 = !DILocalVariable(name: "k", scope: !17026, file: !420, line: 139, type: !16998)
!17032 = !DILocation(line: 0, scope: !17026, inlinedAt: !17033)
!17033 = distinct !DILocation(line: 102, column: 2, scope: !16997)
!17034 = !DILocation(line: 55, column: 2, scope: !17035, inlinedAt: !17039)
!17035 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6075, file: !6075, line: 42, type: !6076, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !17036)
!17036 = !{!17037, !17038}
!17037 = !DILocalVariable(name: "key", scope: !17035, file: !6075, line: 44, type: !32)
!17038 = !DILocalVariable(name: "tmp", scope: !17035, file: !6075, line: 53, type: !32)
!17039 = distinct !DILocation(line: 145, column: 10, scope: !17026, inlinedAt: !17033)
!17040 = !{i64 2603421}
!17041 = !DILocation(line: 0, scope: !17035, inlinedAt: !17039)
!17042 = !DILocation(line: 148, column: 2, scope: !17043, inlinedAt: !17033)
!17043 = distinct !DILexicalBlock(scope: !17044, file: !420, line: 148, column: 2)
!17044 = distinct !DILexicalBlock(scope: !17026, file: !420, line: 148, column: 2)
!17045 = !DILocation(line: 148, column: 2, scope: !17044, inlinedAt: !17033)
!17046 = !DILocation(line: 148, column: 2, scope: !17047, inlinedAt: !17033)
!17047 = distinct !DILexicalBlock(scope: !17043, file: !420, line: 148, column: 2)
!17048 = !DILocation(line: 160, column: 2, scope: !17026, inlinedAt: !17033)
!17049 = !DILocation(line: 106, column: 33, scope: !17008)
!17050 = !DILocation(line: 105, column: 7, scope: !17004)
!17051 = !DILocation(line: 107, column: 50, scope: !17007)
!17052 = !DILocation(line: 107, column: 48, scope: !17007)
!17053 = !DILocation(line: 0, scope: !17007)
!17054 = !DILocation(line: 109, column: 17, scope: !17007)
!17055 = !DILocation(line: 110, column: 3, scope: !17007)
!17056 = !DILocation(line: 111, column: 31, scope: !17057)
!17057 = distinct !DILexicalBlock(scope: !17008, file: !2633, line: 110, column: 10)
!17058 = !DILocation(line: 111, column: 37, scope: !17057)
!17059 = !DILocation(line: 111, column: 35, scope: !17057)
!17060 = !DILocation(line: 0, scope: !17008)
!17061 = !DILocation(line: 109, column: 8, scope: !17007)
!17062 = !DILocation(line: 109, column: 15, scope: !17007)
!17063 = !DILocation(line: 114, column: 12, scope: !17064)
!17064 = distinct !DILexicalBlock(scope: !17004, file: !2633, line: 114, column: 3)
!17065 = !DILocation(line: 0, scope: !17004)
!17066 = !DILocation(line: 114, column: 3, scope: !17064)
!17067 = !DILocation(line: 115, column: 24, scope: !17068)
!17068 = distinct !DILexicalBlock(scope: !17069, file: !2633, line: 115, column: 8)
!17069 = distinct !DILexicalBlock(scope: !17070, file: !2633, line: 114, column: 45)
!17070 = distinct !DILexicalBlock(scope: !17064, file: !2633, line: 114, column: 3)
!17071 = !DILocation(line: 115, column: 11, scope: !17068)
!17072 = !DILocation(line: 115, column: 18, scope: !17068)
!17073 = !DILocation(line: 115, column: 8, scope: !17069)
!17074 = !DILocation(line: 116, column: 15, scope: !17075)
!17075 = distinct !DILexicalBlock(scope: !17068, file: !2633, line: 115, column: 32)
!17076 = !DILocation(line: 117, column: 26, scope: !17075)
!17077 = !DILocation(line: 117, column: 5, scope: !17075)
!17078 = !DILocation(line: 123, column: 7, scope: !17004)
!17079 = !DILocation(line: 120, column: 15, scope: !17069)
!17080 = !DILocation(line: 114, column: 36, scope: !17070)
!17081 = distinct !{!17081, !17066, !17082}
!17082 = !DILocation(line: 121, column: 3, scope: !17064)
!17083 = !DILocation(line: 124, column: 4, scope: !17084)
!17084 = distinct !DILexicalBlock(scope: !17085, file: !2633, line: 123, column: 18)
!17085 = distinct !DILexicalBlock(scope: !17004, file: !2633, line: 123, column: 7)
!17086 = !DILocation(line: 125, column: 3, scope: !17084)
!17087 = !DILocation(line: 127, column: 13, scope: !17011)
!17088 = !DILocation(line: 127, column: 10, scope: !17011)
!17089 = !DILocation(line: 127, column: 7, scope: !17004)
!17090 = !DILocation(line: 137, column: 24, scope: !17010)
!17091 = !DILocation(line: 0, scope: !17010)
!17092 = !DILocation(line: 139, column: 18, scope: !17093)
!17093 = distinct !DILexicalBlock(scope: !17010, file: !2633, line: 139, column: 8)
!17094 = !DILocation(line: 139, column: 23, scope: !17093)
!17095 = !DILocation(line: 141, column: 5, scope: !17096)
!17096 = distinct !DILexicalBlock(scope: !17093, file: !2633, line: 140, column: 48)
!17097 = !DILocation(line: 142, column: 4, scope: !17096)
!17098 = !DILocalVariable(name: "key", arg: 2, scope: !17099, file: !420, line: 190, type: !16998)
!17099 = distinct !DISubprogram(name: "k_spin_unlock", scope: !420, file: !420, line: 189, type: !17100, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !17102)
!17100 = !DISubroutineType(types: !17101)
!17101 = !{null, !17029, !16998}
!17102 = !{!17103, !17098}
!17103 = !DILocalVariable(name: "l", arg: 1, scope: !17099, file: !420, line: 189, type: !17029)
!17104 = !DILocation(line: 0, scope: !17099, inlinedAt: !17105)
!17105 = distinct !DILocation(line: 102, column: 2, scope: !17005)
!17106 = !DILocation(line: 194, column: 2, scope: !17107, inlinedAt: !17105)
!17107 = distinct !DILexicalBlock(scope: !17108, file: !420, line: 194, column: 2)
!17108 = distinct !DILexicalBlock(scope: !17099, file: !420, line: 194, column: 2)
!17109 = !DILocation(line: 194, column: 2, scope: !17108, inlinedAt: !17105)
!17110 = !DILocation(line: 194, column: 2, scope: !17111, inlinedAt: !17105)
!17111 = distinct !DILexicalBlock(scope: !17107, file: !420, line: 194, column: 2)
!17112 = !DILocalVariable(name: "key", arg: 1, scope: !17113, file: !6075, line: 84, type: !32)
!17113 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6075, file: !6075, line: 84, type: !6086, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !17114)
!17114 = !{!17112}
!17115 = !DILocation(line: 0, scope: !17113, inlinedAt: !17116)
!17116 = distinct !DILocation(line: 215, column: 2, scope: !17099, inlinedAt: !17105)
!17117 = !DILocation(line: 95, column: 2, scope: !17113, inlinedAt: !17116)
!17118 = !{i64 2604238}
!17119 = !DILocation(line: 148, column: 1, scope: !16985)
!17120 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !319, file: !319, line: 225, type: !17121, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !17125)
!17121 = !DISubroutineType(types: !17122)
!17122 = !{!145, !17123}
!17123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17124, size: 32)
!17124 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2610)
!17125 = !{!17126}
!17126 = !DILocalVariable(name: "node", arg: 1, scope: !17120, file: !319, line: 225, type: !17123)
!17127 = !DILocation(line: 0, scope: !17120)
!17128 = !DILocation(line: 227, column: 15, scope: !17120)
!17129 = !DILocation(line: 227, column: 20, scope: !17120)
!17130 = !DILocation(line: 227, column: 2, scope: !17120)
!17131 = distinct !DISubprogram(name: "elapsed", scope: !2633, file: !2633, line: 62, type: !17132, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !2296)
!17132 = !DISubroutineType(types: !17133)
!17133 = !{!906}
!17134 = !DILocation(line: 64, column: 9, scope: !17131)
!17135 = !DILocation(line: 64, column: 28, scope: !17131)
!17136 = !DILocation(line: 64, column: 35, scope: !17131)
!17137 = !DILocation(line: 64, column: 2, scope: !17131)
!17138 = distinct !DISubprogram(name: "first", scope: !2633, file: !2633, line: 39, type: !17139, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !17141)
!17139 = !DISubroutineType(types: !17140)
!17140 = !{!2606}
!17141 = !{!17142}
!17142 = !DILocalVariable(name: "t", scope: !17138, file: !2633, line: 41, type: !17143)
!17143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2610, size: 32)
!17144 = !DILocation(line: 41, column: 19, scope: !17138)
!17145 = !DILocation(line: 0, scope: !17138)
!17146 = !DILocation(line: 43, column: 9, scope: !17138)
!17147 = !DILocation(line: 43, column: 2, scope: !17138)
!17148 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !319, file: !319, line: 443, type: !17149, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !17151)
!17149 = !DISubroutineType(types: !17150)
!17150 = !{null, !17143, !17143}
!17151 = !{!17152, !17153, !17154}
!17152 = !DILocalVariable(name: "successor", arg: 1, scope: !17148, file: !319, line: 443, type: !17143)
!17153 = !DILocalVariable(name: "node", arg: 2, scope: !17148, file: !319, line: 443, type: !17143)
!17154 = !DILocalVariable(name: "prev", scope: !17148, file: !319, line: 445, type: !17155)
!17155 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !17143)
!17156 = !DILocation(line: 0, scope: !17148)
!17157 = !DILocation(line: 445, column: 39, scope: !17148)
!17158 = !DILocation(line: 447, column: 8, scope: !17148)
!17159 = !DILocation(line: 447, column: 13, scope: !17148)
!17160 = !DILocation(line: 448, column: 8, scope: !17148)
!17161 = !DILocation(line: 448, column: 13, scope: !17148)
!17162 = !DILocation(line: 449, column: 8, scope: !17148)
!17163 = !DILocation(line: 449, column: 13, scope: !17148)
!17164 = !DILocation(line: 450, column: 18, scope: !17148)
!17165 = !DILocation(line: 451, column: 1, scope: !17148)
!17166 = distinct !DISubprogram(name: "next", scope: !2633, file: !2633, line: 46, type: !17167, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !17169)
!17167 = !DISubroutineType(types: !17168)
!17168 = !{!2606, !2606}
!17169 = !{!17170, !17171}
!17170 = !DILocalVariable(name: "t", arg: 1, scope: !17166, file: !2633, line: 46, type: !2606)
!17171 = !DILocalVariable(name: "n", scope: !17166, file: !2633, line: 48, type: !17143)
!17172 = !DILocation(line: 0, scope: !17166)
!17173 = !DILocation(line: 48, column: 58, scope: !17166)
!17174 = !DILocation(line: 48, column: 19, scope: !17166)
!17175 = !DILocation(line: 50, column: 9, scope: !17166)
!17176 = !DILocation(line: 50, column: 2, scope: !17166)
!17177 = distinct !DISubprogram(name: "sys_dlist_append", scope: !319, file: !319, line: 404, type: !17178, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !17181)
!17178 = !DISubroutineType(types: !17179)
!17179 = !{null, !17180, !17143}
!17180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2638, size: 32)
!17181 = !{!17182, !17183, !17184}
!17182 = !DILocalVariable(name: "list", arg: 1, scope: !17177, file: !319, line: 404, type: !17180)
!17183 = !DILocalVariable(name: "node", arg: 2, scope: !17177, file: !319, line: 404, type: !17143)
!17184 = !DILocalVariable(name: "tail", scope: !17177, file: !319, line: 406, type: !17155)
!17185 = !DILocation(line: 0, scope: !17177)
!17186 = !DILocation(line: 406, column: 34, scope: !17177)
!17187 = !DILocation(line: 408, column: 8, scope: !17177)
!17188 = !DILocation(line: 408, column: 13, scope: !17177)
!17189 = !DILocation(line: 409, column: 8, scope: !17177)
!17190 = !DILocation(line: 409, column: 13, scope: !17177)
!17191 = !DILocation(line: 411, column: 8, scope: !17177)
!17192 = !DILocation(line: 411, column: 13, scope: !17177)
!17193 = !DILocation(line: 412, column: 13, scope: !17177)
!17194 = !DILocation(line: 413, column: 1, scope: !17177)
!17195 = distinct !DISubprogram(name: "next_timeout", scope: !2633, file: !2633, line: 67, type: !17132, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !17196)
!17196 = !{!17197, !17198, !17199}
!17197 = !DILocalVariable(name: "to", scope: !17195, file: !2633, line: 69, type: !2606)
!17198 = !DILocalVariable(name: "ticks_elapsed", scope: !17195, file: !2633, line: 70, type: !906)
!17199 = !DILocalVariable(name: "ret", scope: !17195, file: !2633, line: 71, type: !906)
!17200 = !DILocation(line: 69, column: 24, scope: !17195)
!17201 = !DILocation(line: 0, scope: !17195)
!17202 = !DILocation(line: 70, column: 26, scope: !17195)
!17203 = !DILocation(line: 73, column: 10, scope: !17204)
!17204 = distinct !DILexicalBlock(scope: !17195, file: !2633, line: 73, column: 6)
!17205 = !DILocation(line: 73, column: 19, scope: !17204)
!17206 = !DILocation(line: 74, column: 21, scope: !17204)
!17207 = !DILocation(line: 74, column: 30, scope: !17204)
!17208 = !DILocation(line: 74, column: 28, scope: !17204)
!17209 = !DILocation(line: 74, column: 45, scope: !17204)
!17210 = !DILocation(line: 73, column: 6, scope: !17195)
!17211 = !DILocation(line: 77, column: 9, scope: !17212)
!17212 = distinct !DILexicalBlock(scope: !17204, file: !2633, line: 76, column: 9)
!17213 = !DILocation(line: 0, scope: !17204)
!17214 = !DILocation(line: 81, column: 20, scope: !17215)
!17215 = distinct !DILexicalBlock(scope: !17195, file: !2633, line: 81, column: 6)
!17216 = !DILocation(line: 81, column: 6, scope: !17215)
!17217 = !DILocation(line: 81, column: 32, scope: !17215)
!17218 = !DILocation(line: 85, column: 2, scope: !17195)
!17219 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !319, file: !319, line: 341, type: !17220, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !17222)
!17220 = !DISubroutineType(types: !17221)
!17221 = !{!17143, !17180, !17143}
!17222 = !{!17223, !17224}
!17223 = !DILocalVariable(name: "list", arg: 1, scope: !17219, file: !319, line: 341, type: !17180)
!17224 = !DILocalVariable(name: "node", arg: 2, scope: !17219, file: !319, line: 342, type: !17143)
!17225 = !DILocation(line: 0, scope: !17219)
!17226 = !DILocation(line: 344, column: 15, scope: !17219)
!17227 = !DILocation(line: 344, column: 9, scope: !17219)
!17228 = !DILocation(line: 344, column: 26, scope: !17219)
!17229 = !DILocation(line: 344, column: 2, scope: !17219)
!17230 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !319, file: !319, line: 325, type: !17220, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !17231)
!17231 = !{!17232, !17233}
!17232 = !DILocalVariable(name: "list", arg: 1, scope: !17230, file: !319, line: 325, type: !17180)
!17233 = !DILocalVariable(name: "node", arg: 2, scope: !17230, file: !319, line: 326, type: !17143)
!17234 = !DILocation(line: 0, scope: !17230)
!17235 = !DILocation(line: 328, column: 24, scope: !17230)
!17236 = !DILocation(line: 328, column: 15, scope: !17230)
!17237 = !DILocation(line: 328, column: 9, scope: !17230)
!17238 = !DILocation(line: 328, column: 45, scope: !17230)
!17239 = !DILocation(line: 328, column: 2, scope: !17230)
!17240 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !319, file: !319, line: 294, type: !17241, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !17243)
!17241 = !DISubroutineType(types: !17242)
!17242 = !{!17143, !17180}
!17243 = !{!17244}
!17244 = !DILocalVariable(name: "list", arg: 1, scope: !17240, file: !319, line: 294, type: !17180)
!17245 = !DILocation(line: 0, scope: !17240)
!17246 = !DILocation(line: 296, column: 9, scope: !17240)
!17247 = !DILocation(line: 296, column: 2, scope: !17240)
!17248 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !319, file: !319, line: 266, type: !17249, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !17251)
!17249 = !DISubroutineType(types: !17250)
!17250 = !{!145, !17180}
!17251 = !{!17252}
!17252 = !DILocalVariable(name: "list", arg: 1, scope: !17248, file: !319, line: 266, type: !17180)
!17253 = !DILocation(line: 0, scope: !17248)
!17254 = !DILocation(line: 268, column: 15, scope: !17248)
!17255 = !DILocation(line: 268, column: 20, scope: !17248)
!17256 = !DILocation(line: 268, column: 2, scope: !17248)
!17257 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2633, file: !2633, line: 150, type: !17258, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !17260)
!17258 = !DISubroutineType(types: !17259)
!17259 = !{!107, !2606}
!17260 = !{!17261, !17262, !17263, !17265}
!17261 = !DILocalVariable(name: "to", arg: 1, scope: !17257, file: !2633, line: 150, type: !2606)
!17262 = !DILocalVariable(name: "ret", scope: !17257, file: !2633, line: 152, type: !107)
!17263 = !DILocalVariable(name: "__i", scope: !17264, file: !2633, line: 154, type: !16998)
!17264 = distinct !DILexicalBlock(scope: !17257, file: !2633, line: 154, column: 2)
!17265 = !DILocalVariable(name: "__key", scope: !17264, file: !2633, line: 154, type: !16998)
!17266 = !DILocation(line: 0, scope: !17257)
!17267 = !DILocation(line: 0, scope: !17264)
!17268 = !DILocation(line: 0, scope: !17026, inlinedAt: !17269)
!17269 = distinct !DILocation(line: 154, column: 2, scope: !17264)
!17270 = !DILocation(line: 55, column: 2, scope: !17035, inlinedAt: !17271)
!17271 = distinct !DILocation(line: 145, column: 10, scope: !17026, inlinedAt: !17269)
!17272 = !DILocation(line: 0, scope: !17035, inlinedAt: !17271)
!17273 = !DILocation(line: 148, column: 2, scope: !17043, inlinedAt: !17269)
!17274 = !DILocation(line: 148, column: 2, scope: !17044, inlinedAt: !17269)
!17275 = !DILocation(line: 148, column: 2, scope: !17047, inlinedAt: !17269)
!17276 = !DILocation(line: 160, column: 2, scope: !17026, inlinedAt: !17269)
!17277 = !DILocation(line: 155, column: 7, scope: !17278)
!17278 = distinct !DILexicalBlock(scope: !17279, file: !2633, line: 155, column: 7)
!17279 = distinct !DILexicalBlock(scope: !17280, file: !2633, line: 154, column: 24)
!17280 = distinct !DILexicalBlock(scope: !17264, file: !2633, line: 154, column: 2)
!17281 = !DILocation(line: 155, column: 7, scope: !17279)
!17282 = !DILocation(line: 156, column: 4, scope: !17283)
!17283 = distinct !DILexicalBlock(scope: !17278, file: !2633, line: 155, column: 39)
!17284 = !DILocation(line: 158, column: 3, scope: !17283)
!17285 = !DILocation(line: 0, scope: !17099, inlinedAt: !17286)
!17286 = distinct !DILocation(line: 154, column: 2, scope: !17280)
!17287 = !DILocation(line: 194, column: 2, scope: !17107, inlinedAt: !17286)
!17288 = !DILocation(line: 194, column: 2, scope: !17108, inlinedAt: !17286)
!17289 = !DILocation(line: 194, column: 2, scope: !17111, inlinedAt: !17286)
!17290 = !DILocation(line: 0, scope: !17113, inlinedAt: !17291)
!17291 = distinct !DILocation(line: 215, column: 2, scope: !17099, inlinedAt: !17286)
!17292 = !DILocation(line: 95, column: 2, scope: !17113, inlinedAt: !17291)
!17293 = !DILocation(line: 161, column: 2, scope: !17257)
!17294 = distinct !DISubprogram(name: "remove_timeout", scope: !2633, file: !2633, line: 53, type: !2627, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !17295)
!17295 = !{!17296}
!17296 = !DILocalVariable(name: "t", arg: 1, scope: !17294, file: !2633, line: 53, type: !2606)
!17297 = !DILocation(line: 0, scope: !17294)
!17298 = !DILocation(line: 55, column: 6, scope: !17299)
!17299 = distinct !DILexicalBlock(scope: !17294, file: !2633, line: 55, column: 6)
!17300 = !DILocation(line: 55, column: 14, scope: !17299)
!17301 = !DILocation(line: 55, column: 6, scope: !17294)
!17302 = !DILocation(line: 56, column: 25, scope: !17303)
!17303 = distinct !DILexicalBlock(scope: !17299, file: !2633, line: 55, column: 23)
!17304 = !DILocation(line: 56, column: 12, scope: !17303)
!17305 = !DILocation(line: 56, column: 19, scope: !17303)
!17306 = !DILocation(line: 57, column: 2, scope: !17303)
!17307 = !DILocation(line: 59, column: 23, scope: !17294)
!17308 = !DILocation(line: 59, column: 2, scope: !17294)
!17309 = !DILocation(line: 60, column: 1, scope: !17294)
!17310 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !319, file: !319, line: 496, type: !17311, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !17313)
!17311 = !DISubroutineType(types: !17312)
!17312 = !{null, !17143}
!17313 = !{!17314, !17315, !17316}
!17314 = !DILocalVariable(name: "node", arg: 1, scope: !17310, file: !319, line: 496, type: !17143)
!17315 = !DILocalVariable(name: "prev", scope: !17310, file: !319, line: 498, type: !17155)
!17316 = !DILocalVariable(name: "next", scope: !17310, file: !319, line: 499, type: !17155)
!17317 = !DILocation(line: 0, scope: !17310)
!17318 = !DILocation(line: 498, column: 34, scope: !17310)
!17319 = !DILocation(line: 499, column: 34, scope: !17310)
!17320 = !DILocation(line: 501, column: 8, scope: !17310)
!17321 = !DILocation(line: 501, column: 13, scope: !17310)
!17322 = !DILocation(line: 502, column: 8, scope: !17310)
!17323 = !DILocation(line: 502, column: 13, scope: !17310)
!17324 = !DILocation(line: 503, column: 2, scope: !17310)
!17325 = !DILocation(line: 504, column: 1, scope: !17310)
!17326 = distinct !DISubprogram(name: "sys_dnode_init", scope: !319, file: !319, line: 211, type: !17311, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !17327)
!17327 = !{!17328}
!17328 = !DILocalVariable(name: "node", arg: 1, scope: !17326, file: !319, line: 211, type: !17143)
!17329 = !DILocation(line: 0, scope: !17326)
!17330 = !DILocation(line: 213, column: 8, scope: !17326)
!17331 = !DILocation(line: 213, column: 13, scope: !17326)
!17332 = !DILocation(line: 214, column: 8, scope: !17326)
!17333 = !DILocation(line: 214, column: 13, scope: !17326)
!17334 = !DILocation(line: 215, column: 1, scope: !17326)
!17335 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2633, file: !2633, line: 183, type: !17336, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !17340)
!17336 = !DISubroutineType(types: !17337)
!17337 = !{!564, !17338}
!17338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17339, size: 32)
!17339 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2607)
!17340 = !{!17341, !17342, !17343, !17345}
!17341 = !DILocalVariable(name: "timeout", arg: 1, scope: !17335, file: !2633, line: 183, type: !17338)
!17342 = !DILocalVariable(name: "ticks", scope: !17335, file: !2633, line: 185, type: !564)
!17343 = !DILocalVariable(name: "__i", scope: !17344, file: !2633, line: 187, type: !16998)
!17344 = distinct !DILexicalBlock(scope: !17335, file: !2633, line: 187, column: 2)
!17345 = !DILocalVariable(name: "__key", scope: !17344, file: !2633, line: 187, type: !16998)
!17346 = !DILocation(line: 0, scope: !17335)
!17347 = !DILocation(line: 0, scope: !17344)
!17348 = !DILocation(line: 0, scope: !17026, inlinedAt: !17349)
!17349 = distinct !DILocation(line: 187, column: 2, scope: !17344)
!17350 = !DILocation(line: 55, column: 2, scope: !17035, inlinedAt: !17351)
!17351 = distinct !DILocation(line: 145, column: 10, scope: !17026, inlinedAt: !17349)
!17352 = !DILocation(line: 0, scope: !17035, inlinedAt: !17351)
!17353 = !DILocation(line: 148, column: 2, scope: !17043, inlinedAt: !17349)
!17354 = !DILocation(line: 148, column: 2, scope: !17044, inlinedAt: !17349)
!17355 = !DILocation(line: 148, column: 2, scope: !17047, inlinedAt: !17349)
!17356 = !DILocation(line: 160, column: 2, scope: !17026, inlinedAt: !17349)
!17357 = !DILocation(line: 188, column: 11, scope: !17358)
!17358 = distinct !DILexicalBlock(scope: !17359, file: !2633, line: 187, column: 24)
!17359 = distinct !DILexicalBlock(scope: !17344, file: !2633, line: 187, column: 2)
!17360 = !DILocation(line: 0, scope: !17099, inlinedAt: !17361)
!17361 = distinct !DILocation(line: 187, column: 2, scope: !17359)
!17362 = !DILocation(line: 194, column: 2, scope: !17107, inlinedAt: !17361)
!17363 = !DILocation(line: 194, column: 2, scope: !17108, inlinedAt: !17361)
!17364 = !DILocation(line: 194, column: 2, scope: !17111, inlinedAt: !17361)
!17365 = !DILocation(line: 0, scope: !17113, inlinedAt: !17366)
!17366 = distinct !DILocation(line: 215, column: 2, scope: !17099, inlinedAt: !17361)
!17367 = !DILocation(line: 95, column: 2, scope: !17113, inlinedAt: !17366)
!17368 = !DILocation(line: 191, column: 2, scope: !17335)
!17369 = distinct !DISubprogram(name: "timeout_rem", scope: !2633, file: !2633, line: 165, type: !17336, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !17370)
!17370 = !{!17371, !17372, !17373}
!17371 = !DILocalVariable(name: "timeout", arg: 1, scope: !17369, file: !2633, line: 165, type: !17338)
!17372 = !DILocalVariable(name: "ticks", scope: !17369, file: !2633, line: 167, type: !564)
!17373 = !DILocalVariable(name: "t", scope: !17374, file: !2633, line: 173, type: !2606)
!17374 = distinct !DILexicalBlock(scope: !17369, file: !2633, line: 173, column: 2)
!17375 = !DILocation(line: 0, scope: !17369)
!17376 = !DILocation(line: 169, column: 6, scope: !17377)
!17377 = distinct !DILexicalBlock(scope: !17369, file: !2633, line: 169, column: 6)
!17378 = !DILocation(line: 169, column: 6, scope: !17369)
!17379 = !DILocation(line: 173, column: 28, scope: !17374)
!17380 = !DILocation(line: 0, scope: !17374)
!17381 = !DILocation(line: 173, column: 39, scope: !17382)
!17382 = distinct !DILexicalBlock(scope: !17374, file: !2633, line: 173, column: 2)
!17383 = !DILocation(line: 173, column: 2, scope: !17374)
!17384 = !DILocation(line: 174, column: 15, scope: !17385)
!17385 = distinct !DILexicalBlock(scope: !17382, file: !2633, line: 173, column: 61)
!17386 = !DILocation(line: 174, column: 9, scope: !17385)
!17387 = !DILocation(line: 175, column: 15, scope: !17388)
!17388 = distinct !DILexicalBlock(scope: !17385, file: !2633, line: 175, column: 7)
!17389 = !DILocation(line: 175, column: 7, scope: !17385)
!17390 = !DILocation(line: 173, column: 52, scope: !17382)
!17391 = distinct !{!17391, !17383, !17392}
!17392 = !DILocation(line: 178, column: 2, scope: !17374)
!17393 = !DILocation(line: 180, column: 17, scope: !17369)
!17394 = !DILocation(line: 180, column: 15, scope: !17369)
!17395 = !DILocation(line: 180, column: 2, scope: !17369)
!17396 = !DILocation(line: 181, column: 1, scope: !17369)
!17397 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14213, file: !14213, line: 35, type: !17398, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !17400)
!17398 = !DISubroutineType(types: !17399)
!17399 = !{!145, !17338}
!17400 = !{!17401}
!17401 = !DILocalVariable(name: "to", arg: 1, scope: !17397, file: !14213, line: 35, type: !17338)
!17402 = !DILocation(line: 0, scope: !17397)
!17403 = !DILocation(line: 37, column: 35, scope: !17397)
!17404 = !DILocation(line: 37, column: 10, scope: !17397)
!17405 = !DILocation(line: 37, column: 9, scope: !17397)
!17406 = !DILocation(line: 37, column: 2, scope: !17397)
!17407 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2633, file: !2633, line: 194, type: !17336, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !17408)
!17408 = !{!17409, !17410, !17411, !17413}
!17409 = !DILocalVariable(name: "timeout", arg: 1, scope: !17407, file: !2633, line: 194, type: !17338)
!17410 = !DILocalVariable(name: "ticks", scope: !17407, file: !2633, line: 196, type: !564)
!17411 = !DILocalVariable(name: "__i", scope: !17412, file: !2633, line: 198, type: !16998)
!17412 = distinct !DILexicalBlock(scope: !17407, file: !2633, line: 198, column: 2)
!17413 = !DILocalVariable(name: "__key", scope: !17412, file: !2633, line: 198, type: !16998)
!17414 = !DILocation(line: 0, scope: !17407)
!17415 = !DILocation(line: 0, scope: !17412)
!17416 = !DILocation(line: 0, scope: !17026, inlinedAt: !17417)
!17417 = distinct !DILocation(line: 198, column: 2, scope: !17412)
!17418 = !DILocation(line: 55, column: 2, scope: !17035, inlinedAt: !17419)
!17419 = distinct !DILocation(line: 145, column: 10, scope: !17026, inlinedAt: !17417)
!17420 = !DILocation(line: 0, scope: !17035, inlinedAt: !17419)
!17421 = !DILocation(line: 148, column: 2, scope: !17043, inlinedAt: !17417)
!17422 = !DILocation(line: 148, column: 2, scope: !17044, inlinedAt: !17417)
!17423 = !DILocation(line: 148, column: 2, scope: !17047, inlinedAt: !17417)
!17424 = !DILocation(line: 160, column: 2, scope: !17026, inlinedAt: !17417)
!17425 = !DILocation(line: 199, column: 11, scope: !17426)
!17426 = distinct !DILexicalBlock(scope: !17427, file: !2633, line: 198, column: 24)
!17427 = distinct !DILexicalBlock(scope: !17412, file: !2633, line: 198, column: 2)
!17428 = !DILocation(line: 199, column: 23, scope: !17426)
!17429 = !DILocation(line: 0, scope: !17099, inlinedAt: !17430)
!17430 = distinct !DILocation(line: 198, column: 2, scope: !17427)
!17431 = !DILocation(line: 194, column: 2, scope: !17107, inlinedAt: !17430)
!17432 = !DILocation(line: 194, column: 2, scope: !17108, inlinedAt: !17430)
!17433 = !DILocation(line: 194, column: 2, scope: !17111, inlinedAt: !17430)
!17434 = !DILocation(line: 0, scope: !17113, inlinedAt: !17435)
!17435 = distinct !DILocation(line: 215, column: 2, scope: !17099, inlinedAt: !17430)
!17436 = !DILocation(line: 95, column: 2, scope: !17113, inlinedAt: !17435)
!17437 = !DILocation(line: 199, column: 21, scope: !17426)
!17438 = !DILocation(line: 202, column: 2, scope: !17407)
!17439 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2633, file: !2633, line: 205, type: !17132, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !17440)
!17440 = !{!17441, !17442, !17444}
!17441 = !DILocalVariable(name: "ret", scope: !17439, file: !2633, line: 207, type: !906)
!17442 = !DILocalVariable(name: "__i", scope: !17443, file: !2633, line: 209, type: !16998)
!17443 = distinct !DILexicalBlock(scope: !17439, file: !2633, line: 209, column: 2)
!17444 = !DILocalVariable(name: "__key", scope: !17443, file: !2633, line: 209, type: !16998)
!17445 = !DILocation(line: 0, scope: !17439)
!17446 = !DILocation(line: 0, scope: !17443)
!17447 = !DILocation(line: 0, scope: !17026, inlinedAt: !17448)
!17448 = distinct !DILocation(line: 209, column: 2, scope: !17443)
!17449 = !DILocation(line: 55, column: 2, scope: !17035, inlinedAt: !17450)
!17450 = distinct !DILocation(line: 145, column: 10, scope: !17026, inlinedAt: !17448)
!17451 = !DILocation(line: 0, scope: !17035, inlinedAt: !17450)
!17452 = !DILocation(line: 148, column: 2, scope: !17043, inlinedAt: !17448)
!17453 = !DILocation(line: 148, column: 2, scope: !17044, inlinedAt: !17448)
!17454 = !DILocation(line: 148, column: 2, scope: !17047, inlinedAt: !17448)
!17455 = !DILocation(line: 160, column: 2, scope: !17026, inlinedAt: !17448)
!17456 = !DILocation(line: 210, column: 9, scope: !17457)
!17457 = distinct !DILexicalBlock(scope: !17458, file: !2633, line: 209, column: 24)
!17458 = distinct !DILexicalBlock(scope: !17443, file: !2633, line: 209, column: 2)
!17459 = !DILocation(line: 0, scope: !17099, inlinedAt: !17460)
!17460 = distinct !DILocation(line: 209, column: 2, scope: !17458)
!17461 = !DILocation(line: 194, column: 2, scope: !17107, inlinedAt: !17460)
!17462 = !DILocation(line: 194, column: 2, scope: !17108, inlinedAt: !17460)
!17463 = !DILocation(line: 194, column: 2, scope: !17111, inlinedAt: !17460)
!17464 = !DILocation(line: 0, scope: !17113, inlinedAt: !17465)
!17465 = distinct !DILocation(line: 215, column: 2, scope: !17099, inlinedAt: !17460)
!17466 = !DILocation(line: 95, column: 2, scope: !17113, inlinedAt: !17465)
!17467 = !DILocation(line: 212, column: 2, scope: !17439)
!17468 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2633, file: !2633, line: 215, type: !11667, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !17469)
!17469 = !{!17470, !17471, !17472, !17474, !17475, !17478, !17479}
!17470 = !DILocalVariable(name: "ticks", arg: 1, scope: !17468, file: !2633, line: 215, type: !906)
!17471 = !DILocalVariable(name: "is_idle", arg: 2, scope: !17468, file: !2633, line: 215, type: !145)
!17472 = !DILocalVariable(name: "__i", scope: !17473, file: !2633, line: 217, type: !16998)
!17473 = distinct !DILexicalBlock(scope: !17468, file: !2633, line: 217, column: 2)
!17474 = !DILocalVariable(name: "__key", scope: !17473, file: !2633, line: 217, type: !16998)
!17475 = !DILocalVariable(name: "next_to", scope: !17476, file: !2633, line: 218, type: !107)
!17476 = distinct !DILexicalBlock(scope: !17477, file: !2633, line: 217, column: 24)
!17477 = distinct !DILexicalBlock(scope: !17473, file: !2633, line: 217, column: 2)
!17478 = !DILocalVariable(name: "sooner", scope: !17476, file: !2633, line: 219, type: !145)
!17479 = !DILocalVariable(name: "imminent", scope: !17476, file: !2633, line: 221, type: !145)
!17480 = !DILocation(line: 0, scope: !17468)
!17481 = !DILocation(line: 0, scope: !17473)
!17482 = !DILocation(line: 0, scope: !17026, inlinedAt: !17483)
!17483 = distinct !DILocation(line: 217, column: 2, scope: !17473)
!17484 = !DILocation(line: 55, column: 2, scope: !17035, inlinedAt: !17485)
!17485 = distinct !DILocation(line: 145, column: 10, scope: !17026, inlinedAt: !17483)
!17486 = !DILocation(line: 0, scope: !17035, inlinedAt: !17485)
!17487 = !DILocation(line: 148, column: 2, scope: !17043, inlinedAt: !17483)
!17488 = !DILocation(line: 148, column: 2, scope: !17044, inlinedAt: !17483)
!17489 = !DILocation(line: 148, column: 2, scope: !17047, inlinedAt: !17483)
!17490 = !DILocation(line: 160, column: 2, scope: !17026, inlinedAt: !17483)
!17491 = !DILocation(line: 218, column: 17, scope: !17476)
!17492 = !DILocation(line: 0, scope: !17476)
!17493 = !DILocation(line: 221, column: 27, scope: !17476)
!17494 = !DILocation(line: 233, column: 17, scope: !17495)
!17495 = distinct !DILexicalBlock(scope: !17476, file: !2633, line: 233, column: 7)
!17496 = !DILocation(line: 234, column: 26, scope: !17497)
!17497 = distinct !DILexicalBlock(scope: !17495, file: !2633, line: 233, column: 56)
!17498 = !DILocation(line: 234, column: 4, scope: !17497)
!17499 = !DILocation(line: 235, column: 3, scope: !17497)
!17500 = !DILocation(line: 0, scope: !17099, inlinedAt: !17501)
!17501 = distinct !DILocation(line: 217, column: 2, scope: !17477)
!17502 = !DILocation(line: 194, column: 2, scope: !17107, inlinedAt: !17501)
!17503 = !DILocation(line: 194, column: 2, scope: !17108, inlinedAt: !17501)
!17504 = !DILocation(line: 194, column: 2, scope: !17111, inlinedAt: !17501)
!17505 = !DILocation(line: 0, scope: !17113, inlinedAt: !17506)
!17506 = distinct !DILocation(line: 215, column: 2, scope: !17099, inlinedAt: !17501)
!17507 = !DILocation(line: 95, column: 2, scope: !17113, inlinedAt: !17506)
!17508 = !DILocation(line: 237, column: 1, scope: !17468)
!17509 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2633, file: !2633, line: 239, type: !17510, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !17512)
!17510 = !DISubroutineType(types: !17511)
!17511 = !{null, !906}
!17512 = !{!17513, !17514, !17515, !17517}
!17513 = !DILocalVariable(name: "ticks", arg: 1, scope: !17509, file: !2633, line: 239, type: !906)
!17514 = !DILocalVariable(name: "key", scope: !17509, file: !2633, line: 245, type: !16998)
!17515 = !DILocalVariable(name: "t", scope: !17516, file: !2633, line: 262, type: !2606)
!17516 = distinct !DILexicalBlock(scope: !17509, file: !2633, line: 261, column: 67)
!17517 = !DILocalVariable(name: "dt", scope: !17516, file: !2633, line: 263, type: !107)
!17518 = !DILocation(line: 0, scope: !17509)
!17519 = !DILocation(line: 242, column: 2, scope: !17509)
!17520 = !DILocation(line: 0, scope: !17026, inlinedAt: !17521)
!17521 = distinct !DILocation(line: 245, column: 25, scope: !17509)
!17522 = !DILocation(line: 55, column: 2, scope: !17035, inlinedAt: !17523)
!17523 = distinct !DILocation(line: 145, column: 10, scope: !17026, inlinedAt: !17521)
!17524 = !DILocation(line: 0, scope: !17035, inlinedAt: !17523)
!17525 = !DILocation(line: 148, column: 2, scope: !17043, inlinedAt: !17521)
!17526 = !DILocation(line: 148, column: 2, scope: !17044, inlinedAt: !17521)
!17527 = !DILocation(line: 148, column: 2, scope: !17047, inlinedAt: !17521)
!17528 = !DILocation(line: 160, column: 2, scope: !17026, inlinedAt: !17521)
!17529 = !DILocation(line: 261, column: 9, scope: !17509)
!17530 = !DILocation(line: 261, column: 17, scope: !17509)
!17531 = !DILocation(line: 261, column: 25, scope: !17509)
!17532 = !DILocation(line: 261, column: 37, scope: !17509)
!17533 = !DILocation(line: 261, column: 47, scope: !17509)
!17534 = !DILocation(line: 261, column: 44, scope: !17509)
!17535 = !DILocation(line: 261, column: 2, scope: !17509)
!17536 = !DILocation(line: 0, scope: !17516)
!17537 = !DILocation(line: 263, column: 12, scope: !17516)
!17538 = !DILocation(line: 265, column: 16, scope: !17516)
!17539 = !DILocation(line: 265, column: 13, scope: !17516)
!17540 = !DILocation(line: 266, column: 13, scope: !17516)
!17541 = !DILocation(line: 267, column: 3, scope: !17516)
!17542 = !DILocation(line: 0, scope: !17099, inlinedAt: !17543)
!17543 = distinct !DILocation(line: 269, column: 3, scope: !17516)
!17544 = !DILocation(line: 194, column: 2, scope: !17107, inlinedAt: !17543)
!17545 = !DILocation(line: 194, column: 2, scope: !17108, inlinedAt: !17543)
!17546 = !DILocation(line: 194, column: 2, scope: !17111, inlinedAt: !17543)
!17547 = !DILocation(line: 0, scope: !17113, inlinedAt: !17548)
!17548 = distinct !DILocation(line: 215, column: 2, scope: !17099, inlinedAt: !17543)
!17549 = !DILocation(line: 95, column: 2, scope: !17113, inlinedAt: !17548)
!17550 = !DILocation(line: 270, column: 6, scope: !17516)
!17551 = !DILocation(line: 270, column: 3, scope: !17516)
!17552 = !DILocation(line: 0, scope: !17026, inlinedAt: !17553)
!17553 = distinct !DILocation(line: 271, column: 9, scope: !17516)
!17554 = !DILocation(line: 55, column: 2, scope: !17035, inlinedAt: !17555)
!17555 = distinct !DILocation(line: 145, column: 10, scope: !17026, inlinedAt: !17553)
!17556 = !DILocation(line: 0, scope: !17035, inlinedAt: !17555)
!17557 = !DILocation(line: 148, column: 2, scope: !17043, inlinedAt: !17553)
!17558 = !DILocation(line: 148, column: 2, scope: !17044, inlinedAt: !17553)
!17559 = !DILocation(line: 148, column: 2, scope: !17047, inlinedAt: !17553)
!17560 = !DILocation(line: 160, column: 2, scope: !17026, inlinedAt: !17553)
!17561 = !DILocation(line: 272, column: 22, scope: !17516)
!17562 = distinct !{!17562, !17535, !17563}
!17563 = !DILocation(line: 273, column: 2, scope: !17509)
!17564 = !DILocation(line: 276, column: 19, scope: !17565)
!17565 = distinct !DILexicalBlock(scope: !17566, file: !2633, line: 275, column: 23)
!17566 = distinct !DILexicalBlock(scope: !17509, file: !2633, line: 275, column: 6)
!17567 = !DILocation(line: 277, column: 2, scope: !17565)
!17568 = !DILocation(line: 279, column: 15, scope: !17509)
!17569 = !DILocation(line: 279, column: 12, scope: !17509)
!17570 = !DILocation(line: 280, column: 21, scope: !17509)
!17571 = !DILocation(line: 282, column: 24, scope: !17509)
!17572 = !DILocation(line: 282, column: 2, scope: !17509)
!17573 = !DILocation(line: 0, scope: !17099, inlinedAt: !17574)
!17574 = distinct !DILocation(line: 284, column: 2, scope: !17509)
!17575 = !DILocation(line: 194, column: 2, scope: !17107, inlinedAt: !17574)
!17576 = !DILocation(line: 194, column: 2, scope: !17108, inlinedAt: !17574)
!17577 = !DILocation(line: 194, column: 2, scope: !17111, inlinedAt: !17574)
!17578 = !DILocation(line: 0, scope: !17113, inlinedAt: !17579)
!17579 = distinct !DILocation(line: 215, column: 2, scope: !17099, inlinedAt: !17574)
!17580 = !DILocation(line: 95, column: 2, scope: !17113, inlinedAt: !17579)
!17581 = !DILocation(line: 285, column: 1, scope: !17509)
!17582 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2633, file: !2633, line: 287, type: !17583, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !17585)
!17583 = !DISubroutineType(types: !17584)
!17584 = !{!376}
!17585 = !{!17586, !17587, !17589}
!17586 = !DILocalVariable(name: "t", scope: !17582, file: !2633, line: 289, type: !566)
!17587 = !DILocalVariable(name: "__i", scope: !17588, file: !2633, line: 291, type: !16998)
!17588 = distinct !DILexicalBlock(scope: !17582, file: !2633, line: 291, column: 2)
!17589 = !DILocalVariable(name: "__key", scope: !17588, file: !2633, line: 291, type: !16998)
!17590 = !DILocation(line: 0, scope: !17582)
!17591 = !DILocation(line: 0, scope: !17588)
!17592 = !DILocation(line: 0, scope: !17026, inlinedAt: !17593)
!17593 = distinct !DILocation(line: 291, column: 2, scope: !17588)
!17594 = !DILocation(line: 55, column: 2, scope: !17035, inlinedAt: !17595)
!17595 = distinct !DILocation(line: 145, column: 10, scope: !17026, inlinedAt: !17593)
!17596 = !DILocation(line: 0, scope: !17035, inlinedAt: !17595)
!17597 = !DILocation(line: 148, column: 2, scope: !17043, inlinedAt: !17593)
!17598 = !DILocation(line: 148, column: 2, scope: !17044, inlinedAt: !17593)
!17599 = !DILocation(line: 148, column: 2, scope: !17047, inlinedAt: !17593)
!17600 = !DILocation(line: 160, column: 2, scope: !17026, inlinedAt: !17593)
!17601 = !DILocation(line: 292, column: 7, scope: !17602)
!17602 = distinct !DILexicalBlock(scope: !17603, file: !2633, line: 291, column: 24)
!17603 = distinct !DILexicalBlock(scope: !17588, file: !2633, line: 291, column: 2)
!17604 = !DILocation(line: 292, column: 19, scope: !17602)
!17605 = !DILocation(line: 0, scope: !17099, inlinedAt: !17606)
!17606 = distinct !DILocation(line: 291, column: 2, scope: !17603)
!17607 = !DILocation(line: 194, column: 2, scope: !17107, inlinedAt: !17606)
!17608 = !DILocation(line: 194, column: 2, scope: !17108, inlinedAt: !17606)
!17609 = !DILocation(line: 194, column: 2, scope: !17111, inlinedAt: !17606)
!17610 = !DILocation(line: 0, scope: !17113, inlinedAt: !17611)
!17611 = distinct !DILocation(line: 215, column: 2, scope: !17099, inlinedAt: !17606)
!17612 = !DILocation(line: 95, column: 2, scope: !17113, inlinedAt: !17611)
!17613 = !DILocation(line: 292, column: 17, scope: !17602)
!17614 = !DILocation(line: 294, column: 2, scope: !17582)
!17615 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2633, file: !2633, line: 297, type: !6481, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !2296)
!17616 = !DILocation(line: 300, column: 19, scope: !17615)
!17617 = !DILocation(line: 300, column: 9, scope: !17615)
!17618 = !DILocation(line: 300, column: 2, scope: !17615)
!17619 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2633, file: !2633, line: 306, type: !17583, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !2296)
!17620 = !DILocation(line: 308, column: 9, scope: !17619)
!17621 = !DILocation(line: 308, column: 2, scope: !17619)
!17622 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2633, file: !2633, line: 319, type: !6491, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !17623)
!17623 = !{!17624, !17625, !17626, !17627}
!17624 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !17622, file: !2633, line: 319, type: !152)
!17625 = !DILocalVariable(name: "start_cycles", scope: !17622, file: !2633, line: 328, type: !152)
!17626 = !DILocalVariable(name: "cycles_to_wait", scope: !17622, file: !2633, line: 331, type: !152)
!17627 = !DILocalVariable(name: "current_cycles", scope: !17628, file: !2633, line: 338, type: !152)
!17628 = distinct !DILexicalBlock(scope: !17629, file: !2633, line: 337, column: 11)
!17629 = distinct !DILexicalBlock(scope: !17630, file: !2633, line: 337, column: 2)
!17630 = distinct !DILexicalBlock(scope: !17622, file: !2633, line: 337, column: 2)
!17631 = !DILocation(line: 0, scope: !17622)
!17632 = !DILocation(line: 322, column: 19, scope: !17633)
!17633 = distinct !DILexicalBlock(scope: !17622, file: !2633, line: 322, column: 6)
!17634 = !DILocation(line: 322, column: 6, scope: !17622)
!17635 = !DILocation(line: 328, column: 26, scope: !17622)
!17636 = !DILocation(line: 333, column: 43, scope: !17622)
!17637 = !DILocation(line: 337, column: 2, scope: !17622)
!17638 = !DILocation(line: 338, column: 29, scope: !17628)
!17639 = !DILocation(line: 0, scope: !17628)
!17640 = !DILocation(line: 341, column: 23, scope: !17641)
!17641 = distinct !DILexicalBlock(scope: !17628, file: !2633, line: 341, column: 7)
!17642 = !DILocation(line: 341, column: 39, scope: !17641)
!17643 = !DILocation(line: 349, column: 1, scope: !17622)
!17644 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !406, file: !406, line: 1675, type: !6481, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !2296)
!17645 = !DILocation(line: 1677, column: 9, scope: !17644)
!17646 = !DILocation(line: 1677, column: 2, scope: !17644)
!17647 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !8894, file: !8894, line: 24, type: !6481, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !2296)
!17648 = !DILocation(line: 26, column: 9, scope: !17647)
!17649 = !DILocation(line: 26, column: 2, scope: !17647)
!17650 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2633, file: !2633, line: 364, type: !17651, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !17653)
!17651 = !DISubroutineType(types: !17652)
!17652 = !{!566, !16988}
!17653 = !{!17654, !17655}
!17654 = !DILocalVariable(name: "timeout", arg: 1, scope: !17650, file: !2633, line: 364, type: !16988)
!17655 = !DILocalVariable(name: "dt", scope: !17650, file: !2633, line: 366, type: !564)
!17656 = !DILocation(line: 0, scope: !17650)
!17657 = !DILocation(line: 368, column: 6, scope: !17650)
!17658 = !DILocation(line: 371, column: 10, scope: !17659)
!17659 = distinct !DILexicalBlock(scope: !17660, file: !2633, line: 370, column: 47)
!17660 = distinct !DILexicalBlock(scope: !17661, file: !2633, line: 370, column: 13)
!17661 = distinct !DILexicalBlock(scope: !17650, file: !2633, line: 368, column: 6)
!17662 = !DILocation(line: 371, column: 3, scope: !17659)
!17663 = !DILocation(line: 376, column: 58, scope: !17664)
!17664 = distinct !DILexicalBlock(scope: !17665, file: !2633, line: 376, column: 7)
!17665 = distinct !DILexicalBlock(scope: !17660, file: !2633, line: 372, column: 9)
!17666 = !DILocation(line: 376, column: 7, scope: !17665)
!17667 = !DILocation(line: 376, column: 43, scope: !17664)
!17668 = !DILocation(line: 377, column: 4, scope: !17669)
!17669 = distinct !DILexicalBlock(scope: !17664, file: !2633, line: 376, column: 64)
!17670 = !DILocation(line: 379, column: 10, scope: !17665)
!17671 = !DILocation(line: 379, column: 33, scope: !17665)
!17672 = !DILocation(line: 379, column: 31, scope: !17665)
!17673 = !DILocation(line: 379, column: 3, scope: !17665)
!17674 = !DILocation(line: 0, scope: !17661)
!17675 = !DILocation(line: 381, column: 1, scope: !17650)
!17676 = distinct !DISubprogram(name: "boot_banner", scope: !17677, file: !17677, line: 26, type: !3227, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3213, retainedNodes: !2296)
!17677 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17678 = !DILocation(line: 34, column: 2, scope: !17676)
!17679 = !DILocation(line: 36, column: 1, scope: !17676)
